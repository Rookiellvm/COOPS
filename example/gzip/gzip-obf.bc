; ModuleID = './input/164.zip.bc'
source_filename = "llvm-link"
target datalayout = "e-m:x-p:32:32-i64:64-f80:32-n8:16:32-a:0:32-S32"
target triple = "i686-pc-windows-msvc16.0.0"

%struct.config = type { i16, i16, i16, i16 }
%struct.option = type { i8*, i32, i32*, i32 }
%struct.stat = type { i32, i16, i16, i16, i16, i16, i32, i32, i64, i64, i64 }
%struct.spec_fd_t = type { i32, i32, i32, i8* }
%struct.ct_data = type { %union.anon.5, %union.anon.5 }
%union.anon.5 = type { i16 }
%struct.tree_desc = type { %struct.ct_data*, %struct.ct_data*, i32*, i32, i32, i32, i32 }
%Struct.RetValue = type <{}>
%Struct.RetValue.0 = type <{}>
%Struct.RetValue.1 = type <{ i8** }>
%Struct.RetValue.2 = type <{}>
%Struct.RetValue.3 = type <{ i32*, i32*, i32* }>
%Struct.RetValue.4 = type <{ i32*, i32*, i32* }>
%Struct.RetValue.5 = type <{}>
%Struct.RetValue.6 = type <{ i32* }>
%Struct.RetValue.7 = type <{ i8***, i8***, i8** }>
%Struct.RetValue.8 = type <{}>
%Struct.RetValue.9 = type <{ i32*, i32* }>
%Struct.RetValue.10 = type <{ i32* }>
%Struct.RetValue.11 = type <{ i32*, i32*, i32*, i32*, i32* }>
%Struct.RetValue.12 = type <{ i32* }>
%Struct.RetValue.13 = type <{ i32* }>
%Struct.RetValue.14 = type <{ i32*, i32* }>
%Struct.RetValue.15 = type <{ i32* }>
%Struct.RetValue.16 = type <{ i32* }>
%Struct.RetValue.17 = type <{ i32*, i32* }>
%Struct.RetValue.18 = type <{}>
%Struct.RetValue.19 = type <{ i32* }>
%Struct.RetValue.20 = type <{ i32*, i32* }>
%Struct.RetValue.21 = type <{ i32*, i32* }>
%Struct.RetValue.22 = type <{ i32*, i16*, i32* }>
%Struct.RetValue.23 = type <{ i32* }>
%Struct.RetValue.24 = type <{}>
%Struct.RetValue.25 = type <{ i32*, i32* }>
%Struct.RetValue.26 = type <{ i32*, i32*, i32* }>
%Struct.RetValue.27 = type <{ i32*, i32*, i32* }>
%Struct.RetValue.28 = type <{ i32* }>
%Struct.RetValue.29 = type <{}>
%Struct.RetValue.30 = type <{ i32* }>
%Struct.RetValue.31 = type <{ i32*, i32*, i32* }>
%Struct.RetValue.32 = type <{}>
%Struct.RetValue.33 = type <{ i32*, i32*, i32* }>
%Struct.RetValue.34 = type <{ i32*, i32* }>
%Struct.RetValue.35 = type <{ i32* }>
%Struct.RetValue.36 = type <{ i32* }>
%Struct.RetValue.37 = type <{ i32*, i8** }>
%Struct.RetValue.38 = type <{}>
%Struct.RetValue.39 = type <{ i32*, i32* }>
%Struct.RetValue.40 = type <{ i32*, i32*, i8** }>
%Struct.RetValue.41 = type <{ i32*, i32*, i32* }>
%Struct.RetValue.42 = type <{ i8** }>
%Struct.RetValue.43 = type <{ i8** }>
%Struct.RetValue.44 = type <{ i32* }>
%Struct.RetValue.45 = type <{}>
%struct._iobuf = type { i8*, i32, i8*, i32, i32, i32, i32, i8* }
%struct.huft = type { i8, i8, %union.anon }
%union.anon = type { %struct.huft* }

$"??_C@_0P@FAMONJE@bad?5pack?5level?$AA@" = comdat any

$"??_C@_0BA@DMNGMDNL@POSIXLY_CORRECT?$AA@" = comdat any

$"??_C@_02BAABKJLB@?9?9?$AA@" = comdat any

$"??_C@_0BO@HAHAPHIK@?$CFs?3?5option?5?$GA?$CFs?8?5is?5ambiguous?6?$AA@" = comdat any

$"??_C@_0CN@JOLJOADE@?$CFs?3?5option?5?$GA?9?9?$CFs?8?5doesn?8t?5allow?5@" = comdat any

$"??_C@_0CN@CNGCPJCC@?$CFs?3?5option?5?$GA?$CFc?$CFs?8?5doesn?8t?5allow?5@" = comdat any

$"??_C@_0CG@PLJDJCIA@?$CFs?3?5option?5?$GA?$CFs?8?5requires?5an?5argu@" = comdat any

$"??_C@_0CA@EHMECPBA@?$CFs?3?5unrecognized?5option?5?$GA?9?9?$CFs?8?6?$AA@" = comdat any

$"??_C@_0CA@EBHJAKGL@?$CFs?3?5unrecognized?5option?5?$GA?$CFc?$CFs?8?6?$AA@" = comdat any

$"??_C@_00CNPNBAHC@?$AA@" = comdat any

$"??_C@_0BK@NLCMBLAE@?$CFs?3?5illegal?5option?5?9?9?5?$CFc?6?$AA@" = comdat any

$"??_C@_0CH@FFGNJLF@?$CFs?3?5option?5requires?5an?5argument?5@" = comdat any

$"??_C@_05OJENGABA@ascii?$AA@" = comdat any

$"??_C@_09FJNDCOGJ@to?9stdout?$AA@" = comdat any

$"??_C@_06DJDOIFHB@stdout?$AA@" = comdat any

$"??_C@_0L@BDJCADKN@decompress?$AA@" = comdat any

$"??_C@_0L@IEAKODFB@uncompress?$AA@" = comdat any

$"??_C@_05BINPNAAL@force?$AA@" = comdat any

$"??_C@_04PCJFHION@help?$AA@" = comdat any

$"??_C@_04DONFEANM@list?$AA@" = comdat any

$"??_C@_07EJMBNAEG@license?$AA@" = comdat any

$"??_C@_07GEGNCGCA@no?9name?$AA@" = comdat any

$"??_C@_04MEMAJGDJ@name?$AA@" = comdat any

$"??_C@_05PMBAOCDH@quiet?$AA@" = comdat any

$"??_C@_06MJMIHDAA@silent?$AA@" = comdat any

$"??_C@_09OOEJFLEP@recursive?$AA@" = comdat any

$"??_C@_06EMCDFPCG@suffix?$AA@" = comdat any

$"??_C@_04CEJDCDCH@test?$AA@" = comdat any

$"??_C@_07ILIJIBOM@no?9time?$AA@" = comdat any

$"??_C@_07KBAMPNJK@verbose?$AA@" = comdat any

$"??_C@_07CPCPJPKL@version?$AA@" = comdat any

$"??_C@_04LBNBHAJC@fast?$AA@" = comdat any

$"??_C@_04MLDDEBAF@best?$AA@" = comdat any

$"??_C@_03JGFDGKOP@lzw?$AA@" = comdat any

$"??_C@_04MLOLHOPP@bits?$AA@" = comdat any

$"??_C@_02MPLDIDCA@?$BP?$IL?$AA@" = comdat any

$"??_C@_02PIAGGFDE@?$BP?$JO?$AA@" = comdat any

$"??_C@_0DI@FEIGCNH@?$CFs?3?5?$CFs?3?5unknown?5method?5?$CFd?5?9?9?5get@" = comdat any

$"??_C@_0DC@DFIAKIJP@?$CFs?3?5?$CFs?5is?5encrypted?5?9?9?5get?5newer@" = comdat any

$"??_C@_0EB@IIANOBKG@?$CFs?3?5?$CFs?5is?5a?5a?5multi?9part?5gzip?5fi@" = comdat any

$"??_C@_0DE@CJCKLHG@?$CFs?3?5?$CFs?5has?5flags?50x?$CFx?5?9?9?5get?5new@" = comdat any

$"??_C@_0BI@LPIPGEHO@?$CFs?3?5?$CFs?3?5part?5number?5?$CFu?6?$AA@" = comdat any

$"??_C@_0CJ@JPMIIMII@?$CFs?3?5?$CFs?3?5extra?5field?5of?5?$CFu?5bytes?5@" = comdat any

$"??_C@_0CH@KGMHFPEH@corrupted?5input?5?9?9?5file?5name?5too@" = comdat any

$"??_C@_04CLPBGDEI@PK?$AD?$AE?$AA@" = comdat any

$"??_C@_02MDIFPNHP@?$BP?$BO?$AA@" = comdat any

$"??_C@_02NDCLDGPH@?$BP?$JN?$AA@" = comdat any

$"??_C@_02LJMDHOEJ@?$BP?$KA?$AA@" = comdat any

$"??_C@_0BN@DMMHKKEM@?6?$CFs?3?5?$CFs?3?5not?5in?5gzip?5format?6?$AA@" = comdat any

$"??_C@_0DF@KPBMJBGP@?6?$CFs?3?5?$CFs?3?5decompression?5OK?0?5trail@" = comdat any

$"??_C@_0BK@CLKHMJGM@?5incomplete?5literal?5tree?6?$AA@" = comdat any

$"??_C@_0BL@HDNEBKFF@?5incomplete?5distance?5tree?6?$AA@" = comdat any

$"??_C@_0CM@LPGEGGFO@output?5in?5compress?5?4Z?5format?5not@" = comdat any

$"??_C@_0L@HODMACKF@spec_init?6?$AA@" = comdat any

$"??_C@_0CE@CICPOJPD@spec_init?3?5Error?5mallocing?5memor@" = comdat any

$"??_C@_0BB@FOGGIPDD@Creating?5Chunks?6?$AA@" = comdat any

$"??_C@_0BD@LLLPCEOC@Creating?5Chunk?5?$CFd?6?$AA@" = comdat any

$"??_C@_0BE@GLOHHOFE@Filling?5input?5file?6?$AA@" = comdat any

$"??_C@_0BI@PNOIDAGN@Can?8t?5open?5file?5?$CFs?3?5?$CFs?6?$AA@" = comdat any

$"??_C@_0BL@JAKFMFOB@Error?5reading?5from?5?$CFs?3?5?$CFs?6?$AA@" = comdat any

$"??_C@_0BG@MFFNAFHA@Duplicating?5?$CFd?5bytes?6?$AA@" = comdat any

$"??_C@_0BJ@KLJGEJEJ@spec_read?3?5?$CFd?0?5?$CFx?0?5?$CFd?5?$DN?5?$AA@" = comdat any

$"??_C@_0CC@PGADNMPC@spec_read?3?5fd?$DN?$CFd?0?5?$DO?5MAX_SPEC_FD?$CB@" = comdat any

$"??_C@_04OEEBIOEI@EOF?6?$AA@" = comdat any

$"??_C@_03PMGGPEJJ@?$CFd?6?$AA@" = comdat any

$"??_C@_0BB@GPMEHCHC@spec_getc?3?5?$CFd?5?$DN?5?$AA@" = comdat any

$"??_C@_0BD@POGOMCNJ@spec_ungetc?3?5?$CFd?5?$DN?5?$AA@" = comdat any

$"??_C@_0BK@PBMPALNH@spec_ungetc?3?5pos?5?$CFd?5?$DM?$DN?50?6?$AA@" = comdat any

$"??_C@_0EI@JGFIDMH@spec_ungetc?3?5can?8t?5unget?5somethi@" = comdat any

$"??_C@_0BK@GKFGHPHN@spec_write?3?5?$CFd?0?5?$CFx?0?5?$CFd?5?$DN?5?$AA@" = comdat any

$"??_C@_0CD@NANFEFEM@spec_write?3?5fd?$DN?$CFd?0?5?$DO?5MAX_SPEC_FD@" = comdat any

$"??_C@_0BF@MPLILGCO@spec_putc?3?5?$CFd?0?5?$CFd?5?$DN?5?$AA@" = comdat any

$"??_C@_0P@IBHKFCCJ@input?4combined?$AA@" = comdat any

$"??_C@_0BE@EEBELGKE@Loading?5Input?5Data?6?$AA@" = comdat any

$"??_C@_0BP@KDCDDFCD@Input?5data?5?$CFd?5bytes?5in?5length?6?$AA@" = comdat any

$"??_C@_0BP@KJFPKECC@main?3?5Error?5mallocing?5memory?$CB?6?$AA@" = comdat any

$"??_C@_0CC@KJFJJBAE@Compressing?5Input?5Data?0?5level?5?$CFd@" = comdat any

$"??_C@_0CE@PFHIOJOC@Compressed?5data?5?$CFd?5bytes?5in?5leng@" = comdat any

$"??_C@_0BE@JICHKDFP@Uncompressing?5Data?6?$AA@" = comdat any

$"??_C@_0CG@DJIKCILP@Uncompressed?5data?5?$CFd?5bytes?5in?5le@" = comdat any

$"??_C@_0CD@KACBMJDH@Tested?5?$CFdMB?5buffer?3?5Miscompared?$CB@" = comdat any

$"??_C@_0BJ@HBIMNPIC@Tested?5?$CFdMB?5buffer?3?5OK?$CB?6?$AA@" = comdat any

$"??_C@_0CG@PNDINMCI@Uncompressed?5data?5compared?5corre@" = comdat any

$"??_C@_0M@NPEDOHBA@?$CFf?5seconds?6?$AA@" = comdat any

$"??_C@_0BC@KAMPMJLI@I?5am?5test?5var?5?3?$CFd?$AA@" = comdat any

$"??_C@_0P@EKLMCEJK@block?5vanished?$AA@" = comdat any

$"??_C@_0BH@BPJOINOA@?9l?5used?5on?5binary?5file?$AA@" = comdat any

$"??_C@_0L@CBPOJGJN@Bad?5table?6?$AA@" = comdat any

$"??_C@_0CG@BMCOKLOC@?6?$CFs?3?5?$CFs?3?5warning?0?5unknown?5flags?5@" = comdat any

$"??_C@_0DL@NICGIDGJ@?6?$CFs?3?5?$CFs?3?5compressed?5with?5?$CFd?5bits@" = comdat any

$"??_C@_0P@EPOGKLIC@corrupt?5input?4?$AA@" = comdat any

$"??_C@_0CO@MKCGKOLJ@corrupt?5input?4?5Use?5zcat?5to?5recov@" = comdat any

$"??_C@_0CG@FNGHHANN@invalid?5compressed?5data?9?9length?5@" = comdat any

$"??_C@_0DC@KKBPADLA@invalid?5compressed?5data?5?9?9?5Huffm@" = comdat any

$"??_C@_0CA@LKKMCIIJ@too?5many?5leaves?5in?5Huffman?5tree?$AA@" = comdat any

$"??_C@_0BP@EPBKLAEA@?6?$CFs?3?5?$CFs?3?5not?5a?5valid?5zip?5file?6?$AA@" = comdat any

$"??_C@_0DK@JINEBEMN@?6?$CFs?3?5?$CFs?3?5first?5entry?5not?5deflate@" = comdat any

$"??_C@_0CG@IDAFIPME@?6?$CFs?3?5?$CFs?3?5encrypted?5file?5?9?9?5use?5u@" = comdat any

$"??_C@_0O@BNNCBLEN@out?5of?5memory?$AA@" = comdat any

$"??_C@_0CJ@BENKEKBG@invalid?5compressed?5data?9?9format?5@" = comdat any

$"??_C@_0BC@MEEEOOBF@len?5?$CFld?0?5siz?5?$CFld?6?$AA@" = comdat any

$"??_C@_0CJ@CMKGEAKG@invalid?5compressed?5data?9?9length?5@" = comdat any

$"??_C@_0BP@COKNNDHE@internal?5error?0?5invalid?5method?$AA@" = comdat any

$"??_C@_0CD@FONOOJNO@invalid?5compressed?5data?9?9crc?5err@" = comdat any

$"??_C@_0CO@IPDKOBOP@?$CFs?3?5?$CFs?5has?5more?5than?5one?5entry?9?9@" = comdat any

$"??_C@_0CN@FCMAHAJH@?$CFs?3?5?$CFs?5has?5more?5than?5one?5entry?5?9@" = comdat any

$"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@" = comdat any

$"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@" = comdat any

$"??_C@_02OJDBNLEE@?5?7?$AA@" = comdat any

$"??_C@_07HPAAHEOH@argc?$DM?$DN0?$AA@" = comdat any

$"??_C@_0N@ODCEBLNH@?6?$CFs?3?5?$CFs?3?5?$CFs?6?$AA@" = comdat any

$"??_C@_0BH@KEMKLMGN@?$CFs?3?5?$CFs?3?5warning?3?5?$CFs?$CFs?6?$AA@" = comdat any

$"??_C@_0M@DOEGEPFA@?$CF2ld?4?$CF1ld?$CF?$CF?$AA@" = comdat any

@read_buf = common dso_local global i32 (...)* null, align 4
@zfile = internal global i32 0, align 4
@bi_buf = internal global i16 0, align 2
@bi_valid = internal global i32 0, align 4
@window_size = dso_local global i32 65536, align 4
@good_match = common dso_local global i32 0, align 4
@nice_match = common dso_local global i32 0, align 4
@max_chain_length = common dso_local global i32 0, align 4
@strstart = common dso_local global i32 0, align 4
@block_start = common dso_local global i32 0, align 4
@prev_length = common dso_local global i32 0, align 4
@match_start = common dso_local global i32 0, align 4
@"??_C@_0P@FAMONJE@bad?5pack?5level?$AA@" = linkonce_odr dso_local unnamed_addr constant [15 x i8] c"bad pack level\00", comdat, align 1
@compr_level = internal global i32 0, align 4
@configuration_table = internal global [10 x %struct.config] [%struct.config zeroinitializer, %struct.config { i16 4, i16 4, i16 8, i16 4 }, %struct.config { i16 4, i16 5, i16 16, i16 8 }, %struct.config { i16 4, i16 6, i16 32, i16 32 }, %struct.config { i16 4, i16 4, i16 16, i16 16 }, %struct.config { i16 8, i16 16, i16 32, i16 32 }, %struct.config { i16 8, i16 16, i16 128, i16 128 }, %struct.config { i16 8, i16 32, i16 128, i16 256 }, %struct.config { i16 32, i16 128, i16 258, i16 1024 }, %struct.config { i16 32, i16 258, i16 258, i16 4096 }], align 2
@max_lazy_match = internal global i32 0, align 4
@lookahead = internal global i32 0, align 4
@eofile = internal global i32 0, align 4
@ins_h = internal global i32 0, align 4
@optarg = dso_local global i8* null, align 4
@optind = dso_local global i32 0, align 4
@opterr = dso_local global i32 1, align 4
@optopt = dso_local global i32 0, align 4
@last_nonopt = internal global i32 0, align 4
@first_nonopt = internal global i32 0, align 4
@nextchar = internal global i8* null, align 4
@ordering = internal global i32 0, align 4
@"??_C@_0BA@DMNGMDNL@POSIXLY_CORRECT?$AA@" = linkonce_odr dso_local unnamed_addr constant [16 x i8] c"POSIXLY_CORRECT\00", comdat, align 1
@"??_C@_02BAABKJLB@?9?9?$AA@" = linkonce_odr dso_local unnamed_addr constant [3 x i8] c"--\00", comdat, align 1
@"??_C@_0BO@HAHAPHIK@?$CFs?3?5option?5?$GA?$CFs?8?5is?5ambiguous?6?$AA@" = linkonce_odr dso_local unnamed_addr constant [30 x i8] c"%s: option `%s' is ambiguous\0A\00", comdat, align 1
@"??_C@_0CN@JOLJOADE@?$CFs?3?5option?5?$GA?9?9?$CFs?8?5doesn?8t?5allow?5@" = linkonce_odr dso_local unnamed_addr constant [45 x i8] c"%s: option `--%s' doesn't allow an argument\0A\00", comdat, align 1
@"??_C@_0CN@CNGCPJCC@?$CFs?3?5option?5?$GA?$CFc?$CFs?8?5doesn?8t?5allow?5@" = linkonce_odr dso_local unnamed_addr constant [45 x i8] c"%s: option `%c%s' doesn't allow an argument\0A\00", comdat, align 1
@"??_C@_0CG@PLJDJCIA@?$CFs?3?5option?5?$GA?$CFs?8?5requires?5an?5argu@" = linkonce_odr dso_local unnamed_addr constant [38 x i8] c"%s: option `%s' requires an argument\0A\00", comdat, align 1
@"??_C@_0CA@EHMECPBA@?$CFs?3?5unrecognized?5option?5?$GA?9?9?$CFs?8?6?$AA@" = linkonce_odr dso_local unnamed_addr constant [32 x i8] c"%s: unrecognized option `--%s'\0A\00", comdat, align 1
@"??_C@_0CA@EBHJAKGL@?$CFs?3?5unrecognized?5option?5?$GA?$CFc?$CFs?8?6?$AA@" = linkonce_odr dso_local unnamed_addr constant [32 x i8] c"%s: unrecognized option `%c%s'\0A\00", comdat, align 1
@"??_C@_00CNPNBAHC@?$AA@" = linkonce_odr dso_local unnamed_addr constant [1 x i8] zeroinitializer, comdat, align 1
@"??_C@_0BK@NLCMBLAE@?$CFs?3?5illegal?5option?5?9?9?5?$CFc?6?$AA@" = linkonce_odr dso_local unnamed_addr constant [26 x i8] c"%s: illegal option -- %c\0A\00", comdat, align 1
@"??_C@_0CH@FFGNJLF@?$CFs?3?5option?5requires?5an?5argument?5@" = linkonce_odr dso_local unnamed_addr constant [39 x i8] c"%s: option requires an argument -- %c\0A\00", comdat, align 1
@ascii = dso_local global i32 0, align 4
@to_stdout = dso_local global i32 0, align 4
@decompress = dso_local global i32 0, align 4
@force = dso_local global i32 0, align 4
@no_name = dso_local global i32 -1, align 4
@no_time = dso_local global i32 -1, align 4
@recursive = dso_local global i32 0, align 4
@list = dso_local global i32 0, align 4
@verbose = dso_local global i32 0, align 4
@quiet = dso_local global i32 0, align 4
@do_lzw = dso_local global i32 0, align 4
@test = dso_local global i32 0, align 4
@maxbits = dso_local global i32 16, align 4
@method = dso_local global i32 8, align 4
@level = dso_local global i32 6, align 4
@exit_code = dso_local global i32 0, align 4
@args = dso_local global i8** null, align 4
@total_in = dso_local global i32 0, align 4
@total_out = dso_local global i32 0, align 4
@remove_ofname = dso_local global i32 0, align 4
@longopts = dso_local global [24 x %struct.option] [%struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05OJENGABA@ascii?$AA@", i32 0, i32 0), i32 0, i32* null, i32 97 }, %struct.option { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @"??_C@_09FJNDCOGJ@to?9stdout?$AA@", i32 0, i32 0), i32 0, i32* null, i32 99 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @"??_C@_06DJDOIFHB@stdout?$AA@", i32 0, i32 0), i32 0, i32* null, i32 99 }, %struct.option { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"??_C@_0L@BDJCADKN@decompress?$AA@", i32 0, i32 0), i32 0, i32* null, i32 100 }, %struct.option { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"??_C@_0L@IEAKODFB@uncompress?$AA@", i32 0, i32 0), i32 0, i32* null, i32 100 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05BINPNAAL@force?$AA@", i32 0, i32 0), i32 0, i32* null, i32 102 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"??_C@_04PCJFHION@help?$AA@", i32 0, i32 0), i32 0, i32* null, i32 104 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"??_C@_04DONFEANM@list?$AA@", i32 0, i32 0), i32 0, i32* null, i32 108 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @"??_C@_07EJMBNAEG@license?$AA@", i32 0, i32 0), i32 0, i32* null, i32 76 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @"??_C@_07GEGNCGCA@no?9name?$AA@", i32 0, i32 0), i32 0, i32* null, i32 110 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"??_C@_04MEMAJGDJ@name?$AA@", i32 0, i32 0), i32 0, i32* null, i32 78 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05PMBAOCDH@quiet?$AA@", i32 0, i32 0), i32 0, i32* null, i32 113 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @"??_C@_06MJMIHDAA@silent?$AA@", i32 0, i32 0), i32 0, i32* null, i32 113 }, %struct.option { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @"??_C@_09OOEJFLEP@recursive?$AA@", i32 0, i32 0), i32 0, i32* null, i32 114 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @"??_C@_06EMCDFPCG@suffix?$AA@", i32 0, i32 0), i32 1, i32* null, i32 83 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"??_C@_04CEJDCDCH@test?$AA@", i32 0, i32 0), i32 0, i32* null, i32 116 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @"??_C@_07ILIJIBOM@no?9time?$AA@", i32 0, i32 0), i32 0, i32* null, i32 84 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @"??_C@_07KBAMPNJK@verbose?$AA@", i32 0, i32 0), i32 0, i32* null, i32 118 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @"??_C@_07CPCPJPKL@version?$AA@", i32 0, i32 0), i32 0, i32* null, i32 86 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"??_C@_04LBNBHAJC@fast?$AA@", i32 0, i32 0), i32 0, i32* null, i32 49 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"??_C@_04MLDDEBAF@best?$AA@", i32 0, i32 0), i32 0, i32* null, i32 57 }, %struct.option { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"??_C@_03JGFDGKOP@lzw?$AA@", i32 0, i32 0), i32 0, i32* null, i32 90 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"??_C@_04MLOLHOPP@bits?$AA@", i32 0, i32 0), i32 1, i32* null, i32 98 }, %struct.option zeroinitializer], align 4
@"??_C@_05OJENGABA@ascii?$AA@" = linkonce_odr dso_local unnamed_addr constant [6 x i8] c"ascii\00", comdat, align 1
@"??_C@_09FJNDCOGJ@to?9stdout?$AA@" = linkonce_odr dso_local unnamed_addr constant [10 x i8] c"to-stdout\00", comdat, align 1
@"??_C@_06DJDOIFHB@stdout?$AA@" = linkonce_odr dso_local unnamed_addr constant [7 x i8] c"stdout\00", comdat, align 1
@"??_C@_0L@BDJCADKN@decompress?$AA@" = linkonce_odr dso_local unnamed_addr constant [11 x i8] c"decompress\00", comdat, align 1
@"??_C@_0L@IEAKODFB@uncompress?$AA@" = linkonce_odr dso_local unnamed_addr constant [11 x i8] c"uncompress\00", comdat, align 1
@"??_C@_05BINPNAAL@force?$AA@" = linkonce_odr dso_local unnamed_addr constant [6 x i8] c"force\00", comdat, align 1
@"??_C@_04PCJFHION@help?$AA@" = linkonce_odr dso_local unnamed_addr constant [5 x i8] c"help\00", comdat, align 1
@"??_C@_04DONFEANM@list?$AA@" = linkonce_odr dso_local unnamed_addr constant [5 x i8] c"list\00", comdat, align 1
@"??_C@_07EJMBNAEG@license?$AA@" = linkonce_odr dso_local unnamed_addr constant [8 x i8] c"license\00", comdat, align 1
@"??_C@_07GEGNCGCA@no?9name?$AA@" = linkonce_odr dso_local unnamed_addr constant [8 x i8] c"no-name\00", comdat, align 1
@"??_C@_04MEMAJGDJ@name?$AA@" = linkonce_odr dso_local unnamed_addr constant [5 x i8] c"name\00", comdat, align 1
@"??_C@_05PMBAOCDH@quiet?$AA@" = linkonce_odr dso_local unnamed_addr constant [6 x i8] c"quiet\00", comdat, align 1
@"??_C@_06MJMIHDAA@silent?$AA@" = linkonce_odr dso_local unnamed_addr constant [7 x i8] c"silent\00", comdat, align 1
@"??_C@_09OOEJFLEP@recursive?$AA@" = linkonce_odr dso_local unnamed_addr constant [10 x i8] c"recursive\00", comdat, align 1
@"??_C@_06EMCDFPCG@suffix?$AA@" = linkonce_odr dso_local unnamed_addr constant [7 x i8] c"suffix\00", comdat, align 1
@"??_C@_04CEJDCDCH@test?$AA@" = linkonce_odr dso_local unnamed_addr constant [5 x i8] c"test\00", comdat, align 1
@"??_C@_07ILIJIBOM@no?9time?$AA@" = linkonce_odr dso_local unnamed_addr constant [8 x i8] c"no-time\00", comdat, align 1
@"??_C@_07KBAMPNJK@verbose?$AA@" = linkonce_odr dso_local unnamed_addr constant [8 x i8] c"verbose\00", comdat, align 1
@"??_C@_07CPCPJPKL@version?$AA@" = linkonce_odr dso_local unnamed_addr constant [8 x i8] c"version\00", comdat, align 1
@"??_C@_04LBNBHAJC@fast?$AA@" = linkonce_odr dso_local unnamed_addr constant [5 x i8] c"fast\00", comdat, align 1
@"??_C@_04MLDDEBAF@best?$AA@" = linkonce_odr dso_local unnamed_addr constant [5 x i8] c"best\00", comdat, align 1
@"??_C@_03JGFDGKOP@lzw?$AA@" = linkonce_odr dso_local unnamed_addr constant [4 x i8] c"lzw\00", comdat, align 1
@"??_C@_04MLOLHOPP@bits?$AA@" = linkonce_odr dso_local unnamed_addr constant [5 x i8] c"bits\00", comdat, align 1
@work = dso_local global i32 (...)* bitcast (i32 (i32, i32)* @zip to i32 (...)*), align 4
@inptr = common dso_local global i32 0, align 4
@insize = common dso_local global i32 0, align 4
@inbuf = common dso_local global [32832 x i8] zeroinitializer, align 1
@part_nb = common dso_local global i32 0, align 4
@last_member = common dso_local global i32 0, align 4
@ifname = common dso_local global [1024 x i8] zeroinitializer, align 1
@progname = common dso_local global i8* null, align 4
@time_stamp = common dso_local global i32 0, align 4
@ofname = common dso_local global [1024 x i8] zeroinitializer, align 1
@ofd = common dso_local global i32 0, align 4
@outbuf = common dso_local global [18432 x i8] zeroinitializer, align 1
@d_buf = common dso_local global [32768 x i16] zeroinitializer, align 2
@window = common dso_local global [65536 x i8] zeroinitializer, align 1
@prev = common dso_local global [65536 x i16] zeroinitializer, align 2
@foreground = common dso_local global i32 0, align 4
@save_orig_name = common dso_local global i32 0, align 4
@ifile_size = common dso_local global i32 0, align 4
@env = common dso_local global i8* null, align 4
@z_suffix = common dso_local global [31 x i8] zeroinitializer, align 1
@z_len = common dso_local global i32 0, align 4
@bytes_in = common dso_local global i32 0, align 4
@bytes_out = common dso_local global i32 0, align 4
@istat = common dso_local global %struct.stat zeroinitializer, align 8
@ifd = common dso_local global i32 0, align 4
@outcnt = common dso_local global i32 0, align 4
@"??_C@_02MPLDIDCA@?$BP?$IL?$AA@" = linkonce_odr dso_local unnamed_addr constant [3 x i8] c"\1F\8B\00", comdat, align 1
@"??_C@_02PIAGGFDE@?$BP?$JO?$AA@" = linkonce_odr dso_local unnamed_addr constant [3 x i8] c"\1F\9E\00", comdat, align 1
@"??_C@_0DI@FEIGCNH@?$CFs?3?5?$CFs?3?5unknown?5method?5?$CFd?5?9?9?5get@" = linkonce_odr dso_local unnamed_addr constant [56 x i8] c"%s: %s: unknown method %d -- get newer version of gzip\0A\00", comdat, align 1
@"??_C@_0DC@DFIAKIJP@?$CFs?3?5?$CFs?5is?5encrypted?5?9?9?5get?5newer@" = linkonce_odr dso_local unnamed_addr constant [50 x i8] c"%s: %s is encrypted -- get newer version of gzip\0A\00", comdat, align 1
@"??_C@_0EB@IIANOBKG@?$CFs?3?5?$CFs?5is?5a?5a?5multi?9part?5gzip?5fi@" = linkonce_odr dso_local unnamed_addr constant [65 x i8] c"%s: %s is a a multi-part gzip file -- get newer version of gzip\0A\00", comdat, align 1
@"??_C@_0DE@CJCKLHG@?$CFs?3?5?$CFs?5has?5flags?50x?$CFx?5?9?9?5get?5new@" = linkonce_odr dso_local unnamed_addr constant [52 x i8] c"%s: %s has flags 0x%x -- get newer version of gzip\0A\00", comdat, align 1
@"??_C@_0BI@LPIPGEHO@?$CFs?3?5?$CFs?3?5part?5number?5?$CFu?6?$AA@" = linkonce_odr dso_local unnamed_addr constant [24 x i8] c"%s: %s: part number %u\0A\00", comdat, align 1
@"??_C@_0CJ@JPMIIMII@?$CFs?3?5?$CFs?3?5extra?5field?5of?5?$CFu?5bytes?5@" = linkonce_odr dso_local unnamed_addr constant [41 x i8] c"%s: %s: extra field of %u bytes ignored\0A\00", comdat, align 1
@"??_C@_0CH@KGMHFPEH@corrupted?5input?5?9?9?5file?5name?5too@" = linkonce_odr dso_local unnamed_addr constant [39 x i8] c"corrupted input -- file name too large\00", comdat, align 1
@"??_C@_04CLPBGDEI@PK?$AD?$AE?$AA@" = linkonce_odr dso_local unnamed_addr constant [5 x i8] c"PK\03\04\00", comdat, align 1
@"??_C@_02MDIFPNHP@?$BP?$BO?$AA@" = linkonce_odr dso_local unnamed_addr constant [3 x i8] c"\1F\1E\00", comdat, align 1
@"??_C@_02NDCLDGPH@?$BP?$JN?$AA@" = linkonce_odr dso_local unnamed_addr constant [3 x i8] c"\1F\9D\00", comdat, align 1
@"??_C@_02LJMDHOEJ@?$BP?$KA?$AA@" = linkonce_odr dso_local unnamed_addr constant [3 x i8] c"\1F\A0\00", comdat, align 1
@"??_C@_0BN@DMMHKKEM@?6?$CFs?3?5?$CFs?3?5not?5in?5gzip?5format?6?$AA@" = linkonce_odr dso_local unnamed_addr constant [29 x i8] c"\0A%s: %s: not in gzip format\0A\00", comdat, align 1
@"??_C@_0DF@KPBMJBGP@?6?$CFs?3?5?$CFs?3?5decompression?5OK?0?5trail@" = linkonce_odr dso_local unnamed_addr constant [53 x i8] c"\0A%s: %s: decompression OK, trailing garbage ignored\0A\00", comdat, align 1
@do_exit.in_exit = internal global i32 0, align 4
@mask_bits = dso_local global [17 x i16] [i16 0, i16 1, i16 3, i16 7, i16 15, i16 31, i16 63, i16 127, i16 255, i16 511, i16 1023, i16 2047, i16 4095, i16 8191, i16 16383, i16 32767, i16 -1], align 2
@lbits = dso_local global i32 9, align 4
@dbits = dso_local global i32 6, align 4
@hufts = common dso_local global i32 0, align 4
@bb = common dso_local global i32 0, align 4
@bk = common dso_local global i32 0, align 4
@cplens = internal global [31 x i16] [i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 13, i16 15, i16 17, i16 19, i16 23, i16 27, i16 31, i16 35, i16 43, i16 51, i16 59, i16 67, i16 83, i16 99, i16 115, i16 131, i16 163, i16 195, i16 227, i16 258, i16 0, i16 0], align 2
@cplext = internal global [31 x i16] [i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 1, i16 1, i16 1, i16 1, i16 2, i16 2, i16 2, i16 2, i16 3, i16 3, i16 3, i16 3, i16 4, i16 4, i16 4, i16 4, i16 5, i16 5, i16 5, i16 5, i16 0, i16 99, i16 99], align 2
@cpdist = internal global [30 x i16] [i16 1, i16 2, i16 3, i16 4, i16 5, i16 7, i16 9, i16 13, i16 17, i16 25, i16 33, i16 49, i16 65, i16 97, i16 129, i16 193, i16 257, i16 385, i16 513, i16 769, i16 1025, i16 1537, i16 2049, i16 3073, i16 4097, i16 6145, i16 8193, i16 12289, i16 16385, i16 24577], align 2
@cpdext = internal global [30 x i16] [i16 0, i16 0, i16 0, i16 0, i16 1, i16 1, i16 2, i16 2, i16 3, i16 3, i16 4, i16 4, i16 5, i16 5, i16 6, i16 6, i16 7, i16 7, i16 8, i16 8, i16 9, i16 9, i16 10, i16 10, i16 11, i16 11, i16 12, i16 12, i16 13, i16 13], align 2
@border = internal global [19 x i32] [i32 16, i32 17, i32 18, i32 0, i32 8, i32 7, i32 9, i32 6, i32 10, i32 5, i32 11, i32 4, i32 12, i32 3, i32 13, i32 2, i32 14, i32 1, i32 15], align 4
@"??_C@_0BK@CLKHMJGM@?5incomplete?5literal?5tree?6?$AA@" = linkonce_odr dso_local unnamed_addr constant [26 x i8] c" incomplete literal tree\0A\00", comdat, align 1
@"??_C@_0BL@HDNEBKFF@?5incomplete?5distance?5tree?6?$AA@" = linkonce_odr dso_local unnamed_addr constant [27 x i8] c" incomplete distance tree\0A\00", comdat, align 1
@msg_done = internal global i32 0, align 4
@"??_C@_0CM@LPGEGGFO@output?5in?5compress?5?4Z?5format?5not@" = linkonce_odr dso_local unnamed_addr constant [44 x i8] c"output in compress .Z format not supported\0A\00", comdat, align 1
@dbglvl = dso_local global i32 4, align 4
@seedi = common dso_local global i32 0, align 4
@spec_fd = common dso_local global [3 x %struct.spec_fd_t] zeroinitializer, align 4
@"??_C@_0L@HODMACKF@spec_init?6?$AA@" = linkonce_odr dso_local unnamed_addr constant [11 x i8] c"spec_init\0A\00", comdat, align 1
@"??_C@_0CE@CICPOJPD@spec_init?3?5Error?5mallocing?5memor@" = linkonce_odr dso_local unnamed_addr constant [36 x i8] c"spec_init: Error mallocing memory!\0A\00", comdat, align 1
@"??_C@_0BB@FOGGIPDD@Creating?5Chunks?6?$AA@" = linkonce_odr dso_local unnamed_addr constant [17 x i8] c"Creating Chunks\0A\00", comdat, align 1
@"??_C@_0BD@LLLPCEOC@Creating?5Chunk?5?$CFd?6?$AA@" = linkonce_odr dso_local unnamed_addr constant [19 x i8] c"Creating Chunk %d\0A\00", comdat, align 1
@"??_C@_0BE@GLOHHOFE@Filling?5input?5file?6?$AA@" = linkonce_odr dso_local unnamed_addr constant [20 x i8] c"Filling input file\0A\00", comdat, align 1
@"??_C@_0BI@PNOIDAGN@Can?8t?5open?5file?5?$CFs?3?5?$CFs?6?$AA@" = linkonce_odr dso_local unnamed_addr constant [24 x i8] c"Can't open file %s: %s\0A\00", comdat, align 1
@"??_C@_0BL@JAKFMFOB@Error?5reading?5from?5?$CFs?3?5?$CFs?6?$AA@" = linkonce_odr dso_local unnamed_addr constant [27 x i8] c"Error reading from %s: %s\0A\00", comdat, align 1
@"??_C@_0BG@MFFNAFHA@Duplicating?5?$CFd?5bytes?6?$AA@" = linkonce_odr dso_local unnamed_addr constant [22 x i8] c"Duplicating %d bytes\0A\00", comdat, align 1
@"??_C@_0BJ@KLJGEJEJ@spec_read?3?5?$CFd?0?5?$CFx?0?5?$CFd?5?$DN?5?$AA@" = linkonce_odr dso_local unnamed_addr constant [25 x i8] c"spec_read: %d, %x, %d = \00", comdat, align 1
@"??_C@_0CC@PGADNMPC@spec_read?3?5fd?$DN?$CFd?0?5?$DO?5MAX_SPEC_FD?$CB@" = linkonce_odr dso_local unnamed_addr constant [34 x i8] c"spec_read: fd=%d, > MAX_SPEC_FD!\0A\00", comdat, align 1
@"??_C@_04OEEBIOEI@EOF?6?$AA@" = linkonce_odr dso_local unnamed_addr constant [5 x i8] c"EOF\0A\00", comdat, align 1
@"??_C@_03PMGGPEJJ@?$CFd?6?$AA@" = linkonce_odr dso_local unnamed_addr constant [4 x i8] c"%d\0A\00", comdat, align 1
@"??_C@_0BB@GPMEHCHC@spec_getc?3?5?$CFd?5?$DN?5?$AA@" = linkonce_odr dso_local unnamed_addr constant [17 x i8] c"spec_getc: %d = \00", comdat, align 1
@"??_C@_0BD@POGOMCNJ@spec_ungetc?3?5?$CFd?5?$DN?5?$AA@" = linkonce_odr dso_local unnamed_addr constant [19 x i8] c"spec_ungetc: %d = \00", comdat, align 1
@"??_C@_0BK@PBMPALNH@spec_ungetc?3?5pos?5?$CFd?5?$DM?$DN?50?6?$AA@" = linkonce_odr dso_local unnamed_addr constant [26 x i8] c"spec_ungetc: pos %d <= 0\0A\00", comdat, align 1
@"??_C@_0EI@JGFIDMH@spec_ungetc?3?5can?8t?5unget?5somethi@" = linkonce_odr dso_local unnamed_addr constant [72 x i8] c"spec_ungetc: can't unget something that wasn't what was in the buffer!\0A\00", comdat, align 1
@"??_C@_0BK@GKFGHPHN@spec_write?3?5?$CFd?0?5?$CFx?0?5?$CFd?5?$DN?5?$AA@" = linkonce_odr dso_local unnamed_addr constant [26 x i8] c"spec_write: %d, %x, %d = \00", comdat, align 1
@"??_C@_0CD@NANFEFEM@spec_write?3?5fd?$DN?$CFd?0?5?$DO?5MAX_SPEC_FD@" = linkonce_odr dso_local unnamed_addr constant [35 x i8] c"spec_write: fd=%d, > MAX_SPEC_FD!\0A\00", comdat, align 1
@"??_C@_0BF@MPLILGCO@spec_putc?3?5?$CFd?0?5?$CFd?5?$DN?5?$AA@" = linkonce_odr dso_local unnamed_addr constant [21 x i8] c"spec_putc: %d, %d = \00", comdat, align 1
@"??_C@_0P@IBHKFCCJ@input?4combined?$AA@" = linkonce_odr dso_local unnamed_addr constant [15 x i8] c"input.combined\00", comdat, align 1
@"??_C@_0BE@EEBELGKE@Loading?5Input?5Data?6?$AA@" = linkonce_odr dso_local unnamed_addr constant [20 x i8] c"Loading Input Data\0A\00", comdat, align 1
@"??_C@_0BP@KDCDDFCD@Input?5data?5?$CFd?5bytes?5in?5length?6?$AA@" = linkonce_odr dso_local unnamed_addr constant [31 x i8] c"Input data %d bytes in length\0A\00", comdat, align 1
@"??_C@_0BP@KJFPKECC@main?3?5Error?5mallocing?5memory?$CB?6?$AA@" = linkonce_odr dso_local unnamed_addr constant [31 x i8] c"main: Error mallocing memory!\0A\00", comdat, align 1
@"??_C@_0CC@KJFJJBAE@Compressing?5Input?5Data?0?5level?5?$CFd@" = linkonce_odr dso_local unnamed_addr constant [34 x i8] c"Compressing Input Data, level %d\0A\00", comdat, align 1
@"??_C@_0CE@PFHIOJOC@Compressed?5data?5?$CFd?5bytes?5in?5leng@" = linkonce_odr dso_local unnamed_addr constant [36 x i8] c"Compressed data %d bytes in length\0A\00", comdat, align 1
@"??_C@_0BE@JICHKDFP@Uncompressing?5Data?6?$AA@" = linkonce_odr dso_local unnamed_addr constant [20 x i8] c"Uncompressing Data\0A\00", comdat, align 1
@"??_C@_0CG@DJIKCILP@Uncompressed?5data?5?$CFd?5bytes?5in?5le@" = linkonce_odr dso_local unnamed_addr constant [38 x i8] c"Uncompressed data %d bytes in length\0A\00", comdat, align 1
@"??_C@_0CD@KACBMJDH@Tested?5?$CFdMB?5buffer?3?5Miscompared?$CB@" = linkonce_odr dso_local unnamed_addr constant [35 x i8] c"Tested %dMB buffer: Miscompared!!\0A\00", comdat, align 1
@"??_C@_0BJ@HBIMNPIC@Tested?5?$CFdMB?5buffer?3?5OK?$CB?6?$AA@" = linkonce_odr dso_local unnamed_addr constant [25 x i8] c"Tested %dMB buffer: OK!\0A\00", comdat, align 1
@"??_C@_0CG@PNDINMCI@Uncompressed?5data?5compared?5corre@" = linkonce_odr dso_local unnamed_addr constant [38 x i8] c"Uncompressed data compared correctly\0A\00", comdat, align 1
@"??_C@_0M@NPEDOHBA@?$CFf?5seconds?6?$AA@" = linkonce_odr dso_local unnamed_addr constant [12 x i8] c"%f seconds\0A\00", comdat, align 1
@"??_C@_0BC@KAMPMJLI@I?5am?5test?5var?5?3?$CFd?$AA@" = linkonce_odr dso_local unnamed_addr constant [18 x i8] c"I am test var :%d\00", comdat, align 1
@file_type = common dso_local global i16* null, align 4
@file_method = common dso_local global i32* null, align 4
@input_len = internal global i32 0, align 4
@compressed_len = internal global i32 0, align 4
@static_dtree = internal global [30 x %struct.ct_data] zeroinitializer, align 2
@base_length = internal global [29 x i32] zeroinitializer, align 4
@extra_lbits = internal global [29 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 1, i32 1, i32 1, i32 2, i32 2, i32 2, i32 2, i32 3, i32 3, i32 3, i32 3, i32 4, i32 4, i32 4, i32 4, i32 5, i32 5, i32 5, i32 5, i32 0], align 4
@length_code = internal global [256 x i8] zeroinitializer, align 1
@base_dist = internal global [30 x i32] zeroinitializer, align 4
@extra_dbits = internal global [30 x i32] [i32 0, i32 0, i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3, i32 4, i32 4, i32 5, i32 5, i32 6, i32 6, i32 7, i32 7, i32 8, i32 8, i32 9, i32 9, i32 10, i32 10, i32 11, i32 11, i32 12, i32 12, i32 13, i32 13], align 4
@dist_code = internal global [512 x i8] zeroinitializer, align 1
@bl_count = internal global [16 x i16] zeroinitializer, align 2
@static_ltree = internal global [288 x %struct.ct_data] zeroinitializer, align 2
@dyn_ltree = internal global [573 x %struct.ct_data] zeroinitializer, align 2
@dyn_dtree = internal global [61 x %struct.ct_data] zeroinitializer, align 2
@bl_tree = internal global [39 x %struct.ct_data] zeroinitializer, align 2
@static_len = internal global i32 0, align 4
@opt_len = internal global i32 0, align 4
@last_flags = internal global i32 0, align 4
@last_dist = internal global i32 0, align 4
@last_lit = internal global i32 0, align 4
@flags = internal global i8 0, align 1
@flag_bit = internal global i8 0, align 1
@flag_buf = internal global [4096 x i8] zeroinitializer, align 1
@l_desc = internal global %struct.tree_desc { %struct.ct_data* getelementptr inbounds ([573 x %struct.ct_data], [573 x %struct.ct_data]* @dyn_ltree, i32 0, i32 0), %struct.ct_data* getelementptr inbounds ([288 x %struct.ct_data], [288 x %struct.ct_data]* @static_ltree, i32 0, i32 0), i32* getelementptr inbounds ([29 x i32], [29 x i32]* @extra_lbits, i32 0, i32 0), i32 257, i32 286, i32 15, i32 0 }, align 4
@d_desc = internal global %struct.tree_desc { %struct.ct_data* getelementptr inbounds ([61 x %struct.ct_data], [61 x %struct.ct_data]* @dyn_dtree, i32 0, i32 0), %struct.ct_data* getelementptr inbounds ([30 x %struct.ct_data], [30 x %struct.ct_data]* @static_dtree, i32 0, i32 0), i32* getelementptr inbounds ([30 x i32], [30 x i32]* @extra_dbits, i32 0, i32 0), i32 0, i32 30, i32 15, i32 0 }, align 4
@"??_C@_0P@EKLMCEJK@block?5vanished?$AA@" = linkonce_odr dso_local unnamed_addr constant [15 x i8] c"block vanished\00", comdat, align 1
@bl_order = internal global [19 x i8] c"\10\11\12\00\08\07\09\06\0A\05\0B\04\0C\03\0D\02\0E\01\0F", align 1
@bl_desc = internal global %struct.tree_desc { %struct.ct_data* getelementptr inbounds ([39 x %struct.ct_data], [39 x %struct.ct_data]* @bl_tree, i32 0, i32 0), %struct.ct_data* null, i32* getelementptr inbounds ([19 x i32], [19 x i32]* @extra_blbits, i32 0, i32 0), i32 0, i32 19, i32 7, i32 0 }, align 4
@extra_blbits = internal global [19 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 3, i32 7], align 4
@heap_len = internal global i32 0, align 4
@heap_max = internal global i32 0, align 4
@heap = internal global [573 x i32] zeroinitializer, align 4
@depth = internal global [573 x i8] zeroinitializer, align 1
@"??_C@_0BH@BPJOINOA@?9l?5used?5on?5binary?5file?$AA@" = linkonce_odr dso_local unnamed_addr constant [23 x i8] c"-l used on binary file\00", comdat, align 1
@done = internal global i32 0, align 4
@j = internal global i32 0, align 4
@decode.i = internal global i32 0, align 4
@bitbuf = internal global i16 0, align 2
@pt_table = internal global [256 x i16] zeroinitializer, align 2
@pt_len = internal global [19 x i8] zeroinitializer, align 1
@bitcount = internal global i32 0, align 4
@subbitbuf = internal global i32 0, align 4
@blocksize = internal global i32 0, align 4
@"??_C@_0L@CBPOJGJN@Bad?5table?6?$AA@" = linkonce_odr dso_local unnamed_addr constant [11 x i8] c"Bad table\0A\00", comdat, align 1
@block_mode = dso_local global i32 128, align 4
@"??_C@_0CG@BMCOKLOC@?6?$CFs?3?5?$CFs?3?5warning?0?5unknown?5flags?5@" = linkonce_odr dso_local unnamed_addr constant [38 x i8] c"\0A%s: %s: warning, unknown flags 0x%x\0A\00", comdat, align 1
@"??_C@_0DL@NICGIDGJ@?6?$CFs?3?5?$CFs?3?5compressed?5with?5?$CFd?5bits@" = linkonce_odr dso_local unnamed_addr constant [59 x i8] c"\0A%s: %s: compressed with %d bits, can only handle %d bits\0A\00", comdat, align 1
@"??_C@_0P@EPOGKLIC@corrupt?5input?4?$AA@" = linkonce_odr dso_local unnamed_addr constant [15 x i8] c"corrupt input.\00", comdat, align 1
@"??_C@_0CO@MKCGKOLJ@corrupt?5input?4?5Use?5zcat?5to?5recov@" = linkonce_odr dso_local unnamed_addr constant [46 x i8] c"corrupt input. Use zcat to recover some data.\00", comdat, align 1
@valid = internal global i32 0, align 4
@bitbuf.20 = internal global i32 0, align 4
@peek_bits = internal global i32 0, align 4
@max_len = internal global i32 0, align 4
@leaves = internal global [26 x i32] zeroinitializer, align 4
@parents = internal global [26 x i32] zeroinitializer, align 4
@lit_base = internal global [26 x i32] zeroinitializer, align 4
@literal = internal global [256 x i8] zeroinitializer, align 1
@orig_len = internal global i32 0, align 4
@"??_C@_0CG@FNGHHANN@invalid?5compressed?5data?9?9length?5@" = linkonce_odr dso_local unnamed_addr constant [38 x i8] c"invalid compressed data--length error\00", comdat, align 1
@"??_C@_0DC@KKBPADLA@invalid?5compressed?5data?5?9?9?5Huffm@" = linkonce_odr dso_local unnamed_addr constant [50 x i8] c"invalid compressed data -- Huffman code > 32 bits\00", comdat, align 1
@"??_C@_0CA@LKKMCIIJ@too?5many?5leaves?5in?5Huffman?5tree?$AA@" = linkonce_odr dso_local unnamed_addr constant [32 x i8] c"too many leaves in Huffman tree\00", comdat, align 1
@pkzip = dso_local global i32 0, align 4
@ext_header = dso_local global i32 0, align 4
@decrypt = common dso_local global i32 0, align 4
@key = common dso_local global i8* null, align 4
@"??_C@_0BP@EPBKLAEA@?6?$CFs?3?5?$CFs?3?5not?5a?5valid?5zip?5file?6?$AA@" = linkonce_odr dso_local unnamed_addr constant [31 x i8] c"\0A%s: %s: not a valid zip file\0A\00", comdat, align 1
@"??_C@_0DK@JINEBEMN@?6?$CFs?3?5?$CFs?3?5first?5entry?5not?5deflate@" = linkonce_odr dso_local unnamed_addr constant [58 x i8] c"\0A%s: %s: first entry not deflated or stored -- use unzip\0A\00", comdat, align 1
@"??_C@_0CG@IDAFIPME@?6?$CFs?3?5?$CFs?3?5encrypted?5file?5?9?9?5use?5u@" = linkonce_odr dso_local unnamed_addr constant [38 x i8] c"\0A%s: %s: encrypted file -- use unzip\0A\00", comdat, align 1
@"??_C@_0O@BNNCBLEN@out?5of?5memory?$AA@" = linkonce_odr dso_local unnamed_addr constant [14 x i8] c"out of memory\00", comdat, align 1
@"??_C@_0CJ@BENKEKBG@invalid?5compressed?5data?9?9format?5@" = linkonce_odr dso_local unnamed_addr constant [41 x i8] c"invalid compressed data--format violated\00", comdat, align 1
@"??_C@_0BC@MEEEOOBF@len?5?$CFld?0?5siz?5?$CFld?6?$AA@" = linkonce_odr dso_local unnamed_addr constant [18 x i8] c"len %ld, siz %ld\0A\00", comdat, align 1
@"??_C@_0CJ@CMKGEAKG@invalid?5compressed?5data?9?9length?5@" = linkonce_odr dso_local unnamed_addr constant [41 x i8] c"invalid compressed data--length mismatch\00", comdat, align 1
@"??_C@_0BP@COKNNDHE@internal?5error?0?5invalid?5method?$AA@" = linkonce_odr dso_local unnamed_addr constant [31 x i8] c"internal error, invalid method\00", comdat, align 1
@"??_C@_0CD@FONOOJNO@invalid?5compressed?5data?9?9crc?5err@" = linkonce_odr dso_local unnamed_addr constant [35 x i8] c"invalid compressed data--crc error\00", comdat, align 1
@"??_C@_0CO@IPDKOBOP@?$CFs?3?5?$CFs?5has?5more?5than?5one?5entry?9?9@" = linkonce_odr dso_local unnamed_addr constant [46 x i8] c"%s: %s has more than one entry--rest ignored\0A\00", comdat, align 1
@"??_C@_0CN@FCMAHAJH@?$CFs?3?5?$CFs?5has?5more?5than?5one?5entry?5?9@" = linkonce_odr dso_local unnamed_addr constant [45 x i8] c"%s: %s has more than one entry -- unchanged\0A\00", comdat, align 1
@crc_32_tab = dso_local global [256 x i32] [i32 0, i32 1996959894, i32 -301047508, i32 -1727442502, i32 124634137, i32 1886057615, i32 -379345611, i32 -1637575261, i32 249268274, i32 2044508324, i32 -522852066, i32 -1747789432, i32 162941995, i32 2125561021, i32 -407360249, i32 -1866523247, i32 498536548, i32 1789927666, i32 -205950648, i32 -2067906082, i32 450548861, i32 1843258603, i32 -187386543, i32 -2083289657, i32 325883990, i32 1684777152, i32 -43845254, i32 -1973040660, i32 335633487, i32 1661365465, i32 -99664541, i32 -1928851979, i32 997073096, i32 1281953886, i32 -715111964, i32 -1570279054, i32 1006888145, i32 1258607687, i32 -770865667, i32 -1526024853, i32 901097722, i32 1119000684, i32 -608450090, i32 -1396901568, i32 853044451, i32 1172266101, i32 -589951537, i32 -1412350631, i32 651767980, i32 1373503546, i32 -925412992, i32 -1076862698, i32 565507253, i32 1454621731, i32 -809855591, i32 -1195530993, i32 671266974, i32 1594198024, i32 -972236366, i32 -1324619484, i32 795835527, i32 1483230225, i32 -1050600021, i32 -1234817731, i32 1994146192, i32 31158534, i32 -1731059524, i32 -271249366, i32 1907459465, i32 112637215, i32 -1614814043, i32 -390540237, i32 2013776290, i32 251722036, i32 -1777751922, i32 -519137256, i32 2137656763, i32 141376813, i32 -1855689577, i32 -429695999, i32 1802195444, i32 476864866, i32 -2056965928, i32 -228458418, i32 1812370925, i32 453092731, i32 -2113342271, i32 -183516073, i32 1706088902, i32 314042704, i32 -1950435094, i32 -54949764, i32 1658658271, i32 366619977, i32 -1932296973, i32 -69972891, i32 1303535960, i32 984961486, i32 -1547960204, i32 -725929758, i32 1256170817, i32 1037604311, i32 -1529756563, i32 -740887301, i32 1131014506, i32 879679996, i32 -1385723834, i32 -631195440, i32 1141124467, i32 855842277, i32 -1442165665, i32 -586318647, i32 1342533948, i32 654459306, i32 -1106571248, i32 -921952122, i32 1466479909, i32 544179635, i32 -1184443383, i32 -832445281, i32 1591671054, i32 702138776, i32 -1328506846, i32 -942167884, i32 1504918807, i32 783551873, i32 -1212326853, i32 -1061524307, i32 -306674912, i32 -1698712650, i32 62317068, i32 1957810842, i32 -355121351, i32 -1647151185, i32 81470997, i32 1943803523, i32 -480048366, i32 -1805370492, i32 225274430, i32 2053790376, i32 -468791541, i32 -1828061283, i32 167816743, i32 2097651377, i32 -267414716, i32 -2029476910, i32 503444072, i32 1762050814, i32 -144550051, i32 -2140837941, i32 426522225, i32 1852507879, i32 -19653770, i32 -1982649376, i32 282753626, i32 1742555852, i32 -105259153, i32 -1900089351, i32 397917763, i32 1622183637, i32 -690576408, i32 -1580100738, i32 953729732, i32 1340076626, i32 -776247311, i32 -1497606297, i32 1068828381, i32 1219638859, i32 -670225446, i32 -1358292148, i32 906185462, i32 1090812512, i32 -547295293, i32 -1469587627, i32 829329135, i32 1181335161, i32 -882789492, i32 -1134132454, i32 628085408, i32 1382605366, i32 -871598187, i32 -1156888829, i32 570562233, i32 1426400815, i32 -977650754, i32 -1296233688, i32 733239954, i32 1555261956, i32 -1026031705, i32 -1244606671, i32 752459403, i32 1541320221, i32 -1687895376, i32 -328994266, i32 1969922972, i32 40735498, i32 -1677130071, i32 -351390145, i32 1913087877, i32 83908371, i32 -1782625662, i32 -491226604, i32 2075208622, i32 213261112, i32 -1831694693, i32 -438977011, i32 2094854071, i32 198958881, i32 -2032938284, i32 -237706686, i32 1759359992, i32 534414190, i32 -2118248755, i32 -155638181, i32 1873836001, i32 414664567, i32 -2012718362, i32 -15766928, i32 1711684554, i32 285281116, i32 -1889165569, i32 -127750551, i32 1634467795, i32 376229701, i32 -1609899400, i32 -686959890, i32 1308918612, i32 956543938, i32 -1486412191, i32 -799009033, i32 1231636301, i32 1047427035, i32 -1362007478, i32 -640263460, i32 1088359270, i32 936918000, i32 -1447252397, i32 -558129467, i32 1202900863, i32 817233897, i32 -1111625188, i32 -893730166, i32 1404277552, i32 615818150, i32 -1160759803, i32 -841546093, i32 1423857449, i32 601450431, i32 -1285129682, i32 -1000256840, i32 1567103746, i32 711928724, i32 -1274298825, i32 -1022587231, i32 1510334235, i32 755167117], align 4
@"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@" = linkonce_odr dso_local unnamed_addr constant [6 x i8] c"\0A%s: \00", comdat, align 1
@"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@" = linkonce_odr dso_local unnamed_addr constant [28 x i8] c"%s: unexpected end of file\0A\00", comdat, align 1
@updcrc.crc = internal global i32 -1, align 4
@"??_C@_02OJDBNLEE@?5?7?$AA@" = linkonce_odr dso_local unnamed_addr constant [3 x i8] c" \09\00", comdat, align 1
@"??_C@_07HPAAHEOH@argc?$DM?$DN0?$AA@" = linkonce_odr dso_local unnamed_addr constant [8 x i8] c"argc<=0\00", comdat, align 1
@"??_C@_0N@ODCEBLNH@?6?$CFs?3?5?$CFs?3?5?$CFs?6?$AA@" = linkonce_odr dso_local unnamed_addr constant [13 x i8] c"\0A%s: %s: %s\0A\00", comdat, align 1
@"??_C@_0BH@KEMKLMGN@?$CFs?3?5?$CFs?3?5warning?3?5?$CFs?$CFs?6?$AA@" = linkonce_odr dso_local unnamed_addr constant [23 x i8] c"%s: %s: warning: %s%s\0A\00", comdat, align 1
@"??_C@_0M@DOEGEPFA@?$CF2ld?4?$CF1ld?$CF?$CF?$AA@" = linkonce_odr dso_local unnamed_addr constant [12 x i8] c"%2ld.%1ld%%\00", comdat, align 1
@header_bytes = common dso_local global i32 0, align 4
@crc = internal global i32 0, align 4
@Struct.RetValue = internal global %Struct.RetValue zeroinitializer
@Struct.RetValue.1 = internal global %Struct.RetValue.0 zeroinitializer
@Struct.RetValue.2 = internal global %Struct.RetValue.1 zeroinitializer
@Struct.RetValue.3 = internal global %Struct.RetValue.2 zeroinitializer
@Struct.RetValue.4 = internal global %Struct.RetValue.3 zeroinitializer
@Struct.RetValue.5 = internal global %Struct.RetValue.4 zeroinitializer
@Struct.RetValue.7 = internal global %Struct.RetValue.5 zeroinitializer
@Struct.RetValue.8 = internal global %Struct.RetValue.6 zeroinitializer
@Struct.RetValue.9 = internal global %Struct.RetValue.7 zeroinitializer
@Struct.RetValue.10 = internal global %Struct.RetValue.8 zeroinitializer
@Struct.RetValue.11 = internal global %Struct.RetValue.9 zeroinitializer
@Struct.RetValue.12 = internal global %Struct.RetValue.10 zeroinitializer
@Struct.RetValue.13 = internal global %Struct.RetValue.11 zeroinitializer
@Struct.RetValue.14 = internal global %Struct.RetValue.12 zeroinitializer
@Struct.RetValue.15 = internal global %Struct.RetValue.13 zeroinitializer
@Struct.RetValue.16 = internal global %Struct.RetValue.14 zeroinitializer
@Struct.RetValue.17 = internal global %Struct.RetValue.15 zeroinitializer
@Struct.RetValue.18 = internal global %Struct.RetValue.16 zeroinitializer
@Struct.RetValue.19 = internal global %Struct.RetValue.17 zeroinitializer
@Struct.RetValue.20 = internal global %Struct.RetValue.18 zeroinitializer
@Struct.RetValue.21 = internal global %Struct.RetValue.19 zeroinitializer
@Struct.RetValue.22 = internal global %Struct.RetValue.20 zeroinitializer
@Struct.RetValue.24 = internal global %Struct.RetValue.21 zeroinitializer
@Struct.RetValue.25 = internal global %Struct.RetValue.22 zeroinitializer
@Struct.RetValue.27 = internal global %Struct.RetValue.23 zeroinitializer
@Struct.RetValue.29 = internal global %Struct.RetValue.24 zeroinitializer
@Struct.RetValue.30 = internal global %Struct.RetValue.25 zeroinitializer
@Struct.RetValue.31 = internal global %Struct.RetValue.26 zeroinitializer
@Struct.RetValue.33 = internal global %Struct.RetValue.27 zeroinitializer
@Struct.RetValue.35 = internal global %Struct.RetValue.28 zeroinitializer
@Struct.RetValue.36 = internal global %Struct.RetValue.29 zeroinitializer
@Struct.RetValue.38 = internal global %Struct.RetValue.30 zeroinitializer
@Struct.RetValue.40 = internal global %Struct.RetValue.31 zeroinitializer
@Struct.RetValue.41 = internal global %Struct.RetValue.32 zeroinitializer
@Struct.RetValue.42 = internal global %Struct.RetValue.33 zeroinitializer
@Struct.RetValue.43 = internal global %Struct.RetValue.34 zeroinitializer
@Struct.RetValue.45 = internal global %Struct.RetValue.35 zeroinitializer
@Struct.RetValue.46 = internal global %Struct.RetValue.36 zeroinitializer
@Struct.RetValue.47 = internal global %Struct.RetValue.37 zeroinitializer
@Struct.RetValue.48 = internal global %Struct.RetValue.38 zeroinitializer
@Struct.RetValue.49 = internal global %Struct.RetValue.39 zeroinitializer
@Struct.RetValue.50 = internal global %Struct.RetValue.40 zeroinitializer
@Struct.RetValue.51 = internal global %Struct.RetValue.41 zeroinitializer
@Struct.RetValue.52 = internal global %Struct.RetValue.42 zeroinitializer
@Struct.RetValue.54 = internal global %Struct.RetValue.43 zeroinitializer
@Struct.RetValue.56 = internal global %Struct.RetValue.44 zeroinitializer
@Struct.RetValue.58 = internal global %Struct.RetValue.45 zeroinitializer

; Function Attrs: noinline nounwind optnone sspstrong
define dso_local void @bi_init(i32 %zipfile) #0 {
entry:
  %zipfile.addr = alloca i32, align 4
  store i32 %zipfile, i32* %zipfile.addr, align 4
  %0 = load i32, i32* %zipfile.addr, align 4
  store i32 %0, i32* @zfile, align 4
  store i16 0, i16* @bi_buf, align 2
  store i32 0, i32* @bi_valid, align 4
  %1 = load i32, i32* @zfile, align 4
  %cmp = icmp ne i32 %1, -1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 (...)* bitcast (i32 (i8*, i32)* @file_read to i32 (...)*), i32 (...)** @read_buf, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: noinline optnone sspstrong
define dso_local void @send_bits(i32 %value, i32 %length) #1 {
entry:
  %length.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  store i32 %length, i32* %length.addr, align 4
  store i32 %value, i32* %value.addr, align 4
  %0 = load i32, i32* @bi_valid, align 4
  %1 = load i32, i32* %length.addr, align 4
  %sub = sub nsw i32 16, %1
  %cmp = icmp sgt i32 %0, %sub
  br i1 %cmp, label %CallOutFuncBB, label %if.else35

CallOutFuncBB:                                    ; preds = %entry
  call void @if.then.OutLineFunc(i32* %value.addr, i32* %length.addr)
  br label %if.end41

if.else35:                                        ; preds = %entry
  %2 = load i32, i32* %value.addr, align 4
  %3 = load i32, i32* @bi_valid, align 4
  %shl36 = shl i32 %2, %3
  %4 = load i16, i16* @bi_buf, align 2
  %conv37 = zext i16 %4 to i32
  %or38 = or i32 %conv37, %shl36
  %conv39 = trunc i32 %or38 to i16
  store i16 %conv39, i16* @bi_buf, align 2
  %5 = load i32, i32* %length.addr, align 4
  %6 = load i32, i32* @bi_valid, align 4
  %add40 = add nsw i32 %6, %5
  store i32 %add40, i32* @bi_valid, align 4
  br label %if.end41

if.end41:                                         ; preds = %CallOutFuncBB, %if.else35
  ret void
}

; Function Attrs: noinline optnone sspstrong
define dso_local void @bi_windup() #1 {
entry:
  %0 = load i32, i32* @bi_valid, align 4
  %cmp = icmp sgt i32 %0, 8
  %RetValuePtr = alloca i32, align 4
  %RetValuePtr51 = alloca i32, align 4
  br i1 %cmp, label %if.then, label %CallOutFuncBB

if.then:                                          ; preds = %entry
  %1 = load i32, i32* @outcnt, align 4
  %cmp1 = icmp ult i32 %1, 16382
  br i1 %cmp1, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.then
  %2 = load i16, i16* @bi_buf, align 2
  %conv = zext i16 %2 to i32
  %and = and i32 %conv, 255
  %conv3 = trunc i32 %and to i8
  %3 = load i32, i32* @outcnt, align 4
  %inc = add i32 %3, 1
  store i32 %inc, i32* @outcnt, align 4
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i32 0, i32 %3
  store i8 %conv3, i8* %arrayidx, align 1
  %4 = load i16, i16* @bi_buf, align 2
  %conv4 = zext i16 %4 to i32
  %shr = ashr i32 %conv4, 8
  %conv5 = trunc i32 %shr to i8
  %5 = load i32, i32* @outcnt, align 4
  %inc6 = add i32 %5, 1
  store i32 %inc6, i32* @outcnt, align 4
  %arrayidx7 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i32 0, i32 %5
  store i8 %conv5, i8* %arrayidx7, align 1
  br label %if.end25

if.else:                                          ; preds = %if.then
  %6 = load i16, i16* @bi_buf, align 2
  %conv8 = zext i16 %6 to i32
  %and9 = and i32 %conv8, 255
  %conv10 = trunc i32 %and9 to i8
  %7 = load i32, i32* @outcnt, align 4
  %inc11 = add i32 %7, 1
  store i32 %inc11, i32* @outcnt, align 4
  %arrayidx12 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i32 0, i32 %7
  store i8 %conv10, i8* %arrayidx12, align 1
  %8 = load i32, i32* @outcnt, align 4
  %cmp13 = icmp eq i32 %8, 16384
  br i1 %cmp13, label %if.then15, label %if.end

if.then15:                                        ; preds = %if.else
  br label %entry.flush_outbuf.Clone1

entry.flush_outbuf.Clone1:                        ; preds = %if.then15
  %9 = load i32, i32* @outcnt, align 4
  %cmp.flush_outbuf.Clone2 = icmp eq i32 %9, 0
  br i1 %cmp.flush_outbuf.Clone2, label %if.then.flush_outbuf.Clone3, label %if.end.flush_outbuf.Clone4

if.then.flush_outbuf.Clone3:                      ; preds = %entry.flush_outbuf.Clone1
  br label %return.flush_outbuf.Clone6

if.end.flush_outbuf.Clone4:                       ; preds = %entry.flush_outbuf.Clone1
  %10 = load i32, i32* @outcnt, align 4
  %11 = load i32, i32* @ofd, align 4
  br label %entry.write_buf.Clone

entry.write_buf.Clone:                            ; preds = %if.end.flush_outbuf.Clone4
  %cnt.addr.write_buf.Clone = alloca i32, align 4
  %buf.addr.write_buf.Clone = alloca i8*, align 4
  %fd.addr.write_buf.Clone = alloca i32, align 4
  %n.write_buf.Clone = alloca i32, align 4
  store i32 %10, i32* %cnt.addr.write_buf.Clone, align 4
  store i8* getelementptr inbounds ([18432 x i8], [18432 x i8]* @outbuf, i32 0, i32 0), i8** %buf.addr.write_buf.Clone, align 4
  store i32 %11, i32* %fd.addr.write_buf.Clone, align 4
  br label %while.cond.write_buf.Clone

while.cond.write_buf.Clone:                       ; preds = %if.end.write_buf.Clone, %entry.write_buf.Clone
  %12 = load i32, i32* %cnt.addr.write_buf.Clone, align 4
  %13 = load i8*, i8** %buf.addr.write_buf.Clone, align 4
  %14 = load i32, i32* %fd.addr.write_buf.Clone, align 4
  br label %entry.spec_write.Clone22

entry.spec_write.Clone22:                         ; preds = %while.cond.write_buf.Clone
  %size.addr.spec_write.Clone23 = alloca i32, align 4
  %buf.addr.spec_write.Clone24 = alloca i8*, align 4
  %fd.addr.spec_write.Clone25 = alloca i32, align 4
  store i32 %12, i32* %size.addr.spec_write.Clone23, align 4
  store i8* %13, i8** %buf.addr.spec_write.Clone24, align 4
  store i32 %14, i32* %fd.addr.spec_write.Clone25, align 4
  %15 = load i32, i32* @dbglvl, align 4
  %cmp.spec_write.Clone26 = icmp slt i32 4, %15
  br i1 %cmp.spec_write.Clone26, label %if.then.spec_write.Clone27, label %if.end.spec_write.Clone29

if.then.spec_write.Clone27:                       ; preds = %entry.spec_write.Clone22
  %16 = load i32, i32* %size.addr.spec_write.Clone23, align 4
  %17 = load i8*, i8** %buf.addr.spec_write.Clone24, align 4
  %18 = load i32, i32* %fd.addr.spec_write.Clone25, align 4
  %call.spec_write.Clone28 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @"??_C@_0BK@GKFGHPHN@spec_write?3?5?$CFd?0?5?$CFx?0?5?$CFd?5?$DN?5?$AA@", i32 0, i32 0), i32 %18, i8* %17, i32 %16)
  br label %if.end.spec_write.Clone29

if.end.spec_write.Clone29:                        ; preds = %if.then.spec_write.Clone27, %entry.spec_write.Clone22
  %19 = load i32, i32* %fd.addr.spec_write.Clone25, align 4
  %cmp1.spec_write.Clone30 = icmp sgt i32 %19, 3
  br i1 %cmp1.spec_write.Clone30, label %if.then2.spec_write.Clone31, label %if.end5.spec_write.Clone35

if.then2.spec_write.Clone31:                      ; preds = %if.end.spec_write.Clone29
  %20 = load i32, i32* %fd.addr.spec_write.Clone25, align 4
  %call3.spec_write.Clone32 = call %struct._iobuf* @__iob_func()
  %arrayidx.spec_write.Clone33 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.spec_write.Clone32, i32 2
  %call4.spec_write.Clone34 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.spec_write.Clone33, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"??_C@_0CD@NANFEFEM@spec_write?3?5fd?$DN?$CFd?0?5?$DO?5MAX_SPEC_FD@", i32 0, i32 0), i32 %20)
  call void @exit(i32 1) #7
  unreachable

if.end5.spec_write.Clone35:                       ; preds = %if.end.spec_write.Clone29
  %21 = load i32, i32* %fd.addr.spec_write.Clone25, align 4
  %arrayidx6.spec_write.Clone36 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %21
  %buf7.spec_write.Clone37 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx6.spec_write.Clone36, i32 0, i32 3
  %22 = load i8*, i8** %buf7.spec_write.Clone37, align 4
  %23 = load i32, i32* %fd.addr.spec_write.Clone25, align 4
  %arrayidx8.spec_write.Clone38 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %23
  %pos.spec_write.Clone39 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx8.spec_write.Clone38, i32 0, i32 2
  %24 = load i32, i32* %pos.spec_write.Clone39, align 4
  %arrayidx9.spec_write.Clone40 = getelementptr inbounds i8, i8* %22, i32 %24
  %25 = load i8*, i8** %buf.addr.spec_write.Clone24, align 4
  %26 = load i32, i32* %size.addr.spec_write.Clone23, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %arrayidx9.spec_write.Clone40, i8* align 1 %25, i32 %26, i1 false)
  %27 = load i32, i32* %size.addr.spec_write.Clone23, align 4
  %28 = load i32, i32* %fd.addr.spec_write.Clone25, align 4
  %arrayidx10.spec_write.Clone41 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %28
  %len.spec_write.Clone42 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx10.spec_write.Clone41, i32 0, i32 1
  %29 = load i32, i32* %len.spec_write.Clone42, align 4
  %add.spec_write.Clone43 = add nsw i32 %29, %27
  store i32 %add.spec_write.Clone43, i32* %len.spec_write.Clone42, align 4
  %30 = load i32, i32* %size.addr.spec_write.Clone23, align 4
  %31 = load i32, i32* %fd.addr.spec_write.Clone25, align 4
  %arrayidx11.spec_write.Clone44 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %31
  %pos12.spec_write.Clone45 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx11.spec_write.Clone44, i32 0, i32 2
  %32 = load i32, i32* %pos12.spec_write.Clone45, align 4
  %add13.spec_write.Clone46 = add nsw i32 %32, %30
  store i32 %add13.spec_write.Clone46, i32* %pos12.spec_write.Clone45, align 4
  %33 = load i32, i32* @dbglvl, align 4
  %cmp14.spec_write.Clone47 = icmp slt i32 4, %33
  br i1 %cmp14.spec_write.Clone47, label %if.then15.spec_write.Clone48, label %if.end17.spec_write.Clone50

if.then15.spec_write.Clone48:                     ; preds = %if.end5.spec_write.Clone35
  %34 = load i32, i32* %size.addr.spec_write.Clone23, align 4
  %call16.spec_write.Clone49 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"??_C@_03PMGGPEJJ@?$CFd?6?$AA@", i32 0, i32 0), i32 %34)
  br label %if.end17.spec_write.Clone50

if.end17.spec_write.Clone50:                      ; preds = %if.then15.spec_write.Clone48, %if.end5.spec_write.Clone35
  %35 = load i32, i32* %size.addr.spec_write.Clone23, align 4
  store i32 %35, i32* %RetValuePtr51
  br label %while.cond.write_buf.Clone.Split

while.cond.write_buf.Clone.Split:                 ; preds = %if.end17.spec_write.Clone50
  %RetValue52 = load i32, i32* %RetValuePtr51
  store i32 %RetValue52, i32* %n.write_buf.Clone, align 4
  %36 = load i32, i32* %cnt.addr.write_buf.Clone, align 4
  %cmp.write_buf.Clone = icmp ne i32 %RetValue52, %36
  br i1 %cmp.write_buf.Clone, label %while.body.write_buf.Clone, label %while.end.write_buf.Clone

while.body.write_buf.Clone:                       ; preds = %while.cond.write_buf.Clone.Split
  %37 = load i32, i32* %n.write_buf.Clone, align 4
  %cmp1.write_buf.Clone = icmp eq i32 %37, -1
  br i1 %cmp1.write_buf.Clone, label %if.then.write_buf.Clone, label %if.end.write_buf.Clone

if.then.write_buf.Clone:                          ; preds = %while.body.write_buf.Clone
  call void @write_error()
  br label %if.end.write_buf.Clone

if.end.write_buf.Clone:                           ; preds = %if.then.write_buf.Clone, %while.body.write_buf.Clone
  %38 = load i32, i32* %n.write_buf.Clone, align 4
  %39 = load i32, i32* %cnt.addr.write_buf.Clone, align 4
  %sub.write_buf.Clone = sub i32 %39, %38
  store i32 %sub.write_buf.Clone, i32* %cnt.addr.write_buf.Clone, align 4
  %40 = load i8*, i8** %buf.addr.write_buf.Clone, align 4
  %41 = load i32, i32* %n.write_buf.Clone, align 4
  %add.ptr.write_buf.Clone = getelementptr inbounds i8, i8* %40, i32 %41
  store i8* %add.ptr.write_buf.Clone, i8** %buf.addr.write_buf.Clone, align 4
  br label %while.cond.write_buf.Clone

while.end.write_buf.Clone:                        ; preds = %while.cond.write_buf.Clone.Split
  br label %if.end.flush_outbuf.Clone4.Split

if.end.flush_outbuf.Clone4.Split:                 ; preds = %while.end.write_buf.Clone
  %42 = load i32, i32* @outcnt, align 4
  %43 = load i32, i32* @bytes_out, align 4
  %add.flush_outbuf.Clone5 = add i32 %43, %42
  store i32 %add.flush_outbuf.Clone5, i32* @bytes_out, align 4
  store i32 0, i32* @outcnt, align 4
  br label %return.flush_outbuf.Clone6

return.flush_outbuf.Clone6:                       ; preds = %if.end.flush_outbuf.Clone4.Split, %if.then.flush_outbuf.Clone3
  br label %if.then15.Split

if.then15.Split:                                  ; preds = %return.flush_outbuf.Clone6
  br label %if.end

if.end:                                           ; preds = %if.then15.Split, %if.else
  %44 = load i16, i16* @bi_buf, align 2
  %conv16 = zext i16 %44 to i32
  %shr17 = ashr i32 %conv16, 8
  %conv18 = trunc i32 %shr17 to i8
  %45 = load i32, i32* @outcnt, align 4
  %inc19 = add i32 %45, 1
  store i32 %inc19, i32* @outcnt, align 4
  %arrayidx20 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i32 0, i32 %45
  store i8 %conv18, i8* %arrayidx20, align 1
  %46 = load i32, i32* @outcnt, align 4
  %cmp21 = icmp eq i32 %46, 16384
  br i1 %cmp21, label %if.then23, label %if.end24

if.then23:                                        ; preds = %if.end
  br label %entry.flush_outbuf.Clone

entry.flush_outbuf.Clone:                         ; preds = %if.then23
  %47 = load i32, i32* @outcnt, align 4
  %cmp.flush_outbuf.Clone = icmp eq i32 %47, 0
  br i1 %cmp.flush_outbuf.Clone, label %if.then.flush_outbuf.Clone, label %if.end.flush_outbuf.Clone

if.then.flush_outbuf.Clone:                       ; preds = %entry.flush_outbuf.Clone
  br label %return.flush_outbuf.Clone

if.end.flush_outbuf.Clone:                        ; preds = %entry.flush_outbuf.Clone
  %48 = load i32, i32* @outcnt, align 4
  %49 = load i32, i32* @ofd, align 4
  br label %entry.write_buf.Clone7

entry.write_buf.Clone7:                           ; preds = %if.end.flush_outbuf.Clone
  %cnt.addr.write_buf.Clone8 = alloca i32, align 4
  %buf.addr.write_buf.Clone9 = alloca i8*, align 4
  %fd.addr.write_buf.Clone10 = alloca i32, align 4
  %n.write_buf.Clone11 = alloca i32, align 4
  store i32 %48, i32* %cnt.addr.write_buf.Clone8, align 4
  store i8* getelementptr inbounds ([18432 x i8], [18432 x i8]* @outbuf, i32 0, i32 0), i8** %buf.addr.write_buf.Clone9, align 4
  store i32 %49, i32* %fd.addr.write_buf.Clone10, align 4
  br label %while.cond.write_buf.Clone12

while.cond.write_buf.Clone12:                     ; preds = %if.end.write_buf.Clone18, %entry.write_buf.Clone7
  %50 = load i32, i32* %cnt.addr.write_buf.Clone8, align 4
  %51 = load i8*, i8** %buf.addr.write_buf.Clone9, align 4
  %52 = load i32, i32* %fd.addr.write_buf.Clone10, align 4
  br label %entry.spec_write.Clone

entry.spec_write.Clone:                           ; preds = %while.cond.write_buf.Clone12
  %size.addr.spec_write.Clone = alloca i32, align 4
  %buf.addr.spec_write.Clone = alloca i8*, align 4
  %fd.addr.spec_write.Clone = alloca i32, align 4
  store i32 %50, i32* %size.addr.spec_write.Clone, align 4
  store i8* %51, i8** %buf.addr.spec_write.Clone, align 4
  store i32 %52, i32* %fd.addr.spec_write.Clone, align 4
  %53 = load i32, i32* @dbglvl, align 4
  %cmp.spec_write.Clone = icmp slt i32 4, %53
  br i1 %cmp.spec_write.Clone, label %if.then.spec_write.Clone, label %if.end.spec_write.Clone

if.then.spec_write.Clone:                         ; preds = %entry.spec_write.Clone
  %54 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %55 = load i8*, i8** %buf.addr.spec_write.Clone, align 4
  %56 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %call.spec_write.Clone = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @"??_C@_0BK@GKFGHPHN@spec_write?3?5?$CFd?0?5?$CFx?0?5?$CFd?5?$DN?5?$AA@", i32 0, i32 0), i32 %56, i8* %55, i32 %54)
  br label %if.end.spec_write.Clone

if.end.spec_write.Clone:                          ; preds = %if.then.spec_write.Clone, %entry.spec_write.Clone
  %57 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %cmp1.spec_write.Clone = icmp sgt i32 %57, 3
  br i1 %cmp1.spec_write.Clone, label %if.then2.spec_write.Clone, label %if.end5.spec_write.Clone

if.then2.spec_write.Clone:                        ; preds = %if.end.spec_write.Clone
  %58 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %call3.spec_write.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx.spec_write.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.spec_write.Clone, i32 2
  %call4.spec_write.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.spec_write.Clone, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"??_C@_0CD@NANFEFEM@spec_write?3?5fd?$DN?$CFd?0?5?$DO?5MAX_SPEC_FD@", i32 0, i32 0), i32 %58)
  call void @exit(i32 1) #7
  unreachable

if.end5.spec_write.Clone:                         ; preds = %if.end.spec_write.Clone
  %59 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx6.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %59
  %buf7.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx6.spec_write.Clone, i32 0, i32 3
  %60 = load i8*, i8** %buf7.spec_write.Clone, align 4
  %61 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx8.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %61
  %pos.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx8.spec_write.Clone, i32 0, i32 2
  %62 = load i32, i32* %pos.spec_write.Clone, align 4
  %arrayidx9.spec_write.Clone = getelementptr inbounds i8, i8* %60, i32 %62
  %63 = load i8*, i8** %buf.addr.spec_write.Clone, align 4
  %64 = load i32, i32* %size.addr.spec_write.Clone, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %arrayidx9.spec_write.Clone, i8* align 1 %63, i32 %64, i1 false)
  %65 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %66 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx10.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %66
  %len.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx10.spec_write.Clone, i32 0, i32 1
  %67 = load i32, i32* %len.spec_write.Clone, align 4
  %add.spec_write.Clone = add nsw i32 %67, %65
  store i32 %add.spec_write.Clone, i32* %len.spec_write.Clone, align 4
  %68 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %69 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx11.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %69
  %pos12.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx11.spec_write.Clone, i32 0, i32 2
  %70 = load i32, i32* %pos12.spec_write.Clone, align 4
  %add13.spec_write.Clone = add nsw i32 %70, %68
  store i32 %add13.spec_write.Clone, i32* %pos12.spec_write.Clone, align 4
  %71 = load i32, i32* @dbglvl, align 4
  %cmp14.spec_write.Clone = icmp slt i32 4, %71
  br i1 %cmp14.spec_write.Clone, label %if.then15.spec_write.Clone, label %if.end17.spec_write.Clone

if.then15.spec_write.Clone:                       ; preds = %if.end5.spec_write.Clone
  %72 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %call16.spec_write.Clone = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"??_C@_03PMGGPEJJ@?$CFd?6?$AA@", i32 0, i32 0), i32 %72)
  br label %if.end17.spec_write.Clone

if.end17.spec_write.Clone:                        ; preds = %if.then15.spec_write.Clone, %if.end5.spec_write.Clone
  %73 = load i32, i32* %size.addr.spec_write.Clone, align 4
  store i32 %73, i32* %RetValuePtr
  br label %while.cond.write_buf.Clone12.Split

while.cond.write_buf.Clone12.Split:               ; preds = %if.end17.spec_write.Clone
  %RetValue = load i32, i32* %RetValuePtr
  store i32 %RetValue, i32* %n.write_buf.Clone11, align 4
  %74 = load i32, i32* %cnt.addr.write_buf.Clone8, align 4
  %cmp.write_buf.Clone14 = icmp ne i32 %RetValue, %74
  br i1 %cmp.write_buf.Clone14, label %while.body.write_buf.Clone15, label %while.end.write_buf.Clone21

while.body.write_buf.Clone15:                     ; preds = %while.cond.write_buf.Clone12.Split
  %75 = load i32, i32* %n.write_buf.Clone11, align 4
  %cmp1.write_buf.Clone16 = icmp eq i32 %75, -1
  br i1 %cmp1.write_buf.Clone16, label %if.then.write_buf.Clone17, label %if.end.write_buf.Clone18

if.then.write_buf.Clone17:                        ; preds = %while.body.write_buf.Clone15
  call void @write_error()
  br label %if.end.write_buf.Clone18

if.end.write_buf.Clone18:                         ; preds = %if.then.write_buf.Clone17, %while.body.write_buf.Clone15
  %76 = load i32, i32* %n.write_buf.Clone11, align 4
  %77 = load i32, i32* %cnt.addr.write_buf.Clone8, align 4
  %sub.write_buf.Clone19 = sub i32 %77, %76
  store i32 %sub.write_buf.Clone19, i32* %cnt.addr.write_buf.Clone8, align 4
  %78 = load i8*, i8** %buf.addr.write_buf.Clone9, align 4
  %79 = load i32, i32* %n.write_buf.Clone11, align 4
  %add.ptr.write_buf.Clone20 = getelementptr inbounds i8, i8* %78, i32 %79
  store i8* %add.ptr.write_buf.Clone20, i8** %buf.addr.write_buf.Clone9, align 4
  br label %while.cond.write_buf.Clone12

while.end.write_buf.Clone21:                      ; preds = %while.cond.write_buf.Clone12.Split
  br label %if.end.flush_outbuf.Clone.Split

if.end.flush_outbuf.Clone.Split:                  ; preds = %while.end.write_buf.Clone21
  %80 = load i32, i32* @outcnt, align 4
  %81 = load i32, i32* @bytes_out, align 4
  %add.flush_outbuf.Clone = add i32 %81, %80
  store i32 %add.flush_outbuf.Clone, i32* @bytes_out, align 4
  store i32 0, i32* @outcnt, align 4
  br label %return.flush_outbuf.Clone

return.flush_outbuf.Clone:                        ; preds = %if.end.flush_outbuf.Clone.Split, %if.then.flush_outbuf.Clone
  br label %if.then23.Split

if.then23.Split:                                  ; preds = %return.flush_outbuf.Clone
  br label %if.end24

if.end24:                                         ; preds = %if.then23.Split, %if.end
  br label %if.end25

if.end25:                                         ; preds = %if.end24, %if.then2
  br label %if.end38

CallOutFuncBB:                                    ; preds = %entry
  call void @if.else26.OutLineFunc()
  br label %if.end38

if.end38:                                         ; preds = %CallOutFuncBB, %if.end25
  store i16 0, i16* @bi_buf, align 2
  store i32 0, i32* @bi_valid, align 4
  ret void
}

; Function Attrs: noinline optnone sspstrong
define dso_local void @copy_block(i8* %buf, i32 %len, i32 %header) #1 {
entry:
  %header.addr = alloca i32, align 4
  %len.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 4
  store i32 %header, i32* %header.addr, align 4
  store i32 %len, i32* %len.addr, align 4
  store i8* %buf, i8** %buf.addr, align 4
  call void @bi_windup()
  %0 = load i32, i32* %header.addr, align 4
  %tobool = icmp ne i32 %0, 0
  %RetValuePtr = alloca i32, align 4
  %RetValuePtr93 = alloca i32, align 4
  %RetValuePtr124 = alloca i32, align 4
  %RetValuePtr155 = alloca i32, align 4
  br i1 %tobool, label %if.then, label %if.end69

if.then:                                          ; preds = %entry
  %1 = load i32, i32* @outcnt, align 4
  %cmp = icmp ult i32 %1, 16382
  br i1 %cmp, label %if.then1, label %if.else

if.then1:                                         ; preds = %if.then
  %2 = load i32, i32* %len.addr, align 4
  %conv = trunc i32 %2 to i16
  %conv2 = zext i16 %conv to i32
  %and = and i32 %conv2, 255
  %conv3 = trunc i32 %and to i8
  %3 = load i32, i32* @outcnt, align 4
  %inc = add i32 %3, 1
  store i32 %inc, i32* @outcnt, align 4
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i32 0, i32 %3
  store i8 %conv3, i8* %arrayidx, align 1
  %4 = load i32, i32* %len.addr, align 4
  %conv4 = trunc i32 %4 to i16
  %conv5 = zext i16 %conv4 to i32
  %shr = ashr i32 %conv5, 8
  %conv6 = trunc i32 %shr to i8
  %5 = load i32, i32* @outcnt, align 4
  %inc7 = add i32 %5, 1
  store i32 %inc7, i32* @outcnt, align 4
  %arrayidx8 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i32 0, i32 %5
  store i8 %conv6, i8* %arrayidx8, align 1
  br label %if.end28

if.else:                                          ; preds = %if.then
  %6 = load i32, i32* %len.addr, align 4
  %conv9 = trunc i32 %6 to i16
  %conv10 = zext i16 %conv9 to i32
  %and11 = and i32 %conv10, 255
  %conv12 = trunc i32 %and11 to i8
  %7 = load i32, i32* @outcnt, align 4
  %inc13 = add i32 %7, 1
  store i32 %inc13, i32* @outcnt, align 4
  %arrayidx14 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i32 0, i32 %7
  store i8 %conv12, i8* %arrayidx14, align 1
  %8 = load i32, i32* @outcnt, align 4
  %cmp15 = icmp eq i32 %8, 16384
  br i1 %cmp15, label %if.then17, label %if.end

if.then17:                                        ; preds = %if.else
  br label %entry.flush_outbuf.Clone13

entry.flush_outbuf.Clone13:                       ; preds = %if.then17
  %9 = load i32, i32* @outcnt, align 4
  %cmp.flush_outbuf.Clone14 = icmp eq i32 %9, 0
  br i1 %cmp.flush_outbuf.Clone14, label %if.then.flush_outbuf.Clone15, label %if.end.flush_outbuf.Clone16

if.then.flush_outbuf.Clone15:                     ; preds = %entry.flush_outbuf.Clone13
  br label %return.flush_outbuf.Clone18

if.end.flush_outbuf.Clone16:                      ; preds = %entry.flush_outbuf.Clone13
  %10 = load i32, i32* @outcnt, align 4
  %11 = load i32, i32* @ofd, align 4
  br label %entry.write_buf.Clone

entry.write_buf.Clone:                            ; preds = %if.end.flush_outbuf.Clone16
  %cnt.addr.write_buf.Clone = alloca i32, align 4
  %buf.addr.write_buf.Clone = alloca i8*, align 4
  %fd.addr.write_buf.Clone = alloca i32, align 4
  %n.write_buf.Clone = alloca i32, align 4
  store i32 %10, i32* %cnt.addr.write_buf.Clone, align 4
  store i8* getelementptr inbounds ([18432 x i8], [18432 x i8]* @outbuf, i32 0, i32 0), i8** %buf.addr.write_buf.Clone, align 4
  store i32 %11, i32* %fd.addr.write_buf.Clone, align 4
  br label %while.cond.write_buf.Clone

while.cond.write_buf.Clone:                       ; preds = %if.end.write_buf.Clone, %entry.write_buf.Clone
  %12 = load i32, i32* %cnt.addr.write_buf.Clone, align 4
  %13 = load i8*, i8** %buf.addr.write_buf.Clone, align 4
  %14 = load i32, i32* %fd.addr.write_buf.Clone, align 4
  br label %entry.spec_write.Clone126

entry.spec_write.Clone126:                        ; preds = %while.cond.write_buf.Clone
  %size.addr.spec_write.Clone127 = alloca i32, align 4
  %buf.addr.spec_write.Clone128 = alloca i8*, align 4
  %fd.addr.spec_write.Clone129 = alloca i32, align 4
  store i32 %12, i32* %size.addr.spec_write.Clone127, align 4
  store i8* %13, i8** %buf.addr.spec_write.Clone128, align 4
  store i32 %14, i32* %fd.addr.spec_write.Clone129, align 4
  %15 = load i32, i32* @dbglvl, align 4
  %cmp.spec_write.Clone130 = icmp slt i32 4, %15
  br i1 %cmp.spec_write.Clone130, label %if.then.spec_write.Clone131, label %if.end.spec_write.Clone133

if.then.spec_write.Clone131:                      ; preds = %entry.spec_write.Clone126
  %16 = load i32, i32* %size.addr.spec_write.Clone127, align 4
  %17 = load i8*, i8** %buf.addr.spec_write.Clone128, align 4
  %18 = load i32, i32* %fd.addr.spec_write.Clone129, align 4
  %call.spec_write.Clone132 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @"??_C@_0BK@GKFGHPHN@spec_write?3?5?$CFd?0?5?$CFx?0?5?$CFd?5?$DN?5?$AA@", i32 0, i32 0), i32 %18, i8* %17, i32 %16)
  br label %if.end.spec_write.Clone133

if.end.spec_write.Clone133:                       ; preds = %if.then.spec_write.Clone131, %entry.spec_write.Clone126
  %19 = load i32, i32* %fd.addr.spec_write.Clone129, align 4
  %cmp1.spec_write.Clone134 = icmp sgt i32 %19, 3
  br i1 %cmp1.spec_write.Clone134, label %if.then2.spec_write.Clone135, label %if.end5.spec_write.Clone139

if.then2.spec_write.Clone135:                     ; preds = %if.end.spec_write.Clone133
  %20 = load i32, i32* %fd.addr.spec_write.Clone129, align 4
  %call3.spec_write.Clone136 = call %struct._iobuf* @__iob_func()
  %arrayidx.spec_write.Clone137 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.spec_write.Clone136, i32 2
  %call4.spec_write.Clone138 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.spec_write.Clone137, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"??_C@_0CD@NANFEFEM@spec_write?3?5fd?$DN?$CFd?0?5?$DO?5MAX_SPEC_FD@", i32 0, i32 0), i32 %20)
  call void @exit(i32 1) #7
  unreachable

if.end5.spec_write.Clone139:                      ; preds = %if.end.spec_write.Clone133
  %21 = load i32, i32* %fd.addr.spec_write.Clone129, align 4
  %arrayidx6.spec_write.Clone140 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %21
  %buf7.spec_write.Clone141 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx6.spec_write.Clone140, i32 0, i32 3
  %22 = load i8*, i8** %buf7.spec_write.Clone141, align 4
  %23 = load i32, i32* %fd.addr.spec_write.Clone129, align 4
  %arrayidx8.spec_write.Clone142 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %23
  %pos.spec_write.Clone143 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx8.spec_write.Clone142, i32 0, i32 2
  %24 = load i32, i32* %pos.spec_write.Clone143, align 4
  %arrayidx9.spec_write.Clone144 = getelementptr inbounds i8, i8* %22, i32 %24
  %25 = load i8*, i8** %buf.addr.spec_write.Clone128, align 4
  %26 = load i32, i32* %size.addr.spec_write.Clone127, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %arrayidx9.spec_write.Clone144, i8* align 1 %25, i32 %26, i1 false)
  %27 = load i32, i32* %size.addr.spec_write.Clone127, align 4
  %28 = load i32, i32* %fd.addr.spec_write.Clone129, align 4
  %arrayidx10.spec_write.Clone145 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %28
  %len.spec_write.Clone146 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx10.spec_write.Clone145, i32 0, i32 1
  %29 = load i32, i32* %len.spec_write.Clone146, align 4
  %add.spec_write.Clone147 = add nsw i32 %29, %27
  store i32 %add.spec_write.Clone147, i32* %len.spec_write.Clone146, align 4
  %30 = load i32, i32* %size.addr.spec_write.Clone127, align 4
  %31 = load i32, i32* %fd.addr.spec_write.Clone129, align 4
  %arrayidx11.spec_write.Clone148 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %31
  %pos12.spec_write.Clone149 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx11.spec_write.Clone148, i32 0, i32 2
  %32 = load i32, i32* %pos12.spec_write.Clone149, align 4
  %add13.spec_write.Clone150 = add nsw i32 %32, %30
  store i32 %add13.spec_write.Clone150, i32* %pos12.spec_write.Clone149, align 4
  %33 = load i32, i32* @dbglvl, align 4
  %cmp14.spec_write.Clone151 = icmp slt i32 4, %33
  br i1 %cmp14.spec_write.Clone151, label %if.then15.spec_write.Clone152, label %if.end17.spec_write.Clone154

if.then15.spec_write.Clone152:                    ; preds = %if.end5.spec_write.Clone139
  %34 = load i32, i32* %size.addr.spec_write.Clone127, align 4
  %call16.spec_write.Clone153 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"??_C@_03PMGGPEJJ@?$CFd?6?$AA@", i32 0, i32 0), i32 %34)
  br label %if.end17.spec_write.Clone154

if.end17.spec_write.Clone154:                     ; preds = %if.then15.spec_write.Clone152, %if.end5.spec_write.Clone139
  %35 = load i32, i32* %size.addr.spec_write.Clone127, align 4
  store i32 %35, i32* %RetValuePtr155
  br label %while.cond.write_buf.Clone.Split

while.cond.write_buf.Clone.Split:                 ; preds = %if.end17.spec_write.Clone154
  %RetValue156 = load i32, i32* %RetValuePtr155
  store i32 %RetValue156, i32* %n.write_buf.Clone, align 4
  %36 = load i32, i32* %cnt.addr.write_buf.Clone, align 4
  %cmp.write_buf.Clone = icmp ne i32 %RetValue156, %36
  br i1 %cmp.write_buf.Clone, label %while.body.write_buf.Clone, label %while.end.write_buf.Clone

while.body.write_buf.Clone:                       ; preds = %while.cond.write_buf.Clone.Split
  %37 = load i32, i32* %n.write_buf.Clone, align 4
  %cmp1.write_buf.Clone = icmp eq i32 %37, -1
  br i1 %cmp1.write_buf.Clone, label %if.then.write_buf.Clone, label %if.end.write_buf.Clone

if.then.write_buf.Clone:                          ; preds = %while.body.write_buf.Clone
  call void @write_error()
  br label %if.end.write_buf.Clone

if.end.write_buf.Clone:                           ; preds = %if.then.write_buf.Clone, %while.body.write_buf.Clone
  %38 = load i32, i32* %n.write_buf.Clone, align 4
  %39 = load i32, i32* %cnt.addr.write_buf.Clone, align 4
  %sub.write_buf.Clone = sub i32 %39, %38
  store i32 %sub.write_buf.Clone, i32* %cnt.addr.write_buf.Clone, align 4
  %40 = load i8*, i8** %buf.addr.write_buf.Clone, align 4
  %41 = load i32, i32* %n.write_buf.Clone, align 4
  %add.ptr.write_buf.Clone = getelementptr inbounds i8, i8* %40, i32 %41
  store i8* %add.ptr.write_buf.Clone, i8** %buf.addr.write_buf.Clone, align 4
  br label %while.cond.write_buf.Clone

while.end.write_buf.Clone:                        ; preds = %while.cond.write_buf.Clone.Split
  br label %if.end.flush_outbuf.Clone16.Split

if.end.flush_outbuf.Clone16.Split:                ; preds = %while.end.write_buf.Clone
  %42 = load i32, i32* @outcnt, align 4
  %43 = load i32, i32* @bytes_out, align 4
  %add.flush_outbuf.Clone17 = add i32 %43, %42
  store i32 %add.flush_outbuf.Clone17, i32* @bytes_out, align 4
  store i32 0, i32* @outcnt, align 4
  br label %return.flush_outbuf.Clone18

return.flush_outbuf.Clone18:                      ; preds = %if.end.flush_outbuf.Clone16.Split, %if.then.flush_outbuf.Clone15
  br label %if.then17.Split

if.then17.Split:                                  ; preds = %return.flush_outbuf.Clone18
  br label %if.end

if.end:                                           ; preds = %if.then17.Split, %if.else
  %44 = load i32, i32* %len.addr, align 4
  %conv18 = trunc i32 %44 to i16
  %conv19 = zext i16 %conv18 to i32
  %shr20 = ashr i32 %conv19, 8
  %conv21 = trunc i32 %shr20 to i8
  %45 = load i32, i32* @outcnt, align 4
  %inc22 = add i32 %45, 1
  store i32 %inc22, i32* @outcnt, align 4
  %arrayidx23 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i32 0, i32 %45
  store i8 %conv21, i8* %arrayidx23, align 1
  %46 = load i32, i32* @outcnt, align 4
  %cmp24 = icmp eq i32 %46, 16384
  br i1 %cmp24, label %if.then26, label %if.end27

if.then26:                                        ; preds = %if.end
  br label %entry.flush_outbuf.Clone7

entry.flush_outbuf.Clone7:                        ; preds = %if.then26
  %47 = load i32, i32* @outcnt, align 4
  %cmp.flush_outbuf.Clone8 = icmp eq i32 %47, 0
  br i1 %cmp.flush_outbuf.Clone8, label %if.then.flush_outbuf.Clone9, label %if.end.flush_outbuf.Clone10

if.then.flush_outbuf.Clone9:                      ; preds = %entry.flush_outbuf.Clone7
  br label %return.flush_outbuf.Clone12

if.end.flush_outbuf.Clone10:                      ; preds = %entry.flush_outbuf.Clone7
  %48 = load i32, i32* @outcnt, align 4
  %49 = load i32, i32* @ofd, align 4
  br label %entry.write_buf.Clone19

entry.write_buf.Clone19:                          ; preds = %if.end.flush_outbuf.Clone10
  %cnt.addr.write_buf.Clone20 = alloca i32, align 4
  %buf.addr.write_buf.Clone21 = alloca i8*, align 4
  %fd.addr.write_buf.Clone22 = alloca i32, align 4
  %n.write_buf.Clone23 = alloca i32, align 4
  store i32 %48, i32* %cnt.addr.write_buf.Clone20, align 4
  store i8* getelementptr inbounds ([18432 x i8], [18432 x i8]* @outbuf, i32 0, i32 0), i8** %buf.addr.write_buf.Clone21, align 4
  store i32 %49, i32* %fd.addr.write_buf.Clone22, align 4
  br label %while.cond.write_buf.Clone24

while.cond.write_buf.Clone24:                     ; preds = %if.end.write_buf.Clone30, %entry.write_buf.Clone19
  %50 = load i32, i32* %cnt.addr.write_buf.Clone20, align 4
  %51 = load i8*, i8** %buf.addr.write_buf.Clone21, align 4
  %52 = load i32, i32* %fd.addr.write_buf.Clone22, align 4
  br label %entry.spec_write.Clone95

entry.spec_write.Clone95:                         ; preds = %while.cond.write_buf.Clone24
  %size.addr.spec_write.Clone96 = alloca i32, align 4
  %buf.addr.spec_write.Clone97 = alloca i8*, align 4
  %fd.addr.spec_write.Clone98 = alloca i32, align 4
  store i32 %50, i32* %size.addr.spec_write.Clone96, align 4
  store i8* %51, i8** %buf.addr.spec_write.Clone97, align 4
  store i32 %52, i32* %fd.addr.spec_write.Clone98, align 4
  %53 = load i32, i32* @dbglvl, align 4
  %cmp.spec_write.Clone99 = icmp slt i32 4, %53
  br i1 %cmp.spec_write.Clone99, label %if.then.spec_write.Clone100, label %if.end.spec_write.Clone102

if.then.spec_write.Clone100:                      ; preds = %entry.spec_write.Clone95
  %54 = load i32, i32* %size.addr.spec_write.Clone96, align 4
  %55 = load i8*, i8** %buf.addr.spec_write.Clone97, align 4
  %56 = load i32, i32* %fd.addr.spec_write.Clone98, align 4
  %call.spec_write.Clone101 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @"??_C@_0BK@GKFGHPHN@spec_write?3?5?$CFd?0?5?$CFx?0?5?$CFd?5?$DN?5?$AA@", i32 0, i32 0), i32 %56, i8* %55, i32 %54)
  br label %if.end.spec_write.Clone102

if.end.spec_write.Clone102:                       ; preds = %if.then.spec_write.Clone100, %entry.spec_write.Clone95
  %57 = load i32, i32* %fd.addr.spec_write.Clone98, align 4
  %cmp1.spec_write.Clone103 = icmp sgt i32 %57, 3
  br i1 %cmp1.spec_write.Clone103, label %if.then2.spec_write.Clone104, label %if.end5.spec_write.Clone108

if.then2.spec_write.Clone104:                     ; preds = %if.end.spec_write.Clone102
  %58 = load i32, i32* %fd.addr.spec_write.Clone98, align 4
  %call3.spec_write.Clone105 = call %struct._iobuf* @__iob_func()
  %arrayidx.spec_write.Clone106 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.spec_write.Clone105, i32 2
  %call4.spec_write.Clone107 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.spec_write.Clone106, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"??_C@_0CD@NANFEFEM@spec_write?3?5fd?$DN?$CFd?0?5?$DO?5MAX_SPEC_FD@", i32 0, i32 0), i32 %58)
  call void @exit(i32 1) #7
  unreachable

if.end5.spec_write.Clone108:                      ; preds = %if.end.spec_write.Clone102
  %59 = load i32, i32* %fd.addr.spec_write.Clone98, align 4
  %arrayidx6.spec_write.Clone109 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %59
  %buf7.spec_write.Clone110 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx6.spec_write.Clone109, i32 0, i32 3
  %60 = load i8*, i8** %buf7.spec_write.Clone110, align 4
  %61 = load i32, i32* %fd.addr.spec_write.Clone98, align 4
  %arrayidx8.spec_write.Clone111 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %61
  %pos.spec_write.Clone112 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx8.spec_write.Clone111, i32 0, i32 2
  %62 = load i32, i32* %pos.spec_write.Clone112, align 4
  %arrayidx9.spec_write.Clone113 = getelementptr inbounds i8, i8* %60, i32 %62
  %63 = load i8*, i8** %buf.addr.spec_write.Clone97, align 4
  %64 = load i32, i32* %size.addr.spec_write.Clone96, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %arrayidx9.spec_write.Clone113, i8* align 1 %63, i32 %64, i1 false)
  %65 = load i32, i32* %size.addr.spec_write.Clone96, align 4
  %66 = load i32, i32* %fd.addr.spec_write.Clone98, align 4
  %arrayidx10.spec_write.Clone114 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %66
  %len.spec_write.Clone115 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx10.spec_write.Clone114, i32 0, i32 1
  %67 = load i32, i32* %len.spec_write.Clone115, align 4
  %add.spec_write.Clone116 = add nsw i32 %67, %65
  store i32 %add.spec_write.Clone116, i32* %len.spec_write.Clone115, align 4
  %68 = load i32, i32* %size.addr.spec_write.Clone96, align 4
  %69 = load i32, i32* %fd.addr.spec_write.Clone98, align 4
  %arrayidx11.spec_write.Clone117 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %69
  %pos12.spec_write.Clone118 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx11.spec_write.Clone117, i32 0, i32 2
  %70 = load i32, i32* %pos12.spec_write.Clone118, align 4
  %add13.spec_write.Clone119 = add nsw i32 %70, %68
  store i32 %add13.spec_write.Clone119, i32* %pos12.spec_write.Clone118, align 4
  %71 = load i32, i32* @dbglvl, align 4
  %cmp14.spec_write.Clone120 = icmp slt i32 4, %71
  br i1 %cmp14.spec_write.Clone120, label %if.then15.spec_write.Clone121, label %if.end17.spec_write.Clone123

if.then15.spec_write.Clone121:                    ; preds = %if.end5.spec_write.Clone108
  %72 = load i32, i32* %size.addr.spec_write.Clone96, align 4
  %call16.spec_write.Clone122 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"??_C@_03PMGGPEJJ@?$CFd?6?$AA@", i32 0, i32 0), i32 %72)
  br label %if.end17.spec_write.Clone123

if.end17.spec_write.Clone123:                     ; preds = %if.then15.spec_write.Clone121, %if.end5.spec_write.Clone108
  %73 = load i32, i32* %size.addr.spec_write.Clone96, align 4
  store i32 %73, i32* %RetValuePtr124
  br label %while.cond.write_buf.Clone24.Split

while.cond.write_buf.Clone24.Split:               ; preds = %if.end17.spec_write.Clone123
  %RetValue125 = load i32, i32* %RetValuePtr124
  store i32 %RetValue125, i32* %n.write_buf.Clone23, align 4
  %74 = load i32, i32* %cnt.addr.write_buf.Clone20, align 4
  %cmp.write_buf.Clone26 = icmp ne i32 %RetValue125, %74
  br i1 %cmp.write_buf.Clone26, label %while.body.write_buf.Clone27, label %while.end.write_buf.Clone33

while.body.write_buf.Clone27:                     ; preds = %while.cond.write_buf.Clone24.Split
  %75 = load i32, i32* %n.write_buf.Clone23, align 4
  %cmp1.write_buf.Clone28 = icmp eq i32 %75, -1
  br i1 %cmp1.write_buf.Clone28, label %if.then.write_buf.Clone29, label %if.end.write_buf.Clone30

if.then.write_buf.Clone29:                        ; preds = %while.body.write_buf.Clone27
  call void @write_error()
  br label %if.end.write_buf.Clone30

if.end.write_buf.Clone30:                         ; preds = %if.then.write_buf.Clone29, %while.body.write_buf.Clone27
  %76 = load i32, i32* %n.write_buf.Clone23, align 4
  %77 = load i32, i32* %cnt.addr.write_buf.Clone20, align 4
  %sub.write_buf.Clone31 = sub i32 %77, %76
  store i32 %sub.write_buf.Clone31, i32* %cnt.addr.write_buf.Clone20, align 4
  %78 = load i8*, i8** %buf.addr.write_buf.Clone21, align 4
  %79 = load i32, i32* %n.write_buf.Clone23, align 4
  %add.ptr.write_buf.Clone32 = getelementptr inbounds i8, i8* %78, i32 %79
  store i8* %add.ptr.write_buf.Clone32, i8** %buf.addr.write_buf.Clone21, align 4
  br label %while.cond.write_buf.Clone24

while.end.write_buf.Clone33:                      ; preds = %while.cond.write_buf.Clone24.Split
  br label %if.end.flush_outbuf.Clone10.Split

if.end.flush_outbuf.Clone10.Split:                ; preds = %while.end.write_buf.Clone33
  %80 = load i32, i32* @outcnt, align 4
  %81 = load i32, i32* @bytes_out, align 4
  %add.flush_outbuf.Clone11 = add i32 %81, %80
  store i32 %add.flush_outbuf.Clone11, i32* @bytes_out, align 4
  store i32 0, i32* @outcnt, align 4
  br label %return.flush_outbuf.Clone12

return.flush_outbuf.Clone12:                      ; preds = %if.end.flush_outbuf.Clone10.Split, %if.then.flush_outbuf.Clone9
  br label %if.then26.Split

if.then26.Split:                                  ; preds = %return.flush_outbuf.Clone12
  br label %if.end27

if.end27:                                         ; preds = %if.then26.Split, %if.end
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.then1
  %82 = load i32, i32* @outcnt, align 4
  %cmp29 = icmp ult i32 %82, 16382
  br i1 %cmp29, label %if.then31, label %if.else45

if.then31:                                        ; preds = %if.end28
  %83 = load i32, i32* %len.addr, align 4
  %neg = xor i32 %83, -1
  %conv32 = trunc i32 %neg to i16
  %conv33 = zext i16 %conv32 to i32
  %and34 = and i32 %conv33, 255
  %conv35 = trunc i32 %and34 to i8
  %84 = load i32, i32* @outcnt, align 4
  %inc36 = add i32 %84, 1
  store i32 %inc36, i32* @outcnt, align 4
  %arrayidx37 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i32 0, i32 %84
  store i8 %conv35, i8* %arrayidx37, align 1
  %85 = load i32, i32* %len.addr, align 4
  %neg38 = xor i32 %85, -1
  %conv39 = trunc i32 %neg38 to i16
  %conv40 = zext i16 %conv39 to i32
  %shr41 = ashr i32 %conv40, 8
  %conv42 = trunc i32 %shr41 to i8
  %86 = load i32, i32* @outcnt, align 4
  %inc43 = add i32 %86, 1
  store i32 %inc43, i32* @outcnt, align 4
  %arrayidx44 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i32 0, i32 %86
  store i8 %conv42, i8* %arrayidx44, align 1
  br label %if.end68

if.else45:                                        ; preds = %if.end28
  %87 = load i32, i32* %len.addr, align 4
  %neg46 = xor i32 %87, -1
  %conv47 = trunc i32 %neg46 to i16
  %conv48 = zext i16 %conv47 to i32
  %and49 = and i32 %conv48, 255
  %conv50 = trunc i32 %and49 to i8
  %88 = load i32, i32* @outcnt, align 4
  %inc51 = add i32 %88, 1
  store i32 %inc51, i32* @outcnt, align 4
  %arrayidx52 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i32 0, i32 %88
  store i8 %conv50, i8* %arrayidx52, align 1
  %89 = load i32, i32* @outcnt, align 4
  %cmp53 = icmp eq i32 %89, 16384
  br i1 %cmp53, label %if.then55, label %if.end56

if.then55:                                        ; preds = %if.else45
  br label %entry.flush_outbuf.Clone1

entry.flush_outbuf.Clone1:                        ; preds = %if.then55
  %90 = load i32, i32* @outcnt, align 4
  %cmp.flush_outbuf.Clone2 = icmp eq i32 %90, 0
  br i1 %cmp.flush_outbuf.Clone2, label %if.then.flush_outbuf.Clone3, label %if.end.flush_outbuf.Clone4

if.then.flush_outbuf.Clone3:                      ; preds = %entry.flush_outbuf.Clone1
  br label %return.flush_outbuf.Clone6

if.end.flush_outbuf.Clone4:                       ; preds = %entry.flush_outbuf.Clone1
  %91 = load i32, i32* @outcnt, align 4
  %92 = load i32, i32* @ofd, align 4
  br label %entry.write_buf.Clone34

entry.write_buf.Clone34:                          ; preds = %if.end.flush_outbuf.Clone4
  %cnt.addr.write_buf.Clone35 = alloca i32, align 4
  %buf.addr.write_buf.Clone36 = alloca i8*, align 4
  %fd.addr.write_buf.Clone37 = alloca i32, align 4
  %n.write_buf.Clone38 = alloca i32, align 4
  store i32 %91, i32* %cnt.addr.write_buf.Clone35, align 4
  store i8* getelementptr inbounds ([18432 x i8], [18432 x i8]* @outbuf, i32 0, i32 0), i8** %buf.addr.write_buf.Clone36, align 4
  store i32 %92, i32* %fd.addr.write_buf.Clone37, align 4
  br label %while.cond.write_buf.Clone39

while.cond.write_buf.Clone39:                     ; preds = %if.end.write_buf.Clone45, %entry.write_buf.Clone34
  %93 = load i32, i32* %cnt.addr.write_buf.Clone35, align 4
  %94 = load i8*, i8** %buf.addr.write_buf.Clone36, align 4
  %95 = load i32, i32* %fd.addr.write_buf.Clone37, align 4
  br label %entry.spec_write.Clone64

entry.spec_write.Clone64:                         ; preds = %while.cond.write_buf.Clone39
  %size.addr.spec_write.Clone65 = alloca i32, align 4
  %buf.addr.spec_write.Clone66 = alloca i8*, align 4
  %fd.addr.spec_write.Clone67 = alloca i32, align 4
  store i32 %93, i32* %size.addr.spec_write.Clone65, align 4
  store i8* %94, i8** %buf.addr.spec_write.Clone66, align 4
  store i32 %95, i32* %fd.addr.spec_write.Clone67, align 4
  %96 = load i32, i32* @dbglvl, align 4
  %cmp.spec_write.Clone68 = icmp slt i32 4, %96
  br i1 %cmp.spec_write.Clone68, label %if.then.spec_write.Clone69, label %if.end.spec_write.Clone71

if.then.spec_write.Clone69:                       ; preds = %entry.spec_write.Clone64
  %97 = load i32, i32* %size.addr.spec_write.Clone65, align 4
  %98 = load i8*, i8** %buf.addr.spec_write.Clone66, align 4
  %99 = load i32, i32* %fd.addr.spec_write.Clone67, align 4
  %call.spec_write.Clone70 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @"??_C@_0BK@GKFGHPHN@spec_write?3?5?$CFd?0?5?$CFx?0?5?$CFd?5?$DN?5?$AA@", i32 0, i32 0), i32 %99, i8* %98, i32 %97)
  br label %if.end.spec_write.Clone71

if.end.spec_write.Clone71:                        ; preds = %if.then.spec_write.Clone69, %entry.spec_write.Clone64
  %100 = load i32, i32* %fd.addr.spec_write.Clone67, align 4
  %cmp1.spec_write.Clone72 = icmp sgt i32 %100, 3
  br i1 %cmp1.spec_write.Clone72, label %if.then2.spec_write.Clone73, label %if.end5.spec_write.Clone77

if.then2.spec_write.Clone73:                      ; preds = %if.end.spec_write.Clone71
  %101 = load i32, i32* %fd.addr.spec_write.Clone67, align 4
  %call3.spec_write.Clone74 = call %struct._iobuf* @__iob_func()
  %arrayidx.spec_write.Clone75 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.spec_write.Clone74, i32 2
  %call4.spec_write.Clone76 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.spec_write.Clone75, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"??_C@_0CD@NANFEFEM@spec_write?3?5fd?$DN?$CFd?0?5?$DO?5MAX_SPEC_FD@", i32 0, i32 0), i32 %101)
  call void @exit(i32 1) #7
  unreachable

if.end5.spec_write.Clone77:                       ; preds = %if.end.spec_write.Clone71
  %102 = load i32, i32* %fd.addr.spec_write.Clone67, align 4
  %arrayidx6.spec_write.Clone78 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %102
  %buf7.spec_write.Clone79 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx6.spec_write.Clone78, i32 0, i32 3
  %103 = load i8*, i8** %buf7.spec_write.Clone79, align 4
  %104 = load i32, i32* %fd.addr.spec_write.Clone67, align 4
  %arrayidx8.spec_write.Clone80 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %104
  %pos.spec_write.Clone81 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx8.spec_write.Clone80, i32 0, i32 2
  %105 = load i32, i32* %pos.spec_write.Clone81, align 4
  %arrayidx9.spec_write.Clone82 = getelementptr inbounds i8, i8* %103, i32 %105
  %106 = load i8*, i8** %buf.addr.spec_write.Clone66, align 4
  %107 = load i32, i32* %size.addr.spec_write.Clone65, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %arrayidx9.spec_write.Clone82, i8* align 1 %106, i32 %107, i1 false)
  %108 = load i32, i32* %size.addr.spec_write.Clone65, align 4
  %109 = load i32, i32* %fd.addr.spec_write.Clone67, align 4
  %arrayidx10.spec_write.Clone83 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %109
  %len.spec_write.Clone84 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx10.spec_write.Clone83, i32 0, i32 1
  %110 = load i32, i32* %len.spec_write.Clone84, align 4
  %add.spec_write.Clone85 = add nsw i32 %110, %108
  store i32 %add.spec_write.Clone85, i32* %len.spec_write.Clone84, align 4
  %111 = load i32, i32* %size.addr.spec_write.Clone65, align 4
  %112 = load i32, i32* %fd.addr.spec_write.Clone67, align 4
  %arrayidx11.spec_write.Clone86 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %112
  %pos12.spec_write.Clone87 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx11.spec_write.Clone86, i32 0, i32 2
  %113 = load i32, i32* %pos12.spec_write.Clone87, align 4
  %add13.spec_write.Clone88 = add nsw i32 %113, %111
  store i32 %add13.spec_write.Clone88, i32* %pos12.spec_write.Clone87, align 4
  %114 = load i32, i32* @dbglvl, align 4
  %cmp14.spec_write.Clone89 = icmp slt i32 4, %114
  br i1 %cmp14.spec_write.Clone89, label %if.then15.spec_write.Clone90, label %if.end17.spec_write.Clone92

if.then15.spec_write.Clone90:                     ; preds = %if.end5.spec_write.Clone77
  %115 = load i32, i32* %size.addr.spec_write.Clone65, align 4
  %call16.spec_write.Clone91 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"??_C@_03PMGGPEJJ@?$CFd?6?$AA@", i32 0, i32 0), i32 %115)
  br label %if.end17.spec_write.Clone92

if.end17.spec_write.Clone92:                      ; preds = %if.then15.spec_write.Clone90, %if.end5.spec_write.Clone77
  %116 = load i32, i32* %size.addr.spec_write.Clone65, align 4
  store i32 %116, i32* %RetValuePtr93
  br label %while.cond.write_buf.Clone39.Split

while.cond.write_buf.Clone39.Split:               ; preds = %if.end17.spec_write.Clone92
  %RetValue94 = load i32, i32* %RetValuePtr93
  store i32 %RetValue94, i32* %n.write_buf.Clone38, align 4
  %117 = load i32, i32* %cnt.addr.write_buf.Clone35, align 4
  %cmp.write_buf.Clone41 = icmp ne i32 %RetValue94, %117
  br i1 %cmp.write_buf.Clone41, label %while.body.write_buf.Clone42, label %while.end.write_buf.Clone48

while.body.write_buf.Clone42:                     ; preds = %while.cond.write_buf.Clone39.Split
  %118 = load i32, i32* %n.write_buf.Clone38, align 4
  %cmp1.write_buf.Clone43 = icmp eq i32 %118, -1
  br i1 %cmp1.write_buf.Clone43, label %if.then.write_buf.Clone44, label %if.end.write_buf.Clone45

if.then.write_buf.Clone44:                        ; preds = %while.body.write_buf.Clone42
  call void @write_error()
  br label %if.end.write_buf.Clone45

if.end.write_buf.Clone45:                         ; preds = %if.then.write_buf.Clone44, %while.body.write_buf.Clone42
  %119 = load i32, i32* %n.write_buf.Clone38, align 4
  %120 = load i32, i32* %cnt.addr.write_buf.Clone35, align 4
  %sub.write_buf.Clone46 = sub i32 %120, %119
  store i32 %sub.write_buf.Clone46, i32* %cnt.addr.write_buf.Clone35, align 4
  %121 = load i8*, i8** %buf.addr.write_buf.Clone36, align 4
  %122 = load i32, i32* %n.write_buf.Clone38, align 4
  %add.ptr.write_buf.Clone47 = getelementptr inbounds i8, i8* %121, i32 %122
  store i8* %add.ptr.write_buf.Clone47, i8** %buf.addr.write_buf.Clone36, align 4
  br label %while.cond.write_buf.Clone39

while.end.write_buf.Clone48:                      ; preds = %while.cond.write_buf.Clone39.Split
  br label %if.end.flush_outbuf.Clone4.Split

if.end.flush_outbuf.Clone4.Split:                 ; preds = %while.end.write_buf.Clone48
  %123 = load i32, i32* @outcnt, align 4
  %124 = load i32, i32* @bytes_out, align 4
  %add.flush_outbuf.Clone5 = add i32 %124, %123
  store i32 %add.flush_outbuf.Clone5, i32* @bytes_out, align 4
  store i32 0, i32* @outcnt, align 4
  br label %return.flush_outbuf.Clone6

return.flush_outbuf.Clone6:                       ; preds = %if.end.flush_outbuf.Clone4.Split, %if.then.flush_outbuf.Clone3
  br label %if.then55.Split

if.then55.Split:                                  ; preds = %return.flush_outbuf.Clone6
  br label %if.end56

if.end56:                                         ; preds = %if.then55.Split, %if.else45
  %125 = load i32, i32* %len.addr, align 4
  %neg57 = xor i32 %125, -1
  %conv58 = trunc i32 %neg57 to i16
  %conv59 = zext i16 %conv58 to i32
  %shr60 = ashr i32 %conv59, 8
  %conv61 = trunc i32 %shr60 to i8
  %126 = load i32, i32* @outcnt, align 4
  %inc62 = add i32 %126, 1
  store i32 %inc62, i32* @outcnt, align 4
  %arrayidx63 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i32 0, i32 %126
  store i8 %conv61, i8* %arrayidx63, align 1
  %127 = load i32, i32* @outcnt, align 4
  %cmp64 = icmp eq i32 %127, 16384
  br i1 %cmp64, label %if.then66, label %if.end67

if.then66:                                        ; preds = %if.end56
  br label %entry.flush_outbuf.Clone

entry.flush_outbuf.Clone:                         ; preds = %if.then66
  %128 = load i32, i32* @outcnt, align 4
  %cmp.flush_outbuf.Clone = icmp eq i32 %128, 0
  br i1 %cmp.flush_outbuf.Clone, label %if.then.flush_outbuf.Clone, label %if.end.flush_outbuf.Clone

if.then.flush_outbuf.Clone:                       ; preds = %entry.flush_outbuf.Clone
  br label %return.flush_outbuf.Clone

if.end.flush_outbuf.Clone:                        ; preds = %entry.flush_outbuf.Clone
  %129 = load i32, i32* @outcnt, align 4
  %130 = load i32, i32* @ofd, align 4
  br label %entry.write_buf.Clone49

entry.write_buf.Clone49:                          ; preds = %if.end.flush_outbuf.Clone
  %cnt.addr.write_buf.Clone50 = alloca i32, align 4
  %buf.addr.write_buf.Clone51 = alloca i8*, align 4
  %fd.addr.write_buf.Clone52 = alloca i32, align 4
  %n.write_buf.Clone53 = alloca i32, align 4
  store i32 %129, i32* %cnt.addr.write_buf.Clone50, align 4
  store i8* getelementptr inbounds ([18432 x i8], [18432 x i8]* @outbuf, i32 0, i32 0), i8** %buf.addr.write_buf.Clone51, align 4
  store i32 %130, i32* %fd.addr.write_buf.Clone52, align 4
  br label %while.cond.write_buf.Clone54

while.cond.write_buf.Clone54:                     ; preds = %if.end.write_buf.Clone60, %entry.write_buf.Clone49
  %131 = load i32, i32* %cnt.addr.write_buf.Clone50, align 4
  %132 = load i8*, i8** %buf.addr.write_buf.Clone51, align 4
  %133 = load i32, i32* %fd.addr.write_buf.Clone52, align 4
  br label %entry.spec_write.Clone

entry.spec_write.Clone:                           ; preds = %while.cond.write_buf.Clone54
  %size.addr.spec_write.Clone = alloca i32, align 4
  %buf.addr.spec_write.Clone = alloca i8*, align 4
  %fd.addr.spec_write.Clone = alloca i32, align 4
  store i32 %131, i32* %size.addr.spec_write.Clone, align 4
  store i8* %132, i8** %buf.addr.spec_write.Clone, align 4
  store i32 %133, i32* %fd.addr.spec_write.Clone, align 4
  %134 = load i32, i32* @dbglvl, align 4
  %cmp.spec_write.Clone = icmp slt i32 4, %134
  br i1 %cmp.spec_write.Clone, label %if.then.spec_write.Clone, label %if.end.spec_write.Clone

if.then.spec_write.Clone:                         ; preds = %entry.spec_write.Clone
  %135 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %136 = load i8*, i8** %buf.addr.spec_write.Clone, align 4
  %137 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %call.spec_write.Clone = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @"??_C@_0BK@GKFGHPHN@spec_write?3?5?$CFd?0?5?$CFx?0?5?$CFd?5?$DN?5?$AA@", i32 0, i32 0), i32 %137, i8* %136, i32 %135)
  br label %if.end.spec_write.Clone

if.end.spec_write.Clone:                          ; preds = %if.then.spec_write.Clone, %entry.spec_write.Clone
  %138 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %cmp1.spec_write.Clone = icmp sgt i32 %138, 3
  br i1 %cmp1.spec_write.Clone, label %if.then2.spec_write.Clone, label %if.end5.spec_write.Clone

if.then2.spec_write.Clone:                        ; preds = %if.end.spec_write.Clone
  %139 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %call3.spec_write.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx.spec_write.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.spec_write.Clone, i32 2
  %call4.spec_write.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.spec_write.Clone, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"??_C@_0CD@NANFEFEM@spec_write?3?5fd?$DN?$CFd?0?5?$DO?5MAX_SPEC_FD@", i32 0, i32 0), i32 %139)
  call void @exit(i32 1) #7
  unreachable

if.end5.spec_write.Clone:                         ; preds = %if.end.spec_write.Clone
  %140 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx6.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %140
  %buf7.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx6.spec_write.Clone, i32 0, i32 3
  %141 = load i8*, i8** %buf7.spec_write.Clone, align 4
  %142 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx8.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %142
  %pos.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx8.spec_write.Clone, i32 0, i32 2
  %143 = load i32, i32* %pos.spec_write.Clone, align 4
  %arrayidx9.spec_write.Clone = getelementptr inbounds i8, i8* %141, i32 %143
  %144 = load i8*, i8** %buf.addr.spec_write.Clone, align 4
  %145 = load i32, i32* %size.addr.spec_write.Clone, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %arrayidx9.spec_write.Clone, i8* align 1 %144, i32 %145, i1 false)
  %146 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %147 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx10.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %147
  %len.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx10.spec_write.Clone, i32 0, i32 1
  %148 = load i32, i32* %len.spec_write.Clone, align 4
  %add.spec_write.Clone = add nsw i32 %148, %146
  store i32 %add.spec_write.Clone, i32* %len.spec_write.Clone, align 4
  %149 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %150 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx11.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %150
  %pos12.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx11.spec_write.Clone, i32 0, i32 2
  %151 = load i32, i32* %pos12.spec_write.Clone, align 4
  %add13.spec_write.Clone = add nsw i32 %151, %149
  store i32 %add13.spec_write.Clone, i32* %pos12.spec_write.Clone, align 4
  %152 = load i32, i32* @dbglvl, align 4
  %cmp14.spec_write.Clone = icmp slt i32 4, %152
  br i1 %cmp14.spec_write.Clone, label %if.then15.spec_write.Clone, label %if.end17.spec_write.Clone

if.then15.spec_write.Clone:                       ; preds = %if.end5.spec_write.Clone
  %153 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %call16.spec_write.Clone = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"??_C@_03PMGGPEJJ@?$CFd?6?$AA@", i32 0, i32 0), i32 %153)
  br label %if.end17.spec_write.Clone

if.end17.spec_write.Clone:                        ; preds = %if.then15.spec_write.Clone, %if.end5.spec_write.Clone
  %154 = load i32, i32* %size.addr.spec_write.Clone, align 4
  store i32 %154, i32* %RetValuePtr
  br label %while.cond.write_buf.Clone54.Split

while.cond.write_buf.Clone54.Split:               ; preds = %if.end17.spec_write.Clone
  %RetValue = load i32, i32* %RetValuePtr
  store i32 %RetValue, i32* %n.write_buf.Clone53, align 4
  %155 = load i32, i32* %cnt.addr.write_buf.Clone50, align 4
  %cmp.write_buf.Clone56 = icmp ne i32 %RetValue, %155
  br i1 %cmp.write_buf.Clone56, label %while.body.write_buf.Clone57, label %while.end.write_buf.Clone63

while.body.write_buf.Clone57:                     ; preds = %while.cond.write_buf.Clone54.Split
  %156 = load i32, i32* %n.write_buf.Clone53, align 4
  %cmp1.write_buf.Clone58 = icmp eq i32 %156, -1
  br i1 %cmp1.write_buf.Clone58, label %if.then.write_buf.Clone59, label %if.end.write_buf.Clone60

if.then.write_buf.Clone59:                        ; preds = %while.body.write_buf.Clone57
  call void @write_error()
  br label %if.end.write_buf.Clone60

if.end.write_buf.Clone60:                         ; preds = %if.then.write_buf.Clone59, %while.body.write_buf.Clone57
  %157 = load i32, i32* %n.write_buf.Clone53, align 4
  %158 = load i32, i32* %cnt.addr.write_buf.Clone50, align 4
  %sub.write_buf.Clone61 = sub i32 %158, %157
  store i32 %sub.write_buf.Clone61, i32* %cnt.addr.write_buf.Clone50, align 4
  %159 = load i8*, i8** %buf.addr.write_buf.Clone51, align 4
  %160 = load i32, i32* %n.write_buf.Clone53, align 4
  %add.ptr.write_buf.Clone62 = getelementptr inbounds i8, i8* %159, i32 %160
  store i8* %add.ptr.write_buf.Clone62, i8** %buf.addr.write_buf.Clone51, align 4
  br label %while.cond.write_buf.Clone54

while.end.write_buf.Clone63:                      ; preds = %while.cond.write_buf.Clone54.Split
  br label %if.end.flush_outbuf.Clone.Split

if.end.flush_outbuf.Clone.Split:                  ; preds = %while.end.write_buf.Clone63
  %161 = load i32, i32* @outcnt, align 4
  %162 = load i32, i32* @bytes_out, align 4
  %add.flush_outbuf.Clone = add i32 %162, %161
  store i32 %add.flush_outbuf.Clone, i32* @bytes_out, align 4
  store i32 0, i32* @outcnt, align 4
  br label %return.flush_outbuf.Clone

return.flush_outbuf.Clone:                        ; preds = %if.end.flush_outbuf.Clone.Split, %if.then.flush_outbuf.Clone
  br label %if.then66.Split

if.then66.Split:                                  ; preds = %return.flush_outbuf.Clone
  br label %if.end67

if.end67:                                         ; preds = %if.then66.Split, %if.end56
  br label %if.end68

if.end68:                                         ; preds = %if.end67, %if.then31
  br label %if.end69

if.end69:                                         ; preds = %if.end68, %entry
  br label %while.cond

while.cond:                                       ; preds = %CallOutFuncBB, %if.end69
  %163 = load i32, i32* %len.addr, align 4
  %dec = add i32 %163, -1
  store i32 %dec, i32* %len.addr, align 4
  %tobool70 = icmp ne i32 %163, 0
  br i1 %tobool70, label %CallOutFuncBB, label %while.end

CallOutFuncBB:                                    ; preds = %while.cond
  call void @while.body.OutLineFunc(i8** %buf.addr)
  %164 = getelementptr inbounds %Struct.RetValue.1, %Struct.RetValue.1* @Struct.RetValue.2, i32 0, i32 0
  %165 = load i8**, i8*** %164, align 4
  %166 = load i8*, i8** %165, align 4
  store i8* %166, i8** %buf.addr
  br label %while.cond

while.end:                                        ; preds = %while.cond
  ret void
}

; Function Attrs: noinline optnone sspstrong
define dso_local void @lm_init(i32 %pack_level, i16* %flags) #1 {
entry:
  %flags.addr = alloca i16*, align 4
  %pack_level.addr = alloca i32, align 4
  %j = alloca i32, align 4
  store i16* %flags, i16** %flags.addr, align 4
  store i32 %pack_level, i32* %pack_level.addr, align 4
  %0 = load i32, i32* %pack_level.addr, align 4
  %cmp = icmp slt i32 %0, 1
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %pack_level.addr, align 4
  %cmp1 = icmp sgt i32 %1, 9
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %entry.error.Clone

entry.error.Clone:                                ; preds = %if.then
  %m.addr.error.Clone = alloca i8*, align 4
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @"??_C@_0P@FAMONJE@bad?5pack?5level?$AA@", i32 0, i32 0), i8** %m.addr.error.Clone, align 4
  %2 = load i8*, i8** %m.addr.error.Clone, align 4
  %3 = load i8*, i8** @progname, align 4
  %call.error.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx.error.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.error.Clone, i32 2
  %call1.error.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.error.Clone, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @"??_C@_0N@ODCEBLNH@?6?$CFs?3?5?$CFs?3?5?$CFs?6?$AA@", i32 0, i32 0), i8* %3, i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0), i8* %2)
  br label %entry.abort_gzip.Clone

entry.abort_gzip.Clone:                           ; preds = %entry.error.Clone
  %4 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone = icmp ne i32 %4, 0
  br i1 %tobool.abort_gzip.Clone, label %if.then.abort_gzip.Clone, label %if.end.abort_gzip.Clone

if.then.abort_gzip.Clone:                         ; preds = %entry.abort_gzip.Clone
  %5 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %5)
  %call1.abort_gzip.Clone = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone

if.end.abort_gzip.Clone:                          ; preds = %if.then.abort_gzip.Clone, %entry.abort_gzip.Clone
  br label %entry.do_exit.Clone

entry.do_exit.Clone:                              ; preds = %if.end.abort_gzip.Clone
  %exitcode.addr.do_exit.Clone = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone, align 4
  %6 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone = icmp ne i32 %6, 0
  br i1 %tobool.do_exit.Clone, label %if.then.do_exit.Clone, label %if.end.do_exit.Clone

if.then.do_exit.Clone:                            ; preds = %entry.do_exit.Clone
  %7 = load i32, i32* %exitcode.addr.do_exit.Clone, align 4
  call void @exit(i32 %7) #7
  unreachable

if.end.do_exit.Clone:                             ; preds = %entry.do_exit.Clone
  store i32 1, i32* @do_exit.in_exit, align 4
  %8 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone = icmp ne i8* %8, null
  br i1 %cmp.do_exit.Clone, label %if.then1.do_exit.Clone, label %if.end2.do_exit.Clone

if.then1.do_exit.Clone:                           ; preds = %if.end.do_exit.Clone
  %9 = load i8*, i8** @env, align 4
  call void @free(i8* %9) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone

if.end2.do_exit.Clone:                            ; preds = %if.then1.do_exit.Clone, %if.end.do_exit.Clone
  %10 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone = icmp ne i8** %10, null
  br i1 %cmp3.do_exit.Clone, label %if.then4.do_exit.Clone, label %if.end5.do_exit.Clone

if.then4.do_exit.Clone:                           ; preds = %if.end2.do_exit.Clone
  %11 = load i8**, i8*** @args, align 4
  %12 = bitcast i8** %11 to i8*
  call void @free(i8* %12) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone

if.end5.do_exit.Clone:                            ; preds = %if.then4.do_exit.Clone, %if.end2.do_exit.Clone
  %13 = load i32, i32* %exitcode.addr.do_exit.Clone, align 4
  call void @exit(i32 %13) #7
  unreachable

return.do_exit.Clone:                             ; No predecessors!
  br label %if.end.abort_gzip.Clone.Split

if.end.abort_gzip.Clone.Split:                    ; preds = %return.do_exit.Clone
  br label %entry.error.Clone.Split

entry.error.Clone.Split:                          ; preds = %if.end.abort_gzip.Clone.Split
  br label %if.then.Split

if.then.Split:                                    ; preds = %entry.error.Clone.Split
  br label %if.end

if.end:                                           ; preds = %if.then.Split, %lor.lhs.false
  %14 = load i32, i32* %pack_level.addr, align 4
  store i32 %14, i32* @compr_level, align 4
  call void @llvm.memset.p0i8.i32(i8* align 1 bitcast (i16* getelementptr inbounds ([65536 x i16], [65536 x i16]* @prev, i32 0, i32 32768) to i8*), i8 0, i32 65536, i1 false)
  %15 = load i32, i32* %pack_level.addr, align 4
  %arrayidx = getelementptr inbounds [10 x %struct.config], [10 x %struct.config]* @configuration_table, i32 0, i32 %15
  %max_lazy = getelementptr inbounds %struct.config, %struct.config* %arrayidx, i32 0, i32 1
  %16 = load i16, i16* %max_lazy, align 2
  %conv = zext i16 %16 to i32
  store i32 %conv, i32* @max_lazy_match, align 4
  %17 = load i32, i32* %pack_level.addr, align 4
  %arrayidx2 = getelementptr inbounds [10 x %struct.config], [10 x %struct.config]* @configuration_table, i32 0, i32 %17
  %good_length = getelementptr inbounds %struct.config, %struct.config* %arrayidx2, i32 0, i32 0
  %18 = load i16, i16* %good_length, align 2
  %conv3 = zext i16 %18 to i32
  store i32 %conv3, i32* @good_match, align 4
  %19 = load i32, i32* %pack_level.addr, align 4
  %arrayidx4 = getelementptr inbounds [10 x %struct.config], [10 x %struct.config]* @configuration_table, i32 0, i32 %19
  %nice_length = getelementptr inbounds %struct.config, %struct.config* %arrayidx4, i32 0, i32 2
  %20 = load i16, i16* %nice_length, align 2
  %conv5 = zext i16 %20 to i32
  store i32 %conv5, i32* @nice_match, align 4
  %21 = load i32, i32* %pack_level.addr, align 4
  %arrayidx6 = getelementptr inbounds [10 x %struct.config], [10 x %struct.config]* @configuration_table, i32 0, i32 %21
  %max_chain = getelementptr inbounds %struct.config, %struct.config* %arrayidx6, i32 0, i32 3
  %22 = load i16, i16* %max_chain, align 2
  %conv7 = zext i16 %22 to i32
  store i32 %conv7, i32* @max_chain_length, align 4
  %23 = load i32, i32* %pack_level.addr, align 4
  %cmp8 = icmp eq i32 %23, 1
  br i1 %cmp8, label %if.then10, label %CallOutFuncBB

if.then10:                                        ; preds = %if.end
  %24 = load i16*, i16** %flags.addr, align 4
  %25 = load i16, i16* %24, align 2
  %conv11 = zext i16 %25 to i32
  %or = or i32 %conv11, 4
  %conv12 = trunc i32 %or to i16
  store i16 %conv12, i16* %24, align 2
  br label %if.end20

CallOutFuncBB:                                    ; preds = %if.end
  call void @if.else.OutLineFunc(i32* %pack_level.addr, i16** %flags.addr)
  br label %if.end20

if.end20:                                         ; preds = %CallOutFuncBB, %if.then10
  store i32 0, i32* @strstart, align 4
  store i32 0, i32* @block_start, align 4
  %26 = load i32 (...)*, i32 (...)** @read_buf, align 4
  %callee.knr.cast = bitcast i32 (...)* %26 to i32 (i8*, i32)*
  %call = call i32 %callee.knr.cast(i8* getelementptr inbounds ([65536 x i8], [65536 x i8]* @window, i32 0, i32 0), i32 65536)
  store i32 %call, i32* @lookahead, align 4
  %27 = load i32, i32* @lookahead, align 4
  %cmp21 = icmp eq i32 %27, 0
  br i1 %cmp21, label %if.then26, label %lor.lhs.false23

lor.lhs.false23:                                  ; preds = %if.end20
  %28 = load i32, i32* @lookahead, align 4
  %cmp24 = icmp eq i32 %28, -1
  br i1 %cmp24, label %if.then26, label %if.end27

if.then26:                                        ; preds = %lor.lhs.false23, %if.end20
  store i32 1, i32* @eofile, align 4
  store i32 0, i32* @lookahead, align 4
  br label %for.end

if.end27:                                         ; preds = %lor.lhs.false23
  store i32 0, i32* @eofile, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end27
  %29 = load i32, i32* @lookahead, align 4
  %cmp28 = icmp ult i32 %29, 262
  br i1 %cmp28, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %30 = load i32, i32* @eofile, align 4
  %tobool = icmp ne i32 %30, 0
  %lnot = xor i1 %tobool, true
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %31 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ]
  br i1 %31, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  call void @fill_window()
  br label %while.cond

while.end:                                        ; preds = %land.end
  store i32 0, i32* @ins_h, align 4
  store i32 0, i32* %j, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %while.end
  %32 = load i32, i32* %j, align 4
  %cmp30 = icmp ult i32 %32, 2
  br i1 %cmp30, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %33 = load i32, i32* @ins_h, align 4
  %shl = shl i32 %33, 5
  %34 = load i32, i32* %j, align 4
  %arrayidx32 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([65536 x i8]* @window to [0 x i8]*), i32 0, i32 %34
  %35 = load i8, i8* %arrayidx32, align 1
  %conv33 = zext i8 %35 to i32
  %xor = xor i32 %shl, %conv33
  %and = and i32 %xor, 32767
  store i32 %and, i32* @ins_h, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %36 = load i32, i32* %j, align 4
  %inc = add i32 %36, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %if.then26
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1) #2

; Function Attrs: noinline optnone sspstrong
define internal void @fill_window() #1 {
entry:
  %n = alloca i32, align 4
  %m = alloca i32, align 4
  %more = alloca i32, align 4
  %0 = load i32, i32* @window_size, align 4
  %1 = load i32, i32* @lookahead, align 4
  %sub = sub i32 %0, %1
  %2 = load i32, i32* @strstart, align 4
  %sub1 = sub i32 %sub, %2
  store i32 %sub1, i32* %more, align 4
  %3 = load i32, i32* %more, align 4
  %cmp = icmp eq i32 %3, -1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %more, align 4
  %dec = add i32 %4, -1
  store i32 %dec, i32* %more, align 4
  br label %if.end31

if.else:                                          ; preds = %entry
  %5 = load i32, i32* @strstart, align 4
  %cmp2 = icmp uge i32 %5, 65274
  br i1 %cmp2, label %if.then3, label %if.end

if.then3:                                         ; preds = %if.else
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 getelementptr inbounds ([65536 x i8], [65536 x i8]* @window, i32 0, i32 0), i8* align 1 getelementptr inbounds ([65536 x i8], [65536 x i8]* @window, i32 0, i32 32768), i32 32768, i1 false)
  %6 = load i32, i32* @match_start, align 4
  %sub4 = sub i32 %6, 32768
  store i32 %sub4, i32* @match_start, align 4
  %7 = load i32, i32* @strstart, align 4
  %sub5 = sub i32 %7, 32768
  store i32 %sub5, i32* @strstart, align 4
  %8 = load i32, i32* @block_start, align 4
  %sub6 = sub nsw i32 %8, 32768
  store i32 %sub6, i32* @block_start, align 4
  store i32 0, i32* %n, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then3
  %9 = load i32, i32* %n, align 4
  %cmp7 = icmp ult i32 %9, 32768
  br i1 %cmp7, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %10 = load i32, i32* %n, align 4
  %arrayidx = getelementptr inbounds i16, i16* getelementptr inbounds ([65536 x i16], [65536 x i16]* @prev, i32 0, i32 32768), i32 %10
  %11 = load i16, i16* %arrayidx, align 2
  %conv = zext i16 %11 to i32
  store i32 %conv, i32* %m, align 4
  %12 = load i32, i32* %m, align 4
  %cmp8 = icmp uge i32 %12, 32768
  br i1 %cmp8, label %cond.true, label %cond.false

cond.true:                                        ; preds = %for.body
  %13 = load i32, i32* %m, align 4
  %sub10 = sub i32 %13, 32768
  br label %cond.end

cond.false:                                       ; preds = %for.body
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub10, %cond.true ], [ 0, %cond.false ]
  %conv11 = trunc i32 %cond to i16
  %14 = load i32, i32* %n, align 4
  %arrayidx12 = getelementptr inbounds i16, i16* getelementptr inbounds ([65536 x i16], [65536 x i16]* @prev, i32 0, i32 32768), i32 %14
  store i16 %conv11, i16* %arrayidx12, align 2
  br label %for.inc

for.inc:                                          ; preds = %cond.end
  %15 = load i32, i32* %n, align 4
  %inc = add i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %n, align 4
  br label %CallOutFuncBB

CallOutFuncBB:                                    ; preds = %for.end
  call void @for.cond13.OutLineFunc(i32* %n, i32* %m, i32* %more)
  %16 = getelementptr inbounds %Struct.RetValue.3, %Struct.RetValue.3* @Struct.RetValue.4, i32 0, i32 0
  %17 = load i32*, i32** %16, align 4
  %18 = load i32, i32* %17, align 4
  store i32 %18, i32* %n
  %19 = getelementptr inbounds %Struct.RetValue.3, %Struct.RetValue.3* @Struct.RetValue.4, i32 0, i32 1
  %20 = load i32*, i32** %19, align 4
  %21 = load i32, i32* %20, align 4
  store i32 %21, i32* %m
  %22 = getelementptr inbounds %Struct.RetValue.3, %Struct.RetValue.3* @Struct.RetValue.4, i32 0, i32 2
  %23 = load i32*, i32** %22, align 4
  %24 = load i32, i32* %23, align 4
  store i32 %24, i32* %more
  br label %if.end

if.end:                                           ; preds = %CallOutFuncBB, %if.else
  br label %if.end31

if.end31:                                         ; preds = %if.end, %if.then
  %25 = load i32, i32* @eofile, align 4
  %tobool = icmp ne i32 %25, 0
  br i1 %tobool, label %if.end42, label %if.then32

if.then32:                                        ; preds = %if.end31
  %26 = load i32 (...)*, i32 (...)** @read_buf, align 4
  %27 = load i32, i32* %more, align 4
  %28 = load i32, i32* @strstart, align 4
  %add.ptr = getelementptr inbounds i8, i8* getelementptr inbounds ([65536 x i8], [65536 x i8]* @window, i32 0, i32 0), i32 %28
  %29 = load i32, i32* @lookahead, align 4
  %add.ptr33 = getelementptr inbounds i8, i8* %add.ptr, i32 %29
  %callee.knr.cast = bitcast i32 (...)* %26 to i32 (i8*, i32)*
  %call = call i32 %callee.knr.cast(i8* %add.ptr33, i32 %27)
  store i32 %call, i32* %n, align 4
  %30 = load i32, i32* %n, align 4
  %cmp34 = icmp eq i32 %30, 0
  br i1 %cmp34, label %if.then38, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then32
  %31 = load i32, i32* %n, align 4
  %cmp36 = icmp eq i32 %31, -1
  br i1 %cmp36, label %if.then38, label %if.else39

if.then38:                                        ; preds = %lor.lhs.false, %if.then32
  store i32 1, i32* @eofile, align 4
  br label %if.end41

if.else39:                                        ; preds = %lor.lhs.false
  %32 = load i32, i32* %n, align 4
  %33 = load i32, i32* @lookahead, align 4
  %add40 = add i32 %33, %32
  store i32 %add40, i32* @lookahead, align 4
  br label %if.end41

if.end41:                                         ; preds = %if.else39, %if.then38
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.end31
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* nocapture writeonly, i8* nocapture readonly, i32, i1) #2

; Function Attrs: noinline optnone sspstrong
define dso_local i32 @deflate() #1 {
entry:
  %retval = alloca i32, align 4
  %hash_head = alloca i32, align 4
  %prev_match = alloca i32, align 4
  %flush = alloca i32, align 4
  %match_available = alloca i32, align 4
  %match_length = alloca i32, align 4
  store i32 0, i32* %match_available, align 4
  store i32 2, i32* %match_length, align 4
  %0 = load i32, i32* @compr_level, align 4
  %cmp = icmp sle i32 %0, 3
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = call i32 @deflate_fast()
  store i32 %call, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  br label %while.cond

while.cond:                                       ; preds = %while.end, %if.end
  %1 = load i32, i32* @lookahead, align 4
  %cmp1 = icmp ne i32 %1, 0
  br i1 %cmp1, label %CallOutFuncBB, label %while.end100

CallOutFuncBB:                                    ; preds = %while.cond
  call void @while.body.OutLineFunc.6(i32* %hash_head, i32* %match_length, i32* %prev_match)
  %2 = getelementptr inbounds %Struct.RetValue.4, %Struct.RetValue.4* @Struct.RetValue.5, i32 0, i32 0
  %3 = load i32*, i32** %2, align 4
  %4 = load i32, i32* %3, align 4
  store i32 %4, i32* %hash_head
  %5 = getelementptr inbounds %Struct.RetValue.4, %Struct.RetValue.4* @Struct.RetValue.5, i32 0, i32 1
  %6 = load i32*, i32** %5, align 4
  %7 = load i32, i32* %6, align 4
  store i32 %7, i32* %match_length
  %8 = getelementptr inbounds %Struct.RetValue.4, %Struct.RetValue.4* @Struct.RetValue.5, i32 0, i32 2
  %9 = load i32*, i32** %8, align 4
  %10 = load i32, i32* %9, align 4
  store i32 %10, i32* %prev_match
  br label %new

new:                                              ; preds = %CallOutFuncBB
  %11 = load i32, i32* @prev_length, align 4
  %cmp32 = icmp uge i32 %11, 3
  br i1 %cmp32, label %land.lhs.true34, label %if.else

land.lhs.true34:                                  ; preds = %new
  %12 = load i32, i32* %match_length, align 4
  %13 = load i32, i32* @prev_length, align 4
  %cmp35 = icmp ule i32 %12, %13
  br i1 %cmp35, label %if.then37, label %if.else

if.then37:                                        ; preds = %land.lhs.true34
  %14 = load i32, i32* @prev_length, align 4
  %sub38 = sub i32 %14, 3
  %15 = load i32, i32* @strstart, align 4
  %sub39 = sub i32 %15, 1
  %16 = load i32, i32* %prev_match, align 4
  %sub40 = sub i32 %sub39, %16
  %call41 = call i32 @ct_tally(i32 %sub40, i32 %sub38)
  store i32 %call41, i32* %flush, align 4
  %17 = load i32, i32* @prev_length, align 4
  %sub42 = sub i32 %17, 1
  %18 = load i32, i32* @lookahead, align 4
  %sub43 = sub i32 %18, %sub42
  store i32 %sub43, i32* @lookahead, align 4
  %19 = load i32, i32* @prev_length, align 4
  %sub44 = sub i32 %19, 2
  store i32 %sub44, i32* @prev_length, align 4
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then37
  %20 = load i32, i32* @strstart, align 4
  %inc = add i32 %20, 1
  store i32 %inc, i32* @strstart, align 4
  %21 = load i32, i32* @ins_h, align 4
  %shl45 = shl i32 %21, 5
  %22 = load i32, i32* @strstart, align 4
  %add46 = add i32 %22, 3
  %sub47 = sub i32 %add46, 1
  %arrayidx48 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([65536 x i8]* @window to [0 x i8]*), i32 0, i32 %sub47
  %23 = load i8, i8* %arrayidx48, align 1
  %conv49 = zext i8 %23 to i32
  %xor50 = xor i32 %shl45, %conv49
  %and51 = and i32 %xor50, 32767
  store i32 %and51, i32* @ins_h, align 4
  %24 = load i32, i32* @ins_h, align 4
  %arrayidx52 = getelementptr inbounds i16, i16* getelementptr inbounds ([65536 x i16], [65536 x i16]* @prev, i32 0, i32 32768), i32 %24
  %25 = load i16, i16* %arrayidx52, align 2
  %conv53 = zext i16 %25 to i32
  store i32 %conv53, i32* %hash_head, align 4
  %conv54 = trunc i32 %conv53 to i16
  %26 = load i32, i32* @strstart, align 4
  %and55 = and i32 %26, 32767
  %arrayidx56 = getelementptr inbounds [0 x i16], [0 x i16]* bitcast ([65536 x i16]* @prev to [0 x i16]*), i32 0, i32 %and55
  store i16 %conv54, i16* %arrayidx56, align 2
  %27 = load i32, i32* @strstart, align 4
  %conv57 = trunc i32 %27 to i16
  %28 = load i32, i32* @ins_h, align 4
  %arrayidx58 = getelementptr inbounds i16, i16* getelementptr inbounds ([65536 x i16], [65536 x i16]* @prev, i32 0, i32 32768), i32 %28
  store i16 %conv57, i16* %arrayidx58, align 2
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %29 = load i32, i32* @prev_length, align 4
  %dec59 = add i32 %29, -1
  store i32 %dec59, i32* @prev_length, align 4
  %cmp60 = icmp ne i32 %dec59, 0
  br i1 %cmp60, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  store i32 0, i32* %match_available, align 4
  store i32 2, i32* %match_length, align 4
  %30 = load i32, i32* @strstart, align 4
  %inc62 = add i32 %30, 1
  store i32 %inc62, i32* @strstart, align 4
  %31 = load i32, i32* %flush, align 4
  %tobool = icmp ne i32 %31, 0
  br i1 %tobool, label %if.then63, label %if.end69

if.then63:                                        ; preds = %do.end
  %32 = load i32, i32* @strstart, align 4
  %33 = load i32, i32* @block_start, align 4
  %sub64 = sub nsw i32 %32, %33
  %34 = load i32, i32* @block_start, align 4
  %cmp65 = icmp sge i32 %34, 0
  br i1 %cmp65, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then63
  %35 = load i32, i32* @block_start, align 4
  %arrayidx67 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([65536 x i8]* @window to [0 x i8]*), i32 0, i32 %35
  br label %cond.end

cond.false:                                       ; preds = %if.then63
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %arrayidx67, %cond.true ], [ null, %cond.false ]
  %call68 = call i32 @flush_block(i8* %cond, i32 %sub64, i32 0)
  %36 = load i32, i32* @strstart, align 4
  store i32 %36, i32* @block_start, align 4
  br label %if.end69

if.end69:                                         ; preds = %cond.end, %do.end
  br label %if.end94

if.else:                                          ; preds = %land.lhs.true34, %new
  %37 = load i32, i32* %match_available, align 4
  %tobool70 = icmp ne i32 %37, 0
  br i1 %tobool70, label %if.then71, label %if.else90

if.then71:                                        ; preds = %if.else
  %38 = load i32, i32* @strstart, align 4
  %sub72 = sub i32 %38, 1
  %arrayidx73 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([65536 x i8]* @window to [0 x i8]*), i32 0, i32 %sub72
  %39 = load i8, i8* %arrayidx73, align 1
  %conv74 = zext i8 %39 to i32
  %call75 = call i32 @ct_tally(i32 0, i32 %conv74)
  %tobool76 = icmp ne i32 %call75, 0
  br i1 %tobool76, label %if.then77, label %if.end87

if.then77:                                        ; preds = %if.then71
  %40 = load i32, i32* @strstart, align 4
  %41 = load i32, i32* @block_start, align 4
  %sub78 = sub nsw i32 %40, %41
  %42 = load i32, i32* @block_start, align 4
  %cmp79 = icmp sge i32 %42, 0
  br i1 %cmp79, label %cond.true81, label %cond.false83

cond.true81:                                      ; preds = %if.then77
  %43 = load i32, i32* @block_start, align 4
  %arrayidx82 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([65536 x i8]* @window to [0 x i8]*), i32 0, i32 %43
  br label %cond.end84

cond.false83:                                     ; preds = %if.then77
  br label %cond.end84

cond.end84:                                       ; preds = %cond.false83, %cond.true81
  %cond85 = phi i8* [ %arrayidx82, %cond.true81 ], [ null, %cond.false83 ]
  %call86 = call i32 @flush_block(i8* %cond85, i32 %sub78, i32 0)
  %44 = load i32, i32* @strstart, align 4
  store i32 %44, i32* @block_start, align 4
  br label %if.end87

if.end87:                                         ; preds = %cond.end84, %if.then71
  %45 = load i32, i32* @strstart, align 4
  %inc88 = add i32 %45, 1
  store i32 %inc88, i32* @strstart, align 4
  %46 = load i32, i32* @lookahead, align 4
  %dec89 = add i32 %46, -1
  store i32 %dec89, i32* @lookahead, align 4
  br label %if.end93

if.else90:                                        ; preds = %if.else
  store i32 1, i32* %match_available, align 4
  %47 = load i32, i32* @strstart, align 4
  %inc91 = add i32 %47, 1
  store i32 %inc91, i32* @strstart, align 4
  %48 = load i32, i32* @lookahead, align 4
  %dec92 = add i32 %48, -1
  store i32 %dec92, i32* @lookahead, align 4
  br label %if.end93

if.end93:                                         ; preds = %if.else90, %if.end87
  br label %if.end94

if.end94:                                         ; preds = %if.end93, %if.end69
  br label %while.cond95

while.cond95:                                     ; preds = %while.body99, %if.end94
  %49 = load i32, i32* @lookahead, align 4
  %cmp96 = icmp ult i32 %49, 262
  br i1 %cmp96, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond95
  %50 = load i32, i32* @eofile, align 4
  %tobool98 = icmp ne i32 %50, 0
  %lnot = xor i1 %tobool98, true
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond95
  %51 = phi i1 [ false, %while.cond95 ], [ %lnot, %land.rhs ]
  br i1 %51, label %while.body99, label %while.end

while.body99:                                     ; preds = %land.end
  call void @fill_window()
  br label %while.cond95

while.end:                                        ; preds = %land.end
  br label %while.cond

while.end100:                                     ; preds = %while.cond
  %52 = load i32, i32* %match_available, align 4
  %tobool101 = icmp ne i32 %52, 0
  br i1 %tobool101, label %if.then102, label %if.end107

if.then102:                                       ; preds = %while.end100
  %53 = load i32, i32* @strstart, align 4
  %sub103 = sub i32 %53, 1
  %arrayidx104 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([65536 x i8]* @window to [0 x i8]*), i32 0, i32 %sub103
  %54 = load i8, i8* %arrayidx104, align 1
  %conv105 = zext i8 %54 to i32
  %call106 = call i32 @ct_tally(i32 0, i32 %conv105)
  br label %if.end107

if.end107:                                        ; preds = %if.then102, %while.end100
  %55 = load i32, i32* @strstart, align 4
  %56 = load i32, i32* @block_start, align 4
  %sub108 = sub nsw i32 %55, %56
  %57 = load i32, i32* @block_start, align 4
  %cmp109 = icmp sge i32 %57, 0
  br i1 %cmp109, label %cond.true111, label %cond.false113

cond.true111:                                     ; preds = %if.end107
  %58 = load i32, i32* @block_start, align 4
  %arrayidx112 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([65536 x i8]* @window to [0 x i8]*), i32 0, i32 %58
  br label %cond.end114

cond.false113:                                    ; preds = %if.end107
  br label %cond.end114

cond.end114:                                      ; preds = %cond.false113, %cond.true111
  %cond115 = phi i8* [ %arrayidx112, %cond.true111 ], [ null, %cond.false113 ]
  %call116 = call i32 @flush_block(i8* %cond115, i32 %sub108, i32 1)
  store i32 %call116, i32* %retval, align 4
  br label %return

return:                                           ; preds = %cond.end114, %if.then
  %59 = load i32, i32* %retval, align 4
  ret i32 %59
}

; Function Attrs: noinline optnone sspstrong
define internal i32 @deflate_fast() #1 {
entry:
  %hash_head = alloca i32, align 4
  %flush = alloca i32, align 4
  %match_length = alloca i32, align 4
  store i32 0, i32* %match_length, align 4
  store i32 2, i32* @prev_length, align 4
  %RetValuePtr = alloca i32, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.end, %entry
  %0 = load i32, i32* @lookahead, align 4
  %cmp = icmp ne i32 %0, 0
  br i1 %cmp, label %while.body, label %while.end74

while.body:                                       ; preds = %while.cond
  %1 = load i32, i32* @ins_h, align 4
  %shl = shl i32 %1, 5
  %2 = load i32, i32* @strstart, align 4
  %add = add i32 %2, 3
  %sub = sub i32 %add, 1
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([65536 x i8]* @window to [0 x i8]*), i32 0, i32 %sub
  %3 = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %3 to i32
  %xor = xor i32 %shl, %conv
  %and = and i32 %xor, 32767
  store i32 %and, i32* @ins_h, align 4
  %4 = load i32, i32* @ins_h, align 4
  %arrayidx1 = getelementptr inbounds i16, i16* getelementptr inbounds ([65536 x i16], [65536 x i16]* @prev, i32 0, i32 32768), i32 %4
  %5 = load i16, i16* %arrayidx1, align 2
  %conv2 = zext i16 %5 to i32
  store i32 %conv2, i32* %hash_head, align 4
  %conv3 = trunc i32 %conv2 to i16
  %6 = load i32, i32* @strstart, align 4
  %and4 = and i32 %6, 32767
  %arrayidx5 = getelementptr inbounds [0 x i16], [0 x i16]* bitcast ([65536 x i16]* @prev to [0 x i16]*), i32 0, i32 %and4
  store i16 %conv3, i16* %arrayidx5, align 2
  %7 = load i32, i32* @strstart, align 4
  %conv6 = trunc i32 %7 to i16
  %8 = load i32, i32* @ins_h, align 4
  %arrayidx7 = getelementptr inbounds i16, i16* getelementptr inbounds ([65536 x i16], [65536 x i16]* @prev, i32 0, i32 32768), i32 %8
  store i16 %conv6, i16* %arrayidx7, align 2
  %9 = load i32, i32* %hash_head, align 4
  %cmp8 = icmp ne i32 %9, 0
  br i1 %cmp8, label %land.lhs.true, label %if.end16

land.lhs.true:                                    ; preds = %while.body
  %10 = load i32, i32* @strstart, align 4
  %11 = load i32, i32* %hash_head, align 4
  %sub10 = sub i32 %10, %11
  %cmp11 = icmp ule i32 %sub10, 32506
  br i1 %cmp11, label %if.then, label %if.end16

if.then:                                          ; preds = %land.lhs.true
  %12 = load i32, i32* %hash_head, align 4
  br label %entry.longest_match.Clone

entry.longest_match.Clone:                        ; preds = %if.then
  %cur_match.addr.longest_match.Clone = alloca i32, align 4
  %chain_length.longest_match.Clone = alloca i32, align 4
  %scan.longest_match.Clone = alloca i8*, align 4
  %match.longest_match.Clone = alloca i8*, align 4
  %len.longest_match.Clone = alloca i32, align 4
  %best_len.longest_match.Clone = alloca i32, align 4
  %limit.longest_match.Clone = alloca i32, align 4
  %strend.longest_match.Clone = alloca i8*, align 4
  %scan_end1.longest_match.Clone = alloca i8, align 1
  %scan_end.longest_match.Clone = alloca i8, align 1
  store i32 %12, i32* %cur_match.addr.longest_match.Clone, align 4
  %13 = load i32, i32* @max_chain_length, align 4
  store i32 %13, i32* %chain_length.longest_match.Clone, align 4
  %14 = load i32, i32* @strstart, align 4
  %add.ptr.longest_match.Clone = getelementptr inbounds i8, i8* getelementptr inbounds ([65536 x i8], [65536 x i8]* @window, i32 0, i32 0), i32 %14
  store i8* %add.ptr.longest_match.Clone, i8** %scan.longest_match.Clone, align 4
  %15 = load i32, i32* @prev_length, align 4
  store i32 %15, i32* %best_len.longest_match.Clone, align 4
  %16 = load i32, i32* @strstart, align 4
  %cmp.longest_match.Clone = icmp ugt i32 %16, 32506
  br i1 %cmp.longest_match.Clone, label %cond.true.longest_match.Clone, label %cond.false.longest_match.Clone

cond.true.longest_match.Clone:                    ; preds = %entry.longest_match.Clone
  %17 = load i32, i32* @strstart, align 4
  %sub.longest_match.Clone = sub i32 %17, 32506
  br label %cond.end.longest_match.Clone

cond.false.longest_match.Clone:                   ; preds = %entry.longest_match.Clone
  br label %cond.end.longest_match.Clone

cond.end.longest_match.Clone:                     ; preds = %cond.false.longest_match.Clone, %cond.true.longest_match.Clone
  %cond.longest_match.Clone = phi i32 [ %sub.longest_match.Clone, %cond.true.longest_match.Clone ], [ 0, %cond.false.longest_match.Clone ]
  store i32 %cond.longest_match.Clone, i32* %limit.longest_match.Clone, align 4
  %18 = load i32, i32* @strstart, align 4
  %add.ptr1.longest_match.Clone = getelementptr inbounds i8, i8* getelementptr inbounds ([65536 x i8], [65536 x i8]* @window, i32 0, i32 0), i32 %18
  %add.ptr2.longest_match.Clone = getelementptr inbounds i8, i8* %add.ptr1.longest_match.Clone, i32 258
  store i8* %add.ptr2.longest_match.Clone, i8** %strend.longest_match.Clone, align 4
  %19 = load i8*, i8** %scan.longest_match.Clone, align 4
  %20 = load i32, i32* %best_len.longest_match.Clone, align 4
  %sub3.longest_match.Clone = sub nsw i32 %20, 1
  %arrayidx.longest_match.Clone = getelementptr inbounds i8, i8* %19, i32 %sub3.longest_match.Clone
  %21 = load i8, i8* %arrayidx.longest_match.Clone, align 1
  store i8 %21, i8* %scan_end1.longest_match.Clone, align 1
  %22 = load i8*, i8** %scan.longest_match.Clone, align 4
  %23 = load i32, i32* %best_len.longest_match.Clone, align 4
  %arrayidx4.longest_match.Clone = getelementptr inbounds i8, i8* %22, i32 %23
  %24 = load i8, i8* %arrayidx4.longest_match.Clone, align 1
  store i8 %24, i8* %scan_end.longest_match.Clone, align 1
  %25 = load i32, i32* @prev_length, align 4
  %26 = load i32, i32* @good_match, align 4
  %cmp5.longest_match.Clone = icmp uge i32 %25, %26
  br i1 %cmp5.longest_match.Clone, label %if.then.longest_match.Clone, label %if.end.longest_match.Clone

if.then.longest_match.Clone:                      ; preds = %cond.end.longest_match.Clone
  %27 = load i32, i32* %chain_length.longest_match.Clone, align 4
  %shr.longest_match.Clone = lshr i32 %27, 2
  store i32 %shr.longest_match.Clone, i32* %chain_length.longest_match.Clone, align 4
  br label %if.end.longest_match.Clone

if.end.longest_match.Clone:                       ; preds = %if.then.longest_match.Clone, %cond.end.longest_match.Clone
  br label %do.body.longest_match.Clone

do.body.longest_match.Clone:                      ; preds = %land.end110.longest_match.Clone, %if.end.longest_match.Clone
  %28 = load i32, i32* %cur_match.addr.longest_match.Clone, align 4
  %add.ptr6.longest_match.Clone = getelementptr inbounds i8, i8* getelementptr inbounds ([65536 x i8], [65536 x i8]* @window, i32 0, i32 0), i32 %28
  store i8* %add.ptr6.longest_match.Clone, i8** %match.longest_match.Clone, align 4
  %29 = load i8*, i8** %match.longest_match.Clone, align 4
  %30 = load i32, i32* %best_len.longest_match.Clone, align 4
  %arrayidx7.longest_match.Clone = getelementptr inbounds i8, i8* %29, i32 %30
  %31 = load i8, i8* %arrayidx7.longest_match.Clone, align 1
  %conv.longest_match.Clone = zext i8 %31 to i32
  %32 = load i8, i8* %scan_end.longest_match.Clone, align 1
  %conv8.longest_match.Clone = zext i8 %32 to i32
  %cmp9.longest_match.Clone = icmp ne i32 %conv.longest_match.Clone, %conv8.longest_match.Clone
  br i1 %cmp9.longest_match.Clone, label %if.then28.longest_match.Clone, label %lor.lhs.false.longest_match.Clone

lor.lhs.false.longest_match.Clone:                ; preds = %do.body.longest_match.Clone
  %33 = load i8*, i8** %match.longest_match.Clone, align 4
  %34 = load i32, i32* %best_len.longest_match.Clone, align 4
  %sub11.longest_match.Clone = sub nsw i32 %34, 1
  %arrayidx12.longest_match.Clone = getelementptr inbounds i8, i8* %33, i32 %sub11.longest_match.Clone
  %35 = load i8, i8* %arrayidx12.longest_match.Clone, align 1
  %conv13.longest_match.Clone = zext i8 %35 to i32
  %36 = load i8, i8* %scan_end1.longest_match.Clone, align 1
  %conv14.longest_match.Clone = zext i8 %36 to i32
  %cmp15.longest_match.Clone = icmp ne i32 %conv13.longest_match.Clone, %conv14.longest_match.Clone
  br i1 %cmp15.longest_match.Clone, label %if.then28.longest_match.Clone, label %lor.lhs.false17.longest_match.Clone

lor.lhs.false17.longest_match.Clone:              ; preds = %lor.lhs.false.longest_match.Clone
  %37 = load i8*, i8** %match.longest_match.Clone, align 4
  %38 = load i8, i8* %37, align 1
  %conv18.longest_match.Clone = zext i8 %38 to i32
  %39 = load i8*, i8** %scan.longest_match.Clone, align 4
  %40 = load i8, i8* %39, align 1
  %conv19.longest_match.Clone = zext i8 %40 to i32
  %cmp20.longest_match.Clone = icmp ne i32 %conv18.longest_match.Clone, %conv19.longest_match.Clone
  br i1 %cmp20.longest_match.Clone, label %if.then28.longest_match.Clone, label %lor.lhs.false22.longest_match.Clone

lor.lhs.false22.longest_match.Clone:              ; preds = %lor.lhs.false17.longest_match.Clone
  %41 = load i8*, i8** %match.longest_match.Clone, align 4
  %incdec.ptr.longest_match.Clone = getelementptr inbounds i8, i8* %41, i32 1
  store i8* %incdec.ptr.longest_match.Clone, i8** %match.longest_match.Clone, align 4
  %42 = load i8, i8* %incdec.ptr.longest_match.Clone, align 1
  %conv23.longest_match.Clone = zext i8 %42 to i32
  %43 = load i8*, i8** %scan.longest_match.Clone, align 4
  %arrayidx24.longest_match.Clone = getelementptr inbounds i8, i8* %43, i32 1
  %44 = load i8, i8* %arrayidx24.longest_match.Clone, align 1
  %conv25.longest_match.Clone = zext i8 %44 to i32
  %cmp26.longest_match.Clone = icmp ne i32 %conv23.longest_match.Clone, %conv25.longest_match.Clone
  br i1 %cmp26.longest_match.Clone, label %if.then28.longest_match.Clone, label %if.end29.longest_match.Clone

if.then28.longest_match.Clone:                    ; preds = %lor.lhs.false22.longest_match.Clone, %lor.lhs.false17.longest_match.Clone, %lor.lhs.false.longest_match.Clone, %do.body.longest_match.Clone
  br label %do.cond102.longest_match.Clone

if.end29.longest_match.Clone:                     ; preds = %lor.lhs.false22.longest_match.Clone
  %45 = load i8*, i8** %scan.longest_match.Clone, align 4
  %add.ptr30.longest_match.Clone = getelementptr inbounds i8, i8* %45, i32 2
  store i8* %add.ptr30.longest_match.Clone, i8** %scan.longest_match.Clone, align 4
  %46 = load i8*, i8** %match.longest_match.Clone, align 4
  %incdec.ptr31.longest_match.Clone = getelementptr inbounds i8, i8* %46, i32 1
  store i8* %incdec.ptr31.longest_match.Clone, i8** %match.longest_match.Clone, align 4
  br label %do.body32.longest_match.Clone

do.body32.longest_match.Clone:                    ; preds = %land.end.longest_match.Clone, %if.end29.longest_match.Clone
  br label %do.cond.longest_match.Clone

do.cond.longest_match.Clone:                      ; preds = %do.body32.longest_match.Clone
  %47 = load i8*, i8** %scan.longest_match.Clone, align 4
  %incdec.ptr33.longest_match.Clone = getelementptr inbounds i8, i8* %47, i32 1
  store i8* %incdec.ptr33.longest_match.Clone, i8** %scan.longest_match.Clone, align 4
  %48 = load i8, i8* %incdec.ptr33.longest_match.Clone, align 1
  %conv34.longest_match.Clone = zext i8 %48 to i32
  %49 = load i8*, i8** %match.longest_match.Clone, align 4
  %incdec.ptr35.longest_match.Clone = getelementptr inbounds i8, i8* %49, i32 1
  store i8* %incdec.ptr35.longest_match.Clone, i8** %match.longest_match.Clone, align 4
  %50 = load i8, i8* %incdec.ptr35.longest_match.Clone, align 1
  %conv36.longest_match.Clone = zext i8 %50 to i32
  %cmp37.longest_match.Clone = icmp eq i32 %conv34.longest_match.Clone, %conv36.longest_match.Clone
  br i1 %cmp37.longest_match.Clone, label %land.lhs.true.longest_match.Clone, label %land.end.longest_match.Clone

land.lhs.true.longest_match.Clone:                ; preds = %do.cond.longest_match.Clone
  %51 = load i8*, i8** %scan.longest_match.Clone, align 4
  %incdec.ptr39.longest_match.Clone = getelementptr inbounds i8, i8* %51, i32 1
  store i8* %incdec.ptr39.longest_match.Clone, i8** %scan.longest_match.Clone, align 4
  %52 = load i8, i8* %incdec.ptr39.longest_match.Clone, align 1
  %conv40.longest_match.Clone = zext i8 %52 to i32
  %53 = load i8*, i8** %match.longest_match.Clone, align 4
  %incdec.ptr41.longest_match.Clone = getelementptr inbounds i8, i8* %53, i32 1
  store i8* %incdec.ptr41.longest_match.Clone, i8** %match.longest_match.Clone, align 4
  %54 = load i8, i8* %incdec.ptr41.longest_match.Clone, align 1
  %conv42.longest_match.Clone = zext i8 %54 to i32
  %cmp43.longest_match.Clone = icmp eq i32 %conv40.longest_match.Clone, %conv42.longest_match.Clone
  br i1 %cmp43.longest_match.Clone, label %land.lhs.true45.longest_match.Clone, label %land.end.longest_match.Clone

land.lhs.true45.longest_match.Clone:              ; preds = %land.lhs.true.longest_match.Clone
  %55 = load i8*, i8** %scan.longest_match.Clone, align 4
  %incdec.ptr46.longest_match.Clone = getelementptr inbounds i8, i8* %55, i32 1
  store i8* %incdec.ptr46.longest_match.Clone, i8** %scan.longest_match.Clone, align 4
  %56 = load i8, i8* %incdec.ptr46.longest_match.Clone, align 1
  %conv47.longest_match.Clone = zext i8 %56 to i32
  %57 = load i8*, i8** %match.longest_match.Clone, align 4
  %incdec.ptr48.longest_match.Clone = getelementptr inbounds i8, i8* %57, i32 1
  store i8* %incdec.ptr48.longest_match.Clone, i8** %match.longest_match.Clone, align 4
  %58 = load i8, i8* %incdec.ptr48.longest_match.Clone, align 1
  %conv49.longest_match.Clone = zext i8 %58 to i32
  %cmp50.longest_match.Clone = icmp eq i32 %conv47.longest_match.Clone, %conv49.longest_match.Clone
  br i1 %cmp50.longest_match.Clone, label %land.lhs.true52.longest_match.Clone, label %land.end.longest_match.Clone

land.lhs.true52.longest_match.Clone:              ; preds = %land.lhs.true45.longest_match.Clone
  %59 = load i8*, i8** %scan.longest_match.Clone, align 4
  %incdec.ptr53.longest_match.Clone = getelementptr inbounds i8, i8* %59, i32 1
  store i8* %incdec.ptr53.longest_match.Clone, i8** %scan.longest_match.Clone, align 4
  %60 = load i8, i8* %incdec.ptr53.longest_match.Clone, align 1
  %conv54.longest_match.Clone = zext i8 %60 to i32
  %61 = load i8*, i8** %match.longest_match.Clone, align 4
  %incdec.ptr55.longest_match.Clone = getelementptr inbounds i8, i8* %61, i32 1
  store i8* %incdec.ptr55.longest_match.Clone, i8** %match.longest_match.Clone, align 4
  %62 = load i8, i8* %incdec.ptr55.longest_match.Clone, align 1
  %conv56.longest_match.Clone = zext i8 %62 to i32
  %cmp57.longest_match.Clone = icmp eq i32 %conv54.longest_match.Clone, %conv56.longest_match.Clone
  br i1 %cmp57.longest_match.Clone, label %land.lhs.true59.longest_match.Clone, label %land.end.longest_match.Clone

land.lhs.true59.longest_match.Clone:              ; preds = %land.lhs.true52.longest_match.Clone
  %63 = load i8*, i8** %scan.longest_match.Clone, align 4
  %incdec.ptr60.longest_match.Clone = getelementptr inbounds i8, i8* %63, i32 1
  store i8* %incdec.ptr60.longest_match.Clone, i8** %scan.longest_match.Clone, align 4
  %64 = load i8, i8* %incdec.ptr60.longest_match.Clone, align 1
  %conv61.longest_match.Clone = zext i8 %64 to i32
  %65 = load i8*, i8** %match.longest_match.Clone, align 4
  %incdec.ptr62.longest_match.Clone = getelementptr inbounds i8, i8* %65, i32 1
  store i8* %incdec.ptr62.longest_match.Clone, i8** %match.longest_match.Clone, align 4
  %66 = load i8, i8* %incdec.ptr62.longest_match.Clone, align 1
  %conv63.longest_match.Clone = zext i8 %66 to i32
  %cmp64.longest_match.Clone = icmp eq i32 %conv61.longest_match.Clone, %conv63.longest_match.Clone
  br i1 %cmp64.longest_match.Clone, label %land.lhs.true66.longest_match.Clone, label %land.end.longest_match.Clone

land.lhs.true66.longest_match.Clone:              ; preds = %land.lhs.true59.longest_match.Clone
  %67 = load i8*, i8** %scan.longest_match.Clone, align 4
  %incdec.ptr67.longest_match.Clone = getelementptr inbounds i8, i8* %67, i32 1
  store i8* %incdec.ptr67.longest_match.Clone, i8** %scan.longest_match.Clone, align 4
  %68 = load i8, i8* %incdec.ptr67.longest_match.Clone, align 1
  %conv68.longest_match.Clone = zext i8 %68 to i32
  %69 = load i8*, i8** %match.longest_match.Clone, align 4
  %incdec.ptr69.longest_match.Clone = getelementptr inbounds i8, i8* %69, i32 1
  store i8* %incdec.ptr69.longest_match.Clone, i8** %match.longest_match.Clone, align 4
  %70 = load i8, i8* %incdec.ptr69.longest_match.Clone, align 1
  %conv70.longest_match.Clone = zext i8 %70 to i32
  %cmp71.longest_match.Clone = icmp eq i32 %conv68.longest_match.Clone, %conv70.longest_match.Clone
  br i1 %cmp71.longest_match.Clone, label %land.lhs.true73.longest_match.Clone, label %land.end.longest_match.Clone

land.lhs.true73.longest_match.Clone:              ; preds = %land.lhs.true66.longest_match.Clone
  %71 = load i8*, i8** %scan.longest_match.Clone, align 4
  %incdec.ptr74.longest_match.Clone = getelementptr inbounds i8, i8* %71, i32 1
  store i8* %incdec.ptr74.longest_match.Clone, i8** %scan.longest_match.Clone, align 4
  %72 = load i8, i8* %incdec.ptr74.longest_match.Clone, align 1
  %conv75.longest_match.Clone = zext i8 %72 to i32
  %73 = load i8*, i8** %match.longest_match.Clone, align 4
  %incdec.ptr76.longest_match.Clone = getelementptr inbounds i8, i8* %73, i32 1
  store i8* %incdec.ptr76.longest_match.Clone, i8** %match.longest_match.Clone, align 4
  %74 = load i8, i8* %incdec.ptr76.longest_match.Clone, align 1
  %conv77.longest_match.Clone = zext i8 %74 to i32
  %cmp78.longest_match.Clone = icmp eq i32 %conv75.longest_match.Clone, %conv77.longest_match.Clone
  br i1 %cmp78.longest_match.Clone, label %land.lhs.true80.longest_match.Clone, label %land.end.longest_match.Clone

land.lhs.true80.longest_match.Clone:              ; preds = %land.lhs.true73.longest_match.Clone
  %75 = load i8*, i8** %scan.longest_match.Clone, align 4
  %incdec.ptr81.longest_match.Clone = getelementptr inbounds i8, i8* %75, i32 1
  store i8* %incdec.ptr81.longest_match.Clone, i8** %scan.longest_match.Clone, align 4
  %76 = load i8, i8* %incdec.ptr81.longest_match.Clone, align 1
  %conv82.longest_match.Clone = zext i8 %76 to i32
  %77 = load i8*, i8** %match.longest_match.Clone, align 4
  %incdec.ptr83.longest_match.Clone = getelementptr inbounds i8, i8* %77, i32 1
  store i8* %incdec.ptr83.longest_match.Clone, i8** %match.longest_match.Clone, align 4
  %78 = load i8, i8* %incdec.ptr83.longest_match.Clone, align 1
  %conv84.longest_match.Clone = zext i8 %78 to i32
  %cmp85.longest_match.Clone = icmp eq i32 %conv82.longest_match.Clone, %conv84.longest_match.Clone
  br i1 %cmp85.longest_match.Clone, label %land.rhs.longest_match.Clone, label %land.end.longest_match.Clone

land.rhs.longest_match.Clone:                     ; preds = %land.lhs.true80.longest_match.Clone
  %79 = load i8*, i8** %scan.longest_match.Clone, align 4
  %80 = load i8*, i8** %strend.longest_match.Clone, align 4
  %cmp87.longest_match.Clone = icmp ult i8* %79, %80
  br label %land.end.longest_match.Clone

land.end.longest_match.Clone:                     ; preds = %land.rhs.longest_match.Clone, %land.lhs.true80.longest_match.Clone, %land.lhs.true73.longest_match.Clone, %land.lhs.true66.longest_match.Clone, %land.lhs.true59.longest_match.Clone, %land.lhs.true52.longest_match.Clone, %land.lhs.true45.longest_match.Clone, %land.lhs.true.longest_match.Clone, %do.cond.longest_match.Clone
  %81 = phi i1 [ false, %land.lhs.true80.longest_match.Clone ], [ false, %land.lhs.true73.longest_match.Clone ], [ false, %land.lhs.true66.longest_match.Clone ], [ false, %land.lhs.true59.longest_match.Clone ], [ false, %land.lhs.true52.longest_match.Clone ], [ false, %land.lhs.true45.longest_match.Clone ], [ false, %land.lhs.true.longest_match.Clone ], [ false, %do.cond.longest_match.Clone ], [ %cmp87.longest_match.Clone, %land.rhs.longest_match.Clone ]
  br i1 %81, label %do.body32.longest_match.Clone, label %do.end.longest_match.Clone

do.end.longest_match.Clone:                       ; preds = %land.end.longest_match.Clone
  %82 = load i8*, i8** %strend.longest_match.Clone, align 4
  %83 = load i8*, i8** %scan.longest_match.Clone, align 4
  %sub.ptr.lhs.cast.longest_match.Clone = ptrtoint i8* %82 to i32
  %sub.ptr.rhs.cast.longest_match.Clone = ptrtoint i8* %83 to i32
  %sub.ptr.sub.longest_match.Clone = sub i32 %sub.ptr.lhs.cast.longest_match.Clone, %sub.ptr.rhs.cast.longest_match.Clone
  %sub89.longest_match.Clone = sub nsw i32 258, %sub.ptr.sub.longest_match.Clone
  store i32 %sub89.longest_match.Clone, i32* %len.longest_match.Clone, align 4
  %84 = load i8*, i8** %strend.longest_match.Clone, align 4
  %add.ptr90.longest_match.Clone = getelementptr inbounds i8, i8* %84, i32 -258
  store i8* %add.ptr90.longest_match.Clone, i8** %scan.longest_match.Clone, align 4
  %85 = load i32, i32* %len.longest_match.Clone, align 4
  %86 = load i32, i32* %best_len.longest_match.Clone, align 4
  %cmp91.longest_match.Clone = icmp sgt i32 %85, %86
  br i1 %cmp91.longest_match.Clone, label %if.then93.longest_match.Clone, label %if.end101.longest_match.Clone

if.then93.longest_match.Clone:                    ; preds = %do.end.longest_match.Clone
  %87 = load i32, i32* %cur_match.addr.longest_match.Clone, align 4
  store i32 %87, i32* @match_start, align 4
  %88 = load i32, i32* %len.longest_match.Clone, align 4
  store i32 %88, i32* %best_len.longest_match.Clone, align 4
  %89 = load i32, i32* %len.longest_match.Clone, align 4
  %90 = load i32, i32* @nice_match, align 4
  %cmp94.longest_match.Clone = icmp sge i32 %89, %90
  br i1 %cmp94.longest_match.Clone, label %if.then96.longest_match.Clone, label %if.end97.longest_match.Clone

if.then96.longest_match.Clone:                    ; preds = %if.then93.longest_match.Clone
  br label %do.end111.longest_match.Clone

if.end97.longest_match.Clone:                     ; preds = %if.then93.longest_match.Clone
  %91 = load i8*, i8** %scan.longest_match.Clone, align 4
  %92 = load i32, i32* %best_len.longest_match.Clone, align 4
  %sub98.longest_match.Clone = sub nsw i32 %92, 1
  %arrayidx99.longest_match.Clone = getelementptr inbounds i8, i8* %91, i32 %sub98.longest_match.Clone
  %93 = load i8, i8* %arrayidx99.longest_match.Clone, align 1
  store i8 %93, i8* %scan_end1.longest_match.Clone, align 1
  %94 = load i8*, i8** %scan.longest_match.Clone, align 4
  %95 = load i32, i32* %best_len.longest_match.Clone, align 4
  %arrayidx100.longest_match.Clone = getelementptr inbounds i8, i8* %94, i32 %95
  %96 = load i8, i8* %arrayidx100.longest_match.Clone, align 1
  store i8 %96, i8* %scan_end.longest_match.Clone, align 1
  br label %if.end101.longest_match.Clone

if.end101.longest_match.Clone:                    ; preds = %if.end97.longest_match.Clone, %do.end.longest_match.Clone
  br label %do.cond102.longest_match.Clone

do.cond102.longest_match.Clone:                   ; preds = %if.end101.longest_match.Clone, %if.then28.longest_match.Clone
  %97 = load i32, i32* %cur_match.addr.longest_match.Clone, align 4
  %and.longest_match.Clone = and i32 %97, 32767
  %arrayidx103.longest_match.Clone = getelementptr inbounds [0 x i16], [0 x i16]* bitcast ([65536 x i16]* @prev to [0 x i16]*), i32 0, i32 %and.longest_match.Clone
  %98 = load i16, i16* %arrayidx103.longest_match.Clone, align 2
  %conv104.longest_match.Clone = zext i16 %98 to i32
  store i32 %conv104.longest_match.Clone, i32* %cur_match.addr.longest_match.Clone, align 4
  %99 = load i32, i32* %limit.longest_match.Clone, align 4
  %cmp105.longest_match.Clone = icmp ugt i32 %conv104.longest_match.Clone, %99
  br i1 %cmp105.longest_match.Clone, label %land.rhs107.longest_match.Clone, label %land.end110.longest_match.Clone

land.rhs107.longest_match.Clone:                  ; preds = %do.cond102.longest_match.Clone
  %100 = load i32, i32* %chain_length.longest_match.Clone, align 4
  %dec.longest_match.Clone = add i32 %100, -1
  store i32 %dec.longest_match.Clone, i32* %chain_length.longest_match.Clone, align 4
  %cmp108.longest_match.Clone = icmp ne i32 %dec.longest_match.Clone, 0
  br label %land.end110.longest_match.Clone

land.end110.longest_match.Clone:                  ; preds = %land.rhs107.longest_match.Clone, %do.cond102.longest_match.Clone
  %101 = phi i1 [ false, %do.cond102.longest_match.Clone ], [ %cmp108.longest_match.Clone, %land.rhs107.longest_match.Clone ]
  br i1 %101, label %do.body.longest_match.Clone, label %do.end111.longest_match.Clone

do.end111.longest_match.Clone:                    ; preds = %land.end110.longest_match.Clone, %if.then96.longest_match.Clone
  %102 = load i32, i32* %best_len.longest_match.Clone, align 4
  store i32 %102, i32* %RetValuePtr
  br label %if.then.Split

if.then.Split:                                    ; preds = %do.end111.longest_match.Clone
  %RetValue = load i32, i32* %RetValuePtr
  store i32 %RetValue, i32* %match_length, align 4
  %103 = load i32, i32* %match_length, align 4
  %104 = load i32, i32* @lookahead, align 4
  %cmp13 = icmp ugt i32 %103, %104
  br i1 %cmp13, label %if.then15, label %if.end

if.then15:                                        ; preds = %if.then.Split
  %105 = load i32, i32* @lookahead, align 4
  store i32 %105, i32* %match_length, align 4
  br label %if.end

if.end:                                           ; preds = %if.then15, %if.then.Split
  br label %if.end16

if.end16:                                         ; preds = %if.end, %land.lhs.true, %while.body
  %106 = load i32, i32* %match_length, align 4
  %cmp17 = icmp uge i32 %106, 3
  br i1 %cmp17, label %if.then19, label %if.else55

if.then19:                                        ; preds = %if.end16
  %107 = load i32, i32* %match_length, align 4
  %sub20 = sub i32 %107, 3
  %108 = load i32, i32* @strstart, align 4
  %109 = load i32, i32* @match_start, align 4
  %sub21 = sub i32 %108, %109
  %call22 = call i32 @ct_tally(i32 %sub21, i32 %sub20)
  store i32 %call22, i32* %flush, align 4
  %110 = load i32, i32* %match_length, align 4
  %111 = load i32, i32* @lookahead, align 4
  %sub23 = sub i32 %111, %110
  store i32 %sub23, i32* @lookahead, align 4
  %112 = load i32, i32* %match_length, align 4
  %113 = load i32, i32* @max_lazy_match, align 4
  %cmp24 = icmp ule i32 %112, %113
  br i1 %cmp24, label %if.then26, label %if.else

if.then26:                                        ; preds = %if.then19
  %114 = load i32, i32* %match_length, align 4
  %dec = add i32 %114, -1
  store i32 %dec, i32* %match_length, align 4
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then26
  %115 = load i32, i32* @strstart, align 4
  %inc = add i32 %115, 1
  store i32 %inc, i32* @strstart, align 4
  %116 = load i32, i32* @ins_h, align 4
  %shl27 = shl i32 %116, 5
  %117 = load i32, i32* @strstart, align 4
  %add28 = add i32 %117, 3
  %sub29 = sub i32 %add28, 1
  %arrayidx30 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([65536 x i8]* @window to [0 x i8]*), i32 0, i32 %sub29
  %118 = load i8, i8* %arrayidx30, align 1
  %conv31 = zext i8 %118 to i32
  %xor32 = xor i32 %shl27, %conv31
  %and33 = and i32 %xor32, 32767
  store i32 %and33, i32* @ins_h, align 4
  %119 = load i32, i32* @ins_h, align 4
  %arrayidx34 = getelementptr inbounds i16, i16* getelementptr inbounds ([65536 x i16], [65536 x i16]* @prev, i32 0, i32 32768), i32 %119
  %120 = load i16, i16* %arrayidx34, align 2
  %conv35 = zext i16 %120 to i32
  store i32 %conv35, i32* %hash_head, align 4
  %conv36 = trunc i32 %conv35 to i16
  %121 = load i32, i32* @strstart, align 4
  %and37 = and i32 %121, 32767
  %arrayidx38 = getelementptr inbounds [0 x i16], [0 x i16]* bitcast ([65536 x i16]* @prev to [0 x i16]*), i32 0, i32 %and37
  store i16 %conv36, i16* %arrayidx38, align 2
  %122 = load i32, i32* @strstart, align 4
  %conv39 = trunc i32 %122 to i16
  %123 = load i32, i32* @ins_h, align 4
  %arrayidx40 = getelementptr inbounds i16, i16* getelementptr inbounds ([65536 x i16], [65536 x i16]* @prev, i32 0, i32 32768), i32 %123
  store i16 %conv39, i16* %arrayidx40, align 2
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %124 = load i32, i32* %match_length, align 4
  %dec41 = add i32 %124, -1
  store i32 %dec41, i32* %match_length, align 4
  %cmp42 = icmp ne i32 %dec41, 0
  br i1 %cmp42, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  %125 = load i32, i32* @strstart, align 4
  %inc44 = add i32 %125, 1
  store i32 %inc44, i32* @strstart, align 4
  br label %if.end54

if.else:                                          ; preds = %if.then19
  %126 = load i32, i32* %match_length, align 4
  %127 = load i32, i32* @strstart, align 4
  %add45 = add i32 %127, %126
  store i32 %add45, i32* @strstart, align 4
  store i32 0, i32* %match_length, align 4
  %128 = load i32, i32* @strstart, align 4
  %arrayidx46 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([65536 x i8]* @window to [0 x i8]*), i32 0, i32 %128
  %129 = load i8, i8* %arrayidx46, align 1
  %conv47 = zext i8 %129 to i32
  store i32 %conv47, i32* @ins_h, align 4
  %130 = load i32, i32* @ins_h, align 4
  %shl48 = shl i32 %130, 5
  %131 = load i32, i32* @strstart, align 4
  %add49 = add i32 %131, 1
  %arrayidx50 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([65536 x i8]* @window to [0 x i8]*), i32 0, i32 %add49
  %132 = load i8, i8* %arrayidx50, align 1
  %conv51 = zext i8 %132 to i32
  %xor52 = xor i32 %shl48, %conv51
  %and53 = and i32 %xor52, 32767
  store i32 %and53, i32* @ins_h, align 4
  br label %if.end54

if.end54:                                         ; preds = %if.else, %do.end
  br label %CallOutFuncBB

if.else55:                                        ; preds = %if.end16
  %133 = load i32, i32* @strstart, align 4
  %arrayidx56 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([65536 x i8]* @window to [0 x i8]*), i32 0, i32 %133
  %134 = load i8, i8* %arrayidx56, align 1
  %conv57 = zext i8 %134 to i32
  %call58 = call i32 @ct_tally(i32 0, i32 %conv57)
  store i32 %call58, i32* %flush, align 4
  %135 = load i32, i32* @lookahead, align 4
  %dec59 = add i32 %135, -1
  store i32 %dec59, i32* @lookahead, align 4
  %136 = load i32, i32* @strstart, align 4
  %inc60 = add i32 %136, 1
  store i32 %inc60, i32* @strstart, align 4
  br label %CallOutFuncBB

CallOutFuncBB:                                    ; preds = %if.end54, %if.else55
  call void @if.end61.OutLineFunc(i32* %flush)
  br label %while.cond69

while.cond69:                                     ; preds = %CallOutFuncBB, %while.body73
  %137 = load i32, i32* @lookahead, align 4
  %cmp70 = icmp ult i32 %137, 262
  br i1 %cmp70, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond69
  %138 = load i32, i32* @eofile, align 4
  %tobool72 = icmp ne i32 %138, 0
  %lnot = xor i1 %tobool72, true
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond69
  %139 = phi i1 [ false, %while.cond69 ], [ %lnot, %land.rhs ]
  br i1 %139, label %while.body73, label %while.end

while.body73:                                     ; preds = %land.end
  call void @fill_window()
  br label %while.cond69

while.end:                                        ; preds = %land.end
  br label %while.cond

while.end74:                                      ; preds = %while.cond
  %140 = load i32, i32* @strstart, align 4
  %141 = load i32, i32* @block_start, align 4
  %sub75 = sub nsw i32 %140, %141
  %142 = load i32, i32* @block_start, align 4
  %cmp76 = icmp sge i32 %142, 0
  br i1 %cmp76, label %cond.true78, label %cond.false80

cond.true78:                                      ; preds = %while.end74
  %143 = load i32, i32* @block_start, align 4
  %arrayidx79 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([65536 x i8]* @window to [0 x i8]*), i32 0, i32 %143
  br label %cond.end81

cond.false80:                                     ; preds = %while.end74
  br label %cond.end81

cond.end81:                                       ; preds = %cond.false80, %cond.true78
  %cond82 = phi i8* [ %arrayidx79, %cond.true78 ], [ null, %cond.false80 ]
  %call83 = call i32 @flush_block(i8* %cond82, i32 %sub75, i32 1)
  ret i32 %call83
}

; Function Attrs: noinline optnone sspstrong
define dso_local i32 @_getopt_internal(i32 %argc, i8** %argv, i8* %optstring, %struct.option* %longopts, i32* %longind, i32 %long_only) #1 {
entry:
  %retval = alloca i32, align 4
  %long_only.addr = alloca i32, align 4
  %longind.addr = alloca i32*, align 4
  %longopts.addr = alloca %struct.option*, align 4
  %optstring.addr = alloca i8*, align 4
  %argv.addr = alloca i8**, align 4
  %argc.addr = alloca i32, align 4
  %option_index = alloca i32, align 4
  %p = alloca %struct.option*, align 4
  %s = alloca i8*, align 4
  %exact = alloca i32, align 4
  %ambig = alloca i32, align 4
  %pfound = alloca %struct.option*, align 4
  %indfound = alloca i32, align 4
  %c = alloca i8, align 1
  %temp = alloca i8*, align 4
  store i32 %long_only, i32* %long_only.addr, align 4
  store i32* %longind, i32** %longind.addr, align 4
  store %struct.option* %longopts, %struct.option** %longopts.addr, align 4
  store i8* %optstring, i8** %optstring.addr, align 4
  store i8** %argv, i8*** %argv.addr, align 4
  store i32 %argc, i32* %argc.addr, align 4
  store i8* null, i8** @optarg, align 4
  %0 = load i32, i32* @optind, align 4
  %cmp = icmp eq i32 %0, 0
  %RetValuePtr = alloca i32, align 4
  %RetValuePtr10 = alloca i32, align 4
  %RetValuePtr21 = alloca i32, align 4
  %RetValuePtr32 = alloca i32, align 4
  %RetValuePtr43 = alloca i32, align 4
  %RetValuePtr45 = alloca i8*, align 4
  %RetValuePtr61 = alloca i8*, align 4
  br i1 %cmp, label %if.then, label %if.end17

if.then:                                          ; preds = %entry
  store i32 1, i32* @optind, align 4
  store i32 1, i32* @last_nonopt, align 4
  store i32 1, i32* @first_nonopt, align 4
  store i8* null, i8** @nextchar, align 4
  %1 = load i8*, i8** %optstring.addr, align 4
  %arrayidx = getelementptr inbounds i8, i8* %1, i32 0
  %2 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %2 to i32
  %cmp1 = icmp eq i32 %conv, 45
  br i1 %cmp1, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.then
  store i32 2, i32* @ordering, align 4
  %3 = load i8*, i8** %optstring.addr, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %3, i32 1
  store i8* %incdec.ptr, i8** %optstring.addr, align 4
  br label %if.end16

if.else:                                          ; preds = %if.then
  %4 = load i8*, i8** %optstring.addr, align 4
  %arrayidx4 = getelementptr inbounds i8, i8* %4, i32 0
  %5 = load i8, i8* %arrayidx4, align 1
  %conv5 = sext i8 %5 to i32
  %cmp6 = icmp eq i32 %conv5, 43
  br i1 %cmp6, label %if.then8, label %if.else10

if.then8:                                         ; preds = %if.else
  store i32 0, i32* @ordering, align 4
  %6 = load i8*, i8** %optstring.addr, align 4
  %incdec.ptr9 = getelementptr inbounds i8, i8* %6, i32 1
  store i8* %incdec.ptr9, i8** %optstring.addr, align 4
  br label %if.end15

if.else10:                                        ; preds = %if.else
  %call = call i8* bitcast (i8* (...)* @getenv to i8* (i8*)*)(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @"??_C@_0BA@DMNGMDNL@POSIXLY_CORRECT?$AA@", i32 0, i32 0))
  %cmp11 = icmp ne i8* %call, null
  br i1 %cmp11, label %if.then13, label %if.else14

if.then13:                                        ; preds = %if.else10
  store i32 0, i32* @ordering, align 4
  br label %if.end

if.else14:                                        ; preds = %if.else10
  store i32 1, i32* @ordering, align 4
  br label %if.end

if.end:                                           ; preds = %if.else14, %if.then13
  br label %if.end15

if.end15:                                         ; preds = %if.end, %if.then8
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.then3
  br label %if.end17

if.end17:                                         ; preds = %if.end16, %entry
  %7 = load i8*, i8** @nextchar, align 4
  %cmp18 = icmp eq i8* %7, null
  br i1 %cmp18, label %if.then23, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end17
  %8 = load i8*, i8** @nextchar, align 4
  %9 = load i8, i8* %8, align 1
  %conv20 = sext i8 %9 to i32
  %cmp21 = icmp eq i32 %conv20, 0
  br i1 %cmp21, label %if.then23, label %if.end109

if.then23:                                        ; preds = %lor.lhs.false, %if.end17
  %10 = load i32, i32* @ordering, align 4
  %cmp24 = icmp eq i32 %10, 1
  br i1 %cmp24, label %if.then26, label %if.end50

if.then26:                                        ; preds = %if.then23
  %11 = load i32, i32* @first_nonopt, align 4
  %12 = load i32, i32* @last_nonopt, align 4
  %cmp27 = icmp ne i32 %11, %12
  br i1 %cmp27, label %land.lhs.true, label %if.else32

land.lhs.true:                                    ; preds = %if.then26
  %13 = load i32, i32* @last_nonopt, align 4
  %14 = load i32, i32* @optind, align 4
  %cmp29 = icmp ne i32 %13, %14
  br i1 %cmp29, label %if.then31, label %if.else32

if.then31:                                        ; preds = %land.lhs.true
  %15 = load i8**, i8*** %argv.addr, align 4
  call void @exchange(i8** %15)
  br label %if.end37

if.else32:                                        ; preds = %land.lhs.true, %if.then26
  %16 = load i32, i32* @last_nonopt, align 4
  %17 = load i32, i32* @optind, align 4
  %cmp33 = icmp ne i32 %16, %17
  br i1 %cmp33, label %if.then35, label %if.end36

if.then35:                                        ; preds = %if.else32
  %18 = load i32, i32* @optind, align 4
  store i32 %18, i32* @first_nonopt, align 4
  br label %if.end36

if.end36:                                         ; preds = %if.then35, %if.else32
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.then31
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end37
  %19 = load i32, i32* @optind, align 4
  %20 = load i32, i32* %argc.addr, align 4
  %cmp38 = icmp slt i32 %19, %20
  br i1 %cmp38, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %21 = load i8**, i8*** %argv.addr, align 4
  %22 = load i32, i32* @optind, align 4
  %arrayidx40 = getelementptr inbounds i8*, i8** %21, i32 %22
  %23 = load i8*, i8** %arrayidx40, align 4
  %arrayidx41 = getelementptr inbounds i8, i8* %23, i32 0
  %24 = load i8, i8* %arrayidx41, align 1
  %conv42 = sext i8 %24 to i32
  %cmp43 = icmp ne i32 %conv42, 45
  br i1 %cmp43, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %land.rhs
  %25 = load i8**, i8*** %argv.addr, align 4
  %26 = load i32, i32* @optind, align 4
  %arrayidx45 = getelementptr inbounds i8*, i8** %25, i32 %26
  %27 = load i8*, i8** %arrayidx45, align 4
  %arrayidx46 = getelementptr inbounds i8, i8* %27, i32 1
  %28 = load i8, i8* %arrayidx46, align 1
  %conv47 = sext i8 %28 to i32
  %cmp48 = icmp eq i32 %conv47, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %29 = phi i1 [ true, %land.rhs ], [ %cmp48, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %while.cond
  %30 = phi i1 [ false, %while.cond ], [ %29, %lor.end ]
  br i1 %30, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %31 = load i32, i32* @optind, align 4
  %inc = add nsw i32 %31, 1
  store i32 %inc, i32* @optind, align 4
  br label %while.cond

while.end:                                        ; preds = %land.end
  %32 = load i32, i32* @optind, align 4
  store i32 %32, i32* @last_nonopt, align 4
  br label %if.end50

if.end50:                                         ; preds = %while.end, %if.then23
  %33 = load i32, i32* @optind, align 4
  %34 = load i32, i32* %argc.addr, align 4
  %cmp51 = icmp ne i32 %33, %34
  br i1 %cmp51, label %land.lhs.true53, label %if.end70

land.lhs.true53:                                  ; preds = %if.end50
  %35 = load i8**, i8*** %argv.addr, align 4
  %36 = load i32, i32* @optind, align 4
  %arrayidx54 = getelementptr inbounds i8*, i8** %35, i32 %36
  %37 = load i8*, i8** %arrayidx54, align 4
  %call55 = call i32 @strcmp(i8* %37, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @"??_C@_02BAABKJLB@?9?9?$AA@", i32 0, i32 0))
  %tobool = icmp ne i32 %call55, 0
  br i1 %tobool, label %if.end70, label %if.then56

if.then56:                                        ; preds = %land.lhs.true53
  %38 = load i32, i32* @optind, align 4
  %inc57 = add nsw i32 %38, 1
  store i32 %inc57, i32* @optind, align 4
  %39 = load i32, i32* @first_nonopt, align 4
  %40 = load i32, i32* @last_nonopt, align 4
  %cmp58 = icmp ne i32 %39, %40
  br i1 %cmp58, label %land.lhs.true60, label %if.else64

land.lhs.true60:                                  ; preds = %if.then56
  %41 = load i32, i32* @last_nonopt, align 4
  %42 = load i32, i32* @optind, align 4
  %cmp61 = icmp ne i32 %41, %42
  br i1 %cmp61, label %if.then63, label %if.else64

if.then63:                                        ; preds = %land.lhs.true60
  %43 = load i8**, i8*** %argv.addr, align 4
  call void @exchange(i8** %43)
  br label %if.end69

if.else64:                                        ; preds = %land.lhs.true60, %if.then56
  %44 = load i32, i32* @first_nonopt, align 4
  %45 = load i32, i32* @last_nonopt, align 4
  %cmp65 = icmp eq i32 %44, %45
  br i1 %cmp65, label %if.then67, label %if.end68

if.then67:                                        ; preds = %if.else64
  %46 = load i32, i32* @optind, align 4
  store i32 %46, i32* @first_nonopt, align 4
  br label %if.end68

if.end68:                                         ; preds = %if.then67, %if.else64
  br label %if.end69

if.end69:                                         ; preds = %if.end68, %if.then63
  %47 = load i32, i32* %argc.addr, align 4
  store i32 %47, i32* @last_nonopt, align 4
  %48 = load i32, i32* %argc.addr, align 4
  store i32 %48, i32* @optind, align 4
  br label %if.end70

if.end70:                                         ; preds = %if.end69, %land.lhs.true53, %if.end50
  %49 = load i32, i32* @optind, align 4
  %50 = load i32, i32* %argc.addr, align 4
  %cmp71 = icmp eq i32 %49, %50
  br i1 %cmp71, label %CallOutFuncBB, label %if.end78

CallOutFuncBB:                                    ; preds = %if.end70
  call void @if.then73.OutLineFunc(i32* %retval)
  %51 = getelementptr inbounds %Struct.RetValue.6, %Struct.RetValue.6* @Struct.RetValue.8, i32 0, i32 0
  %52 = load i32*, i32** %51, align 4
  %53 = load i32, i32* %52, align 4
  store i32 %53, i32* %retval
  br label %return

if.end78:                                         ; preds = %if.end70
  %54 = load i8**, i8*** %argv.addr, align 4
  %55 = load i32, i32* @optind, align 4
  %arrayidx79 = getelementptr inbounds i8*, i8** %54, i32 %55
  %56 = load i8*, i8** %arrayidx79, align 4
  %arrayidx80 = getelementptr inbounds i8, i8* %56, i32 0
  %57 = load i8, i8* %arrayidx80, align 1
  %conv81 = sext i8 %57 to i32
  %cmp82 = icmp ne i32 %conv81, 45
  br i1 %cmp82, label %if.then90, label %lor.lhs.false84

lor.lhs.false84:                                  ; preds = %if.end78
  %58 = load i8**, i8*** %argv.addr, align 4
  %59 = load i32, i32* @optind, align 4
  %arrayidx85 = getelementptr inbounds i8*, i8** %58, i32 %59
  %60 = load i8*, i8** %arrayidx85, align 4
  %arrayidx86 = getelementptr inbounds i8, i8* %60, i32 1
  %61 = load i8, i8* %arrayidx86, align 1
  %conv87 = sext i8 %61 to i32
  %cmp88 = icmp eq i32 %conv87, 0
  br i1 %cmp88, label %if.then90, label %if.end97

if.then90:                                        ; preds = %lor.lhs.false84, %if.end78
  %62 = load i32, i32* @ordering, align 4
  %cmp91 = icmp eq i32 %62, 0
  br i1 %cmp91, label %if.then93, label %if.end94

if.then93:                                        ; preds = %if.then90
  store i32 -1, i32* %retval, align 4
  br label %return

if.end94:                                         ; preds = %if.then90
  %63 = load i8**, i8*** %argv.addr, align 4
  %64 = load i32, i32* @optind, align 4
  %inc95 = add nsw i32 %64, 1
  store i32 %inc95, i32* @optind, align 4
  %arrayidx96 = getelementptr inbounds i8*, i8** %63, i32 %64
  %65 = load i8*, i8** %arrayidx96, align 4
  store i8* %65, i8** @optarg, align 4
  store i32 1, i32* %retval, align 4
  br label %return

if.end97:                                         ; preds = %lor.lhs.false84
  %66 = load i8**, i8*** %argv.addr, align 4
  %67 = load i32, i32* @optind, align 4
  %arrayidx98 = getelementptr inbounds i8*, i8** %66, i32 %67
  %68 = load i8*, i8** %arrayidx98, align 4
  %add.ptr = getelementptr inbounds i8, i8* %68, i32 1
  %69 = load %struct.option*, %struct.option** %longopts.addr, align 4
  %cmp99 = icmp ne %struct.option* %69, null
  br i1 %cmp99, label %land.rhs101, label %land.end107

land.rhs101:                                      ; preds = %if.end97
  %70 = load i8**, i8*** %argv.addr, align 4
  %71 = load i32, i32* @optind, align 4
  %arrayidx102 = getelementptr inbounds i8*, i8** %70, i32 %71
  %72 = load i8*, i8** %arrayidx102, align 4
  %arrayidx103 = getelementptr inbounds i8, i8* %72, i32 1
  %73 = load i8, i8* %arrayidx103, align 1
  %conv104 = sext i8 %73 to i32
  %cmp105 = icmp eq i32 %conv104, 45
  br label %land.end107

land.end107:                                      ; preds = %land.rhs101, %if.end97
  %74 = phi i1 [ false, %if.end97 ], [ %cmp105, %land.rhs101 ]
  %land.ext = zext i1 %74 to i32
  %add.ptr108 = getelementptr inbounds i8, i8* %add.ptr, i32 %land.ext
  store i8* %add.ptr108, i8** @nextchar, align 4
  br label %if.end109

if.end109:                                        ; preds = %land.end107, %lor.lhs.false
  %75 = load %struct.option*, %struct.option** %longopts.addr, align 4
  %cmp110 = icmp ne %struct.option* %75, null
  br i1 %cmp110, label %land.lhs.true112, label %if.end294

land.lhs.true112:                                 ; preds = %if.end109
  %76 = load i8**, i8*** %argv.addr, align 4
  %77 = load i32, i32* @optind, align 4
  %arrayidx113 = getelementptr inbounds i8*, i8** %76, i32 %77
  %78 = load i8*, i8** %arrayidx113, align 4
  %arrayidx114 = getelementptr inbounds i8, i8* %78, i32 0
  %79 = load i8, i8* %arrayidx114, align 1
  %conv115 = sext i8 %79 to i32
  %cmp116 = icmp eq i32 %conv115, 45
  br i1 %cmp116, label %land.lhs.true118, label %if.end294

land.lhs.true118:                                 ; preds = %land.lhs.true112
  %80 = load i8**, i8*** %argv.addr, align 4
  %81 = load i32, i32* @optind, align 4
  %arrayidx119 = getelementptr inbounds i8*, i8** %80, i32 %81
  %82 = load i8*, i8** %arrayidx119, align 4
  %arrayidx120 = getelementptr inbounds i8, i8* %82, i32 1
  %83 = load i8, i8* %arrayidx120, align 1
  %conv121 = sext i8 %83 to i32
  %cmp122 = icmp eq i32 %conv121, 45
  br i1 %cmp122, label %if.then126, label %lor.lhs.false124

lor.lhs.false124:                                 ; preds = %land.lhs.true118
  %84 = load i32, i32* %long_only.addr, align 4
  %tobool125 = icmp ne i32 %84, 0
  br i1 %tobool125, label %if.then126, label %if.end294

if.then126:                                       ; preds = %lor.lhs.false124, %land.lhs.true118
  %85 = load i8*, i8** @nextchar, align 4
  store i8* %85, i8** %s, align 4
  store i32 0, i32* %exact, align 4
  store i32 0, i32* %ambig, align 4
  store %struct.option* null, %struct.option** %pfound, align 4
  store i32 0, i32* %indfound, align 4
  br label %while.cond127

while.cond127:                                    ; preds = %while.body136, %if.then126
  %86 = load i8*, i8** %s, align 4
  %87 = load i8, i8* %86, align 1
  %conv128 = sext i8 %87 to i32
  %tobool129 = icmp ne i32 %conv128, 0
  br i1 %tobool129, label %land.rhs130, label %land.end134

land.rhs130:                                      ; preds = %while.cond127
  %88 = load i8*, i8** %s, align 4
  %89 = load i8, i8* %88, align 1
  %conv131 = sext i8 %89 to i32
  %cmp132 = icmp ne i32 %conv131, 61
  br label %land.end134

land.end134:                                      ; preds = %land.rhs130, %while.cond127
  %90 = phi i1 [ false, %while.cond127 ], [ %cmp132, %land.rhs130 ]
  br i1 %90, label %while.body136, label %while.end138

while.body136:                                    ; preds = %land.end134
  %91 = load i8*, i8** %s, align 4
  %incdec.ptr137 = getelementptr inbounds i8, i8* %91, i32 1
  store i8* %incdec.ptr137, i8** %s, align 4
  br label %while.cond127

while.end138:                                     ; preds = %land.end134
  %92 = load %struct.option*, %struct.option** %longopts.addr, align 4
  store %struct.option* %92, %struct.option** %p, align 4
  store i32 0, i32* %option_index, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %while.end138
  %93 = load %struct.option*, %struct.option** %p, align 4
  %name = getelementptr inbounds %struct.option, %struct.option* %93, i32 0, i32 0
  %94 = load i8*, i8** %name, align 4
  %tobool139 = icmp ne i8* %94, null
  br i1 %tobool139, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %95 = load i8*, i8** %s, align 4
  %96 = load i8*, i8** @nextchar, align 4
  %sub.ptr.lhs.cast = ptrtoint i8* %95 to i32
  %sub.ptr.rhs.cast = ptrtoint i8* %96 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %97 = load i8*, i8** @nextchar, align 4
  %98 = load %struct.option*, %struct.option** %p, align 4
  %name140 = getelementptr inbounds %struct.option, %struct.option* %98, i32 0, i32 0
  %99 = load i8*, i8** %name140, align 4
  %call141 = call i32 @strncmp(i8* %99, i8* %97, i32 %sub.ptr.sub)
  %tobool142 = icmp ne i32 %call141, 0
  br i1 %tobool142, label %if.end159, label %if.then143

if.then143:                                       ; preds = %for.body
  %100 = load i8*, i8** %s, align 4
  %101 = load i8*, i8** @nextchar, align 4
  %sub.ptr.lhs.cast144 = ptrtoint i8* %100 to i32
  %sub.ptr.rhs.cast145 = ptrtoint i8* %101 to i32
  %sub.ptr.sub146 = sub i32 %sub.ptr.lhs.cast144, %sub.ptr.rhs.cast145
  %102 = load %struct.option*, %struct.option** %p, align 4
  %name147 = getelementptr inbounds %struct.option, %struct.option* %102, i32 0, i32 0
  %103 = load i8*, i8** %name147, align 4
  br label %entry.my_strlen.Clone34

entry.my_strlen.Clone34:                          ; preds = %if.then143
  %str.addr.my_strlen.Clone35 = alloca i8*, align 4
  %n.my_strlen.Clone36 = alloca i32, align 4
  store i8* %103, i8** %str.addr.my_strlen.Clone35, align 4
  store i32 0, i32* %n.my_strlen.Clone36, align 4
  br label %while.cond.my_strlen.Clone37

while.cond.my_strlen.Clone37:                     ; preds = %while.body.my_strlen.Clone40, %entry.my_strlen.Clone34
  %104 = load i8*, i8** %str.addr.my_strlen.Clone35, align 4
  %incdec.ptr.my_strlen.Clone38 = getelementptr inbounds i8, i8* %104, i32 1
  store i8* %incdec.ptr.my_strlen.Clone38, i8** %str.addr.my_strlen.Clone35, align 4
  %105 = load i8, i8* %104, align 1
  %tobool.my_strlen.Clone39 = icmp ne i8 %105, 0
  br i1 %tobool.my_strlen.Clone39, label %while.body.my_strlen.Clone40, label %while.end.my_strlen.Clone42

while.body.my_strlen.Clone40:                     ; preds = %while.cond.my_strlen.Clone37
  %106 = load i32, i32* %n.my_strlen.Clone36, align 4
  %inc.my_strlen.Clone41 = add nsw i32 %106, 1
  store i32 %inc.my_strlen.Clone41, i32* %n.my_strlen.Clone36, align 4
  br label %while.cond.my_strlen.Clone37

while.end.my_strlen.Clone42:                      ; preds = %while.cond.my_strlen.Clone37
  %107 = load i32, i32* %n.my_strlen.Clone36, align 4
  store i32 %107, i32* %RetValuePtr43
  br label %if.then143.Split

if.then143.Split:                                 ; preds = %while.end.my_strlen.Clone42
  %RetValue44 = load i32, i32* %RetValuePtr43
  %cmp149 = icmp eq i32 %sub.ptr.sub146, %RetValue44
  br i1 %cmp149, label %if.then151, label %if.else152

if.then151:                                       ; preds = %if.then143.Split
  %108 = load %struct.option*, %struct.option** %p, align 4
  store %struct.option* %108, %struct.option** %pfound, align 4
  %109 = load i32, i32* %option_index, align 4
  store i32 %109, i32* %indfound, align 4
  store i32 1, i32* %exact, align 4
  br label %for.end

if.else152:                                       ; preds = %if.then143.Split
  %110 = load %struct.option*, %struct.option** %pfound, align 4
  %cmp153 = icmp eq %struct.option* %110, null
  br i1 %cmp153, label %if.then155, label %if.else156

if.then155:                                       ; preds = %if.else152
  %111 = load %struct.option*, %struct.option** %p, align 4
  store %struct.option* %111, %struct.option** %pfound, align 4
  %112 = load i32, i32* %option_index, align 4
  store i32 %112, i32* %indfound, align 4
  br label %if.end157

if.else156:                                       ; preds = %if.else152
  store i32 1, i32* %ambig, align 4
  br label %if.end157

if.end157:                                        ; preds = %if.else156, %if.then155
  br label %if.end158

if.end158:                                        ; preds = %if.end157
  br label %if.end159

if.end159:                                        ; preds = %if.end158, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end159
  %113 = load %struct.option*, %struct.option** %p, align 4
  %incdec.ptr160 = getelementptr inbounds %struct.option, %struct.option* %113, i32 1
  store %struct.option* %incdec.ptr160, %struct.option** %p, align 4
  %114 = load i32, i32* %option_index, align 4
  %inc161 = add nsw i32 %114, 1
  store i32 %inc161, i32* %option_index, align 4
  br label %for.cond

for.end:                                          ; preds = %if.then151, %for.cond
  %115 = load i32, i32* %ambig, align 4
  %tobool162 = icmp ne i32 %115, 0
  br i1 %tobool162, label %land.lhs.true163, label %if.end177

land.lhs.true163:                                 ; preds = %for.end
  %116 = load i32, i32* %exact, align 4
  %tobool164 = icmp ne i32 %116, 0
  br i1 %tobool164, label %if.end177, label %if.then165

if.then165:                                       ; preds = %land.lhs.true163
  %117 = load i32, i32* @opterr, align 4
  %tobool166 = icmp ne i32 %117, 0
  br i1 %tobool166, label %if.then167, label %if.end173

if.then167:                                       ; preds = %if.then165
  %118 = load i8**, i8*** %argv.addr, align 4
  %119 = load i32, i32* @optind, align 4
  %arrayidx168 = getelementptr inbounds i8*, i8** %118, i32 %119
  %120 = load i8*, i8** %arrayidx168, align 4
  %121 = load i8**, i8*** %argv.addr, align 4
  %arrayidx169 = getelementptr inbounds i8*, i8** %121, i32 0
  %122 = load i8*, i8** %arrayidx169, align 4
  %call170 = call %struct._iobuf* @__iob_func()
  %arrayidx171 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call170, i32 2
  %call172 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx171, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @"??_C@_0BO@HAHAPHIK@?$CFs?3?5option?5?$GA?$CFs?8?5is?5ambiguous?6?$AA@", i32 0, i32 0), i8* %122, i8* %120)
  br label %if.end173

if.end173:                                        ; preds = %if.then167, %if.then165
  %123 = load i8*, i8** @nextchar, align 4
  br label %entry.my_strlen.Clone23

entry.my_strlen.Clone23:                          ; preds = %if.end173
  %str.addr.my_strlen.Clone24 = alloca i8*, align 4
  %n.my_strlen.Clone25 = alloca i32, align 4
  store i8* %123, i8** %str.addr.my_strlen.Clone24, align 4
  store i32 0, i32* %n.my_strlen.Clone25, align 4
  br label %while.cond.my_strlen.Clone26

while.cond.my_strlen.Clone26:                     ; preds = %while.body.my_strlen.Clone29, %entry.my_strlen.Clone23
  %124 = load i8*, i8** %str.addr.my_strlen.Clone24, align 4
  %incdec.ptr.my_strlen.Clone27 = getelementptr inbounds i8, i8* %124, i32 1
  store i8* %incdec.ptr.my_strlen.Clone27, i8** %str.addr.my_strlen.Clone24, align 4
  %125 = load i8, i8* %124, align 1
  %tobool.my_strlen.Clone28 = icmp ne i8 %125, 0
  br i1 %tobool.my_strlen.Clone28, label %while.body.my_strlen.Clone29, label %while.end.my_strlen.Clone31

while.body.my_strlen.Clone29:                     ; preds = %while.cond.my_strlen.Clone26
  %126 = load i32, i32* %n.my_strlen.Clone25, align 4
  %inc.my_strlen.Clone30 = add nsw i32 %126, 1
  store i32 %inc.my_strlen.Clone30, i32* %n.my_strlen.Clone25, align 4
  br label %while.cond.my_strlen.Clone26

while.end.my_strlen.Clone31:                      ; preds = %while.cond.my_strlen.Clone26
  %127 = load i32, i32* %n.my_strlen.Clone25, align 4
  store i32 %127, i32* %RetValuePtr32
  br label %if.end173.Split

if.end173.Split:                                  ; preds = %while.end.my_strlen.Clone31
  %RetValue33 = load i32, i32* %RetValuePtr32
  %128 = load i8*, i8** @nextchar, align 4
  %add.ptr175 = getelementptr inbounds i8, i8* %128, i32 %RetValue33
  store i8* %add.ptr175, i8** @nextchar, align 4
  %129 = load i32, i32* @optind, align 4
  %inc176 = add nsw i32 %129, 1
  store i32 %inc176, i32* @optind, align 4
  store i32 0, i32* %retval, align 4
  br label %return

if.end177:                                        ; preds = %land.lhs.true163, %for.end
  %130 = load %struct.option*, %struct.option** %pfound, align 4
  %cmp178 = icmp ne %struct.option* %130, null
  br i1 %cmp178, label %if.then180, label %if.end256

if.then180:                                       ; preds = %if.end177
  %131 = load i32, i32* %indfound, align 4
  store i32 %131, i32* %option_index, align 4
  %132 = load i32, i32* @optind, align 4
  %inc181 = add nsw i32 %132, 1
  store i32 %inc181, i32* @optind, align 4
  %133 = load i8*, i8** %s, align 4
  %134 = load i8, i8* %133, align 1
  %tobool182 = icmp ne i8 %134, 0
  br i1 %tobool182, label %if.then183, label %if.else216

if.then183:                                       ; preds = %if.then180
  %135 = load %struct.option*, %struct.option** %pfound, align 4
  %has_arg = getelementptr inbounds %struct.option, %struct.option* %135, i32 0, i32 1
  %136 = load i32, i32* %has_arg, align 4
  %tobool184 = icmp ne i32 %136, 0
  br i1 %tobool184, label %if.then185, label %if.else187

if.then185:                                       ; preds = %if.then183
  %137 = load i8*, i8** %s, align 4
  %add.ptr186 = getelementptr inbounds i8, i8* %137, i32 1
  store i8* %add.ptr186, i8** @optarg, align 4
  br label %if.end215

if.else187:                                       ; preds = %if.then183
  %138 = load i32, i32* @opterr, align 4
  %tobool188 = icmp ne i32 %138, 0
  br i1 %tobool188, label %if.then189, label %if.end212

if.then189:                                       ; preds = %if.else187
  %139 = load i8**, i8*** %argv.addr, align 4
  %140 = load i32, i32* @optind, align 4
  %sub = sub nsw i32 %140, 1
  %arrayidx190 = getelementptr inbounds i8*, i8** %139, i32 %sub
  %141 = load i8*, i8** %arrayidx190, align 4
  %arrayidx191 = getelementptr inbounds i8, i8* %141, i32 1
  %142 = load i8, i8* %arrayidx191, align 1
  %conv192 = sext i8 %142 to i32
  %cmp193 = icmp eq i32 %conv192, 45
  br i1 %cmp193, label %if.then195, label %if.else201

if.then195:                                       ; preds = %if.then189
  %143 = load %struct.option*, %struct.option** %pfound, align 4
  %name196 = getelementptr inbounds %struct.option, %struct.option* %143, i32 0, i32 0
  %144 = load i8*, i8** %name196, align 4
  %145 = load i8**, i8*** %argv.addr, align 4
  %arrayidx197 = getelementptr inbounds i8*, i8** %145, i32 0
  %146 = load i8*, i8** %arrayidx197, align 4
  %call198 = call %struct._iobuf* @__iob_func()
  %arrayidx199 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call198, i32 2
  %call200 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx199, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @"??_C@_0CN@JOLJOADE@?$CFs?3?5option?5?$GA?9?9?$CFs?8?5doesn?8t?5allow?5@", i32 0, i32 0), i8* %146, i8* %144)
  br label %if.end211

if.else201:                                       ; preds = %if.then189
  %147 = load %struct.option*, %struct.option** %pfound, align 4
  %name202 = getelementptr inbounds %struct.option, %struct.option* %147, i32 0, i32 0
  %148 = load i8*, i8** %name202, align 4
  %149 = load i8**, i8*** %argv.addr, align 4
  %150 = load i32, i32* @optind, align 4
  %sub203 = sub nsw i32 %150, 1
  %arrayidx204 = getelementptr inbounds i8*, i8** %149, i32 %sub203
  %151 = load i8*, i8** %arrayidx204, align 4
  %arrayidx205 = getelementptr inbounds i8, i8* %151, i32 0
  %152 = load i8, i8* %arrayidx205, align 1
  %conv206 = sext i8 %152 to i32
  %153 = load i8**, i8*** %argv.addr, align 4
  %arrayidx207 = getelementptr inbounds i8*, i8** %153, i32 0
  %154 = load i8*, i8** %arrayidx207, align 4
  %call208 = call %struct._iobuf* @__iob_func()
  %arrayidx209 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call208, i32 2
  %call210 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx209, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @"??_C@_0CN@CNGCPJCC@?$CFs?3?5option?5?$GA?$CFc?$CFs?8?5doesn?8t?5allow?5@", i32 0, i32 0), i8* %154, i32 %conv206, i8* %148)
  br label %if.end211

if.end211:                                        ; preds = %if.else201, %if.then195
  br label %if.end212

if.end212:                                        ; preds = %if.end211, %if.else187
  %155 = load i8*, i8** @nextchar, align 4
  br label %entry.my_strlen.Clone12

entry.my_strlen.Clone12:                          ; preds = %if.end212
  %str.addr.my_strlen.Clone13 = alloca i8*, align 4
  %n.my_strlen.Clone14 = alloca i32, align 4
  store i8* %155, i8** %str.addr.my_strlen.Clone13, align 4
  store i32 0, i32* %n.my_strlen.Clone14, align 4
  br label %while.cond.my_strlen.Clone15

while.cond.my_strlen.Clone15:                     ; preds = %while.body.my_strlen.Clone18, %entry.my_strlen.Clone12
  %156 = load i8*, i8** %str.addr.my_strlen.Clone13, align 4
  %incdec.ptr.my_strlen.Clone16 = getelementptr inbounds i8, i8* %156, i32 1
  store i8* %incdec.ptr.my_strlen.Clone16, i8** %str.addr.my_strlen.Clone13, align 4
  %157 = load i8, i8* %156, align 1
  %tobool.my_strlen.Clone17 = icmp ne i8 %157, 0
  br i1 %tobool.my_strlen.Clone17, label %while.body.my_strlen.Clone18, label %while.end.my_strlen.Clone20

while.body.my_strlen.Clone18:                     ; preds = %while.cond.my_strlen.Clone15
  %158 = load i32, i32* %n.my_strlen.Clone14, align 4
  %inc.my_strlen.Clone19 = add nsw i32 %158, 1
  store i32 %inc.my_strlen.Clone19, i32* %n.my_strlen.Clone14, align 4
  br label %while.cond.my_strlen.Clone15

while.end.my_strlen.Clone20:                      ; preds = %while.cond.my_strlen.Clone15
  %159 = load i32, i32* %n.my_strlen.Clone14, align 4
  store i32 %159, i32* %RetValuePtr21
  br label %if.end212.Split

if.end212.Split:                                  ; preds = %while.end.my_strlen.Clone20
  %RetValue22 = load i32, i32* %RetValuePtr21
  %160 = load i8*, i8** @nextchar, align 4
  %add.ptr214 = getelementptr inbounds i8, i8* %160, i32 %RetValue22
  store i8* %add.ptr214, i8** @nextchar, align 4
  store i32 0, i32* %retval, align 4
  br label %return

if.end215:                                        ; preds = %if.then185
  br label %if.end244

if.else216:                                       ; preds = %if.then180
  %161 = load %struct.option*, %struct.option** %pfound, align 4
  %has_arg217 = getelementptr inbounds %struct.option, %struct.option* %161, i32 0, i32 1
  %162 = load i32, i32* %has_arg217, align 4
  %cmp218 = icmp eq i32 %162, 1
  br i1 %cmp218, label %if.then220, label %if.end243

if.then220:                                       ; preds = %if.else216
  %163 = load i32, i32* @optind, align 4
  %164 = load i32, i32* %argc.addr, align 4
  %cmp221 = icmp slt i32 %163, %164
  br i1 %cmp221, label %if.then223, label %if.else226

if.then223:                                       ; preds = %if.then220
  %165 = load i8**, i8*** %argv.addr, align 4
  %166 = load i32, i32* @optind, align 4
  %inc224 = add nsw i32 %166, 1
  store i32 %inc224, i32* @optind, align 4
  %arrayidx225 = getelementptr inbounds i8*, i8** %165, i32 %166
  %167 = load i8*, i8** %arrayidx225, align 4
  store i8* %167, i8** @optarg, align 4
  br label %if.end242

if.else226:                                       ; preds = %if.then220
  %168 = load i32, i32* @opterr, align 4
  %tobool227 = icmp ne i32 %168, 0
  br i1 %tobool227, label %if.then228, label %if.end235

if.then228:                                       ; preds = %if.else226
  %169 = load i8**, i8*** %argv.addr, align 4
  %170 = load i32, i32* @optind, align 4
  %sub229 = sub nsw i32 %170, 1
  %arrayidx230 = getelementptr inbounds i8*, i8** %169, i32 %sub229
  %171 = load i8*, i8** %arrayidx230, align 4
  %172 = load i8**, i8*** %argv.addr, align 4
  %arrayidx231 = getelementptr inbounds i8*, i8** %172, i32 0
  %173 = load i8*, i8** %arrayidx231, align 4
  %call232 = call %struct._iobuf* @__iob_func()
  %arrayidx233 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call232, i32 2
  %call234 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx233, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @"??_C@_0CG@PLJDJCIA@?$CFs?3?5option?5?$GA?$CFs?8?5requires?5an?5argu@", i32 0, i32 0), i8* %173, i8* %171)
  br label %if.end235

if.end235:                                        ; preds = %if.then228, %if.else226
  %174 = load i8*, i8** @nextchar, align 4
  br label %entry.my_strlen.Clone1

entry.my_strlen.Clone1:                           ; preds = %if.end235
  %str.addr.my_strlen.Clone2 = alloca i8*, align 4
  %n.my_strlen.Clone3 = alloca i32, align 4
  store i8* %174, i8** %str.addr.my_strlen.Clone2, align 4
  store i32 0, i32* %n.my_strlen.Clone3, align 4
  br label %while.cond.my_strlen.Clone4

while.cond.my_strlen.Clone4:                      ; preds = %while.body.my_strlen.Clone7, %entry.my_strlen.Clone1
  %175 = load i8*, i8** %str.addr.my_strlen.Clone2, align 4
  %incdec.ptr.my_strlen.Clone5 = getelementptr inbounds i8, i8* %175, i32 1
  store i8* %incdec.ptr.my_strlen.Clone5, i8** %str.addr.my_strlen.Clone2, align 4
  %176 = load i8, i8* %175, align 1
  %tobool.my_strlen.Clone6 = icmp ne i8 %176, 0
  br i1 %tobool.my_strlen.Clone6, label %while.body.my_strlen.Clone7, label %while.end.my_strlen.Clone9

while.body.my_strlen.Clone7:                      ; preds = %while.cond.my_strlen.Clone4
  %177 = load i32, i32* %n.my_strlen.Clone3, align 4
  %inc.my_strlen.Clone8 = add nsw i32 %177, 1
  store i32 %inc.my_strlen.Clone8, i32* %n.my_strlen.Clone3, align 4
  br label %while.cond.my_strlen.Clone4

while.end.my_strlen.Clone9:                       ; preds = %while.cond.my_strlen.Clone4
  %178 = load i32, i32* %n.my_strlen.Clone3, align 4
  store i32 %178, i32* %RetValuePtr10
  br label %if.end235.Split

if.end235.Split:                                  ; preds = %while.end.my_strlen.Clone9
  %RetValue11 = load i32, i32* %RetValuePtr10
  %179 = load i8*, i8** @nextchar, align 4
  %add.ptr237 = getelementptr inbounds i8, i8* %179, i32 %RetValue11
  store i8* %add.ptr237, i8** @nextchar, align 4
  %180 = load i8*, i8** %optstring.addr, align 4
  %arrayidx238 = getelementptr inbounds i8, i8* %180, i32 0
  %181 = load i8, i8* %arrayidx238, align 1
  %conv239 = sext i8 %181 to i32
  %cmp240 = icmp eq i32 %conv239, 58
  %182 = zext i1 %cmp240 to i64
  %cond = select i1 %cmp240, i32 58, i32 0
  store i32 %cond, i32* %retval, align 4
  br label %return

if.end242:                                        ; preds = %if.then223
  br label %if.end243

if.end243:                                        ; preds = %if.end242, %if.else216
  br label %if.end244

if.end244:                                        ; preds = %if.end243, %if.end215
  %183 = load i8*, i8** @nextchar, align 4
  br label %entry.my_strlen.Clone

entry.my_strlen.Clone:                            ; preds = %if.end244
  %str.addr.my_strlen.Clone = alloca i8*, align 4
  %n.my_strlen.Clone = alloca i32, align 4
  store i8* %183, i8** %str.addr.my_strlen.Clone, align 4
  store i32 0, i32* %n.my_strlen.Clone, align 4
  br label %while.cond.my_strlen.Clone

while.cond.my_strlen.Clone:                       ; preds = %while.body.my_strlen.Clone, %entry.my_strlen.Clone
  %184 = load i8*, i8** %str.addr.my_strlen.Clone, align 4
  %incdec.ptr.my_strlen.Clone = getelementptr inbounds i8, i8* %184, i32 1
  store i8* %incdec.ptr.my_strlen.Clone, i8** %str.addr.my_strlen.Clone, align 4
  %185 = load i8, i8* %184, align 1
  %tobool.my_strlen.Clone = icmp ne i8 %185, 0
  br i1 %tobool.my_strlen.Clone, label %while.body.my_strlen.Clone, label %while.end.my_strlen.Clone

while.body.my_strlen.Clone:                       ; preds = %while.cond.my_strlen.Clone
  %186 = load i32, i32* %n.my_strlen.Clone, align 4
  %inc.my_strlen.Clone = add nsw i32 %186, 1
  store i32 %inc.my_strlen.Clone, i32* %n.my_strlen.Clone, align 4
  br label %while.cond.my_strlen.Clone

while.end.my_strlen.Clone:                        ; preds = %while.cond.my_strlen.Clone
  %187 = load i32, i32* %n.my_strlen.Clone, align 4
  store i32 %187, i32* %RetValuePtr
  br label %if.end244.Split

if.end244.Split:                                  ; preds = %while.end.my_strlen.Clone
  %RetValue = load i32, i32* %RetValuePtr
  %188 = load i8*, i8** @nextchar, align 4
  %add.ptr246 = getelementptr inbounds i8, i8* %188, i32 %RetValue
  store i8* %add.ptr246, i8** @nextchar, align 4
  %189 = load i32*, i32** %longind.addr, align 4
  %cmp247 = icmp ne i32* %189, null
  br i1 %cmp247, label %if.then249, label %if.end250

if.then249:                                       ; preds = %if.end244.Split
  %190 = load i32, i32* %option_index, align 4
  %191 = load i32*, i32** %longind.addr, align 4
  store i32 %190, i32* %191, align 4
  br label %if.end250

if.end250:                                        ; preds = %if.then249, %if.end244.Split
  %192 = load %struct.option*, %struct.option** %pfound, align 4
  %flag = getelementptr inbounds %struct.option, %struct.option* %192, i32 0, i32 2
  %193 = load i32*, i32** %flag, align 4
  %tobool251 = icmp ne i32* %193, null
  br i1 %tobool251, label %if.then252, label %if.end254

if.then252:                                       ; preds = %if.end250
  %194 = load %struct.option*, %struct.option** %pfound, align 4
  %val = getelementptr inbounds %struct.option, %struct.option* %194, i32 0, i32 3
  %195 = load i32, i32* %val, align 4
  %196 = load %struct.option*, %struct.option** %pfound, align 4
  %flag253 = getelementptr inbounds %struct.option, %struct.option* %196, i32 0, i32 2
  %197 = load i32*, i32** %flag253, align 4
  store i32 %195, i32* %197, align 4
  store i32 0, i32* %retval, align 4
  br label %return

if.end254:                                        ; preds = %if.end250
  %198 = load %struct.option*, %struct.option** %pfound, align 4
  %val255 = getelementptr inbounds %struct.option, %struct.option* %198, i32 0, i32 3
  %199 = load i32, i32* %val255, align 4
  store i32 %199, i32* %retval, align 4
  br label %return

if.end256:                                        ; preds = %if.end177
  %200 = load i32, i32* %long_only.addr, align 4
  %tobool257 = icmp ne i32 %200, 0
  br i1 %tobool257, label %lor.lhs.false258, label %if.then269

lor.lhs.false258:                                 ; preds = %if.end256
  %201 = load i8**, i8*** %argv.addr, align 4
  %202 = load i32, i32* @optind, align 4
  %arrayidx259 = getelementptr inbounds i8*, i8** %201, i32 %202
  %203 = load i8*, i8** %arrayidx259, align 4
  %arrayidx260 = getelementptr inbounds i8, i8* %203, i32 1
  %204 = load i8, i8* %arrayidx260, align 1
  %conv261 = sext i8 %204 to i32
  %cmp262 = icmp eq i32 %conv261, 45
  br i1 %cmp262, label %if.then269, label %lor.lhs.false264

lor.lhs.false264:                                 ; preds = %lor.lhs.false258
  %205 = load i8*, i8** @nextchar, align 4
  %206 = load i8, i8* %205, align 1
  %conv265 = sext i8 %206 to i32
  %207 = load i8*, i8** %optstring.addr, align 4
  br label %entry.my_index.Clone47

entry.my_index.Clone47:                           ; preds = %lor.lhs.false264
  %retval.my_index.Clone48 = alloca i8*, align 4
  %chr.addr.my_index.Clone49 = alloca i32, align 4
  %str.addr.my_index.Clone50 = alloca i8*, align 4
  store i32 %conv265, i32* %chr.addr.my_index.Clone49, align 4
  store i8* %207, i8** %str.addr.my_index.Clone50, align 4
  br label %while.cond.my_index.Clone51

while.cond.my_index.Clone51:                      ; preds = %if.end.my_index.Clone57, %entry.my_index.Clone47
  %208 = load i8*, i8** %str.addr.my_index.Clone50, align 4
  %209 = load i8, i8* %208, align 1
  %tobool.my_index.Clone52 = icmp ne i8 %209, 0
  br i1 %tobool.my_index.Clone52, label %while.body.my_index.Clone53, label %while.end.my_index.Clone59

while.body.my_index.Clone53:                      ; preds = %while.cond.my_index.Clone51
  %210 = load i8*, i8** %str.addr.my_index.Clone50, align 4
  %211 = load i8, i8* %210, align 1
  %conv.my_index.Clone54 = sext i8 %211 to i32
  %212 = load i32, i32* %chr.addr.my_index.Clone49, align 4
  %cmp.my_index.Clone55 = icmp eq i32 %conv.my_index.Clone54, %212
  br i1 %cmp.my_index.Clone55, label %if.then.my_index.Clone56, label %if.end.my_index.Clone57

if.then.my_index.Clone56:                         ; preds = %while.body.my_index.Clone53
  %213 = load i8*, i8** %str.addr.my_index.Clone50, align 4
  store i8* %213, i8** %retval.my_index.Clone48, align 4
  br label %return.my_index.Clone60

if.end.my_index.Clone57:                          ; preds = %while.body.my_index.Clone53
  %214 = load i8*, i8** %str.addr.my_index.Clone50, align 4
  %incdec.ptr.my_index.Clone58 = getelementptr inbounds i8, i8* %214, i32 1
  store i8* %incdec.ptr.my_index.Clone58, i8** %str.addr.my_index.Clone50, align 4
  br label %while.cond.my_index.Clone51

while.end.my_index.Clone59:                       ; preds = %while.cond.my_index.Clone51
  store i8* null, i8** %retval.my_index.Clone48, align 4
  br label %return.my_index.Clone60

return.my_index.Clone60:                          ; preds = %while.end.my_index.Clone59, %if.then.my_index.Clone56
  %215 = load i8*, i8** %retval.my_index.Clone48, align 4
  store i8* %215, i8** %RetValuePtr61
  br label %lor.lhs.false264.Split

lor.lhs.false264.Split:                           ; preds = %return.my_index.Clone60
  %RetValue62 = load i8*, i8** %RetValuePtr61
  %cmp267 = icmp eq i8* %RetValue62, null
  br i1 %cmp267, label %if.then269, label %if.end293

if.then269:                                       ; preds = %lor.lhs.false264.Split, %lor.lhs.false258, %if.end256
  %216 = load i32, i32* @opterr, align 4
  %tobool270 = icmp ne i32 %216, 0
  br i1 %tobool270, label %if.then271, label %if.end291

if.then271:                                       ; preds = %if.then269
  %217 = load i8**, i8*** %argv.addr, align 4
  %218 = load i32, i32* @optind, align 4
  %arrayidx272 = getelementptr inbounds i8*, i8** %217, i32 %218
  %219 = load i8*, i8** %arrayidx272, align 4
  %arrayidx273 = getelementptr inbounds i8, i8* %219, i32 1
  %220 = load i8, i8* %arrayidx273, align 1
  %conv274 = sext i8 %220 to i32
  %cmp275 = icmp eq i32 %conv274, 45
  br i1 %cmp275, label %if.then277, label %if.else282

if.then277:                                       ; preds = %if.then271
  %221 = load i8*, i8** @nextchar, align 4
  %222 = load i8**, i8*** %argv.addr, align 4
  %arrayidx278 = getelementptr inbounds i8*, i8** %222, i32 0
  %223 = load i8*, i8** %arrayidx278, align 4
  %call279 = call %struct._iobuf* @__iob_func()
  %arrayidx280 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call279, i32 2
  %call281 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx280, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @"??_C@_0CA@EHMECPBA@?$CFs?3?5unrecognized?5option?5?$GA?9?9?$CFs?8?6?$AA@", i32 0, i32 0), i8* %223, i8* %221)
  br label %if.end290

if.else282:                                       ; preds = %if.then271
  %224 = load i8*, i8** @nextchar, align 4
  %225 = load i8**, i8*** %argv.addr, align 4
  %226 = load i32, i32* @optind, align 4
  %arrayidx283 = getelementptr inbounds i8*, i8** %225, i32 %226
  %227 = load i8*, i8** %arrayidx283, align 4
  %arrayidx284 = getelementptr inbounds i8, i8* %227, i32 0
  %228 = load i8, i8* %arrayidx284, align 1
  %conv285 = sext i8 %228 to i32
  %229 = load i8**, i8*** %argv.addr, align 4
  %arrayidx286 = getelementptr inbounds i8*, i8** %229, i32 0
  %230 = load i8*, i8** %arrayidx286, align 4
  %call287 = call %struct._iobuf* @__iob_func()
  %arrayidx288 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call287, i32 2
  %call289 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx288, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @"??_C@_0CA@EBHJAKGL@?$CFs?3?5unrecognized?5option?5?$GA?$CFc?$CFs?8?6?$AA@", i32 0, i32 0), i8* %230, i32 %conv285, i8* %224)
  br label %if.end290

if.end290:                                        ; preds = %if.else282, %if.then277
  br label %if.end291

if.end291:                                        ; preds = %if.end290, %if.then269
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @"??_C@_00CNPNBAHC@?$AA@", i32 0, i32 0), i8** @nextchar, align 4
  %231 = load i32, i32* @optind, align 4
  %inc292 = add nsw i32 %231, 1
  store i32 %inc292, i32* @optind, align 4
  store i32 0, i32* %retval, align 4
  br label %return

if.end293:                                        ; preds = %lor.lhs.false264.Split
  br label %if.end294

if.end294:                                        ; preds = %if.end293, %lor.lhs.false124, %land.lhs.true112, %if.end109
  %232 = load i8*, i8** @nextchar, align 4
  %incdec.ptr295 = getelementptr inbounds i8, i8* %232, i32 1
  store i8* %incdec.ptr295, i8** @nextchar, align 4
  %233 = load i8, i8* %232, align 1
  store i8 %233, i8* %c, align 1
  %234 = load i8, i8* %c, align 1
  %conv296 = sext i8 %234 to i32
  %235 = load i8*, i8** %optstring.addr, align 4
  br label %entry.my_index.Clone

entry.my_index.Clone:                             ; preds = %if.end294
  %retval.my_index.Clone = alloca i8*, align 4
  %chr.addr.my_index.Clone = alloca i32, align 4
  %str.addr.my_index.Clone = alloca i8*, align 4
  store i32 %conv296, i32* %chr.addr.my_index.Clone, align 4
  store i8* %235, i8** %str.addr.my_index.Clone, align 4
  br label %while.cond.my_index.Clone

while.cond.my_index.Clone:                        ; preds = %if.end.my_index.Clone, %entry.my_index.Clone
  %236 = load i8*, i8** %str.addr.my_index.Clone, align 4
  %237 = load i8, i8* %236, align 1
  %tobool.my_index.Clone = icmp ne i8 %237, 0
  br i1 %tobool.my_index.Clone, label %while.body.my_index.Clone, label %while.end.my_index.Clone

while.body.my_index.Clone:                        ; preds = %while.cond.my_index.Clone
  %238 = load i8*, i8** %str.addr.my_index.Clone, align 4
  %239 = load i8, i8* %238, align 1
  %conv.my_index.Clone = sext i8 %239 to i32
  %240 = load i32, i32* %chr.addr.my_index.Clone, align 4
  %cmp.my_index.Clone = icmp eq i32 %conv.my_index.Clone, %240
  br i1 %cmp.my_index.Clone, label %if.then.my_index.Clone, label %if.end.my_index.Clone

if.then.my_index.Clone:                           ; preds = %while.body.my_index.Clone
  %241 = load i8*, i8** %str.addr.my_index.Clone, align 4
  store i8* %241, i8** %retval.my_index.Clone, align 4
  br label %return.my_index.Clone

if.end.my_index.Clone:                            ; preds = %while.body.my_index.Clone
  %242 = load i8*, i8** %str.addr.my_index.Clone, align 4
  %incdec.ptr.my_index.Clone = getelementptr inbounds i8, i8* %242, i32 1
  store i8* %incdec.ptr.my_index.Clone, i8** %str.addr.my_index.Clone, align 4
  br label %while.cond.my_index.Clone

while.end.my_index.Clone:                         ; preds = %while.cond.my_index.Clone
  store i8* null, i8** %retval.my_index.Clone, align 4
  br label %return.my_index.Clone

return.my_index.Clone:                            ; preds = %while.end.my_index.Clone, %if.then.my_index.Clone
  %243 = load i8*, i8** %retval.my_index.Clone, align 4
  store i8* %243, i8** %RetValuePtr45
  br label %if.end294.Split

if.end294.Split:                                  ; preds = %return.my_index.Clone
  %RetValue46 = load i8*, i8** %RetValuePtr45
  store i8* %RetValue46, i8** %temp, align 4
  %244 = load i8*, i8** @nextchar, align 4
  %245 = load i8, i8* %244, align 1
  %conv298 = sext i8 %245 to i32
  %cmp299 = icmp eq i32 %conv298, 0
  br i1 %cmp299, label %if.then301, label %if.end303

if.then301:                                       ; preds = %if.end294.Split
  %246 = load i32, i32* @optind, align 4
  %inc302 = add nsw i32 %246, 1
  store i32 %inc302, i32* @optind, align 4
  br label %if.end303

if.end303:                                        ; preds = %if.then301, %if.end294.Split
  %247 = load i8*, i8** %temp, align 4
  %cmp304 = icmp eq i8* %247, null
  br i1 %cmp304, label %if.then310, label %lor.lhs.false306

lor.lhs.false306:                                 ; preds = %if.end303
  %248 = load i8, i8* %c, align 1
  %conv307 = sext i8 %248 to i32
  %cmp308 = icmp eq i32 %conv307, 58
  br i1 %cmp308, label %if.then310, label %if.end320

if.then310:                                       ; preds = %lor.lhs.false306, %if.end303
  %249 = load i32, i32* @opterr, align 4
  %tobool311 = icmp ne i32 %249, 0
  br i1 %tobool311, label %if.then312, label %if.end318

if.then312:                                       ; preds = %if.then310
  %250 = load i8, i8* %c, align 1
  %conv313 = sext i8 %250 to i32
  %251 = load i8**, i8*** %argv.addr, align 4
  %arrayidx314 = getelementptr inbounds i8*, i8** %251, i32 0
  %252 = load i8*, i8** %arrayidx314, align 4
  %call315 = call %struct._iobuf* @__iob_func()
  %arrayidx316 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call315, i32 2
  %call317 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx316, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @"??_C@_0BK@NLCMBLAE@?$CFs?3?5illegal?5option?5?9?9?5?$CFc?6?$AA@", i32 0, i32 0), i8* %252, i32 %conv313)
  br label %if.end318

if.end318:                                        ; preds = %if.then312, %if.then310
  %253 = load i8, i8* %c, align 1
  %conv319 = sext i8 %253 to i32
  store i32 %conv319, i32* @optopt, align 4
  store i32 0, i32* %retval, align 4
  br label %return

if.end320:                                        ; preds = %lor.lhs.false306
  %254 = load i8*, i8** %temp, align 4
  %arrayidx321 = getelementptr inbounds i8, i8* %254, i32 1
  %255 = load i8, i8* %arrayidx321, align 1
  %conv322 = sext i8 %255 to i32
  %cmp323 = icmp eq i32 %conv322, 58
  br i1 %cmp323, label %if.then325, label %if.end370

if.then325:                                       ; preds = %if.end320
  %256 = load i8*, i8** %temp, align 4
  %arrayidx326 = getelementptr inbounds i8, i8* %256, i32 2
  %257 = load i8, i8* %arrayidx326, align 1
  %conv327 = sext i8 %257 to i32
  %cmp328 = icmp eq i32 %conv327, 58
  br i1 %cmp328, label %if.then330, label %if.else338

if.then330:                                       ; preds = %if.then325
  %258 = load i8*, i8** @nextchar, align 4
  %259 = load i8, i8* %258, align 1
  %conv331 = sext i8 %259 to i32
  %cmp332 = icmp ne i32 %conv331, 0
  br i1 %cmp332, label %if.then334, label %if.else336

if.then334:                                       ; preds = %if.then330
  %260 = load i8*, i8** @nextchar, align 4
  store i8* %260, i8** @optarg, align 4
  %261 = load i32, i32* @optind, align 4
  %inc335 = add nsw i32 %261, 1
  store i32 %inc335, i32* @optind, align 4
  br label %if.end337

if.else336:                                       ; preds = %if.then330
  store i8* null, i8** @optarg, align 4
  br label %if.end337

if.end337:                                        ; preds = %if.else336, %if.then334
  store i8* null, i8** @nextchar, align 4
  br label %if.end369

if.else338:                                       ; preds = %if.then325
  %262 = load i8*, i8** @nextchar, align 4
  %263 = load i8, i8* %262, align 1
  %conv339 = sext i8 %263 to i32
  %cmp340 = icmp ne i32 %conv339, 0
  br i1 %cmp340, label %if.then342, label %if.else344

if.then342:                                       ; preds = %if.else338
  %264 = load i8*, i8** @nextchar, align 4
  store i8* %264, i8** @optarg, align 4
  %265 = load i32, i32* @optind, align 4
  %inc343 = add nsw i32 %265, 1
  store i32 %inc343, i32* @optind, align 4
  br label %if.end368

if.else344:                                       ; preds = %if.else338
  %266 = load i32, i32* @optind, align 4
  %267 = load i32, i32* %argc.addr, align 4
  %cmp345 = icmp eq i32 %266, %267
  br i1 %cmp345, label %if.then347, label %if.else364

if.then347:                                       ; preds = %if.else344
  %268 = load i32, i32* @opterr, align 4
  %tobool348 = icmp ne i32 %268, 0
  br i1 %tobool348, label %if.then349, label %if.end355

if.then349:                                       ; preds = %if.then347
  %269 = load i8, i8* %c, align 1
  %conv350 = sext i8 %269 to i32
  %270 = load i8**, i8*** %argv.addr, align 4
  %arrayidx351 = getelementptr inbounds i8*, i8** %270, i32 0
  %271 = load i8*, i8** %arrayidx351, align 4
  %call352 = call %struct._iobuf* @__iob_func()
  %arrayidx353 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call352, i32 2
  %call354 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx353, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @"??_C@_0CH@FFGNJLF@?$CFs?3?5option?5requires?5an?5argument?5@", i32 0, i32 0), i8* %271, i32 %conv350)
  br label %if.end355

if.end355:                                        ; preds = %if.then349, %if.then347
  %272 = load i8, i8* %c, align 1
  %conv356 = sext i8 %272 to i32
  store i32 %conv356, i32* @optopt, align 4
  %273 = load i8*, i8** %optstring.addr, align 4
  %arrayidx357 = getelementptr inbounds i8, i8* %273, i32 0
  %274 = load i8, i8* %arrayidx357, align 1
  %conv358 = sext i8 %274 to i32
  %cmp359 = icmp eq i32 %conv358, 58
  br i1 %cmp359, label %if.then361, label %if.else362

if.then361:                                       ; preds = %if.end355
  store i8 58, i8* %c, align 1
  br label %if.end363

if.else362:                                       ; preds = %if.end355
  store i8 0, i8* %c, align 1
  br label %if.end363

if.end363:                                        ; preds = %if.else362, %if.then361
  br label %if.end367

if.else364:                                       ; preds = %if.else344
  %275 = load i8**, i8*** %argv.addr, align 4
  %276 = load i32, i32* @optind, align 4
  %inc365 = add nsw i32 %276, 1
  store i32 %inc365, i32* @optind, align 4
  %arrayidx366 = getelementptr inbounds i8*, i8** %275, i32 %276
  %277 = load i8*, i8** %arrayidx366, align 4
  store i8* %277, i8** @optarg, align 4
  br label %if.end367

if.end367:                                        ; preds = %if.else364, %if.end363
  br label %if.end368

if.end368:                                        ; preds = %if.end367, %if.then342
  store i8* null, i8** @nextchar, align 4
  br label %if.end369

if.end369:                                        ; preds = %if.end368, %if.end337
  br label %if.end370

if.end370:                                        ; preds = %if.end369, %if.end320
  %278 = load i8, i8* %c, align 1
  %conv371 = sext i8 %278 to i32
  store i32 %conv371, i32* %retval, align 4
  br label %return

return:                                           ; preds = %CallOutFuncBB, %if.end370, %if.end318, %if.end291, %if.end254, %if.then252, %if.end235.Split, %if.end212.Split, %if.end173.Split, %if.end94, %if.then93
  %279 = load i32, i32* %retval, align 4
  ret i32 %279
}

declare dso_local i8* @getenv(...) #3

; Function Attrs: noinline nounwind optnone sspstrong
define internal void @exchange(i8** %argv) #0 {
entry:
  %argv.addr = alloca i8**, align 4
  %temp = alloca i8*, align 4
  %first = alloca i8**, align 4
  %last = alloca i8**, align 4
  store i8** %argv, i8*** %argv.addr, align 4
  %0 = load i8**, i8*** %argv.addr, align 4
  %1 = load i32, i32* @first_nonopt, align 4
  %arrayidx = getelementptr inbounds i8*, i8** %0, i32 %1
  store i8** %arrayidx, i8*** %first, align 4
  %2 = load i8**, i8*** %argv.addr, align 4
  %3 = load i32, i32* @optind, align 4
  %sub = sub nsw i32 %3, 1
  %arrayidx1 = getelementptr inbounds i8*, i8** %2, i32 %sub
  store i8** %arrayidx1, i8*** %last, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %4 = load i8**, i8*** %first, align 4
  %5 = load i8**, i8*** %last, align 4
  %cmp = icmp ult i8** %4, %5
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %6 = load i8**, i8*** %first, align 4
  %7 = load i8*, i8** %6, align 4
  store i8* %7, i8** %temp, align 4
  %8 = load i8**, i8*** %last, align 4
  %9 = load i8*, i8** %8, align 4
  %10 = load i8**, i8*** %first, align 4
  store i8* %9, i8** %10, align 4
  %11 = load i8*, i8** %temp, align 4
  %12 = load i8**, i8*** %last, align 4
  store i8* %11, i8** %12, align 4
  %13 = load i8**, i8*** %first, align 4
  %incdec.ptr = getelementptr inbounds i8*, i8** %13, i32 1
  store i8** %incdec.ptr, i8*** %first, align 4
  %14 = load i8**, i8*** %last, align 4
  %incdec.ptr2 = getelementptr inbounds i8*, i8** %14, i32 -1
  store i8** %incdec.ptr2, i8*** %last, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %15 = load i8**, i8*** %argv.addr, align 4
  %16 = load i32, i32* @first_nonopt, align 4
  %arrayidx3 = getelementptr inbounds i8*, i8** %15, i32 %16
  store i8** %arrayidx3, i8*** %first, align 4
  %17 = load i32, i32* @optind, align 4
  %18 = load i32, i32* @last_nonopt, align 4
  %sub4 = sub nsw i32 %17, %18
  %19 = load i32, i32* @first_nonopt, align 4
  %add = add nsw i32 %19, %sub4
  store i32 %add, i32* @first_nonopt, align 4
  %20 = load i8**, i8*** %argv.addr, align 4
  %21 = load i32, i32* @first_nonopt, align 4
  %sub5 = sub nsw i32 %21, 1
  %arrayidx6 = getelementptr inbounds i8*, i8** %20, i32 %sub5
  store i8** %arrayidx6, i8*** %last, align 4
  br label %CallOutFuncBB

CallOutFuncBB:                                    ; preds = %while.end
  call void @while.cond7.OutLineFunc(i8*** %first, i8*** %last, i8** %temp, i8*** %argv.addr)
  %22 = getelementptr inbounds %Struct.RetValue.7, %Struct.RetValue.7* @Struct.RetValue.9, i32 0, i32 0
  %23 = load i8***, i8**** %22, align 4
  %24 = load i8**, i8*** %23, align 4
  store i8** %24, i8*** %first
  %25 = getelementptr inbounds %Struct.RetValue.7, %Struct.RetValue.7* @Struct.RetValue.9, i32 0, i32 1
  %26 = load i8***, i8**** %25, align 4
  %27 = load i8**, i8*** %26, align 4
  store i8** %27, i8*** %last
  %28 = getelementptr inbounds %Struct.RetValue.7, %Struct.RetValue.7* @Struct.RetValue.9, i32 0, i32 2
  %29 = load i8**, i8*** %28, align 4
  %30 = load i8*, i8** %29, align 4
  store i8* %30, i8** %temp
  br label %while.cond16

while.cond16:                                     ; preds = %CallOutFuncBB, %while.body18
  %31 = load i8**, i8*** %first, align 4
  %32 = load i8**, i8*** %last, align 4
  %cmp17 = icmp ult i8** %31, %32
  br i1 %cmp17, label %while.body18, label %while.end21

while.body18:                                     ; preds = %while.cond16
  %33 = load i8**, i8*** %first, align 4
  %34 = load i8*, i8** %33, align 4
  store i8* %34, i8** %temp, align 4
  %35 = load i8**, i8*** %last, align 4
  %36 = load i8*, i8** %35, align 4
  %37 = load i8**, i8*** %first, align 4
  store i8* %36, i8** %37, align 4
  %38 = load i8*, i8** %temp, align 4
  %39 = load i8**, i8*** %last, align 4
  store i8* %38, i8** %39, align 4
  %40 = load i8**, i8*** %first, align 4
  %incdec.ptr19 = getelementptr inbounds i8*, i8** %40, i32 1
  store i8** %incdec.ptr19, i8*** %first, align 4
  %41 = load i8**, i8*** %last, align 4
  %incdec.ptr20 = getelementptr inbounds i8*, i8** %41, i32 -1
  store i8** %incdec.ptr20, i8*** %last, align 4
  br label %while.cond16

while.end21:                                      ; preds = %while.cond16
  ret void
}

declare dso_local i32 @strcmp(i8*, i8*) #3

declare dso_local i32 @strncmp(i8*, i8*, i32) #3

declare dllimport %struct._iobuf* @__iob_func() #3

declare dllimport i32 @fprintf(%struct._iobuf*, i8*, ...) #3

; Function Attrs: noinline optnone sspstrong
define dso_local i32 @getopt(i32 %argc, i8** %argv, i8* %optstring) #1 {
entry:
  %optstring.addr = alloca i8*, align 4
  %argv.addr = alloca i8**, align 4
  %argc.addr = alloca i32, align 4
  store i8* %optstring, i8** %optstring.addr, align 4
  store i8** %argv, i8*** %argv.addr, align 4
  store i32 %argc, i32* %argc.addr, align 4
  %0 = load i8*, i8** %optstring.addr, align 4
  %1 = load i8**, i8*** %argv.addr, align 4
  %2 = load i32, i32* %argc.addr, align 4
  %call = call i32 @_getopt_internal(i32 %2, i8** %1, i8* %0, %struct.option* null, i32* null, i32 0)
  ret i32 %call
}

; Function Attrs: noinline optnone sspstrong
define dso_local i32 @getopt_long(i32 %argc, i8** %argv, i8* %options, %struct.option* %long_options, i32* %opt_index) #1 {
entry:
  %opt_index.addr = alloca i32*, align 4
  %long_options.addr = alloca %struct.option*, align 4
  %options.addr = alloca i8*, align 4
  %argv.addr = alloca i8**, align 4
  %argc.addr = alloca i32, align 4
  store i32* %opt_index, i32** %opt_index.addr, align 4
  store %struct.option* %long_options, %struct.option** %long_options.addr, align 4
  store i8* %options, i8** %options.addr, align 4
  store i8** %argv, i8*** %argv.addr, align 4
  store i32 %argc, i32* %argc.addr, align 4
  %0 = load i32*, i32** %opt_index.addr, align 4
  %1 = load %struct.option*, %struct.option** %long_options.addr, align 4
  %2 = load i8*, i8** %options.addr, align 4
  %3 = load i8**, i8*** %argv.addr, align 4
  %4 = load i32, i32* %argc.addr, align 4
  %call = call i32 @_getopt_internal(i32 %4, i8** %3, i8* %2, %struct.option* %1, i32* %0, i32 0)
  ret i32 %call
}

; Function Attrs: noinline optnone sspstrong
define dso_local i32 @get_method(i32 %in) #1 {
entry:
  %retval = alloca i32, align 4
  %in.addr = alloca i32, align 4
  %flags = alloca i8, align 1
  %magic = alloca [2 x i8], align 1
  %stamp = alloca i32, align 4
  %part = alloca i32, align 4
  %len = alloca i32, align 4
  %c = alloca i8, align 1
  %p = alloca i8*, align 4
  %base = alloca i8*, align 4
  store i32 %in, i32* %in.addr, align 4
  %0 = load i32, i32* @force, align 4
  %tobool = icmp ne i32 %0, 0
  %RetValuePtr = alloca i32, align 4
  %RetValuePtr28 = alloca i32, align 4
  %RetValuePtr57 = alloca i32, align 4
  %RetValuePtr86 = alloca i32, align 4
  %RetValuePtr115 = alloca i32, align 4
  %RetValuePtr144 = alloca i32, align 4
  %RetValuePtr173 = alloca i32, align 4
  %RetValuePtr202 = alloca i32, align 4
  %RetValuePtr231 = alloca i32, align 4
  %RetValuePtr260 = alloca i32, align 4
  %RetValuePtr289 = alloca i32, align 4
  %RetValuePtr318 = alloca i32, align 4
  %RetValuePtr347 = alloca i32, align 4
  %RetValuePtr376 = alloca i32, align 4
  %RetValuePtr405 = alloca i32, align 4
  %RetValuePtr434 = alloca i32, align 4
  %RetValuePtr463 = alloca i32, align 4
  %RetValuePtr492 = alloca i32, align 4
  %RetValuePtr521 = alloca i32, align 4
  %RetValuePtr550 = alloca i32, align 4
  %RetValuePtr900 = alloca i8*, align 4
  br i1 %tobool, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* @to_stdout, align 4
  %tobool1 = icmp ne i32 %1, 0
  br i1 %tobool1, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true
  %2 = load i32, i32* @inptr, align 4
  %3 = load i32, i32* @insize, align 4
  %cmp = icmp ult i32 %2, %3
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then
  %4 = load i32, i32* @inptr, align 4
  %inc = add i32 %4, 1
  store i32 %inc, i32* @inptr, align 4
  %arrayidx = getelementptr inbounds [32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 %4
  %5 = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %5 to i32
  br label %cond.end

cond.false:                                       ; preds = %if.then
  br label %entry.fill_inbuf.Clone523

entry.fill_inbuf.Clone523:                        ; preds = %cond.false
  %retval.fill_inbuf.Clone524 = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone525 = alloca i32, align 4
  %len.fill_inbuf.Clone526 = alloca i32, align 4
  store i32 1, i32* %eof_ok.addr.fill_inbuf.Clone525, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone527 = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone527, align 4
  br label %do.body.fill_inbuf.Clone528

do.body.fill_inbuf.Clone528:                      ; preds = %do.cond.fill_inbuf.Clone538, %entry.fill_inbuf.Clone523
  %6 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone529 = sub i32 32768, %6
  %7 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone530 = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %7
  %8 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone531 = call i32 @spec_read(i32 %8, i8* %add.ptr.fill_inbuf.Clone530, i32 %sub.fill_inbuf.Clone529)
  store i32 %call1.fill_inbuf.Clone531, i32* %len.fill_inbuf.Clone526, align 4
  %9 = load i32, i32* %len.fill_inbuf.Clone526, align 4
  %cmp.fill_inbuf.Clone532 = icmp eq i32 %9, 0
  br i1 %cmp.fill_inbuf.Clone532, label %if.then.fill_inbuf.Clone535, label %lor.lhs.false.fill_inbuf.Clone533

lor.lhs.false.fill_inbuf.Clone533:                ; preds = %do.body.fill_inbuf.Clone528
  %10 = load i32, i32* %len.fill_inbuf.Clone526, align 4
  %cmp2.fill_inbuf.Clone534 = icmp eq i32 %10, -1
  br i1 %cmp2.fill_inbuf.Clone534, label %if.then.fill_inbuf.Clone535, label %if.end.fill_inbuf.Clone536

if.then.fill_inbuf.Clone535:                      ; preds = %lor.lhs.false.fill_inbuf.Clone533, %do.body.fill_inbuf.Clone528
  br label %do.end.fill_inbuf.Clone540

if.end.fill_inbuf.Clone536:                       ; preds = %lor.lhs.false.fill_inbuf.Clone533
  %11 = load i32, i32* %len.fill_inbuf.Clone526, align 4
  %12 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone537 = add i32 %12, %11
  store i32 %add.fill_inbuf.Clone537, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone538

do.cond.fill_inbuf.Clone538:                      ; preds = %if.end.fill_inbuf.Clone536
  %13 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone539 = icmp ult i32 %13, 32768
  br i1 %cmp3.fill_inbuf.Clone539, label %do.body.fill_inbuf.Clone528, label %do.end.fill_inbuf.Clone540

do.end.fill_inbuf.Clone540:                       ; preds = %do.cond.fill_inbuf.Clone538, %if.then.fill_inbuf.Clone535
  %14 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone541 = icmp eq i32 %14, 0
  br i1 %cmp4.fill_inbuf.Clone541, label %if.then5.fill_inbuf.Clone542, label %if.end8.fill_inbuf.Clone546

if.then5.fill_inbuf.Clone542:                     ; preds = %do.end.fill_inbuf.Clone540
  %15 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone525, align 4
  %tobool.fill_inbuf.Clone543 = icmp ne i32 %15, 0
  br i1 %tobool.fill_inbuf.Clone543, label %if.then6.fill_inbuf.Clone544, label %if.end7.fill_inbuf.Clone545

if.then6.fill_inbuf.Clone544:                     ; preds = %if.then5.fill_inbuf.Clone542
  store i32 -1, i32* %retval.fill_inbuf.Clone524, align 4
  br label %return.fill_inbuf.Clone549

if.end7.fill_inbuf.Clone545:                      ; preds = %if.then5.fill_inbuf.Clone542
  br label %entry.read_error.Clone

entry.read_error.Clone:                           ; preds = %if.end7.fill_inbuf.Clone545
  %16 = load i8*, i8** @progname, align 4
  %call.read_error.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone, i32 2
  %call1.read_error.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %16)
  %call2.read_error.Clone = call i32* @_errno()
  %17 = load i32, i32* %call2.read_error.Clone, align 4
  %cmp.read_error.Clone = icmp ne i32 %17, 0
  br i1 %cmp.read_error.Clone, label %if.then.read_error.Clone, label %if.else.read_error.Clone

if.then.read_error.Clone:                         ; preds = %entry.read_error.Clone
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone

if.else.read_error.Clone:                         ; preds = %entry.read_error.Clone
  %call3.read_error.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone, i32 2
  %call5.read_error.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone

if.end.read_error.Clone:                          ; preds = %if.else.read_error.Clone, %if.then.read_error.Clone
  br label %entry.abort_gzip.Clone888

entry.abort_gzip.Clone888:                        ; preds = %if.end.read_error.Clone
  %18 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone889 = icmp ne i32 %18, 0
  br i1 %tobool.abort_gzip.Clone889, label %if.then.abort_gzip.Clone890, label %if.end.abort_gzip.Clone893

if.then.abort_gzip.Clone890:                      ; preds = %entry.abort_gzip.Clone888
  %19 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone891 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %19)
  %call1.abort_gzip.Clone892 = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone893

if.end.abort_gzip.Clone893:                       ; preds = %if.then.abort_gzip.Clone890, %entry.abort_gzip.Clone888
  br label %entry.do_exit.Clone902

entry.do_exit.Clone902:                           ; preds = %if.end.abort_gzip.Clone893
  %exitcode.addr.do_exit.Clone903 = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone903, align 4
  %20 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone904 = icmp ne i32 %20, 0
  br i1 %tobool.do_exit.Clone904, label %if.then.do_exit.Clone905, label %if.end.do_exit.Clone906

if.then.do_exit.Clone905:                         ; preds = %entry.do_exit.Clone902
  %21 = load i32, i32* %exitcode.addr.do_exit.Clone903, align 4
  call void @exit(i32 %21) #7
  unreachable

if.end.do_exit.Clone906:                          ; preds = %entry.do_exit.Clone902
  store i32 1, i32* @do_exit.in_exit, align 4
  %22 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone907 = icmp ne i8* %22, null
  br i1 %cmp.do_exit.Clone907, label %if.then1.do_exit.Clone908, label %if.end2.do_exit.Clone909

if.then1.do_exit.Clone908:                        ; preds = %if.end.do_exit.Clone906
  %23 = load i8*, i8** @env, align 4
  call void @free(i8* %23) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone909

if.end2.do_exit.Clone909:                         ; preds = %if.then1.do_exit.Clone908, %if.end.do_exit.Clone906
  %24 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone910 = icmp ne i8** %24, null
  br i1 %cmp3.do_exit.Clone910, label %if.then4.do_exit.Clone911, label %if.end5.do_exit.Clone912

if.then4.do_exit.Clone911:                        ; preds = %if.end2.do_exit.Clone909
  %25 = load i8**, i8*** @args, align 4
  %26 = bitcast i8** %25 to i8*
  call void @free(i8* %26) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone912

if.end5.do_exit.Clone912:                         ; preds = %if.then4.do_exit.Clone911, %if.end2.do_exit.Clone909
  %27 = load i32, i32* %exitcode.addr.do_exit.Clone903, align 4
  call void @exit(i32 %27) #7
  unreachable

return.do_exit.Clone913:                          ; No predecessors!
  br label %if.end.abort_gzip.Clone893.Split

if.end.abort_gzip.Clone893.Split:                 ; preds = %return.do_exit.Clone913
  br label %if.end.read_error.Clone.Split

if.end.read_error.Clone.Split:                    ; preds = %if.end.abort_gzip.Clone893.Split
  br label %if.end7.fill_inbuf.Clone545.Split

if.end7.fill_inbuf.Clone545.Split:                ; preds = %if.end.read_error.Clone.Split
  br label %if.end8.fill_inbuf.Clone546

if.end8.fill_inbuf.Clone546:                      ; preds = %if.end7.fill_inbuf.Clone545.Split, %do.end.fill_inbuf.Clone540
  %28 = load i32, i32* @insize, align 4
  %29 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone547 = add i32 %29, %28
  store i32 %add9.fill_inbuf.Clone547, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %30 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone548 = zext i8 %30 to i32
  store i32 %conv.fill_inbuf.Clone548, i32* %retval.fill_inbuf.Clone524, align 4
  br label %return.fill_inbuf.Clone549

return.fill_inbuf.Clone549:                       ; preds = %if.end8.fill_inbuf.Clone546, %if.then6.fill_inbuf.Clone544
  %31 = load i32, i32* %retval.fill_inbuf.Clone524, align 4
  store i32 %31, i32* %RetValuePtr550
  br label %cond.false.Split

cond.false.Split:                                 ; preds = %return.fill_inbuf.Clone549
  %RetValue551 = load i32, i32* %RetValuePtr550
  br label %cond.end

cond.end:                                         ; preds = %cond.false.Split, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %RetValue551, %cond.false.Split ]
  %conv2 = trunc i32 %cond to i8
  %arrayidx3 = getelementptr inbounds [2 x i8], [2 x i8]* %magic, i32 0, i32 0
  store i8 %conv2, i8* %arrayidx3, align 1
  %32 = load i32, i32* @inptr, align 4
  %33 = load i32, i32* @insize, align 4
  %cmp4 = icmp ult i32 %32, %33
  br i1 %cmp4, label %cond.true6, label %cond.false10

cond.true6:                                       ; preds = %cond.end
  %34 = load i32, i32* @inptr, align 4
  %inc7 = add i32 %34, 1
  store i32 %inc7, i32* @inptr, align 4
  %arrayidx8 = getelementptr inbounds [32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 %34
  %35 = load i8, i8* %arrayidx8, align 1
  %conv9 = zext i8 %35 to i32
  br label %cond.end12

cond.false10:                                     ; preds = %cond.end
  br label %entry.fill_inbuf.Clone494

entry.fill_inbuf.Clone494:                        ; preds = %cond.false10
  %retval.fill_inbuf.Clone495 = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone496 = alloca i32, align 4
  %len.fill_inbuf.Clone497 = alloca i32, align 4
  store i32 1, i32* %eof_ok.addr.fill_inbuf.Clone496, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone498 = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone498, align 4
  br label %do.body.fill_inbuf.Clone499

do.body.fill_inbuf.Clone499:                      ; preds = %do.cond.fill_inbuf.Clone509, %entry.fill_inbuf.Clone494
  %36 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone500 = sub i32 32768, %36
  %37 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone501 = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %37
  %38 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone502 = call i32 @spec_read(i32 %38, i8* %add.ptr.fill_inbuf.Clone501, i32 %sub.fill_inbuf.Clone500)
  store i32 %call1.fill_inbuf.Clone502, i32* %len.fill_inbuf.Clone497, align 4
  %39 = load i32, i32* %len.fill_inbuf.Clone497, align 4
  %cmp.fill_inbuf.Clone503 = icmp eq i32 %39, 0
  br i1 %cmp.fill_inbuf.Clone503, label %if.then.fill_inbuf.Clone506, label %lor.lhs.false.fill_inbuf.Clone504

lor.lhs.false.fill_inbuf.Clone504:                ; preds = %do.body.fill_inbuf.Clone499
  %40 = load i32, i32* %len.fill_inbuf.Clone497, align 4
  %cmp2.fill_inbuf.Clone505 = icmp eq i32 %40, -1
  br i1 %cmp2.fill_inbuf.Clone505, label %if.then.fill_inbuf.Clone506, label %if.end.fill_inbuf.Clone507

if.then.fill_inbuf.Clone506:                      ; preds = %lor.lhs.false.fill_inbuf.Clone504, %do.body.fill_inbuf.Clone499
  br label %do.end.fill_inbuf.Clone511

if.end.fill_inbuf.Clone507:                       ; preds = %lor.lhs.false.fill_inbuf.Clone504
  %41 = load i32, i32* %len.fill_inbuf.Clone497, align 4
  %42 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone508 = add i32 %42, %41
  store i32 %add.fill_inbuf.Clone508, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone509

do.cond.fill_inbuf.Clone509:                      ; preds = %if.end.fill_inbuf.Clone507
  %43 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone510 = icmp ult i32 %43, 32768
  br i1 %cmp3.fill_inbuf.Clone510, label %do.body.fill_inbuf.Clone499, label %do.end.fill_inbuf.Clone511

do.end.fill_inbuf.Clone511:                       ; preds = %do.cond.fill_inbuf.Clone509, %if.then.fill_inbuf.Clone506
  %44 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone512 = icmp eq i32 %44, 0
  br i1 %cmp4.fill_inbuf.Clone512, label %if.then5.fill_inbuf.Clone513, label %if.end8.fill_inbuf.Clone517

if.then5.fill_inbuf.Clone513:                     ; preds = %do.end.fill_inbuf.Clone511
  %45 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone496, align 4
  %tobool.fill_inbuf.Clone514 = icmp ne i32 %45, 0
  br i1 %tobool.fill_inbuf.Clone514, label %if.then6.fill_inbuf.Clone515, label %if.end7.fill_inbuf.Clone516

if.then6.fill_inbuf.Clone515:                     ; preds = %if.then5.fill_inbuf.Clone513
  store i32 -1, i32* %retval.fill_inbuf.Clone495, align 4
  br label %return.fill_inbuf.Clone520

if.end7.fill_inbuf.Clone516:                      ; preds = %if.then5.fill_inbuf.Clone513
  br label %entry.read_error.Clone552

entry.read_error.Clone552:                        ; preds = %if.end7.fill_inbuf.Clone516
  %46 = load i8*, i8** @progname, align 4
  %call.read_error.Clone553 = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone554 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone553, i32 2
  %call1.read_error.Clone555 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone554, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %46)
  %call2.read_error.Clone556 = call i32* @_errno()
  %47 = load i32, i32* %call2.read_error.Clone556, align 4
  %cmp.read_error.Clone557 = icmp ne i32 %47, 0
  br i1 %cmp.read_error.Clone557, label %if.then.read_error.Clone558, label %if.else.read_error.Clone559

if.then.read_error.Clone558:                      ; preds = %entry.read_error.Clone552
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone563

if.else.read_error.Clone559:                      ; preds = %entry.read_error.Clone552
  %call3.read_error.Clone560 = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone561 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone560, i32 2
  %call5.read_error.Clone562 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone561, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone563

if.end.read_error.Clone563:                       ; preds = %if.else.read_error.Clone559, %if.then.read_error.Clone558
  br label %entry.abort_gzip.Clone882

entry.abort_gzip.Clone882:                        ; preds = %if.end.read_error.Clone563
  %48 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone883 = icmp ne i32 %48, 0
  br i1 %tobool.abort_gzip.Clone883, label %if.then.abort_gzip.Clone884, label %if.end.abort_gzip.Clone887

if.then.abort_gzip.Clone884:                      ; preds = %entry.abort_gzip.Clone882
  %49 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone885 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %49)
  %call1.abort_gzip.Clone886 = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone887

if.end.abort_gzip.Clone887:                       ; preds = %if.then.abort_gzip.Clone884, %entry.abort_gzip.Clone882
  br label %entry.do_exit.Clone914

entry.do_exit.Clone914:                           ; preds = %if.end.abort_gzip.Clone887
  %exitcode.addr.do_exit.Clone915 = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone915, align 4
  %50 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone916 = icmp ne i32 %50, 0
  br i1 %tobool.do_exit.Clone916, label %if.then.do_exit.Clone917, label %if.end.do_exit.Clone918

if.then.do_exit.Clone917:                         ; preds = %entry.do_exit.Clone914
  %51 = load i32, i32* %exitcode.addr.do_exit.Clone915, align 4
  call void @exit(i32 %51) #7
  unreachable

if.end.do_exit.Clone918:                          ; preds = %entry.do_exit.Clone914
  store i32 1, i32* @do_exit.in_exit, align 4
  %52 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone919 = icmp ne i8* %52, null
  br i1 %cmp.do_exit.Clone919, label %if.then1.do_exit.Clone920, label %if.end2.do_exit.Clone921

if.then1.do_exit.Clone920:                        ; preds = %if.end.do_exit.Clone918
  %53 = load i8*, i8** @env, align 4
  call void @free(i8* %53) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone921

if.end2.do_exit.Clone921:                         ; preds = %if.then1.do_exit.Clone920, %if.end.do_exit.Clone918
  %54 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone922 = icmp ne i8** %54, null
  br i1 %cmp3.do_exit.Clone922, label %if.then4.do_exit.Clone923, label %if.end5.do_exit.Clone924

if.then4.do_exit.Clone923:                        ; preds = %if.end2.do_exit.Clone921
  %55 = load i8**, i8*** @args, align 4
  %56 = bitcast i8** %55 to i8*
  call void @free(i8* %56) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone924

if.end5.do_exit.Clone924:                         ; preds = %if.then4.do_exit.Clone923, %if.end2.do_exit.Clone921
  %57 = load i32, i32* %exitcode.addr.do_exit.Clone915, align 4
  call void @exit(i32 %57) #7
  unreachable

return.do_exit.Clone925:                          ; No predecessors!
  br label %if.end.abort_gzip.Clone887.Split

if.end.abort_gzip.Clone887.Split:                 ; preds = %return.do_exit.Clone925
  br label %if.end.read_error.Clone563.Split

if.end.read_error.Clone563.Split:                 ; preds = %if.end.abort_gzip.Clone887.Split
  br label %if.end7.fill_inbuf.Clone516.Split

if.end7.fill_inbuf.Clone516.Split:                ; preds = %if.end.read_error.Clone563.Split
  br label %if.end8.fill_inbuf.Clone517

if.end8.fill_inbuf.Clone517:                      ; preds = %if.end7.fill_inbuf.Clone516.Split, %do.end.fill_inbuf.Clone511
  %58 = load i32, i32* @insize, align 4
  %59 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone518 = add i32 %59, %58
  store i32 %add9.fill_inbuf.Clone518, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %60 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone519 = zext i8 %60 to i32
  store i32 %conv.fill_inbuf.Clone519, i32* %retval.fill_inbuf.Clone495, align 4
  br label %return.fill_inbuf.Clone520

return.fill_inbuf.Clone520:                       ; preds = %if.end8.fill_inbuf.Clone517, %if.then6.fill_inbuf.Clone515
  %61 = load i32, i32* %retval.fill_inbuf.Clone495, align 4
  store i32 %61, i32* %RetValuePtr521
  br label %cond.false10.Split

cond.false10.Split:                               ; preds = %return.fill_inbuf.Clone520
  %RetValue522 = load i32, i32* %RetValuePtr521
  br label %cond.end12

cond.end12:                                       ; preds = %cond.false10.Split, %cond.true6
  %cond13 = phi i32 [ %conv9, %cond.true6 ], [ %RetValue522, %cond.false10.Split ]
  %conv14 = trunc i32 %cond13 to i8
  %arrayidx15 = getelementptr inbounds [2 x i8], [2 x i8]* %magic, i32 0, i32 1
  store i8 %conv14, i8* %arrayidx15, align 1
  br label %if.end

if.else:                                          ; preds = %land.lhs.true, %entry
  %62 = load i32, i32* @inptr, align 4
  %63 = load i32, i32* @insize, align 4
  %cmp16 = icmp ult i32 %62, %63
  br i1 %cmp16, label %cond.true18, label %cond.false22

cond.true18:                                      ; preds = %if.else
  %64 = load i32, i32* @inptr, align 4
  %inc19 = add i32 %64, 1
  store i32 %inc19, i32* @inptr, align 4
  %arrayidx20 = getelementptr inbounds [32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 %64
  %65 = load i8, i8* %arrayidx20, align 1
  %conv21 = zext i8 %65 to i32
  br label %cond.end24

cond.false22:                                     ; preds = %if.else
  br label %entry.fill_inbuf.Clone465

entry.fill_inbuf.Clone465:                        ; preds = %cond.false22
  %retval.fill_inbuf.Clone466 = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone467 = alloca i32, align 4
  %len.fill_inbuf.Clone468 = alloca i32, align 4
  store i32 0, i32* %eof_ok.addr.fill_inbuf.Clone467, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone469 = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone469, align 4
  br label %do.body.fill_inbuf.Clone470

do.body.fill_inbuf.Clone470:                      ; preds = %do.cond.fill_inbuf.Clone480, %entry.fill_inbuf.Clone465
  %66 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone471 = sub i32 32768, %66
  %67 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone472 = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %67
  %68 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone473 = call i32 @spec_read(i32 %68, i8* %add.ptr.fill_inbuf.Clone472, i32 %sub.fill_inbuf.Clone471)
  store i32 %call1.fill_inbuf.Clone473, i32* %len.fill_inbuf.Clone468, align 4
  %69 = load i32, i32* %len.fill_inbuf.Clone468, align 4
  %cmp.fill_inbuf.Clone474 = icmp eq i32 %69, 0
  br i1 %cmp.fill_inbuf.Clone474, label %if.then.fill_inbuf.Clone477, label %lor.lhs.false.fill_inbuf.Clone475

lor.lhs.false.fill_inbuf.Clone475:                ; preds = %do.body.fill_inbuf.Clone470
  %70 = load i32, i32* %len.fill_inbuf.Clone468, align 4
  %cmp2.fill_inbuf.Clone476 = icmp eq i32 %70, -1
  br i1 %cmp2.fill_inbuf.Clone476, label %if.then.fill_inbuf.Clone477, label %if.end.fill_inbuf.Clone478

if.then.fill_inbuf.Clone477:                      ; preds = %lor.lhs.false.fill_inbuf.Clone475, %do.body.fill_inbuf.Clone470
  br label %do.end.fill_inbuf.Clone482

if.end.fill_inbuf.Clone478:                       ; preds = %lor.lhs.false.fill_inbuf.Clone475
  %71 = load i32, i32* %len.fill_inbuf.Clone468, align 4
  %72 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone479 = add i32 %72, %71
  store i32 %add.fill_inbuf.Clone479, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone480

do.cond.fill_inbuf.Clone480:                      ; preds = %if.end.fill_inbuf.Clone478
  %73 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone481 = icmp ult i32 %73, 32768
  br i1 %cmp3.fill_inbuf.Clone481, label %do.body.fill_inbuf.Clone470, label %do.end.fill_inbuf.Clone482

do.end.fill_inbuf.Clone482:                       ; preds = %do.cond.fill_inbuf.Clone480, %if.then.fill_inbuf.Clone477
  %74 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone483 = icmp eq i32 %74, 0
  br i1 %cmp4.fill_inbuf.Clone483, label %if.then5.fill_inbuf.Clone484, label %if.end8.fill_inbuf.Clone488

if.then5.fill_inbuf.Clone484:                     ; preds = %do.end.fill_inbuf.Clone482
  %75 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone467, align 4
  %tobool.fill_inbuf.Clone485 = icmp ne i32 %75, 0
  br i1 %tobool.fill_inbuf.Clone485, label %if.then6.fill_inbuf.Clone486, label %if.end7.fill_inbuf.Clone487

if.then6.fill_inbuf.Clone486:                     ; preds = %if.then5.fill_inbuf.Clone484
  store i32 -1, i32* %retval.fill_inbuf.Clone466, align 4
  br label %return.fill_inbuf.Clone491

if.end7.fill_inbuf.Clone487:                      ; preds = %if.then5.fill_inbuf.Clone484
  br label %entry.read_error.Clone564

entry.read_error.Clone564:                        ; preds = %if.end7.fill_inbuf.Clone487
  %76 = load i8*, i8** @progname, align 4
  %call.read_error.Clone565 = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone566 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone565, i32 2
  %call1.read_error.Clone567 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone566, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %76)
  %call2.read_error.Clone568 = call i32* @_errno()
  %77 = load i32, i32* %call2.read_error.Clone568, align 4
  %cmp.read_error.Clone569 = icmp ne i32 %77, 0
  br i1 %cmp.read_error.Clone569, label %if.then.read_error.Clone570, label %if.else.read_error.Clone571

if.then.read_error.Clone570:                      ; preds = %entry.read_error.Clone564
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone575

if.else.read_error.Clone571:                      ; preds = %entry.read_error.Clone564
  %call3.read_error.Clone572 = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone573 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone572, i32 2
  %call5.read_error.Clone574 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone573, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone575

if.end.read_error.Clone575:                       ; preds = %if.else.read_error.Clone571, %if.then.read_error.Clone570
  br label %entry.abort_gzip.Clone876

entry.abort_gzip.Clone876:                        ; preds = %if.end.read_error.Clone575
  %78 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone877 = icmp ne i32 %78, 0
  br i1 %tobool.abort_gzip.Clone877, label %if.then.abort_gzip.Clone878, label %if.end.abort_gzip.Clone881

if.then.abort_gzip.Clone878:                      ; preds = %entry.abort_gzip.Clone876
  %79 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone879 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %79)
  %call1.abort_gzip.Clone880 = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone881

if.end.abort_gzip.Clone881:                       ; preds = %if.then.abort_gzip.Clone878, %entry.abort_gzip.Clone876
  br label %entry.do_exit.Clone926

entry.do_exit.Clone926:                           ; preds = %if.end.abort_gzip.Clone881
  %exitcode.addr.do_exit.Clone927 = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone927, align 4
  %80 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone928 = icmp ne i32 %80, 0
  br i1 %tobool.do_exit.Clone928, label %if.then.do_exit.Clone929, label %if.end.do_exit.Clone930

if.then.do_exit.Clone929:                         ; preds = %entry.do_exit.Clone926
  %81 = load i32, i32* %exitcode.addr.do_exit.Clone927, align 4
  call void @exit(i32 %81) #7
  unreachable

if.end.do_exit.Clone930:                          ; preds = %entry.do_exit.Clone926
  store i32 1, i32* @do_exit.in_exit, align 4
  %82 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone931 = icmp ne i8* %82, null
  br i1 %cmp.do_exit.Clone931, label %if.then1.do_exit.Clone932, label %if.end2.do_exit.Clone933

if.then1.do_exit.Clone932:                        ; preds = %if.end.do_exit.Clone930
  %83 = load i8*, i8** @env, align 4
  call void @free(i8* %83) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone933

if.end2.do_exit.Clone933:                         ; preds = %if.then1.do_exit.Clone932, %if.end.do_exit.Clone930
  %84 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone934 = icmp ne i8** %84, null
  br i1 %cmp3.do_exit.Clone934, label %if.then4.do_exit.Clone935, label %if.end5.do_exit.Clone936

if.then4.do_exit.Clone935:                        ; preds = %if.end2.do_exit.Clone933
  %85 = load i8**, i8*** @args, align 4
  %86 = bitcast i8** %85 to i8*
  call void @free(i8* %86) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone936

if.end5.do_exit.Clone936:                         ; preds = %if.then4.do_exit.Clone935, %if.end2.do_exit.Clone933
  %87 = load i32, i32* %exitcode.addr.do_exit.Clone927, align 4
  call void @exit(i32 %87) #7
  unreachable

return.do_exit.Clone937:                          ; No predecessors!
  br label %if.end.abort_gzip.Clone881.Split

if.end.abort_gzip.Clone881.Split:                 ; preds = %return.do_exit.Clone937
  br label %if.end.read_error.Clone575.Split

if.end.read_error.Clone575.Split:                 ; preds = %if.end.abort_gzip.Clone881.Split
  br label %if.end7.fill_inbuf.Clone487.Split

if.end7.fill_inbuf.Clone487.Split:                ; preds = %if.end.read_error.Clone575.Split
  br label %if.end8.fill_inbuf.Clone488

if.end8.fill_inbuf.Clone488:                      ; preds = %if.end7.fill_inbuf.Clone487.Split, %do.end.fill_inbuf.Clone482
  %88 = load i32, i32* @insize, align 4
  %89 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone489 = add i32 %89, %88
  store i32 %add9.fill_inbuf.Clone489, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %90 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone490 = zext i8 %90 to i32
  store i32 %conv.fill_inbuf.Clone490, i32* %retval.fill_inbuf.Clone466, align 4
  br label %return.fill_inbuf.Clone491

return.fill_inbuf.Clone491:                       ; preds = %if.end8.fill_inbuf.Clone488, %if.then6.fill_inbuf.Clone486
  %91 = load i32, i32* %retval.fill_inbuf.Clone466, align 4
  store i32 %91, i32* %RetValuePtr492
  br label %cond.false22.Split

cond.false22.Split:                               ; preds = %return.fill_inbuf.Clone491
  %RetValue493 = load i32, i32* %RetValuePtr492
  br label %cond.end24

cond.end24:                                       ; preds = %cond.false22.Split, %cond.true18
  %cond25 = phi i32 [ %conv21, %cond.true18 ], [ %RetValue493, %cond.false22.Split ]
  %conv26 = trunc i32 %cond25 to i8
  %arrayidx27 = getelementptr inbounds [2 x i8], [2 x i8]* %magic, i32 0, i32 0
  store i8 %conv26, i8* %arrayidx27, align 1
  %92 = load i32, i32* @inptr, align 4
  %93 = load i32, i32* @insize, align 4
  %cmp28 = icmp ult i32 %92, %93
  br i1 %cmp28, label %cond.true30, label %cond.false34

cond.true30:                                      ; preds = %cond.end24
  %94 = load i32, i32* @inptr, align 4
  %inc31 = add i32 %94, 1
  store i32 %inc31, i32* @inptr, align 4
  %arrayidx32 = getelementptr inbounds [32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 %94
  %95 = load i8, i8* %arrayidx32, align 1
  %conv33 = zext i8 %95 to i32
  br label %cond.end36

cond.false34:                                     ; preds = %cond.end24
  br label %entry.fill_inbuf.Clone436

entry.fill_inbuf.Clone436:                        ; preds = %cond.false34
  %retval.fill_inbuf.Clone437 = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone438 = alloca i32, align 4
  %len.fill_inbuf.Clone439 = alloca i32, align 4
  store i32 0, i32* %eof_ok.addr.fill_inbuf.Clone438, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone440 = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone440, align 4
  br label %do.body.fill_inbuf.Clone441

do.body.fill_inbuf.Clone441:                      ; preds = %do.cond.fill_inbuf.Clone451, %entry.fill_inbuf.Clone436
  %96 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone442 = sub i32 32768, %96
  %97 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone443 = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %97
  %98 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone444 = call i32 @spec_read(i32 %98, i8* %add.ptr.fill_inbuf.Clone443, i32 %sub.fill_inbuf.Clone442)
  store i32 %call1.fill_inbuf.Clone444, i32* %len.fill_inbuf.Clone439, align 4
  %99 = load i32, i32* %len.fill_inbuf.Clone439, align 4
  %cmp.fill_inbuf.Clone445 = icmp eq i32 %99, 0
  br i1 %cmp.fill_inbuf.Clone445, label %if.then.fill_inbuf.Clone448, label %lor.lhs.false.fill_inbuf.Clone446

lor.lhs.false.fill_inbuf.Clone446:                ; preds = %do.body.fill_inbuf.Clone441
  %100 = load i32, i32* %len.fill_inbuf.Clone439, align 4
  %cmp2.fill_inbuf.Clone447 = icmp eq i32 %100, -1
  br i1 %cmp2.fill_inbuf.Clone447, label %if.then.fill_inbuf.Clone448, label %if.end.fill_inbuf.Clone449

if.then.fill_inbuf.Clone448:                      ; preds = %lor.lhs.false.fill_inbuf.Clone446, %do.body.fill_inbuf.Clone441
  br label %do.end.fill_inbuf.Clone453

if.end.fill_inbuf.Clone449:                       ; preds = %lor.lhs.false.fill_inbuf.Clone446
  %101 = load i32, i32* %len.fill_inbuf.Clone439, align 4
  %102 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone450 = add i32 %102, %101
  store i32 %add.fill_inbuf.Clone450, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone451

do.cond.fill_inbuf.Clone451:                      ; preds = %if.end.fill_inbuf.Clone449
  %103 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone452 = icmp ult i32 %103, 32768
  br i1 %cmp3.fill_inbuf.Clone452, label %do.body.fill_inbuf.Clone441, label %do.end.fill_inbuf.Clone453

do.end.fill_inbuf.Clone453:                       ; preds = %do.cond.fill_inbuf.Clone451, %if.then.fill_inbuf.Clone448
  %104 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone454 = icmp eq i32 %104, 0
  br i1 %cmp4.fill_inbuf.Clone454, label %if.then5.fill_inbuf.Clone455, label %if.end8.fill_inbuf.Clone459

if.then5.fill_inbuf.Clone455:                     ; preds = %do.end.fill_inbuf.Clone453
  %105 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone438, align 4
  %tobool.fill_inbuf.Clone456 = icmp ne i32 %105, 0
  br i1 %tobool.fill_inbuf.Clone456, label %if.then6.fill_inbuf.Clone457, label %if.end7.fill_inbuf.Clone458

if.then6.fill_inbuf.Clone457:                     ; preds = %if.then5.fill_inbuf.Clone455
  store i32 -1, i32* %retval.fill_inbuf.Clone437, align 4
  br label %return.fill_inbuf.Clone462

if.end7.fill_inbuf.Clone458:                      ; preds = %if.then5.fill_inbuf.Clone455
  br label %entry.read_error.Clone576

entry.read_error.Clone576:                        ; preds = %if.end7.fill_inbuf.Clone458
  %106 = load i8*, i8** @progname, align 4
  %call.read_error.Clone577 = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone578 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone577, i32 2
  %call1.read_error.Clone579 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone578, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %106)
  %call2.read_error.Clone580 = call i32* @_errno()
  %107 = load i32, i32* %call2.read_error.Clone580, align 4
  %cmp.read_error.Clone581 = icmp ne i32 %107, 0
  br i1 %cmp.read_error.Clone581, label %if.then.read_error.Clone582, label %if.else.read_error.Clone583

if.then.read_error.Clone582:                      ; preds = %entry.read_error.Clone576
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone587

if.else.read_error.Clone583:                      ; preds = %entry.read_error.Clone576
  %call3.read_error.Clone584 = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone585 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone584, i32 2
  %call5.read_error.Clone586 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone585, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone587

if.end.read_error.Clone587:                       ; preds = %if.else.read_error.Clone583, %if.then.read_error.Clone582
  br label %entry.abort_gzip.Clone870

entry.abort_gzip.Clone870:                        ; preds = %if.end.read_error.Clone587
  %108 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone871 = icmp ne i32 %108, 0
  br i1 %tobool.abort_gzip.Clone871, label %if.then.abort_gzip.Clone872, label %if.end.abort_gzip.Clone875

if.then.abort_gzip.Clone872:                      ; preds = %entry.abort_gzip.Clone870
  %109 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone873 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %109)
  %call1.abort_gzip.Clone874 = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone875

if.end.abort_gzip.Clone875:                       ; preds = %if.then.abort_gzip.Clone872, %entry.abort_gzip.Clone870
  br label %entry.do_exit.Clone938

entry.do_exit.Clone938:                           ; preds = %if.end.abort_gzip.Clone875
  %exitcode.addr.do_exit.Clone939 = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone939, align 4
  %110 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone940 = icmp ne i32 %110, 0
  br i1 %tobool.do_exit.Clone940, label %if.then.do_exit.Clone941, label %if.end.do_exit.Clone942

if.then.do_exit.Clone941:                         ; preds = %entry.do_exit.Clone938
  %111 = load i32, i32* %exitcode.addr.do_exit.Clone939, align 4
  call void @exit(i32 %111) #7
  unreachable

if.end.do_exit.Clone942:                          ; preds = %entry.do_exit.Clone938
  store i32 1, i32* @do_exit.in_exit, align 4
  %112 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone943 = icmp ne i8* %112, null
  br i1 %cmp.do_exit.Clone943, label %if.then1.do_exit.Clone944, label %if.end2.do_exit.Clone945

if.then1.do_exit.Clone944:                        ; preds = %if.end.do_exit.Clone942
  %113 = load i8*, i8** @env, align 4
  call void @free(i8* %113) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone945

if.end2.do_exit.Clone945:                         ; preds = %if.then1.do_exit.Clone944, %if.end.do_exit.Clone942
  %114 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone946 = icmp ne i8** %114, null
  br i1 %cmp3.do_exit.Clone946, label %if.then4.do_exit.Clone947, label %if.end5.do_exit.Clone948

if.then4.do_exit.Clone947:                        ; preds = %if.end2.do_exit.Clone945
  %115 = load i8**, i8*** @args, align 4
  %116 = bitcast i8** %115 to i8*
  call void @free(i8* %116) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone948

if.end5.do_exit.Clone948:                         ; preds = %if.then4.do_exit.Clone947, %if.end2.do_exit.Clone945
  %117 = load i32, i32* %exitcode.addr.do_exit.Clone939, align 4
  call void @exit(i32 %117) #7
  unreachable

return.do_exit.Clone949:                          ; No predecessors!
  br label %if.end.abort_gzip.Clone875.Split

if.end.abort_gzip.Clone875.Split:                 ; preds = %return.do_exit.Clone949
  br label %if.end.read_error.Clone587.Split

if.end.read_error.Clone587.Split:                 ; preds = %if.end.abort_gzip.Clone875.Split
  br label %if.end7.fill_inbuf.Clone458.Split

if.end7.fill_inbuf.Clone458.Split:                ; preds = %if.end.read_error.Clone587.Split
  br label %if.end8.fill_inbuf.Clone459

if.end8.fill_inbuf.Clone459:                      ; preds = %if.end7.fill_inbuf.Clone458.Split, %do.end.fill_inbuf.Clone453
  %118 = load i32, i32* @insize, align 4
  %119 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone460 = add i32 %119, %118
  store i32 %add9.fill_inbuf.Clone460, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %120 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone461 = zext i8 %120 to i32
  store i32 %conv.fill_inbuf.Clone461, i32* %retval.fill_inbuf.Clone437, align 4
  br label %return.fill_inbuf.Clone462

return.fill_inbuf.Clone462:                       ; preds = %if.end8.fill_inbuf.Clone459, %if.then6.fill_inbuf.Clone457
  %121 = load i32, i32* %retval.fill_inbuf.Clone437, align 4
  store i32 %121, i32* %RetValuePtr463
  br label %cond.false34.Split

cond.false34.Split:                               ; preds = %return.fill_inbuf.Clone462
  %RetValue464 = load i32, i32* %RetValuePtr463
  br label %cond.end36

cond.end36:                                       ; preds = %cond.false34.Split, %cond.true30
  %cond37 = phi i32 [ %conv33, %cond.true30 ], [ %RetValue464, %cond.false34.Split ]
  %conv38 = trunc i32 %cond37 to i8
  %arrayidx39 = getelementptr inbounds [2 x i8], [2 x i8]* %magic, i32 0, i32 1
  store i8 %conv38, i8* %arrayidx39, align 1
  br label %if.end

if.end:                                           ; preds = %cond.end36, %cond.end12
  store i32 -1, i32* @method, align 4
  %122 = load i32, i32* @part_nb, align 4
  %inc40 = add nsw i32 %122, 1
  store i32 %inc40, i32* @part_nb, align 4
  store i32 0, i32* @header_bytes, align 4
  store i32 0, i32* @last_member, align 4
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %magic, i32 0, i32 0
  %call41 = call i32 @memcmp(i8* %arraydecay, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @"??_C@_02MPLDIDCA@?$BP?$IL?$AA@", i32 0, i32 0), i32 2)
  %cmp42 = icmp eq i32 %call41, 0
  br i1 %cmp42, label %if.then48, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %arraydecay44 = getelementptr inbounds [2 x i8], [2 x i8]* %magic, i32 0, i32 0
  %call45 = call i32 @memcmp(i8* %arraydecay44, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @"??_C@_02PIAGGFDE@?$BP?$JO?$AA@", i32 0, i32 0), i32 2)
  %cmp46 = icmp eq i32 %call45, 0
  br i1 %cmp46, label %if.then48, label %if.else344

if.then48:                                        ; preds = %lor.lhs.false, %if.end
  %123 = load i32, i32* @inptr, align 4
  %124 = load i32, i32* @insize, align 4
  %cmp49 = icmp ult i32 %123, %124
  br i1 %cmp49, label %cond.true51, label %cond.false55

cond.true51:                                      ; preds = %if.then48
  %125 = load i32, i32* @inptr, align 4
  %inc52 = add i32 %125, 1
  store i32 %inc52, i32* @inptr, align 4
  %arrayidx53 = getelementptr inbounds [32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 %125
  %126 = load i8, i8* %arrayidx53, align 1
  %conv54 = zext i8 %126 to i32
  br label %cond.end57

cond.false55:                                     ; preds = %if.then48
  br label %entry.fill_inbuf.Clone407

entry.fill_inbuf.Clone407:                        ; preds = %cond.false55
  %retval.fill_inbuf.Clone408 = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone409 = alloca i32, align 4
  %len.fill_inbuf.Clone410 = alloca i32, align 4
  store i32 0, i32* %eof_ok.addr.fill_inbuf.Clone409, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone411 = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone411, align 4
  br label %do.body.fill_inbuf.Clone412

do.body.fill_inbuf.Clone412:                      ; preds = %do.cond.fill_inbuf.Clone422, %entry.fill_inbuf.Clone407
  %127 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone413 = sub i32 32768, %127
  %128 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone414 = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %128
  %129 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone415 = call i32 @spec_read(i32 %129, i8* %add.ptr.fill_inbuf.Clone414, i32 %sub.fill_inbuf.Clone413)
  store i32 %call1.fill_inbuf.Clone415, i32* %len.fill_inbuf.Clone410, align 4
  %130 = load i32, i32* %len.fill_inbuf.Clone410, align 4
  %cmp.fill_inbuf.Clone416 = icmp eq i32 %130, 0
  br i1 %cmp.fill_inbuf.Clone416, label %if.then.fill_inbuf.Clone419, label %lor.lhs.false.fill_inbuf.Clone417

lor.lhs.false.fill_inbuf.Clone417:                ; preds = %do.body.fill_inbuf.Clone412
  %131 = load i32, i32* %len.fill_inbuf.Clone410, align 4
  %cmp2.fill_inbuf.Clone418 = icmp eq i32 %131, -1
  br i1 %cmp2.fill_inbuf.Clone418, label %if.then.fill_inbuf.Clone419, label %if.end.fill_inbuf.Clone420

if.then.fill_inbuf.Clone419:                      ; preds = %lor.lhs.false.fill_inbuf.Clone417, %do.body.fill_inbuf.Clone412
  br label %do.end.fill_inbuf.Clone424

if.end.fill_inbuf.Clone420:                       ; preds = %lor.lhs.false.fill_inbuf.Clone417
  %132 = load i32, i32* %len.fill_inbuf.Clone410, align 4
  %133 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone421 = add i32 %133, %132
  store i32 %add.fill_inbuf.Clone421, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone422

do.cond.fill_inbuf.Clone422:                      ; preds = %if.end.fill_inbuf.Clone420
  %134 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone423 = icmp ult i32 %134, 32768
  br i1 %cmp3.fill_inbuf.Clone423, label %do.body.fill_inbuf.Clone412, label %do.end.fill_inbuf.Clone424

do.end.fill_inbuf.Clone424:                       ; preds = %do.cond.fill_inbuf.Clone422, %if.then.fill_inbuf.Clone419
  %135 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone425 = icmp eq i32 %135, 0
  br i1 %cmp4.fill_inbuf.Clone425, label %if.then5.fill_inbuf.Clone426, label %if.end8.fill_inbuf.Clone430

if.then5.fill_inbuf.Clone426:                     ; preds = %do.end.fill_inbuf.Clone424
  %136 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone409, align 4
  %tobool.fill_inbuf.Clone427 = icmp ne i32 %136, 0
  br i1 %tobool.fill_inbuf.Clone427, label %if.then6.fill_inbuf.Clone428, label %if.end7.fill_inbuf.Clone429

if.then6.fill_inbuf.Clone428:                     ; preds = %if.then5.fill_inbuf.Clone426
  store i32 -1, i32* %retval.fill_inbuf.Clone408, align 4
  br label %return.fill_inbuf.Clone433

if.end7.fill_inbuf.Clone429:                      ; preds = %if.then5.fill_inbuf.Clone426
  br label %entry.read_error.Clone588

entry.read_error.Clone588:                        ; preds = %if.end7.fill_inbuf.Clone429
  %137 = load i8*, i8** @progname, align 4
  %call.read_error.Clone589 = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone590 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone589, i32 2
  %call1.read_error.Clone591 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone590, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %137)
  %call2.read_error.Clone592 = call i32* @_errno()
  %138 = load i32, i32* %call2.read_error.Clone592, align 4
  %cmp.read_error.Clone593 = icmp ne i32 %138, 0
  br i1 %cmp.read_error.Clone593, label %if.then.read_error.Clone594, label %if.else.read_error.Clone595

if.then.read_error.Clone594:                      ; preds = %entry.read_error.Clone588
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone599

if.else.read_error.Clone595:                      ; preds = %entry.read_error.Clone588
  %call3.read_error.Clone596 = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone597 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone596, i32 2
  %call5.read_error.Clone598 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone597, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone599

if.end.read_error.Clone599:                       ; preds = %if.else.read_error.Clone595, %if.then.read_error.Clone594
  br label %entry.abort_gzip.Clone864

entry.abort_gzip.Clone864:                        ; preds = %if.end.read_error.Clone599
  %139 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone865 = icmp ne i32 %139, 0
  br i1 %tobool.abort_gzip.Clone865, label %if.then.abort_gzip.Clone866, label %if.end.abort_gzip.Clone869

if.then.abort_gzip.Clone866:                      ; preds = %entry.abort_gzip.Clone864
  %140 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone867 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %140)
  %call1.abort_gzip.Clone868 = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone869

if.end.abort_gzip.Clone869:                       ; preds = %if.then.abort_gzip.Clone866, %entry.abort_gzip.Clone864
  br label %entry.do_exit.Clone950

entry.do_exit.Clone950:                           ; preds = %if.end.abort_gzip.Clone869
  %exitcode.addr.do_exit.Clone951 = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone951, align 4
  %141 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone952 = icmp ne i32 %141, 0
  br i1 %tobool.do_exit.Clone952, label %if.then.do_exit.Clone953, label %if.end.do_exit.Clone954

if.then.do_exit.Clone953:                         ; preds = %entry.do_exit.Clone950
  %142 = load i32, i32* %exitcode.addr.do_exit.Clone951, align 4
  call void @exit(i32 %142) #7
  unreachable

if.end.do_exit.Clone954:                          ; preds = %entry.do_exit.Clone950
  store i32 1, i32* @do_exit.in_exit, align 4
  %143 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone955 = icmp ne i8* %143, null
  br i1 %cmp.do_exit.Clone955, label %if.then1.do_exit.Clone956, label %if.end2.do_exit.Clone957

if.then1.do_exit.Clone956:                        ; preds = %if.end.do_exit.Clone954
  %144 = load i8*, i8** @env, align 4
  call void @free(i8* %144) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone957

if.end2.do_exit.Clone957:                         ; preds = %if.then1.do_exit.Clone956, %if.end.do_exit.Clone954
  %145 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone958 = icmp ne i8** %145, null
  br i1 %cmp3.do_exit.Clone958, label %if.then4.do_exit.Clone959, label %if.end5.do_exit.Clone960

if.then4.do_exit.Clone959:                        ; preds = %if.end2.do_exit.Clone957
  %146 = load i8**, i8*** @args, align 4
  %147 = bitcast i8** %146 to i8*
  call void @free(i8* %147) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone960

if.end5.do_exit.Clone960:                         ; preds = %if.then4.do_exit.Clone959, %if.end2.do_exit.Clone957
  %148 = load i32, i32* %exitcode.addr.do_exit.Clone951, align 4
  call void @exit(i32 %148) #7
  unreachable

return.do_exit.Clone961:                          ; No predecessors!
  br label %if.end.abort_gzip.Clone869.Split

if.end.abort_gzip.Clone869.Split:                 ; preds = %return.do_exit.Clone961
  br label %if.end.read_error.Clone599.Split

if.end.read_error.Clone599.Split:                 ; preds = %if.end.abort_gzip.Clone869.Split
  br label %if.end7.fill_inbuf.Clone429.Split

if.end7.fill_inbuf.Clone429.Split:                ; preds = %if.end.read_error.Clone599.Split
  br label %if.end8.fill_inbuf.Clone430

if.end8.fill_inbuf.Clone430:                      ; preds = %if.end7.fill_inbuf.Clone429.Split, %do.end.fill_inbuf.Clone424
  %149 = load i32, i32* @insize, align 4
  %150 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone431 = add i32 %150, %149
  store i32 %add9.fill_inbuf.Clone431, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %151 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone432 = zext i8 %151 to i32
  store i32 %conv.fill_inbuf.Clone432, i32* %retval.fill_inbuf.Clone408, align 4
  br label %return.fill_inbuf.Clone433

return.fill_inbuf.Clone433:                       ; preds = %if.end8.fill_inbuf.Clone430, %if.then6.fill_inbuf.Clone428
  %152 = load i32, i32* %retval.fill_inbuf.Clone408, align 4
  store i32 %152, i32* %RetValuePtr434
  br label %cond.false55.Split

cond.false55.Split:                               ; preds = %return.fill_inbuf.Clone433
  %RetValue435 = load i32, i32* %RetValuePtr434
  br label %cond.end57

cond.end57:                                       ; preds = %cond.false55.Split, %cond.true51
  %cond58 = phi i32 [ %conv54, %cond.true51 ], [ %RetValue435, %cond.false55.Split ]
  store i32 %cond58, i32* @method, align 4
  %153 = load i32, i32* @method, align 4
  %cmp59 = icmp ne i32 %153, 8
  br i1 %cmp59, label %if.then61, label %if.end65

if.then61:                                        ; preds = %cond.end57
  %154 = load i32, i32* @method, align 4
  %155 = load i8*, i8** @progname, align 4
  %call62 = call %struct._iobuf* @__iob_func()
  %arrayidx63 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call62, i32 2
  %call64 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx63, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @"??_C@_0DI@FEIGCNH@?$CFs?3?5?$CFs?3?5unknown?5method?5?$CFd?5?9?9?5get@", i32 0, i32 0), i8* %155, i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0), i32 %154)
  store i32 1, i32* @exit_code, align 4
  store i32 -1, i32* %retval, align 4
  br label %return

if.end65:                                         ; preds = %cond.end57
  store i32 (...)* bitcast (i32 (i32, i32)* @unzip to i32 (...)*), i32 (...)** @work, align 4
  %156 = load i32, i32* @inptr, align 4
  %157 = load i32, i32* @insize, align 4
  %cmp66 = icmp ult i32 %156, %157
  br i1 %cmp66, label %cond.true68, label %cond.false72

cond.true68:                                      ; preds = %if.end65
  %158 = load i32, i32* @inptr, align 4
  %inc69 = add i32 %158, 1
  store i32 %inc69, i32* @inptr, align 4
  %arrayidx70 = getelementptr inbounds [32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 %158
  %159 = load i8, i8* %arrayidx70, align 1
  %conv71 = zext i8 %159 to i32
  br label %cond.end74

cond.false72:                                     ; preds = %if.end65
  br label %entry.fill_inbuf.Clone378

entry.fill_inbuf.Clone378:                        ; preds = %cond.false72
  %retval.fill_inbuf.Clone379 = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone380 = alloca i32, align 4
  %len.fill_inbuf.Clone381 = alloca i32, align 4
  store i32 0, i32* %eof_ok.addr.fill_inbuf.Clone380, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone382 = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone382, align 4
  br label %do.body.fill_inbuf.Clone383

do.body.fill_inbuf.Clone383:                      ; preds = %do.cond.fill_inbuf.Clone393, %entry.fill_inbuf.Clone378
  %160 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone384 = sub i32 32768, %160
  %161 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone385 = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %161
  %162 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone386 = call i32 @spec_read(i32 %162, i8* %add.ptr.fill_inbuf.Clone385, i32 %sub.fill_inbuf.Clone384)
  store i32 %call1.fill_inbuf.Clone386, i32* %len.fill_inbuf.Clone381, align 4
  %163 = load i32, i32* %len.fill_inbuf.Clone381, align 4
  %cmp.fill_inbuf.Clone387 = icmp eq i32 %163, 0
  br i1 %cmp.fill_inbuf.Clone387, label %if.then.fill_inbuf.Clone390, label %lor.lhs.false.fill_inbuf.Clone388

lor.lhs.false.fill_inbuf.Clone388:                ; preds = %do.body.fill_inbuf.Clone383
  %164 = load i32, i32* %len.fill_inbuf.Clone381, align 4
  %cmp2.fill_inbuf.Clone389 = icmp eq i32 %164, -1
  br i1 %cmp2.fill_inbuf.Clone389, label %if.then.fill_inbuf.Clone390, label %if.end.fill_inbuf.Clone391

if.then.fill_inbuf.Clone390:                      ; preds = %lor.lhs.false.fill_inbuf.Clone388, %do.body.fill_inbuf.Clone383
  br label %do.end.fill_inbuf.Clone395

if.end.fill_inbuf.Clone391:                       ; preds = %lor.lhs.false.fill_inbuf.Clone388
  %165 = load i32, i32* %len.fill_inbuf.Clone381, align 4
  %166 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone392 = add i32 %166, %165
  store i32 %add.fill_inbuf.Clone392, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone393

do.cond.fill_inbuf.Clone393:                      ; preds = %if.end.fill_inbuf.Clone391
  %167 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone394 = icmp ult i32 %167, 32768
  br i1 %cmp3.fill_inbuf.Clone394, label %do.body.fill_inbuf.Clone383, label %do.end.fill_inbuf.Clone395

do.end.fill_inbuf.Clone395:                       ; preds = %do.cond.fill_inbuf.Clone393, %if.then.fill_inbuf.Clone390
  %168 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone396 = icmp eq i32 %168, 0
  br i1 %cmp4.fill_inbuf.Clone396, label %if.then5.fill_inbuf.Clone397, label %if.end8.fill_inbuf.Clone401

if.then5.fill_inbuf.Clone397:                     ; preds = %do.end.fill_inbuf.Clone395
  %169 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone380, align 4
  %tobool.fill_inbuf.Clone398 = icmp ne i32 %169, 0
  br i1 %tobool.fill_inbuf.Clone398, label %if.then6.fill_inbuf.Clone399, label %if.end7.fill_inbuf.Clone400

if.then6.fill_inbuf.Clone399:                     ; preds = %if.then5.fill_inbuf.Clone397
  store i32 -1, i32* %retval.fill_inbuf.Clone379, align 4
  br label %return.fill_inbuf.Clone404

if.end7.fill_inbuf.Clone400:                      ; preds = %if.then5.fill_inbuf.Clone397
  br label %entry.read_error.Clone600

entry.read_error.Clone600:                        ; preds = %if.end7.fill_inbuf.Clone400
  %170 = load i8*, i8** @progname, align 4
  %call.read_error.Clone601 = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone602 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone601, i32 2
  %call1.read_error.Clone603 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone602, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %170)
  %call2.read_error.Clone604 = call i32* @_errno()
  %171 = load i32, i32* %call2.read_error.Clone604, align 4
  %cmp.read_error.Clone605 = icmp ne i32 %171, 0
  br i1 %cmp.read_error.Clone605, label %if.then.read_error.Clone606, label %if.else.read_error.Clone607

if.then.read_error.Clone606:                      ; preds = %entry.read_error.Clone600
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone611

if.else.read_error.Clone607:                      ; preds = %entry.read_error.Clone600
  %call3.read_error.Clone608 = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone609 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone608, i32 2
  %call5.read_error.Clone610 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone609, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone611

if.end.read_error.Clone611:                       ; preds = %if.else.read_error.Clone607, %if.then.read_error.Clone606
  br label %entry.abort_gzip.Clone858

entry.abort_gzip.Clone858:                        ; preds = %if.end.read_error.Clone611
  %172 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone859 = icmp ne i32 %172, 0
  br i1 %tobool.abort_gzip.Clone859, label %if.then.abort_gzip.Clone860, label %if.end.abort_gzip.Clone863

if.then.abort_gzip.Clone860:                      ; preds = %entry.abort_gzip.Clone858
  %173 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone861 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %173)
  %call1.abort_gzip.Clone862 = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone863

if.end.abort_gzip.Clone863:                       ; preds = %if.then.abort_gzip.Clone860, %entry.abort_gzip.Clone858
  br label %entry.do_exit.Clone962

entry.do_exit.Clone962:                           ; preds = %if.end.abort_gzip.Clone863
  %exitcode.addr.do_exit.Clone963 = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone963, align 4
  %174 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone964 = icmp ne i32 %174, 0
  br i1 %tobool.do_exit.Clone964, label %if.then.do_exit.Clone965, label %if.end.do_exit.Clone966

if.then.do_exit.Clone965:                         ; preds = %entry.do_exit.Clone962
  %175 = load i32, i32* %exitcode.addr.do_exit.Clone963, align 4
  call void @exit(i32 %175) #7
  unreachable

if.end.do_exit.Clone966:                          ; preds = %entry.do_exit.Clone962
  store i32 1, i32* @do_exit.in_exit, align 4
  %176 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone967 = icmp ne i8* %176, null
  br i1 %cmp.do_exit.Clone967, label %if.then1.do_exit.Clone968, label %if.end2.do_exit.Clone969

if.then1.do_exit.Clone968:                        ; preds = %if.end.do_exit.Clone966
  %177 = load i8*, i8** @env, align 4
  call void @free(i8* %177) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone969

if.end2.do_exit.Clone969:                         ; preds = %if.then1.do_exit.Clone968, %if.end.do_exit.Clone966
  %178 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone970 = icmp ne i8** %178, null
  br i1 %cmp3.do_exit.Clone970, label %if.then4.do_exit.Clone971, label %if.end5.do_exit.Clone972

if.then4.do_exit.Clone971:                        ; preds = %if.end2.do_exit.Clone969
  %179 = load i8**, i8*** @args, align 4
  %180 = bitcast i8** %179 to i8*
  call void @free(i8* %180) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone972

if.end5.do_exit.Clone972:                         ; preds = %if.then4.do_exit.Clone971, %if.end2.do_exit.Clone969
  %181 = load i32, i32* %exitcode.addr.do_exit.Clone963, align 4
  call void @exit(i32 %181) #7
  unreachable

return.do_exit.Clone973:                          ; No predecessors!
  br label %if.end.abort_gzip.Clone863.Split

if.end.abort_gzip.Clone863.Split:                 ; preds = %return.do_exit.Clone973
  br label %if.end.read_error.Clone611.Split

if.end.read_error.Clone611.Split:                 ; preds = %if.end.abort_gzip.Clone863.Split
  br label %if.end7.fill_inbuf.Clone400.Split

if.end7.fill_inbuf.Clone400.Split:                ; preds = %if.end.read_error.Clone611.Split
  br label %if.end8.fill_inbuf.Clone401

if.end8.fill_inbuf.Clone401:                      ; preds = %if.end7.fill_inbuf.Clone400.Split, %do.end.fill_inbuf.Clone395
  %182 = load i32, i32* @insize, align 4
  %183 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone402 = add i32 %183, %182
  store i32 %add9.fill_inbuf.Clone402, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %184 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone403 = zext i8 %184 to i32
  store i32 %conv.fill_inbuf.Clone403, i32* %retval.fill_inbuf.Clone379, align 4
  br label %return.fill_inbuf.Clone404

return.fill_inbuf.Clone404:                       ; preds = %if.end8.fill_inbuf.Clone401, %if.then6.fill_inbuf.Clone399
  %185 = load i32, i32* %retval.fill_inbuf.Clone379, align 4
  store i32 %185, i32* %RetValuePtr405
  br label %cond.false72.Split

cond.false72.Split:                               ; preds = %return.fill_inbuf.Clone404
  %RetValue406 = load i32, i32* %RetValuePtr405
  br label %cond.end74

cond.end74:                                       ; preds = %cond.false72.Split, %cond.true68
  %cond75 = phi i32 [ %conv71, %cond.true68 ], [ %RetValue406, %cond.false72.Split ]
  %conv76 = trunc i32 %cond75 to i8
  store i8 %conv76, i8* %flags, align 1
  %186 = load i8, i8* %flags, align 1
  %conv77 = zext i8 %186 to i32
  %and = and i32 %conv77, 32
  %cmp78 = icmp ne i32 %and, 0
  br i1 %cmp78, label %if.then80, label %if.end84

if.then80:                                        ; preds = %cond.end74
  %187 = load i8*, i8** @progname, align 4
  %call81 = call %struct._iobuf* @__iob_func()
  %arrayidx82 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call81, i32 2
  %call83 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx82, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @"??_C@_0DC@DFIAKIJP@?$CFs?3?5?$CFs?5is?5encrypted?5?9?9?5get?5newer@", i32 0, i32 0), i8* %187, i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  store i32 1, i32* @exit_code, align 4
  store i32 -1, i32* %retval, align 4
  br label %return

if.end84:                                         ; preds = %cond.end74
  %188 = load i8, i8* %flags, align 1
  %conv85 = zext i8 %188 to i32
  %and86 = and i32 %conv85, 2
  %cmp87 = icmp ne i32 %and86, 0
  br i1 %cmp87, label %if.then89, label %if.end97

if.then89:                                        ; preds = %if.end84
  %189 = load i8*, i8** @progname, align 4
  %call90 = call %struct._iobuf* @__iob_func()
  %arrayidx91 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call90, i32 2
  %call92 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx91, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @"??_C@_0EB@IIANOBKG@?$CFs?3?5?$CFs?5is?5a?5a?5multi?9part?5gzip?5fi@", i32 0, i32 0), i8* %189, i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  store i32 1, i32* @exit_code, align 4
  %190 = load i32, i32* @force, align 4
  %cmp93 = icmp sle i32 %190, 1
  br i1 %cmp93, label %if.then95, label %if.end96

if.then95:                                        ; preds = %if.then89
  store i32 -1, i32* %retval, align 4
  br label %return

if.end96:                                         ; preds = %if.then89
  br label %if.end97

if.end97:                                         ; preds = %if.end96, %if.end84
  %191 = load i8, i8* %flags, align 1
  %conv98 = zext i8 %191 to i32
  %and99 = and i32 %conv98, 192
  %cmp100 = icmp ne i32 %and99, 0
  br i1 %cmp100, label %if.then102, label %if.end111

if.then102:                                       ; preds = %if.end97
  %192 = load i8, i8* %flags, align 1
  %conv103 = zext i8 %192 to i32
  %193 = load i8*, i8** @progname, align 4
  %call104 = call %struct._iobuf* @__iob_func()
  %arrayidx105 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call104, i32 2
  %call106 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx105, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @"??_C@_0DE@CJCKLHG@?$CFs?3?5?$CFs?5has?5flags?50x?$CFx?5?9?9?5get?5new@", i32 0, i32 0), i8* %193, i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0), i32 %conv103)
  store i32 1, i32* @exit_code, align 4
  %194 = load i32, i32* @force, align 4
  %cmp107 = icmp sle i32 %194, 1
  br i1 %cmp107, label %if.then109, label %if.end110

if.then109:                                       ; preds = %if.then102
  store i32 -1, i32* %retval, align 4
  br label %return

if.end110:                                        ; preds = %if.then102
  br label %if.end111

if.end111:                                        ; preds = %if.end110, %if.end97
  %195 = load i32, i32* @inptr, align 4
  %196 = load i32, i32* @insize, align 4
  %cmp112 = icmp ult i32 %195, %196
  br i1 %cmp112, label %cond.true114, label %cond.false118

cond.true114:                                     ; preds = %if.end111
  %197 = load i32, i32* @inptr, align 4
  %inc115 = add i32 %197, 1
  store i32 %inc115, i32* @inptr, align 4
  %arrayidx116 = getelementptr inbounds [32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 %197
  %198 = load i8, i8* %arrayidx116, align 1
  %conv117 = zext i8 %198 to i32
  br label %cond.end120

cond.false118:                                    ; preds = %if.end111
  br label %entry.fill_inbuf.Clone349

entry.fill_inbuf.Clone349:                        ; preds = %cond.false118
  %retval.fill_inbuf.Clone350 = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone351 = alloca i32, align 4
  %len.fill_inbuf.Clone352 = alloca i32, align 4
  store i32 0, i32* %eof_ok.addr.fill_inbuf.Clone351, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone353 = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone353, align 4
  br label %do.body.fill_inbuf.Clone354

do.body.fill_inbuf.Clone354:                      ; preds = %do.cond.fill_inbuf.Clone364, %entry.fill_inbuf.Clone349
  %199 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone355 = sub i32 32768, %199
  %200 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone356 = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %200
  %201 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone357 = call i32 @spec_read(i32 %201, i8* %add.ptr.fill_inbuf.Clone356, i32 %sub.fill_inbuf.Clone355)
  store i32 %call1.fill_inbuf.Clone357, i32* %len.fill_inbuf.Clone352, align 4
  %202 = load i32, i32* %len.fill_inbuf.Clone352, align 4
  %cmp.fill_inbuf.Clone358 = icmp eq i32 %202, 0
  br i1 %cmp.fill_inbuf.Clone358, label %if.then.fill_inbuf.Clone361, label %lor.lhs.false.fill_inbuf.Clone359

lor.lhs.false.fill_inbuf.Clone359:                ; preds = %do.body.fill_inbuf.Clone354
  %203 = load i32, i32* %len.fill_inbuf.Clone352, align 4
  %cmp2.fill_inbuf.Clone360 = icmp eq i32 %203, -1
  br i1 %cmp2.fill_inbuf.Clone360, label %if.then.fill_inbuf.Clone361, label %if.end.fill_inbuf.Clone362

if.then.fill_inbuf.Clone361:                      ; preds = %lor.lhs.false.fill_inbuf.Clone359, %do.body.fill_inbuf.Clone354
  br label %do.end.fill_inbuf.Clone366

if.end.fill_inbuf.Clone362:                       ; preds = %lor.lhs.false.fill_inbuf.Clone359
  %204 = load i32, i32* %len.fill_inbuf.Clone352, align 4
  %205 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone363 = add i32 %205, %204
  store i32 %add.fill_inbuf.Clone363, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone364

do.cond.fill_inbuf.Clone364:                      ; preds = %if.end.fill_inbuf.Clone362
  %206 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone365 = icmp ult i32 %206, 32768
  br i1 %cmp3.fill_inbuf.Clone365, label %do.body.fill_inbuf.Clone354, label %do.end.fill_inbuf.Clone366

do.end.fill_inbuf.Clone366:                       ; preds = %do.cond.fill_inbuf.Clone364, %if.then.fill_inbuf.Clone361
  %207 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone367 = icmp eq i32 %207, 0
  br i1 %cmp4.fill_inbuf.Clone367, label %if.then5.fill_inbuf.Clone368, label %if.end8.fill_inbuf.Clone372

if.then5.fill_inbuf.Clone368:                     ; preds = %do.end.fill_inbuf.Clone366
  %208 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone351, align 4
  %tobool.fill_inbuf.Clone369 = icmp ne i32 %208, 0
  br i1 %tobool.fill_inbuf.Clone369, label %if.then6.fill_inbuf.Clone370, label %if.end7.fill_inbuf.Clone371

if.then6.fill_inbuf.Clone370:                     ; preds = %if.then5.fill_inbuf.Clone368
  store i32 -1, i32* %retval.fill_inbuf.Clone350, align 4
  br label %return.fill_inbuf.Clone375

if.end7.fill_inbuf.Clone371:                      ; preds = %if.then5.fill_inbuf.Clone368
  br label %entry.read_error.Clone612

entry.read_error.Clone612:                        ; preds = %if.end7.fill_inbuf.Clone371
  %209 = load i8*, i8** @progname, align 4
  %call.read_error.Clone613 = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone614 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone613, i32 2
  %call1.read_error.Clone615 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone614, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %209)
  %call2.read_error.Clone616 = call i32* @_errno()
  %210 = load i32, i32* %call2.read_error.Clone616, align 4
  %cmp.read_error.Clone617 = icmp ne i32 %210, 0
  br i1 %cmp.read_error.Clone617, label %if.then.read_error.Clone618, label %if.else.read_error.Clone619

if.then.read_error.Clone618:                      ; preds = %entry.read_error.Clone612
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone623

if.else.read_error.Clone619:                      ; preds = %entry.read_error.Clone612
  %call3.read_error.Clone620 = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone621 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone620, i32 2
  %call5.read_error.Clone622 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone621, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone623

if.end.read_error.Clone623:                       ; preds = %if.else.read_error.Clone619, %if.then.read_error.Clone618
  br label %entry.abort_gzip.Clone852

entry.abort_gzip.Clone852:                        ; preds = %if.end.read_error.Clone623
  %211 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone853 = icmp ne i32 %211, 0
  br i1 %tobool.abort_gzip.Clone853, label %if.then.abort_gzip.Clone854, label %if.end.abort_gzip.Clone857

if.then.abort_gzip.Clone854:                      ; preds = %entry.abort_gzip.Clone852
  %212 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone855 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %212)
  %call1.abort_gzip.Clone856 = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone857

if.end.abort_gzip.Clone857:                       ; preds = %if.then.abort_gzip.Clone854, %entry.abort_gzip.Clone852
  br label %entry.do_exit.Clone974

entry.do_exit.Clone974:                           ; preds = %if.end.abort_gzip.Clone857
  %exitcode.addr.do_exit.Clone975 = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone975, align 4
  %213 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone976 = icmp ne i32 %213, 0
  br i1 %tobool.do_exit.Clone976, label %if.then.do_exit.Clone977, label %if.end.do_exit.Clone978

if.then.do_exit.Clone977:                         ; preds = %entry.do_exit.Clone974
  %214 = load i32, i32* %exitcode.addr.do_exit.Clone975, align 4
  call void @exit(i32 %214) #7
  unreachable

if.end.do_exit.Clone978:                          ; preds = %entry.do_exit.Clone974
  store i32 1, i32* @do_exit.in_exit, align 4
  %215 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone979 = icmp ne i8* %215, null
  br i1 %cmp.do_exit.Clone979, label %if.then1.do_exit.Clone980, label %if.end2.do_exit.Clone981

if.then1.do_exit.Clone980:                        ; preds = %if.end.do_exit.Clone978
  %216 = load i8*, i8** @env, align 4
  call void @free(i8* %216) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone981

if.end2.do_exit.Clone981:                         ; preds = %if.then1.do_exit.Clone980, %if.end.do_exit.Clone978
  %217 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone982 = icmp ne i8** %217, null
  br i1 %cmp3.do_exit.Clone982, label %if.then4.do_exit.Clone983, label %if.end5.do_exit.Clone984

if.then4.do_exit.Clone983:                        ; preds = %if.end2.do_exit.Clone981
  %218 = load i8**, i8*** @args, align 4
  %219 = bitcast i8** %218 to i8*
  call void @free(i8* %219) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone984

if.end5.do_exit.Clone984:                         ; preds = %if.then4.do_exit.Clone983, %if.end2.do_exit.Clone981
  %220 = load i32, i32* %exitcode.addr.do_exit.Clone975, align 4
  call void @exit(i32 %220) #7
  unreachable

return.do_exit.Clone985:                          ; No predecessors!
  br label %if.end.abort_gzip.Clone857.Split

if.end.abort_gzip.Clone857.Split:                 ; preds = %return.do_exit.Clone985
  br label %if.end.read_error.Clone623.Split

if.end.read_error.Clone623.Split:                 ; preds = %if.end.abort_gzip.Clone857.Split
  br label %if.end7.fill_inbuf.Clone371.Split

if.end7.fill_inbuf.Clone371.Split:                ; preds = %if.end.read_error.Clone623.Split
  br label %if.end8.fill_inbuf.Clone372

if.end8.fill_inbuf.Clone372:                      ; preds = %if.end7.fill_inbuf.Clone371.Split, %do.end.fill_inbuf.Clone366
  %221 = load i32, i32* @insize, align 4
  %222 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone373 = add i32 %222, %221
  store i32 %add9.fill_inbuf.Clone373, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %223 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone374 = zext i8 %223 to i32
  store i32 %conv.fill_inbuf.Clone374, i32* %retval.fill_inbuf.Clone350, align 4
  br label %return.fill_inbuf.Clone375

return.fill_inbuf.Clone375:                       ; preds = %if.end8.fill_inbuf.Clone372, %if.then6.fill_inbuf.Clone370
  %224 = load i32, i32* %retval.fill_inbuf.Clone350, align 4
  store i32 %224, i32* %RetValuePtr376
  br label %cond.false118.Split

cond.false118.Split:                              ; preds = %return.fill_inbuf.Clone375
  %RetValue377 = load i32, i32* %RetValuePtr376
  br label %cond.end120

cond.end120:                                      ; preds = %cond.false118.Split, %cond.true114
  %cond121 = phi i32 [ %conv117, %cond.true114 ], [ %RetValue377, %cond.false118.Split ]
  store i32 %cond121, i32* %stamp, align 4
  %225 = load i32, i32* @inptr, align 4
  %226 = load i32, i32* @insize, align 4
  %cmp122 = icmp ult i32 %225, %226
  br i1 %cmp122, label %cond.true124, label %cond.false128

cond.true124:                                     ; preds = %cond.end120
  %227 = load i32, i32* @inptr, align 4
  %inc125 = add i32 %227, 1
  store i32 %inc125, i32* @inptr, align 4
  %arrayidx126 = getelementptr inbounds [32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 %227
  %228 = load i8, i8* %arrayidx126, align 1
  %conv127 = zext i8 %228 to i32
  br label %cond.end130

cond.false128:                                    ; preds = %cond.end120
  br label %entry.fill_inbuf.Clone320

entry.fill_inbuf.Clone320:                        ; preds = %cond.false128
  %retval.fill_inbuf.Clone321 = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone322 = alloca i32, align 4
  %len.fill_inbuf.Clone323 = alloca i32, align 4
  store i32 0, i32* %eof_ok.addr.fill_inbuf.Clone322, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone324 = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone324, align 4
  br label %do.body.fill_inbuf.Clone325

do.body.fill_inbuf.Clone325:                      ; preds = %do.cond.fill_inbuf.Clone335, %entry.fill_inbuf.Clone320
  %229 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone326 = sub i32 32768, %229
  %230 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone327 = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %230
  %231 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone328 = call i32 @spec_read(i32 %231, i8* %add.ptr.fill_inbuf.Clone327, i32 %sub.fill_inbuf.Clone326)
  store i32 %call1.fill_inbuf.Clone328, i32* %len.fill_inbuf.Clone323, align 4
  %232 = load i32, i32* %len.fill_inbuf.Clone323, align 4
  %cmp.fill_inbuf.Clone329 = icmp eq i32 %232, 0
  br i1 %cmp.fill_inbuf.Clone329, label %if.then.fill_inbuf.Clone332, label %lor.lhs.false.fill_inbuf.Clone330

lor.lhs.false.fill_inbuf.Clone330:                ; preds = %do.body.fill_inbuf.Clone325
  %233 = load i32, i32* %len.fill_inbuf.Clone323, align 4
  %cmp2.fill_inbuf.Clone331 = icmp eq i32 %233, -1
  br i1 %cmp2.fill_inbuf.Clone331, label %if.then.fill_inbuf.Clone332, label %if.end.fill_inbuf.Clone333

if.then.fill_inbuf.Clone332:                      ; preds = %lor.lhs.false.fill_inbuf.Clone330, %do.body.fill_inbuf.Clone325
  br label %do.end.fill_inbuf.Clone337

if.end.fill_inbuf.Clone333:                       ; preds = %lor.lhs.false.fill_inbuf.Clone330
  %234 = load i32, i32* %len.fill_inbuf.Clone323, align 4
  %235 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone334 = add i32 %235, %234
  store i32 %add.fill_inbuf.Clone334, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone335

do.cond.fill_inbuf.Clone335:                      ; preds = %if.end.fill_inbuf.Clone333
  %236 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone336 = icmp ult i32 %236, 32768
  br i1 %cmp3.fill_inbuf.Clone336, label %do.body.fill_inbuf.Clone325, label %do.end.fill_inbuf.Clone337

do.end.fill_inbuf.Clone337:                       ; preds = %do.cond.fill_inbuf.Clone335, %if.then.fill_inbuf.Clone332
  %237 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone338 = icmp eq i32 %237, 0
  br i1 %cmp4.fill_inbuf.Clone338, label %if.then5.fill_inbuf.Clone339, label %if.end8.fill_inbuf.Clone343

if.then5.fill_inbuf.Clone339:                     ; preds = %do.end.fill_inbuf.Clone337
  %238 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone322, align 4
  %tobool.fill_inbuf.Clone340 = icmp ne i32 %238, 0
  br i1 %tobool.fill_inbuf.Clone340, label %if.then6.fill_inbuf.Clone341, label %if.end7.fill_inbuf.Clone342

if.then6.fill_inbuf.Clone341:                     ; preds = %if.then5.fill_inbuf.Clone339
  store i32 -1, i32* %retval.fill_inbuf.Clone321, align 4
  br label %return.fill_inbuf.Clone346

if.end7.fill_inbuf.Clone342:                      ; preds = %if.then5.fill_inbuf.Clone339
  br label %entry.read_error.Clone624

entry.read_error.Clone624:                        ; preds = %if.end7.fill_inbuf.Clone342
  %239 = load i8*, i8** @progname, align 4
  %call.read_error.Clone625 = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone626 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone625, i32 2
  %call1.read_error.Clone627 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone626, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %239)
  %call2.read_error.Clone628 = call i32* @_errno()
  %240 = load i32, i32* %call2.read_error.Clone628, align 4
  %cmp.read_error.Clone629 = icmp ne i32 %240, 0
  br i1 %cmp.read_error.Clone629, label %if.then.read_error.Clone630, label %if.else.read_error.Clone631

if.then.read_error.Clone630:                      ; preds = %entry.read_error.Clone624
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone635

if.else.read_error.Clone631:                      ; preds = %entry.read_error.Clone624
  %call3.read_error.Clone632 = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone633 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone632, i32 2
  %call5.read_error.Clone634 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone633, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone635

if.end.read_error.Clone635:                       ; preds = %if.else.read_error.Clone631, %if.then.read_error.Clone630
  br label %entry.abort_gzip.Clone846

entry.abort_gzip.Clone846:                        ; preds = %if.end.read_error.Clone635
  %241 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone847 = icmp ne i32 %241, 0
  br i1 %tobool.abort_gzip.Clone847, label %if.then.abort_gzip.Clone848, label %if.end.abort_gzip.Clone851

if.then.abort_gzip.Clone848:                      ; preds = %entry.abort_gzip.Clone846
  %242 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone849 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %242)
  %call1.abort_gzip.Clone850 = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone851

if.end.abort_gzip.Clone851:                       ; preds = %if.then.abort_gzip.Clone848, %entry.abort_gzip.Clone846
  br label %entry.do_exit.Clone986

entry.do_exit.Clone986:                           ; preds = %if.end.abort_gzip.Clone851
  %exitcode.addr.do_exit.Clone987 = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone987, align 4
  %243 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone988 = icmp ne i32 %243, 0
  br i1 %tobool.do_exit.Clone988, label %if.then.do_exit.Clone989, label %if.end.do_exit.Clone990

if.then.do_exit.Clone989:                         ; preds = %entry.do_exit.Clone986
  %244 = load i32, i32* %exitcode.addr.do_exit.Clone987, align 4
  call void @exit(i32 %244) #7
  unreachable

if.end.do_exit.Clone990:                          ; preds = %entry.do_exit.Clone986
  store i32 1, i32* @do_exit.in_exit, align 4
  %245 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone991 = icmp ne i8* %245, null
  br i1 %cmp.do_exit.Clone991, label %if.then1.do_exit.Clone992, label %if.end2.do_exit.Clone993

if.then1.do_exit.Clone992:                        ; preds = %if.end.do_exit.Clone990
  %246 = load i8*, i8** @env, align 4
  call void @free(i8* %246) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone993

if.end2.do_exit.Clone993:                         ; preds = %if.then1.do_exit.Clone992, %if.end.do_exit.Clone990
  %247 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone994 = icmp ne i8** %247, null
  br i1 %cmp3.do_exit.Clone994, label %if.then4.do_exit.Clone995, label %if.end5.do_exit.Clone996

if.then4.do_exit.Clone995:                        ; preds = %if.end2.do_exit.Clone993
  %248 = load i8**, i8*** @args, align 4
  %249 = bitcast i8** %248 to i8*
  call void @free(i8* %249) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone996

if.end5.do_exit.Clone996:                         ; preds = %if.then4.do_exit.Clone995, %if.end2.do_exit.Clone993
  %250 = load i32, i32* %exitcode.addr.do_exit.Clone987, align 4
  call void @exit(i32 %250) #7
  unreachable

return.do_exit.Clone997:                          ; No predecessors!
  br label %if.end.abort_gzip.Clone851.Split

if.end.abort_gzip.Clone851.Split:                 ; preds = %return.do_exit.Clone997
  br label %if.end.read_error.Clone635.Split

if.end.read_error.Clone635.Split:                 ; preds = %if.end.abort_gzip.Clone851.Split
  br label %if.end7.fill_inbuf.Clone342.Split

if.end7.fill_inbuf.Clone342.Split:                ; preds = %if.end.read_error.Clone635.Split
  br label %if.end8.fill_inbuf.Clone343

if.end8.fill_inbuf.Clone343:                      ; preds = %if.end7.fill_inbuf.Clone342.Split, %do.end.fill_inbuf.Clone337
  %251 = load i32, i32* @insize, align 4
  %252 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone344 = add i32 %252, %251
  store i32 %add9.fill_inbuf.Clone344, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %253 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone345 = zext i8 %253 to i32
  store i32 %conv.fill_inbuf.Clone345, i32* %retval.fill_inbuf.Clone321, align 4
  br label %return.fill_inbuf.Clone346

return.fill_inbuf.Clone346:                       ; preds = %if.end8.fill_inbuf.Clone343, %if.then6.fill_inbuf.Clone341
  %254 = load i32, i32* %retval.fill_inbuf.Clone321, align 4
  store i32 %254, i32* %RetValuePtr347
  br label %cond.false128.Split

cond.false128.Split:                              ; preds = %return.fill_inbuf.Clone346
  %RetValue348 = load i32, i32* %RetValuePtr347
  br label %cond.end130

cond.end130:                                      ; preds = %cond.false128.Split, %cond.true124
  %cond131 = phi i32 [ %conv127, %cond.true124 ], [ %RetValue348, %cond.false128.Split ]
  %shl = shl i32 %cond131, 8
  %255 = load i32, i32* %stamp, align 4
  %or = or i32 %255, %shl
  store i32 %or, i32* %stamp, align 4
  %256 = load i32, i32* @inptr, align 4
  %257 = load i32, i32* @insize, align 4
  %cmp132 = icmp ult i32 %256, %257
  br i1 %cmp132, label %cond.true134, label %cond.false138

cond.true134:                                     ; preds = %cond.end130
  %258 = load i32, i32* @inptr, align 4
  %inc135 = add i32 %258, 1
  store i32 %inc135, i32* @inptr, align 4
  %arrayidx136 = getelementptr inbounds [32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 %258
  %259 = load i8, i8* %arrayidx136, align 1
  %conv137 = zext i8 %259 to i32
  br label %cond.end140

cond.false138:                                    ; preds = %cond.end130
  br label %entry.fill_inbuf.Clone291

entry.fill_inbuf.Clone291:                        ; preds = %cond.false138
  %retval.fill_inbuf.Clone292 = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone293 = alloca i32, align 4
  %len.fill_inbuf.Clone294 = alloca i32, align 4
  store i32 0, i32* %eof_ok.addr.fill_inbuf.Clone293, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone295 = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone295, align 4
  br label %do.body.fill_inbuf.Clone296

do.body.fill_inbuf.Clone296:                      ; preds = %do.cond.fill_inbuf.Clone306, %entry.fill_inbuf.Clone291
  %260 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone297 = sub i32 32768, %260
  %261 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone298 = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %261
  %262 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone299 = call i32 @spec_read(i32 %262, i8* %add.ptr.fill_inbuf.Clone298, i32 %sub.fill_inbuf.Clone297)
  store i32 %call1.fill_inbuf.Clone299, i32* %len.fill_inbuf.Clone294, align 4
  %263 = load i32, i32* %len.fill_inbuf.Clone294, align 4
  %cmp.fill_inbuf.Clone300 = icmp eq i32 %263, 0
  br i1 %cmp.fill_inbuf.Clone300, label %if.then.fill_inbuf.Clone303, label %lor.lhs.false.fill_inbuf.Clone301

lor.lhs.false.fill_inbuf.Clone301:                ; preds = %do.body.fill_inbuf.Clone296
  %264 = load i32, i32* %len.fill_inbuf.Clone294, align 4
  %cmp2.fill_inbuf.Clone302 = icmp eq i32 %264, -1
  br i1 %cmp2.fill_inbuf.Clone302, label %if.then.fill_inbuf.Clone303, label %if.end.fill_inbuf.Clone304

if.then.fill_inbuf.Clone303:                      ; preds = %lor.lhs.false.fill_inbuf.Clone301, %do.body.fill_inbuf.Clone296
  br label %do.end.fill_inbuf.Clone308

if.end.fill_inbuf.Clone304:                       ; preds = %lor.lhs.false.fill_inbuf.Clone301
  %265 = load i32, i32* %len.fill_inbuf.Clone294, align 4
  %266 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone305 = add i32 %266, %265
  store i32 %add.fill_inbuf.Clone305, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone306

do.cond.fill_inbuf.Clone306:                      ; preds = %if.end.fill_inbuf.Clone304
  %267 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone307 = icmp ult i32 %267, 32768
  br i1 %cmp3.fill_inbuf.Clone307, label %do.body.fill_inbuf.Clone296, label %do.end.fill_inbuf.Clone308

do.end.fill_inbuf.Clone308:                       ; preds = %do.cond.fill_inbuf.Clone306, %if.then.fill_inbuf.Clone303
  %268 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone309 = icmp eq i32 %268, 0
  br i1 %cmp4.fill_inbuf.Clone309, label %if.then5.fill_inbuf.Clone310, label %if.end8.fill_inbuf.Clone314

if.then5.fill_inbuf.Clone310:                     ; preds = %do.end.fill_inbuf.Clone308
  %269 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone293, align 4
  %tobool.fill_inbuf.Clone311 = icmp ne i32 %269, 0
  br i1 %tobool.fill_inbuf.Clone311, label %if.then6.fill_inbuf.Clone312, label %if.end7.fill_inbuf.Clone313

if.then6.fill_inbuf.Clone312:                     ; preds = %if.then5.fill_inbuf.Clone310
  store i32 -1, i32* %retval.fill_inbuf.Clone292, align 4
  br label %return.fill_inbuf.Clone317

if.end7.fill_inbuf.Clone313:                      ; preds = %if.then5.fill_inbuf.Clone310
  br label %entry.read_error.Clone636

entry.read_error.Clone636:                        ; preds = %if.end7.fill_inbuf.Clone313
  %270 = load i8*, i8** @progname, align 4
  %call.read_error.Clone637 = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone638 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone637, i32 2
  %call1.read_error.Clone639 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone638, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %270)
  %call2.read_error.Clone640 = call i32* @_errno()
  %271 = load i32, i32* %call2.read_error.Clone640, align 4
  %cmp.read_error.Clone641 = icmp ne i32 %271, 0
  br i1 %cmp.read_error.Clone641, label %if.then.read_error.Clone642, label %if.else.read_error.Clone643

if.then.read_error.Clone642:                      ; preds = %entry.read_error.Clone636
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone647

if.else.read_error.Clone643:                      ; preds = %entry.read_error.Clone636
  %call3.read_error.Clone644 = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone645 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone644, i32 2
  %call5.read_error.Clone646 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone645, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone647

if.end.read_error.Clone647:                       ; preds = %if.else.read_error.Clone643, %if.then.read_error.Clone642
  br label %entry.abort_gzip.Clone840

entry.abort_gzip.Clone840:                        ; preds = %if.end.read_error.Clone647
  %272 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone841 = icmp ne i32 %272, 0
  br i1 %tobool.abort_gzip.Clone841, label %if.then.abort_gzip.Clone842, label %if.end.abort_gzip.Clone845

if.then.abort_gzip.Clone842:                      ; preds = %entry.abort_gzip.Clone840
  %273 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone843 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %273)
  %call1.abort_gzip.Clone844 = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone845

if.end.abort_gzip.Clone845:                       ; preds = %if.then.abort_gzip.Clone842, %entry.abort_gzip.Clone840
  br label %entry.do_exit.Clone998

entry.do_exit.Clone998:                           ; preds = %if.end.abort_gzip.Clone845
  %exitcode.addr.do_exit.Clone999 = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone999, align 4
  %274 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone1000 = icmp ne i32 %274, 0
  br i1 %tobool.do_exit.Clone1000, label %if.then.do_exit.Clone1001, label %if.end.do_exit.Clone1002

if.then.do_exit.Clone1001:                        ; preds = %entry.do_exit.Clone998
  %275 = load i32, i32* %exitcode.addr.do_exit.Clone999, align 4
  call void @exit(i32 %275) #7
  unreachable

if.end.do_exit.Clone1002:                         ; preds = %entry.do_exit.Clone998
  store i32 1, i32* @do_exit.in_exit, align 4
  %276 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone1003 = icmp ne i8* %276, null
  br i1 %cmp.do_exit.Clone1003, label %if.then1.do_exit.Clone1004, label %if.end2.do_exit.Clone1005

if.then1.do_exit.Clone1004:                       ; preds = %if.end.do_exit.Clone1002
  %277 = load i8*, i8** @env, align 4
  call void @free(i8* %277) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone1005

if.end2.do_exit.Clone1005:                        ; preds = %if.then1.do_exit.Clone1004, %if.end.do_exit.Clone1002
  %278 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone1006 = icmp ne i8** %278, null
  br i1 %cmp3.do_exit.Clone1006, label %if.then4.do_exit.Clone1007, label %if.end5.do_exit.Clone1008

if.then4.do_exit.Clone1007:                       ; preds = %if.end2.do_exit.Clone1005
  %279 = load i8**, i8*** @args, align 4
  %280 = bitcast i8** %279 to i8*
  call void @free(i8* %280) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone1008

if.end5.do_exit.Clone1008:                        ; preds = %if.then4.do_exit.Clone1007, %if.end2.do_exit.Clone1005
  %281 = load i32, i32* %exitcode.addr.do_exit.Clone999, align 4
  call void @exit(i32 %281) #7
  unreachable

return.do_exit.Clone1009:                         ; No predecessors!
  br label %if.end.abort_gzip.Clone845.Split

if.end.abort_gzip.Clone845.Split:                 ; preds = %return.do_exit.Clone1009
  br label %if.end.read_error.Clone647.Split

if.end.read_error.Clone647.Split:                 ; preds = %if.end.abort_gzip.Clone845.Split
  br label %if.end7.fill_inbuf.Clone313.Split

if.end7.fill_inbuf.Clone313.Split:                ; preds = %if.end.read_error.Clone647.Split
  br label %if.end8.fill_inbuf.Clone314

if.end8.fill_inbuf.Clone314:                      ; preds = %if.end7.fill_inbuf.Clone313.Split, %do.end.fill_inbuf.Clone308
  %282 = load i32, i32* @insize, align 4
  %283 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone315 = add i32 %283, %282
  store i32 %add9.fill_inbuf.Clone315, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %284 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone316 = zext i8 %284 to i32
  store i32 %conv.fill_inbuf.Clone316, i32* %retval.fill_inbuf.Clone292, align 4
  br label %return.fill_inbuf.Clone317

return.fill_inbuf.Clone317:                       ; preds = %if.end8.fill_inbuf.Clone314, %if.then6.fill_inbuf.Clone312
  %285 = load i32, i32* %retval.fill_inbuf.Clone292, align 4
  store i32 %285, i32* %RetValuePtr318
  br label %cond.false138.Split

cond.false138.Split:                              ; preds = %return.fill_inbuf.Clone317
  %RetValue319 = load i32, i32* %RetValuePtr318
  br label %cond.end140

cond.end140:                                      ; preds = %cond.false138.Split, %cond.true134
  %cond141 = phi i32 [ %conv137, %cond.true134 ], [ %RetValue319, %cond.false138.Split ]
  %shl142 = shl i32 %cond141, 16
  %286 = load i32, i32* %stamp, align 4
  %or143 = or i32 %286, %shl142
  store i32 %or143, i32* %stamp, align 4
  %287 = load i32, i32* @inptr, align 4
  %288 = load i32, i32* @insize, align 4
  %cmp144 = icmp ult i32 %287, %288
  br i1 %cmp144, label %cond.true146, label %cond.false150

cond.true146:                                     ; preds = %cond.end140
  %289 = load i32, i32* @inptr, align 4
  %inc147 = add i32 %289, 1
  store i32 %inc147, i32* @inptr, align 4
  %arrayidx148 = getelementptr inbounds [32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 %289
  %290 = load i8, i8* %arrayidx148, align 1
  %conv149 = zext i8 %290 to i32
  br label %cond.end152

cond.false150:                                    ; preds = %cond.end140
  br label %entry.fill_inbuf.Clone262

entry.fill_inbuf.Clone262:                        ; preds = %cond.false150
  %retval.fill_inbuf.Clone263 = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone264 = alloca i32, align 4
  %len.fill_inbuf.Clone265 = alloca i32, align 4
  store i32 0, i32* %eof_ok.addr.fill_inbuf.Clone264, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone266 = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone266, align 4
  br label %do.body.fill_inbuf.Clone267

do.body.fill_inbuf.Clone267:                      ; preds = %do.cond.fill_inbuf.Clone277, %entry.fill_inbuf.Clone262
  %291 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone268 = sub i32 32768, %291
  %292 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone269 = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %292
  %293 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone270 = call i32 @spec_read(i32 %293, i8* %add.ptr.fill_inbuf.Clone269, i32 %sub.fill_inbuf.Clone268)
  store i32 %call1.fill_inbuf.Clone270, i32* %len.fill_inbuf.Clone265, align 4
  %294 = load i32, i32* %len.fill_inbuf.Clone265, align 4
  %cmp.fill_inbuf.Clone271 = icmp eq i32 %294, 0
  br i1 %cmp.fill_inbuf.Clone271, label %if.then.fill_inbuf.Clone274, label %lor.lhs.false.fill_inbuf.Clone272

lor.lhs.false.fill_inbuf.Clone272:                ; preds = %do.body.fill_inbuf.Clone267
  %295 = load i32, i32* %len.fill_inbuf.Clone265, align 4
  %cmp2.fill_inbuf.Clone273 = icmp eq i32 %295, -1
  br i1 %cmp2.fill_inbuf.Clone273, label %if.then.fill_inbuf.Clone274, label %if.end.fill_inbuf.Clone275

if.then.fill_inbuf.Clone274:                      ; preds = %lor.lhs.false.fill_inbuf.Clone272, %do.body.fill_inbuf.Clone267
  br label %do.end.fill_inbuf.Clone279

if.end.fill_inbuf.Clone275:                       ; preds = %lor.lhs.false.fill_inbuf.Clone272
  %296 = load i32, i32* %len.fill_inbuf.Clone265, align 4
  %297 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone276 = add i32 %297, %296
  store i32 %add.fill_inbuf.Clone276, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone277

do.cond.fill_inbuf.Clone277:                      ; preds = %if.end.fill_inbuf.Clone275
  %298 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone278 = icmp ult i32 %298, 32768
  br i1 %cmp3.fill_inbuf.Clone278, label %do.body.fill_inbuf.Clone267, label %do.end.fill_inbuf.Clone279

do.end.fill_inbuf.Clone279:                       ; preds = %do.cond.fill_inbuf.Clone277, %if.then.fill_inbuf.Clone274
  %299 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone280 = icmp eq i32 %299, 0
  br i1 %cmp4.fill_inbuf.Clone280, label %if.then5.fill_inbuf.Clone281, label %if.end8.fill_inbuf.Clone285

if.then5.fill_inbuf.Clone281:                     ; preds = %do.end.fill_inbuf.Clone279
  %300 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone264, align 4
  %tobool.fill_inbuf.Clone282 = icmp ne i32 %300, 0
  br i1 %tobool.fill_inbuf.Clone282, label %if.then6.fill_inbuf.Clone283, label %if.end7.fill_inbuf.Clone284

if.then6.fill_inbuf.Clone283:                     ; preds = %if.then5.fill_inbuf.Clone281
  store i32 -1, i32* %retval.fill_inbuf.Clone263, align 4
  br label %return.fill_inbuf.Clone288

if.end7.fill_inbuf.Clone284:                      ; preds = %if.then5.fill_inbuf.Clone281
  br label %entry.read_error.Clone648

entry.read_error.Clone648:                        ; preds = %if.end7.fill_inbuf.Clone284
  %301 = load i8*, i8** @progname, align 4
  %call.read_error.Clone649 = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone650 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone649, i32 2
  %call1.read_error.Clone651 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone650, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %301)
  %call2.read_error.Clone652 = call i32* @_errno()
  %302 = load i32, i32* %call2.read_error.Clone652, align 4
  %cmp.read_error.Clone653 = icmp ne i32 %302, 0
  br i1 %cmp.read_error.Clone653, label %if.then.read_error.Clone654, label %if.else.read_error.Clone655

if.then.read_error.Clone654:                      ; preds = %entry.read_error.Clone648
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone659

if.else.read_error.Clone655:                      ; preds = %entry.read_error.Clone648
  %call3.read_error.Clone656 = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone657 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone656, i32 2
  %call5.read_error.Clone658 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone657, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone659

if.end.read_error.Clone659:                       ; preds = %if.else.read_error.Clone655, %if.then.read_error.Clone654
  br label %entry.abort_gzip.Clone834

entry.abort_gzip.Clone834:                        ; preds = %if.end.read_error.Clone659
  %303 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone835 = icmp ne i32 %303, 0
  br i1 %tobool.abort_gzip.Clone835, label %if.then.abort_gzip.Clone836, label %if.end.abort_gzip.Clone839

if.then.abort_gzip.Clone836:                      ; preds = %entry.abort_gzip.Clone834
  %304 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone837 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %304)
  %call1.abort_gzip.Clone838 = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone839

if.end.abort_gzip.Clone839:                       ; preds = %if.then.abort_gzip.Clone836, %entry.abort_gzip.Clone834
  br label %entry.do_exit.Clone1010

entry.do_exit.Clone1010:                          ; preds = %if.end.abort_gzip.Clone839
  %exitcode.addr.do_exit.Clone1011 = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone1011, align 4
  %305 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone1012 = icmp ne i32 %305, 0
  br i1 %tobool.do_exit.Clone1012, label %if.then.do_exit.Clone1013, label %if.end.do_exit.Clone1014

if.then.do_exit.Clone1013:                        ; preds = %entry.do_exit.Clone1010
  %306 = load i32, i32* %exitcode.addr.do_exit.Clone1011, align 4
  call void @exit(i32 %306) #7
  unreachable

if.end.do_exit.Clone1014:                         ; preds = %entry.do_exit.Clone1010
  store i32 1, i32* @do_exit.in_exit, align 4
  %307 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone1015 = icmp ne i8* %307, null
  br i1 %cmp.do_exit.Clone1015, label %if.then1.do_exit.Clone1016, label %if.end2.do_exit.Clone1017

if.then1.do_exit.Clone1016:                       ; preds = %if.end.do_exit.Clone1014
  %308 = load i8*, i8** @env, align 4
  call void @free(i8* %308) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone1017

if.end2.do_exit.Clone1017:                        ; preds = %if.then1.do_exit.Clone1016, %if.end.do_exit.Clone1014
  %309 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone1018 = icmp ne i8** %309, null
  br i1 %cmp3.do_exit.Clone1018, label %if.then4.do_exit.Clone1019, label %if.end5.do_exit.Clone1020

if.then4.do_exit.Clone1019:                       ; preds = %if.end2.do_exit.Clone1017
  %310 = load i8**, i8*** @args, align 4
  %311 = bitcast i8** %310 to i8*
  call void @free(i8* %311) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone1020

if.end5.do_exit.Clone1020:                        ; preds = %if.then4.do_exit.Clone1019, %if.end2.do_exit.Clone1017
  %312 = load i32, i32* %exitcode.addr.do_exit.Clone1011, align 4
  call void @exit(i32 %312) #7
  unreachable

return.do_exit.Clone1021:                         ; No predecessors!
  br label %if.end.abort_gzip.Clone839.Split

if.end.abort_gzip.Clone839.Split:                 ; preds = %return.do_exit.Clone1021
  br label %if.end.read_error.Clone659.Split

if.end.read_error.Clone659.Split:                 ; preds = %if.end.abort_gzip.Clone839.Split
  br label %if.end7.fill_inbuf.Clone284.Split

if.end7.fill_inbuf.Clone284.Split:                ; preds = %if.end.read_error.Clone659.Split
  br label %if.end8.fill_inbuf.Clone285

if.end8.fill_inbuf.Clone285:                      ; preds = %if.end7.fill_inbuf.Clone284.Split, %do.end.fill_inbuf.Clone279
  %313 = load i32, i32* @insize, align 4
  %314 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone286 = add i32 %314, %313
  store i32 %add9.fill_inbuf.Clone286, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %315 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone287 = zext i8 %315 to i32
  store i32 %conv.fill_inbuf.Clone287, i32* %retval.fill_inbuf.Clone263, align 4
  br label %return.fill_inbuf.Clone288

return.fill_inbuf.Clone288:                       ; preds = %if.end8.fill_inbuf.Clone285, %if.then6.fill_inbuf.Clone283
  %316 = load i32, i32* %retval.fill_inbuf.Clone263, align 4
  store i32 %316, i32* %RetValuePtr289
  br label %cond.false150.Split

cond.false150.Split:                              ; preds = %return.fill_inbuf.Clone288
  %RetValue290 = load i32, i32* %RetValuePtr289
  br label %cond.end152

cond.end152:                                      ; preds = %cond.false150.Split, %cond.true146
  %cond153 = phi i32 [ %conv149, %cond.true146 ], [ %RetValue290, %cond.false150.Split ]
  %shl154 = shl i32 %cond153, 24
  %317 = load i32, i32* %stamp, align 4
  %or155 = or i32 %317, %shl154
  store i32 %or155, i32* %stamp, align 4
  %318 = load i32, i32* %stamp, align 4
  %cmp156 = icmp ne i32 %318, 0
  br i1 %cmp156, label %land.lhs.true158, label %if.end161

land.lhs.true158:                                 ; preds = %cond.end152
  %319 = load i32, i32* @no_time, align 4
  %tobool159 = icmp ne i32 %319, 0
  br i1 %tobool159, label %if.end161, label %if.then160

if.then160:                                       ; preds = %land.lhs.true158
  %320 = load i32, i32* %stamp, align 4
  store i32 %320, i32* @time_stamp, align 4
  br label %if.end161

if.end161:                                        ; preds = %if.then160, %land.lhs.true158, %cond.end152
  %321 = load i32, i32* @inptr, align 4
  %322 = load i32, i32* @insize, align 4
  %cmp162 = icmp ult i32 %321, %322
  br i1 %cmp162, label %cond.true164, label %cond.false168

cond.true164:                                     ; preds = %if.end161
  %323 = load i32, i32* @inptr, align 4
  %inc165 = add i32 %323, 1
  store i32 %inc165, i32* @inptr, align 4
  %arrayidx166 = getelementptr inbounds [32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 %323
  %324 = load i8, i8* %arrayidx166, align 1
  %conv167 = zext i8 %324 to i32
  br label %cond.end170

cond.false168:                                    ; preds = %if.end161
  br label %entry.fill_inbuf.Clone233

entry.fill_inbuf.Clone233:                        ; preds = %cond.false168
  %retval.fill_inbuf.Clone234 = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone235 = alloca i32, align 4
  %len.fill_inbuf.Clone236 = alloca i32, align 4
  store i32 0, i32* %eof_ok.addr.fill_inbuf.Clone235, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone237 = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone237, align 4
  br label %do.body.fill_inbuf.Clone238

do.body.fill_inbuf.Clone238:                      ; preds = %do.cond.fill_inbuf.Clone248, %entry.fill_inbuf.Clone233
  %325 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone239 = sub i32 32768, %325
  %326 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone240 = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %326
  %327 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone241 = call i32 @spec_read(i32 %327, i8* %add.ptr.fill_inbuf.Clone240, i32 %sub.fill_inbuf.Clone239)
  store i32 %call1.fill_inbuf.Clone241, i32* %len.fill_inbuf.Clone236, align 4
  %328 = load i32, i32* %len.fill_inbuf.Clone236, align 4
  %cmp.fill_inbuf.Clone242 = icmp eq i32 %328, 0
  br i1 %cmp.fill_inbuf.Clone242, label %if.then.fill_inbuf.Clone245, label %lor.lhs.false.fill_inbuf.Clone243

lor.lhs.false.fill_inbuf.Clone243:                ; preds = %do.body.fill_inbuf.Clone238
  %329 = load i32, i32* %len.fill_inbuf.Clone236, align 4
  %cmp2.fill_inbuf.Clone244 = icmp eq i32 %329, -1
  br i1 %cmp2.fill_inbuf.Clone244, label %if.then.fill_inbuf.Clone245, label %if.end.fill_inbuf.Clone246

if.then.fill_inbuf.Clone245:                      ; preds = %lor.lhs.false.fill_inbuf.Clone243, %do.body.fill_inbuf.Clone238
  br label %do.end.fill_inbuf.Clone250

if.end.fill_inbuf.Clone246:                       ; preds = %lor.lhs.false.fill_inbuf.Clone243
  %330 = load i32, i32* %len.fill_inbuf.Clone236, align 4
  %331 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone247 = add i32 %331, %330
  store i32 %add.fill_inbuf.Clone247, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone248

do.cond.fill_inbuf.Clone248:                      ; preds = %if.end.fill_inbuf.Clone246
  %332 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone249 = icmp ult i32 %332, 32768
  br i1 %cmp3.fill_inbuf.Clone249, label %do.body.fill_inbuf.Clone238, label %do.end.fill_inbuf.Clone250

do.end.fill_inbuf.Clone250:                       ; preds = %do.cond.fill_inbuf.Clone248, %if.then.fill_inbuf.Clone245
  %333 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone251 = icmp eq i32 %333, 0
  br i1 %cmp4.fill_inbuf.Clone251, label %if.then5.fill_inbuf.Clone252, label %if.end8.fill_inbuf.Clone256

if.then5.fill_inbuf.Clone252:                     ; preds = %do.end.fill_inbuf.Clone250
  %334 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone235, align 4
  %tobool.fill_inbuf.Clone253 = icmp ne i32 %334, 0
  br i1 %tobool.fill_inbuf.Clone253, label %if.then6.fill_inbuf.Clone254, label %if.end7.fill_inbuf.Clone255

if.then6.fill_inbuf.Clone254:                     ; preds = %if.then5.fill_inbuf.Clone252
  store i32 -1, i32* %retval.fill_inbuf.Clone234, align 4
  br label %return.fill_inbuf.Clone259

if.end7.fill_inbuf.Clone255:                      ; preds = %if.then5.fill_inbuf.Clone252
  br label %entry.read_error.Clone660

entry.read_error.Clone660:                        ; preds = %if.end7.fill_inbuf.Clone255
  %335 = load i8*, i8** @progname, align 4
  %call.read_error.Clone661 = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone662 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone661, i32 2
  %call1.read_error.Clone663 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone662, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %335)
  %call2.read_error.Clone664 = call i32* @_errno()
  %336 = load i32, i32* %call2.read_error.Clone664, align 4
  %cmp.read_error.Clone665 = icmp ne i32 %336, 0
  br i1 %cmp.read_error.Clone665, label %if.then.read_error.Clone666, label %if.else.read_error.Clone667

if.then.read_error.Clone666:                      ; preds = %entry.read_error.Clone660
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone671

if.else.read_error.Clone667:                      ; preds = %entry.read_error.Clone660
  %call3.read_error.Clone668 = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone669 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone668, i32 2
  %call5.read_error.Clone670 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone669, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone671

if.end.read_error.Clone671:                       ; preds = %if.else.read_error.Clone667, %if.then.read_error.Clone666
  br label %entry.abort_gzip.Clone828

entry.abort_gzip.Clone828:                        ; preds = %if.end.read_error.Clone671
  %337 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone829 = icmp ne i32 %337, 0
  br i1 %tobool.abort_gzip.Clone829, label %if.then.abort_gzip.Clone830, label %if.end.abort_gzip.Clone833

if.then.abort_gzip.Clone830:                      ; preds = %entry.abort_gzip.Clone828
  %338 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone831 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %338)
  %call1.abort_gzip.Clone832 = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone833

if.end.abort_gzip.Clone833:                       ; preds = %if.then.abort_gzip.Clone830, %entry.abort_gzip.Clone828
  br label %entry.do_exit.Clone1022

entry.do_exit.Clone1022:                          ; preds = %if.end.abort_gzip.Clone833
  %exitcode.addr.do_exit.Clone1023 = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone1023, align 4
  %339 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone1024 = icmp ne i32 %339, 0
  br i1 %tobool.do_exit.Clone1024, label %if.then.do_exit.Clone1025, label %if.end.do_exit.Clone1026

if.then.do_exit.Clone1025:                        ; preds = %entry.do_exit.Clone1022
  %340 = load i32, i32* %exitcode.addr.do_exit.Clone1023, align 4
  call void @exit(i32 %340) #7
  unreachable

if.end.do_exit.Clone1026:                         ; preds = %entry.do_exit.Clone1022
  store i32 1, i32* @do_exit.in_exit, align 4
  %341 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone1027 = icmp ne i8* %341, null
  br i1 %cmp.do_exit.Clone1027, label %if.then1.do_exit.Clone1028, label %if.end2.do_exit.Clone1029

if.then1.do_exit.Clone1028:                       ; preds = %if.end.do_exit.Clone1026
  %342 = load i8*, i8** @env, align 4
  call void @free(i8* %342) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone1029

if.end2.do_exit.Clone1029:                        ; preds = %if.then1.do_exit.Clone1028, %if.end.do_exit.Clone1026
  %343 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone1030 = icmp ne i8** %343, null
  br i1 %cmp3.do_exit.Clone1030, label %if.then4.do_exit.Clone1031, label %if.end5.do_exit.Clone1032

if.then4.do_exit.Clone1031:                       ; preds = %if.end2.do_exit.Clone1029
  %344 = load i8**, i8*** @args, align 4
  %345 = bitcast i8** %344 to i8*
  call void @free(i8* %345) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone1032

if.end5.do_exit.Clone1032:                        ; preds = %if.then4.do_exit.Clone1031, %if.end2.do_exit.Clone1029
  %346 = load i32, i32* %exitcode.addr.do_exit.Clone1023, align 4
  call void @exit(i32 %346) #7
  unreachable

return.do_exit.Clone1033:                         ; No predecessors!
  br label %if.end.abort_gzip.Clone833.Split

if.end.abort_gzip.Clone833.Split:                 ; preds = %return.do_exit.Clone1033
  br label %if.end.read_error.Clone671.Split

if.end.read_error.Clone671.Split:                 ; preds = %if.end.abort_gzip.Clone833.Split
  br label %if.end7.fill_inbuf.Clone255.Split

if.end7.fill_inbuf.Clone255.Split:                ; preds = %if.end.read_error.Clone671.Split
  br label %if.end8.fill_inbuf.Clone256

if.end8.fill_inbuf.Clone256:                      ; preds = %if.end7.fill_inbuf.Clone255.Split, %do.end.fill_inbuf.Clone250
  %347 = load i32, i32* @insize, align 4
  %348 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone257 = add i32 %348, %347
  store i32 %add9.fill_inbuf.Clone257, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %349 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone258 = zext i8 %349 to i32
  store i32 %conv.fill_inbuf.Clone258, i32* %retval.fill_inbuf.Clone234, align 4
  br label %return.fill_inbuf.Clone259

return.fill_inbuf.Clone259:                       ; preds = %if.end8.fill_inbuf.Clone256, %if.then6.fill_inbuf.Clone254
  %350 = load i32, i32* %retval.fill_inbuf.Clone234, align 4
  store i32 %350, i32* %RetValuePtr260
  br label %cond.false168.Split

cond.false168.Split:                              ; preds = %return.fill_inbuf.Clone259
  %RetValue261 = load i32, i32* %RetValuePtr260
  br label %cond.end170

cond.end170:                                      ; preds = %cond.false168.Split, %cond.true164
  %cond171 = phi i32 [ %conv167, %cond.true164 ], [ %RetValue261, %cond.false168.Split ]
  %351 = load i32, i32* @inptr, align 4
  %352 = load i32, i32* @insize, align 4
  %cmp172 = icmp ult i32 %351, %352
  br i1 %cmp172, label %cond.true174, label %cond.false178

cond.true174:                                     ; preds = %cond.end170
  %353 = load i32, i32* @inptr, align 4
  %inc175 = add i32 %353, 1
  store i32 %inc175, i32* @inptr, align 4
  %arrayidx176 = getelementptr inbounds [32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 %353
  %354 = load i8, i8* %arrayidx176, align 1
  %conv177 = zext i8 %354 to i32
  br label %cond.end180

cond.false178:                                    ; preds = %cond.end170
  br label %entry.fill_inbuf.Clone204

entry.fill_inbuf.Clone204:                        ; preds = %cond.false178
  %retval.fill_inbuf.Clone205 = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone206 = alloca i32, align 4
  %len.fill_inbuf.Clone207 = alloca i32, align 4
  store i32 0, i32* %eof_ok.addr.fill_inbuf.Clone206, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone208 = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone208, align 4
  br label %do.body.fill_inbuf.Clone209

do.body.fill_inbuf.Clone209:                      ; preds = %do.cond.fill_inbuf.Clone219, %entry.fill_inbuf.Clone204
  %355 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone210 = sub i32 32768, %355
  %356 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone211 = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %356
  %357 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone212 = call i32 @spec_read(i32 %357, i8* %add.ptr.fill_inbuf.Clone211, i32 %sub.fill_inbuf.Clone210)
  store i32 %call1.fill_inbuf.Clone212, i32* %len.fill_inbuf.Clone207, align 4
  %358 = load i32, i32* %len.fill_inbuf.Clone207, align 4
  %cmp.fill_inbuf.Clone213 = icmp eq i32 %358, 0
  br i1 %cmp.fill_inbuf.Clone213, label %if.then.fill_inbuf.Clone216, label %lor.lhs.false.fill_inbuf.Clone214

lor.lhs.false.fill_inbuf.Clone214:                ; preds = %do.body.fill_inbuf.Clone209
  %359 = load i32, i32* %len.fill_inbuf.Clone207, align 4
  %cmp2.fill_inbuf.Clone215 = icmp eq i32 %359, -1
  br i1 %cmp2.fill_inbuf.Clone215, label %if.then.fill_inbuf.Clone216, label %if.end.fill_inbuf.Clone217

if.then.fill_inbuf.Clone216:                      ; preds = %lor.lhs.false.fill_inbuf.Clone214, %do.body.fill_inbuf.Clone209
  br label %do.end.fill_inbuf.Clone221

if.end.fill_inbuf.Clone217:                       ; preds = %lor.lhs.false.fill_inbuf.Clone214
  %360 = load i32, i32* %len.fill_inbuf.Clone207, align 4
  %361 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone218 = add i32 %361, %360
  store i32 %add.fill_inbuf.Clone218, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone219

do.cond.fill_inbuf.Clone219:                      ; preds = %if.end.fill_inbuf.Clone217
  %362 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone220 = icmp ult i32 %362, 32768
  br i1 %cmp3.fill_inbuf.Clone220, label %do.body.fill_inbuf.Clone209, label %do.end.fill_inbuf.Clone221

do.end.fill_inbuf.Clone221:                       ; preds = %do.cond.fill_inbuf.Clone219, %if.then.fill_inbuf.Clone216
  %363 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone222 = icmp eq i32 %363, 0
  br i1 %cmp4.fill_inbuf.Clone222, label %if.then5.fill_inbuf.Clone223, label %if.end8.fill_inbuf.Clone227

if.then5.fill_inbuf.Clone223:                     ; preds = %do.end.fill_inbuf.Clone221
  %364 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone206, align 4
  %tobool.fill_inbuf.Clone224 = icmp ne i32 %364, 0
  br i1 %tobool.fill_inbuf.Clone224, label %if.then6.fill_inbuf.Clone225, label %if.end7.fill_inbuf.Clone226

if.then6.fill_inbuf.Clone225:                     ; preds = %if.then5.fill_inbuf.Clone223
  store i32 -1, i32* %retval.fill_inbuf.Clone205, align 4
  br label %return.fill_inbuf.Clone230

if.end7.fill_inbuf.Clone226:                      ; preds = %if.then5.fill_inbuf.Clone223
  br label %entry.read_error.Clone672

entry.read_error.Clone672:                        ; preds = %if.end7.fill_inbuf.Clone226
  %365 = load i8*, i8** @progname, align 4
  %call.read_error.Clone673 = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone674 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone673, i32 2
  %call1.read_error.Clone675 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone674, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %365)
  %call2.read_error.Clone676 = call i32* @_errno()
  %366 = load i32, i32* %call2.read_error.Clone676, align 4
  %cmp.read_error.Clone677 = icmp ne i32 %366, 0
  br i1 %cmp.read_error.Clone677, label %if.then.read_error.Clone678, label %if.else.read_error.Clone679

if.then.read_error.Clone678:                      ; preds = %entry.read_error.Clone672
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone683

if.else.read_error.Clone679:                      ; preds = %entry.read_error.Clone672
  %call3.read_error.Clone680 = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone681 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone680, i32 2
  %call5.read_error.Clone682 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone681, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone683

if.end.read_error.Clone683:                       ; preds = %if.else.read_error.Clone679, %if.then.read_error.Clone678
  br label %entry.abort_gzip.Clone822

entry.abort_gzip.Clone822:                        ; preds = %if.end.read_error.Clone683
  %367 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone823 = icmp ne i32 %367, 0
  br i1 %tobool.abort_gzip.Clone823, label %if.then.abort_gzip.Clone824, label %if.end.abort_gzip.Clone827

if.then.abort_gzip.Clone824:                      ; preds = %entry.abort_gzip.Clone822
  %368 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone825 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %368)
  %call1.abort_gzip.Clone826 = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone827

if.end.abort_gzip.Clone827:                       ; preds = %if.then.abort_gzip.Clone824, %entry.abort_gzip.Clone822
  br label %entry.do_exit.Clone1034

entry.do_exit.Clone1034:                          ; preds = %if.end.abort_gzip.Clone827
  %exitcode.addr.do_exit.Clone1035 = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone1035, align 4
  %369 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone1036 = icmp ne i32 %369, 0
  br i1 %tobool.do_exit.Clone1036, label %if.then.do_exit.Clone1037, label %if.end.do_exit.Clone1038

if.then.do_exit.Clone1037:                        ; preds = %entry.do_exit.Clone1034
  %370 = load i32, i32* %exitcode.addr.do_exit.Clone1035, align 4
  call void @exit(i32 %370) #7
  unreachable

if.end.do_exit.Clone1038:                         ; preds = %entry.do_exit.Clone1034
  store i32 1, i32* @do_exit.in_exit, align 4
  %371 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone1039 = icmp ne i8* %371, null
  br i1 %cmp.do_exit.Clone1039, label %if.then1.do_exit.Clone1040, label %if.end2.do_exit.Clone1041

if.then1.do_exit.Clone1040:                       ; preds = %if.end.do_exit.Clone1038
  %372 = load i8*, i8** @env, align 4
  call void @free(i8* %372) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone1041

if.end2.do_exit.Clone1041:                        ; preds = %if.then1.do_exit.Clone1040, %if.end.do_exit.Clone1038
  %373 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone1042 = icmp ne i8** %373, null
  br i1 %cmp3.do_exit.Clone1042, label %if.then4.do_exit.Clone1043, label %if.end5.do_exit.Clone1044

if.then4.do_exit.Clone1043:                       ; preds = %if.end2.do_exit.Clone1041
  %374 = load i8**, i8*** @args, align 4
  %375 = bitcast i8** %374 to i8*
  call void @free(i8* %375) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone1044

if.end5.do_exit.Clone1044:                        ; preds = %if.then4.do_exit.Clone1043, %if.end2.do_exit.Clone1041
  %376 = load i32, i32* %exitcode.addr.do_exit.Clone1035, align 4
  call void @exit(i32 %376) #7
  unreachable

return.do_exit.Clone1045:                         ; No predecessors!
  br label %if.end.abort_gzip.Clone827.Split

if.end.abort_gzip.Clone827.Split:                 ; preds = %return.do_exit.Clone1045
  br label %if.end.read_error.Clone683.Split

if.end.read_error.Clone683.Split:                 ; preds = %if.end.abort_gzip.Clone827.Split
  br label %if.end7.fill_inbuf.Clone226.Split

if.end7.fill_inbuf.Clone226.Split:                ; preds = %if.end.read_error.Clone683.Split
  br label %if.end8.fill_inbuf.Clone227

if.end8.fill_inbuf.Clone227:                      ; preds = %if.end7.fill_inbuf.Clone226.Split, %do.end.fill_inbuf.Clone221
  %377 = load i32, i32* @insize, align 4
  %378 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone228 = add i32 %378, %377
  store i32 %add9.fill_inbuf.Clone228, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %379 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone229 = zext i8 %379 to i32
  store i32 %conv.fill_inbuf.Clone229, i32* %retval.fill_inbuf.Clone205, align 4
  br label %return.fill_inbuf.Clone230

return.fill_inbuf.Clone230:                       ; preds = %if.end8.fill_inbuf.Clone227, %if.then6.fill_inbuf.Clone225
  %380 = load i32, i32* %retval.fill_inbuf.Clone205, align 4
  store i32 %380, i32* %RetValuePtr231
  br label %cond.false178.Split

cond.false178.Split:                              ; preds = %return.fill_inbuf.Clone230
  %RetValue232 = load i32, i32* %RetValuePtr231
  br label %cond.end180

cond.end180:                                      ; preds = %cond.false178.Split, %cond.true174
  %cond181 = phi i32 [ %conv177, %cond.true174 ], [ %RetValue232, %cond.false178.Split ]
  %381 = load i8, i8* %flags, align 1
  %conv182 = zext i8 %381 to i32
  %and183 = and i32 %conv182, 2
  %cmp184 = icmp ne i32 %and183, 0
  br i1 %cmp184, label %if.then186, label %if.end215

if.then186:                                       ; preds = %cond.end180
  %382 = load i32, i32* @inptr, align 4
  %383 = load i32, i32* @insize, align 4
  %cmp187 = icmp ult i32 %382, %383
  br i1 %cmp187, label %cond.true189, label %cond.false193

cond.true189:                                     ; preds = %if.then186
  %384 = load i32, i32* @inptr, align 4
  %inc190 = add i32 %384, 1
  store i32 %inc190, i32* @inptr, align 4
  %arrayidx191 = getelementptr inbounds [32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 %384
  %385 = load i8, i8* %arrayidx191, align 1
  %conv192 = zext i8 %385 to i32
  br label %cond.end195

cond.false193:                                    ; preds = %if.then186
  br label %entry.fill_inbuf.Clone175

entry.fill_inbuf.Clone175:                        ; preds = %cond.false193
  %retval.fill_inbuf.Clone176 = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone177 = alloca i32, align 4
  %len.fill_inbuf.Clone178 = alloca i32, align 4
  store i32 0, i32* %eof_ok.addr.fill_inbuf.Clone177, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone179 = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone179, align 4
  br label %do.body.fill_inbuf.Clone180

do.body.fill_inbuf.Clone180:                      ; preds = %do.cond.fill_inbuf.Clone190, %entry.fill_inbuf.Clone175
  %386 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone181 = sub i32 32768, %386
  %387 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone182 = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %387
  %388 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone183 = call i32 @spec_read(i32 %388, i8* %add.ptr.fill_inbuf.Clone182, i32 %sub.fill_inbuf.Clone181)
  store i32 %call1.fill_inbuf.Clone183, i32* %len.fill_inbuf.Clone178, align 4
  %389 = load i32, i32* %len.fill_inbuf.Clone178, align 4
  %cmp.fill_inbuf.Clone184 = icmp eq i32 %389, 0
  br i1 %cmp.fill_inbuf.Clone184, label %if.then.fill_inbuf.Clone187, label %lor.lhs.false.fill_inbuf.Clone185

lor.lhs.false.fill_inbuf.Clone185:                ; preds = %do.body.fill_inbuf.Clone180
  %390 = load i32, i32* %len.fill_inbuf.Clone178, align 4
  %cmp2.fill_inbuf.Clone186 = icmp eq i32 %390, -1
  br i1 %cmp2.fill_inbuf.Clone186, label %if.then.fill_inbuf.Clone187, label %if.end.fill_inbuf.Clone188

if.then.fill_inbuf.Clone187:                      ; preds = %lor.lhs.false.fill_inbuf.Clone185, %do.body.fill_inbuf.Clone180
  br label %do.end.fill_inbuf.Clone192

if.end.fill_inbuf.Clone188:                       ; preds = %lor.lhs.false.fill_inbuf.Clone185
  %391 = load i32, i32* %len.fill_inbuf.Clone178, align 4
  %392 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone189 = add i32 %392, %391
  store i32 %add.fill_inbuf.Clone189, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone190

do.cond.fill_inbuf.Clone190:                      ; preds = %if.end.fill_inbuf.Clone188
  %393 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone191 = icmp ult i32 %393, 32768
  br i1 %cmp3.fill_inbuf.Clone191, label %do.body.fill_inbuf.Clone180, label %do.end.fill_inbuf.Clone192

do.end.fill_inbuf.Clone192:                       ; preds = %do.cond.fill_inbuf.Clone190, %if.then.fill_inbuf.Clone187
  %394 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone193 = icmp eq i32 %394, 0
  br i1 %cmp4.fill_inbuf.Clone193, label %if.then5.fill_inbuf.Clone194, label %if.end8.fill_inbuf.Clone198

if.then5.fill_inbuf.Clone194:                     ; preds = %do.end.fill_inbuf.Clone192
  %395 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone177, align 4
  %tobool.fill_inbuf.Clone195 = icmp ne i32 %395, 0
  br i1 %tobool.fill_inbuf.Clone195, label %if.then6.fill_inbuf.Clone196, label %if.end7.fill_inbuf.Clone197

if.then6.fill_inbuf.Clone196:                     ; preds = %if.then5.fill_inbuf.Clone194
  store i32 -1, i32* %retval.fill_inbuf.Clone176, align 4
  br label %return.fill_inbuf.Clone201

if.end7.fill_inbuf.Clone197:                      ; preds = %if.then5.fill_inbuf.Clone194
  br label %entry.read_error.Clone684

entry.read_error.Clone684:                        ; preds = %if.end7.fill_inbuf.Clone197
  %396 = load i8*, i8** @progname, align 4
  %call.read_error.Clone685 = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone686 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone685, i32 2
  %call1.read_error.Clone687 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone686, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %396)
  %call2.read_error.Clone688 = call i32* @_errno()
  %397 = load i32, i32* %call2.read_error.Clone688, align 4
  %cmp.read_error.Clone689 = icmp ne i32 %397, 0
  br i1 %cmp.read_error.Clone689, label %if.then.read_error.Clone690, label %if.else.read_error.Clone691

if.then.read_error.Clone690:                      ; preds = %entry.read_error.Clone684
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone695

if.else.read_error.Clone691:                      ; preds = %entry.read_error.Clone684
  %call3.read_error.Clone692 = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone693 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone692, i32 2
  %call5.read_error.Clone694 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone693, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone695

if.end.read_error.Clone695:                       ; preds = %if.else.read_error.Clone691, %if.then.read_error.Clone690
  br label %entry.abort_gzip.Clone816

entry.abort_gzip.Clone816:                        ; preds = %if.end.read_error.Clone695
  %398 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone817 = icmp ne i32 %398, 0
  br i1 %tobool.abort_gzip.Clone817, label %if.then.abort_gzip.Clone818, label %if.end.abort_gzip.Clone821

if.then.abort_gzip.Clone818:                      ; preds = %entry.abort_gzip.Clone816
  %399 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone819 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %399)
  %call1.abort_gzip.Clone820 = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone821

if.end.abort_gzip.Clone821:                       ; preds = %if.then.abort_gzip.Clone818, %entry.abort_gzip.Clone816
  br label %entry.do_exit.Clone1046

entry.do_exit.Clone1046:                          ; preds = %if.end.abort_gzip.Clone821
  %exitcode.addr.do_exit.Clone1047 = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone1047, align 4
  %400 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone1048 = icmp ne i32 %400, 0
  br i1 %tobool.do_exit.Clone1048, label %if.then.do_exit.Clone1049, label %if.end.do_exit.Clone1050

if.then.do_exit.Clone1049:                        ; preds = %entry.do_exit.Clone1046
  %401 = load i32, i32* %exitcode.addr.do_exit.Clone1047, align 4
  call void @exit(i32 %401) #7
  unreachable

if.end.do_exit.Clone1050:                         ; preds = %entry.do_exit.Clone1046
  store i32 1, i32* @do_exit.in_exit, align 4
  %402 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone1051 = icmp ne i8* %402, null
  br i1 %cmp.do_exit.Clone1051, label %if.then1.do_exit.Clone1052, label %if.end2.do_exit.Clone1053

if.then1.do_exit.Clone1052:                       ; preds = %if.end.do_exit.Clone1050
  %403 = load i8*, i8** @env, align 4
  call void @free(i8* %403) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone1053

if.end2.do_exit.Clone1053:                        ; preds = %if.then1.do_exit.Clone1052, %if.end.do_exit.Clone1050
  %404 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone1054 = icmp ne i8** %404, null
  br i1 %cmp3.do_exit.Clone1054, label %if.then4.do_exit.Clone1055, label %if.end5.do_exit.Clone1056

if.then4.do_exit.Clone1055:                       ; preds = %if.end2.do_exit.Clone1053
  %405 = load i8**, i8*** @args, align 4
  %406 = bitcast i8** %405 to i8*
  call void @free(i8* %406) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone1056

if.end5.do_exit.Clone1056:                        ; preds = %if.then4.do_exit.Clone1055, %if.end2.do_exit.Clone1053
  %407 = load i32, i32* %exitcode.addr.do_exit.Clone1047, align 4
  call void @exit(i32 %407) #7
  unreachable

return.do_exit.Clone1057:                         ; No predecessors!
  br label %if.end.abort_gzip.Clone821.Split

if.end.abort_gzip.Clone821.Split:                 ; preds = %return.do_exit.Clone1057
  br label %if.end.read_error.Clone695.Split

if.end.read_error.Clone695.Split:                 ; preds = %if.end.abort_gzip.Clone821.Split
  br label %if.end7.fill_inbuf.Clone197.Split

if.end7.fill_inbuf.Clone197.Split:                ; preds = %if.end.read_error.Clone695.Split
  br label %if.end8.fill_inbuf.Clone198

if.end8.fill_inbuf.Clone198:                      ; preds = %if.end7.fill_inbuf.Clone197.Split, %do.end.fill_inbuf.Clone192
  %408 = load i32, i32* @insize, align 4
  %409 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone199 = add i32 %409, %408
  store i32 %add9.fill_inbuf.Clone199, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %410 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone200 = zext i8 %410 to i32
  store i32 %conv.fill_inbuf.Clone200, i32* %retval.fill_inbuf.Clone176, align 4
  br label %return.fill_inbuf.Clone201

return.fill_inbuf.Clone201:                       ; preds = %if.end8.fill_inbuf.Clone198, %if.then6.fill_inbuf.Clone196
  %411 = load i32, i32* %retval.fill_inbuf.Clone176, align 4
  store i32 %411, i32* %RetValuePtr202
  br label %cond.false193.Split

cond.false193.Split:                              ; preds = %return.fill_inbuf.Clone201
  %RetValue203 = load i32, i32* %RetValuePtr202
  br label %cond.end195

cond.end195:                                      ; preds = %cond.false193.Split, %cond.true189
  %cond196 = phi i32 [ %conv192, %cond.true189 ], [ %RetValue203, %cond.false193.Split ]
  store i32 %cond196, i32* %part, align 4
  %412 = load i32, i32* @inptr, align 4
  %413 = load i32, i32* @insize, align 4
  %cmp197 = icmp ult i32 %412, %413
  br i1 %cmp197, label %cond.true199, label %cond.false203

cond.true199:                                     ; preds = %cond.end195
  %414 = load i32, i32* @inptr, align 4
  %inc200 = add i32 %414, 1
  store i32 %inc200, i32* @inptr, align 4
  %arrayidx201 = getelementptr inbounds [32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 %414
  %415 = load i8, i8* %arrayidx201, align 1
  %conv202 = zext i8 %415 to i32
  br label %cond.end205

cond.false203:                                    ; preds = %cond.end195
  br label %entry.fill_inbuf.Clone146

entry.fill_inbuf.Clone146:                        ; preds = %cond.false203
  %retval.fill_inbuf.Clone147 = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone148 = alloca i32, align 4
  %len.fill_inbuf.Clone149 = alloca i32, align 4
  store i32 0, i32* %eof_ok.addr.fill_inbuf.Clone148, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone150 = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone150, align 4
  br label %do.body.fill_inbuf.Clone151

do.body.fill_inbuf.Clone151:                      ; preds = %do.cond.fill_inbuf.Clone161, %entry.fill_inbuf.Clone146
  %416 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone152 = sub i32 32768, %416
  %417 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone153 = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %417
  %418 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone154 = call i32 @spec_read(i32 %418, i8* %add.ptr.fill_inbuf.Clone153, i32 %sub.fill_inbuf.Clone152)
  store i32 %call1.fill_inbuf.Clone154, i32* %len.fill_inbuf.Clone149, align 4
  %419 = load i32, i32* %len.fill_inbuf.Clone149, align 4
  %cmp.fill_inbuf.Clone155 = icmp eq i32 %419, 0
  br i1 %cmp.fill_inbuf.Clone155, label %if.then.fill_inbuf.Clone158, label %lor.lhs.false.fill_inbuf.Clone156

lor.lhs.false.fill_inbuf.Clone156:                ; preds = %do.body.fill_inbuf.Clone151
  %420 = load i32, i32* %len.fill_inbuf.Clone149, align 4
  %cmp2.fill_inbuf.Clone157 = icmp eq i32 %420, -1
  br i1 %cmp2.fill_inbuf.Clone157, label %if.then.fill_inbuf.Clone158, label %if.end.fill_inbuf.Clone159

if.then.fill_inbuf.Clone158:                      ; preds = %lor.lhs.false.fill_inbuf.Clone156, %do.body.fill_inbuf.Clone151
  br label %do.end.fill_inbuf.Clone163

if.end.fill_inbuf.Clone159:                       ; preds = %lor.lhs.false.fill_inbuf.Clone156
  %421 = load i32, i32* %len.fill_inbuf.Clone149, align 4
  %422 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone160 = add i32 %422, %421
  store i32 %add.fill_inbuf.Clone160, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone161

do.cond.fill_inbuf.Clone161:                      ; preds = %if.end.fill_inbuf.Clone159
  %423 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone162 = icmp ult i32 %423, 32768
  br i1 %cmp3.fill_inbuf.Clone162, label %do.body.fill_inbuf.Clone151, label %do.end.fill_inbuf.Clone163

do.end.fill_inbuf.Clone163:                       ; preds = %do.cond.fill_inbuf.Clone161, %if.then.fill_inbuf.Clone158
  %424 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone164 = icmp eq i32 %424, 0
  br i1 %cmp4.fill_inbuf.Clone164, label %if.then5.fill_inbuf.Clone165, label %if.end8.fill_inbuf.Clone169

if.then5.fill_inbuf.Clone165:                     ; preds = %do.end.fill_inbuf.Clone163
  %425 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone148, align 4
  %tobool.fill_inbuf.Clone166 = icmp ne i32 %425, 0
  br i1 %tobool.fill_inbuf.Clone166, label %if.then6.fill_inbuf.Clone167, label %if.end7.fill_inbuf.Clone168

if.then6.fill_inbuf.Clone167:                     ; preds = %if.then5.fill_inbuf.Clone165
  store i32 -1, i32* %retval.fill_inbuf.Clone147, align 4
  br label %return.fill_inbuf.Clone172

if.end7.fill_inbuf.Clone168:                      ; preds = %if.then5.fill_inbuf.Clone165
  br label %entry.read_error.Clone696

entry.read_error.Clone696:                        ; preds = %if.end7.fill_inbuf.Clone168
  %426 = load i8*, i8** @progname, align 4
  %call.read_error.Clone697 = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone698 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone697, i32 2
  %call1.read_error.Clone699 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone698, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %426)
  %call2.read_error.Clone700 = call i32* @_errno()
  %427 = load i32, i32* %call2.read_error.Clone700, align 4
  %cmp.read_error.Clone701 = icmp ne i32 %427, 0
  br i1 %cmp.read_error.Clone701, label %if.then.read_error.Clone702, label %if.else.read_error.Clone703

if.then.read_error.Clone702:                      ; preds = %entry.read_error.Clone696
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone707

if.else.read_error.Clone703:                      ; preds = %entry.read_error.Clone696
  %call3.read_error.Clone704 = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone705 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone704, i32 2
  %call5.read_error.Clone706 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone705, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone707

if.end.read_error.Clone707:                       ; preds = %if.else.read_error.Clone703, %if.then.read_error.Clone702
  br label %entry.abort_gzip.Clone810

entry.abort_gzip.Clone810:                        ; preds = %if.end.read_error.Clone707
  %428 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone811 = icmp ne i32 %428, 0
  br i1 %tobool.abort_gzip.Clone811, label %if.then.abort_gzip.Clone812, label %if.end.abort_gzip.Clone815

if.then.abort_gzip.Clone812:                      ; preds = %entry.abort_gzip.Clone810
  %429 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone813 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %429)
  %call1.abort_gzip.Clone814 = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone815

if.end.abort_gzip.Clone815:                       ; preds = %if.then.abort_gzip.Clone812, %entry.abort_gzip.Clone810
  br label %entry.do_exit.Clone1058

entry.do_exit.Clone1058:                          ; preds = %if.end.abort_gzip.Clone815
  %exitcode.addr.do_exit.Clone1059 = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone1059, align 4
  %430 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone1060 = icmp ne i32 %430, 0
  br i1 %tobool.do_exit.Clone1060, label %if.then.do_exit.Clone1061, label %if.end.do_exit.Clone1062

if.then.do_exit.Clone1061:                        ; preds = %entry.do_exit.Clone1058
  %431 = load i32, i32* %exitcode.addr.do_exit.Clone1059, align 4
  call void @exit(i32 %431) #7
  unreachable

if.end.do_exit.Clone1062:                         ; preds = %entry.do_exit.Clone1058
  store i32 1, i32* @do_exit.in_exit, align 4
  %432 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone1063 = icmp ne i8* %432, null
  br i1 %cmp.do_exit.Clone1063, label %if.then1.do_exit.Clone1064, label %if.end2.do_exit.Clone1065

if.then1.do_exit.Clone1064:                       ; preds = %if.end.do_exit.Clone1062
  %433 = load i8*, i8** @env, align 4
  call void @free(i8* %433) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone1065

if.end2.do_exit.Clone1065:                        ; preds = %if.then1.do_exit.Clone1064, %if.end.do_exit.Clone1062
  %434 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone1066 = icmp ne i8** %434, null
  br i1 %cmp3.do_exit.Clone1066, label %if.then4.do_exit.Clone1067, label %if.end5.do_exit.Clone1068

if.then4.do_exit.Clone1067:                       ; preds = %if.end2.do_exit.Clone1065
  %435 = load i8**, i8*** @args, align 4
  %436 = bitcast i8** %435 to i8*
  call void @free(i8* %436) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone1068

if.end5.do_exit.Clone1068:                        ; preds = %if.then4.do_exit.Clone1067, %if.end2.do_exit.Clone1065
  %437 = load i32, i32* %exitcode.addr.do_exit.Clone1059, align 4
  call void @exit(i32 %437) #7
  unreachable

return.do_exit.Clone1069:                         ; No predecessors!
  br label %if.end.abort_gzip.Clone815.Split

if.end.abort_gzip.Clone815.Split:                 ; preds = %return.do_exit.Clone1069
  br label %if.end.read_error.Clone707.Split

if.end.read_error.Clone707.Split:                 ; preds = %if.end.abort_gzip.Clone815.Split
  br label %if.end7.fill_inbuf.Clone168.Split

if.end7.fill_inbuf.Clone168.Split:                ; preds = %if.end.read_error.Clone707.Split
  br label %if.end8.fill_inbuf.Clone169

if.end8.fill_inbuf.Clone169:                      ; preds = %if.end7.fill_inbuf.Clone168.Split, %do.end.fill_inbuf.Clone163
  %438 = load i32, i32* @insize, align 4
  %439 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone170 = add i32 %439, %438
  store i32 %add9.fill_inbuf.Clone170, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %440 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone171 = zext i8 %440 to i32
  store i32 %conv.fill_inbuf.Clone171, i32* %retval.fill_inbuf.Clone147, align 4
  br label %return.fill_inbuf.Clone172

return.fill_inbuf.Clone172:                       ; preds = %if.end8.fill_inbuf.Clone169, %if.then6.fill_inbuf.Clone167
  %441 = load i32, i32* %retval.fill_inbuf.Clone147, align 4
  store i32 %441, i32* %RetValuePtr173
  br label %cond.false203.Split

cond.false203.Split:                              ; preds = %return.fill_inbuf.Clone172
  %RetValue174 = load i32, i32* %RetValuePtr173
  br label %cond.end205

cond.end205:                                      ; preds = %cond.false203.Split, %cond.true199
  %cond206 = phi i32 [ %conv202, %cond.true199 ], [ %RetValue174, %cond.false203.Split ]
  %shl207 = shl i32 %cond206, 8
  %442 = load i32, i32* %part, align 4
  %or208 = or i32 %442, %shl207
  store i32 %or208, i32* %part, align 4
  %443 = load i32, i32* @verbose, align 4
  %tobool209 = icmp ne i32 %443, 0
  br i1 %tobool209, label %if.then210, label %if.end214

if.then210:                                       ; preds = %cond.end205
  %444 = load i32, i32* %part, align 4
  %445 = load i8*, i8** @progname, align 4
  %call211 = call %struct._iobuf* @__iob_func()
  %arrayidx212 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call211, i32 2
  %call213 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx212, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @"??_C@_0BI@LPIPGEHO@?$CFs?3?5?$CFs?3?5part?5number?5?$CFu?6?$AA@", i32 0, i32 0), i8* %445, i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0), i32 %444)
  br label %if.end214

if.end214:                                        ; preds = %if.then210, %cond.end205
  br label %if.end215

if.end215:                                        ; preds = %if.end214, %cond.end180
  %446 = load i8, i8* %flags, align 1
  %conv216 = zext i8 %446 to i32
  %and217 = and i32 %conv216, 4
  %cmp218 = icmp ne i32 %and217, 0
  br i1 %cmp218, label %if.then220, label %if.end260

if.then220:                                       ; preds = %if.end215
  %447 = load i32, i32* @inptr, align 4
  %448 = load i32, i32* @insize, align 4
  %cmp221 = icmp ult i32 %447, %448
  br i1 %cmp221, label %cond.true223, label %cond.false227

cond.true223:                                     ; preds = %if.then220
  %449 = load i32, i32* @inptr, align 4
  %inc224 = add i32 %449, 1
  store i32 %inc224, i32* @inptr, align 4
  %arrayidx225 = getelementptr inbounds [32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 %449
  %450 = load i8, i8* %arrayidx225, align 1
  %conv226 = zext i8 %450 to i32
  br label %cond.end229

cond.false227:                                    ; preds = %if.then220
  br label %entry.fill_inbuf.Clone117

entry.fill_inbuf.Clone117:                        ; preds = %cond.false227
  %retval.fill_inbuf.Clone118 = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone119 = alloca i32, align 4
  %len.fill_inbuf.Clone120 = alloca i32, align 4
  store i32 0, i32* %eof_ok.addr.fill_inbuf.Clone119, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone121 = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone121, align 4
  br label %do.body.fill_inbuf.Clone122

do.body.fill_inbuf.Clone122:                      ; preds = %do.cond.fill_inbuf.Clone132, %entry.fill_inbuf.Clone117
  %451 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone123 = sub i32 32768, %451
  %452 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone124 = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %452
  %453 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone125 = call i32 @spec_read(i32 %453, i8* %add.ptr.fill_inbuf.Clone124, i32 %sub.fill_inbuf.Clone123)
  store i32 %call1.fill_inbuf.Clone125, i32* %len.fill_inbuf.Clone120, align 4
  %454 = load i32, i32* %len.fill_inbuf.Clone120, align 4
  %cmp.fill_inbuf.Clone126 = icmp eq i32 %454, 0
  br i1 %cmp.fill_inbuf.Clone126, label %if.then.fill_inbuf.Clone129, label %lor.lhs.false.fill_inbuf.Clone127

lor.lhs.false.fill_inbuf.Clone127:                ; preds = %do.body.fill_inbuf.Clone122
  %455 = load i32, i32* %len.fill_inbuf.Clone120, align 4
  %cmp2.fill_inbuf.Clone128 = icmp eq i32 %455, -1
  br i1 %cmp2.fill_inbuf.Clone128, label %if.then.fill_inbuf.Clone129, label %if.end.fill_inbuf.Clone130

if.then.fill_inbuf.Clone129:                      ; preds = %lor.lhs.false.fill_inbuf.Clone127, %do.body.fill_inbuf.Clone122
  br label %do.end.fill_inbuf.Clone134

if.end.fill_inbuf.Clone130:                       ; preds = %lor.lhs.false.fill_inbuf.Clone127
  %456 = load i32, i32* %len.fill_inbuf.Clone120, align 4
  %457 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone131 = add i32 %457, %456
  store i32 %add.fill_inbuf.Clone131, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone132

do.cond.fill_inbuf.Clone132:                      ; preds = %if.end.fill_inbuf.Clone130
  %458 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone133 = icmp ult i32 %458, 32768
  br i1 %cmp3.fill_inbuf.Clone133, label %do.body.fill_inbuf.Clone122, label %do.end.fill_inbuf.Clone134

do.end.fill_inbuf.Clone134:                       ; preds = %do.cond.fill_inbuf.Clone132, %if.then.fill_inbuf.Clone129
  %459 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone135 = icmp eq i32 %459, 0
  br i1 %cmp4.fill_inbuf.Clone135, label %if.then5.fill_inbuf.Clone136, label %if.end8.fill_inbuf.Clone140

if.then5.fill_inbuf.Clone136:                     ; preds = %do.end.fill_inbuf.Clone134
  %460 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone119, align 4
  %tobool.fill_inbuf.Clone137 = icmp ne i32 %460, 0
  br i1 %tobool.fill_inbuf.Clone137, label %if.then6.fill_inbuf.Clone138, label %if.end7.fill_inbuf.Clone139

if.then6.fill_inbuf.Clone138:                     ; preds = %if.then5.fill_inbuf.Clone136
  store i32 -1, i32* %retval.fill_inbuf.Clone118, align 4
  br label %return.fill_inbuf.Clone143

if.end7.fill_inbuf.Clone139:                      ; preds = %if.then5.fill_inbuf.Clone136
  br label %entry.read_error.Clone708

entry.read_error.Clone708:                        ; preds = %if.end7.fill_inbuf.Clone139
  %461 = load i8*, i8** @progname, align 4
  %call.read_error.Clone709 = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone710 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone709, i32 2
  %call1.read_error.Clone711 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone710, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %461)
  %call2.read_error.Clone712 = call i32* @_errno()
  %462 = load i32, i32* %call2.read_error.Clone712, align 4
  %cmp.read_error.Clone713 = icmp ne i32 %462, 0
  br i1 %cmp.read_error.Clone713, label %if.then.read_error.Clone714, label %if.else.read_error.Clone715

if.then.read_error.Clone714:                      ; preds = %entry.read_error.Clone708
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone719

if.else.read_error.Clone715:                      ; preds = %entry.read_error.Clone708
  %call3.read_error.Clone716 = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone717 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone716, i32 2
  %call5.read_error.Clone718 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone717, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone719

if.end.read_error.Clone719:                       ; preds = %if.else.read_error.Clone715, %if.then.read_error.Clone714
  br label %entry.abort_gzip.Clone804

entry.abort_gzip.Clone804:                        ; preds = %if.end.read_error.Clone719
  %463 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone805 = icmp ne i32 %463, 0
  br i1 %tobool.abort_gzip.Clone805, label %if.then.abort_gzip.Clone806, label %if.end.abort_gzip.Clone809

if.then.abort_gzip.Clone806:                      ; preds = %entry.abort_gzip.Clone804
  %464 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone807 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %464)
  %call1.abort_gzip.Clone808 = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone809

if.end.abort_gzip.Clone809:                       ; preds = %if.then.abort_gzip.Clone806, %entry.abort_gzip.Clone804
  br label %entry.do_exit.Clone1070

entry.do_exit.Clone1070:                          ; preds = %if.end.abort_gzip.Clone809
  %exitcode.addr.do_exit.Clone1071 = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone1071, align 4
  %465 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone1072 = icmp ne i32 %465, 0
  br i1 %tobool.do_exit.Clone1072, label %if.then.do_exit.Clone1073, label %if.end.do_exit.Clone1074

if.then.do_exit.Clone1073:                        ; preds = %entry.do_exit.Clone1070
  %466 = load i32, i32* %exitcode.addr.do_exit.Clone1071, align 4
  call void @exit(i32 %466) #7
  unreachable

if.end.do_exit.Clone1074:                         ; preds = %entry.do_exit.Clone1070
  store i32 1, i32* @do_exit.in_exit, align 4
  %467 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone1075 = icmp ne i8* %467, null
  br i1 %cmp.do_exit.Clone1075, label %if.then1.do_exit.Clone1076, label %if.end2.do_exit.Clone1077

if.then1.do_exit.Clone1076:                       ; preds = %if.end.do_exit.Clone1074
  %468 = load i8*, i8** @env, align 4
  call void @free(i8* %468) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone1077

if.end2.do_exit.Clone1077:                        ; preds = %if.then1.do_exit.Clone1076, %if.end.do_exit.Clone1074
  %469 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone1078 = icmp ne i8** %469, null
  br i1 %cmp3.do_exit.Clone1078, label %if.then4.do_exit.Clone1079, label %if.end5.do_exit.Clone1080

if.then4.do_exit.Clone1079:                       ; preds = %if.end2.do_exit.Clone1077
  %470 = load i8**, i8*** @args, align 4
  %471 = bitcast i8** %470 to i8*
  call void @free(i8* %471) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone1080

if.end5.do_exit.Clone1080:                        ; preds = %if.then4.do_exit.Clone1079, %if.end2.do_exit.Clone1077
  %472 = load i32, i32* %exitcode.addr.do_exit.Clone1071, align 4
  call void @exit(i32 %472) #7
  unreachable

return.do_exit.Clone1081:                         ; No predecessors!
  br label %if.end.abort_gzip.Clone809.Split

if.end.abort_gzip.Clone809.Split:                 ; preds = %return.do_exit.Clone1081
  br label %if.end.read_error.Clone719.Split

if.end.read_error.Clone719.Split:                 ; preds = %if.end.abort_gzip.Clone809.Split
  br label %if.end7.fill_inbuf.Clone139.Split

if.end7.fill_inbuf.Clone139.Split:                ; preds = %if.end.read_error.Clone719.Split
  br label %if.end8.fill_inbuf.Clone140

if.end8.fill_inbuf.Clone140:                      ; preds = %if.end7.fill_inbuf.Clone139.Split, %do.end.fill_inbuf.Clone134
  %473 = load i32, i32* @insize, align 4
  %474 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone141 = add i32 %474, %473
  store i32 %add9.fill_inbuf.Clone141, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %475 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone142 = zext i8 %475 to i32
  store i32 %conv.fill_inbuf.Clone142, i32* %retval.fill_inbuf.Clone118, align 4
  br label %return.fill_inbuf.Clone143

return.fill_inbuf.Clone143:                       ; preds = %if.end8.fill_inbuf.Clone140, %if.then6.fill_inbuf.Clone138
  %476 = load i32, i32* %retval.fill_inbuf.Clone118, align 4
  store i32 %476, i32* %RetValuePtr144
  br label %cond.false227.Split

cond.false227.Split:                              ; preds = %return.fill_inbuf.Clone143
  %RetValue145 = load i32, i32* %RetValuePtr144
  br label %cond.end229

cond.end229:                                      ; preds = %cond.false227.Split, %cond.true223
  %cond230 = phi i32 [ %conv226, %cond.true223 ], [ %RetValue145, %cond.false227.Split ]
  store i32 %cond230, i32* %len, align 4
  %477 = load i32, i32* @inptr, align 4
  %478 = load i32, i32* @insize, align 4
  %cmp231 = icmp ult i32 %477, %478
  br i1 %cmp231, label %cond.true233, label %cond.false237

cond.true233:                                     ; preds = %cond.end229
  %479 = load i32, i32* @inptr, align 4
  %inc234 = add i32 %479, 1
  store i32 %inc234, i32* @inptr, align 4
  %arrayidx235 = getelementptr inbounds [32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 %479
  %480 = load i8, i8* %arrayidx235, align 1
  %conv236 = zext i8 %480 to i32
  br label %cond.end239

cond.false237:                                    ; preds = %cond.end229
  br label %entry.fill_inbuf.Clone88

entry.fill_inbuf.Clone88:                         ; preds = %cond.false237
  %retval.fill_inbuf.Clone89 = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone90 = alloca i32, align 4
  %len.fill_inbuf.Clone91 = alloca i32, align 4
  store i32 0, i32* %eof_ok.addr.fill_inbuf.Clone90, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone92 = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone92, align 4
  br label %do.body.fill_inbuf.Clone93

do.body.fill_inbuf.Clone93:                       ; preds = %do.cond.fill_inbuf.Clone103, %entry.fill_inbuf.Clone88
  %481 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone94 = sub i32 32768, %481
  %482 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone95 = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %482
  %483 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone96 = call i32 @spec_read(i32 %483, i8* %add.ptr.fill_inbuf.Clone95, i32 %sub.fill_inbuf.Clone94)
  store i32 %call1.fill_inbuf.Clone96, i32* %len.fill_inbuf.Clone91, align 4
  %484 = load i32, i32* %len.fill_inbuf.Clone91, align 4
  %cmp.fill_inbuf.Clone97 = icmp eq i32 %484, 0
  br i1 %cmp.fill_inbuf.Clone97, label %if.then.fill_inbuf.Clone100, label %lor.lhs.false.fill_inbuf.Clone98

lor.lhs.false.fill_inbuf.Clone98:                 ; preds = %do.body.fill_inbuf.Clone93
  %485 = load i32, i32* %len.fill_inbuf.Clone91, align 4
  %cmp2.fill_inbuf.Clone99 = icmp eq i32 %485, -1
  br i1 %cmp2.fill_inbuf.Clone99, label %if.then.fill_inbuf.Clone100, label %if.end.fill_inbuf.Clone101

if.then.fill_inbuf.Clone100:                      ; preds = %lor.lhs.false.fill_inbuf.Clone98, %do.body.fill_inbuf.Clone93
  br label %do.end.fill_inbuf.Clone105

if.end.fill_inbuf.Clone101:                       ; preds = %lor.lhs.false.fill_inbuf.Clone98
  %486 = load i32, i32* %len.fill_inbuf.Clone91, align 4
  %487 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone102 = add i32 %487, %486
  store i32 %add.fill_inbuf.Clone102, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone103

do.cond.fill_inbuf.Clone103:                      ; preds = %if.end.fill_inbuf.Clone101
  %488 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone104 = icmp ult i32 %488, 32768
  br i1 %cmp3.fill_inbuf.Clone104, label %do.body.fill_inbuf.Clone93, label %do.end.fill_inbuf.Clone105

do.end.fill_inbuf.Clone105:                       ; preds = %do.cond.fill_inbuf.Clone103, %if.then.fill_inbuf.Clone100
  %489 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone106 = icmp eq i32 %489, 0
  br i1 %cmp4.fill_inbuf.Clone106, label %if.then5.fill_inbuf.Clone107, label %if.end8.fill_inbuf.Clone111

if.then5.fill_inbuf.Clone107:                     ; preds = %do.end.fill_inbuf.Clone105
  %490 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone90, align 4
  %tobool.fill_inbuf.Clone108 = icmp ne i32 %490, 0
  br i1 %tobool.fill_inbuf.Clone108, label %if.then6.fill_inbuf.Clone109, label %if.end7.fill_inbuf.Clone110

if.then6.fill_inbuf.Clone109:                     ; preds = %if.then5.fill_inbuf.Clone107
  store i32 -1, i32* %retval.fill_inbuf.Clone89, align 4
  br label %return.fill_inbuf.Clone114

if.end7.fill_inbuf.Clone110:                      ; preds = %if.then5.fill_inbuf.Clone107
  br label %entry.read_error.Clone720

entry.read_error.Clone720:                        ; preds = %if.end7.fill_inbuf.Clone110
  %491 = load i8*, i8** @progname, align 4
  %call.read_error.Clone721 = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone722 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone721, i32 2
  %call1.read_error.Clone723 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone722, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %491)
  %call2.read_error.Clone724 = call i32* @_errno()
  %492 = load i32, i32* %call2.read_error.Clone724, align 4
  %cmp.read_error.Clone725 = icmp ne i32 %492, 0
  br i1 %cmp.read_error.Clone725, label %if.then.read_error.Clone726, label %if.else.read_error.Clone727

if.then.read_error.Clone726:                      ; preds = %entry.read_error.Clone720
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone731

if.else.read_error.Clone727:                      ; preds = %entry.read_error.Clone720
  %call3.read_error.Clone728 = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone729 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone728, i32 2
  %call5.read_error.Clone730 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone729, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone731

if.end.read_error.Clone731:                       ; preds = %if.else.read_error.Clone727, %if.then.read_error.Clone726
  br label %entry.abort_gzip.Clone798

entry.abort_gzip.Clone798:                        ; preds = %if.end.read_error.Clone731
  %493 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone799 = icmp ne i32 %493, 0
  br i1 %tobool.abort_gzip.Clone799, label %if.then.abort_gzip.Clone800, label %if.end.abort_gzip.Clone803

if.then.abort_gzip.Clone800:                      ; preds = %entry.abort_gzip.Clone798
  %494 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone801 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %494)
  %call1.abort_gzip.Clone802 = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone803

if.end.abort_gzip.Clone803:                       ; preds = %if.then.abort_gzip.Clone800, %entry.abort_gzip.Clone798
  br label %entry.do_exit.Clone1082

entry.do_exit.Clone1082:                          ; preds = %if.end.abort_gzip.Clone803
  %exitcode.addr.do_exit.Clone1083 = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone1083, align 4
  %495 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone1084 = icmp ne i32 %495, 0
  br i1 %tobool.do_exit.Clone1084, label %if.then.do_exit.Clone1085, label %if.end.do_exit.Clone1086

if.then.do_exit.Clone1085:                        ; preds = %entry.do_exit.Clone1082
  %496 = load i32, i32* %exitcode.addr.do_exit.Clone1083, align 4
  call void @exit(i32 %496) #7
  unreachable

if.end.do_exit.Clone1086:                         ; preds = %entry.do_exit.Clone1082
  store i32 1, i32* @do_exit.in_exit, align 4
  %497 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone1087 = icmp ne i8* %497, null
  br i1 %cmp.do_exit.Clone1087, label %if.then1.do_exit.Clone1088, label %if.end2.do_exit.Clone1089

if.then1.do_exit.Clone1088:                       ; preds = %if.end.do_exit.Clone1086
  %498 = load i8*, i8** @env, align 4
  call void @free(i8* %498) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone1089

if.end2.do_exit.Clone1089:                        ; preds = %if.then1.do_exit.Clone1088, %if.end.do_exit.Clone1086
  %499 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone1090 = icmp ne i8** %499, null
  br i1 %cmp3.do_exit.Clone1090, label %if.then4.do_exit.Clone1091, label %if.end5.do_exit.Clone1092

if.then4.do_exit.Clone1091:                       ; preds = %if.end2.do_exit.Clone1089
  %500 = load i8**, i8*** @args, align 4
  %501 = bitcast i8** %500 to i8*
  call void @free(i8* %501) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone1092

if.end5.do_exit.Clone1092:                        ; preds = %if.then4.do_exit.Clone1091, %if.end2.do_exit.Clone1089
  %502 = load i32, i32* %exitcode.addr.do_exit.Clone1083, align 4
  call void @exit(i32 %502) #7
  unreachable

return.do_exit.Clone1093:                         ; No predecessors!
  br label %if.end.abort_gzip.Clone803.Split

if.end.abort_gzip.Clone803.Split:                 ; preds = %return.do_exit.Clone1093
  br label %if.end.read_error.Clone731.Split

if.end.read_error.Clone731.Split:                 ; preds = %if.end.abort_gzip.Clone803.Split
  br label %if.end7.fill_inbuf.Clone110.Split

if.end7.fill_inbuf.Clone110.Split:                ; preds = %if.end.read_error.Clone731.Split
  br label %if.end8.fill_inbuf.Clone111

if.end8.fill_inbuf.Clone111:                      ; preds = %if.end7.fill_inbuf.Clone110.Split, %do.end.fill_inbuf.Clone105
  %503 = load i32, i32* @insize, align 4
  %504 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone112 = add i32 %504, %503
  store i32 %add9.fill_inbuf.Clone112, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %505 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone113 = zext i8 %505 to i32
  store i32 %conv.fill_inbuf.Clone113, i32* %retval.fill_inbuf.Clone89, align 4
  br label %return.fill_inbuf.Clone114

return.fill_inbuf.Clone114:                       ; preds = %if.end8.fill_inbuf.Clone111, %if.then6.fill_inbuf.Clone109
  %506 = load i32, i32* %retval.fill_inbuf.Clone89, align 4
  store i32 %506, i32* %RetValuePtr115
  br label %cond.false237.Split

cond.false237.Split:                              ; preds = %return.fill_inbuf.Clone114
  %RetValue116 = load i32, i32* %RetValuePtr115
  br label %cond.end239

cond.end239:                                      ; preds = %cond.false237.Split, %cond.true233
  %cond240 = phi i32 [ %conv236, %cond.true233 ], [ %RetValue116, %cond.false237.Split ]
  %shl241 = shl i32 %cond240, 8
  %507 = load i32, i32* %len, align 4
  %or242 = or i32 %507, %shl241
  store i32 %or242, i32* %len, align 4
  %508 = load i32, i32* @verbose, align 4
  %tobool243 = icmp ne i32 %508, 0
  br i1 %tobool243, label %if.then244, label %if.end248

if.then244:                                       ; preds = %cond.end239
  %509 = load i32, i32* %len, align 4
  %510 = load i8*, i8** @progname, align 4
  %call245 = call %struct._iobuf* @__iob_func()
  %arrayidx246 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call245, i32 2
  %call247 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx246, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @"??_C@_0CJ@JPMIIMII@?$CFs?3?5?$CFs?3?5extra?5field?5of?5?$CFu?5bytes?5@", i32 0, i32 0), i8* %510, i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0), i32 %509)
  br label %if.end248

if.end248:                                        ; preds = %if.then244, %cond.end239
  br label %while.cond

while.cond:                                       ; preds = %cond.end258, %if.end248
  %511 = load i32, i32* %len, align 4
  %dec = add i32 %511, -1
  store i32 %dec, i32* %len, align 4
  %tobool249 = icmp ne i32 %511, 0
  br i1 %tobool249, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %512 = load i32, i32* @inptr, align 4
  %513 = load i32, i32* @insize, align 4
  %cmp250 = icmp ult i32 %512, %513
  br i1 %cmp250, label %cond.true252, label %cond.false256

cond.true252:                                     ; preds = %while.body
  %514 = load i32, i32* @inptr, align 4
  %inc253 = add i32 %514, 1
  store i32 %inc253, i32* @inptr, align 4
  %arrayidx254 = getelementptr inbounds [32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 %514
  %515 = load i8, i8* %arrayidx254, align 1
  %conv255 = zext i8 %515 to i32
  br label %cond.end258

cond.false256:                                    ; preds = %while.body
  br label %entry.fill_inbuf.Clone59

entry.fill_inbuf.Clone59:                         ; preds = %cond.false256
  %retval.fill_inbuf.Clone60 = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone61 = alloca i32, align 4
  %len.fill_inbuf.Clone62 = alloca i32, align 4
  store i32 0, i32* %eof_ok.addr.fill_inbuf.Clone61, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone63 = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone63, align 4
  br label %do.body.fill_inbuf.Clone64

do.body.fill_inbuf.Clone64:                       ; preds = %do.cond.fill_inbuf.Clone74, %entry.fill_inbuf.Clone59
  %516 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone65 = sub i32 32768, %516
  %517 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone66 = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %517
  %518 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone67 = call i32 @spec_read(i32 %518, i8* %add.ptr.fill_inbuf.Clone66, i32 %sub.fill_inbuf.Clone65)
  store i32 %call1.fill_inbuf.Clone67, i32* %len.fill_inbuf.Clone62, align 4
  %519 = load i32, i32* %len.fill_inbuf.Clone62, align 4
  %cmp.fill_inbuf.Clone68 = icmp eq i32 %519, 0
  br i1 %cmp.fill_inbuf.Clone68, label %if.then.fill_inbuf.Clone71, label %lor.lhs.false.fill_inbuf.Clone69

lor.lhs.false.fill_inbuf.Clone69:                 ; preds = %do.body.fill_inbuf.Clone64
  %520 = load i32, i32* %len.fill_inbuf.Clone62, align 4
  %cmp2.fill_inbuf.Clone70 = icmp eq i32 %520, -1
  br i1 %cmp2.fill_inbuf.Clone70, label %if.then.fill_inbuf.Clone71, label %if.end.fill_inbuf.Clone72

if.then.fill_inbuf.Clone71:                       ; preds = %lor.lhs.false.fill_inbuf.Clone69, %do.body.fill_inbuf.Clone64
  br label %do.end.fill_inbuf.Clone76

if.end.fill_inbuf.Clone72:                        ; preds = %lor.lhs.false.fill_inbuf.Clone69
  %521 = load i32, i32* %len.fill_inbuf.Clone62, align 4
  %522 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone73 = add i32 %522, %521
  store i32 %add.fill_inbuf.Clone73, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone74

do.cond.fill_inbuf.Clone74:                       ; preds = %if.end.fill_inbuf.Clone72
  %523 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone75 = icmp ult i32 %523, 32768
  br i1 %cmp3.fill_inbuf.Clone75, label %do.body.fill_inbuf.Clone64, label %do.end.fill_inbuf.Clone76

do.end.fill_inbuf.Clone76:                        ; preds = %do.cond.fill_inbuf.Clone74, %if.then.fill_inbuf.Clone71
  %524 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone77 = icmp eq i32 %524, 0
  br i1 %cmp4.fill_inbuf.Clone77, label %if.then5.fill_inbuf.Clone78, label %if.end8.fill_inbuf.Clone82

if.then5.fill_inbuf.Clone78:                      ; preds = %do.end.fill_inbuf.Clone76
  %525 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone61, align 4
  %tobool.fill_inbuf.Clone79 = icmp ne i32 %525, 0
  br i1 %tobool.fill_inbuf.Clone79, label %if.then6.fill_inbuf.Clone80, label %if.end7.fill_inbuf.Clone81

if.then6.fill_inbuf.Clone80:                      ; preds = %if.then5.fill_inbuf.Clone78
  store i32 -1, i32* %retval.fill_inbuf.Clone60, align 4
  br label %return.fill_inbuf.Clone85

if.end7.fill_inbuf.Clone81:                       ; preds = %if.then5.fill_inbuf.Clone78
  br label %entry.read_error.Clone732

entry.read_error.Clone732:                        ; preds = %if.end7.fill_inbuf.Clone81
  %526 = load i8*, i8** @progname, align 4
  %call.read_error.Clone733 = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone734 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone733, i32 2
  %call1.read_error.Clone735 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone734, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %526)
  %call2.read_error.Clone736 = call i32* @_errno()
  %527 = load i32, i32* %call2.read_error.Clone736, align 4
  %cmp.read_error.Clone737 = icmp ne i32 %527, 0
  br i1 %cmp.read_error.Clone737, label %if.then.read_error.Clone738, label %if.else.read_error.Clone739

if.then.read_error.Clone738:                      ; preds = %entry.read_error.Clone732
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone743

if.else.read_error.Clone739:                      ; preds = %entry.read_error.Clone732
  %call3.read_error.Clone740 = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone741 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone740, i32 2
  %call5.read_error.Clone742 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone741, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone743

if.end.read_error.Clone743:                       ; preds = %if.else.read_error.Clone739, %if.then.read_error.Clone738
  br label %entry.abort_gzip.Clone792

entry.abort_gzip.Clone792:                        ; preds = %if.end.read_error.Clone743
  %528 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone793 = icmp ne i32 %528, 0
  br i1 %tobool.abort_gzip.Clone793, label %if.then.abort_gzip.Clone794, label %if.end.abort_gzip.Clone797

if.then.abort_gzip.Clone794:                      ; preds = %entry.abort_gzip.Clone792
  %529 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone795 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %529)
  %call1.abort_gzip.Clone796 = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone797

if.end.abort_gzip.Clone797:                       ; preds = %if.then.abort_gzip.Clone794, %entry.abort_gzip.Clone792
  br label %entry.do_exit.Clone1094

entry.do_exit.Clone1094:                          ; preds = %if.end.abort_gzip.Clone797
  %exitcode.addr.do_exit.Clone1095 = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone1095, align 4
  %530 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone1096 = icmp ne i32 %530, 0
  br i1 %tobool.do_exit.Clone1096, label %if.then.do_exit.Clone1097, label %if.end.do_exit.Clone1098

if.then.do_exit.Clone1097:                        ; preds = %entry.do_exit.Clone1094
  %531 = load i32, i32* %exitcode.addr.do_exit.Clone1095, align 4
  call void @exit(i32 %531) #7
  unreachable

if.end.do_exit.Clone1098:                         ; preds = %entry.do_exit.Clone1094
  store i32 1, i32* @do_exit.in_exit, align 4
  %532 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone1099 = icmp ne i8* %532, null
  br i1 %cmp.do_exit.Clone1099, label %if.then1.do_exit.Clone1100, label %if.end2.do_exit.Clone1101

if.then1.do_exit.Clone1100:                       ; preds = %if.end.do_exit.Clone1098
  %533 = load i8*, i8** @env, align 4
  call void @free(i8* %533) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone1101

if.end2.do_exit.Clone1101:                        ; preds = %if.then1.do_exit.Clone1100, %if.end.do_exit.Clone1098
  %534 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone1102 = icmp ne i8** %534, null
  br i1 %cmp3.do_exit.Clone1102, label %if.then4.do_exit.Clone1103, label %if.end5.do_exit.Clone1104

if.then4.do_exit.Clone1103:                       ; preds = %if.end2.do_exit.Clone1101
  %535 = load i8**, i8*** @args, align 4
  %536 = bitcast i8** %535 to i8*
  call void @free(i8* %536) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone1104

if.end5.do_exit.Clone1104:                        ; preds = %if.then4.do_exit.Clone1103, %if.end2.do_exit.Clone1101
  %537 = load i32, i32* %exitcode.addr.do_exit.Clone1095, align 4
  call void @exit(i32 %537) #7
  unreachable

return.do_exit.Clone1105:                         ; No predecessors!
  br label %if.end.abort_gzip.Clone797.Split

if.end.abort_gzip.Clone797.Split:                 ; preds = %return.do_exit.Clone1105
  br label %if.end.read_error.Clone743.Split

if.end.read_error.Clone743.Split:                 ; preds = %if.end.abort_gzip.Clone797.Split
  br label %if.end7.fill_inbuf.Clone81.Split

if.end7.fill_inbuf.Clone81.Split:                 ; preds = %if.end.read_error.Clone743.Split
  br label %if.end8.fill_inbuf.Clone82

if.end8.fill_inbuf.Clone82:                       ; preds = %if.end7.fill_inbuf.Clone81.Split, %do.end.fill_inbuf.Clone76
  %538 = load i32, i32* @insize, align 4
  %539 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone83 = add i32 %539, %538
  store i32 %add9.fill_inbuf.Clone83, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %540 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone84 = zext i8 %540 to i32
  store i32 %conv.fill_inbuf.Clone84, i32* %retval.fill_inbuf.Clone60, align 4
  br label %return.fill_inbuf.Clone85

return.fill_inbuf.Clone85:                        ; preds = %if.end8.fill_inbuf.Clone82, %if.then6.fill_inbuf.Clone80
  %541 = load i32, i32* %retval.fill_inbuf.Clone60, align 4
  store i32 %541, i32* %RetValuePtr86
  br label %cond.false256.Split

cond.false256.Split:                              ; preds = %return.fill_inbuf.Clone85
  %RetValue87 = load i32, i32* %RetValuePtr86
  br label %cond.end258

cond.end258:                                      ; preds = %cond.false256.Split, %cond.true252
  %cond259 = phi i32 [ %conv255, %cond.true252 ], [ %RetValue87, %cond.false256.Split ]
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %if.end260

if.end260:                                        ; preds = %while.end, %if.end215
  %542 = load i8, i8* %flags, align 1
  %conv261 = zext i8 %542 to i32
  %and262 = and i32 %conv261, 8
  %cmp263 = icmp ne i32 %and262, 0
  br i1 %cmp263, label %if.then265, label %if.end318

if.then265:                                       ; preds = %if.end260
  %543 = load i32, i32* @no_name, align 4
  %tobool266 = icmp ne i32 %543, 0
  br i1 %tobool266, label %if.then274, label %lor.lhs.false267

lor.lhs.false267:                                 ; preds = %if.then265
  %544 = load i32, i32* @to_stdout, align 4
  %tobool268 = icmp ne i32 %544, 0
  br i1 %tobool268, label %land.lhs.true269, label %lor.lhs.false271

land.lhs.true269:                                 ; preds = %lor.lhs.false267
  %545 = load i32, i32* @list, align 4
  %tobool270 = icmp ne i32 %545, 0
  br i1 %tobool270, label %lor.lhs.false271, label %if.then274

lor.lhs.false271:                                 ; preds = %land.lhs.true269, %lor.lhs.false267
  %546 = load i32, i32* @part_nb, align 4
  %cmp272 = icmp sgt i32 %546, 1
  br i1 %cmp272, label %if.then274, label %if.else289

if.then274:                                       ; preds = %lor.lhs.false271, %land.lhs.true269, %if.then265
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then274
  %547 = load i32, i32* @inptr, align 4
  %548 = load i32, i32* @insize, align 4
  %cmp275 = icmp ult i32 %547, %548
  br i1 %cmp275, label %cond.true277, label %cond.false281

cond.true277:                                     ; preds = %do.body
  %549 = load i32, i32* @inptr, align 4
  %inc278 = add i32 %549, 1
  store i32 %inc278, i32* @inptr, align 4
  %arrayidx279 = getelementptr inbounds [32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 %549
  %550 = load i8, i8* %arrayidx279, align 1
  %conv280 = zext i8 %550 to i32
  br label %cond.end283

cond.false281:                                    ; preds = %do.body
  br label %entry.fill_inbuf.Clone30

entry.fill_inbuf.Clone30:                         ; preds = %cond.false281
  %retval.fill_inbuf.Clone31 = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone32 = alloca i32, align 4
  %len.fill_inbuf.Clone33 = alloca i32, align 4
  store i32 0, i32* %eof_ok.addr.fill_inbuf.Clone32, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone34 = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone34, align 4
  br label %do.body.fill_inbuf.Clone35

do.body.fill_inbuf.Clone35:                       ; preds = %do.cond.fill_inbuf.Clone45, %entry.fill_inbuf.Clone30
  %551 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone36 = sub i32 32768, %551
  %552 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone37 = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %552
  %553 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone38 = call i32 @spec_read(i32 %553, i8* %add.ptr.fill_inbuf.Clone37, i32 %sub.fill_inbuf.Clone36)
  store i32 %call1.fill_inbuf.Clone38, i32* %len.fill_inbuf.Clone33, align 4
  %554 = load i32, i32* %len.fill_inbuf.Clone33, align 4
  %cmp.fill_inbuf.Clone39 = icmp eq i32 %554, 0
  br i1 %cmp.fill_inbuf.Clone39, label %if.then.fill_inbuf.Clone42, label %lor.lhs.false.fill_inbuf.Clone40

lor.lhs.false.fill_inbuf.Clone40:                 ; preds = %do.body.fill_inbuf.Clone35
  %555 = load i32, i32* %len.fill_inbuf.Clone33, align 4
  %cmp2.fill_inbuf.Clone41 = icmp eq i32 %555, -1
  br i1 %cmp2.fill_inbuf.Clone41, label %if.then.fill_inbuf.Clone42, label %if.end.fill_inbuf.Clone43

if.then.fill_inbuf.Clone42:                       ; preds = %lor.lhs.false.fill_inbuf.Clone40, %do.body.fill_inbuf.Clone35
  br label %do.end.fill_inbuf.Clone47

if.end.fill_inbuf.Clone43:                        ; preds = %lor.lhs.false.fill_inbuf.Clone40
  %556 = load i32, i32* %len.fill_inbuf.Clone33, align 4
  %557 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone44 = add i32 %557, %556
  store i32 %add.fill_inbuf.Clone44, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone45

do.cond.fill_inbuf.Clone45:                       ; preds = %if.end.fill_inbuf.Clone43
  %558 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone46 = icmp ult i32 %558, 32768
  br i1 %cmp3.fill_inbuf.Clone46, label %do.body.fill_inbuf.Clone35, label %do.end.fill_inbuf.Clone47

do.end.fill_inbuf.Clone47:                        ; preds = %do.cond.fill_inbuf.Clone45, %if.then.fill_inbuf.Clone42
  %559 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone48 = icmp eq i32 %559, 0
  br i1 %cmp4.fill_inbuf.Clone48, label %if.then5.fill_inbuf.Clone49, label %if.end8.fill_inbuf.Clone53

if.then5.fill_inbuf.Clone49:                      ; preds = %do.end.fill_inbuf.Clone47
  %560 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone32, align 4
  %tobool.fill_inbuf.Clone50 = icmp ne i32 %560, 0
  br i1 %tobool.fill_inbuf.Clone50, label %if.then6.fill_inbuf.Clone51, label %if.end7.fill_inbuf.Clone52

if.then6.fill_inbuf.Clone51:                      ; preds = %if.then5.fill_inbuf.Clone49
  store i32 -1, i32* %retval.fill_inbuf.Clone31, align 4
  br label %return.fill_inbuf.Clone56

if.end7.fill_inbuf.Clone52:                       ; preds = %if.then5.fill_inbuf.Clone49
  br label %entry.read_error.Clone744

entry.read_error.Clone744:                        ; preds = %if.end7.fill_inbuf.Clone52
  %561 = load i8*, i8** @progname, align 4
  %call.read_error.Clone745 = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone746 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone745, i32 2
  %call1.read_error.Clone747 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone746, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %561)
  %call2.read_error.Clone748 = call i32* @_errno()
  %562 = load i32, i32* %call2.read_error.Clone748, align 4
  %cmp.read_error.Clone749 = icmp ne i32 %562, 0
  br i1 %cmp.read_error.Clone749, label %if.then.read_error.Clone750, label %if.else.read_error.Clone751

if.then.read_error.Clone750:                      ; preds = %entry.read_error.Clone744
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone755

if.else.read_error.Clone751:                      ; preds = %entry.read_error.Clone744
  %call3.read_error.Clone752 = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone753 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone752, i32 2
  %call5.read_error.Clone754 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone753, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone755

if.end.read_error.Clone755:                       ; preds = %if.else.read_error.Clone751, %if.then.read_error.Clone750
  br label %entry.abort_gzip.Clone786

entry.abort_gzip.Clone786:                        ; preds = %if.end.read_error.Clone755
  %563 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone787 = icmp ne i32 %563, 0
  br i1 %tobool.abort_gzip.Clone787, label %if.then.abort_gzip.Clone788, label %if.end.abort_gzip.Clone791

if.then.abort_gzip.Clone788:                      ; preds = %entry.abort_gzip.Clone786
  %564 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone789 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %564)
  %call1.abort_gzip.Clone790 = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone791

if.end.abort_gzip.Clone791:                       ; preds = %if.then.abort_gzip.Clone788, %entry.abort_gzip.Clone786
  br label %entry.do_exit.Clone1106

entry.do_exit.Clone1106:                          ; preds = %if.end.abort_gzip.Clone791
  %exitcode.addr.do_exit.Clone1107 = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone1107, align 4
  %565 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone1108 = icmp ne i32 %565, 0
  br i1 %tobool.do_exit.Clone1108, label %if.then.do_exit.Clone1109, label %if.end.do_exit.Clone1110

if.then.do_exit.Clone1109:                        ; preds = %entry.do_exit.Clone1106
  %566 = load i32, i32* %exitcode.addr.do_exit.Clone1107, align 4
  call void @exit(i32 %566) #7
  unreachable

if.end.do_exit.Clone1110:                         ; preds = %entry.do_exit.Clone1106
  store i32 1, i32* @do_exit.in_exit, align 4
  %567 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone1111 = icmp ne i8* %567, null
  br i1 %cmp.do_exit.Clone1111, label %if.then1.do_exit.Clone1112, label %if.end2.do_exit.Clone1113

if.then1.do_exit.Clone1112:                       ; preds = %if.end.do_exit.Clone1110
  %568 = load i8*, i8** @env, align 4
  call void @free(i8* %568) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone1113

if.end2.do_exit.Clone1113:                        ; preds = %if.then1.do_exit.Clone1112, %if.end.do_exit.Clone1110
  %569 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone1114 = icmp ne i8** %569, null
  br i1 %cmp3.do_exit.Clone1114, label %if.then4.do_exit.Clone1115, label %if.end5.do_exit.Clone1116

if.then4.do_exit.Clone1115:                       ; preds = %if.end2.do_exit.Clone1113
  %570 = load i8**, i8*** @args, align 4
  %571 = bitcast i8** %570 to i8*
  call void @free(i8* %571) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone1116

if.end5.do_exit.Clone1116:                        ; preds = %if.then4.do_exit.Clone1115, %if.end2.do_exit.Clone1113
  %572 = load i32, i32* %exitcode.addr.do_exit.Clone1107, align 4
  call void @exit(i32 %572) #7
  unreachable

return.do_exit.Clone1117:                         ; No predecessors!
  br label %if.end.abort_gzip.Clone791.Split

if.end.abort_gzip.Clone791.Split:                 ; preds = %return.do_exit.Clone1117
  br label %if.end.read_error.Clone755.Split

if.end.read_error.Clone755.Split:                 ; preds = %if.end.abort_gzip.Clone791.Split
  br label %if.end7.fill_inbuf.Clone52.Split

if.end7.fill_inbuf.Clone52.Split:                 ; preds = %if.end.read_error.Clone755.Split
  br label %if.end8.fill_inbuf.Clone53

if.end8.fill_inbuf.Clone53:                       ; preds = %if.end7.fill_inbuf.Clone52.Split, %do.end.fill_inbuf.Clone47
  %573 = load i32, i32* @insize, align 4
  %574 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone54 = add i32 %574, %573
  store i32 %add9.fill_inbuf.Clone54, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %575 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone55 = zext i8 %575 to i32
  store i32 %conv.fill_inbuf.Clone55, i32* %retval.fill_inbuf.Clone31, align 4
  br label %return.fill_inbuf.Clone56

return.fill_inbuf.Clone56:                        ; preds = %if.end8.fill_inbuf.Clone53, %if.then6.fill_inbuf.Clone51
  %576 = load i32, i32* %retval.fill_inbuf.Clone31, align 4
  store i32 %576, i32* %RetValuePtr57
  br label %cond.false281.Split

cond.false281.Split:                              ; preds = %return.fill_inbuf.Clone56
  %RetValue58 = load i32, i32* %RetValuePtr57
  br label %cond.end283

cond.end283:                                      ; preds = %cond.false281.Split, %cond.true277
  %cond284 = phi i32 [ %conv280, %cond.true277 ], [ %RetValue58, %cond.false281.Split ]
  %conv285 = trunc i32 %cond284 to i8
  store i8 %conv285, i8* %c, align 1
  br label %do.cond

do.cond:                                          ; preds = %cond.end283
  %577 = load i8, i8* %c, align 1
  %conv286 = sext i8 %577 to i32
  %cmp287 = icmp ne i32 %conv286, 0
  br i1 %cmp287, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end317

if.else289:                                       ; preds = %lor.lhs.false271
  br label %entry.gzipbasename.Clone

entry.gzipbasename.Clone:                         ; preds = %if.else289
  %fname.addr.gzipbasename.Clone = alloca i8*, align 4
  %p.gzipbasename.Clone = alloca i8*, align 4
  store i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0), i8** %fname.addr.gzipbasename.Clone, align 4
  %578 = load i8*, i8** %fname.addr.gzipbasename.Clone, align 4
  %call.gzipbasename.Clone = call i8* @strrchr(i8* %578, i32 47)
  store i8* %call.gzipbasename.Clone, i8** %p.gzipbasename.Clone, align 4
  %cmp.gzipbasename.Clone = icmp ne i8* %call.gzipbasename.Clone, null
  br i1 %cmp.gzipbasename.Clone, label %if.then.gzipbasename.Clone, label %if.end.gzipbasename.Clone

if.then.gzipbasename.Clone:                       ; preds = %entry.gzipbasename.Clone
  %579 = load i8*, i8** %p.gzipbasename.Clone, align 4
  %add.ptr.gzipbasename.Clone = getelementptr inbounds i8, i8* %579, i32 1
  store i8* %add.ptr.gzipbasename.Clone, i8** %fname.addr.gzipbasename.Clone, align 4
  br label %if.end.gzipbasename.Clone

if.end.gzipbasename.Clone:                        ; preds = %if.then.gzipbasename.Clone, %entry.gzipbasename.Clone
  %580 = load i8*, i8** %fname.addr.gzipbasename.Clone, align 4
  store i8* %580, i8** %RetValuePtr900
  br label %if.else289.Split

if.else289.Split:                                 ; preds = %if.end.gzipbasename.Clone
  %RetValue901 = load i8*, i8** %RetValuePtr900
  store i8* %RetValue901, i8** %p, align 4
  %581 = load i8*, i8** %p, align 4
  store i8* %581, i8** %base, align 4
  br label %for.cond

for.cond:                                         ; preds = %if.end310, %if.else289.Split
  %582 = load i32, i32* @inptr, align 4
  %583 = load i32, i32* @insize, align 4
  %cmp291 = icmp ult i32 %582, %583
  br i1 %cmp291, label %cond.true293, label %cond.false297

cond.true293:                                     ; preds = %for.cond
  %584 = load i32, i32* @inptr, align 4
  %inc294 = add i32 %584, 1
  store i32 %inc294, i32* @inptr, align 4
  %arrayidx295 = getelementptr inbounds [32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 %584
  %585 = load i8, i8* %arrayidx295, align 1
  %conv296 = zext i8 %585 to i32
  br label %cond.end299

cond.false297:                                    ; preds = %for.cond
  br label %entry.fill_inbuf.Clone1

entry.fill_inbuf.Clone1:                          ; preds = %cond.false297
  %retval.fill_inbuf.Clone2 = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone3 = alloca i32, align 4
  %len.fill_inbuf.Clone4 = alloca i32, align 4
  store i32 0, i32* %eof_ok.addr.fill_inbuf.Clone3, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone5 = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone5, align 4
  br label %do.body.fill_inbuf.Clone6

do.body.fill_inbuf.Clone6:                        ; preds = %do.cond.fill_inbuf.Clone16, %entry.fill_inbuf.Clone1
  %586 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone7 = sub i32 32768, %586
  %587 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone8 = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %587
  %588 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone9 = call i32 @spec_read(i32 %588, i8* %add.ptr.fill_inbuf.Clone8, i32 %sub.fill_inbuf.Clone7)
  store i32 %call1.fill_inbuf.Clone9, i32* %len.fill_inbuf.Clone4, align 4
  %589 = load i32, i32* %len.fill_inbuf.Clone4, align 4
  %cmp.fill_inbuf.Clone10 = icmp eq i32 %589, 0
  br i1 %cmp.fill_inbuf.Clone10, label %if.then.fill_inbuf.Clone13, label %lor.lhs.false.fill_inbuf.Clone11

lor.lhs.false.fill_inbuf.Clone11:                 ; preds = %do.body.fill_inbuf.Clone6
  %590 = load i32, i32* %len.fill_inbuf.Clone4, align 4
  %cmp2.fill_inbuf.Clone12 = icmp eq i32 %590, -1
  br i1 %cmp2.fill_inbuf.Clone12, label %if.then.fill_inbuf.Clone13, label %if.end.fill_inbuf.Clone14

if.then.fill_inbuf.Clone13:                       ; preds = %lor.lhs.false.fill_inbuf.Clone11, %do.body.fill_inbuf.Clone6
  br label %do.end.fill_inbuf.Clone18

if.end.fill_inbuf.Clone14:                        ; preds = %lor.lhs.false.fill_inbuf.Clone11
  %591 = load i32, i32* %len.fill_inbuf.Clone4, align 4
  %592 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone15 = add i32 %592, %591
  store i32 %add.fill_inbuf.Clone15, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone16

do.cond.fill_inbuf.Clone16:                       ; preds = %if.end.fill_inbuf.Clone14
  %593 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone17 = icmp ult i32 %593, 32768
  br i1 %cmp3.fill_inbuf.Clone17, label %do.body.fill_inbuf.Clone6, label %do.end.fill_inbuf.Clone18

do.end.fill_inbuf.Clone18:                        ; preds = %do.cond.fill_inbuf.Clone16, %if.then.fill_inbuf.Clone13
  %594 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone19 = icmp eq i32 %594, 0
  br i1 %cmp4.fill_inbuf.Clone19, label %if.then5.fill_inbuf.Clone20, label %if.end8.fill_inbuf.Clone24

if.then5.fill_inbuf.Clone20:                      ; preds = %do.end.fill_inbuf.Clone18
  %595 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone3, align 4
  %tobool.fill_inbuf.Clone21 = icmp ne i32 %595, 0
  br i1 %tobool.fill_inbuf.Clone21, label %if.then6.fill_inbuf.Clone22, label %if.end7.fill_inbuf.Clone23

if.then6.fill_inbuf.Clone22:                      ; preds = %if.then5.fill_inbuf.Clone20
  store i32 -1, i32* %retval.fill_inbuf.Clone2, align 4
  br label %return.fill_inbuf.Clone27

if.end7.fill_inbuf.Clone23:                       ; preds = %if.then5.fill_inbuf.Clone20
  br label %entry.read_error.Clone756

entry.read_error.Clone756:                        ; preds = %if.end7.fill_inbuf.Clone23
  %596 = load i8*, i8** @progname, align 4
  %call.read_error.Clone757 = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone758 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone757, i32 2
  %call1.read_error.Clone759 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone758, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %596)
  %call2.read_error.Clone760 = call i32* @_errno()
  %597 = load i32, i32* %call2.read_error.Clone760, align 4
  %cmp.read_error.Clone761 = icmp ne i32 %597, 0
  br i1 %cmp.read_error.Clone761, label %if.then.read_error.Clone762, label %if.else.read_error.Clone763

if.then.read_error.Clone762:                      ; preds = %entry.read_error.Clone756
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone767

if.else.read_error.Clone763:                      ; preds = %entry.read_error.Clone756
  %call3.read_error.Clone764 = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone765 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone764, i32 2
  %call5.read_error.Clone766 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone765, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone767

if.end.read_error.Clone767:                       ; preds = %if.else.read_error.Clone763, %if.then.read_error.Clone762
  br label %entry.abort_gzip.Clone780

entry.abort_gzip.Clone780:                        ; preds = %if.end.read_error.Clone767
  %598 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone781 = icmp ne i32 %598, 0
  br i1 %tobool.abort_gzip.Clone781, label %if.then.abort_gzip.Clone782, label %if.end.abort_gzip.Clone785

if.then.abort_gzip.Clone782:                      ; preds = %entry.abort_gzip.Clone780
  %599 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone783 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %599)
  %call1.abort_gzip.Clone784 = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone785

if.end.abort_gzip.Clone785:                       ; preds = %if.then.abort_gzip.Clone782, %entry.abort_gzip.Clone780
  br label %entry.do_exit.Clone1118

entry.do_exit.Clone1118:                          ; preds = %if.end.abort_gzip.Clone785
  %exitcode.addr.do_exit.Clone1119 = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone1119, align 4
  %600 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone1120 = icmp ne i32 %600, 0
  br i1 %tobool.do_exit.Clone1120, label %if.then.do_exit.Clone1121, label %if.end.do_exit.Clone1122

if.then.do_exit.Clone1121:                        ; preds = %entry.do_exit.Clone1118
  %601 = load i32, i32* %exitcode.addr.do_exit.Clone1119, align 4
  call void @exit(i32 %601) #7
  unreachable

if.end.do_exit.Clone1122:                         ; preds = %entry.do_exit.Clone1118
  store i32 1, i32* @do_exit.in_exit, align 4
  %602 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone1123 = icmp ne i8* %602, null
  br i1 %cmp.do_exit.Clone1123, label %if.then1.do_exit.Clone1124, label %if.end2.do_exit.Clone1125

if.then1.do_exit.Clone1124:                       ; preds = %if.end.do_exit.Clone1122
  %603 = load i8*, i8** @env, align 4
  call void @free(i8* %603) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone1125

if.end2.do_exit.Clone1125:                        ; preds = %if.then1.do_exit.Clone1124, %if.end.do_exit.Clone1122
  %604 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone1126 = icmp ne i8** %604, null
  br i1 %cmp3.do_exit.Clone1126, label %if.then4.do_exit.Clone1127, label %if.end5.do_exit.Clone1128

if.then4.do_exit.Clone1127:                       ; preds = %if.end2.do_exit.Clone1125
  %605 = load i8**, i8*** @args, align 4
  %606 = bitcast i8** %605 to i8*
  call void @free(i8* %606) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone1128

if.end5.do_exit.Clone1128:                        ; preds = %if.then4.do_exit.Clone1127, %if.end2.do_exit.Clone1125
  %607 = load i32, i32* %exitcode.addr.do_exit.Clone1119, align 4
  call void @exit(i32 %607) #7
  unreachable

return.do_exit.Clone1129:                         ; No predecessors!
  br label %if.end.abort_gzip.Clone785.Split

if.end.abort_gzip.Clone785.Split:                 ; preds = %return.do_exit.Clone1129
  br label %if.end.read_error.Clone767.Split

if.end.read_error.Clone767.Split:                 ; preds = %if.end.abort_gzip.Clone785.Split
  br label %if.end7.fill_inbuf.Clone23.Split

if.end7.fill_inbuf.Clone23.Split:                 ; preds = %if.end.read_error.Clone767.Split
  br label %if.end8.fill_inbuf.Clone24

if.end8.fill_inbuf.Clone24:                       ; preds = %if.end7.fill_inbuf.Clone23.Split, %do.end.fill_inbuf.Clone18
  %608 = load i32, i32* @insize, align 4
  %609 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone25 = add i32 %609, %608
  store i32 %add9.fill_inbuf.Clone25, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %610 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone26 = zext i8 %610 to i32
  store i32 %conv.fill_inbuf.Clone26, i32* %retval.fill_inbuf.Clone2, align 4
  br label %return.fill_inbuf.Clone27

return.fill_inbuf.Clone27:                        ; preds = %if.end8.fill_inbuf.Clone24, %if.then6.fill_inbuf.Clone22
  %611 = load i32, i32* %retval.fill_inbuf.Clone2, align 4
  store i32 %611, i32* %RetValuePtr28
  br label %cond.false297.Split

cond.false297.Split:                              ; preds = %return.fill_inbuf.Clone27
  %RetValue29 = load i32, i32* %RetValuePtr28
  br label %cond.end299

cond.end299:                                      ; preds = %cond.false297.Split, %cond.true293
  %cond300 = phi i32 [ %conv296, %cond.true293 ], [ %RetValue29, %cond.false297.Split ]
  %conv301 = trunc i32 %cond300 to i8
  %612 = load i8*, i8** %p, align 4
  store i8 %conv301, i8* %612, align 1
  %613 = load i8*, i8** %p, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %613, i32 1
  store i8* %incdec.ptr, i8** %p, align 4
  %614 = load i8, i8* %613, align 1
  %conv302 = sext i8 %614 to i32
  %cmp303 = icmp eq i32 %conv302, 0
  br i1 %cmp303, label %if.then305, label %if.end306

if.then305:                                       ; preds = %cond.end299
  br label %for.end

if.end306:                                        ; preds = %cond.end299
  %615 = load i8*, i8** %p, align 4
  %cmp307 = icmp uge i8* %615, getelementptr inbounds (i8, i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0), i32 1024)
  br i1 %cmp307, label %if.then309, label %if.end310

if.then309:                                       ; preds = %if.end306
  br label %entry.error.Clone

entry.error.Clone:                                ; preds = %if.then309
  %m.addr.error.Clone = alloca i8*, align 4
  store i8* getelementptr inbounds ([39 x i8], [39 x i8]* @"??_C@_0CH@KGMHFPEH@corrupted?5input?5?9?9?5file?5name?5too@", i32 0, i32 0), i8** %m.addr.error.Clone, align 4
  %616 = load i8*, i8** %m.addr.error.Clone, align 4
  %617 = load i8*, i8** @progname, align 4
  %call.error.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx.error.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.error.Clone, i32 2
  %call1.error.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.error.Clone, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @"??_C@_0N@ODCEBLNH@?6?$CFs?3?5?$CFs?3?5?$CFs?6?$AA@", i32 0, i32 0), i8* %617, i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0), i8* %616)
  br label %entry.abort_gzip.Clone894

entry.abort_gzip.Clone894:                        ; preds = %entry.error.Clone
  %618 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone895 = icmp ne i32 %618, 0
  br i1 %tobool.abort_gzip.Clone895, label %if.then.abort_gzip.Clone896, label %if.end.abort_gzip.Clone899

if.then.abort_gzip.Clone896:                      ; preds = %entry.abort_gzip.Clone894
  %619 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone897 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %619)
  %call1.abort_gzip.Clone898 = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone899

if.end.abort_gzip.Clone899:                       ; preds = %if.then.abort_gzip.Clone896, %entry.abort_gzip.Clone894
  br label %entry.do_exit.Clone

entry.do_exit.Clone:                              ; preds = %if.end.abort_gzip.Clone899
  %exitcode.addr.do_exit.Clone = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone, align 4
  %620 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone = icmp ne i32 %620, 0
  br i1 %tobool.do_exit.Clone, label %if.then.do_exit.Clone, label %if.end.do_exit.Clone

if.then.do_exit.Clone:                            ; preds = %entry.do_exit.Clone
  %621 = load i32, i32* %exitcode.addr.do_exit.Clone, align 4
  call void @exit(i32 %621) #7
  unreachable

if.end.do_exit.Clone:                             ; preds = %entry.do_exit.Clone
  store i32 1, i32* @do_exit.in_exit, align 4
  %622 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone = icmp ne i8* %622, null
  br i1 %cmp.do_exit.Clone, label %if.then1.do_exit.Clone, label %if.end2.do_exit.Clone

if.then1.do_exit.Clone:                           ; preds = %if.end.do_exit.Clone
  %623 = load i8*, i8** @env, align 4
  call void @free(i8* %623) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone

if.end2.do_exit.Clone:                            ; preds = %if.then1.do_exit.Clone, %if.end.do_exit.Clone
  %624 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone = icmp ne i8** %624, null
  br i1 %cmp3.do_exit.Clone, label %if.then4.do_exit.Clone, label %if.end5.do_exit.Clone

if.then4.do_exit.Clone:                           ; preds = %if.end2.do_exit.Clone
  %625 = load i8**, i8*** @args, align 4
  %626 = bitcast i8** %625 to i8*
  call void @free(i8* %626) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone

if.end5.do_exit.Clone:                            ; preds = %if.then4.do_exit.Clone, %if.end2.do_exit.Clone
  %627 = load i32, i32* %exitcode.addr.do_exit.Clone, align 4
  call void @exit(i32 %627) #7
  unreachable

return.do_exit.Clone:                             ; No predecessors!
  br label %if.end.abort_gzip.Clone899.Split

if.end.abort_gzip.Clone899.Split:                 ; preds = %return.do_exit.Clone
  br label %entry.error.Clone.Split

entry.error.Clone.Split:                          ; preds = %if.end.abort_gzip.Clone899.Split
  br label %if.then309.Split

if.then309.Split:                                 ; preds = %entry.error.Clone.Split
  br label %if.end310

if.end310:                                        ; preds = %if.then309.Split, %if.end306
  br label %for.cond

for.end:                                          ; preds = %if.then305
  %628 = load i32, i32* @list, align 4
  %tobool311 = icmp ne i32 %628, 0
  br i1 %tobool311, label %if.end316, label %if.then312

if.then312:                                       ; preds = %for.end
  %629 = load i8*, i8** %base, align 4
  %tobool313 = icmp ne i8* %629, null
  br i1 %tobool313, label %if.then314, label %if.end315

if.then314:                                       ; preds = %if.then312
  store i32 0, i32* @list, align 4
  br label %if.end315

if.end315:                                        ; preds = %if.then314, %if.then312
  br label %if.end316

if.end316:                                        ; preds = %if.end315, %for.end
  br label %if.end317

if.end317:                                        ; preds = %if.end316, %do.end
  br label %if.end318

if.end318:                                        ; preds = %if.end317, %if.end260
  %630 = load i8, i8* %flags, align 1
  %conv319 = zext i8 %630 to i32
  %and320 = and i32 %conv319, 16
  %cmp321 = icmp ne i32 %and320, 0
  br i1 %cmp321, label %if.then323, label %if.end339

if.then323:                                       ; preds = %if.end318
  br label %while.cond324

while.cond324:                                    ; preds = %while.body337, %if.then323
  %631 = load i32, i32* @inptr, align 4
  %632 = load i32, i32* @insize, align 4
  %cmp325 = icmp ult i32 %631, %632
  br i1 %cmp325, label %cond.true327, label %cond.false331

cond.true327:                                     ; preds = %while.cond324
  %633 = load i32, i32* @inptr, align 4
  %inc328 = add i32 %633, 1
  store i32 %inc328, i32* @inptr, align 4
  %arrayidx329 = getelementptr inbounds [32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 %633
  %634 = load i8, i8* %arrayidx329, align 1
  %conv330 = zext i8 %634 to i32
  br label %cond.end333

cond.false331:                                    ; preds = %while.cond324
  br label %entry.fill_inbuf.Clone

entry.fill_inbuf.Clone:                           ; preds = %cond.false331
  %retval.fill_inbuf.Clone = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone = alloca i32, align 4
  %len.fill_inbuf.Clone = alloca i32, align 4
  store i32 0, i32* %eof_ok.addr.fill_inbuf.Clone, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone, align 4
  br label %do.body.fill_inbuf.Clone

do.body.fill_inbuf.Clone:                         ; preds = %do.cond.fill_inbuf.Clone, %entry.fill_inbuf.Clone
  %635 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone = sub i32 32768, %635
  %636 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %636
  %637 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone = call i32 @spec_read(i32 %637, i8* %add.ptr.fill_inbuf.Clone, i32 %sub.fill_inbuf.Clone)
  store i32 %call1.fill_inbuf.Clone, i32* %len.fill_inbuf.Clone, align 4
  %638 = load i32, i32* %len.fill_inbuf.Clone, align 4
  %cmp.fill_inbuf.Clone = icmp eq i32 %638, 0
  br i1 %cmp.fill_inbuf.Clone, label %if.then.fill_inbuf.Clone, label %lor.lhs.false.fill_inbuf.Clone

lor.lhs.false.fill_inbuf.Clone:                   ; preds = %do.body.fill_inbuf.Clone
  %639 = load i32, i32* %len.fill_inbuf.Clone, align 4
  %cmp2.fill_inbuf.Clone = icmp eq i32 %639, -1
  br i1 %cmp2.fill_inbuf.Clone, label %if.then.fill_inbuf.Clone, label %if.end.fill_inbuf.Clone

if.then.fill_inbuf.Clone:                         ; preds = %lor.lhs.false.fill_inbuf.Clone, %do.body.fill_inbuf.Clone
  br label %do.end.fill_inbuf.Clone

if.end.fill_inbuf.Clone:                          ; preds = %lor.lhs.false.fill_inbuf.Clone
  %640 = load i32, i32* %len.fill_inbuf.Clone, align 4
  %641 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone = add i32 %641, %640
  store i32 %add.fill_inbuf.Clone, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone

do.cond.fill_inbuf.Clone:                         ; preds = %if.end.fill_inbuf.Clone
  %642 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone = icmp ult i32 %642, 32768
  br i1 %cmp3.fill_inbuf.Clone, label %do.body.fill_inbuf.Clone, label %do.end.fill_inbuf.Clone

do.end.fill_inbuf.Clone:                          ; preds = %do.cond.fill_inbuf.Clone, %if.then.fill_inbuf.Clone
  %643 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone = icmp eq i32 %643, 0
  br i1 %cmp4.fill_inbuf.Clone, label %if.then5.fill_inbuf.Clone, label %if.end8.fill_inbuf.Clone

if.then5.fill_inbuf.Clone:                        ; preds = %do.end.fill_inbuf.Clone
  %644 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone, align 4
  %tobool.fill_inbuf.Clone = icmp ne i32 %644, 0
  br i1 %tobool.fill_inbuf.Clone, label %if.then6.fill_inbuf.Clone, label %if.end7.fill_inbuf.Clone

if.then6.fill_inbuf.Clone:                        ; preds = %if.then5.fill_inbuf.Clone
  store i32 -1, i32* %retval.fill_inbuf.Clone, align 4
  br label %return.fill_inbuf.Clone

if.end7.fill_inbuf.Clone:                         ; preds = %if.then5.fill_inbuf.Clone
  br label %entry.read_error.Clone768

entry.read_error.Clone768:                        ; preds = %if.end7.fill_inbuf.Clone
  %645 = load i8*, i8** @progname, align 4
  %call.read_error.Clone769 = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone770 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone769, i32 2
  %call1.read_error.Clone771 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone770, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %645)
  %call2.read_error.Clone772 = call i32* @_errno()
  %646 = load i32, i32* %call2.read_error.Clone772, align 4
  %cmp.read_error.Clone773 = icmp ne i32 %646, 0
  br i1 %cmp.read_error.Clone773, label %if.then.read_error.Clone774, label %if.else.read_error.Clone775

if.then.read_error.Clone774:                      ; preds = %entry.read_error.Clone768
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone779

if.else.read_error.Clone775:                      ; preds = %entry.read_error.Clone768
  %call3.read_error.Clone776 = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone777 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone776, i32 2
  %call5.read_error.Clone778 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone777, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone779

if.end.read_error.Clone779:                       ; preds = %if.else.read_error.Clone775, %if.then.read_error.Clone774
  br label %entry.abort_gzip.Clone

entry.abort_gzip.Clone:                           ; preds = %if.end.read_error.Clone779
  %647 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone = icmp ne i32 %647, 0
  br i1 %tobool.abort_gzip.Clone, label %if.then.abort_gzip.Clone, label %if.end.abort_gzip.Clone

if.then.abort_gzip.Clone:                         ; preds = %entry.abort_gzip.Clone
  %648 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %648)
  %call1.abort_gzip.Clone = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone

if.end.abort_gzip.Clone:                          ; preds = %if.then.abort_gzip.Clone, %entry.abort_gzip.Clone
  br label %entry.do_exit.Clone1130

entry.do_exit.Clone1130:                          ; preds = %if.end.abort_gzip.Clone
  %exitcode.addr.do_exit.Clone1131 = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone1131, align 4
  %649 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone1132 = icmp ne i32 %649, 0
  br i1 %tobool.do_exit.Clone1132, label %if.then.do_exit.Clone1133, label %if.end.do_exit.Clone1134

if.then.do_exit.Clone1133:                        ; preds = %entry.do_exit.Clone1130
  %650 = load i32, i32* %exitcode.addr.do_exit.Clone1131, align 4
  call void @exit(i32 %650) #7
  unreachable

if.end.do_exit.Clone1134:                         ; preds = %entry.do_exit.Clone1130
  store i32 1, i32* @do_exit.in_exit, align 4
  %651 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone1135 = icmp ne i8* %651, null
  br i1 %cmp.do_exit.Clone1135, label %if.then1.do_exit.Clone1136, label %if.end2.do_exit.Clone1137

if.then1.do_exit.Clone1136:                       ; preds = %if.end.do_exit.Clone1134
  %652 = load i8*, i8** @env, align 4
  call void @free(i8* %652) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone1137

if.end2.do_exit.Clone1137:                        ; preds = %if.then1.do_exit.Clone1136, %if.end.do_exit.Clone1134
  %653 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone1138 = icmp ne i8** %653, null
  br i1 %cmp3.do_exit.Clone1138, label %if.then4.do_exit.Clone1139, label %if.end5.do_exit.Clone1140

if.then4.do_exit.Clone1139:                       ; preds = %if.end2.do_exit.Clone1137
  %654 = load i8**, i8*** @args, align 4
  %655 = bitcast i8** %654 to i8*
  call void @free(i8* %655) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone1140

if.end5.do_exit.Clone1140:                        ; preds = %if.then4.do_exit.Clone1139, %if.end2.do_exit.Clone1137
  %656 = load i32, i32* %exitcode.addr.do_exit.Clone1131, align 4
  call void @exit(i32 %656) #7
  unreachable

return.do_exit.Clone1141:                         ; No predecessors!
  br label %if.end.abort_gzip.Clone.Split

if.end.abort_gzip.Clone.Split:                    ; preds = %return.do_exit.Clone1141
  br label %if.end.read_error.Clone779.Split

if.end.read_error.Clone779.Split:                 ; preds = %if.end.abort_gzip.Clone.Split
  br label %if.end7.fill_inbuf.Clone.Split

if.end7.fill_inbuf.Clone.Split:                   ; preds = %if.end.read_error.Clone779.Split
  br label %if.end8.fill_inbuf.Clone

if.end8.fill_inbuf.Clone:                         ; preds = %if.end7.fill_inbuf.Clone.Split, %do.end.fill_inbuf.Clone
  %657 = load i32, i32* @insize, align 4
  %658 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone = add i32 %658, %657
  store i32 %add9.fill_inbuf.Clone, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %659 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone = zext i8 %659 to i32
  store i32 %conv.fill_inbuf.Clone, i32* %retval.fill_inbuf.Clone, align 4
  br label %return.fill_inbuf.Clone

return.fill_inbuf.Clone:                          ; preds = %if.end8.fill_inbuf.Clone, %if.then6.fill_inbuf.Clone
  %660 = load i32, i32* %retval.fill_inbuf.Clone, align 4
  store i32 %660, i32* %RetValuePtr
  br label %cond.false331.Split

cond.false331.Split:                              ; preds = %return.fill_inbuf.Clone
  %RetValue = load i32, i32* %RetValuePtr
  br label %cond.end333

cond.end333:                                      ; preds = %cond.false331.Split, %cond.true327
  %cond334 = phi i32 [ %conv330, %cond.true327 ], [ %RetValue, %cond.false331.Split ]
  %cmp335 = icmp ne i32 %cond334, 0
  br i1 %cmp335, label %while.body337, label %while.end338

while.body337:                                    ; preds = %cond.end333
  br label %while.cond324

while.end338:                                     ; preds = %cond.end333
  br label %if.end339

if.end339:                                        ; preds = %while.end338, %if.end318
  %661 = load i32, i32* @part_nb, align 4
  %cmp340 = icmp eq i32 %661, 1
  br i1 %cmp340, label %if.then342, label %if.end343

if.then342:                                       ; preds = %if.end339
  %662 = load i32, i32* @inptr, align 4
  %add = add i32 %662, 8
  store i32 %add, i32* @header_bytes, align 4
  br label %if.end343

if.end343:                                        ; preds = %if.then342, %if.end339
  br label %if.end392

if.else344:                                       ; preds = %lor.lhs.false
  %arraydecay345 = getelementptr inbounds [2 x i8], [2 x i8]* %magic, i32 0, i32 0
  %call346 = call i32 @memcmp(i8* %arraydecay345, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"??_C@_04CLPBGDEI@PK?$AD?$AE?$AA@", i32 0, i32 0), i32 2)
  %cmp347 = icmp eq i32 %call346, 0
  br i1 %cmp347, label %land.lhs.true349, label %if.else362

land.lhs.true349:                                 ; preds = %if.else344
  %663 = load i32, i32* @inptr, align 4
  %cmp350 = icmp eq i32 %663, 2
  br i1 %cmp350, label %land.lhs.true352, label %if.else362

land.lhs.true352:                                 ; preds = %land.lhs.true349
  %call353 = call i32 @memcmp(i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"??_C@_04CLPBGDEI@PK?$AD?$AE?$AA@", i32 0, i32 0), i32 4)
  %cmp354 = icmp eq i32 %call353, 0
  br i1 %cmp354, label %if.then356, label %if.else362

if.then356:                                       ; preds = %land.lhs.true352
  store i32 0, i32* @inptr, align 4
  store i32 (...)* bitcast (i32 (i32, i32)* @unzip to i32 (...)*), i32 (...)** @work, align 4
  %664 = load i32, i32* %in.addr, align 4
  %call357 = call i32 @check_zipfile(i32 %664)
  %cmp358 = icmp ne i32 %call357, 0
  br i1 %cmp358, label %if.then360, label %if.end361

if.then360:                                       ; preds = %if.then356
  store i32 -1, i32* %retval, align 4
  br label %return

if.end361:                                        ; preds = %if.then356
  store i32 1, i32* @last_member, align 4
  br label %if.end391

if.else362:                                       ; preds = %land.lhs.true352, %land.lhs.true349, %if.else344
  %arraydecay363 = getelementptr inbounds [2 x i8], [2 x i8]* %magic, i32 0, i32 0
  %call364 = call i32 @memcmp(i8* %arraydecay363, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @"??_C@_02MDIFPNHP@?$BP?$BO?$AA@", i32 0, i32 0), i32 2)
  %cmp365 = icmp eq i32 %call364, 0
  br i1 %cmp365, label %if.then367, label %if.else368

if.then367:                                       ; preds = %if.else362
  store i32 (...)* bitcast (i32 (i32, i32)* @unpack to i32 (...)*), i32 (...)** @work, align 4
  store i32 2, i32* @method, align 4
  br label %if.end390

if.else368:                                       ; preds = %if.else362
  %arraydecay369 = getelementptr inbounds [2 x i8], [2 x i8]* %magic, i32 0, i32 0
  %call370 = call i32 @memcmp(i8* %arraydecay369, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @"??_C@_02NDCLDGPH@?$BP?$JN?$AA@", i32 0, i32 0), i32 2)
  %cmp371 = icmp eq i32 %call370, 0
  br i1 %cmp371, label %if.then373, label %if.else374

if.then373:                                       ; preds = %if.else368
  store i32 (...)* bitcast (i32 (i32, i32)* @unlzw to i32 (...)*), i32 (...)** @work, align 4
  store i32 1, i32* @method, align 4
  store i32 1, i32* @last_member, align 4
  br label %if.end389

if.else374:                                       ; preds = %if.else368
  %arraydecay375 = getelementptr inbounds [2 x i8], [2 x i8]* %magic, i32 0, i32 0
  %call376 = call i32 @memcmp(i8* %arraydecay375, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @"??_C@_02LJMDHOEJ@?$BP?$KA?$AA@", i32 0, i32 0), i32 2)
  %cmp377 = icmp eq i32 %call376, 0
  br i1 %cmp377, label %if.then379, label %CallOutFuncBB

if.then379:                                       ; preds = %if.else374
  store i32 (...)* bitcast (i32 (i32, i32)* @unlzh to i32 (...)*), i32 (...)** @work, align 4
  store i32 3, i32* @method, align 4
  store i32 1, i32* @last_member, align 4
  br label %if.end388

CallOutFuncBB:                                    ; preds = %if.else374
  call void @if.else380.OutLineFunc()
  br label %if.end388

if.end388:                                        ; preds = %CallOutFuncBB, %if.then379
  br label %if.end389

if.end389:                                        ; preds = %if.end388, %if.then373
  br label %if.end390

if.end390:                                        ; preds = %if.end389, %if.then367
  br label %if.end391

if.end391:                                        ; preds = %if.end390, %if.end361
  br label %if.end392

if.end392:                                        ; preds = %if.end391, %if.end343
  %665 = load i32, i32* @method, align 4
  %cmp393 = icmp sge i32 %665, 0
  br i1 %cmp393, label %if.then395, label %if.end396

if.then395:                                       ; preds = %if.end392
  %666 = load i32, i32* @method, align 4
  store i32 %666, i32* %retval, align 4
  br label %return

if.end396:                                        ; preds = %if.end392
  %667 = load i32, i32* @part_nb, align 4
  %cmp397 = icmp eq i32 %667, 1
  br i1 %cmp397, label %if.then399, label %if.else403

if.then399:                                       ; preds = %if.end396
  %668 = load i8*, i8** @progname, align 4
  %call400 = call %struct._iobuf* @__iob_func()
  %arrayidx401 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call400, i32 2
  %call402 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx401, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @"??_C@_0BN@DMMHKKEM@?6?$CFs?3?5?$CFs?3?5not?5in?5gzip?5format?6?$AA@", i32 0, i32 0), i8* %668, i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  store i32 1, i32* @exit_code, align 4
  store i32 -1, i32* %retval, align 4
  br label %return

if.else403:                                       ; preds = %if.end396
  %669 = load i32, i32* @quiet, align 4
  %tobool404 = icmp ne i32 %669, 0
  br i1 %tobool404, label %if.end409, label %if.then405

if.then405:                                       ; preds = %if.else403
  %670 = load i8*, i8** @progname, align 4
  %call406 = call %struct._iobuf* @__iob_func()
  %arrayidx407 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call406, i32 2
  %call408 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx407, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @"??_C@_0DF@KPBMJBGP@?6?$CFs?3?5?$CFs?3?5decompression?5OK?0?5trail@", i32 0, i32 0), i8* %670, i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end409

if.end409:                                        ; preds = %if.then405, %if.else403
  %671 = load i32, i32* @exit_code, align 4
  %cmp410 = icmp eq i32 %671, 0
  br i1 %cmp410, label %if.then412, label %if.end413

if.then412:                                       ; preds = %if.end409
  store i32 2, i32* @exit_code, align 4
  br label %if.end413

if.end413:                                        ; preds = %if.then412, %if.end409
  store i32 -2, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end413, %if.then399, %if.then395, %if.then360, %if.then109, %if.then95, %if.then80, %if.then61
  %672 = load i32, i32* %retval, align 4
  ret i32 %672
}

declare dso_local i32 @memcmp(i8*, i8*, i32) #3

declare dso_local i32 @close(...) #3

declare dllimport i32 @unlink(i8*) #3

; Function Attrs: noreturn
declare dllimport void @exit(i32) #4

; Function Attrs: argmemonly nounwind
declare dllimport void @free(i8*) #5

; Function Attrs: noinline optnone sspstrong
define dso_local i32 @huft_build(i32* %b, i32 %n, i32 %s, i16* %d, i16* %e, %struct.huft** %t, i32* %m) #1 {
entry:
  %retval = alloca i32, align 4
  %m.addr = alloca i32*, align 4
  %t.addr = alloca %struct.huft**, align 4
  %e.addr = alloca i16*, align 4
  %d.addr = alloca i16*, align 4
  %s.addr = alloca i32, align 4
  %n.addr = alloca i32, align 4
  %b.addr = alloca i32*, align 4
  %a = alloca i32, align 4
  %c = alloca [17 x i32], align 4
  %f = alloca i32, align 4
  %g = alloca i32, align 4
  %h = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %l = alloca i32, align 4
  %p = alloca i32*, align 4
  %q = alloca %struct.huft*, align 4
  %r = alloca %struct.huft, align 4
  %u = alloca [16 x %struct.huft*], align 4
  %v = alloca [288 x i32], align 4
  %w = alloca i32, align 4
  %x = alloca [17 x i32], align 4
  %xp = alloca i32*, align 4
  %y = alloca i32, align 4
  %z = alloca i32, align 4
  store i32* %m, i32** %m.addr, align 4
  store %struct.huft** %t, %struct.huft*** %t.addr, align 4
  store i16* %e, i16** %e.addr, align 4
  store i16* %d, i16** %d.addr, align 4
  store i32 %s, i32* %s.addr, align 4
  store i32 %n, i32* %n.addr, align 4
  store i32* %b, i32** %b.addr, align 4
  %arraydecay = getelementptr inbounds [17 x i32], [17 x i32]* %c, i32 0, i32 0
  %0 = bitcast i32* %arraydecay to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %0, i8 0, i32 68, i1 false)
  %1 = load i32*, i32** %b.addr, align 4
  store i32* %1, i32** %p, align 4
  %2 = load i32, i32* %n.addr, align 4
  store i32 %2, i32* %i, align 4
  %RetValuePtr = alloca i32, align 4
  br label %do.body

do.body:                                          ; preds = %do.cond, %entry
  %3 = load i32*, i32** %p, align 4
  %4 = load i32, i32* %3, align 4
  %arrayidx = getelementptr inbounds [17 x i32], [17 x i32]* %c, i32 0, i32 %4
  %5 = load i32, i32* %arrayidx, align 4
  %inc = add i32 %5, 1
  store i32 %inc, i32* %arrayidx, align 4
  %6 = load i32*, i32** %p, align 4
  %incdec.ptr = getelementptr inbounds i32, i32* %6, i32 1
  store i32* %incdec.ptr, i32** %p, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %i, align 4
  %dec = add i32 %7, -1
  store i32 %dec, i32* %i, align 4
  %tobool = icmp ne i32 %dec, 0
  br i1 %tobool, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  %arrayidx1 = getelementptr inbounds [17 x i32], [17 x i32]* %c, i32 0, i32 0
  %8 = load i32, i32* %arrayidx1, align 4
  %9 = load i32, i32* %n.addr, align 4
  %cmp = icmp eq i32 %8, %9
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %do.end
  %10 = load %struct.huft**, %struct.huft*** %t.addr, align 4
  store %struct.huft* null, %struct.huft** %10, align 4
  %11 = load i32*, i32** %m.addr, align 4
  store i32 0, i32* %11, align 4
  store i32 0, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %do.end
  %12 = load i32*, i32** %m.addr, align 4
  %13 = load i32, i32* %12, align 4
  store i32 %13, i32* %l, align 4
  store i32 1, i32* %j, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %14 = load i32, i32* %j, align 4
  %cmp2 = icmp ule i32 %14, 16
  br i1 %cmp2, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %15 = load i32, i32* %j, align 4
  %arrayidx3 = getelementptr inbounds [17 x i32], [17 x i32]* %c, i32 0, i32 %15
  %16 = load i32, i32* %arrayidx3, align 4
  %tobool4 = icmp ne i32 %16, 0
  br i1 %tobool4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %for.body
  br label %for.end

if.end6:                                          ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end6
  %17 = load i32, i32* %j, align 4
  %inc7 = add i32 %17, 1
  store i32 %inc7, i32* %j, align 4
  br label %for.cond

for.end:                                          ; preds = %if.then5, %for.cond
  %18 = load i32, i32* %j, align 4
  store i32 %18, i32* %k, align 4
  %19 = load i32, i32* %l, align 4
  %20 = load i32, i32* %j, align 4
  %cmp8 = icmp ult i32 %19, %20
  br i1 %cmp8, label %if.then9, label %if.end10

if.then9:                                         ; preds = %for.end
  %21 = load i32, i32* %j, align 4
  store i32 %21, i32* %l, align 4
  br label %if.end10

if.end10:                                         ; preds = %if.then9, %for.end
  store i32 16, i32* %i, align 4
  br label %for.cond11

for.cond11:                                       ; preds = %for.inc18, %if.end10
  %22 = load i32, i32* %i, align 4
  %tobool12 = icmp ne i32 %22, 0
  br i1 %tobool12, label %for.body13, label %for.end20

for.body13:                                       ; preds = %for.cond11
  %23 = load i32, i32* %i, align 4
  %arrayidx14 = getelementptr inbounds [17 x i32], [17 x i32]* %c, i32 0, i32 %23
  %24 = load i32, i32* %arrayidx14, align 4
  %tobool15 = icmp ne i32 %24, 0
  br i1 %tobool15, label %if.then16, label %if.end17

if.then16:                                        ; preds = %for.body13
  br label %for.end20

if.end17:                                         ; preds = %for.body13
  br label %for.inc18

for.inc18:                                        ; preds = %if.end17
  %25 = load i32, i32* %i, align 4
  %dec19 = add i32 %25, -1
  store i32 %dec19, i32* %i, align 4
  br label %for.cond11

for.end20:                                        ; preds = %if.then16, %for.cond11
  %26 = load i32, i32* %i, align 4
  store i32 %26, i32* %g, align 4
  %27 = load i32, i32* %l, align 4
  %28 = load i32, i32* %i, align 4
  %cmp21 = icmp ugt i32 %27, %28
  br i1 %cmp21, label %if.then22, label %if.end23

if.then22:                                        ; preds = %for.end20
  %29 = load i32, i32* %i, align 4
  store i32 %29, i32* %l, align 4
  br label %if.end23

if.end23:                                         ; preds = %if.then22, %for.end20
  %30 = load i32, i32* %l, align 4
  %31 = load i32*, i32** %m.addr, align 4
  store i32 %30, i32* %31, align 4
  %32 = load i32, i32* %j, align 4
  %shl = shl i32 1, %32
  store i32 %shl, i32* %y, align 4
  br label %for.cond24

for.cond24:                                       ; preds = %for.inc31, %if.end23
  %33 = load i32, i32* %j, align 4
  %34 = load i32, i32* %i, align 4
  %cmp25 = icmp ult i32 %33, %34
  br i1 %cmp25, label %for.body26, label %for.end34

for.body26:                                       ; preds = %for.cond24
  %35 = load i32, i32* %j, align 4
  %arrayidx27 = getelementptr inbounds [17 x i32], [17 x i32]* %c, i32 0, i32 %35
  %36 = load i32, i32* %arrayidx27, align 4
  %37 = load i32, i32* %y, align 4
  %sub = sub i32 %37, %36
  store i32 %sub, i32* %y, align 4
  %cmp28 = icmp slt i32 %sub, 0
  br i1 %cmp28, label %if.then29, label %if.end30

if.then29:                                        ; preds = %for.body26
  store i32 2, i32* %retval, align 4
  br label %return

if.end30:                                         ; preds = %for.body26
  br label %for.inc31

for.inc31:                                        ; preds = %if.end30
  %38 = load i32, i32* %j, align 4
  %inc32 = add i32 %38, 1
  store i32 %inc32, i32* %j, align 4
  %39 = load i32, i32* %y, align 4
  %shl33 = shl i32 %39, 1
  store i32 %shl33, i32* %y, align 4
  br label %for.cond24

for.end34:                                        ; preds = %for.cond24
  %40 = load i32, i32* %i, align 4
  %arrayidx35 = getelementptr inbounds [17 x i32], [17 x i32]* %c, i32 0, i32 %40
  %41 = load i32, i32* %arrayidx35, align 4
  %42 = load i32, i32* %y, align 4
  %sub36 = sub i32 %42, %41
  store i32 %sub36, i32* %y, align 4
  %cmp37 = icmp slt i32 %sub36, 0
  br i1 %cmp37, label %if.then38, label %if.end39

if.then38:                                        ; preds = %for.end34
  store i32 2, i32* %retval, align 4
  br label %return

if.end39:                                         ; preds = %for.end34
  %43 = load i32, i32* %y, align 4
  %44 = load i32, i32* %i, align 4
  %arrayidx40 = getelementptr inbounds [17 x i32], [17 x i32]* %c, i32 0, i32 %44
  %45 = load i32, i32* %arrayidx40, align 4
  %add = add i32 %45, %43
  store i32 %add, i32* %arrayidx40, align 4
  store i32 0, i32* %j, align 4
  %arrayidx41 = getelementptr inbounds [17 x i32], [17 x i32]* %x, i32 0, i32 1
  store i32 0, i32* %arrayidx41, align 4
  %arraydecay42 = getelementptr inbounds [17 x i32], [17 x i32]* %c, i32 0, i32 0
  %add.ptr = getelementptr inbounds i32, i32* %arraydecay42, i32 1
  store i32* %add.ptr, i32** %p, align 4
  %arraydecay43 = getelementptr inbounds [17 x i32], [17 x i32]* %x, i32 0, i32 0
  %add.ptr44 = getelementptr inbounds i32, i32* %arraydecay43, i32 2
  store i32* %add.ptr44, i32** %xp, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end39
  %46 = load i32, i32* %i, align 4
  %dec45 = add i32 %46, -1
  store i32 %dec45, i32* %i, align 4
  %tobool46 = icmp ne i32 %dec45, 0
  br i1 %tobool46, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %47 = load i32*, i32** %p, align 4
  %incdec.ptr47 = getelementptr inbounds i32, i32* %47, i32 1
  store i32* %incdec.ptr47, i32** %p, align 4
  %48 = load i32, i32* %47, align 4
  %49 = load i32, i32* %j, align 4
  %add48 = add i32 %49, %48
  store i32 %add48, i32* %j, align 4
  %50 = load i32*, i32** %xp, align 4
  %incdec.ptr49 = getelementptr inbounds i32, i32* %50, i32 1
  store i32* %incdec.ptr49, i32** %xp, align 4
  store i32 %add48, i32* %50, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %51 = load i32*, i32** %b.addr, align 4
  store i32* %51, i32** %p, align 4
  store i32 0, i32* %i, align 4
  br label %do.body50

do.body50:                                        ; preds = %do.cond58, %while.end
  %52 = load i32*, i32** %p, align 4
  %incdec.ptr51 = getelementptr inbounds i32, i32* %52, i32 1
  store i32* %incdec.ptr51, i32** %p, align 4
  %53 = load i32, i32* %52, align 4
  store i32 %53, i32* %j, align 4
  %cmp52 = icmp ne i32 %53, 0
  br i1 %cmp52, label %if.then53, label %if.end57

if.then53:                                        ; preds = %do.body50
  %54 = load i32, i32* %i, align 4
  %55 = load i32, i32* %j, align 4
  %arrayidx54 = getelementptr inbounds [17 x i32], [17 x i32]* %x, i32 0, i32 %55
  %56 = load i32, i32* %arrayidx54, align 4
  %inc55 = add i32 %56, 1
  store i32 %inc55, i32* %arrayidx54, align 4
  %arrayidx56 = getelementptr inbounds [288 x i32], [288 x i32]* %v, i32 0, i32 %56
  store i32 %54, i32* %arrayidx56, align 4
  br label %if.end57

if.end57:                                         ; preds = %if.then53, %do.body50
  br label %do.cond58

do.cond58:                                        ; preds = %if.end57
  %57 = load i32, i32* %i, align 4
  %inc59 = add i32 %57, 1
  store i32 %inc59, i32* %i, align 4
  %58 = load i32, i32* %n.addr, align 4
  %cmp60 = icmp ult i32 %inc59, %58
  br i1 %cmp60, label %do.body50, label %do.end61

do.end61:                                         ; preds = %do.cond58
  store i32 0, i32* %i, align 4
  %arrayidx62 = getelementptr inbounds [17 x i32], [17 x i32]* %x, i32 0, i32 0
  store i32 0, i32* %arrayidx62, align 4
  %arraydecay63 = getelementptr inbounds [288 x i32], [288 x i32]* %v, i32 0, i32 0
  store i32* %arraydecay63, i32** %p, align 4
  store i32 -1, i32* %h, align 4
  %59 = load i32, i32* %l, align 4
  %sub64 = sub nsw i32 0, %59
  store i32 %sub64, i32* %w, align 4
  %arrayidx65 = getelementptr inbounds [16 x %struct.huft*], [16 x %struct.huft*]* %u, i32 0, i32 0
  store %struct.huft* null, %struct.huft** %arrayidx65, align 4
  store %struct.huft* null, %struct.huft** %q, align 4
  store i32 0, i32* %z, align 4
  br label %for.cond66

for.cond66:                                       ; preds = %for.inc200, %do.end61
  %60 = load i32, i32* %k, align 4
  %61 = load i32, i32* %g, align 4
  %cmp67 = icmp sle i32 %60, %61
  br i1 %cmp67, label %for.body68, label %for.end202

for.body68:                                       ; preds = %for.cond66
  %62 = load i32, i32* %k, align 4
  %arrayidx69 = getelementptr inbounds [17 x i32], [17 x i32]* %c, i32 0, i32 %62
  %63 = load i32, i32* %arrayidx69, align 4
  store i32 %63, i32* %a, align 4
  br label %while.cond70

while.cond70:                                     ; preds = %CallOutFuncBB, %for.body68
  %64 = load i32, i32* %a, align 4
  %dec71 = add i32 %64, -1
  store i32 %dec71, i32* %a, align 4
  %tobool72 = icmp ne i32 %64, 0
  br i1 %tobool72, label %while.body73, label %while.end199

while.body73:                                     ; preds = %while.cond70
  br label %while.cond74

while.cond74:                                     ; preds = %if.end133, %while.body73
  %65 = load i32, i32* %k, align 4
  %66 = load i32, i32* %w, align 4
  %67 = load i32, i32* %l, align 4
  %add75 = add nsw i32 %66, %67
  %cmp76 = icmp sgt i32 %65, %add75
  br i1 %cmp76, label %while.body77, label %while.end134

while.body77:                                     ; preds = %while.cond74
  %68 = load i32, i32* %h, align 4
  %inc78 = add nsw i32 %68, 1
  store i32 %inc78, i32* %h, align 4
  %69 = load i32, i32* %l, align 4
  %70 = load i32, i32* %w, align 4
  %add79 = add nsw i32 %70, %69
  store i32 %add79, i32* %w, align 4
  %71 = load i32, i32* %g, align 4
  %72 = load i32, i32* %w, align 4
  %sub80 = sub nsw i32 %71, %72
  store i32 %sub80, i32* %z, align 4
  %73 = load i32, i32* %l, align 4
  %cmp81 = icmp ugt i32 %sub80, %73
  br i1 %cmp81, label %cond.true, label %cond.false

cond.true:                                        ; preds = %while.body77
  %74 = load i32, i32* %l, align 4
  br label %cond.end

cond.false:                                       ; preds = %while.body77
  %75 = load i32, i32* %z, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %74, %cond.true ], [ %75, %cond.false ]
  store i32 %cond, i32* %z, align 4
  %76 = load i32, i32* %k, align 4
  %77 = load i32, i32* %w, align 4
  %sub82 = sub nsw i32 %76, %77
  store i32 %sub82, i32* %j, align 4
  %shl83 = shl i32 1, %sub82
  store i32 %shl83, i32* %f, align 4
  %78 = load i32, i32* %a, align 4
  %add84 = add i32 %78, 1
  %cmp85 = icmp ugt i32 %shl83, %add84
  br i1 %cmp85, label %if.then86, label %if.end102

if.then86:                                        ; preds = %cond.end
  %79 = load i32, i32* %a, align 4
  %add87 = add i32 %79, 1
  %80 = load i32, i32* %f, align 4
  %sub88 = sub i32 %80, %add87
  store i32 %sub88, i32* %f, align 4
  %arraydecay89 = getelementptr inbounds [17 x i32], [17 x i32]* %c, i32 0, i32 0
  %81 = load i32, i32* %k, align 4
  %add.ptr90 = getelementptr inbounds i32, i32* %arraydecay89, i32 %81
  store i32* %add.ptr90, i32** %xp, align 4
  br label %while.cond91

while.cond91:                                     ; preds = %if.end99, %if.then86
  %82 = load i32, i32* %j, align 4
  %inc92 = add i32 %82, 1
  store i32 %inc92, i32* %j, align 4
  %83 = load i32, i32* %z, align 4
  %cmp93 = icmp ult i32 %inc92, %83
  br i1 %cmp93, label %while.body94, label %while.end101

while.body94:                                     ; preds = %while.cond91
  %84 = load i32, i32* %f, align 4
  %shl95 = shl i32 %84, 1
  store i32 %shl95, i32* %f, align 4
  %85 = load i32*, i32** %xp, align 4
  %incdec.ptr96 = getelementptr inbounds i32, i32* %85, i32 1
  store i32* %incdec.ptr96, i32** %xp, align 4
  %86 = load i32, i32* %incdec.ptr96, align 4
  %cmp97 = icmp ule i32 %shl95, %86
  br i1 %cmp97, label %if.then98, label %if.end99

if.then98:                                        ; preds = %while.body94
  br label %while.end101

if.end99:                                         ; preds = %while.body94
  %87 = load i32*, i32** %xp, align 4
  %88 = load i32, i32* %87, align 4
  %89 = load i32, i32* %f, align 4
  %sub100 = sub i32 %89, %88
  store i32 %sub100, i32* %f, align 4
  br label %while.cond91

while.end101:                                     ; preds = %if.then98, %while.cond91
  br label %if.end102

if.end102:                                        ; preds = %while.end101, %cond.end
  %90 = load i32, i32* %j, align 4
  %shl103 = shl i32 1, %90
  store i32 %shl103, i32* %z, align 4
  %91 = load i32, i32* %z, align 4
  %add104 = add i32 %91, 1
  %mul = mul i32 %add104, 8
  %call = call noalias i8* @malloc(i32 %mul) #2
  %92 = bitcast i8* %call to %struct.huft*
  store %struct.huft* %92, %struct.huft** %q, align 4
  %cmp105 = icmp eq %struct.huft* %92, null
  br i1 %cmp105, label %if.then106, label %if.end112

if.then106:                                       ; preds = %if.end102
  %93 = load i32, i32* %h, align 4
  %tobool107 = icmp ne i32 %93, 0
  br i1 %tobool107, label %if.then108, label %if.end111

if.then108:                                       ; preds = %if.then106
  %arrayidx109 = getelementptr inbounds [16 x %struct.huft*], [16 x %struct.huft*]* %u, i32 0, i32 0
  %94 = load %struct.huft*, %struct.huft** %arrayidx109, align 4
  br label %entry.huft_free.Clone

entry.huft_free.Clone:                            ; preds = %if.then108
  %t.addr.huft_free.Clone = alloca %struct.huft*, align 4
  %p.huft_free.Clone = alloca %struct.huft*, align 4
  %q.huft_free.Clone = alloca %struct.huft*, align 4
  store %struct.huft* %94, %struct.huft** %t.addr.huft_free.Clone, align 4
  %95 = load %struct.huft*, %struct.huft** %t.addr.huft_free.Clone, align 4
  store %struct.huft* %95, %struct.huft** %p.huft_free.Clone, align 4
  br label %while.cond.huft_free.Clone

while.cond.huft_free.Clone:                       ; preds = %while.body.huft_free.Clone, %entry.huft_free.Clone
  %96 = load %struct.huft*, %struct.huft** %p.huft_free.Clone, align 4
  %cmp.huft_free.Clone = icmp ne %struct.huft* %96, null
  br i1 %cmp.huft_free.Clone, label %while.body.huft_free.Clone, label %while.end.huft_free.Clone

while.body.huft_free.Clone:                       ; preds = %while.cond.huft_free.Clone
  %97 = load %struct.huft*, %struct.huft** %p.huft_free.Clone, align 4
  %incdec.ptr.huft_free.Clone = getelementptr inbounds %struct.huft, %struct.huft* %97, i32 -1
  store %struct.huft* %incdec.ptr.huft_free.Clone, %struct.huft** %p.huft_free.Clone, align 4
  %v.huft_free.Clone = getelementptr inbounds %struct.huft, %struct.huft* %incdec.ptr.huft_free.Clone, i32 0, i32 2
  %t1.huft_free.Clone = bitcast %union.anon* %v.huft_free.Clone to %struct.huft**
  %98 = load %struct.huft*, %struct.huft** %t1.huft_free.Clone, align 4
  store %struct.huft* %98, %struct.huft** %q.huft_free.Clone, align 4
  %99 = load %struct.huft*, %struct.huft** %p.huft_free.Clone, align 4
  %100 = bitcast %struct.huft* %99 to i8*
  call void @free(i8* %100) #2
  %101 = load %struct.huft*, %struct.huft** %q.huft_free.Clone, align 4
  store %struct.huft* %101, %struct.huft** %p.huft_free.Clone, align 4
  br label %while.cond.huft_free.Clone

while.end.huft_free.Clone:                        ; preds = %while.cond.huft_free.Clone
  store i32 0, i32* %RetValuePtr
  br label %if.then108.Split

if.then108.Split:                                 ; preds = %while.end.huft_free.Clone
  %RetValue = load i32, i32* %RetValuePtr
  br label %if.end111

if.end111:                                        ; preds = %if.then108.Split, %if.then106
  store i32 3, i32* %retval, align 4
  br label %return

if.end112:                                        ; preds = %if.end102
  %102 = load i32, i32* %z, align 4
  %add113 = add i32 %102, 1
  %103 = load i32, i32* @hufts, align 4
  %add114 = add i32 %103, %add113
  store i32 %add114, i32* @hufts, align 4
  %104 = load %struct.huft*, %struct.huft** %q, align 4
  %add.ptr115 = getelementptr inbounds %struct.huft, %struct.huft* %104, i32 1
  %105 = load %struct.huft**, %struct.huft*** %t.addr, align 4
  store %struct.huft* %add.ptr115, %struct.huft** %105, align 4
  %106 = load %struct.huft*, %struct.huft** %q, align 4
  %v116 = getelementptr inbounds %struct.huft, %struct.huft* %106, i32 0, i32 2
  %t117 = bitcast %union.anon* %v116 to %struct.huft**
  store %struct.huft** %t117, %struct.huft*** %t.addr, align 4
  store %struct.huft* null, %struct.huft** %t117, align 4
  %107 = load %struct.huft*, %struct.huft** %q, align 4
  %incdec.ptr118 = getelementptr inbounds %struct.huft, %struct.huft* %107, i32 1
  store %struct.huft* %incdec.ptr118, %struct.huft** %q, align 4
  %108 = load i32, i32* %h, align 4
  %arrayidx119 = getelementptr inbounds [16 x %struct.huft*], [16 x %struct.huft*]* %u, i32 0, i32 %108
  store %struct.huft* %incdec.ptr118, %struct.huft** %arrayidx119, align 4
  %109 = load i32, i32* %h, align 4
  %tobool120 = icmp ne i32 %109, 0
  br i1 %tobool120, label %if.then121, label %if.end133

if.then121:                                       ; preds = %if.end112
  %110 = load i32, i32* %i, align 4
  %111 = load i32, i32* %h, align 4
  %arrayidx122 = getelementptr inbounds [17 x i32], [17 x i32]* %x, i32 0, i32 %111
  store i32 %110, i32* %arrayidx122, align 4
  %112 = load i32, i32* %l, align 4
  %conv = trunc i32 %112 to i8
  %b123 = getelementptr inbounds %struct.huft, %struct.huft* %r, i32 0, i32 1
  store i8 %conv, i8* %b123, align 1
  %113 = load i32, i32* %j, align 4
  %add124 = add i32 16, %113
  %conv125 = trunc i32 %add124 to i8
  %e126 = getelementptr inbounds %struct.huft, %struct.huft* %r, i32 0, i32 0
  store i8 %conv125, i8* %e126, align 4
  %114 = load %struct.huft*, %struct.huft** %q, align 4
  %v127 = getelementptr inbounds %struct.huft, %struct.huft* %r, i32 0, i32 2
  %t128 = bitcast %union.anon* %v127 to %struct.huft**
  store %struct.huft* %114, %struct.huft** %t128, align 4
  %115 = load i32, i32* %i, align 4
  %116 = load i32, i32* %w, align 4
  %117 = load i32, i32* %l, align 4
  %sub129 = sub nsw i32 %116, %117
  %shr = lshr i32 %115, %sub129
  store i32 %shr, i32* %j, align 4
  %118 = load i32, i32* %h, align 4
  %sub130 = sub nsw i32 %118, 1
  %arrayidx131 = getelementptr inbounds [16 x %struct.huft*], [16 x %struct.huft*]* %u, i32 0, i32 %sub130
  %119 = load %struct.huft*, %struct.huft** %arrayidx131, align 4
  %120 = load i32, i32* %j, align 4
  %arrayidx132 = getelementptr inbounds %struct.huft, %struct.huft* %119, i32 %120
  %121 = bitcast %struct.huft* %arrayidx132 to i8*
  %122 = bitcast %struct.huft* %r to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %121, i8* align 4 %122, i32 8, i1 false)
  br label %if.end133

if.end133:                                        ; preds = %if.then121, %if.end112
  br label %while.cond74

while.end134:                                     ; preds = %while.cond74
  %123 = load i32, i32* %k, align 4
  %124 = load i32, i32* %w, align 4
  %sub135 = sub nsw i32 %123, %124
  %conv136 = trunc i32 %sub135 to i8
  %b137 = getelementptr inbounds %struct.huft, %struct.huft* %r, i32 0, i32 1
  store i8 %conv136, i8* %b137, align 1
  %125 = load i32*, i32** %p, align 4
  %arraydecay138 = getelementptr inbounds [288 x i32], [288 x i32]* %v, i32 0, i32 0
  %126 = load i32, i32* %n.addr, align 4
  %add.ptr139 = getelementptr inbounds i32, i32* %arraydecay138, i32 %126
  %cmp140 = icmp uge i32* %125, %add.ptr139
  br i1 %cmp140, label %if.then142, label %if.else

if.then142:                                       ; preds = %while.end134
  %e143 = getelementptr inbounds %struct.huft, %struct.huft* %r, i32 0, i32 0
  store i8 99, i8* %e143, align 4
  br label %if.end167

if.else:                                          ; preds = %while.end134
  %127 = load i32*, i32** %p, align 4
  %128 = load i32, i32* %127, align 4
  %129 = load i32, i32* %s.addr, align 4
  %cmp144 = icmp ult i32 %128, %129
  br i1 %cmp144, label %if.then146, label %if.else156

if.then146:                                       ; preds = %if.else
  %130 = load i32*, i32** %p, align 4
  %131 = load i32, i32* %130, align 4
  %cmp147 = icmp ult i32 %131, 256
  %132 = zext i1 %cmp147 to i64
  %cond149 = select i1 %cmp147, i32 16, i32 15
  %conv150 = trunc i32 %cond149 to i8
  %e151 = getelementptr inbounds %struct.huft, %struct.huft* %r, i32 0, i32 0
  store i8 %conv150, i8* %e151, align 4
  %133 = load i32*, i32** %p, align 4
  %134 = load i32, i32* %133, align 4
  %conv152 = trunc i32 %134 to i16
  %v153 = getelementptr inbounds %struct.huft, %struct.huft* %r, i32 0, i32 2
  %n154 = bitcast %union.anon* %v153 to i16*
  store i16 %conv152, i16* %n154, align 4
  %135 = load i32*, i32** %p, align 4
  %incdec.ptr155 = getelementptr inbounds i32, i32* %135, i32 1
  store i32* %incdec.ptr155, i32** %p, align 4
  br label %if.end166

if.else156:                                       ; preds = %if.else
  %136 = load i16*, i16** %e.addr, align 4
  %137 = load i32*, i32** %p, align 4
  %138 = load i32, i32* %137, align 4
  %139 = load i32, i32* %s.addr, align 4
  %sub157 = sub i32 %138, %139
  %arrayidx158 = getelementptr inbounds i16, i16* %136, i32 %sub157
  %140 = load i16, i16* %arrayidx158, align 2
  %conv159 = trunc i16 %140 to i8
  %e160 = getelementptr inbounds %struct.huft, %struct.huft* %r, i32 0, i32 0
  store i8 %conv159, i8* %e160, align 4
  %141 = load i16*, i16** %d.addr, align 4
  %142 = load i32*, i32** %p, align 4
  %incdec.ptr161 = getelementptr inbounds i32, i32* %142, i32 1
  store i32* %incdec.ptr161, i32** %p, align 4
  %143 = load i32, i32* %142, align 4
  %144 = load i32, i32* %s.addr, align 4
  %sub162 = sub i32 %143, %144
  %arrayidx163 = getelementptr inbounds i16, i16* %141, i32 %sub162
  %145 = load i16, i16* %arrayidx163, align 2
  %v164 = getelementptr inbounds %struct.huft, %struct.huft* %r, i32 0, i32 2
  %n165 = bitcast %union.anon* %v164 to i16*
  store i16 %145, i16* %n165, align 4
  br label %if.end166

if.end166:                                        ; preds = %if.else156, %if.then146
  br label %if.end167

if.end167:                                        ; preds = %if.end166, %if.then142
  %146 = load i32, i32* %k, align 4
  %147 = load i32, i32* %w, align 4
  %sub168 = sub nsw i32 %146, %147
  %shl169 = shl i32 1, %sub168
  store i32 %shl169, i32* %f, align 4
  %148 = load i32, i32* %i, align 4
  %149 = load i32, i32* %w, align 4
  %shr170 = lshr i32 %148, %149
  store i32 %shr170, i32* %j, align 4
  br label %for.cond171

for.cond171:                                      ; preds = %for.inc176, %if.end167
  %150 = load i32, i32* %j, align 4
  %151 = load i32, i32* %z, align 4
  %cmp172 = icmp ult i32 %150, %151
  br i1 %cmp172, label %for.body174, label %for.end178

for.body174:                                      ; preds = %for.cond171
  %152 = load %struct.huft*, %struct.huft** %q, align 4
  %153 = load i32, i32* %j, align 4
  %arrayidx175 = getelementptr inbounds %struct.huft, %struct.huft* %152, i32 %153
  %154 = bitcast %struct.huft* %arrayidx175 to i8*
  %155 = bitcast %struct.huft* %r to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %154, i8* align 4 %155, i32 8, i1 false)
  br label %for.inc176

for.inc176:                                       ; preds = %for.body174
  %156 = load i32, i32* %f, align 4
  %157 = load i32, i32* %j, align 4
  %add177 = add i32 %157, %156
  store i32 %add177, i32* %j, align 4
  br label %for.cond171

for.end178:                                       ; preds = %for.cond171
  %158 = load i32, i32* %k, align 4
  %sub179 = sub nsw i32 %158, 1
  %shl180 = shl i32 1, %sub179
  store i32 %shl180, i32* %j, align 4
  br label %for.cond181

for.cond181:                                      ; preds = %for.inc184, %for.end178
  %159 = load i32, i32* %i, align 4
  %160 = load i32, i32* %j, align 4
  %and = and i32 %159, %160
  %tobool182 = icmp ne i32 %and, 0
  br i1 %tobool182, label %for.body183, label %for.end186

for.body183:                                      ; preds = %for.cond181
  %161 = load i32, i32* %j, align 4
  %162 = load i32, i32* %i, align 4
  %xor = xor i32 %162, %161
  store i32 %xor, i32* %i, align 4
  br label %for.inc184

for.inc184:                                       ; preds = %for.body183
  %163 = load i32, i32* %j, align 4
  %shr185 = lshr i32 %163, 1
  store i32 %shr185, i32* %j, align 4
  br label %for.cond181

for.end186:                                       ; preds = %for.cond181
  %164 = load i32, i32* %j, align 4
  %165 = load i32, i32* %i, align 4
  %xor187 = xor i32 %165, %164
  store i32 %xor187, i32* %i, align 4
  br label %CallOutFuncBB

CallOutFuncBB:                                    ; preds = %for.end186
  call void @while.cond188.OutLineFunc(i32* %i, i32* %w, i32* %h, [17 x i32]* %x, i32* %l)
  %166 = getelementptr inbounds %Struct.RetValue.9, %Struct.RetValue.9* @Struct.RetValue.11, i32 0, i32 0
  %167 = load i32*, i32** %166, align 4
  %168 = load i32, i32* %167, align 4
  store i32 %168, i32* %w
  %169 = getelementptr inbounds %Struct.RetValue.9, %Struct.RetValue.9* @Struct.RetValue.11, i32 0, i32 1
  %170 = load i32*, i32** %169, align 4
  %171 = load i32, i32* %170, align 4
  store i32 %171, i32* %h
  br label %while.cond70

while.end199:                                     ; preds = %while.cond70
  br label %for.inc200

for.inc200:                                       ; preds = %while.end199
  %172 = load i32, i32* %k, align 4
  %inc201 = add nsw i32 %172, 1
  store i32 %inc201, i32* %k, align 4
  br label %for.cond66

for.end202:                                       ; preds = %for.cond66
  %173 = load i32, i32* %y, align 4
  %cmp203 = icmp ne i32 %173, 0
  br i1 %cmp203, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.end202
  %174 = load i32, i32* %g, align 4
  %cmp205 = icmp ne i32 %174, 1
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.end202
  %175 = phi i1 [ false, %for.end202 ], [ %cmp205, %land.rhs ]
  %land.ext = zext i1 %175 to i32
  store i32 %land.ext, i32* %retval, align 4
  br label %return

return:                                           ; preds = %land.end, %if.end111, %if.then38, %if.then29, %if.then
  %176 = load i32, i32* %retval, align 4
  ret i32 %176
}

; Function Attrs: argmemonly nounwind
declare dllimport noalias i8* @malloc(i32) #5

; Function Attrs: noinline optnone sspstrong
define dso_local i32 @inflate_codes(%struct.huft* %tl, %struct.huft* %td, i32 %bl, i32 %bd) #1 {
entry:
  %retval = alloca i32, align 4
  %bd.addr = alloca i32, align 4
  %bl.addr = alloca i32, align 4
  %td.addr = alloca %struct.huft*, align 4
  %tl.addr = alloca %struct.huft*, align 4
  %e = alloca i32, align 4
  %n = alloca i32, align 4
  %d = alloca i32, align 4
  %w = alloca i32, align 4
  %t = alloca %struct.huft*, align 4
  %ml = alloca i32, align 4
  %md = alloca i32, align 4
  %b = alloca i32, align 4
  %k = alloca i32, align 4
  store i32 %bd, i32* %bd.addr, align 4
  store i32 %bl, i32* %bl.addr, align 4
  store %struct.huft* %td, %struct.huft** %td.addr, align 4
  store %struct.huft* %tl, %struct.huft** %tl.addr, align 4
  %0 = load i32, i32* @bb, align 4
  store i32 %0, i32* %b, align 4
  %1 = load i32, i32* @bk, align 4
  store i32 %1, i32* %k, align 4
  %2 = load i32, i32* @outcnt, align 4
  store i32 %2, i32* %w, align 4
  %3 = load i32, i32* %bl.addr, align 4
  %arrayidx = getelementptr inbounds [17 x i16], [17 x i16]* @mask_bits, i32 0, i32 %3
  %4 = load i16, i16* %arrayidx, align 2
  %conv = zext i16 %4 to i32
  store i32 %conv, i32* %ml, align 4
  %5 = load i32, i32* %bd.addr, align 4
  %arrayidx1 = getelementptr inbounds [17 x i16], [17 x i16]* @mask_bits, i32 0, i32 %5
  %6 = load i16, i16* %arrayidx1, align 2
  %conv2 = zext i16 %6 to i32
  store i32 %conv2, i32* %md, align 4
  %RetValuePtr = alloca i32, align 4
  %RetValuePtr28 = alloca i32, align 4
  %RetValuePtr57 = alloca i32, align 4
  %RetValuePtr86 = alloca i32, align 4
  %RetValuePtr115 = alloca i32, align 4
  %RetValuePtr144 = alloca i32, align 4
  %RetValuePtr146 = alloca i32, align 4
  %RetValuePtr298 = alloca i32, align 4
  br label %for.cond

for.cond:                                         ; preds = %if.end251, %entry
  br label %while.cond

while.cond:                                       ; preds = %cond.end, %for.cond
  %7 = load i32, i32* %k, align 4
  %8 = load i32, i32* %bl.addr, align 4
  %cmp = icmp ult i32 %7, %8
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %9 = load i32, i32* @inptr, align 4
  %10 = load i32, i32* @insize, align 4
  %cmp4 = icmp ult i32 %9, %10
  br i1 %cmp4, label %cond.true, label %cond.false

cond.true:                                        ; preds = %while.body
  %11 = load i32, i32* @inptr, align 4
  %inc = add i32 %11, 1
  store i32 %inc, i32* @inptr, align 4
  %arrayidx6 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i32 0, i32 %11
  %12 = load i8, i8* %arrayidx6, align 1
  %conv7 = zext i8 %12 to i32
  br label %cond.end

cond.false:                                       ; preds = %while.body
  br label %entry.fill_inbuf.Clone117

entry.fill_inbuf.Clone117:                        ; preds = %cond.false
  %retval.fill_inbuf.Clone118 = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone119 = alloca i32, align 4
  %len.fill_inbuf.Clone120 = alloca i32, align 4
  store i32 0, i32* %eof_ok.addr.fill_inbuf.Clone119, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone121 = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone121, align 4
  br label %do.body.fill_inbuf.Clone122

do.body.fill_inbuf.Clone122:                      ; preds = %do.cond.fill_inbuf.Clone132, %entry.fill_inbuf.Clone117
  %13 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone123 = sub i32 32768, %13
  %14 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone124 = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %14
  %15 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone125 = call i32 @spec_read(i32 %15, i8* %add.ptr.fill_inbuf.Clone124, i32 %sub.fill_inbuf.Clone123)
  store i32 %call1.fill_inbuf.Clone125, i32* %len.fill_inbuf.Clone120, align 4
  %16 = load i32, i32* %len.fill_inbuf.Clone120, align 4
  %cmp.fill_inbuf.Clone126 = icmp eq i32 %16, 0
  br i1 %cmp.fill_inbuf.Clone126, label %if.then.fill_inbuf.Clone129, label %lor.lhs.false.fill_inbuf.Clone127

lor.lhs.false.fill_inbuf.Clone127:                ; preds = %do.body.fill_inbuf.Clone122
  %17 = load i32, i32* %len.fill_inbuf.Clone120, align 4
  %cmp2.fill_inbuf.Clone128 = icmp eq i32 %17, -1
  br i1 %cmp2.fill_inbuf.Clone128, label %if.then.fill_inbuf.Clone129, label %if.end.fill_inbuf.Clone130

if.then.fill_inbuf.Clone129:                      ; preds = %lor.lhs.false.fill_inbuf.Clone127, %do.body.fill_inbuf.Clone122
  br label %do.end.fill_inbuf.Clone134

if.end.fill_inbuf.Clone130:                       ; preds = %lor.lhs.false.fill_inbuf.Clone127
  %18 = load i32, i32* %len.fill_inbuf.Clone120, align 4
  %19 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone131 = add i32 %19, %18
  store i32 %add.fill_inbuf.Clone131, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone132

do.cond.fill_inbuf.Clone132:                      ; preds = %if.end.fill_inbuf.Clone130
  %20 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone133 = icmp ult i32 %20, 32768
  br i1 %cmp3.fill_inbuf.Clone133, label %do.body.fill_inbuf.Clone122, label %do.end.fill_inbuf.Clone134

do.end.fill_inbuf.Clone134:                       ; preds = %do.cond.fill_inbuf.Clone132, %if.then.fill_inbuf.Clone129
  %21 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone135 = icmp eq i32 %21, 0
  br i1 %cmp4.fill_inbuf.Clone135, label %if.then5.fill_inbuf.Clone136, label %if.end8.fill_inbuf.Clone140

if.then5.fill_inbuf.Clone136:                     ; preds = %do.end.fill_inbuf.Clone134
  %22 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone119, align 4
  %tobool.fill_inbuf.Clone137 = icmp ne i32 %22, 0
  br i1 %tobool.fill_inbuf.Clone137, label %if.then6.fill_inbuf.Clone138, label %if.end7.fill_inbuf.Clone139

if.then6.fill_inbuf.Clone138:                     ; preds = %if.then5.fill_inbuf.Clone136
  store i32 -1, i32* %retval.fill_inbuf.Clone118, align 4
  br label %return.fill_inbuf.Clone143

if.end7.fill_inbuf.Clone139:                      ; preds = %if.then5.fill_inbuf.Clone136
  br label %entry.read_error.Clone

entry.read_error.Clone:                           ; preds = %if.end7.fill_inbuf.Clone139
  %23 = load i8*, i8** @progname, align 4
  %call.read_error.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone, i32 2
  %call1.read_error.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %23)
  %call2.read_error.Clone = call i32* @_errno()
  %24 = load i32, i32* %call2.read_error.Clone, align 4
  %cmp.read_error.Clone = icmp ne i32 %24, 0
  br i1 %cmp.read_error.Clone, label %if.then.read_error.Clone, label %if.else.read_error.Clone

if.then.read_error.Clone:                         ; preds = %entry.read_error.Clone
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone

if.else.read_error.Clone:                         ; preds = %entry.read_error.Clone
  %call3.read_error.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone, i32 2
  %call5.read_error.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone

if.end.read_error.Clone:                          ; preds = %if.else.read_error.Clone, %if.then.read_error.Clone
  br label %entry.abort_gzip.Clone232

entry.abort_gzip.Clone232:                        ; preds = %if.end.read_error.Clone
  %25 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone233 = icmp ne i32 %25, 0
  br i1 %tobool.abort_gzip.Clone233, label %if.then.abort_gzip.Clone234, label %if.end.abort_gzip.Clone237

if.then.abort_gzip.Clone234:                      ; preds = %entry.abort_gzip.Clone232
  %26 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone235 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %26)
  %call1.abort_gzip.Clone236 = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone237

if.end.abort_gzip.Clone237:                       ; preds = %if.then.abort_gzip.Clone234, %entry.abort_gzip.Clone232
  br label %entry.do_exit.Clone

entry.do_exit.Clone:                              ; preds = %if.end.abort_gzip.Clone237
  %exitcode.addr.do_exit.Clone = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone, align 4
  %27 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone = icmp ne i32 %27, 0
  br i1 %tobool.do_exit.Clone, label %if.then.do_exit.Clone, label %if.end.do_exit.Clone

if.then.do_exit.Clone:                            ; preds = %entry.do_exit.Clone
  %28 = load i32, i32* %exitcode.addr.do_exit.Clone, align 4
  call void @exit(i32 %28) #7
  unreachable

if.end.do_exit.Clone:                             ; preds = %entry.do_exit.Clone
  store i32 1, i32* @do_exit.in_exit, align 4
  %29 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone = icmp ne i8* %29, null
  br i1 %cmp.do_exit.Clone, label %if.then1.do_exit.Clone, label %if.end2.do_exit.Clone

if.then1.do_exit.Clone:                           ; preds = %if.end.do_exit.Clone
  %30 = load i8*, i8** @env, align 4
  call void @free(i8* %30) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone

if.end2.do_exit.Clone:                            ; preds = %if.then1.do_exit.Clone, %if.end.do_exit.Clone
  %31 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone = icmp ne i8** %31, null
  br i1 %cmp3.do_exit.Clone, label %if.then4.do_exit.Clone, label %if.end5.do_exit.Clone

if.then4.do_exit.Clone:                           ; preds = %if.end2.do_exit.Clone
  %32 = load i8**, i8*** @args, align 4
  %33 = bitcast i8** %32 to i8*
  call void @free(i8* %33) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone

if.end5.do_exit.Clone:                            ; preds = %if.then4.do_exit.Clone, %if.end2.do_exit.Clone
  %34 = load i32, i32* %exitcode.addr.do_exit.Clone, align 4
  call void @exit(i32 %34) #7
  unreachable

return.do_exit.Clone:                             ; No predecessors!
  br label %if.end.abort_gzip.Clone237.Split

if.end.abort_gzip.Clone237.Split:                 ; preds = %return.do_exit.Clone
  br label %if.end.read_error.Clone.Split

if.end.read_error.Clone.Split:                    ; preds = %if.end.abort_gzip.Clone237.Split
  br label %if.end7.fill_inbuf.Clone139.Split

if.end7.fill_inbuf.Clone139.Split:                ; preds = %if.end.read_error.Clone.Split
  br label %if.end8.fill_inbuf.Clone140

if.end8.fill_inbuf.Clone140:                      ; preds = %if.end7.fill_inbuf.Clone139.Split, %do.end.fill_inbuf.Clone134
  %35 = load i32, i32* @insize, align 4
  %36 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone141 = add i32 %36, %35
  store i32 %add9.fill_inbuf.Clone141, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %37 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone142 = zext i8 %37 to i32
  store i32 %conv.fill_inbuf.Clone142, i32* %retval.fill_inbuf.Clone118, align 4
  br label %return.fill_inbuf.Clone143

return.fill_inbuf.Clone143:                       ; preds = %if.end8.fill_inbuf.Clone140, %if.then6.fill_inbuf.Clone138
  %38 = load i32, i32* %retval.fill_inbuf.Clone118, align 4
  store i32 %38, i32* %RetValuePtr144
  br label %cond.false.Split

cond.false.Split:                                 ; preds = %return.fill_inbuf.Clone143
  %RetValue145 = load i32, i32* %RetValuePtr144
  br label %cond.end

cond.end:                                         ; preds = %cond.false.Split, %cond.true
  %cond = phi i32 [ %conv7, %cond.true ], [ %RetValue145, %cond.false.Split ]
  %conv8 = trunc i32 %cond to i8
  %conv9 = zext i8 %conv8 to i32
  %39 = load i32, i32* %k, align 4
  %shl = shl i32 %conv9, %39
  %40 = load i32, i32* %b, align 4
  %or = or i32 %40, %shl
  store i32 %or, i32* %b, align 4
  %41 = load i32, i32* %k, align 4
  %add = add i32 %41, 8
  store i32 %add, i32* %k, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %42 = load %struct.huft*, %struct.huft** %tl.addr, align 4
  %43 = load i32, i32* %b, align 4
  %44 = load i32, i32* %ml, align 4
  %and = and i32 %43, %44
  %add.ptr = getelementptr inbounds %struct.huft, %struct.huft* %42, i32 %and
  store %struct.huft* %add.ptr, %struct.huft** %t, align 4
  %e10 = getelementptr inbounds %struct.huft, %struct.huft* %add.ptr, i32 0, i32 0
  %45 = load i8, i8* %e10, align 4
  %conv11 = zext i8 %45 to i32
  store i32 %conv11, i32* %e, align 4
  %cmp12 = icmp ugt i32 %conv11, 16
  br i1 %cmp12, label %if.then, label %if.end51

if.then:                                          ; preds = %while.end
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %46 = load i32, i32* %e, align 4
  %cmp14 = icmp eq i32 %46, 99
  br i1 %cmp14, label %if.then16, label %if.end

if.then16:                                        ; preds = %do.body
  store i32 1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %do.body
  %47 = load %struct.huft*, %struct.huft** %t, align 4
  %b17 = getelementptr inbounds %struct.huft, %struct.huft* %47, i32 0, i32 1
  %48 = load i8, i8* %b17, align 1
  %conv18 = zext i8 %48 to i32
  %49 = load i32, i32* %b, align 4
  %shr = lshr i32 %49, %conv18
  store i32 %shr, i32* %b, align 4
  %50 = load %struct.huft*, %struct.huft** %t, align 4
  %b19 = getelementptr inbounds %struct.huft, %struct.huft* %50, i32 0, i32 1
  %51 = load i8, i8* %b19, align 1
  %conv20 = zext i8 %51 to i32
  %52 = load i32, i32* %k, align 4
  %sub = sub i32 %52, %conv20
  store i32 %sub, i32* %k, align 4
  %53 = load i32, i32* %e, align 4
  %sub21 = sub i32 %53, 16
  store i32 %sub21, i32* %e, align 4
  br label %while.cond22

while.cond22:                                     ; preds = %cond.end34, %if.end
  %54 = load i32, i32* %k, align 4
  %55 = load i32, i32* %e, align 4
  %cmp23 = icmp ult i32 %54, %55
  br i1 %cmp23, label %while.body25, label %while.end41

while.body25:                                     ; preds = %while.cond22
  %56 = load i32, i32* @inptr, align 4
  %57 = load i32, i32* @insize, align 4
  %cmp26 = icmp ult i32 %56, %57
  br i1 %cmp26, label %cond.true28, label %cond.false32

cond.true28:                                      ; preds = %while.body25
  %58 = load i32, i32* @inptr, align 4
  %inc29 = add i32 %58, 1
  store i32 %inc29, i32* @inptr, align 4
  %arrayidx30 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i32 0, i32 %58
  %59 = load i8, i8* %arrayidx30, align 1
  %conv31 = zext i8 %59 to i32
  br label %cond.end34

cond.false32:                                     ; preds = %while.body25
  br label %entry.fill_inbuf.Clone88

entry.fill_inbuf.Clone88:                         ; preds = %cond.false32
  %retval.fill_inbuf.Clone89 = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone90 = alloca i32, align 4
  %len.fill_inbuf.Clone91 = alloca i32, align 4
  store i32 0, i32* %eof_ok.addr.fill_inbuf.Clone90, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone92 = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone92, align 4
  br label %do.body.fill_inbuf.Clone93

do.body.fill_inbuf.Clone93:                       ; preds = %do.cond.fill_inbuf.Clone103, %entry.fill_inbuf.Clone88
  %60 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone94 = sub i32 32768, %60
  %61 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone95 = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %61
  %62 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone96 = call i32 @spec_read(i32 %62, i8* %add.ptr.fill_inbuf.Clone95, i32 %sub.fill_inbuf.Clone94)
  store i32 %call1.fill_inbuf.Clone96, i32* %len.fill_inbuf.Clone91, align 4
  %63 = load i32, i32* %len.fill_inbuf.Clone91, align 4
  %cmp.fill_inbuf.Clone97 = icmp eq i32 %63, 0
  br i1 %cmp.fill_inbuf.Clone97, label %if.then.fill_inbuf.Clone100, label %lor.lhs.false.fill_inbuf.Clone98

lor.lhs.false.fill_inbuf.Clone98:                 ; preds = %do.body.fill_inbuf.Clone93
  %64 = load i32, i32* %len.fill_inbuf.Clone91, align 4
  %cmp2.fill_inbuf.Clone99 = icmp eq i32 %64, -1
  br i1 %cmp2.fill_inbuf.Clone99, label %if.then.fill_inbuf.Clone100, label %if.end.fill_inbuf.Clone101

if.then.fill_inbuf.Clone100:                      ; preds = %lor.lhs.false.fill_inbuf.Clone98, %do.body.fill_inbuf.Clone93
  br label %do.end.fill_inbuf.Clone105

if.end.fill_inbuf.Clone101:                       ; preds = %lor.lhs.false.fill_inbuf.Clone98
  %65 = load i32, i32* %len.fill_inbuf.Clone91, align 4
  %66 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone102 = add i32 %66, %65
  store i32 %add.fill_inbuf.Clone102, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone103

do.cond.fill_inbuf.Clone103:                      ; preds = %if.end.fill_inbuf.Clone101
  %67 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone104 = icmp ult i32 %67, 32768
  br i1 %cmp3.fill_inbuf.Clone104, label %do.body.fill_inbuf.Clone93, label %do.end.fill_inbuf.Clone105

do.end.fill_inbuf.Clone105:                       ; preds = %do.cond.fill_inbuf.Clone103, %if.then.fill_inbuf.Clone100
  %68 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone106 = icmp eq i32 %68, 0
  br i1 %cmp4.fill_inbuf.Clone106, label %if.then5.fill_inbuf.Clone107, label %if.end8.fill_inbuf.Clone111

if.then5.fill_inbuf.Clone107:                     ; preds = %do.end.fill_inbuf.Clone105
  %69 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone90, align 4
  %tobool.fill_inbuf.Clone108 = icmp ne i32 %69, 0
  br i1 %tobool.fill_inbuf.Clone108, label %if.then6.fill_inbuf.Clone109, label %if.end7.fill_inbuf.Clone110

if.then6.fill_inbuf.Clone109:                     ; preds = %if.then5.fill_inbuf.Clone107
  store i32 -1, i32* %retval.fill_inbuf.Clone89, align 4
  br label %return.fill_inbuf.Clone114

if.end7.fill_inbuf.Clone110:                      ; preds = %if.then5.fill_inbuf.Clone107
  br label %entry.read_error.Clone148

entry.read_error.Clone148:                        ; preds = %if.end7.fill_inbuf.Clone110
  %70 = load i8*, i8** @progname, align 4
  %call.read_error.Clone149 = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone150 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone149, i32 2
  %call1.read_error.Clone151 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone150, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %70)
  %call2.read_error.Clone152 = call i32* @_errno()
  %71 = load i32, i32* %call2.read_error.Clone152, align 4
  %cmp.read_error.Clone153 = icmp ne i32 %71, 0
  br i1 %cmp.read_error.Clone153, label %if.then.read_error.Clone154, label %if.else.read_error.Clone155

if.then.read_error.Clone154:                      ; preds = %entry.read_error.Clone148
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone159

if.else.read_error.Clone155:                      ; preds = %entry.read_error.Clone148
  %call3.read_error.Clone156 = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone157 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone156, i32 2
  %call5.read_error.Clone158 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone157, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone159

if.end.read_error.Clone159:                       ; preds = %if.else.read_error.Clone155, %if.then.read_error.Clone154
  br label %entry.abort_gzip.Clone226

entry.abort_gzip.Clone226:                        ; preds = %if.end.read_error.Clone159
  %72 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone227 = icmp ne i32 %72, 0
  br i1 %tobool.abort_gzip.Clone227, label %if.then.abort_gzip.Clone228, label %if.end.abort_gzip.Clone231

if.then.abort_gzip.Clone228:                      ; preds = %entry.abort_gzip.Clone226
  %73 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone229 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %73)
  %call1.abort_gzip.Clone230 = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone231

if.end.abort_gzip.Clone231:                       ; preds = %if.then.abort_gzip.Clone228, %entry.abort_gzip.Clone226
  br label %entry.do_exit.Clone238

entry.do_exit.Clone238:                           ; preds = %if.end.abort_gzip.Clone231
  %exitcode.addr.do_exit.Clone239 = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone239, align 4
  %74 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone240 = icmp ne i32 %74, 0
  br i1 %tobool.do_exit.Clone240, label %if.then.do_exit.Clone241, label %if.end.do_exit.Clone242

if.then.do_exit.Clone241:                         ; preds = %entry.do_exit.Clone238
  %75 = load i32, i32* %exitcode.addr.do_exit.Clone239, align 4
  call void @exit(i32 %75) #7
  unreachable

if.end.do_exit.Clone242:                          ; preds = %entry.do_exit.Clone238
  store i32 1, i32* @do_exit.in_exit, align 4
  %76 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone243 = icmp ne i8* %76, null
  br i1 %cmp.do_exit.Clone243, label %if.then1.do_exit.Clone244, label %if.end2.do_exit.Clone245

if.then1.do_exit.Clone244:                        ; preds = %if.end.do_exit.Clone242
  %77 = load i8*, i8** @env, align 4
  call void @free(i8* %77) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone245

if.end2.do_exit.Clone245:                         ; preds = %if.then1.do_exit.Clone244, %if.end.do_exit.Clone242
  %78 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone246 = icmp ne i8** %78, null
  br i1 %cmp3.do_exit.Clone246, label %if.then4.do_exit.Clone247, label %if.end5.do_exit.Clone248

if.then4.do_exit.Clone247:                        ; preds = %if.end2.do_exit.Clone245
  %79 = load i8**, i8*** @args, align 4
  %80 = bitcast i8** %79 to i8*
  call void @free(i8* %80) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone248

if.end5.do_exit.Clone248:                         ; preds = %if.then4.do_exit.Clone247, %if.end2.do_exit.Clone245
  %81 = load i32, i32* %exitcode.addr.do_exit.Clone239, align 4
  call void @exit(i32 %81) #7
  unreachable

return.do_exit.Clone249:                          ; No predecessors!
  br label %if.end.abort_gzip.Clone231.Split

if.end.abort_gzip.Clone231.Split:                 ; preds = %return.do_exit.Clone249
  br label %if.end.read_error.Clone159.Split

if.end.read_error.Clone159.Split:                 ; preds = %if.end.abort_gzip.Clone231.Split
  br label %if.end7.fill_inbuf.Clone110.Split

if.end7.fill_inbuf.Clone110.Split:                ; preds = %if.end.read_error.Clone159.Split
  br label %if.end8.fill_inbuf.Clone111

if.end8.fill_inbuf.Clone111:                      ; preds = %if.end7.fill_inbuf.Clone110.Split, %do.end.fill_inbuf.Clone105
  %82 = load i32, i32* @insize, align 4
  %83 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone112 = add i32 %83, %82
  store i32 %add9.fill_inbuf.Clone112, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %84 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone113 = zext i8 %84 to i32
  store i32 %conv.fill_inbuf.Clone113, i32* %retval.fill_inbuf.Clone89, align 4
  br label %return.fill_inbuf.Clone114

return.fill_inbuf.Clone114:                       ; preds = %if.end8.fill_inbuf.Clone111, %if.then6.fill_inbuf.Clone109
  %85 = load i32, i32* %retval.fill_inbuf.Clone89, align 4
  store i32 %85, i32* %RetValuePtr115
  br label %cond.false32.Split

cond.false32.Split:                               ; preds = %return.fill_inbuf.Clone114
  %RetValue116 = load i32, i32* %RetValuePtr115
  br label %cond.end34

cond.end34:                                       ; preds = %cond.false32.Split, %cond.true28
  %cond35 = phi i32 [ %conv31, %cond.true28 ], [ %RetValue116, %cond.false32.Split ]
  %conv36 = trunc i32 %cond35 to i8
  %conv37 = zext i8 %conv36 to i32
  %86 = load i32, i32* %k, align 4
  %shl38 = shl i32 %conv37, %86
  %87 = load i32, i32* %b, align 4
  %or39 = or i32 %87, %shl38
  store i32 %or39, i32* %b, align 4
  %88 = load i32, i32* %k, align 4
  %add40 = add i32 %88, 8
  store i32 %add40, i32* %k, align 4
  br label %while.cond22

while.end41:                                      ; preds = %while.cond22
  br label %do.cond

do.cond:                                          ; preds = %while.end41
  %89 = load %struct.huft*, %struct.huft** %t, align 4
  %v = getelementptr inbounds %struct.huft, %struct.huft* %89, i32 0, i32 2
  %t42 = bitcast %union.anon* %v to %struct.huft**
  %90 = load %struct.huft*, %struct.huft** %t42, align 4
  %91 = load i32, i32* %b, align 4
  %92 = load i32, i32* %e, align 4
  %arrayidx43 = getelementptr inbounds [17 x i16], [17 x i16]* @mask_bits, i32 0, i32 %92
  %93 = load i16, i16* %arrayidx43, align 2
  %conv44 = zext i16 %93 to i32
  %and45 = and i32 %91, %conv44
  %add.ptr46 = getelementptr inbounds %struct.huft, %struct.huft* %90, i32 %and45
  store %struct.huft* %add.ptr46, %struct.huft** %t, align 4
  %e47 = getelementptr inbounds %struct.huft, %struct.huft* %add.ptr46, i32 0, i32 0
  %94 = load i8, i8* %e47, align 4
  %conv48 = zext i8 %94 to i32
  store i32 %conv48, i32* %e, align 4
  %cmp49 = icmp ugt i32 %conv48, 16
  br i1 %cmp49, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end51

if.end51:                                         ; preds = %do.end, %while.end
  %95 = load %struct.huft*, %struct.huft** %t, align 4
  %b52 = getelementptr inbounds %struct.huft, %struct.huft* %95, i32 0, i32 1
  %96 = load i8, i8* %b52, align 1
  %conv53 = zext i8 %96 to i32
  %97 = load i32, i32* %b, align 4
  %shr54 = lshr i32 %97, %conv53
  store i32 %shr54, i32* %b, align 4
  %98 = load %struct.huft*, %struct.huft** %t, align 4
  %b55 = getelementptr inbounds %struct.huft, %struct.huft* %98, i32 0, i32 1
  %99 = load i8, i8* %b55, align 1
  %conv56 = zext i8 %99 to i32
  %100 = load i32, i32* %k, align 4
  %sub57 = sub i32 %100, %conv56
  store i32 %sub57, i32* %k, align 4
  %101 = load i32, i32* %e, align 4
  %cmp58 = icmp eq i32 %101, 16
  br i1 %cmp58, label %CallOutFuncBB, label %if.else

CallOutFuncBB:                                    ; preds = %if.end51
  call void @if.then60.OutLineFunc(%struct.huft** %t, i32* %w)
  %102 = getelementptr inbounds %Struct.RetValue.10, %Struct.RetValue.10* @Struct.RetValue.12, i32 0, i32 0
  %103 = load i32*, i32** %102, align 4
  %104 = load i32, i32* %103, align 4
  store i32 %104, i32* %w
  br label %if.end251

if.else:                                          ; preds = %if.end51
  %105 = load i32, i32* %e, align 4
  %cmp70 = icmp eq i32 %105, 15
  br i1 %cmp70, label %if.then72, label %if.end73

if.then72:                                        ; preds = %if.else
  br label %for.end

if.end73:                                         ; preds = %if.else
  br label %while.cond74

while.cond74:                                     ; preds = %cond.end86, %if.end73
  %106 = load i32, i32* %k, align 4
  %107 = load i32, i32* %e, align 4
  %cmp75 = icmp ult i32 %106, %107
  br i1 %cmp75, label %while.body77, label %while.end93

while.body77:                                     ; preds = %while.cond74
  %108 = load i32, i32* @inptr, align 4
  %109 = load i32, i32* @insize, align 4
  %cmp78 = icmp ult i32 %108, %109
  br i1 %cmp78, label %cond.true80, label %cond.false84

cond.true80:                                      ; preds = %while.body77
  %110 = load i32, i32* @inptr, align 4
  %inc81 = add i32 %110, 1
  store i32 %inc81, i32* @inptr, align 4
  %arrayidx82 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i32 0, i32 %110
  %111 = load i8, i8* %arrayidx82, align 1
  %conv83 = zext i8 %111 to i32
  br label %cond.end86

cond.false84:                                     ; preds = %while.body77
  br label %entry.fill_inbuf.Clone59

entry.fill_inbuf.Clone59:                         ; preds = %cond.false84
  %retval.fill_inbuf.Clone60 = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone61 = alloca i32, align 4
  %len.fill_inbuf.Clone62 = alloca i32, align 4
  store i32 0, i32* %eof_ok.addr.fill_inbuf.Clone61, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone63 = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone63, align 4
  br label %do.body.fill_inbuf.Clone64

do.body.fill_inbuf.Clone64:                       ; preds = %do.cond.fill_inbuf.Clone74, %entry.fill_inbuf.Clone59
  %112 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone65 = sub i32 32768, %112
  %113 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone66 = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %113
  %114 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone67 = call i32 @spec_read(i32 %114, i8* %add.ptr.fill_inbuf.Clone66, i32 %sub.fill_inbuf.Clone65)
  store i32 %call1.fill_inbuf.Clone67, i32* %len.fill_inbuf.Clone62, align 4
  %115 = load i32, i32* %len.fill_inbuf.Clone62, align 4
  %cmp.fill_inbuf.Clone68 = icmp eq i32 %115, 0
  br i1 %cmp.fill_inbuf.Clone68, label %if.then.fill_inbuf.Clone71, label %lor.lhs.false.fill_inbuf.Clone69

lor.lhs.false.fill_inbuf.Clone69:                 ; preds = %do.body.fill_inbuf.Clone64
  %116 = load i32, i32* %len.fill_inbuf.Clone62, align 4
  %cmp2.fill_inbuf.Clone70 = icmp eq i32 %116, -1
  br i1 %cmp2.fill_inbuf.Clone70, label %if.then.fill_inbuf.Clone71, label %if.end.fill_inbuf.Clone72

if.then.fill_inbuf.Clone71:                       ; preds = %lor.lhs.false.fill_inbuf.Clone69, %do.body.fill_inbuf.Clone64
  br label %do.end.fill_inbuf.Clone76

if.end.fill_inbuf.Clone72:                        ; preds = %lor.lhs.false.fill_inbuf.Clone69
  %117 = load i32, i32* %len.fill_inbuf.Clone62, align 4
  %118 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone73 = add i32 %118, %117
  store i32 %add.fill_inbuf.Clone73, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone74

do.cond.fill_inbuf.Clone74:                       ; preds = %if.end.fill_inbuf.Clone72
  %119 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone75 = icmp ult i32 %119, 32768
  br i1 %cmp3.fill_inbuf.Clone75, label %do.body.fill_inbuf.Clone64, label %do.end.fill_inbuf.Clone76

do.end.fill_inbuf.Clone76:                        ; preds = %do.cond.fill_inbuf.Clone74, %if.then.fill_inbuf.Clone71
  %120 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone77 = icmp eq i32 %120, 0
  br i1 %cmp4.fill_inbuf.Clone77, label %if.then5.fill_inbuf.Clone78, label %if.end8.fill_inbuf.Clone82

if.then5.fill_inbuf.Clone78:                      ; preds = %do.end.fill_inbuf.Clone76
  %121 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone61, align 4
  %tobool.fill_inbuf.Clone79 = icmp ne i32 %121, 0
  br i1 %tobool.fill_inbuf.Clone79, label %if.then6.fill_inbuf.Clone80, label %if.end7.fill_inbuf.Clone81

if.then6.fill_inbuf.Clone80:                      ; preds = %if.then5.fill_inbuf.Clone78
  store i32 -1, i32* %retval.fill_inbuf.Clone60, align 4
  br label %return.fill_inbuf.Clone85

if.end7.fill_inbuf.Clone81:                       ; preds = %if.then5.fill_inbuf.Clone78
  br label %entry.read_error.Clone160

entry.read_error.Clone160:                        ; preds = %if.end7.fill_inbuf.Clone81
  %122 = load i8*, i8** @progname, align 4
  %call.read_error.Clone161 = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone162 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone161, i32 2
  %call1.read_error.Clone163 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone162, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %122)
  %call2.read_error.Clone164 = call i32* @_errno()
  %123 = load i32, i32* %call2.read_error.Clone164, align 4
  %cmp.read_error.Clone165 = icmp ne i32 %123, 0
  br i1 %cmp.read_error.Clone165, label %if.then.read_error.Clone166, label %if.else.read_error.Clone167

if.then.read_error.Clone166:                      ; preds = %entry.read_error.Clone160
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone171

if.else.read_error.Clone167:                      ; preds = %entry.read_error.Clone160
  %call3.read_error.Clone168 = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone169 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone168, i32 2
  %call5.read_error.Clone170 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone169, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone171

if.end.read_error.Clone171:                       ; preds = %if.else.read_error.Clone167, %if.then.read_error.Clone166
  br label %entry.abort_gzip.Clone220

entry.abort_gzip.Clone220:                        ; preds = %if.end.read_error.Clone171
  %124 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone221 = icmp ne i32 %124, 0
  br i1 %tobool.abort_gzip.Clone221, label %if.then.abort_gzip.Clone222, label %if.end.abort_gzip.Clone225

if.then.abort_gzip.Clone222:                      ; preds = %entry.abort_gzip.Clone220
  %125 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone223 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %125)
  %call1.abort_gzip.Clone224 = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone225

if.end.abort_gzip.Clone225:                       ; preds = %if.then.abort_gzip.Clone222, %entry.abort_gzip.Clone220
  br label %entry.do_exit.Clone250

entry.do_exit.Clone250:                           ; preds = %if.end.abort_gzip.Clone225
  %exitcode.addr.do_exit.Clone251 = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone251, align 4
  %126 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone252 = icmp ne i32 %126, 0
  br i1 %tobool.do_exit.Clone252, label %if.then.do_exit.Clone253, label %if.end.do_exit.Clone254

if.then.do_exit.Clone253:                         ; preds = %entry.do_exit.Clone250
  %127 = load i32, i32* %exitcode.addr.do_exit.Clone251, align 4
  call void @exit(i32 %127) #7
  unreachable

if.end.do_exit.Clone254:                          ; preds = %entry.do_exit.Clone250
  store i32 1, i32* @do_exit.in_exit, align 4
  %128 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone255 = icmp ne i8* %128, null
  br i1 %cmp.do_exit.Clone255, label %if.then1.do_exit.Clone256, label %if.end2.do_exit.Clone257

if.then1.do_exit.Clone256:                        ; preds = %if.end.do_exit.Clone254
  %129 = load i8*, i8** @env, align 4
  call void @free(i8* %129) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone257

if.end2.do_exit.Clone257:                         ; preds = %if.then1.do_exit.Clone256, %if.end.do_exit.Clone254
  %130 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone258 = icmp ne i8** %130, null
  br i1 %cmp3.do_exit.Clone258, label %if.then4.do_exit.Clone259, label %if.end5.do_exit.Clone260

if.then4.do_exit.Clone259:                        ; preds = %if.end2.do_exit.Clone257
  %131 = load i8**, i8*** @args, align 4
  %132 = bitcast i8** %131 to i8*
  call void @free(i8* %132) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone260

if.end5.do_exit.Clone260:                         ; preds = %if.then4.do_exit.Clone259, %if.end2.do_exit.Clone257
  %133 = load i32, i32* %exitcode.addr.do_exit.Clone251, align 4
  call void @exit(i32 %133) #7
  unreachable

return.do_exit.Clone261:                          ; No predecessors!
  br label %if.end.abort_gzip.Clone225.Split

if.end.abort_gzip.Clone225.Split:                 ; preds = %return.do_exit.Clone261
  br label %if.end.read_error.Clone171.Split

if.end.read_error.Clone171.Split:                 ; preds = %if.end.abort_gzip.Clone225.Split
  br label %if.end7.fill_inbuf.Clone81.Split

if.end7.fill_inbuf.Clone81.Split:                 ; preds = %if.end.read_error.Clone171.Split
  br label %if.end8.fill_inbuf.Clone82

if.end8.fill_inbuf.Clone82:                       ; preds = %if.end7.fill_inbuf.Clone81.Split, %do.end.fill_inbuf.Clone76
  %134 = load i32, i32* @insize, align 4
  %135 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone83 = add i32 %135, %134
  store i32 %add9.fill_inbuf.Clone83, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %136 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone84 = zext i8 %136 to i32
  store i32 %conv.fill_inbuf.Clone84, i32* %retval.fill_inbuf.Clone60, align 4
  br label %return.fill_inbuf.Clone85

return.fill_inbuf.Clone85:                        ; preds = %if.end8.fill_inbuf.Clone82, %if.then6.fill_inbuf.Clone80
  %137 = load i32, i32* %retval.fill_inbuf.Clone60, align 4
  store i32 %137, i32* %RetValuePtr86
  br label %cond.false84.Split

cond.false84.Split:                               ; preds = %return.fill_inbuf.Clone85
  %RetValue87 = load i32, i32* %RetValuePtr86
  br label %cond.end86

cond.end86:                                       ; preds = %cond.false84.Split, %cond.true80
  %cond87 = phi i32 [ %conv83, %cond.true80 ], [ %RetValue87, %cond.false84.Split ]
  %conv88 = trunc i32 %cond87 to i8
  %conv89 = zext i8 %conv88 to i32
  %138 = load i32, i32* %k, align 4
  %shl90 = shl i32 %conv89, %138
  %139 = load i32, i32* %b, align 4
  %or91 = or i32 %139, %shl90
  store i32 %or91, i32* %b, align 4
  %140 = load i32, i32* %k, align 4
  %add92 = add i32 %140, 8
  store i32 %add92, i32* %k, align 4
  br label %while.cond74

while.end93:                                      ; preds = %while.cond74
  %141 = load %struct.huft*, %struct.huft** %t, align 4
  %v94 = getelementptr inbounds %struct.huft, %struct.huft* %141, i32 0, i32 2
  %n95 = bitcast %union.anon* %v94 to i16*
  %142 = load i16, i16* %n95, align 4
  %conv96 = zext i16 %142 to i32
  %143 = load i32, i32* %b, align 4
  %144 = load i32, i32* %e, align 4
  %arrayidx97 = getelementptr inbounds [17 x i16], [17 x i16]* @mask_bits, i32 0, i32 %144
  %145 = load i16, i16* %arrayidx97, align 2
  %conv98 = zext i16 %145 to i32
  %and99 = and i32 %143, %conv98
  %add100 = add i32 %conv96, %and99
  store i32 %add100, i32* %n, align 4
  %146 = load i32, i32* %e, align 4
  %147 = load i32, i32* %b, align 4
  %shr101 = lshr i32 %147, %146
  store i32 %shr101, i32* %b, align 4
  %148 = load i32, i32* %e, align 4
  %149 = load i32, i32* %k, align 4
  %sub102 = sub i32 %149, %148
  store i32 %sub102, i32* %k, align 4
  br label %while.cond103

while.cond103:                                    ; preds = %cond.end115, %while.end93
  %150 = load i32, i32* %k, align 4
  %151 = load i32, i32* %bd.addr, align 4
  %cmp104 = icmp ult i32 %150, %151
  br i1 %cmp104, label %while.body106, label %while.end122

while.body106:                                    ; preds = %while.cond103
  %152 = load i32, i32* @inptr, align 4
  %153 = load i32, i32* @insize, align 4
  %cmp107 = icmp ult i32 %152, %153
  br i1 %cmp107, label %cond.true109, label %cond.false113

cond.true109:                                     ; preds = %while.body106
  %154 = load i32, i32* @inptr, align 4
  %inc110 = add i32 %154, 1
  store i32 %inc110, i32* @inptr, align 4
  %arrayidx111 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i32 0, i32 %154
  %155 = load i8, i8* %arrayidx111, align 1
  %conv112 = zext i8 %155 to i32
  br label %cond.end115

cond.false113:                                    ; preds = %while.body106
  br label %entry.fill_inbuf.Clone30

entry.fill_inbuf.Clone30:                         ; preds = %cond.false113
  %retval.fill_inbuf.Clone31 = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone32 = alloca i32, align 4
  %len.fill_inbuf.Clone33 = alloca i32, align 4
  store i32 0, i32* %eof_ok.addr.fill_inbuf.Clone32, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone34 = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone34, align 4
  br label %do.body.fill_inbuf.Clone35

do.body.fill_inbuf.Clone35:                       ; preds = %do.cond.fill_inbuf.Clone45, %entry.fill_inbuf.Clone30
  %156 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone36 = sub i32 32768, %156
  %157 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone37 = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %157
  %158 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone38 = call i32 @spec_read(i32 %158, i8* %add.ptr.fill_inbuf.Clone37, i32 %sub.fill_inbuf.Clone36)
  store i32 %call1.fill_inbuf.Clone38, i32* %len.fill_inbuf.Clone33, align 4
  %159 = load i32, i32* %len.fill_inbuf.Clone33, align 4
  %cmp.fill_inbuf.Clone39 = icmp eq i32 %159, 0
  br i1 %cmp.fill_inbuf.Clone39, label %if.then.fill_inbuf.Clone42, label %lor.lhs.false.fill_inbuf.Clone40

lor.lhs.false.fill_inbuf.Clone40:                 ; preds = %do.body.fill_inbuf.Clone35
  %160 = load i32, i32* %len.fill_inbuf.Clone33, align 4
  %cmp2.fill_inbuf.Clone41 = icmp eq i32 %160, -1
  br i1 %cmp2.fill_inbuf.Clone41, label %if.then.fill_inbuf.Clone42, label %if.end.fill_inbuf.Clone43

if.then.fill_inbuf.Clone42:                       ; preds = %lor.lhs.false.fill_inbuf.Clone40, %do.body.fill_inbuf.Clone35
  br label %do.end.fill_inbuf.Clone47

if.end.fill_inbuf.Clone43:                        ; preds = %lor.lhs.false.fill_inbuf.Clone40
  %161 = load i32, i32* %len.fill_inbuf.Clone33, align 4
  %162 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone44 = add i32 %162, %161
  store i32 %add.fill_inbuf.Clone44, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone45

do.cond.fill_inbuf.Clone45:                       ; preds = %if.end.fill_inbuf.Clone43
  %163 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone46 = icmp ult i32 %163, 32768
  br i1 %cmp3.fill_inbuf.Clone46, label %do.body.fill_inbuf.Clone35, label %do.end.fill_inbuf.Clone47

do.end.fill_inbuf.Clone47:                        ; preds = %do.cond.fill_inbuf.Clone45, %if.then.fill_inbuf.Clone42
  %164 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone48 = icmp eq i32 %164, 0
  br i1 %cmp4.fill_inbuf.Clone48, label %if.then5.fill_inbuf.Clone49, label %if.end8.fill_inbuf.Clone53

if.then5.fill_inbuf.Clone49:                      ; preds = %do.end.fill_inbuf.Clone47
  %165 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone32, align 4
  %tobool.fill_inbuf.Clone50 = icmp ne i32 %165, 0
  br i1 %tobool.fill_inbuf.Clone50, label %if.then6.fill_inbuf.Clone51, label %if.end7.fill_inbuf.Clone52

if.then6.fill_inbuf.Clone51:                      ; preds = %if.then5.fill_inbuf.Clone49
  store i32 -1, i32* %retval.fill_inbuf.Clone31, align 4
  br label %return.fill_inbuf.Clone56

if.end7.fill_inbuf.Clone52:                       ; preds = %if.then5.fill_inbuf.Clone49
  br label %entry.read_error.Clone172

entry.read_error.Clone172:                        ; preds = %if.end7.fill_inbuf.Clone52
  %166 = load i8*, i8** @progname, align 4
  %call.read_error.Clone173 = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone174 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone173, i32 2
  %call1.read_error.Clone175 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone174, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %166)
  %call2.read_error.Clone176 = call i32* @_errno()
  %167 = load i32, i32* %call2.read_error.Clone176, align 4
  %cmp.read_error.Clone177 = icmp ne i32 %167, 0
  br i1 %cmp.read_error.Clone177, label %if.then.read_error.Clone178, label %if.else.read_error.Clone179

if.then.read_error.Clone178:                      ; preds = %entry.read_error.Clone172
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone183

if.else.read_error.Clone179:                      ; preds = %entry.read_error.Clone172
  %call3.read_error.Clone180 = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone181 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone180, i32 2
  %call5.read_error.Clone182 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone181, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone183

if.end.read_error.Clone183:                       ; preds = %if.else.read_error.Clone179, %if.then.read_error.Clone178
  br label %entry.abort_gzip.Clone214

entry.abort_gzip.Clone214:                        ; preds = %if.end.read_error.Clone183
  %168 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone215 = icmp ne i32 %168, 0
  br i1 %tobool.abort_gzip.Clone215, label %if.then.abort_gzip.Clone216, label %if.end.abort_gzip.Clone219

if.then.abort_gzip.Clone216:                      ; preds = %entry.abort_gzip.Clone214
  %169 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone217 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %169)
  %call1.abort_gzip.Clone218 = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone219

if.end.abort_gzip.Clone219:                       ; preds = %if.then.abort_gzip.Clone216, %entry.abort_gzip.Clone214
  br label %entry.do_exit.Clone262

entry.do_exit.Clone262:                           ; preds = %if.end.abort_gzip.Clone219
  %exitcode.addr.do_exit.Clone263 = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone263, align 4
  %170 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone264 = icmp ne i32 %170, 0
  br i1 %tobool.do_exit.Clone264, label %if.then.do_exit.Clone265, label %if.end.do_exit.Clone266

if.then.do_exit.Clone265:                         ; preds = %entry.do_exit.Clone262
  %171 = load i32, i32* %exitcode.addr.do_exit.Clone263, align 4
  call void @exit(i32 %171) #7
  unreachable

if.end.do_exit.Clone266:                          ; preds = %entry.do_exit.Clone262
  store i32 1, i32* @do_exit.in_exit, align 4
  %172 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone267 = icmp ne i8* %172, null
  br i1 %cmp.do_exit.Clone267, label %if.then1.do_exit.Clone268, label %if.end2.do_exit.Clone269

if.then1.do_exit.Clone268:                        ; preds = %if.end.do_exit.Clone266
  %173 = load i8*, i8** @env, align 4
  call void @free(i8* %173) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone269

if.end2.do_exit.Clone269:                         ; preds = %if.then1.do_exit.Clone268, %if.end.do_exit.Clone266
  %174 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone270 = icmp ne i8** %174, null
  br i1 %cmp3.do_exit.Clone270, label %if.then4.do_exit.Clone271, label %if.end5.do_exit.Clone272

if.then4.do_exit.Clone271:                        ; preds = %if.end2.do_exit.Clone269
  %175 = load i8**, i8*** @args, align 4
  %176 = bitcast i8** %175 to i8*
  call void @free(i8* %176) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone272

if.end5.do_exit.Clone272:                         ; preds = %if.then4.do_exit.Clone271, %if.end2.do_exit.Clone269
  %177 = load i32, i32* %exitcode.addr.do_exit.Clone263, align 4
  call void @exit(i32 %177) #7
  unreachable

return.do_exit.Clone273:                          ; No predecessors!
  br label %if.end.abort_gzip.Clone219.Split

if.end.abort_gzip.Clone219.Split:                 ; preds = %return.do_exit.Clone273
  br label %if.end.read_error.Clone183.Split

if.end.read_error.Clone183.Split:                 ; preds = %if.end.abort_gzip.Clone219.Split
  br label %if.end7.fill_inbuf.Clone52.Split

if.end7.fill_inbuf.Clone52.Split:                 ; preds = %if.end.read_error.Clone183.Split
  br label %if.end8.fill_inbuf.Clone53

if.end8.fill_inbuf.Clone53:                       ; preds = %if.end7.fill_inbuf.Clone52.Split, %do.end.fill_inbuf.Clone47
  %178 = load i32, i32* @insize, align 4
  %179 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone54 = add i32 %179, %178
  store i32 %add9.fill_inbuf.Clone54, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %180 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone55 = zext i8 %180 to i32
  store i32 %conv.fill_inbuf.Clone55, i32* %retval.fill_inbuf.Clone31, align 4
  br label %return.fill_inbuf.Clone56

return.fill_inbuf.Clone56:                        ; preds = %if.end8.fill_inbuf.Clone53, %if.then6.fill_inbuf.Clone51
  %181 = load i32, i32* %retval.fill_inbuf.Clone31, align 4
  store i32 %181, i32* %RetValuePtr57
  br label %cond.false113.Split

cond.false113.Split:                              ; preds = %return.fill_inbuf.Clone56
  %RetValue58 = load i32, i32* %RetValuePtr57
  br label %cond.end115

cond.end115:                                      ; preds = %cond.false113.Split, %cond.true109
  %cond116 = phi i32 [ %conv112, %cond.true109 ], [ %RetValue58, %cond.false113.Split ]
  %conv117 = trunc i32 %cond116 to i8
  %conv118 = zext i8 %conv117 to i32
  %182 = load i32, i32* %k, align 4
  %shl119 = shl i32 %conv118, %182
  %183 = load i32, i32* %b, align 4
  %or120 = or i32 %183, %shl119
  store i32 %or120, i32* %b, align 4
  %184 = load i32, i32* %k, align 4
  %add121 = add i32 %184, 8
  store i32 %add121, i32* %k, align 4
  br label %while.cond103

while.end122:                                     ; preds = %while.cond103
  %185 = load %struct.huft*, %struct.huft** %td.addr, align 4
  %186 = load i32, i32* %b, align 4
  %187 = load i32, i32* %md, align 4
  %and123 = and i32 %186, %187
  %add.ptr124 = getelementptr inbounds %struct.huft, %struct.huft* %185, i32 %and123
  store %struct.huft* %add.ptr124, %struct.huft** %t, align 4
  %e125 = getelementptr inbounds %struct.huft, %struct.huft* %add.ptr124, i32 0, i32 0
  %188 = load i8, i8* %e125, align 4
  %conv126 = zext i8 %188 to i32
  store i32 %conv126, i32* %e, align 4
  %cmp127 = icmp ugt i32 %conv126, 16
  br i1 %cmp127, label %if.then129, label %if.end174

if.then129:                                       ; preds = %while.end122
  br label %do.body130

do.body130:                                       ; preds = %do.cond162, %if.then129
  %189 = load i32, i32* %e, align 4
  %cmp131 = icmp eq i32 %189, 99
  br i1 %cmp131, label %if.then133, label %if.end134

if.then133:                                       ; preds = %do.body130
  store i32 1, i32* %retval, align 4
  br label %return

if.end134:                                        ; preds = %do.body130
  %190 = load %struct.huft*, %struct.huft** %t, align 4
  %b135 = getelementptr inbounds %struct.huft, %struct.huft* %190, i32 0, i32 1
  %191 = load i8, i8* %b135, align 1
  %conv136 = zext i8 %191 to i32
  %192 = load i32, i32* %b, align 4
  %shr137 = lshr i32 %192, %conv136
  store i32 %shr137, i32* %b, align 4
  %193 = load %struct.huft*, %struct.huft** %t, align 4
  %b138 = getelementptr inbounds %struct.huft, %struct.huft* %193, i32 0, i32 1
  %194 = load i8, i8* %b138, align 1
  %conv139 = zext i8 %194 to i32
  %195 = load i32, i32* %k, align 4
  %sub140 = sub i32 %195, %conv139
  store i32 %sub140, i32* %k, align 4
  %196 = load i32, i32* %e, align 4
  %sub141 = sub i32 %196, 16
  store i32 %sub141, i32* %e, align 4
  br label %while.cond142

while.cond142:                                    ; preds = %cond.end154, %if.end134
  %197 = load i32, i32* %k, align 4
  %198 = load i32, i32* %e, align 4
  %cmp143 = icmp ult i32 %197, %198
  br i1 %cmp143, label %while.body145, label %while.end161

while.body145:                                    ; preds = %while.cond142
  %199 = load i32, i32* @inptr, align 4
  %200 = load i32, i32* @insize, align 4
  %cmp146 = icmp ult i32 %199, %200
  br i1 %cmp146, label %cond.true148, label %cond.false152

cond.true148:                                     ; preds = %while.body145
  %201 = load i32, i32* @inptr, align 4
  %inc149 = add i32 %201, 1
  store i32 %inc149, i32* @inptr, align 4
  %arrayidx150 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i32 0, i32 %201
  %202 = load i8, i8* %arrayidx150, align 1
  %conv151 = zext i8 %202 to i32
  br label %cond.end154

cond.false152:                                    ; preds = %while.body145
  br label %entry.fill_inbuf.Clone1

entry.fill_inbuf.Clone1:                          ; preds = %cond.false152
  %retval.fill_inbuf.Clone2 = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone3 = alloca i32, align 4
  %len.fill_inbuf.Clone4 = alloca i32, align 4
  store i32 0, i32* %eof_ok.addr.fill_inbuf.Clone3, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone5 = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone5, align 4
  br label %do.body.fill_inbuf.Clone6

do.body.fill_inbuf.Clone6:                        ; preds = %do.cond.fill_inbuf.Clone16, %entry.fill_inbuf.Clone1
  %203 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone7 = sub i32 32768, %203
  %204 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone8 = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %204
  %205 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone9 = call i32 @spec_read(i32 %205, i8* %add.ptr.fill_inbuf.Clone8, i32 %sub.fill_inbuf.Clone7)
  store i32 %call1.fill_inbuf.Clone9, i32* %len.fill_inbuf.Clone4, align 4
  %206 = load i32, i32* %len.fill_inbuf.Clone4, align 4
  %cmp.fill_inbuf.Clone10 = icmp eq i32 %206, 0
  br i1 %cmp.fill_inbuf.Clone10, label %if.then.fill_inbuf.Clone13, label %lor.lhs.false.fill_inbuf.Clone11

lor.lhs.false.fill_inbuf.Clone11:                 ; preds = %do.body.fill_inbuf.Clone6
  %207 = load i32, i32* %len.fill_inbuf.Clone4, align 4
  %cmp2.fill_inbuf.Clone12 = icmp eq i32 %207, -1
  br i1 %cmp2.fill_inbuf.Clone12, label %if.then.fill_inbuf.Clone13, label %if.end.fill_inbuf.Clone14

if.then.fill_inbuf.Clone13:                       ; preds = %lor.lhs.false.fill_inbuf.Clone11, %do.body.fill_inbuf.Clone6
  br label %do.end.fill_inbuf.Clone18

if.end.fill_inbuf.Clone14:                        ; preds = %lor.lhs.false.fill_inbuf.Clone11
  %208 = load i32, i32* %len.fill_inbuf.Clone4, align 4
  %209 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone15 = add i32 %209, %208
  store i32 %add.fill_inbuf.Clone15, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone16

do.cond.fill_inbuf.Clone16:                       ; preds = %if.end.fill_inbuf.Clone14
  %210 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone17 = icmp ult i32 %210, 32768
  br i1 %cmp3.fill_inbuf.Clone17, label %do.body.fill_inbuf.Clone6, label %do.end.fill_inbuf.Clone18

do.end.fill_inbuf.Clone18:                        ; preds = %do.cond.fill_inbuf.Clone16, %if.then.fill_inbuf.Clone13
  %211 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone19 = icmp eq i32 %211, 0
  br i1 %cmp4.fill_inbuf.Clone19, label %if.then5.fill_inbuf.Clone20, label %if.end8.fill_inbuf.Clone24

if.then5.fill_inbuf.Clone20:                      ; preds = %do.end.fill_inbuf.Clone18
  %212 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone3, align 4
  %tobool.fill_inbuf.Clone21 = icmp ne i32 %212, 0
  br i1 %tobool.fill_inbuf.Clone21, label %if.then6.fill_inbuf.Clone22, label %if.end7.fill_inbuf.Clone23

if.then6.fill_inbuf.Clone22:                      ; preds = %if.then5.fill_inbuf.Clone20
  store i32 -1, i32* %retval.fill_inbuf.Clone2, align 4
  br label %return.fill_inbuf.Clone27

if.end7.fill_inbuf.Clone23:                       ; preds = %if.then5.fill_inbuf.Clone20
  br label %entry.read_error.Clone184

entry.read_error.Clone184:                        ; preds = %if.end7.fill_inbuf.Clone23
  %213 = load i8*, i8** @progname, align 4
  %call.read_error.Clone185 = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone186 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone185, i32 2
  %call1.read_error.Clone187 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone186, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %213)
  %call2.read_error.Clone188 = call i32* @_errno()
  %214 = load i32, i32* %call2.read_error.Clone188, align 4
  %cmp.read_error.Clone189 = icmp ne i32 %214, 0
  br i1 %cmp.read_error.Clone189, label %if.then.read_error.Clone190, label %if.else.read_error.Clone191

if.then.read_error.Clone190:                      ; preds = %entry.read_error.Clone184
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone195

if.else.read_error.Clone191:                      ; preds = %entry.read_error.Clone184
  %call3.read_error.Clone192 = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone193 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone192, i32 2
  %call5.read_error.Clone194 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone193, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone195

if.end.read_error.Clone195:                       ; preds = %if.else.read_error.Clone191, %if.then.read_error.Clone190
  br label %entry.abort_gzip.Clone208

entry.abort_gzip.Clone208:                        ; preds = %if.end.read_error.Clone195
  %215 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone209 = icmp ne i32 %215, 0
  br i1 %tobool.abort_gzip.Clone209, label %if.then.abort_gzip.Clone210, label %if.end.abort_gzip.Clone213

if.then.abort_gzip.Clone210:                      ; preds = %entry.abort_gzip.Clone208
  %216 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone211 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %216)
  %call1.abort_gzip.Clone212 = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone213

if.end.abort_gzip.Clone213:                       ; preds = %if.then.abort_gzip.Clone210, %entry.abort_gzip.Clone208
  br label %entry.do_exit.Clone274

entry.do_exit.Clone274:                           ; preds = %if.end.abort_gzip.Clone213
  %exitcode.addr.do_exit.Clone275 = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone275, align 4
  %217 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone276 = icmp ne i32 %217, 0
  br i1 %tobool.do_exit.Clone276, label %if.then.do_exit.Clone277, label %if.end.do_exit.Clone278

if.then.do_exit.Clone277:                         ; preds = %entry.do_exit.Clone274
  %218 = load i32, i32* %exitcode.addr.do_exit.Clone275, align 4
  call void @exit(i32 %218) #7
  unreachable

if.end.do_exit.Clone278:                          ; preds = %entry.do_exit.Clone274
  store i32 1, i32* @do_exit.in_exit, align 4
  %219 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone279 = icmp ne i8* %219, null
  br i1 %cmp.do_exit.Clone279, label %if.then1.do_exit.Clone280, label %if.end2.do_exit.Clone281

if.then1.do_exit.Clone280:                        ; preds = %if.end.do_exit.Clone278
  %220 = load i8*, i8** @env, align 4
  call void @free(i8* %220) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone281

if.end2.do_exit.Clone281:                         ; preds = %if.then1.do_exit.Clone280, %if.end.do_exit.Clone278
  %221 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone282 = icmp ne i8** %221, null
  br i1 %cmp3.do_exit.Clone282, label %if.then4.do_exit.Clone283, label %if.end5.do_exit.Clone284

if.then4.do_exit.Clone283:                        ; preds = %if.end2.do_exit.Clone281
  %222 = load i8**, i8*** @args, align 4
  %223 = bitcast i8** %222 to i8*
  call void @free(i8* %223) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone284

if.end5.do_exit.Clone284:                         ; preds = %if.then4.do_exit.Clone283, %if.end2.do_exit.Clone281
  %224 = load i32, i32* %exitcode.addr.do_exit.Clone275, align 4
  call void @exit(i32 %224) #7
  unreachable

return.do_exit.Clone285:                          ; No predecessors!
  br label %if.end.abort_gzip.Clone213.Split

if.end.abort_gzip.Clone213.Split:                 ; preds = %return.do_exit.Clone285
  br label %if.end.read_error.Clone195.Split

if.end.read_error.Clone195.Split:                 ; preds = %if.end.abort_gzip.Clone213.Split
  br label %if.end7.fill_inbuf.Clone23.Split

if.end7.fill_inbuf.Clone23.Split:                 ; preds = %if.end.read_error.Clone195.Split
  br label %if.end8.fill_inbuf.Clone24

if.end8.fill_inbuf.Clone24:                       ; preds = %if.end7.fill_inbuf.Clone23.Split, %do.end.fill_inbuf.Clone18
  %225 = load i32, i32* @insize, align 4
  %226 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone25 = add i32 %226, %225
  store i32 %add9.fill_inbuf.Clone25, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %227 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone26 = zext i8 %227 to i32
  store i32 %conv.fill_inbuf.Clone26, i32* %retval.fill_inbuf.Clone2, align 4
  br label %return.fill_inbuf.Clone27

return.fill_inbuf.Clone27:                        ; preds = %if.end8.fill_inbuf.Clone24, %if.then6.fill_inbuf.Clone22
  %228 = load i32, i32* %retval.fill_inbuf.Clone2, align 4
  store i32 %228, i32* %RetValuePtr28
  br label %cond.false152.Split

cond.false152.Split:                              ; preds = %return.fill_inbuf.Clone27
  %RetValue29 = load i32, i32* %RetValuePtr28
  br label %cond.end154

cond.end154:                                      ; preds = %cond.false152.Split, %cond.true148
  %cond155 = phi i32 [ %conv151, %cond.true148 ], [ %RetValue29, %cond.false152.Split ]
  %conv156 = trunc i32 %cond155 to i8
  %conv157 = zext i8 %conv156 to i32
  %229 = load i32, i32* %k, align 4
  %shl158 = shl i32 %conv157, %229
  %230 = load i32, i32* %b, align 4
  %or159 = or i32 %230, %shl158
  store i32 %or159, i32* %b, align 4
  %231 = load i32, i32* %k, align 4
  %add160 = add i32 %231, 8
  store i32 %add160, i32* %k, align 4
  br label %while.cond142

while.end161:                                     ; preds = %while.cond142
  br label %do.cond162

do.cond162:                                       ; preds = %while.end161
  %232 = load %struct.huft*, %struct.huft** %t, align 4
  %v163 = getelementptr inbounds %struct.huft, %struct.huft* %232, i32 0, i32 2
  %t164 = bitcast %union.anon* %v163 to %struct.huft**
  %233 = load %struct.huft*, %struct.huft** %t164, align 4
  %234 = load i32, i32* %b, align 4
  %235 = load i32, i32* %e, align 4
  %arrayidx165 = getelementptr inbounds [17 x i16], [17 x i16]* @mask_bits, i32 0, i32 %235
  %236 = load i16, i16* %arrayidx165, align 2
  %conv166 = zext i16 %236 to i32
  %and167 = and i32 %234, %conv166
  %add.ptr168 = getelementptr inbounds %struct.huft, %struct.huft* %233, i32 %and167
  store %struct.huft* %add.ptr168, %struct.huft** %t, align 4
  %e169 = getelementptr inbounds %struct.huft, %struct.huft* %add.ptr168, i32 0, i32 0
  %237 = load i8, i8* %e169, align 4
  %conv170 = zext i8 %237 to i32
  store i32 %conv170, i32* %e, align 4
  %cmp171 = icmp ugt i32 %conv170, 16
  br i1 %cmp171, label %do.body130, label %do.end173

do.end173:                                        ; preds = %do.cond162
  br label %if.end174

if.end174:                                        ; preds = %do.end173, %while.end122
  %238 = load %struct.huft*, %struct.huft** %t, align 4
  %b175 = getelementptr inbounds %struct.huft, %struct.huft* %238, i32 0, i32 1
  %239 = load i8, i8* %b175, align 1
  %conv176 = zext i8 %239 to i32
  %240 = load i32, i32* %b, align 4
  %shr177 = lshr i32 %240, %conv176
  store i32 %shr177, i32* %b, align 4
  %241 = load %struct.huft*, %struct.huft** %t, align 4
  %b178 = getelementptr inbounds %struct.huft, %struct.huft* %241, i32 0, i32 1
  %242 = load i8, i8* %b178, align 1
  %conv179 = zext i8 %242 to i32
  %243 = load i32, i32* %k, align 4
  %sub180 = sub i32 %243, %conv179
  store i32 %sub180, i32* %k, align 4
  br label %while.cond181

while.cond181:                                    ; preds = %cond.end193, %if.end174
  %244 = load i32, i32* %k, align 4
  %245 = load i32, i32* %e, align 4
  %cmp182 = icmp ult i32 %244, %245
  br i1 %cmp182, label %while.body184, label %while.end200

while.body184:                                    ; preds = %while.cond181
  %246 = load i32, i32* @inptr, align 4
  %247 = load i32, i32* @insize, align 4
  %cmp185 = icmp ult i32 %246, %247
  br i1 %cmp185, label %cond.true187, label %cond.false191

cond.true187:                                     ; preds = %while.body184
  %248 = load i32, i32* @inptr, align 4
  %inc188 = add i32 %248, 1
  store i32 %inc188, i32* @inptr, align 4
  %arrayidx189 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i32 0, i32 %248
  %249 = load i8, i8* %arrayidx189, align 1
  %conv190 = zext i8 %249 to i32
  br label %cond.end193

cond.false191:                                    ; preds = %while.body184
  br label %entry.fill_inbuf.Clone

entry.fill_inbuf.Clone:                           ; preds = %cond.false191
  %retval.fill_inbuf.Clone = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone = alloca i32, align 4
  %len.fill_inbuf.Clone = alloca i32, align 4
  store i32 0, i32* %eof_ok.addr.fill_inbuf.Clone, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone, align 4
  br label %do.body.fill_inbuf.Clone

do.body.fill_inbuf.Clone:                         ; preds = %do.cond.fill_inbuf.Clone, %entry.fill_inbuf.Clone
  %250 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone = sub i32 32768, %250
  %251 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %251
  %252 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone = call i32 @spec_read(i32 %252, i8* %add.ptr.fill_inbuf.Clone, i32 %sub.fill_inbuf.Clone)
  store i32 %call1.fill_inbuf.Clone, i32* %len.fill_inbuf.Clone, align 4
  %253 = load i32, i32* %len.fill_inbuf.Clone, align 4
  %cmp.fill_inbuf.Clone = icmp eq i32 %253, 0
  br i1 %cmp.fill_inbuf.Clone, label %if.then.fill_inbuf.Clone, label %lor.lhs.false.fill_inbuf.Clone

lor.lhs.false.fill_inbuf.Clone:                   ; preds = %do.body.fill_inbuf.Clone
  %254 = load i32, i32* %len.fill_inbuf.Clone, align 4
  %cmp2.fill_inbuf.Clone = icmp eq i32 %254, -1
  br i1 %cmp2.fill_inbuf.Clone, label %if.then.fill_inbuf.Clone, label %if.end.fill_inbuf.Clone

if.then.fill_inbuf.Clone:                         ; preds = %lor.lhs.false.fill_inbuf.Clone, %do.body.fill_inbuf.Clone
  br label %do.end.fill_inbuf.Clone

if.end.fill_inbuf.Clone:                          ; preds = %lor.lhs.false.fill_inbuf.Clone
  %255 = load i32, i32* %len.fill_inbuf.Clone, align 4
  %256 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone = add i32 %256, %255
  store i32 %add.fill_inbuf.Clone, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone

do.cond.fill_inbuf.Clone:                         ; preds = %if.end.fill_inbuf.Clone
  %257 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone = icmp ult i32 %257, 32768
  br i1 %cmp3.fill_inbuf.Clone, label %do.body.fill_inbuf.Clone, label %do.end.fill_inbuf.Clone

do.end.fill_inbuf.Clone:                          ; preds = %do.cond.fill_inbuf.Clone, %if.then.fill_inbuf.Clone
  %258 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone = icmp eq i32 %258, 0
  br i1 %cmp4.fill_inbuf.Clone, label %if.then5.fill_inbuf.Clone, label %if.end8.fill_inbuf.Clone

if.then5.fill_inbuf.Clone:                        ; preds = %do.end.fill_inbuf.Clone
  %259 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone, align 4
  %tobool.fill_inbuf.Clone = icmp ne i32 %259, 0
  br i1 %tobool.fill_inbuf.Clone, label %if.then6.fill_inbuf.Clone, label %if.end7.fill_inbuf.Clone

if.then6.fill_inbuf.Clone:                        ; preds = %if.then5.fill_inbuf.Clone
  store i32 -1, i32* %retval.fill_inbuf.Clone, align 4
  br label %return.fill_inbuf.Clone

if.end7.fill_inbuf.Clone:                         ; preds = %if.then5.fill_inbuf.Clone
  br label %entry.read_error.Clone196

entry.read_error.Clone196:                        ; preds = %if.end7.fill_inbuf.Clone
  %260 = load i8*, i8** @progname, align 4
  %call.read_error.Clone197 = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone198 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone197, i32 2
  %call1.read_error.Clone199 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone198, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %260)
  %call2.read_error.Clone200 = call i32* @_errno()
  %261 = load i32, i32* %call2.read_error.Clone200, align 4
  %cmp.read_error.Clone201 = icmp ne i32 %261, 0
  br i1 %cmp.read_error.Clone201, label %if.then.read_error.Clone202, label %if.else.read_error.Clone203

if.then.read_error.Clone202:                      ; preds = %entry.read_error.Clone196
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone207

if.else.read_error.Clone203:                      ; preds = %entry.read_error.Clone196
  %call3.read_error.Clone204 = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone205 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone204, i32 2
  %call5.read_error.Clone206 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone205, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone207

if.end.read_error.Clone207:                       ; preds = %if.else.read_error.Clone203, %if.then.read_error.Clone202
  br label %entry.abort_gzip.Clone

entry.abort_gzip.Clone:                           ; preds = %if.end.read_error.Clone207
  %262 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone = icmp ne i32 %262, 0
  br i1 %tobool.abort_gzip.Clone, label %if.then.abort_gzip.Clone, label %if.end.abort_gzip.Clone

if.then.abort_gzip.Clone:                         ; preds = %entry.abort_gzip.Clone
  %263 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %263)
  %call1.abort_gzip.Clone = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone

if.end.abort_gzip.Clone:                          ; preds = %if.then.abort_gzip.Clone, %entry.abort_gzip.Clone
  br label %entry.do_exit.Clone286

entry.do_exit.Clone286:                           ; preds = %if.end.abort_gzip.Clone
  %exitcode.addr.do_exit.Clone287 = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone287, align 4
  %264 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone288 = icmp ne i32 %264, 0
  br i1 %tobool.do_exit.Clone288, label %if.then.do_exit.Clone289, label %if.end.do_exit.Clone290

if.then.do_exit.Clone289:                         ; preds = %entry.do_exit.Clone286
  %265 = load i32, i32* %exitcode.addr.do_exit.Clone287, align 4
  call void @exit(i32 %265) #7
  unreachable

if.end.do_exit.Clone290:                          ; preds = %entry.do_exit.Clone286
  store i32 1, i32* @do_exit.in_exit, align 4
  %266 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone291 = icmp ne i8* %266, null
  br i1 %cmp.do_exit.Clone291, label %if.then1.do_exit.Clone292, label %if.end2.do_exit.Clone293

if.then1.do_exit.Clone292:                        ; preds = %if.end.do_exit.Clone290
  %267 = load i8*, i8** @env, align 4
  call void @free(i8* %267) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone293

if.end2.do_exit.Clone293:                         ; preds = %if.then1.do_exit.Clone292, %if.end.do_exit.Clone290
  %268 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone294 = icmp ne i8** %268, null
  br i1 %cmp3.do_exit.Clone294, label %if.then4.do_exit.Clone295, label %if.end5.do_exit.Clone296

if.then4.do_exit.Clone295:                        ; preds = %if.end2.do_exit.Clone293
  %269 = load i8**, i8*** @args, align 4
  %270 = bitcast i8** %269 to i8*
  call void @free(i8* %270) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone296

if.end5.do_exit.Clone296:                         ; preds = %if.then4.do_exit.Clone295, %if.end2.do_exit.Clone293
  %271 = load i32, i32* %exitcode.addr.do_exit.Clone287, align 4
  call void @exit(i32 %271) #7
  unreachable

return.do_exit.Clone297:                          ; No predecessors!
  br label %if.end.abort_gzip.Clone.Split

if.end.abort_gzip.Clone.Split:                    ; preds = %return.do_exit.Clone297
  br label %if.end.read_error.Clone207.Split

if.end.read_error.Clone207.Split:                 ; preds = %if.end.abort_gzip.Clone.Split
  br label %if.end7.fill_inbuf.Clone.Split

if.end7.fill_inbuf.Clone.Split:                   ; preds = %if.end.read_error.Clone207.Split
  br label %if.end8.fill_inbuf.Clone

if.end8.fill_inbuf.Clone:                         ; preds = %if.end7.fill_inbuf.Clone.Split, %do.end.fill_inbuf.Clone
  %272 = load i32, i32* @insize, align 4
  %273 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone = add i32 %273, %272
  store i32 %add9.fill_inbuf.Clone, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %274 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone = zext i8 %274 to i32
  store i32 %conv.fill_inbuf.Clone, i32* %retval.fill_inbuf.Clone, align 4
  br label %return.fill_inbuf.Clone

return.fill_inbuf.Clone:                          ; preds = %if.end8.fill_inbuf.Clone, %if.then6.fill_inbuf.Clone
  %275 = load i32, i32* %retval.fill_inbuf.Clone, align 4
  store i32 %275, i32* %RetValuePtr
  br label %cond.false191.Split

cond.false191.Split:                              ; preds = %return.fill_inbuf.Clone
  %RetValue = load i32, i32* %RetValuePtr
  br label %cond.end193

cond.end193:                                      ; preds = %cond.false191.Split, %cond.true187
  %cond194 = phi i32 [ %conv190, %cond.true187 ], [ %RetValue, %cond.false191.Split ]
  %conv195 = trunc i32 %cond194 to i8
  %conv196 = zext i8 %conv195 to i32
  %276 = load i32, i32* %k, align 4
  %shl197 = shl i32 %conv196, %276
  %277 = load i32, i32* %b, align 4
  %or198 = or i32 %277, %shl197
  store i32 %or198, i32* %b, align 4
  %278 = load i32, i32* %k, align 4
  %add199 = add i32 %278, 8
  store i32 %add199, i32* %k, align 4
  br label %while.cond181

while.end200:                                     ; preds = %while.cond181
  %279 = load i32, i32* %w, align 4
  %280 = load %struct.huft*, %struct.huft** %t, align 4
  %v201 = getelementptr inbounds %struct.huft, %struct.huft* %280, i32 0, i32 2
  %n202 = bitcast %union.anon* %v201 to i16*
  %281 = load i16, i16* %n202, align 4
  %conv203 = zext i16 %281 to i32
  %sub204 = sub i32 %279, %conv203
  %282 = load i32, i32* %b, align 4
  %283 = load i32, i32* %e, align 4
  %arrayidx205 = getelementptr inbounds [17 x i16], [17 x i16]* @mask_bits, i32 0, i32 %283
  %284 = load i16, i16* %arrayidx205, align 2
  %conv206 = zext i16 %284 to i32
  %and207 = and i32 %282, %conv206
  %sub208 = sub i32 %sub204, %and207
  store i32 %sub208, i32* %d, align 4
  %285 = load i32, i32* %e, align 4
  %286 = load i32, i32* %b, align 4
  %shr209 = lshr i32 %286, %285
  store i32 %shr209, i32* %b, align 4
  %287 = load i32, i32* %e, align 4
  %288 = load i32, i32* %k, align 4
  %sub210 = sub i32 %288, %287
  store i32 %sub210, i32* %k, align 4
  br label %do.body211

do.body211:                                       ; preds = %do.cond248, %while.end200
  %289 = load i32, i32* %d, align 4
  %and212 = and i32 %289, 32767
  store i32 %and212, i32* %d, align 4
  %290 = load i32, i32* %w, align 4
  %cmp213 = icmp ugt i32 %and212, %290
  br i1 %cmp213, label %cond.true215, label %cond.false216

cond.true215:                                     ; preds = %do.body211
  %291 = load i32, i32* %d, align 4
  br label %cond.end217

cond.false216:                                    ; preds = %do.body211
  %292 = load i32, i32* %w, align 4
  br label %cond.end217

cond.end217:                                      ; preds = %cond.false216, %cond.true215
  %cond218 = phi i32 [ %291, %cond.true215 ], [ %292, %cond.false216 ]
  %sub219 = sub i32 32768, %cond218
  store i32 %sub219, i32* %e, align 4
  %293 = load i32, i32* %n, align 4
  %cmp220 = icmp ugt i32 %sub219, %293
  br i1 %cmp220, label %cond.true222, label %cond.false223

cond.true222:                                     ; preds = %cond.end217
  %294 = load i32, i32* %n, align 4
  br label %cond.end224

cond.false223:                                    ; preds = %cond.end217
  %295 = load i32, i32* %e, align 4
  br label %cond.end224

cond.end224:                                      ; preds = %cond.false223, %cond.true222
  %cond225 = phi i32 [ %294, %cond.true222 ], [ %295, %cond.false223 ]
  store i32 %cond225, i32* %e, align 4
  %296 = load i32, i32* %n, align 4
  %sub226 = sub i32 %296, %cond225
  store i32 %sub226, i32* %n, align 4
  %297 = load i32, i32* %w, align 4
  %298 = load i32, i32* %d, align 4
  %sub227 = sub i32 %297, %298
  %299 = load i32, i32* %e, align 4
  %cmp228 = icmp uge i32 %sub227, %299
  br i1 %cmp228, label %if.then230, label %if.else235

if.then230:                                       ; preds = %cond.end224
  %300 = load i32, i32* %w, align 4
  %add.ptr231 = getelementptr inbounds i8, i8* getelementptr inbounds ([65536 x i8], [65536 x i8]* @window, i32 0, i32 0), i32 %300
  %301 = load i32, i32* %d, align 4
  %add.ptr232 = getelementptr inbounds i8, i8* getelementptr inbounds ([65536 x i8], [65536 x i8]* @window, i32 0, i32 0), i32 %301
  %302 = load i32, i32* %e, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %add.ptr231, i8* align 1 %add.ptr232, i32 %302, i1 false)
  %303 = load i32, i32* %e, align 4
  %304 = load i32, i32* %w, align 4
  %add233 = add i32 %304, %303
  store i32 %add233, i32* %w, align 4
  %305 = load i32, i32* %e, align 4
  %306 = load i32, i32* %d, align 4
  %add234 = add i32 %306, %305
  store i32 %add234, i32* %d, align 4
  br label %if.end243

if.else235:                                       ; preds = %cond.end224
  br label %do.body236

do.body236:                                       ; preds = %do.cond241, %if.else235
  %307 = load i32, i32* %d, align 4
  %inc237 = add i32 %307, 1
  store i32 %inc237, i32* %d, align 4
  %arrayidx238 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([65536 x i8]* @window to [0 x i8]*), i32 0, i32 %307
  %308 = load i8, i8* %arrayidx238, align 1
  %309 = load i32, i32* %w, align 4
  %inc239 = add i32 %309, 1
  store i32 %inc239, i32* %w, align 4
  %arrayidx240 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([65536 x i8]* @window to [0 x i8]*), i32 0, i32 %309
  store i8 %308, i8* %arrayidx240, align 1
  br label %do.cond241

do.cond241:                                       ; preds = %do.body236
  %310 = load i32, i32* %e, align 4
  %dec = add i32 %310, -1
  store i32 %dec, i32* %e, align 4
  %tobool = icmp ne i32 %dec, 0
  br i1 %tobool, label %do.body236, label %do.end242

do.end242:                                        ; preds = %do.cond241
  br label %if.end243

if.end243:                                        ; preds = %do.end242, %if.then230
  %311 = load i32, i32* %w, align 4
  %cmp244 = icmp eq i32 %311, 32768
  br i1 %cmp244, label %if.then246, label %if.end247

if.then246:                                       ; preds = %if.end243
  %312 = load i32, i32* %w, align 4
  store i32 %312, i32* @outcnt, align 4
  br label %entry.flush_window.Clone

entry.flush_window.Clone:                         ; preds = %if.then246
  %313 = load i32, i32* @outcnt, align 4
  %cmp.flush_window.Clone = icmp eq i32 %313, 0
  br i1 %cmp.flush_window.Clone, label %if.then.flush_window.Clone, label %if.end.flush_window.Clone

if.then.flush_window.Clone:                       ; preds = %entry.flush_window.Clone
  br label %return.flush_window.Clone

if.end.flush_window.Clone:                        ; preds = %entry.flush_window.Clone
  %314 = load i32, i32* @outcnt, align 4
  br label %entry.updcrc.Clone

entry.updcrc.Clone:                               ; preds = %if.end.flush_window.Clone
  %n.addr.updcrc.Clone = alloca i32, align 4
  %s.addr.updcrc.Clone = alloca i8*, align 4
  %c.updcrc.Clone = alloca i32, align 4
  store i32 %314, i32* %n.addr.updcrc.Clone, align 4
  store i8* getelementptr inbounds ([65536 x i8], [65536 x i8]* @window, i32 0, i32 0), i8** %s.addr.updcrc.Clone, align 4
  %315 = load i8*, i8** %s.addr.updcrc.Clone, align 4
  %cmp.updcrc.Clone = icmp eq i8* %315, null
  br i1 %cmp.updcrc.Clone, label %if.then.updcrc.Clone, label %if.else.updcrc.Clone

if.then.updcrc.Clone:                             ; preds = %entry.updcrc.Clone
  store i32 -1, i32* %c.updcrc.Clone, align 4
  br label %if.end4.updcrc.Clone

if.else.updcrc.Clone:                             ; preds = %entry.updcrc.Clone
  %316 = load i32, i32* @updcrc.crc, align 4
  store i32 %316, i32* %c.updcrc.Clone, align 4
  %317 = load i32, i32* %n.addr.updcrc.Clone, align 4
  %tobool.updcrc.Clone = icmp ne i32 %317, 0
  br i1 %tobool.updcrc.Clone, label %if.then1.updcrc.Clone, label %if.end.updcrc.Clone

if.then1.updcrc.Clone:                            ; preds = %if.else.updcrc.Clone
  br label %do.body.updcrc.Clone

do.body.updcrc.Clone:                             ; preds = %do.cond.updcrc.Clone, %if.then1.updcrc.Clone
  %318 = load i32, i32* %c.updcrc.Clone, align 4
  %319 = load i8*, i8** %s.addr.updcrc.Clone, align 4
  %incdec.ptr.updcrc.Clone = getelementptr inbounds i8, i8* %319, i32 1
  store i8* %incdec.ptr.updcrc.Clone, i8** %s.addr.updcrc.Clone, align 4
  %320 = load i8, i8* %319, align 1
  %conv.updcrc.Clone = zext i8 %320 to i32
  %xor.updcrc.Clone = xor i32 %318, %conv.updcrc.Clone
  %and.updcrc.Clone = and i32 %xor.updcrc.Clone, 255
  %arrayidx.updcrc.Clone = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([256 x i32]* @crc_32_tab to [0 x i32]*), i32 0, i32 %and.updcrc.Clone
  %321 = load i32, i32* %arrayidx.updcrc.Clone, align 4
  %322 = load i32, i32* %c.updcrc.Clone, align 4
  %shr.updcrc.Clone = lshr i32 %322, 8
  %xor2.updcrc.Clone = xor i32 %321, %shr.updcrc.Clone
  store i32 %xor2.updcrc.Clone, i32* %c.updcrc.Clone, align 4
  br label %do.cond.updcrc.Clone

do.cond.updcrc.Clone:                             ; preds = %do.body.updcrc.Clone
  %323 = load i32, i32* %n.addr.updcrc.Clone, align 4
  %dec.updcrc.Clone = add i32 %323, -1
  store i32 %dec.updcrc.Clone, i32* %n.addr.updcrc.Clone, align 4
  %tobool3.updcrc.Clone = icmp ne i32 %dec.updcrc.Clone, 0
  br i1 %tobool3.updcrc.Clone, label %do.body.updcrc.Clone, label %do.end.updcrc.Clone

do.end.updcrc.Clone:                              ; preds = %do.cond.updcrc.Clone
  br label %if.end.updcrc.Clone

if.end.updcrc.Clone:                              ; preds = %do.end.updcrc.Clone, %if.else.updcrc.Clone
  br label %if.end4.updcrc.Clone

if.end4.updcrc.Clone:                             ; preds = %if.end.updcrc.Clone, %if.then.updcrc.Clone
  %324 = load i32, i32* %c.updcrc.Clone, align 4
  store i32 %324, i32* @updcrc.crc, align 4
  %325 = load i32, i32* %c.updcrc.Clone, align 4
  %xor5.updcrc.Clone = xor i32 %325, -1
  store i32 %xor5.updcrc.Clone, i32* %RetValuePtr146
  br label %if.end.flush_window.Clone.Split

if.end.flush_window.Clone.Split:                  ; preds = %if.end4.updcrc.Clone
  %RetValue147 = load i32, i32* %RetValuePtr146
  %326 = load i32, i32* @test, align 4
  %tobool.flush_window.Clone = icmp ne i32 %326, 0
  br i1 %tobool.flush_window.Clone, label %if.end2.flush_window.Clone, label %if.then1.flush_window.Clone

if.then1.flush_window.Clone:                      ; preds = %if.end.flush_window.Clone.Split
  %327 = load i32, i32* @outcnt, align 4
  %328 = load i32, i32* @ofd, align 4
  br label %entry.write_buf.Clone

entry.write_buf.Clone:                            ; preds = %if.then1.flush_window.Clone
  %cnt.addr.write_buf.Clone = alloca i32, align 4
  %buf.addr.write_buf.Clone = alloca i8*, align 4
  %fd.addr.write_buf.Clone = alloca i32, align 4
  %n.write_buf.Clone = alloca i32, align 4
  store i32 %327, i32* %cnt.addr.write_buf.Clone, align 4
  store i8* getelementptr inbounds ([65536 x i8], [65536 x i8]* @window, i32 0, i32 0), i8** %buf.addr.write_buf.Clone, align 4
  store i32 %328, i32* %fd.addr.write_buf.Clone, align 4
  br label %while.cond.write_buf.Clone

while.cond.write_buf.Clone:                       ; preds = %if.end.write_buf.Clone, %entry.write_buf.Clone
  %329 = load i32, i32* %cnt.addr.write_buf.Clone, align 4
  %330 = load i8*, i8** %buf.addr.write_buf.Clone, align 4
  %331 = load i32, i32* %fd.addr.write_buf.Clone, align 4
  br label %entry.spec_write.Clone

entry.spec_write.Clone:                           ; preds = %while.cond.write_buf.Clone
  %size.addr.spec_write.Clone = alloca i32, align 4
  %buf.addr.spec_write.Clone = alloca i8*, align 4
  %fd.addr.spec_write.Clone = alloca i32, align 4
  store i32 %329, i32* %size.addr.spec_write.Clone, align 4
  store i8* %330, i8** %buf.addr.spec_write.Clone, align 4
  store i32 %331, i32* %fd.addr.spec_write.Clone, align 4
  %332 = load i32, i32* @dbglvl, align 4
  %cmp.spec_write.Clone = icmp slt i32 4, %332
  br i1 %cmp.spec_write.Clone, label %if.then.spec_write.Clone, label %if.end.spec_write.Clone

if.then.spec_write.Clone:                         ; preds = %entry.spec_write.Clone
  %333 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %334 = load i8*, i8** %buf.addr.spec_write.Clone, align 4
  %335 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %call.spec_write.Clone = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @"??_C@_0BK@GKFGHPHN@spec_write?3?5?$CFd?0?5?$CFx?0?5?$CFd?5?$DN?5?$AA@", i32 0, i32 0), i32 %335, i8* %334, i32 %333)
  br label %if.end.spec_write.Clone

if.end.spec_write.Clone:                          ; preds = %if.then.spec_write.Clone, %entry.spec_write.Clone
  %336 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %cmp1.spec_write.Clone = icmp sgt i32 %336, 3
  br i1 %cmp1.spec_write.Clone, label %if.then2.spec_write.Clone, label %if.end5.spec_write.Clone

if.then2.spec_write.Clone:                        ; preds = %if.end.spec_write.Clone
  %337 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %call3.spec_write.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx.spec_write.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.spec_write.Clone, i32 2
  %call4.spec_write.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.spec_write.Clone, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"??_C@_0CD@NANFEFEM@spec_write?3?5fd?$DN?$CFd?0?5?$DO?5MAX_SPEC_FD@", i32 0, i32 0), i32 %337)
  call void @exit(i32 1) #7
  unreachable

if.end5.spec_write.Clone:                         ; preds = %if.end.spec_write.Clone
  %338 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx6.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %338
  %buf7.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx6.spec_write.Clone, i32 0, i32 3
  %339 = load i8*, i8** %buf7.spec_write.Clone, align 4
  %340 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx8.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %340
  %pos.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx8.spec_write.Clone, i32 0, i32 2
  %341 = load i32, i32* %pos.spec_write.Clone, align 4
  %arrayidx9.spec_write.Clone = getelementptr inbounds i8, i8* %339, i32 %341
  %342 = load i8*, i8** %buf.addr.spec_write.Clone, align 4
  %343 = load i32, i32* %size.addr.spec_write.Clone, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %arrayidx9.spec_write.Clone, i8* align 1 %342, i32 %343, i1 false)
  %344 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %345 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx10.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %345
  %len.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx10.spec_write.Clone, i32 0, i32 1
  %346 = load i32, i32* %len.spec_write.Clone, align 4
  %add.spec_write.Clone = add nsw i32 %346, %344
  store i32 %add.spec_write.Clone, i32* %len.spec_write.Clone, align 4
  %347 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %348 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx11.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %348
  %pos12.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx11.spec_write.Clone, i32 0, i32 2
  %349 = load i32, i32* %pos12.spec_write.Clone, align 4
  %add13.spec_write.Clone = add nsw i32 %349, %347
  store i32 %add13.spec_write.Clone, i32* %pos12.spec_write.Clone, align 4
  %350 = load i32, i32* @dbglvl, align 4
  %cmp14.spec_write.Clone = icmp slt i32 4, %350
  br i1 %cmp14.spec_write.Clone, label %if.then15.spec_write.Clone, label %if.end17.spec_write.Clone

if.then15.spec_write.Clone:                       ; preds = %if.end5.spec_write.Clone
  %351 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %call16.spec_write.Clone = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"??_C@_03PMGGPEJJ@?$CFd?6?$AA@", i32 0, i32 0), i32 %351)
  br label %if.end17.spec_write.Clone

if.end17.spec_write.Clone:                        ; preds = %if.then15.spec_write.Clone, %if.end5.spec_write.Clone
  %352 = load i32, i32* %size.addr.spec_write.Clone, align 4
  store i32 %352, i32* %RetValuePtr298
  br label %while.cond.write_buf.Clone.Split

while.cond.write_buf.Clone.Split:                 ; preds = %if.end17.spec_write.Clone
  %RetValue299 = load i32, i32* %RetValuePtr298
  store i32 %RetValue299, i32* %n.write_buf.Clone, align 4
  %353 = load i32, i32* %cnt.addr.write_buf.Clone, align 4
  %cmp.write_buf.Clone = icmp ne i32 %RetValue299, %353
  br i1 %cmp.write_buf.Clone, label %while.body.write_buf.Clone, label %while.end.write_buf.Clone

while.body.write_buf.Clone:                       ; preds = %while.cond.write_buf.Clone.Split
  %354 = load i32, i32* %n.write_buf.Clone, align 4
  %cmp1.write_buf.Clone = icmp eq i32 %354, -1
  br i1 %cmp1.write_buf.Clone, label %if.then.write_buf.Clone, label %if.end.write_buf.Clone

if.then.write_buf.Clone:                          ; preds = %while.body.write_buf.Clone
  call void @write_error()
  br label %if.end.write_buf.Clone

if.end.write_buf.Clone:                           ; preds = %if.then.write_buf.Clone, %while.body.write_buf.Clone
  %355 = load i32, i32* %n.write_buf.Clone, align 4
  %356 = load i32, i32* %cnt.addr.write_buf.Clone, align 4
  %sub.write_buf.Clone = sub i32 %356, %355
  store i32 %sub.write_buf.Clone, i32* %cnt.addr.write_buf.Clone, align 4
  %357 = load i8*, i8** %buf.addr.write_buf.Clone, align 4
  %358 = load i32, i32* %n.write_buf.Clone, align 4
  %add.ptr.write_buf.Clone = getelementptr inbounds i8, i8* %357, i32 %358
  store i8* %add.ptr.write_buf.Clone, i8** %buf.addr.write_buf.Clone, align 4
  br label %while.cond.write_buf.Clone

while.end.write_buf.Clone:                        ; preds = %while.cond.write_buf.Clone.Split
  br label %if.then1.flush_window.Clone.Split

if.then1.flush_window.Clone.Split:                ; preds = %while.end.write_buf.Clone
  br label %if.end2.flush_window.Clone

if.end2.flush_window.Clone:                       ; preds = %if.then1.flush_window.Clone.Split, %if.end.flush_window.Clone.Split
  %359 = load i32, i32* @outcnt, align 4
  %360 = load i32, i32* @bytes_out, align 4
  %add.flush_window.Clone = add i32 %360, %359
  store i32 %add.flush_window.Clone, i32* @bytes_out, align 4
  store i32 0, i32* @outcnt, align 4
  br label %return.flush_window.Clone

return.flush_window.Clone:                        ; preds = %if.end2.flush_window.Clone, %if.then.flush_window.Clone
  br label %if.then246.Split

if.then246.Split:                                 ; preds = %return.flush_window.Clone
  store i32 0, i32* %w, align 4
  br label %if.end247

if.end247:                                        ; preds = %if.then246.Split, %if.end243
  br label %do.cond248

do.cond248:                                       ; preds = %if.end247
  %361 = load i32, i32* %n, align 4
  %tobool249 = icmp ne i32 %361, 0
  br i1 %tobool249, label %do.body211, label %do.end250

do.end250:                                        ; preds = %do.cond248
  br label %if.end251

if.end251:                                        ; preds = %CallOutFuncBB, %do.end250
  br label %for.cond

for.end:                                          ; preds = %if.then72
  %362 = load i32, i32* %w, align 4
  store i32 %362, i32* @outcnt, align 4
  %363 = load i32, i32* %b, align 4
  store i32 %363, i32* @bb, align 4
  %364 = load i32, i32* %k, align 4
  store i32 %364, i32* @bk, align 4
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end, %if.then133, %if.then16
  %365 = load i32, i32* %retval, align 4
  ret i32 %365
}

; Function Attrs: noinline optnone sspstrong
define dso_local i32 @inflate_stored() #1 {
entry:
  %retval = alloca i32, align 4
  %n = alloca i32, align 4
  %w = alloca i32, align 4
  %b = alloca i32, align 4
  %k = alloca i32, align 4
  %0 = load i32, i32* @bb, align 4
  store i32 %0, i32* %b, align 4
  %1 = load i32, i32* @bk, align 4
  store i32 %1, i32* %k, align 4
  %2 = load i32, i32* @outcnt, align 4
  store i32 %2, i32* %w, align 4
  %3 = load i32, i32* %k, align 4
  %and = and i32 %3, 7
  store i32 %and, i32* %n, align 4
  %4 = load i32, i32* %n, align 4
  %5 = load i32, i32* %b, align 4
  %shr = lshr i32 %5, %4
  store i32 %shr, i32* %b, align 4
  %6 = load i32, i32* %n, align 4
  %7 = load i32, i32* %k, align 4
  %sub = sub i32 %7, %6
  store i32 %sub, i32* %k, align 4
  %RetValuePtr = alloca i32, align 4
  %RetValuePtr28 = alloca i32, align 4
  br label %while.cond

while.cond:                                       ; preds = %cond.end, %entry
  %8 = load i32, i32* %k, align 4
  %cmp = icmp ult i32 %8, 16
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %9 = load i32, i32* @inptr, align 4
  %10 = load i32, i32* @insize, align 4
  %cmp1 = icmp ult i32 %9, %10
  br i1 %cmp1, label %cond.true, label %cond.false

cond.true:                                        ; preds = %while.body
  %11 = load i32, i32* @inptr, align 4
  %inc = add i32 %11, 1
  store i32 %inc, i32* @inptr, align 4
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i32 0, i32 %11
  %12 = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %12 to i32
  br label %cond.end

cond.false:                                       ; preds = %while.body
  br label %entry.fill_inbuf.Clone1

entry.fill_inbuf.Clone1:                          ; preds = %cond.false
  %retval.fill_inbuf.Clone2 = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone3 = alloca i32, align 4
  %len.fill_inbuf.Clone4 = alloca i32, align 4
  store i32 0, i32* %eof_ok.addr.fill_inbuf.Clone3, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone5 = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone5, align 4
  br label %do.body.fill_inbuf.Clone6

do.body.fill_inbuf.Clone6:                        ; preds = %do.cond.fill_inbuf.Clone16, %entry.fill_inbuf.Clone1
  %13 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone7 = sub i32 32768, %13
  %14 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone8 = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %14
  %15 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone9 = call i32 @spec_read(i32 %15, i8* %add.ptr.fill_inbuf.Clone8, i32 %sub.fill_inbuf.Clone7)
  store i32 %call1.fill_inbuf.Clone9, i32* %len.fill_inbuf.Clone4, align 4
  %16 = load i32, i32* %len.fill_inbuf.Clone4, align 4
  %cmp.fill_inbuf.Clone10 = icmp eq i32 %16, 0
  br i1 %cmp.fill_inbuf.Clone10, label %if.then.fill_inbuf.Clone13, label %lor.lhs.false.fill_inbuf.Clone11

lor.lhs.false.fill_inbuf.Clone11:                 ; preds = %do.body.fill_inbuf.Clone6
  %17 = load i32, i32* %len.fill_inbuf.Clone4, align 4
  %cmp2.fill_inbuf.Clone12 = icmp eq i32 %17, -1
  br i1 %cmp2.fill_inbuf.Clone12, label %if.then.fill_inbuf.Clone13, label %if.end.fill_inbuf.Clone14

if.then.fill_inbuf.Clone13:                       ; preds = %lor.lhs.false.fill_inbuf.Clone11, %do.body.fill_inbuf.Clone6
  br label %do.end.fill_inbuf.Clone18

if.end.fill_inbuf.Clone14:                        ; preds = %lor.lhs.false.fill_inbuf.Clone11
  %18 = load i32, i32* %len.fill_inbuf.Clone4, align 4
  %19 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone15 = add i32 %19, %18
  store i32 %add.fill_inbuf.Clone15, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone16

do.cond.fill_inbuf.Clone16:                       ; preds = %if.end.fill_inbuf.Clone14
  %20 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone17 = icmp ult i32 %20, 32768
  br i1 %cmp3.fill_inbuf.Clone17, label %do.body.fill_inbuf.Clone6, label %do.end.fill_inbuf.Clone18

do.end.fill_inbuf.Clone18:                        ; preds = %do.cond.fill_inbuf.Clone16, %if.then.fill_inbuf.Clone13
  %21 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone19 = icmp eq i32 %21, 0
  br i1 %cmp4.fill_inbuf.Clone19, label %if.then5.fill_inbuf.Clone20, label %if.end8.fill_inbuf.Clone24

if.then5.fill_inbuf.Clone20:                      ; preds = %do.end.fill_inbuf.Clone18
  %22 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone3, align 4
  %tobool.fill_inbuf.Clone21 = icmp ne i32 %22, 0
  br i1 %tobool.fill_inbuf.Clone21, label %if.then6.fill_inbuf.Clone22, label %if.end7.fill_inbuf.Clone23

if.then6.fill_inbuf.Clone22:                      ; preds = %if.then5.fill_inbuf.Clone20
  store i32 -1, i32* %retval.fill_inbuf.Clone2, align 4
  br label %return.fill_inbuf.Clone27

if.end7.fill_inbuf.Clone23:                       ; preds = %if.then5.fill_inbuf.Clone20
  br label %entry.read_error.Clone

entry.read_error.Clone:                           ; preds = %if.end7.fill_inbuf.Clone23
  %23 = load i8*, i8** @progname, align 4
  %call.read_error.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone, i32 2
  %call1.read_error.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %23)
  %call2.read_error.Clone = call i32* @_errno()
  %24 = load i32, i32* %call2.read_error.Clone, align 4
  %cmp.read_error.Clone = icmp ne i32 %24, 0
  br i1 %cmp.read_error.Clone, label %if.then.read_error.Clone, label %if.else.read_error.Clone

if.then.read_error.Clone:                         ; preds = %entry.read_error.Clone
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone

if.else.read_error.Clone:                         ; preds = %entry.read_error.Clone
  %call3.read_error.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone, i32 2
  %call5.read_error.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone

if.end.read_error.Clone:                          ; preds = %if.else.read_error.Clone, %if.then.read_error.Clone
  br label %entry.abort_gzip.Clone42

entry.abort_gzip.Clone42:                         ; preds = %if.end.read_error.Clone
  %25 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone43 = icmp ne i32 %25, 0
  br i1 %tobool.abort_gzip.Clone43, label %if.then.abort_gzip.Clone44, label %if.end.abort_gzip.Clone47

if.then.abort_gzip.Clone44:                       ; preds = %entry.abort_gzip.Clone42
  %26 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone45 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %26)
  %call1.abort_gzip.Clone46 = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone47

if.end.abort_gzip.Clone47:                        ; preds = %if.then.abort_gzip.Clone44, %entry.abort_gzip.Clone42
  br label %entry.do_exit.Clone

entry.do_exit.Clone:                              ; preds = %if.end.abort_gzip.Clone47
  %exitcode.addr.do_exit.Clone = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone, align 4
  %27 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone = icmp ne i32 %27, 0
  br i1 %tobool.do_exit.Clone, label %if.then.do_exit.Clone, label %if.end.do_exit.Clone

if.then.do_exit.Clone:                            ; preds = %entry.do_exit.Clone
  %28 = load i32, i32* %exitcode.addr.do_exit.Clone, align 4
  call void @exit(i32 %28) #7
  unreachable

if.end.do_exit.Clone:                             ; preds = %entry.do_exit.Clone
  store i32 1, i32* @do_exit.in_exit, align 4
  %29 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone = icmp ne i8* %29, null
  br i1 %cmp.do_exit.Clone, label %if.then1.do_exit.Clone, label %if.end2.do_exit.Clone

if.then1.do_exit.Clone:                           ; preds = %if.end.do_exit.Clone
  %30 = load i8*, i8** @env, align 4
  call void @free(i8* %30) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone

if.end2.do_exit.Clone:                            ; preds = %if.then1.do_exit.Clone, %if.end.do_exit.Clone
  %31 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone = icmp ne i8** %31, null
  br i1 %cmp3.do_exit.Clone, label %if.then4.do_exit.Clone, label %if.end5.do_exit.Clone

if.then4.do_exit.Clone:                           ; preds = %if.end2.do_exit.Clone
  %32 = load i8**, i8*** @args, align 4
  %33 = bitcast i8** %32 to i8*
  call void @free(i8* %33) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone

if.end5.do_exit.Clone:                            ; preds = %if.then4.do_exit.Clone, %if.end2.do_exit.Clone
  %34 = load i32, i32* %exitcode.addr.do_exit.Clone, align 4
  call void @exit(i32 %34) #7
  unreachable

return.do_exit.Clone:                             ; No predecessors!
  br label %if.end.abort_gzip.Clone47.Split

if.end.abort_gzip.Clone47.Split:                  ; preds = %return.do_exit.Clone
  br label %if.end.read_error.Clone.Split

if.end.read_error.Clone.Split:                    ; preds = %if.end.abort_gzip.Clone47.Split
  br label %if.end7.fill_inbuf.Clone23.Split

if.end7.fill_inbuf.Clone23.Split:                 ; preds = %if.end.read_error.Clone.Split
  br label %if.end8.fill_inbuf.Clone24

if.end8.fill_inbuf.Clone24:                       ; preds = %if.end7.fill_inbuf.Clone23.Split, %do.end.fill_inbuf.Clone18
  %35 = load i32, i32* @insize, align 4
  %36 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone25 = add i32 %36, %35
  store i32 %add9.fill_inbuf.Clone25, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %37 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone26 = zext i8 %37 to i32
  store i32 %conv.fill_inbuf.Clone26, i32* %retval.fill_inbuf.Clone2, align 4
  br label %return.fill_inbuf.Clone27

return.fill_inbuf.Clone27:                        ; preds = %if.end8.fill_inbuf.Clone24, %if.then6.fill_inbuf.Clone22
  %38 = load i32, i32* %retval.fill_inbuf.Clone2, align 4
  store i32 %38, i32* %RetValuePtr28
  br label %cond.false.Split

cond.false.Split:                                 ; preds = %return.fill_inbuf.Clone27
  %RetValue29 = load i32, i32* %RetValuePtr28
  br label %cond.end

cond.end:                                         ; preds = %cond.false.Split, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %RetValue29, %cond.false.Split ]
  %conv2 = trunc i32 %cond to i8
  %conv3 = zext i8 %conv2 to i32
  %39 = load i32, i32* %k, align 4
  %shl = shl i32 %conv3, %39
  %40 = load i32, i32* %b, align 4
  %or = or i32 %40, %shl
  store i32 %or, i32* %b, align 4
  %41 = load i32, i32* %k, align 4
  %add = add i32 %41, 8
  store i32 %add, i32* %k, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %42 = load i32, i32* %b, align 4
  %and4 = and i32 %42, 65535
  store i32 %and4, i32* %n, align 4
  %43 = load i32, i32* %b, align 4
  %shr5 = lshr i32 %43, 16
  store i32 %shr5, i32* %b, align 4
  %44 = load i32, i32* %k, align 4
  %sub6 = sub i32 %44, 16
  store i32 %sub6, i32* %k, align 4
  br label %while.cond7

while.cond7:                                      ; preds = %cond.end19, %while.end
  %45 = load i32, i32* %k, align 4
  %cmp8 = icmp ult i32 %45, 16
  br i1 %cmp8, label %while.body10, label %while.end26

while.body10:                                     ; preds = %while.cond7
  %46 = load i32, i32* @inptr, align 4
  %47 = load i32, i32* @insize, align 4
  %cmp11 = icmp ult i32 %46, %47
  br i1 %cmp11, label %cond.true13, label %cond.false17

cond.true13:                                      ; preds = %while.body10
  %48 = load i32, i32* @inptr, align 4
  %inc14 = add i32 %48, 1
  store i32 %inc14, i32* @inptr, align 4
  %arrayidx15 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i32 0, i32 %48
  %49 = load i8, i8* %arrayidx15, align 1
  %conv16 = zext i8 %49 to i32
  br label %cond.end19

cond.false17:                                     ; preds = %while.body10
  br label %entry.fill_inbuf.Clone

entry.fill_inbuf.Clone:                           ; preds = %cond.false17
  %retval.fill_inbuf.Clone = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone = alloca i32, align 4
  %len.fill_inbuf.Clone = alloca i32, align 4
  store i32 0, i32* %eof_ok.addr.fill_inbuf.Clone, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone, align 4
  br label %do.body.fill_inbuf.Clone

do.body.fill_inbuf.Clone:                         ; preds = %do.cond.fill_inbuf.Clone, %entry.fill_inbuf.Clone
  %50 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone = sub i32 32768, %50
  %51 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %51
  %52 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone = call i32 @spec_read(i32 %52, i8* %add.ptr.fill_inbuf.Clone, i32 %sub.fill_inbuf.Clone)
  store i32 %call1.fill_inbuf.Clone, i32* %len.fill_inbuf.Clone, align 4
  %53 = load i32, i32* %len.fill_inbuf.Clone, align 4
  %cmp.fill_inbuf.Clone = icmp eq i32 %53, 0
  br i1 %cmp.fill_inbuf.Clone, label %if.then.fill_inbuf.Clone, label %lor.lhs.false.fill_inbuf.Clone

lor.lhs.false.fill_inbuf.Clone:                   ; preds = %do.body.fill_inbuf.Clone
  %54 = load i32, i32* %len.fill_inbuf.Clone, align 4
  %cmp2.fill_inbuf.Clone = icmp eq i32 %54, -1
  br i1 %cmp2.fill_inbuf.Clone, label %if.then.fill_inbuf.Clone, label %if.end.fill_inbuf.Clone

if.then.fill_inbuf.Clone:                         ; preds = %lor.lhs.false.fill_inbuf.Clone, %do.body.fill_inbuf.Clone
  br label %do.end.fill_inbuf.Clone

if.end.fill_inbuf.Clone:                          ; preds = %lor.lhs.false.fill_inbuf.Clone
  %55 = load i32, i32* %len.fill_inbuf.Clone, align 4
  %56 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone = add i32 %56, %55
  store i32 %add.fill_inbuf.Clone, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone

do.cond.fill_inbuf.Clone:                         ; preds = %if.end.fill_inbuf.Clone
  %57 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone = icmp ult i32 %57, 32768
  br i1 %cmp3.fill_inbuf.Clone, label %do.body.fill_inbuf.Clone, label %do.end.fill_inbuf.Clone

do.end.fill_inbuf.Clone:                          ; preds = %do.cond.fill_inbuf.Clone, %if.then.fill_inbuf.Clone
  %58 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone = icmp eq i32 %58, 0
  br i1 %cmp4.fill_inbuf.Clone, label %if.then5.fill_inbuf.Clone, label %if.end8.fill_inbuf.Clone

if.then5.fill_inbuf.Clone:                        ; preds = %do.end.fill_inbuf.Clone
  %59 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone, align 4
  %tobool.fill_inbuf.Clone = icmp ne i32 %59, 0
  br i1 %tobool.fill_inbuf.Clone, label %if.then6.fill_inbuf.Clone, label %if.end7.fill_inbuf.Clone

if.then6.fill_inbuf.Clone:                        ; preds = %if.then5.fill_inbuf.Clone
  store i32 -1, i32* %retval.fill_inbuf.Clone, align 4
  br label %return.fill_inbuf.Clone

if.end7.fill_inbuf.Clone:                         ; preds = %if.then5.fill_inbuf.Clone
  br label %entry.read_error.Clone30

entry.read_error.Clone30:                         ; preds = %if.end7.fill_inbuf.Clone
  %60 = load i8*, i8** @progname, align 4
  %call.read_error.Clone31 = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone32 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone31, i32 2
  %call1.read_error.Clone33 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone32, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %60)
  %call2.read_error.Clone34 = call i32* @_errno()
  %61 = load i32, i32* %call2.read_error.Clone34, align 4
  %cmp.read_error.Clone35 = icmp ne i32 %61, 0
  br i1 %cmp.read_error.Clone35, label %if.then.read_error.Clone36, label %if.else.read_error.Clone37

if.then.read_error.Clone36:                       ; preds = %entry.read_error.Clone30
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone41

if.else.read_error.Clone37:                       ; preds = %entry.read_error.Clone30
  %call3.read_error.Clone38 = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone39 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone38, i32 2
  %call5.read_error.Clone40 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone39, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone41

if.end.read_error.Clone41:                        ; preds = %if.else.read_error.Clone37, %if.then.read_error.Clone36
  br label %entry.abort_gzip.Clone

entry.abort_gzip.Clone:                           ; preds = %if.end.read_error.Clone41
  %62 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone = icmp ne i32 %62, 0
  br i1 %tobool.abort_gzip.Clone, label %if.then.abort_gzip.Clone, label %if.end.abort_gzip.Clone

if.then.abort_gzip.Clone:                         ; preds = %entry.abort_gzip.Clone
  %63 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %63)
  %call1.abort_gzip.Clone = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone

if.end.abort_gzip.Clone:                          ; preds = %if.then.abort_gzip.Clone, %entry.abort_gzip.Clone
  br label %entry.do_exit.Clone48

entry.do_exit.Clone48:                            ; preds = %if.end.abort_gzip.Clone
  %exitcode.addr.do_exit.Clone49 = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone49, align 4
  %64 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone50 = icmp ne i32 %64, 0
  br i1 %tobool.do_exit.Clone50, label %if.then.do_exit.Clone51, label %if.end.do_exit.Clone52

if.then.do_exit.Clone51:                          ; preds = %entry.do_exit.Clone48
  %65 = load i32, i32* %exitcode.addr.do_exit.Clone49, align 4
  call void @exit(i32 %65) #7
  unreachable

if.end.do_exit.Clone52:                           ; preds = %entry.do_exit.Clone48
  store i32 1, i32* @do_exit.in_exit, align 4
  %66 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone53 = icmp ne i8* %66, null
  br i1 %cmp.do_exit.Clone53, label %if.then1.do_exit.Clone54, label %if.end2.do_exit.Clone55

if.then1.do_exit.Clone54:                         ; preds = %if.end.do_exit.Clone52
  %67 = load i8*, i8** @env, align 4
  call void @free(i8* %67) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone55

if.end2.do_exit.Clone55:                          ; preds = %if.then1.do_exit.Clone54, %if.end.do_exit.Clone52
  %68 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone56 = icmp ne i8** %68, null
  br i1 %cmp3.do_exit.Clone56, label %if.then4.do_exit.Clone57, label %if.end5.do_exit.Clone58

if.then4.do_exit.Clone57:                         ; preds = %if.end2.do_exit.Clone55
  %69 = load i8**, i8*** @args, align 4
  %70 = bitcast i8** %69 to i8*
  call void @free(i8* %70) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone58

if.end5.do_exit.Clone58:                          ; preds = %if.then4.do_exit.Clone57, %if.end2.do_exit.Clone55
  %71 = load i32, i32* %exitcode.addr.do_exit.Clone49, align 4
  call void @exit(i32 %71) #7
  unreachable

return.do_exit.Clone59:                           ; No predecessors!
  br label %if.end.abort_gzip.Clone.Split

if.end.abort_gzip.Clone.Split:                    ; preds = %return.do_exit.Clone59
  br label %if.end.read_error.Clone41.Split

if.end.read_error.Clone41.Split:                  ; preds = %if.end.abort_gzip.Clone.Split
  br label %if.end7.fill_inbuf.Clone.Split

if.end7.fill_inbuf.Clone.Split:                   ; preds = %if.end.read_error.Clone41.Split
  br label %if.end8.fill_inbuf.Clone

if.end8.fill_inbuf.Clone:                         ; preds = %if.end7.fill_inbuf.Clone.Split, %do.end.fill_inbuf.Clone
  %72 = load i32, i32* @insize, align 4
  %73 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone = add i32 %73, %72
  store i32 %add9.fill_inbuf.Clone, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %74 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone = zext i8 %74 to i32
  store i32 %conv.fill_inbuf.Clone, i32* %retval.fill_inbuf.Clone, align 4
  br label %return.fill_inbuf.Clone

return.fill_inbuf.Clone:                          ; preds = %if.end8.fill_inbuf.Clone, %if.then6.fill_inbuf.Clone
  %75 = load i32, i32* %retval.fill_inbuf.Clone, align 4
  store i32 %75, i32* %RetValuePtr
  br label %cond.false17.Split

cond.false17.Split:                               ; preds = %return.fill_inbuf.Clone
  %RetValue = load i32, i32* %RetValuePtr
  br label %cond.end19

cond.end19:                                       ; preds = %cond.false17.Split, %cond.true13
  %cond20 = phi i32 [ %conv16, %cond.true13 ], [ %RetValue, %cond.false17.Split ]
  %conv21 = trunc i32 %cond20 to i8
  %conv22 = zext i8 %conv21 to i32
  %76 = load i32, i32* %k, align 4
  %shl23 = shl i32 %conv22, %76
  %77 = load i32, i32* %b, align 4
  %or24 = or i32 %77, %shl23
  store i32 %or24, i32* %b, align 4
  %78 = load i32, i32* %k, align 4
  %add25 = add i32 %78, 8
  store i32 %add25, i32* %k, align 4
  br label %while.cond7

while.end26:                                      ; preds = %while.cond7
  %79 = load i32, i32* %n, align 4
  %80 = load i32, i32* %b, align 4
  %neg = xor i32 %80, -1
  %and27 = and i32 %neg, 65535
  %cmp28 = icmp ne i32 %79, %and27
  br i1 %cmp28, label %if.then, label %if.end

if.then:                                          ; preds = %while.end26
  store i32 1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %while.end26
  %81 = load i32, i32* %b, align 4
  %shr30 = lshr i32 %81, 16
  store i32 %shr30, i32* %b, align 4
  %82 = load i32, i32* %k, align 4
  %sub31 = sub i32 %82, 16
  store i32 %sub31, i32* %k, align 4
  br label %CallOutFuncBB

CallOutFuncBB:                                    ; preds = %if.end
  call void @while.cond32.OutLineFunc(i32* %n, i32* %k, i32* %b, i32* %w, i32* %retval)
  %83 = getelementptr inbounds %Struct.RetValue.11, %Struct.RetValue.11* @Struct.RetValue.13, i32 0, i32 0
  %84 = load i32*, i32** %83, align 4
  %85 = load i32, i32* %84, align 4
  store i32 %85, i32* %n
  %86 = getelementptr inbounds %Struct.RetValue.11, %Struct.RetValue.11* @Struct.RetValue.13, i32 0, i32 1
  %87 = load i32*, i32** %86, align 4
  %88 = load i32, i32* %87, align 4
  store i32 %88, i32* %k
  %89 = getelementptr inbounds %Struct.RetValue.11, %Struct.RetValue.11* @Struct.RetValue.13, i32 0, i32 2
  %90 = load i32*, i32** %89, align 4
  %91 = load i32, i32* %90, align 4
  store i32 %91, i32* %b
  %92 = getelementptr inbounds %Struct.RetValue.11, %Struct.RetValue.11* @Struct.RetValue.13, i32 0, i32 3
  %93 = load i32*, i32** %92, align 4
  %94 = load i32, i32* %93, align 4
  store i32 %94, i32* %w
  %95 = getelementptr inbounds %Struct.RetValue.11, %Struct.RetValue.11* @Struct.RetValue.13, i32 0, i32 4
  %96 = load i32*, i32** %95, align 4
  %97 = load i32, i32* %96, align 4
  store i32 %97, i32* %retval
  br label %return

return:                                           ; preds = %CallOutFuncBB, %if.then
  %98 = load i32, i32* %retval, align 4
  ret i32 %98
}

; Function Attrs: noinline optnone sspstrong
define dso_local i32 @inflate_fixed() #1 {
entry:
  %retval = alloca i32, align 4
  %i = alloca i32, align 4
  %tl = alloca %struct.huft*, align 4
  %td = alloca %struct.huft*, align 4
  %bl = alloca i32, align 4
  %bd = alloca i32, align 4
  %l = alloca [288 x i32], align 4
  store i32 0, i32* %i, align 4
  %RetValuePtr = alloca i32, align 4
  %RetValuePtr13 = alloca i32, align 4
  %RetValuePtr26 = alloca i32, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %0, 144
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [288 x i32], [288 x i32]* %l, i32 0, i32 %1
  store i32 8, i32* %arrayidx, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %2 = load i32, i32* %i, align 4
  %inc = add nsw i32 %2, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %CallOutFuncBB

CallOutFuncBB:                                    ; preds = %for.end
  call void @for.cond1.OutLineFunc(i32* %i, [288 x i32]* %l)
  %3 = getelementptr inbounds %Struct.RetValue.12, %Struct.RetValue.12* @Struct.RetValue.14, i32 0, i32 0
  %4 = load i32*, i32** %3, align 4
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %i
  br label %for.cond8

for.cond8:                                        ; preds = %CallOutFuncBB, %for.inc12
  %6 = load i32, i32* %i, align 4
  %cmp9 = icmp slt i32 %6, 280
  br i1 %cmp9, label %for.body10, label %for.end14

for.body10:                                       ; preds = %for.cond8
  %7 = load i32, i32* %i, align 4
  %arrayidx11 = getelementptr inbounds [288 x i32], [288 x i32]* %l, i32 0, i32 %7
  store i32 7, i32* %arrayidx11, align 4
  br label %for.inc12

for.inc12:                                        ; preds = %for.body10
  %8 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %8, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond8

for.end14:                                        ; preds = %for.cond8
  br label %for.cond15

for.cond15:                                       ; preds = %for.inc19, %for.end14
  %9 = load i32, i32* %i, align 4
  %cmp16 = icmp slt i32 %9, 288
  br i1 %cmp16, label %for.body17, label %for.end21

for.body17:                                       ; preds = %for.cond15
  %10 = load i32, i32* %i, align 4
  %arrayidx18 = getelementptr inbounds [288 x i32], [288 x i32]* %l, i32 0, i32 %10
  store i32 8, i32* %arrayidx18, align 4
  br label %for.inc19

for.inc19:                                        ; preds = %for.body17
  %11 = load i32, i32* %i, align 4
  %inc20 = add nsw i32 %11, 1
  store i32 %inc20, i32* %i, align 4
  br label %for.cond15

for.end21:                                        ; preds = %for.cond15
  store i32 7, i32* %bl, align 4
  %arraydecay = getelementptr inbounds [288 x i32], [288 x i32]* %l, i32 0, i32 0
  %call = call i32 @huft_build(i32* %arraydecay, i32 288, i32 257, i16* getelementptr inbounds ([31 x i16], [31 x i16]* @cplens, i32 0, i32 0), i16* getelementptr inbounds ([31 x i16], [31 x i16]* @cplext, i32 0, i32 0), %struct.huft** %tl, i32* %bl)
  store i32 %call, i32* %i, align 4
  %cmp22 = icmp ne i32 %call, 0
  br i1 %cmp22, label %if.then, label %if.end

if.then:                                          ; preds = %for.end21
  %12 = load i32, i32* %i, align 4
  store i32 %12, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %for.end21
  store i32 0, i32* %i, align 4
  br label %for.cond23

for.cond23:                                       ; preds = %for.inc27, %if.end
  %13 = load i32, i32* %i, align 4
  %cmp24 = icmp slt i32 %13, 30
  br i1 %cmp24, label %for.body25, label %for.end29

for.body25:                                       ; preds = %for.cond23
  %14 = load i32, i32* %i, align 4
  %arrayidx26 = getelementptr inbounds [288 x i32], [288 x i32]* %l, i32 0, i32 %14
  store i32 5, i32* %arrayidx26, align 4
  br label %for.inc27

for.inc27:                                        ; preds = %for.body25
  %15 = load i32, i32* %i, align 4
  %inc28 = add nsw i32 %15, 1
  store i32 %inc28, i32* %i, align 4
  br label %for.cond23

for.end29:                                        ; preds = %for.cond23
  store i32 5, i32* %bd, align 4
  %arraydecay30 = getelementptr inbounds [288 x i32], [288 x i32]* %l, i32 0, i32 0
  %call31 = call i32 @huft_build(i32* %arraydecay30, i32 30, i32 0, i16* getelementptr inbounds ([30 x i16], [30 x i16]* @cpdist, i32 0, i32 0), i16* getelementptr inbounds ([30 x i16], [30 x i16]* @cpdext, i32 0, i32 0), %struct.huft** %td, i32* %bd)
  store i32 %call31, i32* %i, align 4
  %cmp32 = icmp sgt i32 %call31, 1
  br i1 %cmp32, label %if.then33, label %if.end35

if.then33:                                        ; preds = %for.end29
  %16 = load %struct.huft*, %struct.huft** %tl, align 4
  br label %entry.huft_free.Clone15

entry.huft_free.Clone15:                          ; preds = %if.then33
  %t.addr.huft_free.Clone16 = alloca %struct.huft*, align 4
  %p.huft_free.Clone17 = alloca %struct.huft*, align 4
  %q.huft_free.Clone18 = alloca %struct.huft*, align 4
  store %struct.huft* %16, %struct.huft** %t.addr.huft_free.Clone16, align 4
  %17 = load %struct.huft*, %struct.huft** %t.addr.huft_free.Clone16, align 4
  store %struct.huft* %17, %struct.huft** %p.huft_free.Clone17, align 4
  br label %while.cond.huft_free.Clone19

while.cond.huft_free.Clone19:                     ; preds = %while.body.huft_free.Clone21, %entry.huft_free.Clone15
  %18 = load %struct.huft*, %struct.huft** %p.huft_free.Clone17, align 4
  %cmp.huft_free.Clone20 = icmp ne %struct.huft* %18, null
  br i1 %cmp.huft_free.Clone20, label %while.body.huft_free.Clone21, label %while.end.huft_free.Clone25

while.body.huft_free.Clone21:                     ; preds = %while.cond.huft_free.Clone19
  %19 = load %struct.huft*, %struct.huft** %p.huft_free.Clone17, align 4
  %incdec.ptr.huft_free.Clone22 = getelementptr inbounds %struct.huft, %struct.huft* %19, i32 -1
  store %struct.huft* %incdec.ptr.huft_free.Clone22, %struct.huft** %p.huft_free.Clone17, align 4
  %v.huft_free.Clone23 = getelementptr inbounds %struct.huft, %struct.huft* %incdec.ptr.huft_free.Clone22, i32 0, i32 2
  %t1.huft_free.Clone24 = bitcast %union.anon* %v.huft_free.Clone23 to %struct.huft**
  %20 = load %struct.huft*, %struct.huft** %t1.huft_free.Clone24, align 4
  store %struct.huft* %20, %struct.huft** %q.huft_free.Clone18, align 4
  %21 = load %struct.huft*, %struct.huft** %p.huft_free.Clone17, align 4
  %22 = bitcast %struct.huft* %21 to i8*
  call void @free(i8* %22) #2
  %23 = load %struct.huft*, %struct.huft** %q.huft_free.Clone18, align 4
  store %struct.huft* %23, %struct.huft** %p.huft_free.Clone17, align 4
  br label %while.cond.huft_free.Clone19

while.end.huft_free.Clone25:                      ; preds = %while.cond.huft_free.Clone19
  store i32 0, i32* %RetValuePtr26
  br label %if.then33.Split

if.then33.Split:                                  ; preds = %while.end.huft_free.Clone25
  %RetValue27 = load i32, i32* %RetValuePtr26
  %24 = load i32, i32* %i, align 4
  store i32 %24, i32* %retval, align 4
  br label %return

if.end35:                                         ; preds = %for.end29
  %25 = load i32, i32* %bd, align 4
  %26 = load i32, i32* %bl, align 4
  %27 = load %struct.huft*, %struct.huft** %td, align 4
  %28 = load %struct.huft*, %struct.huft** %tl, align 4
  %call36 = call i32 @inflate_codes(%struct.huft* %28, %struct.huft* %27, i32 %26, i32 %25)
  %tobool = icmp ne i32 %call36, 0
  br i1 %tobool, label %if.then37, label %if.end38

if.then37:                                        ; preds = %if.end35
  store i32 1, i32* %retval, align 4
  br label %return

if.end38:                                         ; preds = %if.end35
  %29 = load %struct.huft*, %struct.huft** %tl, align 4
  br label %entry.huft_free.Clone2

entry.huft_free.Clone2:                           ; preds = %if.end38
  %t.addr.huft_free.Clone3 = alloca %struct.huft*, align 4
  %p.huft_free.Clone4 = alloca %struct.huft*, align 4
  %q.huft_free.Clone5 = alloca %struct.huft*, align 4
  store %struct.huft* %29, %struct.huft** %t.addr.huft_free.Clone3, align 4
  %30 = load %struct.huft*, %struct.huft** %t.addr.huft_free.Clone3, align 4
  store %struct.huft* %30, %struct.huft** %p.huft_free.Clone4, align 4
  br label %while.cond.huft_free.Clone6

while.cond.huft_free.Clone6:                      ; preds = %while.body.huft_free.Clone8, %entry.huft_free.Clone2
  %31 = load %struct.huft*, %struct.huft** %p.huft_free.Clone4, align 4
  %cmp.huft_free.Clone7 = icmp ne %struct.huft* %31, null
  br i1 %cmp.huft_free.Clone7, label %while.body.huft_free.Clone8, label %while.end.huft_free.Clone12

while.body.huft_free.Clone8:                      ; preds = %while.cond.huft_free.Clone6
  %32 = load %struct.huft*, %struct.huft** %p.huft_free.Clone4, align 4
  %incdec.ptr.huft_free.Clone9 = getelementptr inbounds %struct.huft, %struct.huft* %32, i32 -1
  store %struct.huft* %incdec.ptr.huft_free.Clone9, %struct.huft** %p.huft_free.Clone4, align 4
  %v.huft_free.Clone10 = getelementptr inbounds %struct.huft, %struct.huft* %incdec.ptr.huft_free.Clone9, i32 0, i32 2
  %t1.huft_free.Clone11 = bitcast %union.anon* %v.huft_free.Clone10 to %struct.huft**
  %33 = load %struct.huft*, %struct.huft** %t1.huft_free.Clone11, align 4
  store %struct.huft* %33, %struct.huft** %q.huft_free.Clone5, align 4
  %34 = load %struct.huft*, %struct.huft** %p.huft_free.Clone4, align 4
  %35 = bitcast %struct.huft* %34 to i8*
  call void @free(i8* %35) #2
  %36 = load %struct.huft*, %struct.huft** %q.huft_free.Clone5, align 4
  store %struct.huft* %36, %struct.huft** %p.huft_free.Clone4, align 4
  br label %while.cond.huft_free.Clone6

while.end.huft_free.Clone12:                      ; preds = %while.cond.huft_free.Clone6
  store i32 0, i32* %RetValuePtr13
  br label %if.end38.Split1

if.end38.Split1:                                  ; preds = %while.end.huft_free.Clone12
  %RetValue14 = load i32, i32* %RetValuePtr13
  %37 = load %struct.huft*, %struct.huft** %td, align 4
  br label %entry.huft_free.Clone

entry.huft_free.Clone:                            ; preds = %if.end38.Split1
  %t.addr.huft_free.Clone = alloca %struct.huft*, align 4
  %p.huft_free.Clone = alloca %struct.huft*, align 4
  %q.huft_free.Clone = alloca %struct.huft*, align 4
  store %struct.huft* %37, %struct.huft** %t.addr.huft_free.Clone, align 4
  %38 = load %struct.huft*, %struct.huft** %t.addr.huft_free.Clone, align 4
  store %struct.huft* %38, %struct.huft** %p.huft_free.Clone, align 4
  br label %while.cond.huft_free.Clone

while.cond.huft_free.Clone:                       ; preds = %while.body.huft_free.Clone, %entry.huft_free.Clone
  %39 = load %struct.huft*, %struct.huft** %p.huft_free.Clone, align 4
  %cmp.huft_free.Clone = icmp ne %struct.huft* %39, null
  br i1 %cmp.huft_free.Clone, label %while.body.huft_free.Clone, label %while.end.huft_free.Clone

while.body.huft_free.Clone:                       ; preds = %while.cond.huft_free.Clone
  %40 = load %struct.huft*, %struct.huft** %p.huft_free.Clone, align 4
  %incdec.ptr.huft_free.Clone = getelementptr inbounds %struct.huft, %struct.huft* %40, i32 -1
  store %struct.huft* %incdec.ptr.huft_free.Clone, %struct.huft** %p.huft_free.Clone, align 4
  %v.huft_free.Clone = getelementptr inbounds %struct.huft, %struct.huft* %incdec.ptr.huft_free.Clone, i32 0, i32 2
  %t1.huft_free.Clone = bitcast %union.anon* %v.huft_free.Clone to %struct.huft**
  %41 = load %struct.huft*, %struct.huft** %t1.huft_free.Clone, align 4
  store %struct.huft* %41, %struct.huft** %q.huft_free.Clone, align 4
  %42 = load %struct.huft*, %struct.huft** %p.huft_free.Clone, align 4
  %43 = bitcast %struct.huft* %42 to i8*
  call void @free(i8* %43) #2
  %44 = load %struct.huft*, %struct.huft** %q.huft_free.Clone, align 4
  store %struct.huft* %44, %struct.huft** %p.huft_free.Clone, align 4
  br label %while.cond.huft_free.Clone

while.end.huft_free.Clone:                        ; preds = %while.cond.huft_free.Clone
  store i32 0, i32* %RetValuePtr
  br label %if.end38.Split

if.end38.Split:                                   ; preds = %while.end.huft_free.Clone
  %RetValue = load i32, i32* %RetValuePtr
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end38.Split, %if.then37, %if.then33.Split, %if.then
  %45 = load i32, i32* %retval, align 4
  ret i32 %45
}

; Function Attrs: noinline optnone sspstrong
define dso_local i32 @inflate_dynamic() #1 {
entry:
  %retval = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %l = alloca i32, align 4
  %m = alloca i32, align 4
  %n = alloca i32, align 4
  %tl = alloca %struct.huft*, align 4
  %td = alloca %struct.huft*, align 4
  %bl = alloca i32, align 4
  %bd = alloca i32, align 4
  %nb = alloca i32, align 4
  %nl = alloca i32, align 4
  %nd = alloca i32, align 4
  %ll = alloca [316 x i32], align 4
  %b = alloca i32, align 4
  %k = alloca i32, align 4
  %0 = load i32, i32* @bb, align 4
  store i32 %0, i32* %b, align 4
  %1 = load i32, i32* @bk, align 4
  store i32 %1, i32* %k, align 4
  %RetValuePtr = alloca i32, align 4
  %RetValuePtr28 = alloca i32, align 4
  %RetValuePtr57 = alloca i32, align 4
  %RetValuePtr86 = alloca i32, align 4
  %RetValuePtr115 = alloca i32, align 4
  %RetValuePtr144 = alloca i32, align 4
  %RetValuePtr173 = alloca i32, align 4
  %RetValuePtr202 = alloca i32, align 4
  %RetValuePtr204 = alloca i32, align 4
  %RetValuePtr218 = alloca i32, align 4
  %RetValuePtr231 = alloca i32, align 4
  %RetValuePtr244 = alloca i32, align 4
  %RetValuePtr257 = alloca i32, align 4
  %RetValuePtr270 = alloca i32, align 4
  br label %while.cond

while.cond:                                       ; preds = %cond.end, %entry
  %2 = load i32, i32* %k, align 4
  %cmp = icmp ult i32 %2, 5
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %3 = load i32, i32* @inptr, align 4
  %4 = load i32, i32* @insize, align 4
  %cmp1 = icmp ult i32 %3, %4
  br i1 %cmp1, label %cond.true, label %cond.false

cond.true:                                        ; preds = %while.body
  %5 = load i32, i32* @inptr, align 4
  %inc = add i32 %5, 1
  store i32 %inc, i32* @inptr, align 4
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i32 0, i32 %5
  %6 = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %6 to i32
  br label %cond.end

cond.false:                                       ; preds = %while.body
  br label %entry.fill_inbuf.Clone175

entry.fill_inbuf.Clone175:                        ; preds = %cond.false
  %retval.fill_inbuf.Clone176 = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone177 = alloca i32, align 4
  %len.fill_inbuf.Clone178 = alloca i32, align 4
  store i32 0, i32* %eof_ok.addr.fill_inbuf.Clone177, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone179 = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone179, align 4
  br label %do.body.fill_inbuf.Clone180

do.body.fill_inbuf.Clone180:                      ; preds = %do.cond.fill_inbuf.Clone190, %entry.fill_inbuf.Clone175
  %7 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone181 = sub i32 32768, %7
  %8 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone182 = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %8
  %9 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone183 = call i32 @spec_read(i32 %9, i8* %add.ptr.fill_inbuf.Clone182, i32 %sub.fill_inbuf.Clone181)
  store i32 %call1.fill_inbuf.Clone183, i32* %len.fill_inbuf.Clone178, align 4
  %10 = load i32, i32* %len.fill_inbuf.Clone178, align 4
  %cmp.fill_inbuf.Clone184 = icmp eq i32 %10, 0
  br i1 %cmp.fill_inbuf.Clone184, label %if.then.fill_inbuf.Clone187, label %lor.lhs.false.fill_inbuf.Clone185

lor.lhs.false.fill_inbuf.Clone185:                ; preds = %do.body.fill_inbuf.Clone180
  %11 = load i32, i32* %len.fill_inbuf.Clone178, align 4
  %cmp2.fill_inbuf.Clone186 = icmp eq i32 %11, -1
  br i1 %cmp2.fill_inbuf.Clone186, label %if.then.fill_inbuf.Clone187, label %if.end.fill_inbuf.Clone188

if.then.fill_inbuf.Clone187:                      ; preds = %lor.lhs.false.fill_inbuf.Clone185, %do.body.fill_inbuf.Clone180
  br label %do.end.fill_inbuf.Clone192

if.end.fill_inbuf.Clone188:                       ; preds = %lor.lhs.false.fill_inbuf.Clone185
  %12 = load i32, i32* %len.fill_inbuf.Clone178, align 4
  %13 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone189 = add i32 %13, %12
  store i32 %add.fill_inbuf.Clone189, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone190

do.cond.fill_inbuf.Clone190:                      ; preds = %if.end.fill_inbuf.Clone188
  %14 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone191 = icmp ult i32 %14, 32768
  br i1 %cmp3.fill_inbuf.Clone191, label %do.body.fill_inbuf.Clone180, label %do.end.fill_inbuf.Clone192

do.end.fill_inbuf.Clone192:                       ; preds = %do.cond.fill_inbuf.Clone190, %if.then.fill_inbuf.Clone187
  %15 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone193 = icmp eq i32 %15, 0
  br i1 %cmp4.fill_inbuf.Clone193, label %if.then5.fill_inbuf.Clone194, label %if.end8.fill_inbuf.Clone198

if.then5.fill_inbuf.Clone194:                     ; preds = %do.end.fill_inbuf.Clone192
  %16 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone177, align 4
  %tobool.fill_inbuf.Clone195 = icmp ne i32 %16, 0
  br i1 %tobool.fill_inbuf.Clone195, label %if.then6.fill_inbuf.Clone196, label %if.end7.fill_inbuf.Clone197

if.then6.fill_inbuf.Clone196:                     ; preds = %if.then5.fill_inbuf.Clone194
  store i32 -1, i32* %retval.fill_inbuf.Clone176, align 4
  br label %return.fill_inbuf.Clone201

if.end7.fill_inbuf.Clone197:                      ; preds = %if.then5.fill_inbuf.Clone194
  br label %entry.read_error.Clone

entry.read_error.Clone:                           ; preds = %if.end7.fill_inbuf.Clone197
  %17 = load i8*, i8** @progname, align 4
  %call.read_error.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone, i32 2
  %call1.read_error.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %17)
  %call2.read_error.Clone = call i32* @_errno()
  %18 = load i32, i32* %call2.read_error.Clone, align 4
  %cmp.read_error.Clone = icmp ne i32 %18, 0
  br i1 %cmp.read_error.Clone, label %if.then.read_error.Clone, label %if.else.read_error.Clone

if.then.read_error.Clone:                         ; preds = %entry.read_error.Clone
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone

if.else.read_error.Clone:                         ; preds = %entry.read_error.Clone
  %call3.read_error.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone, i32 2
  %call5.read_error.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone

if.end.read_error.Clone:                          ; preds = %if.else.read_error.Clone, %if.then.read_error.Clone
  br label %entry.abort_gzip.Clone392

entry.abort_gzip.Clone392:                        ; preds = %if.end.read_error.Clone
  %19 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone393 = icmp ne i32 %19, 0
  br i1 %tobool.abort_gzip.Clone393, label %if.then.abort_gzip.Clone394, label %if.end.abort_gzip.Clone397

if.then.abort_gzip.Clone394:                      ; preds = %entry.abort_gzip.Clone392
  %20 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone395 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %20)
  %call1.abort_gzip.Clone396 = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone397

if.end.abort_gzip.Clone397:                       ; preds = %if.then.abort_gzip.Clone394, %entry.abort_gzip.Clone392
  br label %entry.do_exit.Clone

entry.do_exit.Clone:                              ; preds = %if.end.abort_gzip.Clone397
  %exitcode.addr.do_exit.Clone = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone, align 4
  %21 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone = icmp ne i32 %21, 0
  br i1 %tobool.do_exit.Clone, label %if.then.do_exit.Clone, label %if.end.do_exit.Clone

if.then.do_exit.Clone:                            ; preds = %entry.do_exit.Clone
  %22 = load i32, i32* %exitcode.addr.do_exit.Clone, align 4
  call void @exit(i32 %22) #7
  unreachable

if.end.do_exit.Clone:                             ; preds = %entry.do_exit.Clone
  store i32 1, i32* @do_exit.in_exit, align 4
  %23 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone = icmp ne i8* %23, null
  br i1 %cmp.do_exit.Clone, label %if.then1.do_exit.Clone, label %if.end2.do_exit.Clone

if.then1.do_exit.Clone:                           ; preds = %if.end.do_exit.Clone
  %24 = load i8*, i8** @env, align 4
  call void @free(i8* %24) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone

if.end2.do_exit.Clone:                            ; preds = %if.then1.do_exit.Clone, %if.end.do_exit.Clone
  %25 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone = icmp ne i8** %25, null
  br i1 %cmp3.do_exit.Clone, label %if.then4.do_exit.Clone, label %if.end5.do_exit.Clone

if.then4.do_exit.Clone:                           ; preds = %if.end2.do_exit.Clone
  %26 = load i8**, i8*** @args, align 4
  %27 = bitcast i8** %26 to i8*
  call void @free(i8* %27) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone

if.end5.do_exit.Clone:                            ; preds = %if.then4.do_exit.Clone, %if.end2.do_exit.Clone
  %28 = load i32, i32* %exitcode.addr.do_exit.Clone, align 4
  call void @exit(i32 %28) #7
  unreachable

return.do_exit.Clone:                             ; No predecessors!
  br label %if.end.abort_gzip.Clone397.Split

if.end.abort_gzip.Clone397.Split:                 ; preds = %return.do_exit.Clone
  br label %if.end.read_error.Clone.Split

if.end.read_error.Clone.Split:                    ; preds = %if.end.abort_gzip.Clone397.Split
  br label %if.end7.fill_inbuf.Clone197.Split

if.end7.fill_inbuf.Clone197.Split:                ; preds = %if.end.read_error.Clone.Split
  br label %if.end8.fill_inbuf.Clone198

if.end8.fill_inbuf.Clone198:                      ; preds = %if.end7.fill_inbuf.Clone197.Split, %do.end.fill_inbuf.Clone192
  %29 = load i32, i32* @insize, align 4
  %30 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone199 = add i32 %30, %29
  store i32 %add9.fill_inbuf.Clone199, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %31 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone200 = zext i8 %31 to i32
  store i32 %conv.fill_inbuf.Clone200, i32* %retval.fill_inbuf.Clone176, align 4
  br label %return.fill_inbuf.Clone201

return.fill_inbuf.Clone201:                       ; preds = %if.end8.fill_inbuf.Clone198, %if.then6.fill_inbuf.Clone196
  %32 = load i32, i32* %retval.fill_inbuf.Clone176, align 4
  store i32 %32, i32* %RetValuePtr202
  br label %cond.false.Split

cond.false.Split:                                 ; preds = %return.fill_inbuf.Clone201
  %RetValue203 = load i32, i32* %RetValuePtr202
  br label %cond.end

cond.end:                                         ; preds = %cond.false.Split, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %RetValue203, %cond.false.Split ]
  %conv2 = trunc i32 %cond to i8
  %conv3 = zext i8 %conv2 to i32
  %33 = load i32, i32* %k, align 4
  %shl = shl i32 %conv3, %33
  %34 = load i32, i32* %b, align 4
  %or = or i32 %34, %shl
  store i32 %or, i32* %b, align 4
  %35 = load i32, i32* %k, align 4
  %add = add i32 %35, 8
  store i32 %add, i32* %k, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %36 = load i32, i32* %b, align 4
  %and = and i32 %36, 31
  %add4 = add i32 257, %and
  store i32 %add4, i32* %nl, align 4
  %37 = load i32, i32* %b, align 4
  %shr = lshr i32 %37, 5
  store i32 %shr, i32* %b, align 4
  %38 = load i32, i32* %k, align 4
  %sub = sub i32 %38, 5
  store i32 %sub, i32* %k, align 4
  br label %while.cond5

while.cond5:                                      ; preds = %cond.end17, %while.end
  %39 = load i32, i32* %k, align 4
  %cmp6 = icmp ult i32 %39, 5
  br i1 %cmp6, label %while.body8, label %while.end24

while.body8:                                      ; preds = %while.cond5
  %40 = load i32, i32* @inptr, align 4
  %41 = load i32, i32* @insize, align 4
  %cmp9 = icmp ult i32 %40, %41
  br i1 %cmp9, label %cond.true11, label %cond.false15

cond.true11:                                      ; preds = %while.body8
  %42 = load i32, i32* @inptr, align 4
  %inc12 = add i32 %42, 1
  store i32 %inc12, i32* @inptr, align 4
  %arrayidx13 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i32 0, i32 %42
  %43 = load i8, i8* %arrayidx13, align 1
  %conv14 = zext i8 %43 to i32
  br label %cond.end17

cond.false15:                                     ; preds = %while.body8
  br label %entry.fill_inbuf.Clone146

entry.fill_inbuf.Clone146:                        ; preds = %cond.false15
  %retval.fill_inbuf.Clone147 = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone148 = alloca i32, align 4
  %len.fill_inbuf.Clone149 = alloca i32, align 4
  store i32 0, i32* %eof_ok.addr.fill_inbuf.Clone148, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone150 = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone150, align 4
  br label %do.body.fill_inbuf.Clone151

do.body.fill_inbuf.Clone151:                      ; preds = %do.cond.fill_inbuf.Clone161, %entry.fill_inbuf.Clone146
  %44 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone152 = sub i32 32768, %44
  %45 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone153 = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %45
  %46 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone154 = call i32 @spec_read(i32 %46, i8* %add.ptr.fill_inbuf.Clone153, i32 %sub.fill_inbuf.Clone152)
  store i32 %call1.fill_inbuf.Clone154, i32* %len.fill_inbuf.Clone149, align 4
  %47 = load i32, i32* %len.fill_inbuf.Clone149, align 4
  %cmp.fill_inbuf.Clone155 = icmp eq i32 %47, 0
  br i1 %cmp.fill_inbuf.Clone155, label %if.then.fill_inbuf.Clone158, label %lor.lhs.false.fill_inbuf.Clone156

lor.lhs.false.fill_inbuf.Clone156:                ; preds = %do.body.fill_inbuf.Clone151
  %48 = load i32, i32* %len.fill_inbuf.Clone149, align 4
  %cmp2.fill_inbuf.Clone157 = icmp eq i32 %48, -1
  br i1 %cmp2.fill_inbuf.Clone157, label %if.then.fill_inbuf.Clone158, label %if.end.fill_inbuf.Clone159

if.then.fill_inbuf.Clone158:                      ; preds = %lor.lhs.false.fill_inbuf.Clone156, %do.body.fill_inbuf.Clone151
  br label %do.end.fill_inbuf.Clone163

if.end.fill_inbuf.Clone159:                       ; preds = %lor.lhs.false.fill_inbuf.Clone156
  %49 = load i32, i32* %len.fill_inbuf.Clone149, align 4
  %50 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone160 = add i32 %50, %49
  store i32 %add.fill_inbuf.Clone160, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone161

do.cond.fill_inbuf.Clone161:                      ; preds = %if.end.fill_inbuf.Clone159
  %51 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone162 = icmp ult i32 %51, 32768
  br i1 %cmp3.fill_inbuf.Clone162, label %do.body.fill_inbuf.Clone151, label %do.end.fill_inbuf.Clone163

do.end.fill_inbuf.Clone163:                       ; preds = %do.cond.fill_inbuf.Clone161, %if.then.fill_inbuf.Clone158
  %52 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone164 = icmp eq i32 %52, 0
  br i1 %cmp4.fill_inbuf.Clone164, label %if.then5.fill_inbuf.Clone165, label %if.end8.fill_inbuf.Clone169

if.then5.fill_inbuf.Clone165:                     ; preds = %do.end.fill_inbuf.Clone163
  %53 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone148, align 4
  %tobool.fill_inbuf.Clone166 = icmp ne i32 %53, 0
  br i1 %tobool.fill_inbuf.Clone166, label %if.then6.fill_inbuf.Clone167, label %if.end7.fill_inbuf.Clone168

if.then6.fill_inbuf.Clone167:                     ; preds = %if.then5.fill_inbuf.Clone165
  store i32 -1, i32* %retval.fill_inbuf.Clone147, align 4
  br label %return.fill_inbuf.Clone172

if.end7.fill_inbuf.Clone168:                      ; preds = %if.then5.fill_inbuf.Clone165
  br label %entry.read_error.Clone272

entry.read_error.Clone272:                        ; preds = %if.end7.fill_inbuf.Clone168
  %54 = load i8*, i8** @progname, align 4
  %call.read_error.Clone273 = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone274 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone273, i32 2
  %call1.read_error.Clone275 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone274, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %54)
  %call2.read_error.Clone276 = call i32* @_errno()
  %55 = load i32, i32* %call2.read_error.Clone276, align 4
  %cmp.read_error.Clone277 = icmp ne i32 %55, 0
  br i1 %cmp.read_error.Clone277, label %if.then.read_error.Clone278, label %if.else.read_error.Clone279

if.then.read_error.Clone278:                      ; preds = %entry.read_error.Clone272
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone283

if.else.read_error.Clone279:                      ; preds = %entry.read_error.Clone272
  %call3.read_error.Clone280 = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone281 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone280, i32 2
  %call5.read_error.Clone282 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone281, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone283

if.end.read_error.Clone283:                       ; preds = %if.else.read_error.Clone279, %if.then.read_error.Clone278
  br label %entry.abort_gzip.Clone386

entry.abort_gzip.Clone386:                        ; preds = %if.end.read_error.Clone283
  %56 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone387 = icmp ne i32 %56, 0
  br i1 %tobool.abort_gzip.Clone387, label %if.then.abort_gzip.Clone388, label %if.end.abort_gzip.Clone391

if.then.abort_gzip.Clone388:                      ; preds = %entry.abort_gzip.Clone386
  %57 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone389 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %57)
  %call1.abort_gzip.Clone390 = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone391

if.end.abort_gzip.Clone391:                       ; preds = %if.then.abort_gzip.Clone388, %entry.abort_gzip.Clone386
  br label %entry.do_exit.Clone398

entry.do_exit.Clone398:                           ; preds = %if.end.abort_gzip.Clone391
  %exitcode.addr.do_exit.Clone399 = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone399, align 4
  %58 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone400 = icmp ne i32 %58, 0
  br i1 %tobool.do_exit.Clone400, label %if.then.do_exit.Clone401, label %if.end.do_exit.Clone402

if.then.do_exit.Clone401:                         ; preds = %entry.do_exit.Clone398
  %59 = load i32, i32* %exitcode.addr.do_exit.Clone399, align 4
  call void @exit(i32 %59) #7
  unreachable

if.end.do_exit.Clone402:                          ; preds = %entry.do_exit.Clone398
  store i32 1, i32* @do_exit.in_exit, align 4
  %60 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone403 = icmp ne i8* %60, null
  br i1 %cmp.do_exit.Clone403, label %if.then1.do_exit.Clone404, label %if.end2.do_exit.Clone405

if.then1.do_exit.Clone404:                        ; preds = %if.end.do_exit.Clone402
  %61 = load i8*, i8** @env, align 4
  call void @free(i8* %61) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone405

if.end2.do_exit.Clone405:                         ; preds = %if.then1.do_exit.Clone404, %if.end.do_exit.Clone402
  %62 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone406 = icmp ne i8** %62, null
  br i1 %cmp3.do_exit.Clone406, label %if.then4.do_exit.Clone407, label %if.end5.do_exit.Clone408

if.then4.do_exit.Clone407:                        ; preds = %if.end2.do_exit.Clone405
  %63 = load i8**, i8*** @args, align 4
  %64 = bitcast i8** %63 to i8*
  call void @free(i8* %64) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone408

if.end5.do_exit.Clone408:                         ; preds = %if.then4.do_exit.Clone407, %if.end2.do_exit.Clone405
  %65 = load i32, i32* %exitcode.addr.do_exit.Clone399, align 4
  call void @exit(i32 %65) #7
  unreachable

return.do_exit.Clone409:                          ; No predecessors!
  br label %if.end.abort_gzip.Clone391.Split

if.end.abort_gzip.Clone391.Split:                 ; preds = %return.do_exit.Clone409
  br label %if.end.read_error.Clone283.Split

if.end.read_error.Clone283.Split:                 ; preds = %if.end.abort_gzip.Clone391.Split
  br label %if.end7.fill_inbuf.Clone168.Split

if.end7.fill_inbuf.Clone168.Split:                ; preds = %if.end.read_error.Clone283.Split
  br label %if.end8.fill_inbuf.Clone169

if.end8.fill_inbuf.Clone169:                      ; preds = %if.end7.fill_inbuf.Clone168.Split, %do.end.fill_inbuf.Clone163
  %66 = load i32, i32* @insize, align 4
  %67 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone170 = add i32 %67, %66
  store i32 %add9.fill_inbuf.Clone170, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %68 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone171 = zext i8 %68 to i32
  store i32 %conv.fill_inbuf.Clone171, i32* %retval.fill_inbuf.Clone147, align 4
  br label %return.fill_inbuf.Clone172

return.fill_inbuf.Clone172:                       ; preds = %if.end8.fill_inbuf.Clone169, %if.then6.fill_inbuf.Clone167
  %69 = load i32, i32* %retval.fill_inbuf.Clone147, align 4
  store i32 %69, i32* %RetValuePtr173
  br label %cond.false15.Split

cond.false15.Split:                               ; preds = %return.fill_inbuf.Clone172
  %RetValue174 = load i32, i32* %RetValuePtr173
  br label %cond.end17

cond.end17:                                       ; preds = %cond.false15.Split, %cond.true11
  %cond18 = phi i32 [ %conv14, %cond.true11 ], [ %RetValue174, %cond.false15.Split ]
  %conv19 = trunc i32 %cond18 to i8
  %conv20 = zext i8 %conv19 to i32
  %70 = load i32, i32* %k, align 4
  %shl21 = shl i32 %conv20, %70
  %71 = load i32, i32* %b, align 4
  %or22 = or i32 %71, %shl21
  store i32 %or22, i32* %b, align 4
  %72 = load i32, i32* %k, align 4
  %add23 = add i32 %72, 8
  store i32 %add23, i32* %k, align 4
  br label %while.cond5

while.end24:                                      ; preds = %while.cond5
  %73 = load i32, i32* %b, align 4
  %and25 = and i32 %73, 31
  %add26 = add i32 1, %and25
  store i32 %add26, i32* %nd, align 4
  %74 = load i32, i32* %b, align 4
  %shr27 = lshr i32 %74, 5
  store i32 %shr27, i32* %b, align 4
  %75 = load i32, i32* %k, align 4
  %sub28 = sub i32 %75, 5
  store i32 %sub28, i32* %k, align 4
  br label %while.cond29

while.cond29:                                     ; preds = %cond.end41, %while.end24
  %76 = load i32, i32* %k, align 4
  %cmp30 = icmp ult i32 %76, 4
  br i1 %cmp30, label %while.body32, label %while.end48

while.body32:                                     ; preds = %while.cond29
  %77 = load i32, i32* @inptr, align 4
  %78 = load i32, i32* @insize, align 4
  %cmp33 = icmp ult i32 %77, %78
  br i1 %cmp33, label %cond.true35, label %cond.false39

cond.true35:                                      ; preds = %while.body32
  %79 = load i32, i32* @inptr, align 4
  %inc36 = add i32 %79, 1
  store i32 %inc36, i32* @inptr, align 4
  %arrayidx37 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i32 0, i32 %79
  %80 = load i8, i8* %arrayidx37, align 1
  %conv38 = zext i8 %80 to i32
  br label %cond.end41

cond.false39:                                     ; preds = %while.body32
  br label %entry.fill_inbuf.Clone117

entry.fill_inbuf.Clone117:                        ; preds = %cond.false39
  %retval.fill_inbuf.Clone118 = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone119 = alloca i32, align 4
  %len.fill_inbuf.Clone120 = alloca i32, align 4
  store i32 0, i32* %eof_ok.addr.fill_inbuf.Clone119, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone121 = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone121, align 4
  br label %do.body.fill_inbuf.Clone122

do.body.fill_inbuf.Clone122:                      ; preds = %do.cond.fill_inbuf.Clone132, %entry.fill_inbuf.Clone117
  %81 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone123 = sub i32 32768, %81
  %82 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone124 = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %82
  %83 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone125 = call i32 @spec_read(i32 %83, i8* %add.ptr.fill_inbuf.Clone124, i32 %sub.fill_inbuf.Clone123)
  store i32 %call1.fill_inbuf.Clone125, i32* %len.fill_inbuf.Clone120, align 4
  %84 = load i32, i32* %len.fill_inbuf.Clone120, align 4
  %cmp.fill_inbuf.Clone126 = icmp eq i32 %84, 0
  br i1 %cmp.fill_inbuf.Clone126, label %if.then.fill_inbuf.Clone129, label %lor.lhs.false.fill_inbuf.Clone127

lor.lhs.false.fill_inbuf.Clone127:                ; preds = %do.body.fill_inbuf.Clone122
  %85 = load i32, i32* %len.fill_inbuf.Clone120, align 4
  %cmp2.fill_inbuf.Clone128 = icmp eq i32 %85, -1
  br i1 %cmp2.fill_inbuf.Clone128, label %if.then.fill_inbuf.Clone129, label %if.end.fill_inbuf.Clone130

if.then.fill_inbuf.Clone129:                      ; preds = %lor.lhs.false.fill_inbuf.Clone127, %do.body.fill_inbuf.Clone122
  br label %do.end.fill_inbuf.Clone134

if.end.fill_inbuf.Clone130:                       ; preds = %lor.lhs.false.fill_inbuf.Clone127
  %86 = load i32, i32* %len.fill_inbuf.Clone120, align 4
  %87 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone131 = add i32 %87, %86
  store i32 %add.fill_inbuf.Clone131, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone132

do.cond.fill_inbuf.Clone132:                      ; preds = %if.end.fill_inbuf.Clone130
  %88 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone133 = icmp ult i32 %88, 32768
  br i1 %cmp3.fill_inbuf.Clone133, label %do.body.fill_inbuf.Clone122, label %do.end.fill_inbuf.Clone134

do.end.fill_inbuf.Clone134:                       ; preds = %do.cond.fill_inbuf.Clone132, %if.then.fill_inbuf.Clone129
  %89 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone135 = icmp eq i32 %89, 0
  br i1 %cmp4.fill_inbuf.Clone135, label %if.then5.fill_inbuf.Clone136, label %if.end8.fill_inbuf.Clone140

if.then5.fill_inbuf.Clone136:                     ; preds = %do.end.fill_inbuf.Clone134
  %90 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone119, align 4
  %tobool.fill_inbuf.Clone137 = icmp ne i32 %90, 0
  br i1 %tobool.fill_inbuf.Clone137, label %if.then6.fill_inbuf.Clone138, label %if.end7.fill_inbuf.Clone139

if.then6.fill_inbuf.Clone138:                     ; preds = %if.then5.fill_inbuf.Clone136
  store i32 -1, i32* %retval.fill_inbuf.Clone118, align 4
  br label %return.fill_inbuf.Clone143

if.end7.fill_inbuf.Clone139:                      ; preds = %if.then5.fill_inbuf.Clone136
  br label %entry.read_error.Clone284

entry.read_error.Clone284:                        ; preds = %if.end7.fill_inbuf.Clone139
  %91 = load i8*, i8** @progname, align 4
  %call.read_error.Clone285 = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone286 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone285, i32 2
  %call1.read_error.Clone287 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone286, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %91)
  %call2.read_error.Clone288 = call i32* @_errno()
  %92 = load i32, i32* %call2.read_error.Clone288, align 4
  %cmp.read_error.Clone289 = icmp ne i32 %92, 0
  br i1 %cmp.read_error.Clone289, label %if.then.read_error.Clone290, label %if.else.read_error.Clone291

if.then.read_error.Clone290:                      ; preds = %entry.read_error.Clone284
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone295

if.else.read_error.Clone291:                      ; preds = %entry.read_error.Clone284
  %call3.read_error.Clone292 = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone293 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone292, i32 2
  %call5.read_error.Clone294 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone293, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone295

if.end.read_error.Clone295:                       ; preds = %if.else.read_error.Clone291, %if.then.read_error.Clone290
  br label %entry.abort_gzip.Clone380

entry.abort_gzip.Clone380:                        ; preds = %if.end.read_error.Clone295
  %93 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone381 = icmp ne i32 %93, 0
  br i1 %tobool.abort_gzip.Clone381, label %if.then.abort_gzip.Clone382, label %if.end.abort_gzip.Clone385

if.then.abort_gzip.Clone382:                      ; preds = %entry.abort_gzip.Clone380
  %94 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone383 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %94)
  %call1.abort_gzip.Clone384 = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone385

if.end.abort_gzip.Clone385:                       ; preds = %if.then.abort_gzip.Clone382, %entry.abort_gzip.Clone380
  br label %entry.do_exit.Clone410

entry.do_exit.Clone410:                           ; preds = %if.end.abort_gzip.Clone385
  %exitcode.addr.do_exit.Clone411 = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone411, align 4
  %95 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone412 = icmp ne i32 %95, 0
  br i1 %tobool.do_exit.Clone412, label %if.then.do_exit.Clone413, label %if.end.do_exit.Clone414

if.then.do_exit.Clone413:                         ; preds = %entry.do_exit.Clone410
  %96 = load i32, i32* %exitcode.addr.do_exit.Clone411, align 4
  call void @exit(i32 %96) #7
  unreachable

if.end.do_exit.Clone414:                          ; preds = %entry.do_exit.Clone410
  store i32 1, i32* @do_exit.in_exit, align 4
  %97 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone415 = icmp ne i8* %97, null
  br i1 %cmp.do_exit.Clone415, label %if.then1.do_exit.Clone416, label %if.end2.do_exit.Clone417

if.then1.do_exit.Clone416:                        ; preds = %if.end.do_exit.Clone414
  %98 = load i8*, i8** @env, align 4
  call void @free(i8* %98) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone417

if.end2.do_exit.Clone417:                         ; preds = %if.then1.do_exit.Clone416, %if.end.do_exit.Clone414
  %99 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone418 = icmp ne i8** %99, null
  br i1 %cmp3.do_exit.Clone418, label %if.then4.do_exit.Clone419, label %if.end5.do_exit.Clone420

if.then4.do_exit.Clone419:                        ; preds = %if.end2.do_exit.Clone417
  %100 = load i8**, i8*** @args, align 4
  %101 = bitcast i8** %100 to i8*
  call void @free(i8* %101) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone420

if.end5.do_exit.Clone420:                         ; preds = %if.then4.do_exit.Clone419, %if.end2.do_exit.Clone417
  %102 = load i32, i32* %exitcode.addr.do_exit.Clone411, align 4
  call void @exit(i32 %102) #7
  unreachable

return.do_exit.Clone421:                          ; No predecessors!
  br label %if.end.abort_gzip.Clone385.Split

if.end.abort_gzip.Clone385.Split:                 ; preds = %return.do_exit.Clone421
  br label %if.end.read_error.Clone295.Split

if.end.read_error.Clone295.Split:                 ; preds = %if.end.abort_gzip.Clone385.Split
  br label %if.end7.fill_inbuf.Clone139.Split

if.end7.fill_inbuf.Clone139.Split:                ; preds = %if.end.read_error.Clone295.Split
  br label %if.end8.fill_inbuf.Clone140

if.end8.fill_inbuf.Clone140:                      ; preds = %if.end7.fill_inbuf.Clone139.Split, %do.end.fill_inbuf.Clone134
  %103 = load i32, i32* @insize, align 4
  %104 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone141 = add i32 %104, %103
  store i32 %add9.fill_inbuf.Clone141, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %105 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone142 = zext i8 %105 to i32
  store i32 %conv.fill_inbuf.Clone142, i32* %retval.fill_inbuf.Clone118, align 4
  br label %return.fill_inbuf.Clone143

return.fill_inbuf.Clone143:                       ; preds = %if.end8.fill_inbuf.Clone140, %if.then6.fill_inbuf.Clone138
  %106 = load i32, i32* %retval.fill_inbuf.Clone118, align 4
  store i32 %106, i32* %RetValuePtr144
  br label %cond.false39.Split

cond.false39.Split:                               ; preds = %return.fill_inbuf.Clone143
  %RetValue145 = load i32, i32* %RetValuePtr144
  br label %cond.end41

cond.end41:                                       ; preds = %cond.false39.Split, %cond.true35
  %cond42 = phi i32 [ %conv38, %cond.true35 ], [ %RetValue145, %cond.false39.Split ]
  %conv43 = trunc i32 %cond42 to i8
  %conv44 = zext i8 %conv43 to i32
  %107 = load i32, i32* %k, align 4
  %shl45 = shl i32 %conv44, %107
  %108 = load i32, i32* %b, align 4
  %or46 = or i32 %108, %shl45
  store i32 %or46, i32* %b, align 4
  %109 = load i32, i32* %k, align 4
  %add47 = add i32 %109, 8
  store i32 %add47, i32* %k, align 4
  br label %while.cond29

while.end48:                                      ; preds = %while.cond29
  %110 = load i32, i32* %b, align 4
  %and49 = and i32 %110, 15
  %add50 = add i32 4, %and49
  store i32 %add50, i32* %nb, align 4
  %111 = load i32, i32* %b, align 4
  %shr51 = lshr i32 %111, 4
  store i32 %shr51, i32* %b, align 4
  %112 = load i32, i32* %k, align 4
  %sub52 = sub i32 %112, 4
  store i32 %sub52, i32* %k, align 4
  %113 = load i32, i32* %nl, align 4
  %cmp53 = icmp ugt i32 %113, 286
  br i1 %cmp53, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %while.end48
  %114 = load i32, i32* %nd, align 4
  %cmp55 = icmp ugt i32 %114, 30
  br i1 %cmp55, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %while.end48
  store i32 1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  store i32 0, i32* %j, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %115 = load i32, i32* %j, align 4
  %116 = load i32, i32* %nb, align 4
  %cmp57 = icmp ult i32 %115, %116
  br i1 %cmp57, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  br label %while.cond59

while.cond59:                                     ; preds = %cond.end71, %for.body
  %117 = load i32, i32* %k, align 4
  %cmp60 = icmp ult i32 %117, 3
  br i1 %cmp60, label %while.body62, label %while.end78

while.body62:                                     ; preds = %while.cond59
  %118 = load i32, i32* @inptr, align 4
  %119 = load i32, i32* @insize, align 4
  %cmp63 = icmp ult i32 %118, %119
  br i1 %cmp63, label %cond.true65, label %cond.false69

cond.true65:                                      ; preds = %while.body62
  %120 = load i32, i32* @inptr, align 4
  %inc66 = add i32 %120, 1
  store i32 %inc66, i32* @inptr, align 4
  %arrayidx67 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i32 0, i32 %120
  %121 = load i8, i8* %arrayidx67, align 1
  %conv68 = zext i8 %121 to i32
  br label %cond.end71

cond.false69:                                     ; preds = %while.body62
  br label %entry.fill_inbuf.Clone88

entry.fill_inbuf.Clone88:                         ; preds = %cond.false69
  %retval.fill_inbuf.Clone89 = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone90 = alloca i32, align 4
  %len.fill_inbuf.Clone91 = alloca i32, align 4
  store i32 0, i32* %eof_ok.addr.fill_inbuf.Clone90, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone92 = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone92, align 4
  br label %do.body.fill_inbuf.Clone93

do.body.fill_inbuf.Clone93:                       ; preds = %do.cond.fill_inbuf.Clone103, %entry.fill_inbuf.Clone88
  %122 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone94 = sub i32 32768, %122
  %123 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone95 = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %123
  %124 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone96 = call i32 @spec_read(i32 %124, i8* %add.ptr.fill_inbuf.Clone95, i32 %sub.fill_inbuf.Clone94)
  store i32 %call1.fill_inbuf.Clone96, i32* %len.fill_inbuf.Clone91, align 4
  %125 = load i32, i32* %len.fill_inbuf.Clone91, align 4
  %cmp.fill_inbuf.Clone97 = icmp eq i32 %125, 0
  br i1 %cmp.fill_inbuf.Clone97, label %if.then.fill_inbuf.Clone100, label %lor.lhs.false.fill_inbuf.Clone98

lor.lhs.false.fill_inbuf.Clone98:                 ; preds = %do.body.fill_inbuf.Clone93
  %126 = load i32, i32* %len.fill_inbuf.Clone91, align 4
  %cmp2.fill_inbuf.Clone99 = icmp eq i32 %126, -1
  br i1 %cmp2.fill_inbuf.Clone99, label %if.then.fill_inbuf.Clone100, label %if.end.fill_inbuf.Clone101

if.then.fill_inbuf.Clone100:                      ; preds = %lor.lhs.false.fill_inbuf.Clone98, %do.body.fill_inbuf.Clone93
  br label %do.end.fill_inbuf.Clone105

if.end.fill_inbuf.Clone101:                       ; preds = %lor.lhs.false.fill_inbuf.Clone98
  %127 = load i32, i32* %len.fill_inbuf.Clone91, align 4
  %128 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone102 = add i32 %128, %127
  store i32 %add.fill_inbuf.Clone102, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone103

do.cond.fill_inbuf.Clone103:                      ; preds = %if.end.fill_inbuf.Clone101
  %129 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone104 = icmp ult i32 %129, 32768
  br i1 %cmp3.fill_inbuf.Clone104, label %do.body.fill_inbuf.Clone93, label %do.end.fill_inbuf.Clone105

do.end.fill_inbuf.Clone105:                       ; preds = %do.cond.fill_inbuf.Clone103, %if.then.fill_inbuf.Clone100
  %130 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone106 = icmp eq i32 %130, 0
  br i1 %cmp4.fill_inbuf.Clone106, label %if.then5.fill_inbuf.Clone107, label %if.end8.fill_inbuf.Clone111

if.then5.fill_inbuf.Clone107:                     ; preds = %do.end.fill_inbuf.Clone105
  %131 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone90, align 4
  %tobool.fill_inbuf.Clone108 = icmp ne i32 %131, 0
  br i1 %tobool.fill_inbuf.Clone108, label %if.then6.fill_inbuf.Clone109, label %if.end7.fill_inbuf.Clone110

if.then6.fill_inbuf.Clone109:                     ; preds = %if.then5.fill_inbuf.Clone107
  store i32 -1, i32* %retval.fill_inbuf.Clone89, align 4
  br label %return.fill_inbuf.Clone114

if.end7.fill_inbuf.Clone110:                      ; preds = %if.then5.fill_inbuf.Clone107
  br label %entry.read_error.Clone296

entry.read_error.Clone296:                        ; preds = %if.end7.fill_inbuf.Clone110
  %132 = load i8*, i8** @progname, align 4
  %call.read_error.Clone297 = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone298 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone297, i32 2
  %call1.read_error.Clone299 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone298, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %132)
  %call2.read_error.Clone300 = call i32* @_errno()
  %133 = load i32, i32* %call2.read_error.Clone300, align 4
  %cmp.read_error.Clone301 = icmp ne i32 %133, 0
  br i1 %cmp.read_error.Clone301, label %if.then.read_error.Clone302, label %if.else.read_error.Clone303

if.then.read_error.Clone302:                      ; preds = %entry.read_error.Clone296
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone307

if.else.read_error.Clone303:                      ; preds = %entry.read_error.Clone296
  %call3.read_error.Clone304 = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone305 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone304, i32 2
  %call5.read_error.Clone306 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone305, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone307

if.end.read_error.Clone307:                       ; preds = %if.else.read_error.Clone303, %if.then.read_error.Clone302
  br label %entry.abort_gzip.Clone374

entry.abort_gzip.Clone374:                        ; preds = %if.end.read_error.Clone307
  %134 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone375 = icmp ne i32 %134, 0
  br i1 %tobool.abort_gzip.Clone375, label %if.then.abort_gzip.Clone376, label %if.end.abort_gzip.Clone379

if.then.abort_gzip.Clone376:                      ; preds = %entry.abort_gzip.Clone374
  %135 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone377 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %135)
  %call1.abort_gzip.Clone378 = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone379

if.end.abort_gzip.Clone379:                       ; preds = %if.then.abort_gzip.Clone376, %entry.abort_gzip.Clone374
  br label %entry.do_exit.Clone422

entry.do_exit.Clone422:                           ; preds = %if.end.abort_gzip.Clone379
  %exitcode.addr.do_exit.Clone423 = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone423, align 4
  %136 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone424 = icmp ne i32 %136, 0
  br i1 %tobool.do_exit.Clone424, label %if.then.do_exit.Clone425, label %if.end.do_exit.Clone426

if.then.do_exit.Clone425:                         ; preds = %entry.do_exit.Clone422
  %137 = load i32, i32* %exitcode.addr.do_exit.Clone423, align 4
  call void @exit(i32 %137) #7
  unreachable

if.end.do_exit.Clone426:                          ; preds = %entry.do_exit.Clone422
  store i32 1, i32* @do_exit.in_exit, align 4
  %138 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone427 = icmp ne i8* %138, null
  br i1 %cmp.do_exit.Clone427, label %if.then1.do_exit.Clone428, label %if.end2.do_exit.Clone429

if.then1.do_exit.Clone428:                        ; preds = %if.end.do_exit.Clone426
  %139 = load i8*, i8** @env, align 4
  call void @free(i8* %139) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone429

if.end2.do_exit.Clone429:                         ; preds = %if.then1.do_exit.Clone428, %if.end.do_exit.Clone426
  %140 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone430 = icmp ne i8** %140, null
  br i1 %cmp3.do_exit.Clone430, label %if.then4.do_exit.Clone431, label %if.end5.do_exit.Clone432

if.then4.do_exit.Clone431:                        ; preds = %if.end2.do_exit.Clone429
  %141 = load i8**, i8*** @args, align 4
  %142 = bitcast i8** %141 to i8*
  call void @free(i8* %142) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone432

if.end5.do_exit.Clone432:                         ; preds = %if.then4.do_exit.Clone431, %if.end2.do_exit.Clone429
  %143 = load i32, i32* %exitcode.addr.do_exit.Clone423, align 4
  call void @exit(i32 %143) #7
  unreachable

return.do_exit.Clone433:                          ; No predecessors!
  br label %if.end.abort_gzip.Clone379.Split

if.end.abort_gzip.Clone379.Split:                 ; preds = %return.do_exit.Clone433
  br label %if.end.read_error.Clone307.Split

if.end.read_error.Clone307.Split:                 ; preds = %if.end.abort_gzip.Clone379.Split
  br label %if.end7.fill_inbuf.Clone110.Split

if.end7.fill_inbuf.Clone110.Split:                ; preds = %if.end.read_error.Clone307.Split
  br label %if.end8.fill_inbuf.Clone111

if.end8.fill_inbuf.Clone111:                      ; preds = %if.end7.fill_inbuf.Clone110.Split, %do.end.fill_inbuf.Clone105
  %144 = load i32, i32* @insize, align 4
  %145 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone112 = add i32 %145, %144
  store i32 %add9.fill_inbuf.Clone112, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %146 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone113 = zext i8 %146 to i32
  store i32 %conv.fill_inbuf.Clone113, i32* %retval.fill_inbuf.Clone89, align 4
  br label %return.fill_inbuf.Clone114

return.fill_inbuf.Clone114:                       ; preds = %if.end8.fill_inbuf.Clone111, %if.then6.fill_inbuf.Clone109
  %147 = load i32, i32* %retval.fill_inbuf.Clone89, align 4
  store i32 %147, i32* %RetValuePtr115
  br label %cond.false69.Split

cond.false69.Split:                               ; preds = %return.fill_inbuf.Clone114
  %RetValue116 = load i32, i32* %RetValuePtr115
  br label %cond.end71

cond.end71:                                       ; preds = %cond.false69.Split, %cond.true65
  %cond72 = phi i32 [ %conv68, %cond.true65 ], [ %RetValue116, %cond.false69.Split ]
  %conv73 = trunc i32 %cond72 to i8
  %conv74 = zext i8 %conv73 to i32
  %148 = load i32, i32* %k, align 4
  %shl75 = shl i32 %conv74, %148
  %149 = load i32, i32* %b, align 4
  %or76 = or i32 %149, %shl75
  store i32 %or76, i32* %b, align 4
  %150 = load i32, i32* %k, align 4
  %add77 = add i32 %150, 8
  store i32 %add77, i32* %k, align 4
  br label %while.cond59

while.end78:                                      ; preds = %while.cond59
  %151 = load i32, i32* %b, align 4
  %and79 = and i32 %151, 7
  %152 = load i32, i32* %j, align 4
  %arrayidx80 = getelementptr inbounds [19 x i32], [19 x i32]* @border, i32 0, i32 %152
  %153 = load i32, i32* %arrayidx80, align 4
  %arrayidx81 = getelementptr inbounds [316 x i32], [316 x i32]* %ll, i32 0, i32 %153
  store i32 %and79, i32* %arrayidx81, align 4
  %154 = load i32, i32* %b, align 4
  %shr82 = lshr i32 %154, 3
  store i32 %shr82, i32* %b, align 4
  %155 = load i32, i32* %k, align 4
  %sub83 = sub i32 %155, 3
  store i32 %sub83, i32* %k, align 4
  br label %for.inc

for.inc:                                          ; preds = %while.end78
  %156 = load i32, i32* %j, align 4
  %inc84 = add i32 %156, 1
  store i32 %inc84, i32* %j, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %for.cond85

for.cond85:                                       ; preds = %for.inc91, %for.end
  %157 = load i32, i32* %j, align 4
  %cmp86 = icmp ult i32 %157, 19
  br i1 %cmp86, label %for.body88, label %for.end93

for.body88:                                       ; preds = %for.cond85
  %158 = load i32, i32* %j, align 4
  %arrayidx89 = getelementptr inbounds [19 x i32], [19 x i32]* @border, i32 0, i32 %158
  %159 = load i32, i32* %arrayidx89, align 4
  %arrayidx90 = getelementptr inbounds [316 x i32], [316 x i32]* %ll, i32 0, i32 %159
  store i32 0, i32* %arrayidx90, align 4
  br label %for.inc91

for.inc91:                                        ; preds = %for.body88
  %160 = load i32, i32* %j, align 4
  %inc92 = add i32 %160, 1
  store i32 %inc92, i32* %j, align 4
  br label %for.cond85

for.end93:                                        ; preds = %for.cond85
  store i32 7, i32* %bl, align 4
  %arraydecay = getelementptr inbounds [316 x i32], [316 x i32]* %ll, i32 0, i32 0
  %call94 = call i32 @huft_build(i32* %arraydecay, i32 19, i32 19, i16* null, i16* null, %struct.huft** %tl, i32* %bl)
  store i32 %call94, i32* %i, align 4
  %cmp95 = icmp ne i32 %call94, 0
  br i1 %cmp95, label %if.then97, label %if.end103

if.then97:                                        ; preds = %for.end93
  %161 = load i32, i32* %i, align 4
  %cmp98 = icmp eq i32 %161, 1
  br i1 %cmp98, label %if.then100, label %if.end102

if.then100:                                       ; preds = %if.then97
  %162 = load %struct.huft*, %struct.huft** %tl, align 4
  br label %entry.huft_free.Clone259

entry.huft_free.Clone259:                         ; preds = %if.then100
  %t.addr.huft_free.Clone260 = alloca %struct.huft*, align 4
  %p.huft_free.Clone261 = alloca %struct.huft*, align 4
  %q.huft_free.Clone262 = alloca %struct.huft*, align 4
  store %struct.huft* %162, %struct.huft** %t.addr.huft_free.Clone260, align 4
  %163 = load %struct.huft*, %struct.huft** %t.addr.huft_free.Clone260, align 4
  store %struct.huft* %163, %struct.huft** %p.huft_free.Clone261, align 4
  br label %while.cond.huft_free.Clone263

while.cond.huft_free.Clone263:                    ; preds = %while.body.huft_free.Clone265, %entry.huft_free.Clone259
  %164 = load %struct.huft*, %struct.huft** %p.huft_free.Clone261, align 4
  %cmp.huft_free.Clone264 = icmp ne %struct.huft* %164, null
  br i1 %cmp.huft_free.Clone264, label %while.body.huft_free.Clone265, label %while.end.huft_free.Clone269

while.body.huft_free.Clone265:                    ; preds = %while.cond.huft_free.Clone263
  %165 = load %struct.huft*, %struct.huft** %p.huft_free.Clone261, align 4
  %incdec.ptr.huft_free.Clone266 = getelementptr inbounds %struct.huft, %struct.huft* %165, i32 -1
  store %struct.huft* %incdec.ptr.huft_free.Clone266, %struct.huft** %p.huft_free.Clone261, align 4
  %v.huft_free.Clone267 = getelementptr inbounds %struct.huft, %struct.huft* %incdec.ptr.huft_free.Clone266, i32 0, i32 2
  %t1.huft_free.Clone268 = bitcast %union.anon* %v.huft_free.Clone267 to %struct.huft**
  %166 = load %struct.huft*, %struct.huft** %t1.huft_free.Clone268, align 4
  store %struct.huft* %166, %struct.huft** %q.huft_free.Clone262, align 4
  %167 = load %struct.huft*, %struct.huft** %p.huft_free.Clone261, align 4
  %168 = bitcast %struct.huft* %167 to i8*
  call void @free(i8* %168) #2
  %169 = load %struct.huft*, %struct.huft** %q.huft_free.Clone262, align 4
  store %struct.huft* %169, %struct.huft** %p.huft_free.Clone261, align 4
  br label %while.cond.huft_free.Clone263

while.end.huft_free.Clone269:                     ; preds = %while.cond.huft_free.Clone263
  store i32 0, i32* %RetValuePtr270
  br label %if.then100.Split

if.then100.Split:                                 ; preds = %while.end.huft_free.Clone269
  %RetValue271 = load i32, i32* %RetValuePtr270
  br label %if.end102

if.end102:                                        ; preds = %if.then100.Split, %if.then97
  %170 = load i32, i32* %i, align 4
  store i32 %170, i32* %retval, align 4
  br label %return

if.end103:                                        ; preds = %for.end93
  %171 = load i32, i32* %nl, align 4
  %172 = load i32, i32* %nd, align 4
  %add104 = add i32 %171, %172
  store i32 %add104, i32* %n, align 4
  %173 = load i32, i32* %bl, align 4
  %arrayidx105 = getelementptr inbounds [17 x i16], [17 x i16]* @mask_bits, i32 0, i32 %173
  %174 = load i16, i16* %arrayidx105, align 2
  %conv106 = zext i16 %174 to i32
  store i32 %conv106, i32* %m, align 4
  store i32 0, i32* %l, align 4
  store i32 0, i32* %i, align 4
  br label %while.cond107

while.cond107:                                    ; preds = %if.end259, %if.end103
  %175 = load i32, i32* %i, align 4
  %176 = load i32, i32* %n, align 4
  %cmp108 = icmp ult i32 %175, %176
  br i1 %cmp108, label %while.body110, label %while.end260

while.body110:                                    ; preds = %while.cond107
  br label %while.cond111

while.cond111:                                    ; preds = %cond.end123, %while.body110
  %177 = load i32, i32* %k, align 4
  %178 = load i32, i32* %bl, align 4
  %cmp112 = icmp ult i32 %177, %178
  br i1 %cmp112, label %while.body114, label %while.end130

while.body114:                                    ; preds = %while.cond111
  %179 = load i32, i32* @inptr, align 4
  %180 = load i32, i32* @insize, align 4
  %cmp115 = icmp ult i32 %179, %180
  br i1 %cmp115, label %cond.true117, label %cond.false121

cond.true117:                                     ; preds = %while.body114
  %181 = load i32, i32* @inptr, align 4
  %inc118 = add i32 %181, 1
  store i32 %inc118, i32* @inptr, align 4
  %arrayidx119 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i32 0, i32 %181
  %182 = load i8, i8* %arrayidx119, align 1
  %conv120 = zext i8 %182 to i32
  br label %cond.end123

cond.false121:                                    ; preds = %while.body114
  br label %entry.fill_inbuf.Clone59

entry.fill_inbuf.Clone59:                         ; preds = %cond.false121
  %retval.fill_inbuf.Clone60 = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone61 = alloca i32, align 4
  %len.fill_inbuf.Clone62 = alloca i32, align 4
  store i32 0, i32* %eof_ok.addr.fill_inbuf.Clone61, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone63 = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone63, align 4
  br label %do.body.fill_inbuf.Clone64

do.body.fill_inbuf.Clone64:                       ; preds = %do.cond.fill_inbuf.Clone74, %entry.fill_inbuf.Clone59
  %183 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone65 = sub i32 32768, %183
  %184 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone66 = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %184
  %185 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone67 = call i32 @spec_read(i32 %185, i8* %add.ptr.fill_inbuf.Clone66, i32 %sub.fill_inbuf.Clone65)
  store i32 %call1.fill_inbuf.Clone67, i32* %len.fill_inbuf.Clone62, align 4
  %186 = load i32, i32* %len.fill_inbuf.Clone62, align 4
  %cmp.fill_inbuf.Clone68 = icmp eq i32 %186, 0
  br i1 %cmp.fill_inbuf.Clone68, label %if.then.fill_inbuf.Clone71, label %lor.lhs.false.fill_inbuf.Clone69

lor.lhs.false.fill_inbuf.Clone69:                 ; preds = %do.body.fill_inbuf.Clone64
  %187 = load i32, i32* %len.fill_inbuf.Clone62, align 4
  %cmp2.fill_inbuf.Clone70 = icmp eq i32 %187, -1
  br i1 %cmp2.fill_inbuf.Clone70, label %if.then.fill_inbuf.Clone71, label %if.end.fill_inbuf.Clone72

if.then.fill_inbuf.Clone71:                       ; preds = %lor.lhs.false.fill_inbuf.Clone69, %do.body.fill_inbuf.Clone64
  br label %do.end.fill_inbuf.Clone76

if.end.fill_inbuf.Clone72:                        ; preds = %lor.lhs.false.fill_inbuf.Clone69
  %188 = load i32, i32* %len.fill_inbuf.Clone62, align 4
  %189 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone73 = add i32 %189, %188
  store i32 %add.fill_inbuf.Clone73, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone74

do.cond.fill_inbuf.Clone74:                       ; preds = %if.end.fill_inbuf.Clone72
  %190 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone75 = icmp ult i32 %190, 32768
  br i1 %cmp3.fill_inbuf.Clone75, label %do.body.fill_inbuf.Clone64, label %do.end.fill_inbuf.Clone76

do.end.fill_inbuf.Clone76:                        ; preds = %do.cond.fill_inbuf.Clone74, %if.then.fill_inbuf.Clone71
  %191 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone77 = icmp eq i32 %191, 0
  br i1 %cmp4.fill_inbuf.Clone77, label %if.then5.fill_inbuf.Clone78, label %if.end8.fill_inbuf.Clone82

if.then5.fill_inbuf.Clone78:                      ; preds = %do.end.fill_inbuf.Clone76
  %192 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone61, align 4
  %tobool.fill_inbuf.Clone79 = icmp ne i32 %192, 0
  br i1 %tobool.fill_inbuf.Clone79, label %if.then6.fill_inbuf.Clone80, label %if.end7.fill_inbuf.Clone81

if.then6.fill_inbuf.Clone80:                      ; preds = %if.then5.fill_inbuf.Clone78
  store i32 -1, i32* %retval.fill_inbuf.Clone60, align 4
  br label %return.fill_inbuf.Clone85

if.end7.fill_inbuf.Clone81:                       ; preds = %if.then5.fill_inbuf.Clone78
  br label %entry.read_error.Clone308

entry.read_error.Clone308:                        ; preds = %if.end7.fill_inbuf.Clone81
  %193 = load i8*, i8** @progname, align 4
  %call.read_error.Clone309 = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone310 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone309, i32 2
  %call1.read_error.Clone311 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone310, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %193)
  %call2.read_error.Clone312 = call i32* @_errno()
  %194 = load i32, i32* %call2.read_error.Clone312, align 4
  %cmp.read_error.Clone313 = icmp ne i32 %194, 0
  br i1 %cmp.read_error.Clone313, label %if.then.read_error.Clone314, label %if.else.read_error.Clone315

if.then.read_error.Clone314:                      ; preds = %entry.read_error.Clone308
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone319

if.else.read_error.Clone315:                      ; preds = %entry.read_error.Clone308
  %call3.read_error.Clone316 = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone317 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone316, i32 2
  %call5.read_error.Clone318 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone317, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone319

if.end.read_error.Clone319:                       ; preds = %if.else.read_error.Clone315, %if.then.read_error.Clone314
  br label %entry.abort_gzip.Clone368

entry.abort_gzip.Clone368:                        ; preds = %if.end.read_error.Clone319
  %195 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone369 = icmp ne i32 %195, 0
  br i1 %tobool.abort_gzip.Clone369, label %if.then.abort_gzip.Clone370, label %if.end.abort_gzip.Clone373

if.then.abort_gzip.Clone370:                      ; preds = %entry.abort_gzip.Clone368
  %196 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone371 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %196)
  %call1.abort_gzip.Clone372 = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone373

if.end.abort_gzip.Clone373:                       ; preds = %if.then.abort_gzip.Clone370, %entry.abort_gzip.Clone368
  br label %entry.do_exit.Clone434

entry.do_exit.Clone434:                           ; preds = %if.end.abort_gzip.Clone373
  %exitcode.addr.do_exit.Clone435 = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone435, align 4
  %197 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone436 = icmp ne i32 %197, 0
  br i1 %tobool.do_exit.Clone436, label %if.then.do_exit.Clone437, label %if.end.do_exit.Clone438

if.then.do_exit.Clone437:                         ; preds = %entry.do_exit.Clone434
  %198 = load i32, i32* %exitcode.addr.do_exit.Clone435, align 4
  call void @exit(i32 %198) #7
  unreachable

if.end.do_exit.Clone438:                          ; preds = %entry.do_exit.Clone434
  store i32 1, i32* @do_exit.in_exit, align 4
  %199 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone439 = icmp ne i8* %199, null
  br i1 %cmp.do_exit.Clone439, label %if.then1.do_exit.Clone440, label %if.end2.do_exit.Clone441

if.then1.do_exit.Clone440:                        ; preds = %if.end.do_exit.Clone438
  %200 = load i8*, i8** @env, align 4
  call void @free(i8* %200) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone441

if.end2.do_exit.Clone441:                         ; preds = %if.then1.do_exit.Clone440, %if.end.do_exit.Clone438
  %201 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone442 = icmp ne i8** %201, null
  br i1 %cmp3.do_exit.Clone442, label %if.then4.do_exit.Clone443, label %if.end5.do_exit.Clone444

if.then4.do_exit.Clone443:                        ; preds = %if.end2.do_exit.Clone441
  %202 = load i8**, i8*** @args, align 4
  %203 = bitcast i8** %202 to i8*
  call void @free(i8* %203) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone444

if.end5.do_exit.Clone444:                         ; preds = %if.then4.do_exit.Clone443, %if.end2.do_exit.Clone441
  %204 = load i32, i32* %exitcode.addr.do_exit.Clone435, align 4
  call void @exit(i32 %204) #7
  unreachable

return.do_exit.Clone445:                          ; No predecessors!
  br label %if.end.abort_gzip.Clone373.Split

if.end.abort_gzip.Clone373.Split:                 ; preds = %return.do_exit.Clone445
  br label %if.end.read_error.Clone319.Split

if.end.read_error.Clone319.Split:                 ; preds = %if.end.abort_gzip.Clone373.Split
  br label %if.end7.fill_inbuf.Clone81.Split

if.end7.fill_inbuf.Clone81.Split:                 ; preds = %if.end.read_error.Clone319.Split
  br label %if.end8.fill_inbuf.Clone82

if.end8.fill_inbuf.Clone82:                       ; preds = %if.end7.fill_inbuf.Clone81.Split, %do.end.fill_inbuf.Clone76
  %205 = load i32, i32* @insize, align 4
  %206 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone83 = add i32 %206, %205
  store i32 %add9.fill_inbuf.Clone83, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %207 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone84 = zext i8 %207 to i32
  store i32 %conv.fill_inbuf.Clone84, i32* %retval.fill_inbuf.Clone60, align 4
  br label %return.fill_inbuf.Clone85

return.fill_inbuf.Clone85:                        ; preds = %if.end8.fill_inbuf.Clone82, %if.then6.fill_inbuf.Clone80
  %208 = load i32, i32* %retval.fill_inbuf.Clone60, align 4
  store i32 %208, i32* %RetValuePtr86
  br label %cond.false121.Split

cond.false121.Split:                              ; preds = %return.fill_inbuf.Clone85
  %RetValue87 = load i32, i32* %RetValuePtr86
  br label %cond.end123

cond.end123:                                      ; preds = %cond.false121.Split, %cond.true117
  %cond124 = phi i32 [ %conv120, %cond.true117 ], [ %RetValue87, %cond.false121.Split ]
  %conv125 = trunc i32 %cond124 to i8
  %conv126 = zext i8 %conv125 to i32
  %209 = load i32, i32* %k, align 4
  %shl127 = shl i32 %conv126, %209
  %210 = load i32, i32* %b, align 4
  %or128 = or i32 %210, %shl127
  store i32 %or128, i32* %b, align 4
  %211 = load i32, i32* %k, align 4
  %add129 = add i32 %211, 8
  store i32 %add129, i32* %k, align 4
  br label %while.cond111

while.end130:                                     ; preds = %while.cond111
  %212 = load %struct.huft*, %struct.huft** %tl, align 4
  %213 = load i32, i32* %b, align 4
  %214 = load i32, i32* %m, align 4
  %and131 = and i32 %213, %214
  %add.ptr = getelementptr inbounds %struct.huft, %struct.huft* %212, i32 %and131
  store %struct.huft* %add.ptr, %struct.huft** %td, align 4
  %b132 = getelementptr inbounds %struct.huft, %struct.huft* %add.ptr, i32 0, i32 1
  %215 = load i8, i8* %b132, align 1
  %conv133 = zext i8 %215 to i32
  store i32 %conv133, i32* %j, align 4
  %216 = load i32, i32* %j, align 4
  %217 = load i32, i32* %b, align 4
  %shr134 = lshr i32 %217, %216
  store i32 %shr134, i32* %b, align 4
  %218 = load i32, i32* %j, align 4
  %219 = load i32, i32* %k, align 4
  %sub135 = sub i32 %219, %218
  store i32 %sub135, i32* %k, align 4
  %220 = load %struct.huft*, %struct.huft** %td, align 4
  %v = getelementptr inbounds %struct.huft, %struct.huft* %220, i32 0, i32 2
  %n136 = bitcast %union.anon* %v to i16*
  %221 = load i16, i16* %n136, align 4
  %conv137 = zext i16 %221 to i32
  store i32 %conv137, i32* %j, align 4
  %222 = load i32, i32* %j, align 4
  %cmp138 = icmp ult i32 %222, 16
  br i1 %cmp138, label %if.then140, label %if.else

if.then140:                                       ; preds = %while.end130
  %223 = load i32, i32* %j, align 4
  store i32 %223, i32* %l, align 4
  %224 = load i32, i32* %i, align 4
  %inc141 = add nsw i32 %224, 1
  store i32 %inc141, i32* %i, align 4
  %arrayidx142 = getelementptr inbounds [316 x i32], [316 x i32]* %ll, i32 0, i32 %224
  store i32 %223, i32* %arrayidx142, align 4
  br label %if.end259

if.else:                                          ; preds = %while.end130
  %225 = load i32, i32* %j, align 4
  %cmp143 = icmp eq i32 %225, 16
  br i1 %cmp143, label %if.then145, label %if.else180

if.then145:                                       ; preds = %if.else
  br label %while.cond146

while.cond146:                                    ; preds = %cond.end158, %if.then145
  %226 = load i32, i32* %k, align 4
  %cmp147 = icmp ult i32 %226, 2
  br i1 %cmp147, label %while.body149, label %while.end165

while.body149:                                    ; preds = %while.cond146
  %227 = load i32, i32* @inptr, align 4
  %228 = load i32, i32* @insize, align 4
  %cmp150 = icmp ult i32 %227, %228
  br i1 %cmp150, label %cond.true152, label %cond.false156

cond.true152:                                     ; preds = %while.body149
  %229 = load i32, i32* @inptr, align 4
  %inc153 = add i32 %229, 1
  store i32 %inc153, i32* @inptr, align 4
  %arrayidx154 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i32 0, i32 %229
  %230 = load i8, i8* %arrayidx154, align 1
  %conv155 = zext i8 %230 to i32
  br label %cond.end158

cond.false156:                                    ; preds = %while.body149
  br label %entry.fill_inbuf.Clone30

entry.fill_inbuf.Clone30:                         ; preds = %cond.false156
  %retval.fill_inbuf.Clone31 = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone32 = alloca i32, align 4
  %len.fill_inbuf.Clone33 = alloca i32, align 4
  store i32 0, i32* %eof_ok.addr.fill_inbuf.Clone32, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone34 = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone34, align 4
  br label %do.body.fill_inbuf.Clone35

do.body.fill_inbuf.Clone35:                       ; preds = %do.cond.fill_inbuf.Clone45, %entry.fill_inbuf.Clone30
  %231 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone36 = sub i32 32768, %231
  %232 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone37 = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %232
  %233 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone38 = call i32 @spec_read(i32 %233, i8* %add.ptr.fill_inbuf.Clone37, i32 %sub.fill_inbuf.Clone36)
  store i32 %call1.fill_inbuf.Clone38, i32* %len.fill_inbuf.Clone33, align 4
  %234 = load i32, i32* %len.fill_inbuf.Clone33, align 4
  %cmp.fill_inbuf.Clone39 = icmp eq i32 %234, 0
  br i1 %cmp.fill_inbuf.Clone39, label %if.then.fill_inbuf.Clone42, label %lor.lhs.false.fill_inbuf.Clone40

lor.lhs.false.fill_inbuf.Clone40:                 ; preds = %do.body.fill_inbuf.Clone35
  %235 = load i32, i32* %len.fill_inbuf.Clone33, align 4
  %cmp2.fill_inbuf.Clone41 = icmp eq i32 %235, -1
  br i1 %cmp2.fill_inbuf.Clone41, label %if.then.fill_inbuf.Clone42, label %if.end.fill_inbuf.Clone43

if.then.fill_inbuf.Clone42:                       ; preds = %lor.lhs.false.fill_inbuf.Clone40, %do.body.fill_inbuf.Clone35
  br label %do.end.fill_inbuf.Clone47

if.end.fill_inbuf.Clone43:                        ; preds = %lor.lhs.false.fill_inbuf.Clone40
  %236 = load i32, i32* %len.fill_inbuf.Clone33, align 4
  %237 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone44 = add i32 %237, %236
  store i32 %add.fill_inbuf.Clone44, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone45

do.cond.fill_inbuf.Clone45:                       ; preds = %if.end.fill_inbuf.Clone43
  %238 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone46 = icmp ult i32 %238, 32768
  br i1 %cmp3.fill_inbuf.Clone46, label %do.body.fill_inbuf.Clone35, label %do.end.fill_inbuf.Clone47

do.end.fill_inbuf.Clone47:                        ; preds = %do.cond.fill_inbuf.Clone45, %if.then.fill_inbuf.Clone42
  %239 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone48 = icmp eq i32 %239, 0
  br i1 %cmp4.fill_inbuf.Clone48, label %if.then5.fill_inbuf.Clone49, label %if.end8.fill_inbuf.Clone53

if.then5.fill_inbuf.Clone49:                      ; preds = %do.end.fill_inbuf.Clone47
  %240 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone32, align 4
  %tobool.fill_inbuf.Clone50 = icmp ne i32 %240, 0
  br i1 %tobool.fill_inbuf.Clone50, label %if.then6.fill_inbuf.Clone51, label %if.end7.fill_inbuf.Clone52

if.then6.fill_inbuf.Clone51:                      ; preds = %if.then5.fill_inbuf.Clone49
  store i32 -1, i32* %retval.fill_inbuf.Clone31, align 4
  br label %return.fill_inbuf.Clone56

if.end7.fill_inbuf.Clone52:                       ; preds = %if.then5.fill_inbuf.Clone49
  br label %entry.read_error.Clone320

entry.read_error.Clone320:                        ; preds = %if.end7.fill_inbuf.Clone52
  %241 = load i8*, i8** @progname, align 4
  %call.read_error.Clone321 = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone322 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone321, i32 2
  %call1.read_error.Clone323 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone322, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %241)
  %call2.read_error.Clone324 = call i32* @_errno()
  %242 = load i32, i32* %call2.read_error.Clone324, align 4
  %cmp.read_error.Clone325 = icmp ne i32 %242, 0
  br i1 %cmp.read_error.Clone325, label %if.then.read_error.Clone326, label %if.else.read_error.Clone327

if.then.read_error.Clone326:                      ; preds = %entry.read_error.Clone320
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone331

if.else.read_error.Clone327:                      ; preds = %entry.read_error.Clone320
  %call3.read_error.Clone328 = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone329 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone328, i32 2
  %call5.read_error.Clone330 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone329, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone331

if.end.read_error.Clone331:                       ; preds = %if.else.read_error.Clone327, %if.then.read_error.Clone326
  br label %entry.abort_gzip.Clone362

entry.abort_gzip.Clone362:                        ; preds = %if.end.read_error.Clone331
  %243 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone363 = icmp ne i32 %243, 0
  br i1 %tobool.abort_gzip.Clone363, label %if.then.abort_gzip.Clone364, label %if.end.abort_gzip.Clone367

if.then.abort_gzip.Clone364:                      ; preds = %entry.abort_gzip.Clone362
  %244 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone365 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %244)
  %call1.abort_gzip.Clone366 = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone367

if.end.abort_gzip.Clone367:                       ; preds = %if.then.abort_gzip.Clone364, %entry.abort_gzip.Clone362
  br label %entry.do_exit.Clone446

entry.do_exit.Clone446:                           ; preds = %if.end.abort_gzip.Clone367
  %exitcode.addr.do_exit.Clone447 = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone447, align 4
  %245 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone448 = icmp ne i32 %245, 0
  br i1 %tobool.do_exit.Clone448, label %if.then.do_exit.Clone449, label %if.end.do_exit.Clone450

if.then.do_exit.Clone449:                         ; preds = %entry.do_exit.Clone446
  %246 = load i32, i32* %exitcode.addr.do_exit.Clone447, align 4
  call void @exit(i32 %246) #7
  unreachable

if.end.do_exit.Clone450:                          ; preds = %entry.do_exit.Clone446
  store i32 1, i32* @do_exit.in_exit, align 4
  %247 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone451 = icmp ne i8* %247, null
  br i1 %cmp.do_exit.Clone451, label %if.then1.do_exit.Clone452, label %if.end2.do_exit.Clone453

if.then1.do_exit.Clone452:                        ; preds = %if.end.do_exit.Clone450
  %248 = load i8*, i8** @env, align 4
  call void @free(i8* %248) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone453

if.end2.do_exit.Clone453:                         ; preds = %if.then1.do_exit.Clone452, %if.end.do_exit.Clone450
  %249 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone454 = icmp ne i8** %249, null
  br i1 %cmp3.do_exit.Clone454, label %if.then4.do_exit.Clone455, label %if.end5.do_exit.Clone456

if.then4.do_exit.Clone455:                        ; preds = %if.end2.do_exit.Clone453
  %250 = load i8**, i8*** @args, align 4
  %251 = bitcast i8** %250 to i8*
  call void @free(i8* %251) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone456

if.end5.do_exit.Clone456:                         ; preds = %if.then4.do_exit.Clone455, %if.end2.do_exit.Clone453
  %252 = load i32, i32* %exitcode.addr.do_exit.Clone447, align 4
  call void @exit(i32 %252) #7
  unreachable

return.do_exit.Clone457:                          ; No predecessors!
  br label %if.end.abort_gzip.Clone367.Split

if.end.abort_gzip.Clone367.Split:                 ; preds = %return.do_exit.Clone457
  br label %if.end.read_error.Clone331.Split

if.end.read_error.Clone331.Split:                 ; preds = %if.end.abort_gzip.Clone367.Split
  br label %if.end7.fill_inbuf.Clone52.Split

if.end7.fill_inbuf.Clone52.Split:                 ; preds = %if.end.read_error.Clone331.Split
  br label %if.end8.fill_inbuf.Clone53

if.end8.fill_inbuf.Clone53:                       ; preds = %if.end7.fill_inbuf.Clone52.Split, %do.end.fill_inbuf.Clone47
  %253 = load i32, i32* @insize, align 4
  %254 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone54 = add i32 %254, %253
  store i32 %add9.fill_inbuf.Clone54, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %255 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone55 = zext i8 %255 to i32
  store i32 %conv.fill_inbuf.Clone55, i32* %retval.fill_inbuf.Clone31, align 4
  br label %return.fill_inbuf.Clone56

return.fill_inbuf.Clone56:                        ; preds = %if.end8.fill_inbuf.Clone53, %if.then6.fill_inbuf.Clone51
  %256 = load i32, i32* %retval.fill_inbuf.Clone31, align 4
  store i32 %256, i32* %RetValuePtr57
  br label %cond.false156.Split

cond.false156.Split:                              ; preds = %return.fill_inbuf.Clone56
  %RetValue58 = load i32, i32* %RetValuePtr57
  br label %cond.end158

cond.end158:                                      ; preds = %cond.false156.Split, %cond.true152
  %cond159 = phi i32 [ %conv155, %cond.true152 ], [ %RetValue58, %cond.false156.Split ]
  %conv160 = trunc i32 %cond159 to i8
  %conv161 = zext i8 %conv160 to i32
  %257 = load i32, i32* %k, align 4
  %shl162 = shl i32 %conv161, %257
  %258 = load i32, i32* %b, align 4
  %or163 = or i32 %258, %shl162
  store i32 %or163, i32* %b, align 4
  %259 = load i32, i32* %k, align 4
  %add164 = add i32 %259, 8
  store i32 %add164, i32* %k, align 4
  br label %while.cond146

while.end165:                                     ; preds = %while.cond146
  %260 = load i32, i32* %b, align 4
  %and166 = and i32 %260, 3
  %add167 = add i32 3, %and166
  store i32 %add167, i32* %j, align 4
  %261 = load i32, i32* %b, align 4
  %shr168 = lshr i32 %261, 2
  store i32 %shr168, i32* %b, align 4
  %262 = load i32, i32* %k, align 4
  %sub169 = sub i32 %262, 2
  store i32 %sub169, i32* %k, align 4
  %263 = load i32, i32* %i, align 4
  %264 = load i32, i32* %j, align 4
  %add170 = add i32 %263, %264
  %265 = load i32, i32* %n, align 4
  %cmp171 = icmp ugt i32 %add170, %265
  br i1 %cmp171, label %if.then173, label %if.end174

if.then173:                                       ; preds = %while.end165
  store i32 1, i32* %retval, align 4
  br label %return

if.end174:                                        ; preds = %while.end165
  br label %while.cond175

while.cond175:                                    ; preds = %while.body176, %if.end174
  %266 = load i32, i32* %j, align 4
  %dec = add i32 %266, -1
  store i32 %dec, i32* %j, align 4
  %tobool = icmp ne i32 %266, 0
  br i1 %tobool, label %while.body176, label %while.end179

while.body176:                                    ; preds = %while.cond175
  %267 = load i32, i32* %l, align 4
  %268 = load i32, i32* %i, align 4
  %inc177 = add nsw i32 %268, 1
  store i32 %inc177, i32* %i, align 4
  %arrayidx178 = getelementptr inbounds [316 x i32], [316 x i32]* %ll, i32 0, i32 %268
  store i32 %267, i32* %arrayidx178, align 4
  br label %while.cond175

while.end179:                                     ; preds = %while.cond175
  br label %if.end258

if.else180:                                       ; preds = %if.else
  %269 = load i32, i32* %j, align 4
  %cmp181 = icmp eq i32 %269, 17
  br i1 %cmp181, label %if.then183, label %if.else220

if.then183:                                       ; preds = %if.else180
  br label %while.cond184

while.cond184:                                    ; preds = %cond.end196, %if.then183
  %270 = load i32, i32* %k, align 4
  %cmp185 = icmp ult i32 %270, 3
  br i1 %cmp185, label %while.body187, label %while.end203

while.body187:                                    ; preds = %while.cond184
  %271 = load i32, i32* @inptr, align 4
  %272 = load i32, i32* @insize, align 4
  %cmp188 = icmp ult i32 %271, %272
  br i1 %cmp188, label %cond.true190, label %cond.false194

cond.true190:                                     ; preds = %while.body187
  %273 = load i32, i32* @inptr, align 4
  %inc191 = add i32 %273, 1
  store i32 %inc191, i32* @inptr, align 4
  %arrayidx192 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i32 0, i32 %273
  %274 = load i8, i8* %arrayidx192, align 1
  %conv193 = zext i8 %274 to i32
  br label %cond.end196

cond.false194:                                    ; preds = %while.body187
  br label %entry.fill_inbuf.Clone1

entry.fill_inbuf.Clone1:                          ; preds = %cond.false194
  %retval.fill_inbuf.Clone2 = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone3 = alloca i32, align 4
  %len.fill_inbuf.Clone4 = alloca i32, align 4
  store i32 0, i32* %eof_ok.addr.fill_inbuf.Clone3, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone5 = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone5, align 4
  br label %do.body.fill_inbuf.Clone6

do.body.fill_inbuf.Clone6:                        ; preds = %do.cond.fill_inbuf.Clone16, %entry.fill_inbuf.Clone1
  %275 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone7 = sub i32 32768, %275
  %276 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone8 = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %276
  %277 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone9 = call i32 @spec_read(i32 %277, i8* %add.ptr.fill_inbuf.Clone8, i32 %sub.fill_inbuf.Clone7)
  store i32 %call1.fill_inbuf.Clone9, i32* %len.fill_inbuf.Clone4, align 4
  %278 = load i32, i32* %len.fill_inbuf.Clone4, align 4
  %cmp.fill_inbuf.Clone10 = icmp eq i32 %278, 0
  br i1 %cmp.fill_inbuf.Clone10, label %if.then.fill_inbuf.Clone13, label %lor.lhs.false.fill_inbuf.Clone11

lor.lhs.false.fill_inbuf.Clone11:                 ; preds = %do.body.fill_inbuf.Clone6
  %279 = load i32, i32* %len.fill_inbuf.Clone4, align 4
  %cmp2.fill_inbuf.Clone12 = icmp eq i32 %279, -1
  br i1 %cmp2.fill_inbuf.Clone12, label %if.then.fill_inbuf.Clone13, label %if.end.fill_inbuf.Clone14

if.then.fill_inbuf.Clone13:                       ; preds = %lor.lhs.false.fill_inbuf.Clone11, %do.body.fill_inbuf.Clone6
  br label %do.end.fill_inbuf.Clone18

if.end.fill_inbuf.Clone14:                        ; preds = %lor.lhs.false.fill_inbuf.Clone11
  %280 = load i32, i32* %len.fill_inbuf.Clone4, align 4
  %281 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone15 = add i32 %281, %280
  store i32 %add.fill_inbuf.Clone15, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone16

do.cond.fill_inbuf.Clone16:                       ; preds = %if.end.fill_inbuf.Clone14
  %282 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone17 = icmp ult i32 %282, 32768
  br i1 %cmp3.fill_inbuf.Clone17, label %do.body.fill_inbuf.Clone6, label %do.end.fill_inbuf.Clone18

do.end.fill_inbuf.Clone18:                        ; preds = %do.cond.fill_inbuf.Clone16, %if.then.fill_inbuf.Clone13
  %283 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone19 = icmp eq i32 %283, 0
  br i1 %cmp4.fill_inbuf.Clone19, label %if.then5.fill_inbuf.Clone20, label %if.end8.fill_inbuf.Clone24

if.then5.fill_inbuf.Clone20:                      ; preds = %do.end.fill_inbuf.Clone18
  %284 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone3, align 4
  %tobool.fill_inbuf.Clone21 = icmp ne i32 %284, 0
  br i1 %tobool.fill_inbuf.Clone21, label %if.then6.fill_inbuf.Clone22, label %if.end7.fill_inbuf.Clone23

if.then6.fill_inbuf.Clone22:                      ; preds = %if.then5.fill_inbuf.Clone20
  store i32 -1, i32* %retval.fill_inbuf.Clone2, align 4
  br label %return.fill_inbuf.Clone27

if.end7.fill_inbuf.Clone23:                       ; preds = %if.then5.fill_inbuf.Clone20
  br label %entry.read_error.Clone332

entry.read_error.Clone332:                        ; preds = %if.end7.fill_inbuf.Clone23
  %285 = load i8*, i8** @progname, align 4
  %call.read_error.Clone333 = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone334 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone333, i32 2
  %call1.read_error.Clone335 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone334, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %285)
  %call2.read_error.Clone336 = call i32* @_errno()
  %286 = load i32, i32* %call2.read_error.Clone336, align 4
  %cmp.read_error.Clone337 = icmp ne i32 %286, 0
  br i1 %cmp.read_error.Clone337, label %if.then.read_error.Clone338, label %if.else.read_error.Clone339

if.then.read_error.Clone338:                      ; preds = %entry.read_error.Clone332
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone343

if.else.read_error.Clone339:                      ; preds = %entry.read_error.Clone332
  %call3.read_error.Clone340 = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone341 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone340, i32 2
  %call5.read_error.Clone342 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone341, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone343

if.end.read_error.Clone343:                       ; preds = %if.else.read_error.Clone339, %if.then.read_error.Clone338
  br label %entry.abort_gzip.Clone356

entry.abort_gzip.Clone356:                        ; preds = %if.end.read_error.Clone343
  %287 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone357 = icmp ne i32 %287, 0
  br i1 %tobool.abort_gzip.Clone357, label %if.then.abort_gzip.Clone358, label %if.end.abort_gzip.Clone361

if.then.abort_gzip.Clone358:                      ; preds = %entry.abort_gzip.Clone356
  %288 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone359 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %288)
  %call1.abort_gzip.Clone360 = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone361

if.end.abort_gzip.Clone361:                       ; preds = %if.then.abort_gzip.Clone358, %entry.abort_gzip.Clone356
  br label %entry.do_exit.Clone458

entry.do_exit.Clone458:                           ; preds = %if.end.abort_gzip.Clone361
  %exitcode.addr.do_exit.Clone459 = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone459, align 4
  %289 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone460 = icmp ne i32 %289, 0
  br i1 %tobool.do_exit.Clone460, label %if.then.do_exit.Clone461, label %if.end.do_exit.Clone462

if.then.do_exit.Clone461:                         ; preds = %entry.do_exit.Clone458
  %290 = load i32, i32* %exitcode.addr.do_exit.Clone459, align 4
  call void @exit(i32 %290) #7
  unreachable

if.end.do_exit.Clone462:                          ; preds = %entry.do_exit.Clone458
  store i32 1, i32* @do_exit.in_exit, align 4
  %291 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone463 = icmp ne i8* %291, null
  br i1 %cmp.do_exit.Clone463, label %if.then1.do_exit.Clone464, label %if.end2.do_exit.Clone465

if.then1.do_exit.Clone464:                        ; preds = %if.end.do_exit.Clone462
  %292 = load i8*, i8** @env, align 4
  call void @free(i8* %292) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone465

if.end2.do_exit.Clone465:                         ; preds = %if.then1.do_exit.Clone464, %if.end.do_exit.Clone462
  %293 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone466 = icmp ne i8** %293, null
  br i1 %cmp3.do_exit.Clone466, label %if.then4.do_exit.Clone467, label %if.end5.do_exit.Clone468

if.then4.do_exit.Clone467:                        ; preds = %if.end2.do_exit.Clone465
  %294 = load i8**, i8*** @args, align 4
  %295 = bitcast i8** %294 to i8*
  call void @free(i8* %295) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone468

if.end5.do_exit.Clone468:                         ; preds = %if.then4.do_exit.Clone467, %if.end2.do_exit.Clone465
  %296 = load i32, i32* %exitcode.addr.do_exit.Clone459, align 4
  call void @exit(i32 %296) #7
  unreachable

return.do_exit.Clone469:                          ; No predecessors!
  br label %if.end.abort_gzip.Clone361.Split

if.end.abort_gzip.Clone361.Split:                 ; preds = %return.do_exit.Clone469
  br label %if.end.read_error.Clone343.Split

if.end.read_error.Clone343.Split:                 ; preds = %if.end.abort_gzip.Clone361.Split
  br label %if.end7.fill_inbuf.Clone23.Split

if.end7.fill_inbuf.Clone23.Split:                 ; preds = %if.end.read_error.Clone343.Split
  br label %if.end8.fill_inbuf.Clone24

if.end8.fill_inbuf.Clone24:                       ; preds = %if.end7.fill_inbuf.Clone23.Split, %do.end.fill_inbuf.Clone18
  %297 = load i32, i32* @insize, align 4
  %298 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone25 = add i32 %298, %297
  store i32 %add9.fill_inbuf.Clone25, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %299 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone26 = zext i8 %299 to i32
  store i32 %conv.fill_inbuf.Clone26, i32* %retval.fill_inbuf.Clone2, align 4
  br label %return.fill_inbuf.Clone27

return.fill_inbuf.Clone27:                        ; preds = %if.end8.fill_inbuf.Clone24, %if.then6.fill_inbuf.Clone22
  %300 = load i32, i32* %retval.fill_inbuf.Clone2, align 4
  store i32 %300, i32* %RetValuePtr28
  br label %cond.false194.Split

cond.false194.Split:                              ; preds = %return.fill_inbuf.Clone27
  %RetValue29 = load i32, i32* %RetValuePtr28
  br label %cond.end196

cond.end196:                                      ; preds = %cond.false194.Split, %cond.true190
  %cond197 = phi i32 [ %conv193, %cond.true190 ], [ %RetValue29, %cond.false194.Split ]
  %conv198 = trunc i32 %cond197 to i8
  %conv199 = zext i8 %conv198 to i32
  %301 = load i32, i32* %k, align 4
  %shl200 = shl i32 %conv199, %301
  %302 = load i32, i32* %b, align 4
  %or201 = or i32 %302, %shl200
  store i32 %or201, i32* %b, align 4
  %303 = load i32, i32* %k, align 4
  %add202 = add i32 %303, 8
  store i32 %add202, i32* %k, align 4
  br label %while.cond184

while.end203:                                     ; preds = %while.cond184
  %304 = load i32, i32* %b, align 4
  %and204 = and i32 %304, 7
  %add205 = add i32 3, %and204
  store i32 %add205, i32* %j, align 4
  %305 = load i32, i32* %b, align 4
  %shr206 = lshr i32 %305, 3
  store i32 %shr206, i32* %b, align 4
  %306 = load i32, i32* %k, align 4
  %sub207 = sub i32 %306, 3
  store i32 %sub207, i32* %k, align 4
  %307 = load i32, i32* %i, align 4
  %308 = load i32, i32* %j, align 4
  %add208 = add i32 %307, %308
  %309 = load i32, i32* %n, align 4
  %cmp209 = icmp ugt i32 %add208, %309
  br i1 %cmp209, label %if.then211, label %if.end212

if.then211:                                       ; preds = %while.end203
  store i32 1, i32* %retval, align 4
  br label %return

if.end212:                                        ; preds = %while.end203
  br label %while.cond213

while.cond213:                                    ; preds = %while.body216, %if.end212
  %310 = load i32, i32* %j, align 4
  %dec214 = add i32 %310, -1
  store i32 %dec214, i32* %j, align 4
  %tobool215 = icmp ne i32 %310, 0
  br i1 %tobool215, label %while.body216, label %while.end219

while.body216:                                    ; preds = %while.cond213
  %311 = load i32, i32* %i, align 4
  %inc217 = add nsw i32 %311, 1
  store i32 %inc217, i32* %i, align 4
  %arrayidx218 = getelementptr inbounds [316 x i32], [316 x i32]* %ll, i32 0, i32 %311
  store i32 0, i32* %arrayidx218, align 4
  br label %while.cond213

while.end219:                                     ; preds = %while.cond213
  store i32 0, i32* %l, align 4
  br label %if.end257

if.else220:                                       ; preds = %if.else180
  br label %while.cond221

while.cond221:                                    ; preds = %cond.end233, %if.else220
  %312 = load i32, i32* %k, align 4
  %cmp222 = icmp ult i32 %312, 7
  br i1 %cmp222, label %while.body224, label %while.end240

while.body224:                                    ; preds = %while.cond221
  %313 = load i32, i32* @inptr, align 4
  %314 = load i32, i32* @insize, align 4
  %cmp225 = icmp ult i32 %313, %314
  br i1 %cmp225, label %cond.true227, label %cond.false231

cond.true227:                                     ; preds = %while.body224
  %315 = load i32, i32* @inptr, align 4
  %inc228 = add i32 %315, 1
  store i32 %inc228, i32* @inptr, align 4
  %arrayidx229 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i32 0, i32 %315
  %316 = load i8, i8* %arrayidx229, align 1
  %conv230 = zext i8 %316 to i32
  br label %cond.end233

cond.false231:                                    ; preds = %while.body224
  br label %entry.fill_inbuf.Clone

entry.fill_inbuf.Clone:                           ; preds = %cond.false231
  %retval.fill_inbuf.Clone = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone = alloca i32, align 4
  %len.fill_inbuf.Clone = alloca i32, align 4
  store i32 0, i32* %eof_ok.addr.fill_inbuf.Clone, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone, align 4
  br label %do.body.fill_inbuf.Clone

do.body.fill_inbuf.Clone:                         ; preds = %do.cond.fill_inbuf.Clone, %entry.fill_inbuf.Clone
  %317 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone = sub i32 32768, %317
  %318 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %318
  %319 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone = call i32 @spec_read(i32 %319, i8* %add.ptr.fill_inbuf.Clone, i32 %sub.fill_inbuf.Clone)
  store i32 %call1.fill_inbuf.Clone, i32* %len.fill_inbuf.Clone, align 4
  %320 = load i32, i32* %len.fill_inbuf.Clone, align 4
  %cmp.fill_inbuf.Clone = icmp eq i32 %320, 0
  br i1 %cmp.fill_inbuf.Clone, label %if.then.fill_inbuf.Clone, label %lor.lhs.false.fill_inbuf.Clone

lor.lhs.false.fill_inbuf.Clone:                   ; preds = %do.body.fill_inbuf.Clone
  %321 = load i32, i32* %len.fill_inbuf.Clone, align 4
  %cmp2.fill_inbuf.Clone = icmp eq i32 %321, -1
  br i1 %cmp2.fill_inbuf.Clone, label %if.then.fill_inbuf.Clone, label %if.end.fill_inbuf.Clone

if.then.fill_inbuf.Clone:                         ; preds = %lor.lhs.false.fill_inbuf.Clone, %do.body.fill_inbuf.Clone
  br label %do.end.fill_inbuf.Clone

if.end.fill_inbuf.Clone:                          ; preds = %lor.lhs.false.fill_inbuf.Clone
  %322 = load i32, i32* %len.fill_inbuf.Clone, align 4
  %323 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone = add i32 %323, %322
  store i32 %add.fill_inbuf.Clone, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone

do.cond.fill_inbuf.Clone:                         ; preds = %if.end.fill_inbuf.Clone
  %324 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone = icmp ult i32 %324, 32768
  br i1 %cmp3.fill_inbuf.Clone, label %do.body.fill_inbuf.Clone, label %do.end.fill_inbuf.Clone

do.end.fill_inbuf.Clone:                          ; preds = %do.cond.fill_inbuf.Clone, %if.then.fill_inbuf.Clone
  %325 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone = icmp eq i32 %325, 0
  br i1 %cmp4.fill_inbuf.Clone, label %if.then5.fill_inbuf.Clone, label %if.end8.fill_inbuf.Clone

if.then5.fill_inbuf.Clone:                        ; preds = %do.end.fill_inbuf.Clone
  %326 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone, align 4
  %tobool.fill_inbuf.Clone = icmp ne i32 %326, 0
  br i1 %tobool.fill_inbuf.Clone, label %if.then6.fill_inbuf.Clone, label %if.end7.fill_inbuf.Clone

if.then6.fill_inbuf.Clone:                        ; preds = %if.then5.fill_inbuf.Clone
  store i32 -1, i32* %retval.fill_inbuf.Clone, align 4
  br label %return.fill_inbuf.Clone

if.end7.fill_inbuf.Clone:                         ; preds = %if.then5.fill_inbuf.Clone
  br label %entry.read_error.Clone344

entry.read_error.Clone344:                        ; preds = %if.end7.fill_inbuf.Clone
  %327 = load i8*, i8** @progname, align 4
  %call.read_error.Clone345 = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone346 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone345, i32 2
  %call1.read_error.Clone347 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone346, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %327)
  %call2.read_error.Clone348 = call i32* @_errno()
  %328 = load i32, i32* %call2.read_error.Clone348, align 4
  %cmp.read_error.Clone349 = icmp ne i32 %328, 0
  br i1 %cmp.read_error.Clone349, label %if.then.read_error.Clone350, label %if.else.read_error.Clone351

if.then.read_error.Clone350:                      ; preds = %entry.read_error.Clone344
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone355

if.else.read_error.Clone351:                      ; preds = %entry.read_error.Clone344
  %call3.read_error.Clone352 = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone353 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone352, i32 2
  %call5.read_error.Clone354 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone353, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone355

if.end.read_error.Clone355:                       ; preds = %if.else.read_error.Clone351, %if.then.read_error.Clone350
  br label %entry.abort_gzip.Clone

entry.abort_gzip.Clone:                           ; preds = %if.end.read_error.Clone355
  %329 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone = icmp ne i32 %329, 0
  br i1 %tobool.abort_gzip.Clone, label %if.then.abort_gzip.Clone, label %if.end.abort_gzip.Clone

if.then.abort_gzip.Clone:                         ; preds = %entry.abort_gzip.Clone
  %330 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %330)
  %call1.abort_gzip.Clone = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone

if.end.abort_gzip.Clone:                          ; preds = %if.then.abort_gzip.Clone, %entry.abort_gzip.Clone
  br label %entry.do_exit.Clone470

entry.do_exit.Clone470:                           ; preds = %if.end.abort_gzip.Clone
  %exitcode.addr.do_exit.Clone471 = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone471, align 4
  %331 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone472 = icmp ne i32 %331, 0
  br i1 %tobool.do_exit.Clone472, label %if.then.do_exit.Clone473, label %if.end.do_exit.Clone474

if.then.do_exit.Clone473:                         ; preds = %entry.do_exit.Clone470
  %332 = load i32, i32* %exitcode.addr.do_exit.Clone471, align 4
  call void @exit(i32 %332) #7
  unreachable

if.end.do_exit.Clone474:                          ; preds = %entry.do_exit.Clone470
  store i32 1, i32* @do_exit.in_exit, align 4
  %333 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone475 = icmp ne i8* %333, null
  br i1 %cmp.do_exit.Clone475, label %if.then1.do_exit.Clone476, label %if.end2.do_exit.Clone477

if.then1.do_exit.Clone476:                        ; preds = %if.end.do_exit.Clone474
  %334 = load i8*, i8** @env, align 4
  call void @free(i8* %334) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone477

if.end2.do_exit.Clone477:                         ; preds = %if.then1.do_exit.Clone476, %if.end.do_exit.Clone474
  %335 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone478 = icmp ne i8** %335, null
  br i1 %cmp3.do_exit.Clone478, label %if.then4.do_exit.Clone479, label %if.end5.do_exit.Clone480

if.then4.do_exit.Clone479:                        ; preds = %if.end2.do_exit.Clone477
  %336 = load i8**, i8*** @args, align 4
  %337 = bitcast i8** %336 to i8*
  call void @free(i8* %337) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone480

if.end5.do_exit.Clone480:                         ; preds = %if.then4.do_exit.Clone479, %if.end2.do_exit.Clone477
  %338 = load i32, i32* %exitcode.addr.do_exit.Clone471, align 4
  call void @exit(i32 %338) #7
  unreachable

return.do_exit.Clone481:                          ; No predecessors!
  br label %if.end.abort_gzip.Clone.Split

if.end.abort_gzip.Clone.Split:                    ; preds = %return.do_exit.Clone481
  br label %if.end.read_error.Clone355.Split

if.end.read_error.Clone355.Split:                 ; preds = %if.end.abort_gzip.Clone.Split
  br label %if.end7.fill_inbuf.Clone.Split

if.end7.fill_inbuf.Clone.Split:                   ; preds = %if.end.read_error.Clone355.Split
  br label %if.end8.fill_inbuf.Clone

if.end8.fill_inbuf.Clone:                         ; preds = %if.end7.fill_inbuf.Clone.Split, %do.end.fill_inbuf.Clone
  %339 = load i32, i32* @insize, align 4
  %340 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone = add i32 %340, %339
  store i32 %add9.fill_inbuf.Clone, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %341 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone = zext i8 %341 to i32
  store i32 %conv.fill_inbuf.Clone, i32* %retval.fill_inbuf.Clone, align 4
  br label %return.fill_inbuf.Clone

return.fill_inbuf.Clone:                          ; preds = %if.end8.fill_inbuf.Clone, %if.then6.fill_inbuf.Clone
  %342 = load i32, i32* %retval.fill_inbuf.Clone, align 4
  store i32 %342, i32* %RetValuePtr
  br label %cond.false231.Split

cond.false231.Split:                              ; preds = %return.fill_inbuf.Clone
  %RetValue = load i32, i32* %RetValuePtr
  br label %cond.end233

cond.end233:                                      ; preds = %cond.false231.Split, %cond.true227
  %cond234 = phi i32 [ %conv230, %cond.true227 ], [ %RetValue, %cond.false231.Split ]
  %conv235 = trunc i32 %cond234 to i8
  %conv236 = zext i8 %conv235 to i32
  %343 = load i32, i32* %k, align 4
  %shl237 = shl i32 %conv236, %343
  %344 = load i32, i32* %b, align 4
  %or238 = or i32 %344, %shl237
  store i32 %or238, i32* %b, align 4
  %345 = load i32, i32* %k, align 4
  %add239 = add i32 %345, 8
  store i32 %add239, i32* %k, align 4
  br label %while.cond221

while.end240:                                     ; preds = %while.cond221
  %346 = load i32, i32* %b, align 4
  %and241 = and i32 %346, 127
  %add242 = add i32 11, %and241
  store i32 %add242, i32* %j, align 4
  %347 = load i32, i32* %b, align 4
  %shr243 = lshr i32 %347, 7
  store i32 %shr243, i32* %b, align 4
  %348 = load i32, i32* %k, align 4
  %sub244 = sub i32 %348, 7
  store i32 %sub244, i32* %k, align 4
  %349 = load i32, i32* %i, align 4
  %350 = load i32, i32* %j, align 4
  %add245 = add i32 %349, %350
  %351 = load i32, i32* %n, align 4
  %cmp246 = icmp ugt i32 %add245, %351
  br i1 %cmp246, label %if.then248, label %if.end249

if.then248:                                       ; preds = %while.end240
  store i32 1, i32* %retval, align 4
  br label %return

if.end249:                                        ; preds = %while.end240
  br label %while.cond250

while.cond250:                                    ; preds = %while.body253, %if.end249
  %352 = load i32, i32* %j, align 4
  %dec251 = add i32 %352, -1
  store i32 %dec251, i32* %j, align 4
  %tobool252 = icmp ne i32 %352, 0
  br i1 %tobool252, label %while.body253, label %while.end256

while.body253:                                    ; preds = %while.cond250
  %353 = load i32, i32* %i, align 4
  %inc254 = add nsw i32 %353, 1
  store i32 %inc254, i32* %i, align 4
  %arrayidx255 = getelementptr inbounds [316 x i32], [316 x i32]* %ll, i32 0, i32 %353
  store i32 0, i32* %arrayidx255, align 4
  br label %while.cond250

while.end256:                                     ; preds = %while.cond250
  store i32 0, i32* %l, align 4
  br label %if.end257

if.end257:                                        ; preds = %while.end256, %while.end219
  br label %if.end258

if.end258:                                        ; preds = %if.end257, %while.end179
  br label %if.end259

if.end259:                                        ; preds = %if.end258, %if.then140
  br label %while.cond107

while.end260:                                     ; preds = %while.cond107
  %354 = load %struct.huft*, %struct.huft** %tl, align 4
  br label %entry.huft_free.Clone246

entry.huft_free.Clone246:                         ; preds = %while.end260
  %t.addr.huft_free.Clone247 = alloca %struct.huft*, align 4
  %p.huft_free.Clone248 = alloca %struct.huft*, align 4
  %q.huft_free.Clone249 = alloca %struct.huft*, align 4
  store %struct.huft* %354, %struct.huft** %t.addr.huft_free.Clone247, align 4
  %355 = load %struct.huft*, %struct.huft** %t.addr.huft_free.Clone247, align 4
  store %struct.huft* %355, %struct.huft** %p.huft_free.Clone248, align 4
  br label %while.cond.huft_free.Clone250

while.cond.huft_free.Clone250:                    ; preds = %while.body.huft_free.Clone252, %entry.huft_free.Clone246
  %356 = load %struct.huft*, %struct.huft** %p.huft_free.Clone248, align 4
  %cmp.huft_free.Clone251 = icmp ne %struct.huft* %356, null
  br i1 %cmp.huft_free.Clone251, label %while.body.huft_free.Clone252, label %while.end.huft_free.Clone256

while.body.huft_free.Clone252:                    ; preds = %while.cond.huft_free.Clone250
  %357 = load %struct.huft*, %struct.huft** %p.huft_free.Clone248, align 4
  %incdec.ptr.huft_free.Clone253 = getelementptr inbounds %struct.huft, %struct.huft* %357, i32 -1
  store %struct.huft* %incdec.ptr.huft_free.Clone253, %struct.huft** %p.huft_free.Clone248, align 4
  %v.huft_free.Clone254 = getelementptr inbounds %struct.huft, %struct.huft* %incdec.ptr.huft_free.Clone253, i32 0, i32 2
  %t1.huft_free.Clone255 = bitcast %union.anon* %v.huft_free.Clone254 to %struct.huft**
  %358 = load %struct.huft*, %struct.huft** %t1.huft_free.Clone255, align 4
  store %struct.huft* %358, %struct.huft** %q.huft_free.Clone249, align 4
  %359 = load %struct.huft*, %struct.huft** %p.huft_free.Clone248, align 4
  %360 = bitcast %struct.huft* %359 to i8*
  call void @free(i8* %360) #2
  %361 = load %struct.huft*, %struct.huft** %q.huft_free.Clone249, align 4
  store %struct.huft* %361, %struct.huft** %p.huft_free.Clone248, align 4
  br label %while.cond.huft_free.Clone250

while.end.huft_free.Clone256:                     ; preds = %while.cond.huft_free.Clone250
  store i32 0, i32* %RetValuePtr257
  br label %while.end260.Split

while.end260.Split:                               ; preds = %while.end.huft_free.Clone256
  %RetValue258 = load i32, i32* %RetValuePtr257
  %362 = load i32, i32* %b, align 4
  store i32 %362, i32* @bb, align 4
  %363 = load i32, i32* %k, align 4
  store i32 %363, i32* @bk, align 4
  %364 = load i32, i32* @lbits, align 4
  store i32 %364, i32* %bl, align 4
  %365 = load i32, i32* %nl, align 4
  %arraydecay262 = getelementptr inbounds [316 x i32], [316 x i32]* %ll, i32 0, i32 0
  %call263 = call i32 @huft_build(i32* %arraydecay262, i32 %365, i32 257, i16* getelementptr inbounds ([31 x i16], [31 x i16]* @cplens, i32 0, i32 0), i16* getelementptr inbounds ([31 x i16], [31 x i16]* @cplext, i32 0, i32 0), %struct.huft** %tl, i32* %bl)
  store i32 %call263, i32* %i, align 4
  %cmp264 = icmp ne i32 %call263, 0
  br i1 %cmp264, label %CallOutFuncBB, label %if.end275

CallOutFuncBB:                                    ; preds = %while.end260.Split
  call void @if.then266.OutLineFunc(i32* %i, %struct.huft** %tl, i32* %retval)
  %366 = getelementptr inbounds %Struct.RetValue.13, %Struct.RetValue.13* @Struct.RetValue.15, i32 0, i32 0
  %367 = load i32*, i32** %366, align 4
  %368 = load i32, i32* %367, align 4
  store i32 %368, i32* %retval
  br label %return

if.end275:                                        ; preds = %while.end260.Split
  %369 = load i32, i32* @dbits, align 4
  store i32 %369, i32* %bd, align 4
  %370 = load i32, i32* %nd, align 4
  %arraydecay276 = getelementptr inbounds [316 x i32], [316 x i32]* %ll, i32 0, i32 0
  %371 = load i32, i32* %nl, align 4
  %add.ptr277 = getelementptr inbounds i32, i32* %arraydecay276, i32 %371
  %call278 = call i32 @huft_build(i32* %add.ptr277, i32 %370, i32 0, i16* getelementptr inbounds ([30 x i16], [30 x i16]* @cpdist, i32 0, i32 0), i16* getelementptr inbounds ([30 x i16], [30 x i16]* @cpdext, i32 0, i32 0), %struct.huft** %td, i32* %bd)
  store i32 %call278, i32* %i, align 4
  %cmp279 = icmp ne i32 %call278, 0
  br i1 %cmp279, label %if.then281, label %if.end291

if.then281:                                       ; preds = %if.end275
  %372 = load i32, i32* %i, align 4
  %cmp282 = icmp eq i32 %372, 1
  br i1 %cmp282, label %if.then284, label %if.end289

if.then284:                                       ; preds = %if.then281
  %call285 = call %struct._iobuf* @__iob_func()
  %arrayidx286 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call285, i32 2
  %call287 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx286, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @"??_C@_0BL@HDNEBKFF@?5incomplete?5distance?5tree?6?$AA@", i32 0, i32 0))
  %373 = load %struct.huft*, %struct.huft** %td, align 4
  br label %entry.huft_free.Clone233

entry.huft_free.Clone233:                         ; preds = %if.then284
  %t.addr.huft_free.Clone234 = alloca %struct.huft*, align 4
  %p.huft_free.Clone235 = alloca %struct.huft*, align 4
  %q.huft_free.Clone236 = alloca %struct.huft*, align 4
  store %struct.huft* %373, %struct.huft** %t.addr.huft_free.Clone234, align 4
  %374 = load %struct.huft*, %struct.huft** %t.addr.huft_free.Clone234, align 4
  store %struct.huft* %374, %struct.huft** %p.huft_free.Clone235, align 4
  br label %while.cond.huft_free.Clone237

while.cond.huft_free.Clone237:                    ; preds = %while.body.huft_free.Clone239, %entry.huft_free.Clone233
  %375 = load %struct.huft*, %struct.huft** %p.huft_free.Clone235, align 4
  %cmp.huft_free.Clone238 = icmp ne %struct.huft* %375, null
  br i1 %cmp.huft_free.Clone238, label %while.body.huft_free.Clone239, label %while.end.huft_free.Clone243

while.body.huft_free.Clone239:                    ; preds = %while.cond.huft_free.Clone237
  %376 = load %struct.huft*, %struct.huft** %p.huft_free.Clone235, align 4
  %incdec.ptr.huft_free.Clone240 = getelementptr inbounds %struct.huft, %struct.huft* %376, i32 -1
  store %struct.huft* %incdec.ptr.huft_free.Clone240, %struct.huft** %p.huft_free.Clone235, align 4
  %v.huft_free.Clone241 = getelementptr inbounds %struct.huft, %struct.huft* %incdec.ptr.huft_free.Clone240, i32 0, i32 2
  %t1.huft_free.Clone242 = bitcast %union.anon* %v.huft_free.Clone241 to %struct.huft**
  %377 = load %struct.huft*, %struct.huft** %t1.huft_free.Clone242, align 4
  store %struct.huft* %377, %struct.huft** %q.huft_free.Clone236, align 4
  %378 = load %struct.huft*, %struct.huft** %p.huft_free.Clone235, align 4
  %379 = bitcast %struct.huft* %378 to i8*
  call void @free(i8* %379) #2
  %380 = load %struct.huft*, %struct.huft** %q.huft_free.Clone236, align 4
  store %struct.huft* %380, %struct.huft** %p.huft_free.Clone235, align 4
  br label %while.cond.huft_free.Clone237

while.end.huft_free.Clone243:                     ; preds = %while.cond.huft_free.Clone237
  store i32 0, i32* %RetValuePtr244
  br label %if.then284.Split

if.then284.Split:                                 ; preds = %while.end.huft_free.Clone243
  %RetValue245 = load i32, i32* %RetValuePtr244
  br label %if.end289

if.end289:                                        ; preds = %if.then284.Split, %if.then281
  %381 = load %struct.huft*, %struct.huft** %tl, align 4
  br label %entry.huft_free.Clone220

entry.huft_free.Clone220:                         ; preds = %if.end289
  %t.addr.huft_free.Clone221 = alloca %struct.huft*, align 4
  %p.huft_free.Clone222 = alloca %struct.huft*, align 4
  %q.huft_free.Clone223 = alloca %struct.huft*, align 4
  store %struct.huft* %381, %struct.huft** %t.addr.huft_free.Clone221, align 4
  %382 = load %struct.huft*, %struct.huft** %t.addr.huft_free.Clone221, align 4
  store %struct.huft* %382, %struct.huft** %p.huft_free.Clone222, align 4
  br label %while.cond.huft_free.Clone224

while.cond.huft_free.Clone224:                    ; preds = %while.body.huft_free.Clone226, %entry.huft_free.Clone220
  %383 = load %struct.huft*, %struct.huft** %p.huft_free.Clone222, align 4
  %cmp.huft_free.Clone225 = icmp ne %struct.huft* %383, null
  br i1 %cmp.huft_free.Clone225, label %while.body.huft_free.Clone226, label %while.end.huft_free.Clone230

while.body.huft_free.Clone226:                    ; preds = %while.cond.huft_free.Clone224
  %384 = load %struct.huft*, %struct.huft** %p.huft_free.Clone222, align 4
  %incdec.ptr.huft_free.Clone227 = getelementptr inbounds %struct.huft, %struct.huft* %384, i32 -1
  store %struct.huft* %incdec.ptr.huft_free.Clone227, %struct.huft** %p.huft_free.Clone222, align 4
  %v.huft_free.Clone228 = getelementptr inbounds %struct.huft, %struct.huft* %incdec.ptr.huft_free.Clone227, i32 0, i32 2
  %t1.huft_free.Clone229 = bitcast %union.anon* %v.huft_free.Clone228 to %struct.huft**
  %385 = load %struct.huft*, %struct.huft** %t1.huft_free.Clone229, align 4
  store %struct.huft* %385, %struct.huft** %q.huft_free.Clone223, align 4
  %386 = load %struct.huft*, %struct.huft** %p.huft_free.Clone222, align 4
  %387 = bitcast %struct.huft* %386 to i8*
  call void @free(i8* %387) #2
  %388 = load %struct.huft*, %struct.huft** %q.huft_free.Clone223, align 4
  store %struct.huft* %388, %struct.huft** %p.huft_free.Clone222, align 4
  br label %while.cond.huft_free.Clone224

while.end.huft_free.Clone230:                     ; preds = %while.cond.huft_free.Clone224
  store i32 0, i32* %RetValuePtr231
  br label %if.end289.Split

if.end289.Split:                                  ; preds = %while.end.huft_free.Clone230
  %RetValue232 = load i32, i32* %RetValuePtr231
  %389 = load i32, i32* %i, align 4
  store i32 %389, i32* %retval, align 4
  br label %return

if.end291:                                        ; preds = %if.end275
  %390 = load i32, i32* %bd, align 4
  %391 = load i32, i32* %bl, align 4
  %392 = load %struct.huft*, %struct.huft** %td, align 4
  %393 = load %struct.huft*, %struct.huft** %tl, align 4
  %call292 = call i32 @inflate_codes(%struct.huft* %393, %struct.huft* %392, i32 %391, i32 %390)
  %tobool293 = icmp ne i32 %call292, 0
  br i1 %tobool293, label %if.then294, label %if.end295

if.then294:                                       ; preds = %if.end291
  store i32 1, i32* %retval, align 4
  br label %return

if.end295:                                        ; preds = %if.end291
  %394 = load %struct.huft*, %struct.huft** %tl, align 4
  br label %entry.huft_free.Clone207

entry.huft_free.Clone207:                         ; preds = %if.end295
  %t.addr.huft_free.Clone208 = alloca %struct.huft*, align 4
  %p.huft_free.Clone209 = alloca %struct.huft*, align 4
  %q.huft_free.Clone210 = alloca %struct.huft*, align 4
  store %struct.huft* %394, %struct.huft** %t.addr.huft_free.Clone208, align 4
  %395 = load %struct.huft*, %struct.huft** %t.addr.huft_free.Clone208, align 4
  store %struct.huft* %395, %struct.huft** %p.huft_free.Clone209, align 4
  br label %while.cond.huft_free.Clone211

while.cond.huft_free.Clone211:                    ; preds = %while.body.huft_free.Clone213, %entry.huft_free.Clone207
  %396 = load %struct.huft*, %struct.huft** %p.huft_free.Clone209, align 4
  %cmp.huft_free.Clone212 = icmp ne %struct.huft* %396, null
  br i1 %cmp.huft_free.Clone212, label %while.body.huft_free.Clone213, label %while.end.huft_free.Clone217

while.body.huft_free.Clone213:                    ; preds = %while.cond.huft_free.Clone211
  %397 = load %struct.huft*, %struct.huft** %p.huft_free.Clone209, align 4
  %incdec.ptr.huft_free.Clone214 = getelementptr inbounds %struct.huft, %struct.huft* %397, i32 -1
  store %struct.huft* %incdec.ptr.huft_free.Clone214, %struct.huft** %p.huft_free.Clone209, align 4
  %v.huft_free.Clone215 = getelementptr inbounds %struct.huft, %struct.huft* %incdec.ptr.huft_free.Clone214, i32 0, i32 2
  %t1.huft_free.Clone216 = bitcast %union.anon* %v.huft_free.Clone215 to %struct.huft**
  %398 = load %struct.huft*, %struct.huft** %t1.huft_free.Clone216, align 4
  store %struct.huft* %398, %struct.huft** %q.huft_free.Clone210, align 4
  %399 = load %struct.huft*, %struct.huft** %p.huft_free.Clone209, align 4
  %400 = bitcast %struct.huft* %399 to i8*
  call void @free(i8* %400) #2
  %401 = load %struct.huft*, %struct.huft** %q.huft_free.Clone210, align 4
  store %struct.huft* %401, %struct.huft** %p.huft_free.Clone209, align 4
  br label %while.cond.huft_free.Clone211

while.end.huft_free.Clone217:                     ; preds = %while.cond.huft_free.Clone211
  store i32 0, i32* %RetValuePtr218
  br label %if.end295.Split206

if.end295.Split206:                               ; preds = %while.end.huft_free.Clone217
  %RetValue219 = load i32, i32* %RetValuePtr218
  %402 = load %struct.huft*, %struct.huft** %td, align 4
  br label %entry.huft_free.Clone

entry.huft_free.Clone:                            ; preds = %if.end295.Split206
  %t.addr.huft_free.Clone = alloca %struct.huft*, align 4
  %p.huft_free.Clone = alloca %struct.huft*, align 4
  %q.huft_free.Clone = alloca %struct.huft*, align 4
  store %struct.huft* %402, %struct.huft** %t.addr.huft_free.Clone, align 4
  %403 = load %struct.huft*, %struct.huft** %t.addr.huft_free.Clone, align 4
  store %struct.huft* %403, %struct.huft** %p.huft_free.Clone, align 4
  br label %while.cond.huft_free.Clone

while.cond.huft_free.Clone:                       ; preds = %while.body.huft_free.Clone, %entry.huft_free.Clone
  %404 = load %struct.huft*, %struct.huft** %p.huft_free.Clone, align 4
  %cmp.huft_free.Clone = icmp ne %struct.huft* %404, null
  br i1 %cmp.huft_free.Clone, label %while.body.huft_free.Clone, label %while.end.huft_free.Clone

while.body.huft_free.Clone:                       ; preds = %while.cond.huft_free.Clone
  %405 = load %struct.huft*, %struct.huft** %p.huft_free.Clone, align 4
  %incdec.ptr.huft_free.Clone = getelementptr inbounds %struct.huft, %struct.huft* %405, i32 -1
  store %struct.huft* %incdec.ptr.huft_free.Clone, %struct.huft** %p.huft_free.Clone, align 4
  %v.huft_free.Clone = getelementptr inbounds %struct.huft, %struct.huft* %incdec.ptr.huft_free.Clone, i32 0, i32 2
  %t1.huft_free.Clone = bitcast %union.anon* %v.huft_free.Clone to %struct.huft**
  %406 = load %struct.huft*, %struct.huft** %t1.huft_free.Clone, align 4
  store %struct.huft* %406, %struct.huft** %q.huft_free.Clone, align 4
  %407 = load %struct.huft*, %struct.huft** %p.huft_free.Clone, align 4
  %408 = bitcast %struct.huft* %407 to i8*
  call void @free(i8* %408) #2
  %409 = load %struct.huft*, %struct.huft** %q.huft_free.Clone, align 4
  store %struct.huft* %409, %struct.huft** %p.huft_free.Clone, align 4
  br label %while.cond.huft_free.Clone

while.end.huft_free.Clone:                        ; preds = %while.cond.huft_free.Clone
  store i32 0, i32* %RetValuePtr204
  br label %if.end295.Split

if.end295.Split:                                  ; preds = %while.end.huft_free.Clone
  %RetValue205 = load i32, i32* %RetValuePtr204
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %CallOutFuncBB, %if.end295.Split, %if.then294, %if.end289.Split, %if.then248, %if.then211, %if.then173, %if.end102, %if.then
  %410 = load i32, i32* %retval, align 4
  ret i32 %410
}

; Function Attrs: noinline optnone sspstrong
define dso_local i32 @inflate_block(i32* %e) #1 {
entry:
  %retval = alloca i32, align 4
  %e.addr = alloca i32*, align 4
  %t = alloca i32, align 4
  %b = alloca i32, align 4
  %k = alloca i32, align 4
  store i32* %e, i32** %e.addr, align 4
  %0 = load i32, i32* @bb, align 4
  store i32 %0, i32* %b, align 4
  %1 = load i32, i32* @bk, align 4
  store i32 %1, i32* %k, align 4
  %RetValuePtr = alloca i32, align 4
  br label %while.cond

while.cond:                                       ; preds = %cond.end, %entry
  %2 = load i32, i32* %k, align 4
  %cmp = icmp ult i32 %2, 1
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %3 = load i32, i32* @inptr, align 4
  %4 = load i32, i32* @insize, align 4
  %cmp1 = icmp ult i32 %3, %4
  br i1 %cmp1, label %cond.true, label %cond.false

cond.true:                                        ; preds = %while.body
  %5 = load i32, i32* @inptr, align 4
  %inc = add i32 %5, 1
  store i32 %inc, i32* @inptr, align 4
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i32 0, i32 %5
  %6 = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %6 to i32
  br label %cond.end

cond.false:                                       ; preds = %while.body
  br label %entry.fill_inbuf.Clone

entry.fill_inbuf.Clone:                           ; preds = %cond.false
  %retval.fill_inbuf.Clone = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone = alloca i32, align 4
  %len.fill_inbuf.Clone = alloca i32, align 4
  store i32 0, i32* %eof_ok.addr.fill_inbuf.Clone, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone, align 4
  br label %do.body.fill_inbuf.Clone

do.body.fill_inbuf.Clone:                         ; preds = %do.cond.fill_inbuf.Clone, %entry.fill_inbuf.Clone
  %7 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone = sub i32 32768, %7
  %8 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %8
  %9 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone = call i32 @spec_read(i32 %9, i8* %add.ptr.fill_inbuf.Clone, i32 %sub.fill_inbuf.Clone)
  store i32 %call1.fill_inbuf.Clone, i32* %len.fill_inbuf.Clone, align 4
  %10 = load i32, i32* %len.fill_inbuf.Clone, align 4
  %cmp.fill_inbuf.Clone = icmp eq i32 %10, 0
  br i1 %cmp.fill_inbuf.Clone, label %if.then.fill_inbuf.Clone, label %lor.lhs.false.fill_inbuf.Clone

lor.lhs.false.fill_inbuf.Clone:                   ; preds = %do.body.fill_inbuf.Clone
  %11 = load i32, i32* %len.fill_inbuf.Clone, align 4
  %cmp2.fill_inbuf.Clone = icmp eq i32 %11, -1
  br i1 %cmp2.fill_inbuf.Clone, label %if.then.fill_inbuf.Clone, label %if.end.fill_inbuf.Clone

if.then.fill_inbuf.Clone:                         ; preds = %lor.lhs.false.fill_inbuf.Clone, %do.body.fill_inbuf.Clone
  br label %do.end.fill_inbuf.Clone

if.end.fill_inbuf.Clone:                          ; preds = %lor.lhs.false.fill_inbuf.Clone
  %12 = load i32, i32* %len.fill_inbuf.Clone, align 4
  %13 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone = add i32 %13, %12
  store i32 %add.fill_inbuf.Clone, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone

do.cond.fill_inbuf.Clone:                         ; preds = %if.end.fill_inbuf.Clone
  %14 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone = icmp ult i32 %14, 32768
  br i1 %cmp3.fill_inbuf.Clone, label %do.body.fill_inbuf.Clone, label %do.end.fill_inbuf.Clone

do.end.fill_inbuf.Clone:                          ; preds = %do.cond.fill_inbuf.Clone, %if.then.fill_inbuf.Clone
  %15 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone = icmp eq i32 %15, 0
  br i1 %cmp4.fill_inbuf.Clone, label %if.then5.fill_inbuf.Clone, label %if.end8.fill_inbuf.Clone

if.then5.fill_inbuf.Clone:                        ; preds = %do.end.fill_inbuf.Clone
  %16 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone, align 4
  %tobool.fill_inbuf.Clone = icmp ne i32 %16, 0
  br i1 %tobool.fill_inbuf.Clone, label %if.then6.fill_inbuf.Clone, label %if.end7.fill_inbuf.Clone

if.then6.fill_inbuf.Clone:                        ; preds = %if.then5.fill_inbuf.Clone
  store i32 -1, i32* %retval.fill_inbuf.Clone, align 4
  br label %return.fill_inbuf.Clone

if.end7.fill_inbuf.Clone:                         ; preds = %if.then5.fill_inbuf.Clone
  br label %entry.read_error.Clone

entry.read_error.Clone:                           ; preds = %if.end7.fill_inbuf.Clone
  %17 = load i8*, i8** @progname, align 4
  %call.read_error.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone, i32 2
  %call1.read_error.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %17)
  %call2.read_error.Clone = call i32* @_errno()
  %18 = load i32, i32* %call2.read_error.Clone, align 4
  %cmp.read_error.Clone = icmp ne i32 %18, 0
  br i1 %cmp.read_error.Clone, label %if.then.read_error.Clone, label %if.else.read_error.Clone

if.then.read_error.Clone:                         ; preds = %entry.read_error.Clone
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone

if.else.read_error.Clone:                         ; preds = %entry.read_error.Clone
  %call3.read_error.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone, i32 2
  %call5.read_error.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone

if.end.read_error.Clone:                          ; preds = %if.else.read_error.Clone, %if.then.read_error.Clone
  br label %entry.abort_gzip.Clone

entry.abort_gzip.Clone:                           ; preds = %if.end.read_error.Clone
  %19 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone = icmp ne i32 %19, 0
  br i1 %tobool.abort_gzip.Clone, label %if.then.abort_gzip.Clone, label %if.end.abort_gzip.Clone

if.then.abort_gzip.Clone:                         ; preds = %entry.abort_gzip.Clone
  %20 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %20)
  %call1.abort_gzip.Clone = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone

if.end.abort_gzip.Clone:                          ; preds = %if.then.abort_gzip.Clone, %entry.abort_gzip.Clone
  br label %entry.do_exit.Clone

entry.do_exit.Clone:                              ; preds = %if.end.abort_gzip.Clone
  %exitcode.addr.do_exit.Clone = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone, align 4
  %21 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone = icmp ne i32 %21, 0
  br i1 %tobool.do_exit.Clone, label %if.then.do_exit.Clone, label %if.end.do_exit.Clone

if.then.do_exit.Clone:                            ; preds = %entry.do_exit.Clone
  %22 = load i32, i32* %exitcode.addr.do_exit.Clone, align 4
  call void @exit(i32 %22) #7
  unreachable

if.end.do_exit.Clone:                             ; preds = %entry.do_exit.Clone
  store i32 1, i32* @do_exit.in_exit, align 4
  %23 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone = icmp ne i8* %23, null
  br i1 %cmp.do_exit.Clone, label %if.then1.do_exit.Clone, label %if.end2.do_exit.Clone

if.then1.do_exit.Clone:                           ; preds = %if.end.do_exit.Clone
  %24 = load i8*, i8** @env, align 4
  call void @free(i8* %24) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone

if.end2.do_exit.Clone:                            ; preds = %if.then1.do_exit.Clone, %if.end.do_exit.Clone
  %25 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone = icmp ne i8** %25, null
  br i1 %cmp3.do_exit.Clone, label %if.then4.do_exit.Clone, label %if.end5.do_exit.Clone

if.then4.do_exit.Clone:                           ; preds = %if.end2.do_exit.Clone
  %26 = load i8**, i8*** @args, align 4
  %27 = bitcast i8** %26 to i8*
  call void @free(i8* %27) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone

if.end5.do_exit.Clone:                            ; preds = %if.then4.do_exit.Clone, %if.end2.do_exit.Clone
  %28 = load i32, i32* %exitcode.addr.do_exit.Clone, align 4
  call void @exit(i32 %28) #7
  unreachable

return.do_exit.Clone:                             ; No predecessors!
  br label %if.end.abort_gzip.Clone.Split

if.end.abort_gzip.Clone.Split:                    ; preds = %return.do_exit.Clone
  br label %if.end.read_error.Clone.Split

if.end.read_error.Clone.Split:                    ; preds = %if.end.abort_gzip.Clone.Split
  br label %if.end7.fill_inbuf.Clone.Split

if.end7.fill_inbuf.Clone.Split:                   ; preds = %if.end.read_error.Clone.Split
  br label %if.end8.fill_inbuf.Clone

if.end8.fill_inbuf.Clone:                         ; preds = %if.end7.fill_inbuf.Clone.Split, %do.end.fill_inbuf.Clone
  %29 = load i32, i32* @insize, align 4
  %30 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone = add i32 %30, %29
  store i32 %add9.fill_inbuf.Clone, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %31 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone = zext i8 %31 to i32
  store i32 %conv.fill_inbuf.Clone, i32* %retval.fill_inbuf.Clone, align 4
  br label %return.fill_inbuf.Clone

return.fill_inbuf.Clone:                          ; preds = %if.end8.fill_inbuf.Clone, %if.then6.fill_inbuf.Clone
  %32 = load i32, i32* %retval.fill_inbuf.Clone, align 4
  store i32 %32, i32* %RetValuePtr
  br label %cond.false.Split

cond.false.Split:                                 ; preds = %return.fill_inbuf.Clone
  %RetValue = load i32, i32* %RetValuePtr
  br label %cond.end

cond.end:                                         ; preds = %cond.false.Split, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %RetValue, %cond.false.Split ]
  %conv2 = trunc i32 %cond to i8
  %conv3 = zext i8 %conv2 to i32
  %33 = load i32, i32* %k, align 4
  %shl = shl i32 %conv3, %33
  %34 = load i32, i32* %b, align 4
  %or = or i32 %34, %shl
  store i32 %or, i32* %b, align 4
  %35 = load i32, i32* %k, align 4
  %add = add i32 %35, 8
  store i32 %add, i32* %k, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %36 = load i32, i32* %b, align 4
  %and = and i32 %36, 1
  %37 = load i32*, i32** %e.addr, align 4
  store i32 %and, i32* %37, align 4
  %38 = load i32, i32* %b, align 4
  %shr = lshr i32 %38, 1
  store i32 %shr, i32* %b, align 4
  %39 = load i32, i32* %k, align 4
  %sub = sub i32 %39, 1
  store i32 %sub, i32* %k, align 4
  br label %CallOutFuncBB

CallOutFuncBB:                                    ; preds = %while.end
  call void @while.cond4.OutLineFunc(i32* %k, i32* %b)
  %40 = getelementptr inbounds %Struct.RetValue.14, %Struct.RetValue.14* @Struct.RetValue.16, i32 0, i32 0
  %41 = load i32*, i32** %40, align 4
  %42 = load i32, i32* %41, align 4
  store i32 %42, i32* %k
  %43 = getelementptr inbounds %Struct.RetValue.14, %Struct.RetValue.14* @Struct.RetValue.16, i32 0, i32 1
  %44 = load i32*, i32** %43, align 4
  %45 = load i32, i32* %44, align 4
  store i32 %45, i32* %b
  br label %new

new:                                              ; preds = %CallOutFuncBB
  %46 = load i32, i32* %b, align 4
  %and24 = and i32 %46, 3
  store i32 %and24, i32* %t, align 4
  %47 = load i32, i32* %b, align 4
  %shr25 = lshr i32 %47, 2
  store i32 %shr25, i32* %b, align 4
  %48 = load i32, i32* %k, align 4
  %sub26 = sub i32 %48, 2
  store i32 %sub26, i32* %k, align 4
  %49 = load i32, i32* %b, align 4
  store i32 %49, i32* @bb, align 4
  %50 = load i32, i32* %k, align 4
  store i32 %50, i32* @bk, align 4
  %51 = load i32, i32* %t, align 4
  %cmp27 = icmp eq i32 %51, 2
  br i1 %cmp27, label %if.then, label %if.end

if.then:                                          ; preds = %new
  %call29 = call i32 @inflate_dynamic()
  store i32 %call29, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %new
  %52 = load i32, i32* %t, align 4
  %cmp30 = icmp eq i32 %52, 0
  br i1 %cmp30, label %if.then32, label %if.end34

if.then32:                                        ; preds = %if.end
  %call33 = call i32 @inflate_stored()
  store i32 %call33, i32* %retval, align 4
  br label %return

if.end34:                                         ; preds = %if.end
  %53 = load i32, i32* %t, align 4
  %cmp35 = icmp eq i32 %53, 1
  br i1 %cmp35, label %if.then37, label %if.end39

if.then37:                                        ; preds = %if.end34
  %call38 = call i32 @inflate_fixed()
  store i32 %call38, i32* %retval, align 4
  br label %return

if.end39:                                         ; preds = %if.end34
  store i32 2, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end39, %if.then37, %if.then32, %if.then
  %54 = load i32, i32* %retval, align 4
  ret i32 %54
}

; Function Attrs: noinline optnone sspstrong
define dso_local i32 @inflate() #1 {
entry:
  %retval = alloca i32, align 4
  %e = alloca i32, align 4
  %r = alloca i32, align 4
  %h = alloca i32, align 4
  store i32 0, i32* @outcnt, align 4
  store i32 0, i32* @bk, align 4
  store i32 0, i32* @bb, align 4
  store i32 0, i32* %h, align 4
  br label %do.body

do.body:                                          ; preds = %do.cond, %entry
  store i32 0, i32* @hufts, align 4
  %call = call i32 @inflate_block(i32* %e)
  store i32 %call, i32* %r, align 4
  %cmp = icmp ne i32 %call, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %do.body
  %0 = load i32, i32* %r, align 4
  store i32 %0, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %do.body
  %1 = load i32, i32* @hufts, align 4
  %2 = load i32, i32* %h, align 4
  %cmp1 = icmp ugt i32 %1, %2
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  %3 = load i32, i32* @hufts, align 4
  store i32 %3, i32* %h, align 4
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %if.end
  br label %do.cond

do.cond:                                          ; preds = %if.end3
  %4 = load i32, i32* %e, align 4
  %tobool = icmp ne i32 %4, 0
  %lnot = xor i1 %tobool, true
  br i1 %lnot, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %CallOutFuncBB

CallOutFuncBB:                                    ; preds = %do.end
  call void @while.cond.OutLineFunc(i32* %retval)
  %5 = getelementptr inbounds %Struct.RetValue.15, %Struct.RetValue.15* @Struct.RetValue.17, i32 0, i32 0
  %6 = load i32*, i32** %5, align 4
  %7 = load i32, i32* %6, align 4
  store i32 %7, i32* %retval
  br label %return

return:                                           ; preds = %CallOutFuncBB, %if.then
  %8 = load i32, i32* %retval, align 4
  ret i32 %8
}

; Function Attrs: noinline optnone sspstrong
define dso_local i32 @lzw(i32 %in, i32 %out) #1 {
entry:
  %retval = alloca i32, align 4
  %out.addr = alloca i32, align 4
  %in.addr = alloca i32, align 4
  store i32 %out, i32* %out.addr, align 4
  store i32 %in, i32* %in.addr, align 4
  %0 = load i32, i32* @msg_done, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  store i32 1, i32* @msg_done, align 4
  %call = call %struct._iobuf* @__iob_func()
  %arrayidx = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call, i32 2
  %call1 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @"??_C@_0CM@LPGEGGFO@output?5in?5compress?5?4Z?5format?5not@", i32 0, i32 0))
  %1 = load i32, i32* %in.addr, align 4
  %2 = load i32, i32* %out.addr, align 4
  %cmp = icmp ne i32 %1, %2
  br i1 %cmp, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  store i32 1, i32* @exit_code, align 4
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %if.end
  store i32 1, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end3, %if.then
  %3 = load i32, i32* %retval, align 4
  ret i32 %3
}

; Function Attrs: noinline optnone sspstrong
define dso_local i32 @spec_init() #1 {
entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %limit = alloca i32, align 4
  %0 = load i32, i32* @dbglvl, align 4
  %cmp = icmp slt i32 3, %0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"??_C@_0L@HODMACKF@spec_init?6?$AA@", i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc21, %if.end
  %1 = load i32, i32* %i, align 4
  %cmp1 = icmp slt i32 %1, 3
  br i1 %cmp1, label %for.body, label %for.end22

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %2
  %limit2 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx, i32 0, i32 0
  %3 = load i32, i32* %limit2, align 4
  store i32 %3, i32* %limit, align 4
  %4 = load i32, i32* %i, align 4
  %arrayidx3 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %4
  %5 = bitcast %struct.spec_fd_t* %arrayidx3 to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %5, i8 0, i32 16, i1 false)
  %6 = load i32, i32* %limit, align 4
  %7 = load i32, i32* %i, align 4
  %arrayidx4 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %7
  %limit5 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx4, i32 0, i32 0
  store i32 %6, i32* %limit5, align 4
  %8 = load i32, i32* %limit, align 4
  %add = add nsw i32 %8, 102400
  %call6 = call noalias i8* @malloc(i32 %add) #2
  %9 = load i32, i32* %i, align 4
  %arrayidx7 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %9
  %buf = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx7, i32 0, i32 3
  store i8* %call6, i8** %buf, align 4
  %10 = load i32, i32* %i, align 4
  %arrayidx8 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %10
  %buf9 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx8, i32 0, i32 3
  %11 = load i8*, i8** %buf9, align 4
  %cmp10 = icmp eq i8* %11, null
  br i1 %cmp10, label %if.then11, label %if.end13

if.then11:                                        ; preds = %for.body
  %call12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @"??_C@_0CE@CICPOJPD@spec_init?3?5Error?5mallocing?5memor@", i32 0, i32 0))
  call void @exit(i32 1) #7
  unreachable

if.end13:                                         ; preds = %for.body
  store i32 0, i32* %j, align 4
  br label %CallOutFuncBB

CallOutFuncBB:                                    ; preds = %if.end13
  call void @for.cond14.OutLineFunc(i32* %j, i32* %limit, i32* %i)
  %12 = getelementptr inbounds %Struct.RetValue.16, %Struct.RetValue.16* @Struct.RetValue.18, i32 0, i32 0
  %13 = load i32*, i32** %12, align 4
  %14 = load i32, i32* %13, align 4
  store i32 %14, i32* %j
  br label %for.inc21

for.inc21:                                        ; preds = %CallOutFuncBB
  %15 = load i32, i32* %i, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end22:                                        ; preds = %for.cond
  ret i32 0
}

declare dllimport i32 @printf(i8*, ...) #3

; Function Attrs: noinline optnone sspstrong
define dso_local i32 @spec_random_load(i32 %fd) #1 {
entry:
  %fd.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %random_text = alloca [32 x [131072 x i8]], align 1
  store i32 %fd, i32* %fd.addr, align 4
  %0 = load i32, i32* @dbglvl, align 4
  %cmp = icmp slt i32 4, %0
  %RetValuePtr = alloca double, align 4
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @"??_C@_0BB@FOGGIPDD@Creating?5Chunks?6?$AA@", i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %i, align 4
  br label %CallOutFuncBB

CallOutFuncBB:                                    ; preds = %if.end
  call void @for.cond.OutLineFunc(i32* %i, i32* %j, [32 x [131072 x i8]]* %random_text)
  %1 = getelementptr inbounds %Struct.RetValue.17, %Struct.RetValue.17* @Struct.RetValue.19, i32 0, i32 0
  %2 = load i32*, i32** %1, align 4
  %3 = load i32, i32* %2, align 4
  store i32 %3, i32* %i
  %4 = getelementptr inbounds %Struct.RetValue.17, %Struct.RetValue.17* @Struct.RetValue.19, i32 0, i32 1
  %5 = load i32*, i32** %4, align 4
  %6 = load i32, i32* %5, align 4
  store i32 %6, i32* %j
  br label %new

new:                                              ; preds = %CallOutFuncBB
  %7 = load i32, i32* @dbglvl, align 4
  %cmp15 = icmp slt i32 4, %7
  br i1 %cmp15, label %if.then17, label %if.end19

if.then17:                                        ; preds = %new
  %call18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @"??_C@_0BE@GLOHHOFE@Filling?5input?5file?6?$AA@", i32 0, i32 0))
  br label %if.end19

if.end19:                                         ; preds = %if.then17, %new
  store i32 0, i32* %i, align 4
  br label %for.cond20

for.cond20:                                       ; preds = %for.inc30, %if.end19
  %8 = load i32, i32* %i, align 4
  %9 = load i32, i32* %fd.addr, align 4
  %arrayidx21 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %9
  %limit = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx21, i32 0, i32 0
  %10 = load i32, i32* %limit, align 4
  %cmp22 = icmp slt i32 %8, %10
  br i1 %cmp22, label %for.body24, label %for.end31

for.body24:                                       ; preds = %for.cond20
  %11 = load i32, i32* %fd.addr, align 4
  %arrayidx25 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %11
  %buf = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx25, i32 0, i32 3
  %12 = load i8*, i8** %buf, align 4
  %13 = load i32, i32* %i, align 4
  %add.ptr = getelementptr inbounds i8, i8* %12, i32 %13
  br label %entry.ran.Clone

entry.ran.Clone:                                  ; preds = %for.body24
  %lo.ran.Clone = alloca i32, align 4
  %hi.ran.Clone = alloca i32, align 4
  %test.ran.Clone = alloca i32, align 4
  %14 = load i32, i32* @seedi, align 4
  %div.ran.Clone = sdiv i32 %14, 127773
  store i32 %div.ran.Clone, i32* %hi.ran.Clone, align 4
  %15 = load i32, i32* @seedi, align 4
  %rem.ran.Clone = srem i32 %15, 127773
  store i32 %rem.ran.Clone, i32* %lo.ran.Clone, align 4
  %16 = load i32, i32* %lo.ran.Clone, align 4
  %mul.ran.Clone = mul nsw i32 16807, %16
  %17 = load i32, i32* %hi.ran.Clone, align 4
  %mul1.ran.Clone = mul nsw i32 2836, %17
  %sub.ran.Clone = sub nsw i32 %mul.ran.Clone, %mul1.ran.Clone
  store i32 %sub.ran.Clone, i32* %test.ran.Clone, align 4
  %18 = load i32, i32* %test.ran.Clone, align 4
  %cmp.ran.Clone = icmp sgt i32 %18, 0
  br i1 %cmp.ran.Clone, label %if.then.ran.Clone, label %if.else.ran.Clone

if.then.ran.Clone:                                ; preds = %entry.ran.Clone
  %19 = load i32, i32* %test.ran.Clone, align 4
  store i32 %19, i32* @seedi, align 4
  br label %if.end.ran.Clone

if.else.ran.Clone:                                ; preds = %entry.ran.Clone
  %20 = load i32, i32* %test.ran.Clone, align 4
  %add.ran.Clone = add nsw i32 %20, 2147483647
  store i32 %add.ran.Clone, i32* @seedi, align 4
  br label %if.end.ran.Clone

if.end.ran.Clone:                                 ; preds = %if.else.ran.Clone, %if.then.ran.Clone
  %21 = load i32, i32* @seedi, align 4
  %conv.ran.Clone = sitofp i32 %21 to float
  %div2.ran.Clone = fdiv float %conv.ran.Clone, 0x41E0000000000000
  %conv3.ran.Clone = fpext float %div2.ran.Clone to double
  store double %conv3.ran.Clone, double* %RetValuePtr
  br label %for.body24.Split

for.body24.Split:                                 ; preds = %if.end.ran.Clone
  %RetValue = load double, double* %RetValuePtr
  %mul27 = fmul double %RetValue, 3.200000e+01
  %conv28 = fptosi double %mul27 to i32
  %arrayidx29 = getelementptr inbounds [32 x [131072 x i8]], [32 x [131072 x i8]]* %random_text, i32 0, i32 %conv28
  %arraydecay = getelementptr inbounds [131072 x i8], [131072 x i8]* %arrayidx29, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %add.ptr, i8* align 1 %arraydecay, i32 131072, i1 false)
  br label %for.inc30

for.inc30:                                        ; preds = %for.body24.Split
  %22 = load i32, i32* %i, align 4
  %add = add nsw i32 %22, 131072
  store i32 %add, i32* %i, align 4
  br label %for.cond20

for.end31:                                        ; preds = %for.cond20
  %23 = load i32, i32* %fd.addr, align 4
  %arrayidx32 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %23
  %len = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx32, i32 0, i32 1
  store i32 1048576, i32* %len, align 4
  ret i32 0
}

; Function Attrs: noinline optnone sspstrong
define dso_local i32 @spec_load(i32 %num, i8* %filename, i32 %size) #1 {
entry:
  %size.addr = alloca i32, align 4
  %filename.addr = alloca i8*, align 4
  %num.addr = alloca i32, align 4
  %fd = alloca i32, align 4
  %rc = alloca i32, align 4
  %i = alloca i32, align 4
  %tmp = alloca i32, align 4
  store i32 %size, i32* %size.addr, align 4
  store i8* %filename, i8** %filename.addr, align 4
  store i32 %num, i32* %num.addr, align 4
  %0 = load i8*, i8** %filename.addr, align 4
  %call = call i32 bitcast (i32 (...)* @open to i32 (i8*, i32)*)(i8* %0, i32 32768)
  store i32 %call, i32* %fd, align 4
  %1 = load i32, i32* %fd, align 4
  %cmp = icmp slt i32 %1, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call1 = call i32* @_errno()
  %2 = load i32, i32* %call1, align 4
  %call2 = call i8* @strerror(i32 %2)
  %3 = load i8*, i8** %filename.addr, align 4
  %call3 = call %struct._iobuf* @__iob_func()
  %arrayidx = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3, i32 2
  %call4 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @"??_C@_0BI@PNOIDAGN@Can?8t?5open?5file?5?$CFs?3?5?$CFs?6?$AA@", i32 0, i32 0), i8* %3, i8* %call2)
  call void @exit(i32 1) #7
  unreachable

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %num.addr, align 4
  %arrayidx5 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %4
  %len = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx5, i32 0, i32 1
  store i32 0, i32* %len, align 4
  %5 = load i32, i32* %num.addr, align 4
  %arrayidx6 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %5
  %pos = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx6, i32 0, i32 2
  store i32 0, i32* %pos, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %6 = load i32, i32* %i, align 4
  %7 = load i32, i32* %size.addr, align 4
  %cmp7 = icmp slt i32 %6, %7
  br i1 %cmp7, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %8 = load i32, i32* %num.addr, align 4
  %arrayidx8 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %8
  %buf = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx8, i32 0, i32 3
  %9 = load i8*, i8** %buf, align 4
  %10 = load i32, i32* %i, align 4
  %add.ptr = getelementptr inbounds i8, i8* %9, i32 %10
  %11 = load i32, i32* %fd, align 4
  %call9 = call i32 bitcast (i32 (...)* @read to i32 (i32, i8*, i32)*)(i32 %11, i8* %add.ptr, i32 131072)
  store i32 %call9, i32* %rc, align 4
  %12 = load i32, i32* %rc, align 4
  %cmp10 = icmp eq i32 %12, 0
  br i1 %cmp10, label %if.then11, label %if.end12

if.then11:                                        ; preds = %for.body
  br label %for.end

if.end12:                                         ; preds = %for.body
  %13 = load i32, i32* %rc, align 4
  %cmp13 = icmp slt i32 %13, 0
  br i1 %cmp13, label %if.then14, label %if.end20

if.then14:                                        ; preds = %if.end12
  %call15 = call i32* @_errno()
  %14 = load i32, i32* %call15, align 4
  %call16 = call i8* @strerror(i32 %14)
  %15 = load i8*, i8** %filename.addr, align 4
  %call17 = call %struct._iobuf* @__iob_func()
  %arrayidx18 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call17, i32 2
  %call19 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx18, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @"??_C@_0BL@JAKFMFOB@Error?5reading?5from?5?$CFs?3?5?$CFs?6?$AA@", i32 0, i32 0), i8* %15, i8* %call16)
  call void @exit(i32 1) #7
  unreachable

if.end20:                                         ; preds = %if.end12
  %16 = load i32, i32* %rc, align 4
  %17 = load i32, i32* %num.addr, align 4
  %arrayidx21 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %17
  %len22 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx21, i32 0, i32 1
  %18 = load i32, i32* %len22, align 4
  %add = add nsw i32 %18, %16
  store i32 %add, i32* %len22, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.end20
  %19 = load i32, i32* %rc, align 4
  %20 = load i32, i32* %i, align 4
  %add23 = add nsw i32 %20, %19
  store i32 %add23, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %if.then11, %for.cond
  %21 = load i32, i32* %fd, align 4
  %call24 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %21)
  br label %while.cond

while.cond:                                       ; preds = %CallOutFuncBB, %for.end
  %22 = load i32, i32* %num.addr, align 4
  %arrayidx25 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %22
  %len26 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx25, i32 0, i32 1
  %23 = load i32, i32* %len26, align 4
  %24 = load i32, i32* %size.addr, align 4
  %cmp27 = icmp slt i32 %23, %24
  br i1 %cmp27, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %25 = load i32, i32* %size.addr, align 4
  %26 = load i32, i32* %num.addr, align 4
  %arrayidx28 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %26
  %len29 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx28, i32 0, i32 1
  %27 = load i32, i32* %len29, align 4
  %sub = sub nsw i32 %25, %27
  store i32 %sub, i32* %tmp, align 4
  %28 = load i32, i32* %tmp, align 4
  %29 = load i32, i32* %num.addr, align 4
  %arrayidx30 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %29
  %len31 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx30, i32 0, i32 1
  %30 = load i32, i32* %len31, align 4
  %cmp32 = icmp sgt i32 %28, %30
  br i1 %cmp32, label %if.then33, label %CallOutFuncBB

if.then33:                                        ; preds = %while.body
  %31 = load i32, i32* %num.addr, align 4
  %arrayidx34 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %31
  %len35 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx34, i32 0, i32 1
  %32 = load i32, i32* %len35, align 4
  store i32 %32, i32* %tmp, align 4
  br label %CallOutFuncBB

CallOutFuncBB:                                    ; preds = %while.body, %if.then33
  call void @if.end36.OutLineFunc(i32* %tmp, i32* %num.addr)
  br label %while.cond

while.end:                                        ; preds = %while.cond
  ret i32 0
}

declare dso_local i32 @open(...) #3

declare dllimport i32* @_errno() #3

declare dllimport i8* @strerror(i32) #3

declare dso_local i32 @read(...) #3

; Function Attrs: noinline optnone sspstrong
define dso_local i32 @spec_read(i32 %fd, i8* %buf, i32 %size) #1 {
entry:
  %retval = alloca i32, align 4
  %size.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 4
  %fd.addr = alloca i32, align 4
  %rc = alloca i32, align 4
  store i32 %size, i32* %size.addr, align 4
  store i8* %buf, i8** %buf.addr, align 4
  store i32 %fd, i32* %fd.addr, align 4
  store i32 0, i32* %rc, align 4
  %0 = load i32, i32* @dbglvl, align 4
  %cmp = icmp slt i32 4, %0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %size.addr, align 4
  %2 = load i8*, i8** %buf.addr, align 4
  %3 = load i32, i32* %fd.addr, align 4
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @"??_C@_0BJ@KLJGEJEJ@spec_read?3?5?$CFd?0?5?$CFx?0?5?$CFd?5?$DN?5?$AA@", i32 0, i32 0), i32 %3, i8* %2, i32 %1)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %4 = load i32, i32* %fd.addr, align 4
  %cmp1 = icmp sgt i32 %4, 3
  br i1 %cmp1, label %if.then2, label %if.end5

if.then2:                                         ; preds = %if.end
  %5 = load i32, i32* %fd.addr, align 4
  %call3 = call %struct._iobuf* @__iob_func()
  %arrayidx = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3, i32 2
  %call4 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @"??_C@_0CC@PGADNMPC@spec_read?3?5fd?$DN?$CFd?0?5?$DO?5MAX_SPEC_FD?$CB@", i32 0, i32 0), i32 %5)
  call void @exit(i32 1) #7
  unreachable

if.end5:                                          ; preds = %if.end
  %6 = load i32, i32* %fd.addr, align 4
  %arrayidx6 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %6
  %pos = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx6, i32 0, i32 2
  %7 = load i32, i32* %pos, align 4
  %8 = load i32, i32* %fd.addr, align 4
  %arrayidx7 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %8
  %len = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx7, i32 0, i32 1
  %9 = load i32, i32* %len, align 4
  %cmp8 = icmp sge i32 %7, %9
  br i1 %cmp8, label %if.then9, label %CallOutFuncBB

if.then9:                                         ; preds = %if.end5
  %10 = load i32, i32* @dbglvl, align 4
  %cmp10 = icmp slt i32 4, %10
  br i1 %cmp10, label %if.then11, label %if.end13

if.then11:                                        ; preds = %if.then9
  %call12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"??_C@_04OEEBIOEI@EOF?6?$AA@", i32 0, i32 0))
  br label %if.end13

if.end13:                                         ; preds = %if.then11, %if.then9
  store i32 -1, i32* %retval, align 4
  br label %return

CallOutFuncBB:                                    ; preds = %if.end5
  call void @if.end14.OutLineFunc(i32* %fd.addr, i32* %size.addr, i32* %rc)
  %11 = getelementptr inbounds %Struct.RetValue.19, %Struct.RetValue.19* @Struct.RetValue.21, i32 0, i32 0
  %12 = load i32*, i32** %11, align 4
  %13 = load i32, i32* %12, align 4
  store i32 %13, i32* %rc
  br label %new

new:                                              ; preds = %CallOutFuncBB
  %14 = load i8*, i8** %buf.addr, align 4
  %15 = load i32, i32* %fd.addr, align 4
  %arrayidx26 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %15
  %buf27 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx26, i32 0, i32 3
  %16 = load i8*, i8** %buf27, align 4
  %17 = load i32, i32* %fd.addr, align 4
  %arrayidx28 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %17
  %pos29 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx28, i32 0, i32 2
  %18 = load i32, i32* %pos29, align 4
  %arrayidx30 = getelementptr inbounds i8, i8* %16, i32 %18
  %19 = load i32, i32* %rc, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %14, i8* align 1 %arrayidx30, i32 %19, i1 false)
  %20 = load i32, i32* %rc, align 4
  %21 = load i32, i32* %fd.addr, align 4
  %arrayidx31 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %21
  %pos32 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx31, i32 0, i32 2
  %22 = load i32, i32* %pos32, align 4
  %add33 = add nsw i32 %22, %20
  store i32 %add33, i32* %pos32, align 4
  %23 = load i32, i32* @dbglvl, align 4
  %cmp34 = icmp slt i32 4, %23
  br i1 %cmp34, label %if.then35, label %if.end37

if.then35:                                        ; preds = %new
  %24 = load i32, i32* %rc, align 4
  %call36 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"??_C@_03PMGGPEJJ@?$CFd?6?$AA@", i32 0, i32 0), i32 %24)
  br label %if.end37

if.end37:                                         ; preds = %if.then35, %new
  %25 = load i32, i32* %rc, align 4
  store i32 %25, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end37, %if.end13
  %26 = load i32, i32* %retval, align 4
  ret i32 %26
}

; Function Attrs: noinline optnone sspstrong
define dso_local i32 @spec_getc(i32 %fd) #1 {
entry:
  %retval = alloca i32, align 4
  %fd.addr = alloca i32, align 4
  %rc = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4
  store i32 0, i32* %rc, align 4
  %0 = load i32, i32* @dbglvl, align 4
  %cmp = icmp slt i32 4, %0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %fd.addr, align 4
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @"??_C@_0BB@GPMEHCHC@spec_getc?3?5?$CFd?5?$DN?5?$AA@", i32 0, i32 0), i32 %1)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %2 = load i32, i32* %fd.addr, align 4
  %cmp1 = icmp sgt i32 %2, 3
  br i1 %cmp1, label %if.then2, label %if.end5

if.then2:                                         ; preds = %if.end
  %3 = load i32, i32* %fd.addr, align 4
  %call3 = call %struct._iobuf* @__iob_func()
  %arrayidx = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3, i32 2
  %call4 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @"??_C@_0CC@PGADNMPC@spec_read?3?5fd?$DN?$CFd?0?5?$DO?5MAX_SPEC_FD?$CB@", i32 0, i32 0), i32 %3)
  call void @exit(i32 1) #7
  unreachable

if.end5:                                          ; preds = %if.end
  %4 = load i32, i32* %fd.addr, align 4
  %arrayidx6 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %4
  %pos = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx6, i32 0, i32 2
  %5 = load i32, i32* %pos, align 4
  %6 = load i32, i32* %fd.addr, align 4
  %arrayidx7 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %6
  %len = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx7, i32 0, i32 1
  %7 = load i32, i32* %len, align 4
  %cmp8 = icmp sge i32 %5, %7
  br i1 %cmp8, label %if.then9, label %CallOutFuncBB

if.then9:                                         ; preds = %if.end5
  %8 = load i32, i32* @dbglvl, align 4
  %cmp10 = icmp slt i32 4, %8
  br i1 %cmp10, label %if.then11, label %if.end13

if.then11:                                        ; preds = %if.then9
  %call12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"??_C@_04OEEBIOEI@EOF?6?$AA@", i32 0, i32 0))
  br label %if.end13

if.end13:                                         ; preds = %if.then11, %if.then9
  store i32 -1, i32* %retval, align 4
  br label %return

CallOutFuncBB:                                    ; preds = %if.end5
  call void @if.end14.OutLineFunc.23(i32* %fd.addr, i32* %rc, i32* %retval)
  %9 = getelementptr inbounds %Struct.RetValue.20, %Struct.RetValue.20* @Struct.RetValue.22, i32 0, i32 0
  %10 = load i32*, i32** %9, align 4
  %11 = load i32, i32* %10, align 4
  store i32 %11, i32* %rc
  %12 = getelementptr inbounds %Struct.RetValue.20, %Struct.RetValue.20* @Struct.RetValue.22, i32 0, i32 1
  %13 = load i32*, i32** %12, align 4
  %14 = load i32, i32* %13, align 4
  store i32 %14, i32* %retval
  br label %return

return:                                           ; preds = %CallOutFuncBB, %if.end13
  %15 = load i32, i32* %retval, align 4
  ret i32 %15
}

; Function Attrs: noinline optnone sspstrong
define dso_local i32 @spec_ungetc(i8 zeroext %ch, i32 %fd) #1 {
entry:
  %fd.addr = alloca i32, align 4
  %ch.addr = alloca i8, align 1
  %rc = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4
  store i8 %ch, i8* %ch.addr, align 1
  store i32 0, i32* %rc, align 4
  %0 = load i32, i32* @dbglvl, align 4
  %cmp = icmp slt i32 4, %0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %fd.addr, align 4
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @"??_C@_0BD@POGOMCNJ@spec_ungetc?3?5?$CFd?5?$DN?5?$AA@", i32 0, i32 0), i32 %1)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %2 = load i32, i32* %fd.addr, align 4
  %cmp1 = icmp sgt i32 %2, 3
  br i1 %cmp1, label %if.then2, label %if.end5

if.then2:                                         ; preds = %if.end
  %3 = load i32, i32* %fd.addr, align 4
  %call3 = call %struct._iobuf* @__iob_func()
  %arrayidx = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3, i32 2
  %call4 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @"??_C@_0CC@PGADNMPC@spec_read?3?5fd?$DN?$CFd?0?5?$DO?5MAX_SPEC_FD?$CB@", i32 0, i32 0), i32 %3)
  call void @exit(i32 1) #7
  unreachable

if.end5:                                          ; preds = %if.end
  %4 = load i32, i32* %fd.addr, align 4
  %arrayidx6 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %4
  %pos = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx6, i32 0, i32 2
  %5 = load i32, i32* %pos, align 4
  %cmp7 = icmp sle i32 %5, 0
  br i1 %cmp7, label %if.then8, label %if.end14

if.then8:                                         ; preds = %if.end5
  %6 = load i32, i32* %fd.addr, align 4
  %arrayidx9 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %6
  %pos10 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx9, i32 0, i32 2
  %7 = load i32, i32* %pos10, align 4
  %call11 = call %struct._iobuf* @__iob_func()
  %arrayidx12 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call11, i32 2
  %call13 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx12, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @"??_C@_0BK@PBMPALNH@spec_ungetc?3?5pos?5?$CFd?5?$DM?$DN?50?6?$AA@", i32 0, i32 0), i32 %7)
  call void @exit(i32 1) #7
  unreachable

if.end14:                                         ; preds = %if.end5
  %8 = load i32, i32* %fd.addr, align 4
  %arrayidx15 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %8
  %buf = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx15, i32 0, i32 3
  %9 = load i8*, i8** %buf, align 4
  %10 = load i32, i32* %fd.addr, align 4
  %arrayidx16 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %10
  %pos17 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx16, i32 0, i32 2
  %11 = load i32, i32* %pos17, align 4
  %dec = add nsw i32 %11, -1
  store i32 %dec, i32* %pos17, align 4
  %arrayidx18 = getelementptr inbounds i8, i8* %9, i32 %dec
  %12 = load i8, i8* %arrayidx18, align 1
  %conv = zext i8 %12 to i32
  %13 = load i8, i8* %ch.addr, align 1
  %conv19 = zext i8 %13 to i32
  %cmp20 = icmp ne i32 %conv, %conv19
  br i1 %cmp20, label %if.then22, label %if.end26

if.then22:                                        ; preds = %if.end14
  %call23 = call %struct._iobuf* @__iob_func()
  %arrayidx24 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call23, i32 2
  %call25 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx24, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @"??_C@_0EI@JGFIDMH@spec_ungetc?3?5can?8t?5unget?5somethi@", i32 0, i32 0))
  call void @exit(i32 1) #7
  unreachable

if.end26:                                         ; preds = %if.end14
  %14 = load i32, i32* @dbglvl, align 4
  %cmp27 = icmp slt i32 4, %14
  br i1 %cmp27, label %if.then29, label %if.end31

if.then29:                                        ; preds = %if.end26
  %15 = load i32, i32* %rc, align 4
  %call30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"??_C@_03PMGGPEJJ@?$CFd?6?$AA@", i32 0, i32 0), i32 %15)
  br label %if.end31

if.end31:                                         ; preds = %if.then29, %if.end26
  %16 = load i8, i8* %ch.addr, align 1
  %conv32 = zext i8 %16 to i32
  ret i32 %conv32
}

; Function Attrs: noinline optnone sspstrong
define dso_local i32 @spec_putc(i8 zeroext %ch, i32 %fd) #1 {
entry:
  %fd.addr = alloca i32, align 4
  %ch.addr = alloca i8, align 1
  store i32 %fd, i32* %fd.addr, align 4
  store i8 %ch, i8* %ch.addr, align 1
  %0 = load i32, i32* @dbglvl, align 4
  %cmp = icmp slt i32 4, %0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %fd.addr, align 4
  %2 = load i8, i8* %ch.addr, align 1
  %conv = zext i8 %2 to i32
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @"??_C@_0BF@MPLILGCO@spec_putc?3?5?$CFd?0?5?$CFd?5?$DN?5?$AA@", i32 0, i32 0), i32 %conv, i32 %1)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %3 = load i32, i32* %fd.addr, align 4
  %cmp1 = icmp sgt i32 %3, 3
  br i1 %cmp1, label %if.then3, label %if.end6

if.then3:                                         ; preds = %if.end
  %4 = load i32, i32* %fd.addr, align 4
  %call4 = call %struct._iobuf* @__iob_func()
  %arrayidx = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call4, i32 2
  %call5 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"??_C@_0CD@NANFEFEM@spec_write?3?5fd?$DN?$CFd?0?5?$DO?5MAX_SPEC_FD@", i32 0, i32 0), i32 %4)
  call void @exit(i32 1) #7
  unreachable

if.end6:                                          ; preds = %if.end
  %5 = load i8, i8* %ch.addr, align 1
  %6 = load i32, i32* %fd.addr, align 4
  %arrayidx7 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %6
  %buf = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx7, i32 0, i32 3
  %7 = load i8*, i8** %buf, align 4
  %8 = load i32, i32* %fd.addr, align 4
  %arrayidx8 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %8
  %pos = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx8, i32 0, i32 2
  %9 = load i32, i32* %pos, align 4
  %inc = add nsw i32 %9, 1
  store i32 %inc, i32* %pos, align 4
  %arrayidx9 = getelementptr inbounds i8, i8* %7, i32 %9
  store i8 %5, i8* %arrayidx9, align 1
  %10 = load i32, i32* %fd.addr, align 4
  %arrayidx10 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %10
  %len = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx10, i32 0, i32 1
  %11 = load i32, i32* %len, align 4
  %inc11 = add nsw i32 %11, 1
  store i32 %inc11, i32* %len, align 4
  %12 = load i8, i8* %ch.addr, align 1
  %conv12 = zext i8 %12 to i32
  ret i32 %conv12
}

; Function Attrs: noinline optnone sspstrong
define dso_local i32 @main(i32 %argc, i8** %argv) #1 {
entry:
  %retval = alloca i32, align 4
  %argv.addr = alloca i8**, align 4
  %argc.addr = alloca i32, align 4
  %start = alloca i32, align 4
  %finish = alloca i32, align 4
  %duration = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %fd = alloca i32, align 4
  %level = alloca i32, align 4
  %input_size = alloca i32, align 4
  %compressed_size = alloca i32, align 4
  %input_name = alloca i8*, align 4
  %validate_array = alloca i8*, align 4
  store i32 0, i32* %retval, align 4
  store i8** %argv, i8*** %argv.addr, align 4
  store i32 %argc, i32* %argc.addr, align 4
  %call = call i32 @clock()
  store i32 %call, i32* %start, align 4
  store i32 64, i32* %input_size, align 4
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @"??_C@_0P@IBHKFCCJ@input?4combined?$AA@", i32 0, i32 0), i8** %input_name, align 4
  store i32 10, i32* @seedi, align 4
  %0 = load i32, i32* %argc.addr, align 4
  %cmp = icmp sgt i32 %0, 1
  %RetValuePtr = alloca i32, align 4
  %RetValuePtr2 = alloca i32, align 4
  %RetValuePtr5 = alloca i32, align 4
  %RetValuePtr8 = alloca i32, align 4
  %RetValuePtr11 = alloca i32, align 4
  %RetValuePtr14 = alloca i32, align 4
  %RetValuePtr16 = alloca i32, align 4
  %RetValuePtr23 = alloca i32, align 4
  %RetValuePtr26 = alloca i32, align 4
  %RetValuePtr39 = alloca i32, align 4
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i8**, i8*** %argv.addr, align 4
  %arrayidx = getelementptr inbounds i8*, i8** %1, i32 1
  %2 = load i8*, i8** %arrayidx, align 4
  store i8* %2, i8** %input_name, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %3 = load i32, i32* %argc.addr, align 4
  %cmp1 = icmp sgt i32 %3, 2
  br i1 %cmp1, label %if.then2, label %if.end5

if.then2:                                         ; preds = %if.end
  %4 = load i8**, i8*** %argv.addr, align 4
  %arrayidx3 = getelementptr inbounds i8*, i8** %4, i32 2
  %5 = load i8*, i8** %arrayidx3, align 4
  %call4 = call i32 @atoi(i8* %5)
  store i32 %call4, i32* %input_size, align 4
  br label %if.end5

if.end5:                                          ; preds = %if.then2, %if.end
  %6 = load i32, i32* %argc.addr, align 4
  %cmp6 = icmp sgt i32 %6, 3
  br i1 %cmp6, label %if.then7, label %if.else

if.then7:                                         ; preds = %if.end5
  %7 = load i8**, i8*** %argv.addr, align 4
  %arrayidx8 = getelementptr inbounds i8*, i8** %7, i32 3
  %8 = load i8*, i8** %arrayidx8, align 4
  %call9 = call i32 @atoi(i8* %8)
  store i32 %call9, i32* %compressed_size, align 4
  br label %if.end10

if.else:                                          ; preds = %if.end5
  %9 = load i32, i32* %input_size, align 4
  store i32 %9, i32* %compressed_size, align 4
  br label %if.end10

if.end10:                                         ; preds = %if.else, %if.then7
  %10 = load i32, i32* %input_size, align 4
  %mul = mul nsw i32 %10, 1048576
  store i32 %mul, i32* getelementptr inbounds ([3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 0, i32 0), align 4
  %11 = load i32, i32* %compressed_size, align 4
  %mul11 = mul nsw i32 %11, 1048576
  store i32 %mul11, i32* getelementptr inbounds ([3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 1, i32 0), align 4
  %12 = load i32, i32* %input_size, align 4
  %mul12 = mul nsw i32 %12, 1048576
  store i32 %mul12, i32* getelementptr inbounds ([3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 2, i32 0), align 4
  %call13 = call i32 @spec_init()
  br label %entry.debug_time.Clone13

entry.debug_time.Clone13:                         ; preds = %if.end10
  store i32 0, i32* %RetValuePtr14
  br label %if.end10.Split

if.end10.Split:                                   ; preds = %entry.debug_time.Clone13
  %RetValue15 = load i32, i32* %RetValuePtr14
  %13 = load i32, i32* @dbglvl, align 4
  %cmp15 = icmp slt i32 2, %13
  br i1 %cmp15, label %if.then16, label %if.end18

if.then16:                                        ; preds = %if.end10.Split
  %call17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @"??_C@_0BE@EEBELGKE@Loading?5Input?5Data?6?$AA@", i32 0, i32 0))
  br label %if.end18

if.end18:                                         ; preds = %if.then16, %if.end10.Split
  %14 = load i32, i32* %input_size, align 4
  %mul19 = mul nsw i32 %14, 1048576
  %15 = load i8*, i8** %input_name, align 4
  %call20 = call i32 @spec_load(i32 0, i8* %15, i32 %mul19)
  %16 = load i32, i32* @dbglvl, align 4
  %cmp21 = icmp slt i32 3, %16
  br i1 %cmp21, label %if.then22, label %if.end24

if.then22:                                        ; preds = %if.end18
  %17 = load i32, i32* getelementptr inbounds ([3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 0, i32 1), align 4
  %call23 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @"??_C@_0BP@KDCDDFCD@Input?5data?5?$CFd?5bytes?5in?5length?6?$AA@", i32 0, i32 0), i32 %17)
  br label %if.end24

if.end24:                                         ; preds = %if.then22, %if.end18
  %18 = load i32, i32* %input_size, align 4
  %mul25 = mul nsw i32 %18, 1048576
  %div = sdiv i32 %mul25, 1024
  %call26 = call noalias i8* @malloc(i32 %div) #2
  store i8* %call26, i8** %validate_array, align 4
  %19 = load i8*, i8** %validate_array, align 4
  %cmp27 = icmp eq i8* %19, null
  br i1 %cmp27, label %if.then28, label %if.end30

if.then28:                                        ; preds = %if.end24
  %call29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @"??_C@_0BP@KJFPKECC@main?3?5Error?5mallocing?5memory?$CB?6?$AA@", i32 0, i32 0))
  call void @exit(i32 1) #7
  unreachable

if.end30:                                         ; preds = %if.end24
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end30
  %20 = load i32, i32* %i, align 4
  %mul31 = mul nsw i32 %20, 1027
  %21 = load i32, i32* %input_size, align 4
  %mul32 = mul nsw i32 %21, 1048576
  %cmp33 = icmp slt i32 %mul31, %mul32
  br i1 %cmp33, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %22 = load i8*, i8** getelementptr inbounds ([3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 0, i32 3), align 4
  %23 = load i32, i32* %i, align 4
  %mul34 = mul nsw i32 %23, 1027
  %arrayidx35 = getelementptr inbounds i8, i8* %22, i32 %mul34
  %24 = load i8, i8* %arrayidx35, align 1
  %25 = load i8*, i8** %validate_array, align 4
  %26 = load i32, i32* %i, align 4
  %arrayidx36 = getelementptr inbounds i8, i8* %25, i32 %26
  store i8 %24, i8* %arrayidx36, align 1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %27 = load i32, i32* %i, align 4
  %inc = add nsw i32 %27, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  call void @spec_initbufs()
  store i32 1, i32* %level, align 4
  br label %for.cond37

for.cond37:                                       ; preds = %for.inc88, %for.end
  %28 = load i32, i32* %level, align 4
  %cmp38 = icmp sle i32 %28, 9
  br i1 %cmp38, label %for.body39, label %for.end89

for.body39:                                       ; preds = %for.cond37
  br label %entry.debug_time.Clone10

entry.debug_time.Clone10:                         ; preds = %for.body39
  store i32 0, i32* %RetValuePtr11
  br label %for.body39.Split

for.body39.Split:                                 ; preds = %entry.debug_time.Clone10
  %RetValue12 = load i32, i32* %RetValuePtr11
  %29 = load i32, i32* @dbglvl, align 4
  %cmp41 = icmp slt i32 2, %29
  br i1 %cmp41, label %if.then42, label %if.end44

if.then42:                                        ; preds = %for.body39.Split
  %30 = load i32, i32* %level, align 4
  %call43 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @"??_C@_0CC@KJFJJBAE@Compressing?5Input?5Data?0?5level?5?$CFd@", i32 0, i32 0), i32 %30)
  br label %if.end44

if.end44:                                         ; preds = %if.then42, %for.body39.Split
  %31 = load i32, i32* %level, align 4
  call void @spec_compress(i32 0, i32 1, i32 %31)
  br label %entry.debug_time.Clone7

entry.debug_time.Clone7:                          ; preds = %if.end44
  store i32 0, i32* %RetValuePtr8
  br label %if.end44.Split

if.end44.Split:                                   ; preds = %entry.debug_time.Clone7
  %RetValue9 = load i32, i32* %RetValuePtr8
  %32 = load i32, i32* @dbglvl, align 4
  %cmp46 = icmp slt i32 3, %32
  br i1 %cmp46, label %if.then47, label %if.end49

if.then47:                                        ; preds = %if.end44.Split
  %33 = load i32, i32* getelementptr inbounds ([3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 1, i32 1), align 4
  %call48 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @"??_C@_0CE@PFHIOJOC@Compressed?5data?5?$CFd?5bytes?5in?5leng@", i32 0, i32 0), i32 %33)
  br label %if.end49

if.end49:                                         ; preds = %if.then47, %if.end44.Split
  br label %entry.spec_reset.Clone29

entry.spec_reset.Clone29:                         ; preds = %if.end49
  %fd.addr.spec_reset.Clone30 = alloca i32, align 4
  store i32 0, i32* %fd.addr.spec_reset.Clone30, align 4
  %34 = load i32, i32* %fd.addr.spec_reset.Clone30, align 4
  %arrayidx.spec_reset.Clone31 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %34
  %buf.spec_reset.Clone32 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx.spec_reset.Clone31, i32 0, i32 3
  %35 = load i8*, i8** %buf.spec_reset.Clone32, align 4
  %36 = load i32, i32* %fd.addr.spec_reset.Clone30, align 4
  %arrayidx1.spec_reset.Clone33 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %36
  %len.spec_reset.Clone34 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx1.spec_reset.Clone33, i32 0, i32 1
  %37 = load i32, i32* %len.spec_reset.Clone34, align 4
  call void @llvm.memset.p0i8.i32(i8* align 1 %35, i8 0, i32 %37, i1 false)
  %38 = load i32, i32* %fd.addr.spec_reset.Clone30, align 4
  %arrayidx2.spec_reset.Clone35 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %38
  %len3.spec_reset.Clone36 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx2.spec_reset.Clone35, i32 0, i32 1
  store i32 0, i32* %len3.spec_reset.Clone36, align 4
  %39 = load i32, i32* %fd.addr.spec_reset.Clone30, align 4
  %arrayidx4.spec_reset.Clone37 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %39
  %pos.spec_reset.Clone38 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx4.spec_reset.Clone37, i32 0, i32 2
  store i32 0, i32* %pos.spec_reset.Clone38, align 4
  store i32 0, i32* %RetValuePtr39
  br label %if.end49.Split28

if.end49.Split28:                                 ; preds = %entry.spec_reset.Clone29
  %RetValue40 = load i32, i32* %RetValuePtr39
  br label %entry.spec_rewind.Clone19

entry.spec_rewind.Clone19:                        ; preds = %if.end49.Split28
  %fd.addr.spec_rewind.Clone20 = alloca i32, align 4
  store i32 1, i32* %fd.addr.spec_rewind.Clone20, align 4
  %40 = load i32, i32* %fd.addr.spec_rewind.Clone20, align 4
  %arrayidx.spec_rewind.Clone21 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %40
  %pos.spec_rewind.Clone22 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx.spec_rewind.Clone21, i32 0, i32 2
  store i32 0, i32* %pos.spec_rewind.Clone22, align 4
  store i32 0, i32* %RetValuePtr23
  br label %if.end49.Split18

if.end49.Split18:                                 ; preds = %entry.spec_rewind.Clone19
  %RetValue24 = load i32, i32* %RetValuePtr23
  br label %entry.debug_time.Clone4

entry.debug_time.Clone4:                          ; preds = %if.end49.Split18
  store i32 0, i32* %RetValuePtr5
  br label %if.end49.Split

if.end49.Split:                                   ; preds = %entry.debug_time.Clone4
  %RetValue6 = load i32, i32* %RetValuePtr5
  %41 = load i32, i32* @dbglvl, align 4
  %cmp53 = icmp slt i32 2, %41
  br i1 %cmp53, label %if.then54, label %if.end56

if.then54:                                        ; preds = %if.end49.Split
  %call55 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @"??_C@_0BE@JICHKDFP@Uncompressing?5Data?6?$AA@", i32 0, i32 0))
  br label %if.end56

if.end56:                                         ; preds = %if.then54, %if.end49.Split
  %42 = load i32, i32* %level, align 4
  call void @spec_uncompress(i32 1, i32 0, i32 %42)
  br label %entry.debug_time.Clone1

entry.debug_time.Clone1:                          ; preds = %if.end56
  store i32 0, i32* %RetValuePtr2
  br label %if.end56.Split

if.end56.Split:                                   ; preds = %entry.debug_time.Clone1
  %RetValue3 = load i32, i32* %RetValuePtr2
  %43 = load i32, i32* @dbglvl, align 4
  %cmp58 = icmp slt i32 3, %43
  br i1 %cmp58, label %if.then59, label %if.end61

if.then59:                                        ; preds = %if.end56.Split
  %44 = load i32, i32* getelementptr inbounds ([3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 0, i32 1), align 4
  %call60 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @"??_C@_0CG@DJIKCILP@Uncompressed?5data?5?$CFd?5bytes?5in?5le@", i32 0, i32 0), i32 %44)
  br label %if.end61

if.end61:                                         ; preds = %if.then59, %if.end56.Split
  store i32 0, i32* %i, align 4
  br label %for.cond62

for.cond62:                                       ; preds = %for.inc77, %if.end61
  %45 = load i32, i32* %i, align 4
  %mul63 = mul nsw i32 %45, 1027
  %46 = load i32, i32* %input_size, align 4
  %mul64 = mul nsw i32 %46, 1048576
  %cmp65 = icmp slt i32 %mul63, %mul64
  br i1 %cmp65, label %for.body66, label %for.end79

for.body66:                                       ; preds = %for.cond62
  %47 = load i8*, i8** %validate_array, align 4
  %48 = load i32, i32* %i, align 4
  %arrayidx67 = getelementptr inbounds i8, i8* %47, i32 %48
  %49 = load i8, i8* %arrayidx67, align 1
  %conv = zext i8 %49 to i32
  %50 = load i8*, i8** getelementptr inbounds ([3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 0, i32 3), align 4
  %51 = load i32, i32* %i, align 4
  %mul68 = mul nsw i32 %51, 1027
  %arrayidx69 = getelementptr inbounds i8, i8* %50, i32 %mul68
  %52 = load i8, i8* %arrayidx69, align 1
  %conv70 = zext i8 %52 to i32
  %cmp71 = icmp ne i32 %conv, %conv70
  br i1 %cmp71, label %if.then73, label %if.end76

if.then73:                                        ; preds = %for.body66
  %53 = load i32, i32* %input_size, align 4
  %call74 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"??_C@_0CD@KACBMJDH@Tested?5?$CFdMB?5buffer?3?5Miscompared?$CB@", i32 0, i32 0), i32 %53)
  %54 = load i32, i32* %input_size, align 4
  %call75 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @"??_C@_0BJ@HBIMNPIC@Tested?5?$CFdMB?5buffer?3?5OK?$CB?6?$AA@", i32 0, i32 0), i32 %54)
  call void @exit(i32 1) #7
  unreachable

if.end76:                                         ; preds = %for.body66
  br label %for.inc77

for.inc77:                                        ; preds = %if.end76
  %55 = load i32, i32* %i, align 4
  %inc78 = add nsw i32 %55, 1
  store i32 %inc78, i32* %i, align 4
  br label %for.cond62

for.end79:                                        ; preds = %for.cond62
  br label %entry.debug_time.Clone

entry.debug_time.Clone:                           ; preds = %for.end79
  store i32 0, i32* %RetValuePtr
  br label %for.end79.Split

for.end79.Split:                                  ; preds = %entry.debug_time.Clone
  %RetValue = load i32, i32* %RetValuePtr
  %56 = load i32, i32* @dbglvl, align 4
  %cmp81 = icmp slt i32 3, %56
  br i1 %cmp81, label %if.then83, label %if.end85

if.then83:                                        ; preds = %for.end79.Split
  %call84 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @"??_C@_0CG@PNDINMCI@Uncompressed?5data?5compared?5corre@", i32 0, i32 0))
  br label %if.end85

if.end85:                                         ; preds = %if.then83, %for.end79.Split
  br label %entry.spec_reset.Clone

entry.spec_reset.Clone:                           ; preds = %if.end85
  %fd.addr.spec_reset.Clone = alloca i32, align 4
  store i32 1, i32* %fd.addr.spec_reset.Clone, align 4
  %57 = load i32, i32* %fd.addr.spec_reset.Clone, align 4
  %arrayidx.spec_reset.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %57
  %buf.spec_reset.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx.spec_reset.Clone, i32 0, i32 3
  %58 = load i8*, i8** %buf.spec_reset.Clone, align 4
  %59 = load i32, i32* %fd.addr.spec_reset.Clone, align 4
  %arrayidx1.spec_reset.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %59
  %len.spec_reset.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx1.spec_reset.Clone, i32 0, i32 1
  %60 = load i32, i32* %len.spec_reset.Clone, align 4
  call void @llvm.memset.p0i8.i32(i8* align 1 %58, i8 0, i32 %60, i1 false)
  %61 = load i32, i32* %fd.addr.spec_reset.Clone, align 4
  %arrayidx2.spec_reset.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %61
  %len3.spec_reset.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx2.spec_reset.Clone, i32 0, i32 1
  store i32 0, i32* %len3.spec_reset.Clone, align 4
  %62 = load i32, i32* %fd.addr.spec_reset.Clone, align 4
  %arrayidx4.spec_reset.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %62
  %pos.spec_reset.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx4.spec_reset.Clone, i32 0, i32 2
  store i32 0, i32* %pos.spec_reset.Clone, align 4
  store i32 0, i32* %RetValuePtr26
  br label %if.end85.Split25

if.end85.Split25:                                 ; preds = %entry.spec_reset.Clone
  %RetValue27 = load i32, i32* %RetValuePtr26
  br label %entry.spec_rewind.Clone

entry.spec_rewind.Clone:                          ; preds = %if.end85.Split25
  %fd.addr.spec_rewind.Clone = alloca i32, align 4
  store i32 0, i32* %fd.addr.spec_rewind.Clone, align 4
  %63 = load i32, i32* %fd.addr.spec_rewind.Clone, align 4
  %arrayidx.spec_rewind.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %63
  %pos.spec_rewind.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx.spec_rewind.Clone, i32 0, i32 2
  store i32 0, i32* %pos.spec_rewind.Clone, align 4
  store i32 0, i32* %RetValuePtr16
  br label %if.end85.Split

if.end85.Split:                                   ; preds = %entry.spec_rewind.Clone
  %RetValue17 = load i32, i32* %RetValuePtr16
  br label %for.inc88

for.inc88:                                        ; preds = %if.end85.Split
  %64 = load i32, i32* %level, align 4
  %add = add nsw i32 %64, 2
  store i32 %add, i32* %level, align 4
  br label %for.cond37

for.end89:                                        ; preds = %for.cond37
  %call90 = call i32 @clock()
  store i32 %call90, i32* %finish, align 4
  %65 = load i32, i32* %finish, align 4
  %66 = load i32, i32* %start, align 4
  %sub = sub nsw i32 %65, %66
  %conv91 = sitofp i32 %sub to double
  %div92 = fdiv double %conv91, 1.000000e+03
  store double %div92, double* %duration, align 8
  %67 = load double, double* %duration, align 8
  %call93 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @"??_C@_0M@NPEDOHBA@?$CFf?5seconds?6?$AA@", i32 0, i32 0), double %67)
  ret i32 0
}

declare dllimport i32 @clock() #3

declare dllimport i32 @atoi(i8*) #3

; Function Attrs: noinline nounwind optnone sspstrong
define dso_local void @spec_initbufs() #0 {
entry:
  store i32 0, i32* @no_name, align 4
  store i32 0, i32* @no_time, align 4
  store i32 0, i32* @time_stamp, align 4
  store i32 0, i32* @save_orig_name, align 4
  store i32 -1, i32* @ifile_size, align 4
  store i32 1, i32* @to_stdout, align 4
  ret void
}

; Function Attrs: noinline optnone sspstrong
define dso_local void @spec_compress(i32 %in, i32 %out, i32 %lev) #1 {
entry:
  %lev.addr = alloca i32, align 4
  %out.addr = alloca i32, align 4
  %in.addr = alloca i32, align 4
  store i32 %lev, i32* %lev.addr, align 4
  store i32 %out, i32* %out.addr, align 4
  store i32 %in, i32* %in.addr, align 4
  %0 = load i32, i32* %lev.addr, align 4
  store i32 %0, i32* @level, align 4
  store i32 0, i32* @part_nb, align 4
  br label %entry.clear_bufs.Clone

entry.clear_bufs.Clone:                           ; preds = %entry
  store i32 0, i32* @outcnt, align 4
  store i32 0, i32* @inptr, align 4
  store i32 0, i32* @insize, align 4
  store i32 0, i32* @bytes_out, align 4
  store i32 0, i32* @bytes_in, align 4
  br label %entry.Split

entry.Split:                                      ; preds = %entry.clear_bufs.Clone
  %1 = load i32, i32* %in.addr, align 4
  store i32 %1, i32* @ifd, align 4
  %2 = load i32, i32* %out.addr, align 4
  store i32 %2, i32* @ofd, align 4
  %3 = load i32, i32* @ofd, align 4
  %4 = load i32, i32* @ifd, align 4
  %call = call i32 @zip(i32 %4, i32 %3)
  ret void
}

; Function Attrs: noinline optnone sspstrong
define dso_local void @spec_uncompress(i32 %in, i32 %out, i32 %lev) #1 {
entry:
  %lev.addr = alloca i32, align 4
  %out.addr = alloca i32, align 4
  %in.addr = alloca i32, align 4
  store i32 %lev, i32* %lev.addr, align 4
  store i32 %out, i32* %out.addr, align 4
  store i32 %in, i32* %in.addr, align 4
  %0 = load i32, i32* %lev.addr, align 4
  store i32 %0, i32* @level, align 4
  store i32 0, i32* @part_nb, align 4
  br label %entry.clear_bufs.Clone

entry.clear_bufs.Clone:                           ; preds = %entry
  store i32 0, i32* @outcnt, align 4
  store i32 0, i32* @inptr, align 4
  store i32 0, i32* @insize, align 4
  store i32 0, i32* @bytes_out, align 4
  store i32 0, i32* @bytes_in, align 4
  br label %entry.Split

entry.Split:                                      ; preds = %entry.clear_bufs.Clone
  %1 = load i32, i32* %in.addr, align 4
  store i32 %1, i32* @ifd, align 4
  %2 = load i32, i32* %out.addr, align 4
  store i32 %2, i32* @ofd, align 4
  %call = call i32 @get_method(i32 1)
  store i32 %call, i32* @method, align 4
  %3 = load i32, i32* @ofd, align 4
  %4 = load i32, i32* @ifd, align 4
  %call1 = call i32 @unzip(i32 %4, i32 %3)
  ret void
}

; Function Attrs: noinline optnone sspstrong
define dso_local void @callprintf(i32 %test) #1 {
entry:
  %test.addr = alloca i32, align 4
  store i32 %test, i32* %test.addr, align 4
  %0 = load i32, i32* %test.addr, align 4
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @"??_C@_0BC@KAMPMJLI@I?5am?5test?5var?5?3?$CFd?$AA@", i32 0, i32 0), i32 %0)
  ret void
}

; Function Attrs: noinline optnone sspstrong
define dso_local void @ct_init(i16* %attr, i32* %methodp) #1 {
entry:
  %methodp.addr = alloca i32*, align 4
  %attr.addr = alloca i16*, align 4
  %n = alloca i32, align 4
  %bits = alloca i32, align 4
  %length = alloca i32, align 4
  %code = alloca i32, align 4
  %dist = alloca i32, align 4
  store i32* %methodp, i32** %methodp.addr, align 4
  store i16* %attr, i16** %attr.addr, align 4
  %0 = load i16*, i16** %attr.addr, align 4
  store i16* %0, i16** @file_type, align 4
  %1 = load i32*, i32** %methodp.addr, align 4
  store i32* %1, i32** @file_method, align 4
  store i32 0, i32* @input_len, align 4
  store i32 0, i32* @compressed_len, align 4
  %2 = load i16, i16* getelementptr inbounds ([30 x %struct.ct_data], [30 x %struct.ct_data]* @static_dtree, i32 0, i32 0, i32 1, i32 0), align 2
  %conv = zext i16 %2 to i32
  %cmp = icmp ne i32 %conv, 0
  %RetValuePtr = alloca i32, align 4
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %return

if.end:                                           ; preds = %entry
  store i32 0, i32* %length, align 4
  store i32 0, i32* %code, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc12, %if.end
  %3 = load i32, i32* %code, align 4
  %cmp2 = icmp slt i32 %3, 28
  br i1 %cmp2, label %for.body, label %for.end14

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %length, align 4
  %5 = load i32, i32* %code, align 4
  %arrayidx = getelementptr inbounds [29 x i32], [29 x i32]* @base_length, i32 0, i32 %5
  store i32 %4, i32* %arrayidx, align 4
  store i32 0, i32* %n, align 4
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc, %for.body
  %6 = load i32, i32* %n, align 4
  %7 = load i32, i32* %code, align 4
  %arrayidx5 = getelementptr inbounds [29 x i32], [29 x i32]* @extra_lbits, i32 0, i32 %7
  %8 = load i32, i32* %arrayidx5, align 4
  %shl = shl i32 1, %8
  %cmp6 = icmp slt i32 %6, %shl
  br i1 %cmp6, label %for.body8, label %for.end

for.body8:                                        ; preds = %for.cond4
  %9 = load i32, i32* %code, align 4
  %conv9 = trunc i32 %9 to i8
  %10 = load i32, i32* %length, align 4
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* %length, align 4
  %arrayidx10 = getelementptr inbounds [256 x i8], [256 x i8]* @length_code, i32 0, i32 %10
  store i8 %conv9, i8* %arrayidx10, align 1
  br label %for.inc

for.inc:                                          ; preds = %for.body8
  %11 = load i32, i32* %n, align 4
  %inc11 = add nsw i32 %11, 1
  store i32 %inc11, i32* %n, align 4
  br label %for.cond4

for.end:                                          ; preds = %for.cond4
  br label %for.inc12

for.inc12:                                        ; preds = %for.end
  %12 = load i32, i32* %code, align 4
  %inc13 = add nsw i32 %12, 1
  store i32 %inc13, i32* %code, align 4
  br label %for.cond

for.end14:                                        ; preds = %for.cond
  %13 = load i32, i32* %code, align 4
  %conv15 = trunc i32 %13 to i8
  %14 = load i32, i32* %length, align 4
  %sub = sub nsw i32 %14, 1
  %arrayidx16 = getelementptr inbounds [256 x i8], [256 x i8]* @length_code, i32 0, i32 %sub
  store i8 %conv15, i8* %arrayidx16, align 1
  store i32 0, i32* %dist, align 4
  store i32 0, i32* %code, align 4
  br label %for.cond17

for.cond17:                                       ; preds = %for.inc34, %for.end14
  %15 = load i32, i32* %code, align 4
  %cmp18 = icmp slt i32 %15, 16
  br i1 %cmp18, label %for.body20, label %for.end36

for.body20:                                       ; preds = %for.cond17
  %16 = load i32, i32* %dist, align 4
  %17 = load i32, i32* %code, align 4
  %arrayidx21 = getelementptr inbounds [30 x i32], [30 x i32]* @base_dist, i32 0, i32 %17
  store i32 %16, i32* %arrayidx21, align 4
  store i32 0, i32* %n, align 4
  br label %for.cond22

for.cond22:                                       ; preds = %for.inc31, %for.body20
  %18 = load i32, i32* %n, align 4
  %19 = load i32, i32* %code, align 4
  %arrayidx23 = getelementptr inbounds [30 x i32], [30 x i32]* @extra_dbits, i32 0, i32 %19
  %20 = load i32, i32* %arrayidx23, align 4
  %shl24 = shl i32 1, %20
  %cmp25 = icmp slt i32 %18, %shl24
  br i1 %cmp25, label %for.body27, label %for.end33

for.body27:                                       ; preds = %for.cond22
  %21 = load i32, i32* %code, align 4
  %conv28 = trunc i32 %21 to i8
  %22 = load i32, i32* %dist, align 4
  %inc29 = add nsw i32 %22, 1
  store i32 %inc29, i32* %dist, align 4
  %arrayidx30 = getelementptr inbounds [512 x i8], [512 x i8]* @dist_code, i32 0, i32 %22
  store i8 %conv28, i8* %arrayidx30, align 1
  br label %for.inc31

for.inc31:                                        ; preds = %for.body27
  %23 = load i32, i32* %n, align 4
  %inc32 = add nsw i32 %23, 1
  store i32 %inc32, i32* %n, align 4
  br label %for.cond22

for.end33:                                        ; preds = %for.cond22
  br label %for.inc34

for.inc34:                                        ; preds = %for.end33
  %24 = load i32, i32* %code, align 4
  %inc35 = add nsw i32 %24, 1
  store i32 %inc35, i32* %code, align 4
  br label %for.cond17

for.end36:                                        ; preds = %for.cond17
  %25 = load i32, i32* %dist, align 4
  %shr = ashr i32 %25, 7
  store i32 %shr, i32* %dist, align 4
  br label %for.cond37

for.cond37:                                       ; preds = %for.inc56, %for.end36
  %26 = load i32, i32* %code, align 4
  %cmp38 = icmp slt i32 %26, 30
  br i1 %cmp38, label %for.body40, label %for.end58

for.body40:                                       ; preds = %for.cond37
  %27 = load i32, i32* %dist, align 4
  %shl41 = shl i32 %27, 7
  %28 = load i32, i32* %code, align 4
  %arrayidx42 = getelementptr inbounds [30 x i32], [30 x i32]* @base_dist, i32 0, i32 %28
  store i32 %shl41, i32* %arrayidx42, align 4
  store i32 0, i32* %n, align 4
  br label %CallOutFuncBB

CallOutFuncBB:                                    ; preds = %for.body40
  call void @for.cond43.OutLineFunc(i32* %n, i32* %code, i32* %dist)
  %29 = getelementptr inbounds %Struct.RetValue.21, %Struct.RetValue.21* @Struct.RetValue.24, i32 0, i32 0
  %30 = load i32*, i32** %29, align 4
  %31 = load i32, i32* %30, align 4
  store i32 %31, i32* %n
  %32 = getelementptr inbounds %Struct.RetValue.21, %Struct.RetValue.21* @Struct.RetValue.24, i32 0, i32 1
  %33 = load i32*, i32** %32, align 4
  %34 = load i32, i32* %33, align 4
  store i32 %34, i32* %dist
  br label %for.inc56

for.inc56:                                        ; preds = %CallOutFuncBB
  %35 = load i32, i32* %code, align 4
  %inc57 = add nsw i32 %35, 1
  store i32 %inc57, i32* %code, align 4
  br label %for.cond37

for.end58:                                        ; preds = %for.cond37
  store i32 0, i32* %bits, align 4
  br label %for.cond59

for.cond59:                                       ; preds = %for.inc64, %for.end58
  %36 = load i32, i32* %bits, align 4
  %cmp60 = icmp sle i32 %36, 15
  br i1 %cmp60, label %for.body62, label %for.end66

for.body62:                                       ; preds = %for.cond59
  %37 = load i32, i32* %bits, align 4
  %arrayidx63 = getelementptr inbounds [16 x i16], [16 x i16]* @bl_count, i32 0, i32 %37
  store i16 0, i16* %arrayidx63, align 2
  br label %for.inc64

for.inc64:                                        ; preds = %for.body62
  %38 = load i32, i32* %bits, align 4
  %inc65 = add nsw i32 %38, 1
  store i32 %inc65, i32* %bits, align 4
  br label %for.cond59

for.end66:                                        ; preds = %for.cond59
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.end66
  %39 = load i32, i32* %n, align 4
  %cmp67 = icmp sle i32 %39, 143
  br i1 %cmp67, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %40 = load i32, i32* %n, align 4
  %inc69 = add nsw i32 %40, 1
  store i32 %inc69, i32* %n, align 4
  %arrayidx70 = getelementptr inbounds [288 x %struct.ct_data], [288 x %struct.ct_data]* @static_ltree, i32 0, i32 %40
  %dl = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx70, i32 0, i32 1
  %len = bitcast %union.anon.5* %dl to i16*
  store i16 8, i16* %len, align 2
  %41 = load i16, i16* getelementptr inbounds ([16 x i16], [16 x i16]* @bl_count, i32 0, i32 8), align 2
  %inc71 = add i16 %41, 1
  store i16 %inc71, i16* getelementptr inbounds ([16 x i16], [16 x i16]* @bl_count, i32 0, i32 8), align 2
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond72

while.cond72:                                     ; preds = %while.body75, %while.end
  %42 = load i32, i32* %n, align 4
  %cmp73 = icmp sle i32 %42, 255
  br i1 %cmp73, label %while.body75, label %while.end81

while.body75:                                     ; preds = %while.cond72
  %43 = load i32, i32* %n, align 4
  %inc76 = add nsw i32 %43, 1
  store i32 %inc76, i32* %n, align 4
  %arrayidx77 = getelementptr inbounds [288 x %struct.ct_data], [288 x %struct.ct_data]* @static_ltree, i32 0, i32 %43
  %dl78 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx77, i32 0, i32 1
  %len79 = bitcast %union.anon.5* %dl78 to i16*
  store i16 9, i16* %len79, align 2
  %44 = load i16, i16* getelementptr inbounds ([16 x i16], [16 x i16]* @bl_count, i32 0, i32 9), align 2
  %inc80 = add i16 %44, 1
  store i16 %inc80, i16* getelementptr inbounds ([16 x i16], [16 x i16]* @bl_count, i32 0, i32 9), align 2
  br label %while.cond72

while.end81:                                      ; preds = %while.cond72
  br label %while.cond82

while.cond82:                                     ; preds = %while.body85, %while.end81
  %45 = load i32, i32* %n, align 4
  %cmp83 = icmp sle i32 %45, 279
  br i1 %cmp83, label %while.body85, label %while.end91

while.body85:                                     ; preds = %while.cond82
  %46 = load i32, i32* %n, align 4
  %inc86 = add nsw i32 %46, 1
  store i32 %inc86, i32* %n, align 4
  %arrayidx87 = getelementptr inbounds [288 x %struct.ct_data], [288 x %struct.ct_data]* @static_ltree, i32 0, i32 %46
  %dl88 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx87, i32 0, i32 1
  %len89 = bitcast %union.anon.5* %dl88 to i16*
  store i16 7, i16* %len89, align 2
  %47 = load i16, i16* getelementptr inbounds ([16 x i16], [16 x i16]* @bl_count, i32 0, i32 7), align 2
  %inc90 = add i16 %47, 1
  store i16 %inc90, i16* getelementptr inbounds ([16 x i16], [16 x i16]* @bl_count, i32 0, i32 7), align 2
  br label %while.cond82

while.end91:                                      ; preds = %while.cond82
  br label %while.cond92

while.cond92:                                     ; preds = %while.body95, %while.end91
  %48 = load i32, i32* %n, align 4
  %cmp93 = icmp sle i32 %48, 287
  br i1 %cmp93, label %while.body95, label %while.end101

while.body95:                                     ; preds = %while.cond92
  %49 = load i32, i32* %n, align 4
  %inc96 = add nsw i32 %49, 1
  store i32 %inc96, i32* %n, align 4
  %arrayidx97 = getelementptr inbounds [288 x %struct.ct_data], [288 x %struct.ct_data]* @static_ltree, i32 0, i32 %49
  %dl98 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx97, i32 0, i32 1
  %len99 = bitcast %union.anon.5* %dl98 to i16*
  store i16 8, i16* %len99, align 2
  %50 = load i16, i16* getelementptr inbounds ([16 x i16], [16 x i16]* @bl_count, i32 0, i32 8), align 2
  %inc100 = add i16 %50, 1
  store i16 %inc100, i16* getelementptr inbounds ([16 x i16], [16 x i16]* @bl_count, i32 0, i32 8), align 2
  br label %while.cond92

while.end101:                                     ; preds = %while.cond92
  call void @gen_codes(%struct.ct_data* getelementptr inbounds ([288 x %struct.ct_data], [288 x %struct.ct_data]* @static_ltree, i32 0, i32 0), i32 287)
  store i32 0, i32* %n, align 4
  br label %for.cond102

for.cond102:                                      ; preds = %for.inc112, %while.end101
  %51 = load i32, i32* %n, align 4
  %cmp103 = icmp slt i32 %51, 30
  br i1 %cmp103, label %for.body105, label %for.end114

for.body105:                                      ; preds = %for.cond102
  %52 = load i32, i32* %n, align 4
  %arrayidx106 = getelementptr inbounds [30 x %struct.ct_data], [30 x %struct.ct_data]* @static_dtree, i32 0, i32 %52
  %dl107 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx106, i32 0, i32 1
  %len108 = bitcast %union.anon.5* %dl107 to i16*
  store i16 5, i16* %len108, align 2
  %53 = load i32, i32* %n, align 4
  br label %entry.bi_reverse.Clone

entry.bi_reverse.Clone:                           ; preds = %for.body105
  %len.addr.bi_reverse.Clone = alloca i32, align 4
  %code.addr.bi_reverse.Clone = alloca i32, align 4
  %res.bi_reverse.Clone = alloca i32, align 4
  store i32 5, i32* %len.addr.bi_reverse.Clone, align 4
  store i32 %53, i32* %code.addr.bi_reverse.Clone, align 4
  store i32 0, i32* %res.bi_reverse.Clone, align 4
  br label %do.body.bi_reverse.Clone

do.body.bi_reverse.Clone:                         ; preds = %do.cond.bi_reverse.Clone, %entry.bi_reverse.Clone
  %54 = load i32, i32* %code.addr.bi_reverse.Clone, align 4
  %and.bi_reverse.Clone = and i32 %54, 1
  %55 = load i32, i32* %res.bi_reverse.Clone, align 4
  %or.bi_reverse.Clone = or i32 %55, %and.bi_reverse.Clone
  store i32 %or.bi_reverse.Clone, i32* %res.bi_reverse.Clone, align 4
  %56 = load i32, i32* %code.addr.bi_reverse.Clone, align 4
  %shr.bi_reverse.Clone = lshr i32 %56, 1
  store i32 %shr.bi_reverse.Clone, i32* %code.addr.bi_reverse.Clone, align 4
  %57 = load i32, i32* %res.bi_reverse.Clone, align 4
  %shl.bi_reverse.Clone = shl i32 %57, 1
  store i32 %shl.bi_reverse.Clone, i32* %res.bi_reverse.Clone, align 4
  br label %do.cond.bi_reverse.Clone

do.cond.bi_reverse.Clone:                         ; preds = %do.body.bi_reverse.Clone
  %58 = load i32, i32* %len.addr.bi_reverse.Clone, align 4
  %dec.bi_reverse.Clone = add nsw i32 %58, -1
  store i32 %dec.bi_reverse.Clone, i32* %len.addr.bi_reverse.Clone, align 4
  %cmp.bi_reverse.Clone = icmp sgt i32 %dec.bi_reverse.Clone, 0
  br i1 %cmp.bi_reverse.Clone, label %do.body.bi_reverse.Clone, label %do.end.bi_reverse.Clone

do.end.bi_reverse.Clone:                          ; preds = %do.cond.bi_reverse.Clone
  %59 = load i32, i32* %res.bi_reverse.Clone, align 4
  %shr1.bi_reverse.Clone = lshr i32 %59, 1
  store i32 %shr1.bi_reverse.Clone, i32* %RetValuePtr
  br label %for.body105.Split

for.body105.Split:                                ; preds = %do.end.bi_reverse.Clone
  %RetValue = load i32, i32* %RetValuePtr
  %conv109 = trunc i32 %RetValue to i16
  %60 = load i32, i32* %n, align 4
  %arrayidx110 = getelementptr inbounds [30 x %struct.ct_data], [30 x %struct.ct_data]* @static_dtree, i32 0, i32 %60
  %fc = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx110, i32 0, i32 0
  %code111 = bitcast %union.anon.5* %fc to i16*
  store i16 %conv109, i16* %code111, align 2
  br label %for.inc112

for.inc112:                                       ; preds = %for.body105.Split
  %61 = load i32, i32* %n, align 4
  %inc113 = add nsw i32 %61, 1
  store i32 %inc113, i32* %n, align 4
  br label %for.cond102

for.end114:                                       ; preds = %for.cond102
  call void @init_block()
  br label %return

return:                                           ; preds = %for.end114, %if.then
  ret void
}

; Function Attrs: noinline optnone sspstrong
define internal void @gen_codes(%struct.ct_data* %tree, i32 %max_code) #1 {
entry:
  %max_code.addr = alloca i32, align 4
  %tree.addr = alloca %struct.ct_data*, align 4
  %next_code = alloca [16 x i16], align 2
  %code = alloca i16, align 2
  %bits = alloca i32, align 4
  %n = alloca i32, align 4
  %len = alloca i32, align 4
  store i32 %max_code, i32* %max_code.addr, align 4
  store %struct.ct_data* %tree, %struct.ct_data** %tree.addr, align 4
  store i16 0, i16* %code, align 2
  store i32 1, i32* %bits, align 4
  %RetValuePtr = alloca i32, align 4
  br label %CallOutFuncBB

CallOutFuncBB:                                    ; preds = %entry
  call void @for.cond.OutLineFunc.26(i32* %bits, i16* %code, [16 x i16]* %next_code, i32* %n)
  %0 = getelementptr inbounds %Struct.RetValue.22, %Struct.RetValue.22* @Struct.RetValue.25, i32 0, i32 0
  %1 = load i32*, i32** %0, align 4
  %2 = load i32, i32* %1, align 4
  store i32 %2, i32* %bits
  %3 = getelementptr inbounds %Struct.RetValue.22, %Struct.RetValue.22* @Struct.RetValue.25, i32 0, i32 1
  %4 = load i16*, i16** %3, align 4
  %5 = load i16, i16* %4, align 4
  store i16 %5, i16* %code
  %6 = getelementptr inbounds %Struct.RetValue.22, %Struct.RetValue.22* @Struct.RetValue.25, i32 0, i32 2
  %7 = load i32*, i32** %6, align 4
  %8 = load i32, i32* %7, align 4
  store i32 %8, i32* %n
  br label %for.cond4

for.cond4:                                        ; preds = %CallOutFuncBB, %for.inc19
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %max_code.addr, align 4
  %cmp5 = icmp sle i32 %9, %10
  br i1 %cmp5, label %for.body7, label %for.end21

for.body7:                                        ; preds = %for.cond4
  %11 = load %struct.ct_data*, %struct.ct_data** %tree.addr, align 4
  %12 = load i32, i32* %n, align 4
  %arrayidx8 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %11, i32 %12
  %dl = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx8, i32 0, i32 1
  %len9 = bitcast %union.anon.5* %dl to i16*
  %13 = load i16, i16* %len9, align 2
  %conv10 = zext i16 %13 to i32
  store i32 %conv10, i32* %len, align 4
  %14 = load i32, i32* %len, align 4
  %cmp11 = icmp eq i32 %14, 0
  br i1 %cmp11, label %if.then, label %if.end

if.then:                                          ; preds = %for.body7
  br label %for.inc19

if.end:                                           ; preds = %for.body7
  %15 = load i32, i32* %len, align 4
  %16 = load i32, i32* %len, align 4
  %arrayidx13 = getelementptr inbounds [16 x i16], [16 x i16]* %next_code, i32 0, i32 %16
  %17 = load i16, i16* %arrayidx13, align 2
  %inc14 = add i16 %17, 1
  store i16 %inc14, i16* %arrayidx13, align 2
  %conv15 = zext i16 %17 to i32
  br label %entry.bi_reverse.Clone

entry.bi_reverse.Clone:                           ; preds = %if.end
  %len.addr.bi_reverse.Clone = alloca i32, align 4
  %code.addr.bi_reverse.Clone = alloca i32, align 4
  %res.bi_reverse.Clone = alloca i32, align 4
  store i32 %15, i32* %len.addr.bi_reverse.Clone, align 4
  store i32 %conv15, i32* %code.addr.bi_reverse.Clone, align 4
  store i32 0, i32* %res.bi_reverse.Clone, align 4
  br label %do.body.bi_reverse.Clone

do.body.bi_reverse.Clone:                         ; preds = %do.cond.bi_reverse.Clone, %entry.bi_reverse.Clone
  %18 = load i32, i32* %code.addr.bi_reverse.Clone, align 4
  %and.bi_reverse.Clone = and i32 %18, 1
  %19 = load i32, i32* %res.bi_reverse.Clone, align 4
  %or.bi_reverse.Clone = or i32 %19, %and.bi_reverse.Clone
  store i32 %or.bi_reverse.Clone, i32* %res.bi_reverse.Clone, align 4
  %20 = load i32, i32* %code.addr.bi_reverse.Clone, align 4
  %shr.bi_reverse.Clone = lshr i32 %20, 1
  store i32 %shr.bi_reverse.Clone, i32* %code.addr.bi_reverse.Clone, align 4
  %21 = load i32, i32* %res.bi_reverse.Clone, align 4
  %shl.bi_reverse.Clone = shl i32 %21, 1
  store i32 %shl.bi_reverse.Clone, i32* %res.bi_reverse.Clone, align 4
  br label %do.cond.bi_reverse.Clone

do.cond.bi_reverse.Clone:                         ; preds = %do.body.bi_reverse.Clone
  %22 = load i32, i32* %len.addr.bi_reverse.Clone, align 4
  %dec.bi_reverse.Clone = add nsw i32 %22, -1
  store i32 %dec.bi_reverse.Clone, i32* %len.addr.bi_reverse.Clone, align 4
  %cmp.bi_reverse.Clone = icmp sgt i32 %dec.bi_reverse.Clone, 0
  br i1 %cmp.bi_reverse.Clone, label %do.body.bi_reverse.Clone, label %do.end.bi_reverse.Clone

do.end.bi_reverse.Clone:                          ; preds = %do.cond.bi_reverse.Clone
  %23 = load i32, i32* %res.bi_reverse.Clone, align 4
  %shr1.bi_reverse.Clone = lshr i32 %23, 1
  store i32 %shr1.bi_reverse.Clone, i32* %RetValuePtr
  br label %if.end.Split

if.end.Split:                                     ; preds = %do.end.bi_reverse.Clone
  %RetValue = load i32, i32* %RetValuePtr
  %conv16 = trunc i32 %RetValue to i16
  %24 = load %struct.ct_data*, %struct.ct_data** %tree.addr, align 4
  %25 = load i32, i32* %n, align 4
  %arrayidx17 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %24, i32 %25
  %fc = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx17, i32 0, i32 0
  %code18 = bitcast %union.anon.5* %fc to i16*
  store i16 %conv16, i16* %code18, align 2
  br label %for.inc19

for.inc19:                                        ; preds = %if.end.Split, %if.then
  %26 = load i32, i32* %n, align 4
  %inc20 = add nsw i32 %26, 1
  store i32 %inc20, i32* %n, align 4
  br label %for.cond4

for.end21:                                        ; preds = %for.cond4
  ret void
}

; Function Attrs: noinline nounwind optnone sspstrong
define internal void @init_block() #0 {
entry:
  %n = alloca i32, align 4
  store i32 0, i32* %n, align 4
  br label %CallOutFuncBB

CallOutFuncBB:                                    ; preds = %entry
  call void @for.cond.OutLineFunc.28(i32* %n)
  %0 = getelementptr inbounds %Struct.RetValue.23, %Struct.RetValue.23* @Struct.RetValue.27, i32 0, i32 0
  %1 = load i32*, i32** %0, align 4
  %2 = load i32, i32* %1, align 4
  store i32 %2, i32* %n
  br label %for.cond1

for.cond1:                                        ; preds = %CallOutFuncBB, %for.inc7
  %3 = load i32, i32* %n, align 4
  %cmp2 = icmp slt i32 %3, 30
  br i1 %cmp2, label %for.body3, label %for.end9

for.body3:                                        ; preds = %for.cond1
  %4 = load i32, i32* %n, align 4
  %arrayidx4 = getelementptr inbounds [61 x %struct.ct_data], [61 x %struct.ct_data]* @dyn_dtree, i32 0, i32 %4
  %fc5 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx4, i32 0, i32 0
  %freq6 = bitcast %union.anon.5* %fc5 to i16*
  store i16 0, i16* %freq6, align 2
  br label %for.inc7

for.inc7:                                         ; preds = %for.body3
  %5 = load i32, i32* %n, align 4
  %inc8 = add nsw i32 %5, 1
  store i32 %inc8, i32* %n, align 4
  br label %for.cond1

for.end9:                                         ; preds = %for.cond1
  store i32 0, i32* %n, align 4
  br label %for.cond10

for.cond10:                                       ; preds = %for.inc16, %for.end9
  %6 = load i32, i32* %n, align 4
  %cmp11 = icmp slt i32 %6, 19
  br i1 %cmp11, label %for.body12, label %for.end18

for.body12:                                       ; preds = %for.cond10
  %7 = load i32, i32* %n, align 4
  %arrayidx13 = getelementptr inbounds [39 x %struct.ct_data], [39 x %struct.ct_data]* @bl_tree, i32 0, i32 %7
  %fc14 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx13, i32 0, i32 0
  %freq15 = bitcast %union.anon.5* %fc14 to i16*
  store i16 0, i16* %freq15, align 2
  br label %for.inc16

for.inc16:                                        ; preds = %for.body12
  %8 = load i32, i32* %n, align 4
  %inc17 = add nsw i32 %8, 1
  store i32 %inc17, i32* %n, align 4
  br label %for.cond10

for.end18:                                        ; preds = %for.cond10
  store i16 1, i16* getelementptr inbounds ([573 x %struct.ct_data], [573 x %struct.ct_data]* @dyn_ltree, i32 0, i32 256, i32 0, i32 0), align 2
  store i32 0, i32* @static_len, align 4
  store i32 0, i32* @opt_len, align 4
  store i32 0, i32* @last_flags, align 4
  store i32 0, i32* @last_dist, align 4
  store i32 0, i32* @last_lit, align 4
  store i8 0, i8* @flags, align 1
  store i8 1, i8* @flag_bit, align 1
  ret void
}

; Function Attrs: noinline optnone sspstrong
define dso_local i32 @flush_block(i8* %buf, i32 %stored_len, i32 %eof) #1 {
entry:
  %eof.addr = alloca i32, align 4
  %stored_len.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 4
  %opt_lenb = alloca i32, align 4
  %static_lenb = alloca i32, align 4
  %max_blindex = alloca i32, align 4
  store i32 %eof, i32* %eof.addr, align 4
  store i32 %stored_len, i32* %stored_len.addr, align 4
  store i8* %buf, i8** %buf.addr, align 4
  %0 = load i8, i8* @flags, align 1
  %1 = load i32, i32* @last_flags, align 4
  %arrayidx = getelementptr inbounds [4096 x i8], [4096 x i8]* @flag_buf, i32 0, i32 %1
  store i8 %0, i8* %arrayidx, align 1
  %2 = load i16*, i16** @file_type, align 4
  %3 = load i16, i16* %2, align 2
  %conv = zext i16 %3 to i32
  %cmp = icmp eq i32 %conv, 65535
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @set_file_type()
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  call void @build_tree(%struct.tree_desc* @l_desc)
  call void @build_tree(%struct.tree_desc* @d_desc)
  %call = call i32 @build_bl_tree()
  store i32 %call, i32* %max_blindex, align 4
  %4 = load i32, i32* @opt_len, align 4
  %add = add i32 %4, 3
  %add2 = add i32 %add, 7
  %shr = lshr i32 %add2, 3
  store i32 %shr, i32* %opt_lenb, align 4
  %5 = load i32, i32* @static_len, align 4
  %add3 = add i32 %5, 3
  %add4 = add i32 %add3, 7
  %shr5 = lshr i32 %add4, 3
  store i32 %shr5, i32* %static_lenb, align 4
  %6 = load i32, i32* %stored_len.addr, align 4
  %7 = load i32, i32* @input_len, align 4
  %add6 = add i32 %7, %6
  store i32 %add6, i32* @input_len, align 4
  %8 = load i32, i32* %static_lenb, align 4
  %9 = load i32, i32* %opt_lenb, align 4
  %cmp7 = icmp ule i32 %8, %9
  br i1 %cmp7, label %if.then9, label %if.end10

if.then9:                                         ; preds = %if.end
  %10 = load i32, i32* %static_lenb, align 4
  store i32 %10, i32* %opt_lenb, align 4
  br label %if.end10

if.end10:                                         ; preds = %if.then9, %if.end
  %11 = load i32, i32* %stored_len.addr, align 4
  %12 = load i32, i32* %opt_lenb, align 4
  %cmp11 = icmp ule i32 %11, %12
  br i1 %cmp11, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.end10
  %13 = load i32, i32* %eof.addr, align 4
  %tobool = icmp ne i32 %13, 0
  br i1 %tobool, label %land.lhs.true13, label %if.else

land.lhs.true13:                                  ; preds = %land.lhs.true
  %14 = load i32, i32* @compressed_len, align 4
  %cmp14 = icmp eq i32 %14, 0
  br i1 %cmp14, label %land.lhs.true16, label %if.else

land.lhs.true16:                                  ; preds = %land.lhs.true13
  br i1 false, label %CallOutFuncBB, label %if.else

CallOutFuncBB:                                    ; preds = %land.lhs.true16
  call void @if.then17.OutLineFunc(i8** %buf.addr, i32* %stored_len.addr)
  br label %if.end51

if.else:                                          ; preds = %land.lhs.true16, %land.lhs.true13, %land.lhs.true, %if.end10
  %15 = load i32, i32* %stored_len.addr, align 4
  %add22 = add i32 %15, 4
  %16 = load i32, i32* %opt_lenb, align 4
  %cmp23 = icmp ule i32 %add22, %16
  br i1 %cmp23, label %land.lhs.true25, label %if.else35

land.lhs.true25:                                  ; preds = %if.else
  %17 = load i8*, i8** %buf.addr, align 4
  %cmp26 = icmp ne i8* %17, null
  br i1 %cmp26, label %if.then28, label %if.else35

if.then28:                                        ; preds = %land.lhs.true25
  %18 = load i32, i32* %eof.addr, align 4
  %add29 = add nsw i32 0, %18
  call void @send_bits(i32 %add29, i32 3)
  %19 = load i32, i32* @compressed_len, align 4
  %add30 = add i32 %19, 3
  %add31 = add i32 %add30, 7
  %and = and i32 %add31, -8
  store i32 %and, i32* @compressed_len, align 4
  %20 = load i32, i32* %stored_len.addr, align 4
  %add32 = add i32 %20, 4
  %shl33 = shl i32 %add32, 3
  %21 = load i32, i32* @compressed_len, align 4
  %add34 = add i32 %21, %shl33
  store i32 %add34, i32* @compressed_len, align 4
  %22 = load i32, i32* %stored_len.addr, align 4
  %23 = load i8*, i8** %buf.addr, align 4
  call void @copy_block(i8* %23, i32 %22, i32 1)
  br label %if.end50

if.else35:                                        ; preds = %land.lhs.true25, %if.else
  %24 = load i32, i32* %static_lenb, align 4
  %25 = load i32, i32* %opt_lenb, align 4
  %cmp36 = icmp eq i32 %24, %25
  br i1 %cmp36, label %if.then38, label %if.else42

if.then38:                                        ; preds = %if.else35
  %26 = load i32, i32* %eof.addr, align 4
  %add39 = add nsw i32 2, %26
  call void @send_bits(i32 %add39, i32 3)
  call void @compress_block(%struct.ct_data* getelementptr inbounds ([288 x %struct.ct_data], [288 x %struct.ct_data]* @static_ltree, i32 0, i32 0), %struct.ct_data* getelementptr inbounds ([30 x %struct.ct_data], [30 x %struct.ct_data]* @static_dtree, i32 0, i32 0))
  %27 = load i32, i32* @static_len, align 4
  %add40 = add i32 3, %27
  %28 = load i32, i32* @compressed_len, align 4
  %add41 = add i32 %28, %add40
  store i32 %add41, i32* @compressed_len, align 4
  br label %if.end49

if.else42:                                        ; preds = %if.else35
  %29 = load i32, i32* %eof.addr, align 4
  %add43 = add nsw i32 4, %29
  call void @send_bits(i32 %add43, i32 3)
  %30 = load i32, i32* %max_blindex, align 4
  %add44 = add nsw i32 %30, 1
  %31 = load i32, i32* getelementptr inbounds (%struct.tree_desc, %struct.tree_desc* @d_desc, i32 0, i32 6), align 4
  %add45 = add nsw i32 %31, 1
  %32 = load i32, i32* getelementptr inbounds (%struct.tree_desc, %struct.tree_desc* @l_desc, i32 0, i32 6), align 4
  %add46 = add nsw i32 %32, 1
  call void @send_all_trees(i32 %add46, i32 %add45, i32 %add44)
  call void @compress_block(%struct.ct_data* getelementptr inbounds ([573 x %struct.ct_data], [573 x %struct.ct_data]* @dyn_ltree, i32 0, i32 0), %struct.ct_data* getelementptr inbounds ([61 x %struct.ct_data], [61 x %struct.ct_data]* @dyn_dtree, i32 0, i32 0))
  %33 = load i32, i32* @opt_len, align 4
  %add47 = add i32 3, %33
  %34 = load i32, i32* @compressed_len, align 4
  %add48 = add i32 %34, %add47
  store i32 %add48, i32* @compressed_len, align 4
  br label %if.end49

if.end49:                                         ; preds = %if.else42, %if.then38
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.then28
  br label %if.end51

if.end51:                                         ; preds = %CallOutFuncBB, %if.end50
  call void @init_block()
  %35 = load i32, i32* %eof.addr, align 4
  %tobool52 = icmp ne i32 %35, 0
  br i1 %tobool52, label %if.then53, label %if.end55

if.then53:                                        ; preds = %if.end51
  call void @bi_windup()
  %36 = load i32, i32* @compressed_len, align 4
  %add54 = add i32 %36, 7
  store i32 %add54, i32* @compressed_len, align 4
  br label %if.end55

if.end55:                                         ; preds = %if.then53, %if.end51
  %37 = load i32, i32* @compressed_len, align 4
  %shr56 = lshr i32 %37, 3
  ret i32 %shr56
}

; Function Attrs: noinline optnone sspstrong
define internal void @set_file_type() #1 {
entry:
  %n = alloca i32, align 4
  %ascii_freq = alloca i32, align 4
  %bin_freq = alloca i32, align 4
  store i32 0, i32* %n, align 4
  store i32 0, i32* %ascii_freq, align 4
  store i32 0, i32* %bin_freq, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i32, i32* %n, align 4
  %cmp = icmp slt i32 %0, 7
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %1 = load i32, i32* %n, align 4
  %inc = add nsw i32 %1, 1
  store i32 %inc, i32* %n, align 4
  %arrayidx = getelementptr inbounds [573 x %struct.ct_data], [573 x %struct.ct_data]* @dyn_ltree, i32 0, i32 %1
  %fc = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx, i32 0, i32 0
  %freq = bitcast %union.anon.5* %fc to i16*
  %2 = load i16, i16* %freq, align 2
  %conv = zext i16 %2 to i32
  %3 = load i32, i32* %bin_freq, align 4
  %add = add i32 %3, %conv
  store i32 %add, i32* %bin_freq, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond1

while.cond1:                                      ; preds = %while.body4, %while.end
  %4 = load i32, i32* %n, align 4
  %cmp2 = icmp slt i32 %4, 128
  br i1 %cmp2, label %while.body4, label %while.end11

while.body4:                                      ; preds = %while.cond1
  %5 = load i32, i32* %n, align 4
  %inc5 = add nsw i32 %5, 1
  store i32 %inc5, i32* %n, align 4
  %arrayidx6 = getelementptr inbounds [573 x %struct.ct_data], [573 x %struct.ct_data]* @dyn_ltree, i32 0, i32 %5
  %fc7 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx6, i32 0, i32 0
  %freq8 = bitcast %union.anon.5* %fc7 to i16*
  %6 = load i16, i16* %freq8, align 2
  %conv9 = zext i16 %6 to i32
  %7 = load i32, i32* %ascii_freq, align 4
  %add10 = add i32 %7, %conv9
  store i32 %add10, i32* %ascii_freq, align 4
  br label %while.cond1

while.end11:                                      ; preds = %while.cond1
  br label %CallOutFuncBB

CallOutFuncBB:                                    ; preds = %while.end11
  call void @while.cond12.OutLineFunc(i32* %n, i32* %bin_freq)
  %8 = getelementptr inbounds %Struct.RetValue.25, %Struct.RetValue.25* @Struct.RetValue.30, i32 0, i32 0
  %9 = load i32*, i32** %8, align 4
  %10 = load i32, i32* %9, align 4
  store i32 %10, i32* %n
  %11 = getelementptr inbounds %Struct.RetValue.25, %Struct.RetValue.25* @Struct.RetValue.30, i32 0, i32 1
  %12 = load i32*, i32** %11, align 4
  %13 = load i32, i32* %12, align 4
  store i32 %13, i32* %bin_freq
  br label %new

new:                                              ; preds = %CallOutFuncBB
  %14 = load i32, i32* %bin_freq, align 4
  %15 = load i32, i32* %ascii_freq, align 4
  %shr = lshr i32 %15, 2
  %cmp23 = icmp ugt i32 %14, %shr
  %16 = zext i1 %cmp23 to i64
  %cond = select i1 %cmp23, i32 0, i32 1
  %conv25 = trunc i32 %cond to i16
  %17 = load i16*, i16** @file_type, align 4
  store i16 %conv25, i16* %17, align 2
  %18 = load i16*, i16** @file_type, align 4
  %19 = load i16, i16* %18, align 2
  %conv26 = zext i16 %19 to i32
  %cmp27 = icmp eq i32 %conv26, 0
  br i1 %cmp27, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %new
  br i1 false, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  call void @warn(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @"??_C@_0BH@BPJOINOA@?9l?5used?5on?5binary?5file?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @"??_C@_00CNPNBAHC@?$AA@", i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %new
  ret void
}

; Function Attrs: noinline optnone sspstrong
define internal void @build_tree(%struct.tree_desc* %desc) #1 {
entry:
  %desc.addr = alloca %struct.tree_desc*, align 4
  %tree = alloca %struct.ct_data*, align 4
  %stree = alloca %struct.ct_data*, align 4
  %elems = alloca i32, align 4
  %n = alloca i32, align 4
  %m = alloca i32, align 4
  %max_code = alloca i32, align 4
  %node = alloca i32, align 4
  %new = alloca i32, align 4
  store %struct.tree_desc* %desc, %struct.tree_desc** %desc.addr, align 4
  %0 = load %struct.tree_desc*, %struct.tree_desc** %desc.addr, align 4
  %dyn_tree = getelementptr inbounds %struct.tree_desc, %struct.tree_desc* %0, i32 0, i32 0
  %1 = load %struct.ct_data*, %struct.ct_data** %dyn_tree, align 4
  store %struct.ct_data* %1, %struct.ct_data** %tree, align 4
  %2 = load %struct.tree_desc*, %struct.tree_desc** %desc.addr, align 4
  %static_tree = getelementptr inbounds %struct.tree_desc, %struct.tree_desc* %2, i32 0, i32 1
  %3 = load %struct.ct_data*, %struct.ct_data** %static_tree, align 4
  store %struct.ct_data* %3, %struct.ct_data** %stree, align 4
  %4 = load %struct.tree_desc*, %struct.tree_desc** %desc.addr, align 4
  %elems1 = getelementptr inbounds %struct.tree_desc, %struct.tree_desc* %4, i32 0, i32 4
  %5 = load i32, i32* %elems1, align 4
  store i32 %5, i32* %elems, align 4
  store i32 -1, i32* %max_code, align 4
  %6 = load i32, i32* %elems, align 4
  store i32 %6, i32* %node, align 4
  store i32 0, i32* @heap_len, align 4
  store i32 573, i32* @heap_max, align 4
  store i32 0, i32* %n, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %elems, align 4
  %cmp = icmp slt i32 %7, %8
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %9 = load %struct.ct_data*, %struct.ct_data** %tree, align 4
  %10 = load i32, i32* %n, align 4
  %arrayidx = getelementptr inbounds %struct.ct_data, %struct.ct_data* %9, i32 %10
  %fc = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx, i32 0, i32 0
  %freq = bitcast %union.anon.5* %fc to i16*
  %11 = load i16, i16* %freq, align 2
  %conv = zext i16 %11 to i32
  %cmp2 = icmp ne i32 %conv, 0
  br i1 %cmp2, label %if.then, label %if.else

if.then:                                          ; preds = %for.body
  %12 = load i32, i32* %n, align 4
  store i32 %12, i32* %max_code, align 4
  %13 = load i32, i32* @heap_len, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* @heap_len, align 4
  %arrayidx4 = getelementptr inbounds [573 x i32], [573 x i32]* @heap, i32 0, i32 %inc
  store i32 %12, i32* %arrayidx4, align 4
  %14 = load i32, i32* %n, align 4
  %arrayidx5 = getelementptr inbounds [573 x i8], [573 x i8]* @depth, i32 0, i32 %14
  store i8 0, i8* %arrayidx5, align 1
  br label %if.end

if.else:                                          ; preds = %for.body
  %15 = load %struct.ct_data*, %struct.ct_data** %tree, align 4
  %16 = load i32, i32* %n, align 4
  %arrayidx6 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %15, i32 %16
  %dl = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx6, i32 0, i32 1
  %len = bitcast %union.anon.5* %dl to i16*
  store i16 0, i16* %len, align 2
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %17 = load i32, i32* %n, align 4
  %inc7 = add nsw i32 %17, 1
  store i32 %inc7, i32* %n, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %CallOutFuncBB

CallOutFuncBB:                                    ; preds = %for.end
  call void @while.cond.OutLineFunc.32(i32* %max_code, i32* %new, %struct.ct_data** %tree, %struct.ct_data** %stree, %struct.tree_desc** %desc.addr, i32* %n)
  %18 = getelementptr inbounds %Struct.RetValue.26, %Struct.RetValue.26* @Struct.RetValue.31, i32 0, i32 0
  %19 = load i32*, i32** %18, align 4
  %20 = load i32, i32* %19, align 4
  store i32 %20, i32* %max_code
  %21 = getelementptr inbounds %Struct.RetValue.26, %Struct.RetValue.26* @Struct.RetValue.31, i32 0, i32 1
  %22 = load i32*, i32** %21, align 4
  %23 = load i32, i32* %22, align 4
  store i32 %23, i32* %new
  %24 = getelementptr inbounds %Struct.RetValue.26, %Struct.RetValue.26* @Struct.RetValue.31, i32 0, i32 2
  %25 = load i32*, i32** %24, align 4
  %26 = load i32, i32* %25, align 4
  store i32 %26, i32* %n
  br label %for.cond26

for.cond26:                                       ; preds = %CallOutFuncBB, %for.inc30
  %27 = load i32, i32* %n, align 4
  %cmp27 = icmp sge i32 %27, 1
  br i1 %cmp27, label %for.body29, label %for.end32

for.body29:                                       ; preds = %for.cond26
  %28 = load i32, i32* %n, align 4
  %29 = load %struct.ct_data*, %struct.ct_data** %tree, align 4
  call void @pqdownheap(%struct.ct_data* %29, i32 %28)
  br label %for.inc30

for.inc30:                                        ; preds = %for.body29
  %30 = load i32, i32* %n, align 4
  %dec31 = add nsw i32 %30, -1
  store i32 %dec31, i32* %n, align 4
  br label %for.cond26

for.end32:                                        ; preds = %for.cond26
  br label %do.body

do.body:                                          ; preds = %do.cond, %for.end32
  %31 = load i32, i32* getelementptr inbounds ([573 x i32], [573 x i32]* @heap, i32 0, i32 1), align 4
  store i32 %31, i32* %n, align 4
  %32 = load i32, i32* @heap_len, align 4
  %dec33 = add nsw i32 %32, -1
  store i32 %dec33, i32* @heap_len, align 4
  %arrayidx34 = getelementptr inbounds [573 x i32], [573 x i32]* @heap, i32 0, i32 %32
  %33 = load i32, i32* %arrayidx34, align 4
  store i32 %33, i32* getelementptr inbounds ([573 x i32], [573 x i32]* @heap, i32 0, i32 1), align 4
  %34 = load %struct.ct_data*, %struct.ct_data** %tree, align 4
  call void @pqdownheap(%struct.ct_data* %34, i32 1)
  %35 = load i32, i32* getelementptr inbounds ([573 x i32], [573 x i32]* @heap, i32 0, i32 1), align 4
  store i32 %35, i32* %m, align 4
  %36 = load i32, i32* %n, align 4
  %37 = load i32, i32* @heap_max, align 4
  %dec35 = add nsw i32 %37, -1
  store i32 %dec35, i32* @heap_max, align 4
  %arrayidx36 = getelementptr inbounds [573 x i32], [573 x i32]* @heap, i32 0, i32 %dec35
  store i32 %36, i32* %arrayidx36, align 4
  %38 = load i32, i32* %m, align 4
  %39 = load i32, i32* @heap_max, align 4
  %dec37 = add nsw i32 %39, -1
  store i32 %dec37, i32* @heap_max, align 4
  %arrayidx38 = getelementptr inbounds [573 x i32], [573 x i32]* @heap, i32 0, i32 %dec37
  store i32 %38, i32* %arrayidx38, align 4
  %40 = load %struct.ct_data*, %struct.ct_data** %tree, align 4
  %41 = load i32, i32* %n, align 4
  %arrayidx39 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %40, i32 %41
  %fc40 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx39, i32 0, i32 0
  %freq41 = bitcast %union.anon.5* %fc40 to i16*
  %42 = load i16, i16* %freq41, align 2
  %conv42 = zext i16 %42 to i32
  %43 = load %struct.ct_data*, %struct.ct_data** %tree, align 4
  %44 = load i32, i32* %m, align 4
  %arrayidx43 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %43, i32 %44
  %fc44 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx43, i32 0, i32 0
  %freq45 = bitcast %union.anon.5* %fc44 to i16*
  %45 = load i16, i16* %freq45, align 2
  %conv46 = zext i16 %45 to i32
  %add = add nsw i32 %conv42, %conv46
  %conv47 = trunc i32 %add to i16
  %46 = load %struct.ct_data*, %struct.ct_data** %tree, align 4
  %47 = load i32, i32* %node, align 4
  %arrayidx48 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %46, i32 %47
  %fc49 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx48, i32 0, i32 0
  %freq50 = bitcast %union.anon.5* %fc49 to i16*
  store i16 %conv47, i16* %freq50, align 2
  %48 = load i32, i32* %n, align 4
  %arrayidx51 = getelementptr inbounds [573 x i8], [573 x i8]* @depth, i32 0, i32 %48
  %49 = load i8, i8* %arrayidx51, align 1
  %conv52 = zext i8 %49 to i32
  %50 = load i32, i32* %m, align 4
  %arrayidx53 = getelementptr inbounds [573 x i8], [573 x i8]* @depth, i32 0, i32 %50
  %51 = load i8, i8* %arrayidx53, align 1
  %conv54 = zext i8 %51 to i32
  %cmp55 = icmp sge i32 %conv52, %conv54
  br i1 %cmp55, label %cond.true57, label %cond.false60

cond.true57:                                      ; preds = %do.body
  %52 = load i32, i32* %n, align 4
  %arrayidx58 = getelementptr inbounds [573 x i8], [573 x i8]* @depth, i32 0, i32 %52
  %53 = load i8, i8* %arrayidx58, align 1
  %conv59 = zext i8 %53 to i32
  br label %cond.end63

cond.false60:                                     ; preds = %do.body
  %54 = load i32, i32* %m, align 4
  %arrayidx61 = getelementptr inbounds [573 x i8], [573 x i8]* @depth, i32 0, i32 %54
  %55 = load i8, i8* %arrayidx61, align 1
  %conv62 = zext i8 %55 to i32
  br label %cond.end63

cond.end63:                                       ; preds = %cond.false60, %cond.true57
  %cond64 = phi i32 [ %conv59, %cond.true57 ], [ %conv62, %cond.false60 ]
  %add65 = add nsw i32 %cond64, 1
  %conv66 = trunc i32 %add65 to i8
  %56 = load i32, i32* %node, align 4
  %arrayidx67 = getelementptr inbounds [573 x i8], [573 x i8]* @depth, i32 0, i32 %56
  store i8 %conv66, i8* %arrayidx67, align 1
  %57 = load i32, i32* %node, align 4
  %conv68 = trunc i32 %57 to i16
  %58 = load %struct.ct_data*, %struct.ct_data** %tree, align 4
  %59 = load i32, i32* %m, align 4
  %arrayidx69 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %58, i32 %59
  %dl70 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx69, i32 0, i32 1
  %dad = bitcast %union.anon.5* %dl70 to i16*
  store i16 %conv68, i16* %dad, align 2
  %60 = load %struct.ct_data*, %struct.ct_data** %tree, align 4
  %61 = load i32, i32* %n, align 4
  %arrayidx71 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %60, i32 %61
  %dl72 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx71, i32 0, i32 1
  %dad73 = bitcast %union.anon.5* %dl72 to i16*
  store i16 %conv68, i16* %dad73, align 2
  %62 = load i32, i32* %node, align 4
  %inc74 = add nsw i32 %62, 1
  store i32 %inc74, i32* %node, align 4
  store i32 %62, i32* getelementptr inbounds ([573 x i32], [573 x i32]* @heap, i32 0, i32 1), align 4
  %63 = load %struct.ct_data*, %struct.ct_data** %tree, align 4
  call void @pqdownheap(%struct.ct_data* %63, i32 1)
  br label %do.cond

do.cond:                                          ; preds = %cond.end63
  %64 = load i32, i32* @heap_len, align 4
  %cmp75 = icmp sge i32 %64, 2
  br i1 %cmp75, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  %65 = load i32, i32* getelementptr inbounds ([573 x i32], [573 x i32]* @heap, i32 0, i32 1), align 4
  %66 = load i32, i32* @heap_max, align 4
  %dec77 = add nsw i32 %66, -1
  store i32 %dec77, i32* @heap_max, align 4
  %arrayidx78 = getelementptr inbounds [573 x i32], [573 x i32]* @heap, i32 0, i32 %dec77
  store i32 %65, i32* %arrayidx78, align 4
  %67 = load %struct.tree_desc*, %struct.tree_desc** %desc.addr, align 4
  call void @gen_bitlen(%struct.tree_desc* %67)
  %68 = load i32, i32* %max_code, align 4
  %69 = load %struct.ct_data*, %struct.ct_data** %tree, align 4
  call void @gen_codes(%struct.ct_data* %69, i32 %68)
  ret void
}

; Function Attrs: noinline optnone sspstrong
define internal i32 @build_bl_tree() #1 {
entry:
  %max_blindex = alloca i32, align 4
  %0 = load i32, i32* getelementptr inbounds (%struct.tree_desc, %struct.tree_desc* @l_desc, i32 0, i32 6), align 4
  call void @scan_tree(%struct.ct_data* getelementptr inbounds ([573 x %struct.ct_data], [573 x %struct.ct_data]* @dyn_ltree, i32 0, i32 0), i32 %0)
  %1 = load i32, i32* getelementptr inbounds (%struct.tree_desc, %struct.tree_desc* @d_desc, i32 0, i32 6), align 4
  call void @scan_tree(%struct.ct_data* getelementptr inbounds ([61 x %struct.ct_data], [61 x %struct.ct_data]* @dyn_dtree, i32 0, i32 0), i32 %1)
  call void @build_tree(%struct.tree_desc* @bl_desc)
  store i32 18, i32* %max_blindex, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %max_blindex, align 4
  %cmp = icmp sge i32 %2, 3
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %max_blindex, align 4
  %arrayidx = getelementptr inbounds [19 x i8], [19 x i8]* @bl_order, i32 0, i32 %3
  %4 = load i8, i8* %arrayidx, align 1
  %idxprom = zext i8 %4 to i32
  %arrayidx1 = getelementptr inbounds [39 x %struct.ct_data], [39 x %struct.ct_data]* @bl_tree, i32 0, i32 %idxprom
  %dl = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx1, i32 0, i32 1
  %len = bitcast %union.anon.5* %dl to i16*
  %5 = load i16, i16* %len, align 2
  %conv = zext i16 %5 to i32
  %cmp2 = icmp ne i32 %conv, 0
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %for.end

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %6 = load i32, i32* %max_blindex, align 4
  %dec = add nsw i32 %6, -1
  store i32 %dec, i32* %max_blindex, align 4
  br label %for.cond

for.end:                                          ; preds = %if.then, %for.cond
  %7 = load i32, i32* %max_blindex, align 4
  %add = add nsw i32 %7, 1
  %mul = mul nsw i32 3, %add
  %add4 = add nsw i32 %mul, 5
  %add5 = add nsw i32 %add4, 5
  %add6 = add nsw i32 %add5, 4
  %8 = load i32, i32* @opt_len, align 4
  %add7 = add i32 %8, %add6
  store i32 %add7, i32* @opt_len, align 4
  %9 = load i32, i32* %max_blindex, align 4
  ret i32 %9
}

; Function Attrs: noinline optnone sspstrong
define internal void @compress_block(%struct.ct_data* %ltree, %struct.ct_data* %dtree) #1 {
entry:
  %dtree.addr = alloca %struct.ct_data*, align 4
  %ltree.addr = alloca %struct.ct_data*, align 4
  %dist = alloca i32, align 4
  %lc = alloca i32, align 4
  %lx = alloca i32, align 4
  %dx = alloca i32, align 4
  %fx = alloca i32, align 4
  %flag = alloca i8, align 1
  %code = alloca i32, align 4
  %extra = alloca i32, align 4
  store %struct.ct_data* %dtree, %struct.ct_data** %dtree.addr, align 4
  store %struct.ct_data* %ltree, %struct.ct_data** %ltree.addr, align 4
  store i32 0, i32* %lx, align 4
  store i32 0, i32* %dx, align 4
  store i32 0, i32* %fx, align 4
  store i8 0, i8* %flag, align 1
  %0 = load i32, i32* @last_lit, align 4
  %cmp = icmp ne i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end65

if.then:                                          ; preds = %entry
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %1 = load i32, i32* %lx, align 4
  %and = and i32 %1, 7
  %cmp1 = icmp eq i32 %and, 0
  br i1 %cmp1, label %if.then2, label %if.end

if.then2:                                         ; preds = %do.body
  %2 = load i32, i32* %fx, align 4
  %inc = add i32 %2, 1
  store i32 %inc, i32* %fx, align 4
  %arrayidx = getelementptr inbounds [4096 x i8], [4096 x i8]* @flag_buf, i32 0, i32 %2
  %3 = load i8, i8* %arrayidx, align 1
  store i8 %3, i8* %flag, align 1
  br label %if.end

if.end:                                           ; preds = %if.then2, %do.body
  %4 = load i32, i32* %lx, align 4
  %inc3 = add i32 %4, 1
  store i32 %inc3, i32* %lx, align 4
  %arrayidx4 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i32 0, i32 %4
  %5 = load i8, i8* %arrayidx4, align 1
  %conv = zext i8 %5 to i32
  store i32 %conv, i32* %lc, align 4
  %6 = load i8, i8* %flag, align 1
  %conv5 = zext i8 %6 to i32
  %and6 = and i32 %conv5, 1
  %cmp7 = icmp eq i32 %and6, 0
  br i1 %cmp7, label %if.then9, label %CallOutFuncBB

if.then9:                                         ; preds = %if.end
  %7 = load %struct.ct_data*, %struct.ct_data** %ltree.addr, align 4
  %8 = load i32, i32* %lc, align 4
  %arrayidx10 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %7, i32 %8
  %dl = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx10, i32 0, i32 1
  %len = bitcast %union.anon.5* %dl to i16*
  %9 = load i16, i16* %len, align 2
  %conv11 = zext i16 %9 to i32
  %10 = load %struct.ct_data*, %struct.ct_data** %ltree.addr, align 4
  %11 = load i32, i32* %lc, align 4
  %arrayidx12 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %10, i32 %11
  %fc = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx12, i32 0, i32 0
  %code13 = bitcast %union.anon.5* %fc to i16*
  %12 = load i16, i16* %code13, align 2
  %conv14 = zext i16 %12 to i32
  call void @send_bits(i32 %conv14, i32 %conv11)
  br label %if.end59

CallOutFuncBB:                                    ; preds = %if.end
  call void @if.else.OutLineFunc.34(i32* %lc, i32* %code, %struct.ct_data** %ltree.addr, i32* %extra)
  %13 = getelementptr inbounds %Struct.RetValue.27, %Struct.RetValue.27* @Struct.RetValue.33, i32 0, i32 0
  %14 = load i32*, i32** %13, align 4
  %15 = load i32, i32* %14, align 4
  store i32 %15, i32* %lc
  %16 = getelementptr inbounds %Struct.RetValue.27, %Struct.RetValue.27* @Struct.RetValue.33, i32 0, i32 1
  %17 = load i32*, i32** %16, align 4
  %18 = load i32, i32* %17, align 4
  store i32 %18, i32* %code
  %19 = getelementptr inbounds %Struct.RetValue.27, %Struct.RetValue.27* @Struct.RetValue.33, i32 0, i32 2
  %20 = load i32*, i32** %19, align 4
  %21 = load i32, i32* %20, align 4
  store i32 %21, i32* %extra
  br label %new

new:                                              ; preds = %CallOutFuncBB
  %22 = load i32, i32* %dx, align 4
  %inc34 = add i32 %22, 1
  store i32 %inc34, i32* %dx, align 4
  %arrayidx35 = getelementptr inbounds [0 x i16], [0 x i16]* bitcast ([32768 x i16]* @d_buf to [0 x i16]*), i32 0, i32 %22
  %23 = load i16, i16* %arrayidx35, align 2
  %conv36 = zext i16 %23 to i32
  store i32 %conv36, i32* %dist, align 4
  %24 = load i32, i32* %dist, align 4
  %cmp37 = icmp ult i32 %24, 256
  br i1 %cmp37, label %cond.true, label %cond.false

cond.true:                                        ; preds = %new
  %25 = load i32, i32* %dist, align 4
  %arrayidx39 = getelementptr inbounds [512 x i8], [512 x i8]* @dist_code, i32 0, i32 %25
  %26 = load i8, i8* %arrayidx39, align 1
  %conv40 = zext i8 %26 to i32
  br label %cond.end

cond.false:                                       ; preds = %new
  %27 = load i32, i32* %dist, align 4
  %shr = lshr i32 %27, 7
  %add41 = add i32 256, %shr
  %arrayidx42 = getelementptr inbounds [512 x i8], [512 x i8]* @dist_code, i32 0, i32 %add41
  %28 = load i8, i8* %arrayidx42, align 1
  %conv43 = zext i8 %28 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv40, %cond.true ], [ %conv43, %cond.false ]
  store i32 %cond, i32* %code, align 4
  %29 = load %struct.ct_data*, %struct.ct_data** %dtree.addr, align 4
  %30 = load i32, i32* %code, align 4
  %arrayidx44 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %29, i32 %30
  %dl45 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx44, i32 0, i32 1
  %len46 = bitcast %union.anon.5* %dl45 to i16*
  %31 = load i16, i16* %len46, align 2
  %conv47 = zext i16 %31 to i32
  %32 = load %struct.ct_data*, %struct.ct_data** %dtree.addr, align 4
  %33 = load i32, i32* %code, align 4
  %arrayidx48 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %32, i32 %33
  %fc49 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx48, i32 0, i32 0
  %code50 = bitcast %union.anon.5* %fc49 to i16*
  %34 = load i16, i16* %code50, align 2
  %conv51 = zext i16 %34 to i32
  call void @send_bits(i32 %conv51, i32 %conv47)
  %35 = load i32, i32* %code, align 4
  %arrayidx52 = getelementptr inbounds [30 x i32], [30 x i32]* @extra_dbits, i32 0, i32 %35
  %36 = load i32, i32* %arrayidx52, align 4
  store i32 %36, i32* %extra, align 4
  %37 = load i32, i32* %extra, align 4
  %cmp53 = icmp ne i32 %37, 0
  br i1 %cmp53, label %if.then55, label %if.end58

if.then55:                                        ; preds = %cond.end
  %38 = load i32, i32* %code, align 4
  %arrayidx56 = getelementptr inbounds [30 x i32], [30 x i32]* @base_dist, i32 0, i32 %38
  %39 = load i32, i32* %arrayidx56, align 4
  %40 = load i32, i32* %dist, align 4
  %sub57 = sub i32 %40, %39
  store i32 %sub57, i32* %dist, align 4
  %41 = load i32, i32* %extra, align 4
  %42 = load i32, i32* %dist, align 4
  call void @send_bits(i32 %42, i32 %41)
  br label %if.end58

if.end58:                                         ; preds = %if.then55, %cond.end
  br label %if.end59

if.end59:                                         ; preds = %if.end58, %if.then9
  %43 = load i8, i8* %flag, align 1
  %conv60 = zext i8 %43 to i32
  %shr61 = ashr i32 %conv60, 1
  %conv62 = trunc i32 %shr61 to i8
  store i8 %conv62, i8* %flag, align 1
  br label %do.cond

do.cond:                                          ; preds = %if.end59
  %44 = load i32, i32* %lx, align 4
  %45 = load i32, i32* @last_lit, align 4
  %cmp63 = icmp ult i32 %44, %45
  br i1 %cmp63, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end65

if.end65:                                         ; preds = %do.end, %entry
  %46 = load %struct.ct_data*, %struct.ct_data** %ltree.addr, align 4
  %arrayidx66 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %46, i32 256
  %dl67 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx66, i32 0, i32 1
  %len68 = bitcast %union.anon.5* %dl67 to i16*
  %47 = load i16, i16* %len68, align 2
  %conv69 = zext i16 %47 to i32
  %48 = load %struct.ct_data*, %struct.ct_data** %ltree.addr, align 4
  %arrayidx70 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %48, i32 256
  %fc71 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx70, i32 0, i32 0
  %code72 = bitcast %union.anon.5* %fc71 to i16*
  %49 = load i16, i16* %code72, align 2
  %conv73 = zext i16 %49 to i32
  call void @send_bits(i32 %conv73, i32 %conv69)
  ret void
}

; Function Attrs: noinline optnone sspstrong
define internal void @send_all_trees(i32 %lcodes, i32 %dcodes, i32 %blcodes) #1 {
entry:
  %blcodes.addr = alloca i32, align 4
  %dcodes.addr = alloca i32, align 4
  %lcodes.addr = alloca i32, align 4
  %rank = alloca i32, align 4
  store i32 %blcodes, i32* %blcodes.addr, align 4
  store i32 %dcodes, i32* %dcodes.addr, align 4
  store i32 %lcodes, i32* %lcodes.addr, align 4
  %0 = load i32, i32* %lcodes.addr, align 4
  %sub = sub nsw i32 %0, 257
  call void @send_bits(i32 %sub, i32 5)
  %1 = load i32, i32* %dcodes.addr, align 4
  %sub1 = sub nsw i32 %1, 1
  call void @send_bits(i32 %sub1, i32 5)
  %2 = load i32, i32* %blcodes.addr, align 4
  %sub2 = sub nsw i32 %2, 4
  call void @send_bits(i32 %sub2, i32 4)
  store i32 0, i32* %rank, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %rank, align 4
  %4 = load i32, i32* %blcodes.addr, align 4
  %cmp = icmp slt i32 %3, %4
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %5 = load i32, i32* %rank, align 4
  %arrayidx = getelementptr inbounds [19 x i8], [19 x i8]* @bl_order, i32 0, i32 %5
  %6 = load i8, i8* %arrayidx, align 1
  %idxprom = zext i8 %6 to i32
  %arrayidx3 = getelementptr inbounds [39 x %struct.ct_data], [39 x %struct.ct_data]* @bl_tree, i32 0, i32 %idxprom
  %dl = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx3, i32 0, i32 1
  %len = bitcast %union.anon.5* %dl to i16*
  %7 = load i16, i16* %len, align 2
  %conv = zext i16 %7 to i32
  call void @send_bits(i32 %conv, i32 3)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %8 = load i32, i32* %rank, align 4
  %inc = add nsw i32 %8, 1
  store i32 %inc, i32* %rank, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %9 = load i32, i32* %lcodes.addr, align 4
  %sub4 = sub nsw i32 %9, 1
  call void @send_tree(%struct.ct_data* getelementptr inbounds ([573 x %struct.ct_data], [573 x %struct.ct_data]* @dyn_ltree, i32 0, i32 0), i32 %sub4)
  %10 = load i32, i32* %dcodes.addr, align 4
  %sub5 = sub nsw i32 %10, 1
  call void @send_tree(%struct.ct_data* getelementptr inbounds ([61 x %struct.ct_data], [61 x %struct.ct_data]* @dyn_dtree, i32 0, i32 0), i32 %sub5)
  ret void
}

; Function Attrs: noinline optnone sspstrong
define internal void @send_tree(%struct.ct_data* %tree, i32 %max_code) #1 {
entry:
  %max_code.addr = alloca i32, align 4
  %tree.addr = alloca %struct.ct_data*, align 4
  %n = alloca i32, align 4
  %prevlen = alloca i32, align 4
  %curlen = alloca i32, align 4
  %nextlen = alloca i32, align 4
  %count = alloca i32, align 4
  %max_count = alloca i32, align 4
  %min_count = alloca i32, align 4
  store i32 %max_code, i32* %max_code.addr, align 4
  store %struct.ct_data* %tree, %struct.ct_data** %tree.addr, align 4
  store i32 -1, i32* %prevlen, align 4
  %0 = load %struct.ct_data*, %struct.ct_data** %tree.addr, align 4
  %arrayidx = getelementptr inbounds %struct.ct_data, %struct.ct_data* %0, i32 0
  %dl = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx, i32 0, i32 1
  %len = bitcast %union.anon.5* %dl to i16*
  %1 = load i16, i16* %len, align 2
  %conv = zext i16 %1 to i32
  store i32 %conv, i32* %nextlen, align 4
  store i32 0, i32* %count, align 4
  store i32 7, i32* %max_count, align 4
  store i32 4, i32* %min_count, align 4
  %2 = load i32, i32* %nextlen, align 4
  %cmp = icmp eq i32 %2, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 138, i32* %max_count, align 4
  store i32 3, i32* %min_count, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %n, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %3 = load i32, i32* %n, align 4
  %4 = load i32, i32* %max_code.addr, align 4
  %cmp2 = icmp sle i32 %3, %4
  br i1 %cmp2, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %5 = load i32, i32* %nextlen, align 4
  store i32 %5, i32* %curlen, align 4
  %6 = load %struct.ct_data*, %struct.ct_data** %tree.addr, align 4
  %7 = load i32, i32* %n, align 4
  %add = add nsw i32 %7, 1
  %arrayidx4 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %6, i32 %add
  %dl5 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx4, i32 0, i32 1
  %len6 = bitcast %union.anon.5* %dl5 to i16*
  %8 = load i16, i16* %len6, align 2
  %conv7 = zext i16 %8 to i32
  store i32 %conv7, i32* %nextlen, align 4
  %9 = load i32, i32* %count, align 4
  %inc = add nsw i32 %9, 1
  store i32 %inc, i32* %count, align 4
  %10 = load i32, i32* %max_count, align 4
  %cmp8 = icmp slt i32 %inc, %10
  br i1 %cmp8, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %for.body
  %11 = load i32, i32* %curlen, align 4
  %12 = load i32, i32* %nextlen, align 4
  %cmp10 = icmp eq i32 %11, %12
  br i1 %cmp10, label %if.then12, label %if.else

if.then12:                                        ; preds = %land.lhs.true
  br label %for.inc

if.else:                                          ; preds = %land.lhs.true, %for.body
  %13 = load i32, i32* %count, align 4
  %14 = load i32, i32* %min_count, align 4
  %cmp13 = icmp slt i32 %13, %14
  br i1 %cmp13, label %if.then15, label %if.else24

if.then15:                                        ; preds = %if.else
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then15
  %15 = load i32, i32* %curlen, align 4
  %arrayidx16 = getelementptr inbounds [39 x %struct.ct_data], [39 x %struct.ct_data]* @bl_tree, i32 0, i32 %15
  %dl17 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx16, i32 0, i32 1
  %len18 = bitcast %union.anon.5* %dl17 to i16*
  %16 = load i16, i16* %len18, align 2
  %conv19 = zext i16 %16 to i32
  %17 = load i32, i32* %curlen, align 4
  %arrayidx20 = getelementptr inbounds [39 x %struct.ct_data], [39 x %struct.ct_data]* @bl_tree, i32 0, i32 %17
  %fc = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx20, i32 0, i32 0
  %code = bitcast %union.anon.5* %fc to i16*
  %18 = load i16, i16* %code, align 2
  %conv21 = zext i16 %18 to i32
  call void @send_bits(i32 %conv21, i32 %conv19)
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %19 = load i32, i32* %count, align 4
  %dec = add nsw i32 %19, -1
  store i32 %dec, i32* %count, align 4
  %cmp22 = icmp ne i32 %dec, 0
  br i1 %cmp22, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end56

if.else24:                                        ; preds = %if.else
  %20 = load i32, i32* %curlen, align 4
  %cmp25 = icmp ne i32 %20, 0
  br i1 %cmp25, label %CallOutFuncBB, label %if.else43

CallOutFuncBB:                                    ; preds = %if.else24
  call void @if.then27.OutLineFunc(i32* %curlen, i32* %prevlen, i32* %count)
  %21 = getelementptr inbounds %Struct.RetValue.28, %Struct.RetValue.28* @Struct.RetValue.35, i32 0, i32 0
  %22 = load i32*, i32** %21, align 4
  %23 = load i32, i32* %22, align 4
  store i32 %23, i32* %count
  br label %if.end55

if.else43:                                        ; preds = %if.else24
  %24 = load i32, i32* %count, align 4
  %cmp44 = icmp sle i32 %24, 10
  br i1 %cmp44, label %if.then46, label %if.else50

if.then46:                                        ; preds = %if.else43
  %25 = load i16, i16* getelementptr inbounds ([39 x %struct.ct_data], [39 x %struct.ct_data]* @bl_tree, i32 0, i32 17, i32 1, i32 0), align 2
  %conv47 = zext i16 %25 to i32
  %26 = load i16, i16* getelementptr inbounds ([39 x %struct.ct_data], [39 x %struct.ct_data]* @bl_tree, i32 0, i32 17, i32 0, i32 0), align 2
  %conv48 = zext i16 %26 to i32
  call void @send_bits(i32 %conv48, i32 %conv47)
  %27 = load i32, i32* %count, align 4
  %sub49 = sub nsw i32 %27, 3
  call void @send_bits(i32 %sub49, i32 3)
  br label %if.end54

if.else50:                                        ; preds = %if.else43
  %28 = load i16, i16* getelementptr inbounds ([39 x %struct.ct_data], [39 x %struct.ct_data]* @bl_tree, i32 0, i32 18, i32 1, i32 0), align 2
  %conv51 = zext i16 %28 to i32
  %29 = load i16, i16* getelementptr inbounds ([39 x %struct.ct_data], [39 x %struct.ct_data]* @bl_tree, i32 0, i32 18, i32 0, i32 0), align 2
  %conv52 = zext i16 %29 to i32
  call void @send_bits(i32 %conv52, i32 %conv51)
  %30 = load i32, i32* %count, align 4
  %sub53 = sub nsw i32 %30, 11
  call void @send_bits(i32 %sub53, i32 7)
  br label %if.end54

if.end54:                                         ; preds = %if.else50, %if.then46
  br label %if.end55

if.end55:                                         ; preds = %CallOutFuncBB, %if.end54
  br label %if.end56

if.end56:                                         ; preds = %if.end55, %do.end
  br label %if.end57

if.end57:                                         ; preds = %if.end56
  store i32 0, i32* %count, align 4
  %31 = load i32, i32* %curlen, align 4
  store i32 %31, i32* %prevlen, align 4
  %32 = load i32, i32* %nextlen, align 4
  %cmp58 = icmp eq i32 %32, 0
  br i1 %cmp58, label %if.then60, label %if.else61

if.then60:                                        ; preds = %if.end57
  store i32 138, i32* %max_count, align 4
  store i32 3, i32* %min_count, align 4
  br label %if.end67

if.else61:                                        ; preds = %if.end57
  %33 = load i32, i32* %curlen, align 4
  %34 = load i32, i32* %nextlen, align 4
  %cmp62 = icmp eq i32 %33, %34
  br i1 %cmp62, label %if.then64, label %if.else65

if.then64:                                        ; preds = %if.else61
  store i32 6, i32* %max_count, align 4
  store i32 3, i32* %min_count, align 4
  br label %if.end66

if.else65:                                        ; preds = %if.else61
  store i32 7, i32* %max_count, align 4
  store i32 4, i32* %min_count, align 4
  br label %if.end66

if.end66:                                         ; preds = %if.else65, %if.then64
  br label %if.end67

if.end67:                                         ; preds = %if.end66, %if.then60
  br label %for.inc

for.inc:                                          ; preds = %if.end67, %if.then12
  %35 = load i32, i32* %n, align 4
  %inc68 = add nsw i32 %35, 1
  store i32 %inc68, i32* %n, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: noinline nounwind optnone sspstrong
define internal void @scan_tree(%struct.ct_data* %tree, i32 %max_code) #0 {
entry:
  %max_code.addr = alloca i32, align 4
  %tree.addr = alloca %struct.ct_data*, align 4
  %n = alloca i32, align 4
  %prevlen = alloca i32, align 4
  %curlen = alloca i32, align 4
  %nextlen = alloca i32, align 4
  %count = alloca i32, align 4
  %max_count = alloca i32, align 4
  %min_count = alloca i32, align 4
  store i32 %max_code, i32* %max_code.addr, align 4
  store %struct.ct_data* %tree, %struct.ct_data** %tree.addr, align 4
  store i32 -1, i32* %prevlen, align 4
  %0 = load %struct.ct_data*, %struct.ct_data** %tree.addr, align 4
  %arrayidx = getelementptr inbounds %struct.ct_data, %struct.ct_data* %0, i32 0
  %dl = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx, i32 0, i32 1
  %len = bitcast %union.anon.5* %dl to i16*
  %1 = load i16, i16* %len, align 2
  %conv = zext i16 %1 to i32
  store i32 %conv, i32* %nextlen, align 4
  store i32 0, i32* %count, align 4
  store i32 7, i32* %max_count, align 4
  store i32 4, i32* %min_count, align 4
  %2 = load i32, i32* %nextlen, align 4
  %cmp = icmp eq i32 %2, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 138, i32* %max_count, align 4
  store i32 3, i32* %min_count, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.ct_data*, %struct.ct_data** %tree.addr, align 4
  %4 = load i32, i32* %max_code.addr, align 4
  %add = add nsw i32 %4, 1
  %arrayidx2 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %3, i32 %add
  %dl3 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx2, i32 0, i32 1
  %len4 = bitcast %union.anon.5* %dl3 to i16*
  store i16 -1, i16* %len4, align 2
  store i32 0, i32* %n, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load i32, i32* %n, align 4
  %6 = load i32, i32* %max_code.addr, align 4
  %cmp5 = icmp sle i32 %5, %6
  br i1 %cmp5, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %7 = load i32, i32* %nextlen, align 4
  store i32 %7, i32* %curlen, align 4
  %8 = load %struct.ct_data*, %struct.ct_data** %tree.addr, align 4
  %9 = load i32, i32* %n, align 4
  %add7 = add nsw i32 %9, 1
  %arrayidx8 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %8, i32 %add7
  %dl9 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx8, i32 0, i32 1
  %len10 = bitcast %union.anon.5* %dl9 to i16*
  %10 = load i16, i16* %len10, align 2
  %conv11 = zext i16 %10 to i32
  store i32 %conv11, i32* %nextlen, align 4
  %11 = load i32, i32* %count, align 4
  %inc = add nsw i32 %11, 1
  store i32 %inc, i32* %count, align 4
  %12 = load i32, i32* %max_count, align 4
  %cmp12 = icmp slt i32 %inc, %12
  br i1 %cmp12, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %for.body
  %13 = load i32, i32* %curlen, align 4
  %14 = load i32, i32* %nextlen, align 4
  %cmp14 = icmp eq i32 %13, %14
  br i1 %cmp14, label %if.then16, label %if.else

if.then16:                                        ; preds = %land.lhs.true
  br label %for.inc

if.else:                                          ; preds = %land.lhs.true, %for.body
  %15 = load i32, i32* %count, align 4
  %16 = load i32, i32* %min_count, align 4
  %cmp17 = icmp slt i32 %15, %16
  br i1 %cmp17, label %if.then19, label %if.else24

if.then19:                                        ; preds = %if.else
  %17 = load i32, i32* %count, align 4
  %18 = load i32, i32* %curlen, align 4
  %arrayidx20 = getelementptr inbounds [39 x %struct.ct_data], [39 x %struct.ct_data]* @bl_tree, i32 0, i32 %18
  %fc = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx20, i32 0, i32 0
  %freq = bitcast %union.anon.5* %fc to i16*
  %19 = load i16, i16* %freq, align 2
  %conv21 = zext i16 %19 to i32
  %add22 = add nsw i32 %conv21, %17
  %conv23 = trunc i32 %add22 to i16
  store i16 %conv23, i16* %freq, align 2
  br label %if.end46

if.else24:                                        ; preds = %if.else
  %20 = load i32, i32* %curlen, align 4
  %cmp25 = icmp ne i32 %20, 0
  br i1 %cmp25, label %CallOutFuncBB, label %if.else37

CallOutFuncBB:                                    ; preds = %if.else24
  call void @if.then27.OutLineFunc.37(i32* %curlen, i32* %prevlen)
  br label %if.end45

if.else37:                                        ; preds = %if.else24
  %21 = load i32, i32* %count, align 4
  %cmp38 = icmp sle i32 %21, 10
  br i1 %cmp38, label %if.then40, label %if.else42

if.then40:                                        ; preds = %if.else37
  %22 = load i16, i16* getelementptr inbounds ([39 x %struct.ct_data], [39 x %struct.ct_data]* @bl_tree, i32 0, i32 17, i32 0, i32 0), align 2
  %inc41 = add i16 %22, 1
  store i16 %inc41, i16* getelementptr inbounds ([39 x %struct.ct_data], [39 x %struct.ct_data]* @bl_tree, i32 0, i32 17, i32 0, i32 0), align 2
  br label %if.end44

if.else42:                                        ; preds = %if.else37
  %23 = load i16, i16* getelementptr inbounds ([39 x %struct.ct_data], [39 x %struct.ct_data]* @bl_tree, i32 0, i32 18, i32 0, i32 0), align 2
  %inc43 = add i16 %23, 1
  store i16 %inc43, i16* getelementptr inbounds ([39 x %struct.ct_data], [39 x %struct.ct_data]* @bl_tree, i32 0, i32 18, i32 0, i32 0), align 2
  br label %if.end44

if.end44:                                         ; preds = %if.else42, %if.then40
  br label %if.end45

if.end45:                                         ; preds = %CallOutFuncBB, %if.end44
  br label %if.end46

if.end46:                                         ; preds = %if.end45, %if.then19
  br label %if.end47

if.end47:                                         ; preds = %if.end46
  store i32 0, i32* %count, align 4
  %24 = load i32, i32* %curlen, align 4
  store i32 %24, i32* %prevlen, align 4
  %25 = load i32, i32* %nextlen, align 4
  %cmp48 = icmp eq i32 %25, 0
  br i1 %cmp48, label %if.then50, label %if.else51

if.then50:                                        ; preds = %if.end47
  store i32 138, i32* %max_count, align 4
  store i32 3, i32* %min_count, align 4
  br label %if.end57

if.else51:                                        ; preds = %if.end47
  %26 = load i32, i32* %curlen, align 4
  %27 = load i32, i32* %nextlen, align 4
  %cmp52 = icmp eq i32 %26, %27
  br i1 %cmp52, label %if.then54, label %if.else55

if.then54:                                        ; preds = %if.else51
  store i32 6, i32* %max_count, align 4
  store i32 3, i32* %min_count, align 4
  br label %if.end56

if.else55:                                        ; preds = %if.else51
  store i32 7, i32* %max_count, align 4
  store i32 4, i32* %min_count, align 4
  br label %if.end56

if.end56:                                         ; preds = %if.else55, %if.then54
  br label %if.end57

if.end57:                                         ; preds = %if.end56, %if.then50
  br label %for.inc

for.inc:                                          ; preds = %if.end57, %if.then16
  %28 = load i32, i32* %n, align 4
  %inc58 = add nsw i32 %28, 1
  store i32 %inc58, i32* %n, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: noinline nounwind optnone sspstrong
define internal void @pqdownheap(%struct.ct_data* %tree, i32 %k) #0 {
entry:
  %k.addr = alloca i32, align 4
  %tree.addr = alloca %struct.ct_data*, align 4
  %v = alloca i32, align 4
  %j = alloca i32, align 4
  store i32 %k, i32* %k.addr, align 4
  store %struct.ct_data* %tree, %struct.ct_data** %tree.addr, align 4
  %0 = load i32, i32* %k.addr, align 4
  %arrayidx = getelementptr inbounds [573 x i32], [573 x i32]* @heap, i32 0, i32 %0
  %1 = load i32, i32* %arrayidx, align 4
  store i32 %1, i32* %v, align 4
  %2 = load i32, i32* %k.addr, align 4
  %shl = shl i32 %2, 1
  store i32 %shl, i32* %j, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end66, %entry
  %3 = load i32, i32* %j, align 4
  %4 = load i32, i32* @heap_len, align 4
  %cmp = icmp sle i32 %3, %4
  br i1 %cmp, label %CallOutFuncBB, label %while.end

CallOutFuncBB:                                    ; preds = %while.cond
  call void @while.body.OutLineFunc.39(i32* %j, %struct.ct_data** %tree.addr)
  %5 = getelementptr inbounds %Struct.RetValue.30, %Struct.RetValue.30* @Struct.RetValue.38, i32 0, i32 0
  %6 = load i32*, i32** %5, align 4
  %7 = load i32, i32* %6, align 4
  store i32 %7, i32* %j
  br label %new

new:                                              ; preds = %CallOutFuncBB
  %8 = load %struct.ct_data*, %struct.ct_data** %tree.addr, align 4
  %9 = load i32, i32* %v, align 4
  %arrayidx34 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %8, i32 %9
  %fc35 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx34, i32 0, i32 0
  %freq36 = bitcast %union.anon.5* %fc35 to i16*
  %10 = load i16, i16* %freq36, align 2
  %conv37 = zext i16 %10 to i32
  %11 = load %struct.ct_data*, %struct.ct_data** %tree.addr, align 4
  %12 = load i32, i32* %j, align 4
  %arrayidx38 = getelementptr inbounds [573 x i32], [573 x i32]* @heap, i32 0, i32 %12
  %13 = load i32, i32* %arrayidx38, align 4
  %arrayidx39 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %11, i32 %13
  %fc40 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx39, i32 0, i32 0
  %freq41 = bitcast %union.anon.5* %fc40 to i16*
  %14 = load i16, i16* %freq41, align 2
  %conv42 = zext i16 %14 to i32
  %cmp43 = icmp slt i32 %conv37, %conv42
  br i1 %cmp43, label %if.then65, label %lor.lhs.false45

lor.lhs.false45:                                  ; preds = %new
  %15 = load %struct.ct_data*, %struct.ct_data** %tree.addr, align 4
  %16 = load i32, i32* %v, align 4
  %arrayidx46 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %15, i32 %16
  %fc47 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx46, i32 0, i32 0
  %freq48 = bitcast %union.anon.5* %fc47 to i16*
  %17 = load i16, i16* %freq48, align 2
  %conv49 = zext i16 %17 to i32
  %18 = load %struct.ct_data*, %struct.ct_data** %tree.addr, align 4
  %19 = load i32, i32* %j, align 4
  %arrayidx50 = getelementptr inbounds [573 x i32], [573 x i32]* @heap, i32 0, i32 %19
  %20 = load i32, i32* %arrayidx50, align 4
  %arrayidx51 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %18, i32 %20
  %fc52 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx51, i32 0, i32 0
  %freq53 = bitcast %union.anon.5* %fc52 to i16*
  %21 = load i16, i16* %freq53, align 2
  %conv54 = zext i16 %21 to i32
  %cmp55 = icmp eq i32 %conv49, %conv54
  br i1 %cmp55, label %land.lhs.true57, label %if.end66

land.lhs.true57:                                  ; preds = %lor.lhs.false45
  %22 = load i32, i32* %v, align 4
  %arrayidx58 = getelementptr inbounds [573 x i8], [573 x i8]* @depth, i32 0, i32 %22
  %23 = load i8, i8* %arrayidx58, align 1
  %conv59 = zext i8 %23 to i32
  %24 = load i32, i32* %j, align 4
  %arrayidx60 = getelementptr inbounds [573 x i32], [573 x i32]* @heap, i32 0, i32 %24
  %25 = load i32, i32* %arrayidx60, align 4
  %arrayidx61 = getelementptr inbounds [573 x i8], [573 x i8]* @depth, i32 0, i32 %25
  %26 = load i8, i8* %arrayidx61, align 1
  %conv62 = zext i8 %26 to i32
  %cmp63 = icmp sle i32 %conv59, %conv62
  br i1 %cmp63, label %if.then65, label %if.end66

if.then65:                                        ; preds = %land.lhs.true57, %new
  br label %while.end

if.end66:                                         ; preds = %land.lhs.true57, %lor.lhs.false45
  %27 = load i32, i32* %j, align 4
  %arrayidx67 = getelementptr inbounds [573 x i32], [573 x i32]* @heap, i32 0, i32 %27
  %28 = load i32, i32* %arrayidx67, align 4
  %29 = load i32, i32* %k.addr, align 4
  %arrayidx68 = getelementptr inbounds [573 x i32], [573 x i32]* @heap, i32 0, i32 %29
  store i32 %28, i32* %arrayidx68, align 4
  %30 = load i32, i32* %j, align 4
  store i32 %30, i32* %k.addr, align 4
  %31 = load i32, i32* %j, align 4
  %shl69 = shl i32 %31, 1
  store i32 %shl69, i32* %j, align 4
  br label %while.cond

while.end:                                        ; preds = %if.then65, %while.cond
  %32 = load i32, i32* %v, align 4
  %33 = load i32, i32* %k.addr, align 4
  %arrayidx70 = getelementptr inbounds [573 x i32], [573 x i32]* @heap, i32 0, i32 %33
  store i32 %32, i32* %arrayidx70, align 4
  ret void
}

; Function Attrs: noinline nounwind optnone sspstrong
define internal void @gen_bitlen(%struct.tree_desc* %desc) #0 {
entry:
  %desc.addr = alloca %struct.tree_desc*, align 4
  %tree = alloca %struct.ct_data*, align 4
  %extra = alloca i32*, align 4
  %base = alloca i32, align 4
  %max_code = alloca i32, align 4
  %max_length = alloca i32, align 4
  %stree = alloca %struct.ct_data*, align 4
  %h = alloca i32, align 4
  %n = alloca i32, align 4
  %m = alloca i32, align 4
  %bits = alloca i32, align 4
  %xbits = alloca i32, align 4
  %f = alloca i16, align 2
  %overflow = alloca i32, align 4
  store %struct.tree_desc* %desc, %struct.tree_desc** %desc.addr, align 4
  %0 = load %struct.tree_desc*, %struct.tree_desc** %desc.addr, align 4
  %dyn_tree = getelementptr inbounds %struct.tree_desc, %struct.tree_desc* %0, i32 0, i32 0
  %1 = load %struct.ct_data*, %struct.ct_data** %dyn_tree, align 4
  store %struct.ct_data* %1, %struct.ct_data** %tree, align 4
  %2 = load %struct.tree_desc*, %struct.tree_desc** %desc.addr, align 4
  %extra_bits = getelementptr inbounds %struct.tree_desc, %struct.tree_desc* %2, i32 0, i32 2
  %3 = load i32*, i32** %extra_bits, align 4
  store i32* %3, i32** %extra, align 4
  %4 = load %struct.tree_desc*, %struct.tree_desc** %desc.addr, align 4
  %extra_base = getelementptr inbounds %struct.tree_desc, %struct.tree_desc* %4, i32 0, i32 3
  %5 = load i32, i32* %extra_base, align 4
  store i32 %5, i32* %base, align 4
  %6 = load %struct.tree_desc*, %struct.tree_desc** %desc.addr, align 4
  %max_code1 = getelementptr inbounds %struct.tree_desc, %struct.tree_desc* %6, i32 0, i32 6
  %7 = load i32, i32* %max_code1, align 4
  store i32 %7, i32* %max_code, align 4
  %8 = load %struct.tree_desc*, %struct.tree_desc** %desc.addr, align 4
  %max_length2 = getelementptr inbounds %struct.tree_desc, %struct.tree_desc* %8, i32 0, i32 5
  %9 = load i32, i32* %max_length2, align 4
  store i32 %9, i32* %max_length, align 4
  %10 = load %struct.tree_desc*, %struct.tree_desc** %desc.addr, align 4
  %static_tree = getelementptr inbounds %struct.tree_desc, %struct.tree_desc* %10, i32 0, i32 1
  %11 = load %struct.ct_data*, %struct.ct_data** %static_tree, align 4
  store %struct.ct_data* %11, %struct.ct_data** %stree, align 4
  store i32 0, i32* %overflow, align 4
  store i32 0, i32* %bits, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %12 = load i32, i32* %bits, align 4
  %cmp = icmp sle i32 %12, 15
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %13 = load i32, i32* %bits, align 4
  %arrayidx = getelementptr inbounds [16 x i16], [16 x i16]* @bl_count, i32 0, i32 %13
  store i16 0, i16* %arrayidx, align 2
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %14 = load i32, i32* %bits, align 4
  %inc = add nsw i32 %14, 1
  store i32 %inc, i32* %bits, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %15 = load %struct.ct_data*, %struct.ct_data** %tree, align 4
  %16 = load i32, i32* @heap_max, align 4
  %arrayidx3 = getelementptr inbounds [573 x i32], [573 x i32]* @heap, i32 0, i32 %16
  %17 = load i32, i32* %arrayidx3, align 4
  %arrayidx4 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %15, i32 %17
  %dl = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx4, i32 0, i32 1
  %len = bitcast %union.anon.5* %dl to i16*
  store i16 0, i16* %len, align 2
  %18 = load i32, i32* @heap_max, align 4
  %add = add nsw i32 %18, 1
  store i32 %add, i32* %h, align 4
  br label %for.cond5

for.cond5:                                        ; preds = %for.inc47, %for.end
  %19 = load i32, i32* %h, align 4
  %cmp6 = icmp slt i32 %19, 573
  br i1 %cmp6, label %for.body7, label %for.end49

for.body7:                                        ; preds = %for.cond5
  %20 = load i32, i32* %h, align 4
  %arrayidx8 = getelementptr inbounds [573 x i32], [573 x i32]* @heap, i32 0, i32 %20
  %21 = load i32, i32* %arrayidx8, align 4
  store i32 %21, i32* %n, align 4
  %22 = load %struct.ct_data*, %struct.ct_data** %tree, align 4
  %23 = load %struct.ct_data*, %struct.ct_data** %tree, align 4
  %24 = load i32, i32* %n, align 4
  %arrayidx9 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %23, i32 %24
  %dl10 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx9, i32 0, i32 1
  %dad = bitcast %union.anon.5* %dl10 to i16*
  %25 = load i16, i16* %dad, align 2
  %idxprom = zext i16 %25 to i32
  %arrayidx11 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %22, i32 %idxprom
  %dl12 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx11, i32 0, i32 1
  %len13 = bitcast %union.anon.5* %dl12 to i16*
  %26 = load i16, i16* %len13, align 2
  %conv = zext i16 %26 to i32
  %add14 = add nsw i32 %conv, 1
  store i32 %add14, i32* %bits, align 4
  %27 = load i32, i32* %bits, align 4
  %28 = load i32, i32* %max_length, align 4
  %cmp15 = icmp sgt i32 %27, %28
  br i1 %cmp15, label %if.then, label %if.end

if.then:                                          ; preds = %for.body7
  %29 = load i32, i32* %max_length, align 4
  store i32 %29, i32* %bits, align 4
  %30 = load i32, i32* %overflow, align 4
  %inc17 = add nsw i32 %30, 1
  store i32 %inc17, i32* %overflow, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body7
  %31 = load i32, i32* %bits, align 4
  %conv18 = trunc i32 %31 to i16
  %32 = load %struct.ct_data*, %struct.ct_data** %tree, align 4
  %33 = load i32, i32* %n, align 4
  %arrayidx19 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %32, i32 %33
  %dl20 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx19, i32 0, i32 1
  %len21 = bitcast %union.anon.5* %dl20 to i16*
  store i16 %conv18, i16* %len21, align 2
  %34 = load i32, i32* %n, align 4
  %35 = load i32, i32* %max_code, align 4
  %cmp22 = icmp sgt i32 %34, %35
  br i1 %cmp22, label %if.then24, label %if.end25

if.then24:                                        ; preds = %if.end
  br label %for.inc47

if.end25:                                         ; preds = %if.end
  %36 = load i32, i32* %bits, align 4
  %arrayidx26 = getelementptr inbounds [16 x i16], [16 x i16]* @bl_count, i32 0, i32 %36
  %37 = load i16, i16* %arrayidx26, align 2
  %inc27 = add i16 %37, 1
  store i16 %inc27, i16* %arrayidx26, align 2
  store i32 0, i32* %xbits, align 4
  %38 = load i32, i32* %n, align 4
  %39 = load i32, i32* %base, align 4
  %cmp28 = icmp sge i32 %38, %39
  br i1 %cmp28, label %if.then30, label %if.end32

if.then30:                                        ; preds = %if.end25
  %40 = load i32*, i32** %extra, align 4
  %41 = load i32, i32* %n, align 4
  %42 = load i32, i32* %base, align 4
  %sub = sub nsw i32 %41, %42
  %arrayidx31 = getelementptr inbounds i32, i32* %40, i32 %sub
  %43 = load i32, i32* %arrayidx31, align 4
  store i32 %43, i32* %xbits, align 4
  br label %if.end32

if.end32:                                         ; preds = %if.then30, %if.end25
  %44 = load %struct.ct_data*, %struct.ct_data** %tree, align 4
  %45 = load i32, i32* %n, align 4
  %arrayidx33 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %44, i32 %45
  %fc = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx33, i32 0, i32 0
  %freq = bitcast %union.anon.5* %fc to i16*
  %46 = load i16, i16* %freq, align 2
  store i16 %46, i16* %f, align 2
  %47 = load i16, i16* %f, align 2
  %conv34 = zext i16 %47 to i32
  %48 = load i32, i32* %bits, align 4
  %49 = load i32, i32* %xbits, align 4
  %add35 = add nsw i32 %48, %49
  %mul = mul i32 %conv34, %add35
  %50 = load i32, i32* @opt_len, align 4
  %add36 = add i32 %50, %mul
  store i32 %add36, i32* @opt_len, align 4
  %51 = load %struct.ct_data*, %struct.ct_data** %stree, align 4
  %tobool = icmp ne %struct.ct_data* %51, null
  br i1 %tobool, label %if.then37, label %if.end46

if.then37:                                        ; preds = %if.end32
  %52 = load i16, i16* %f, align 2
  %conv38 = zext i16 %52 to i32
  %53 = load %struct.ct_data*, %struct.ct_data** %stree, align 4
  %54 = load i32, i32* %n, align 4
  %arrayidx39 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %53, i32 %54
  %dl40 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx39, i32 0, i32 1
  %len41 = bitcast %union.anon.5* %dl40 to i16*
  %55 = load i16, i16* %len41, align 2
  %conv42 = zext i16 %55 to i32
  %56 = load i32, i32* %xbits, align 4
  %add43 = add nsw i32 %conv42, %56
  %mul44 = mul i32 %conv38, %add43
  %57 = load i32, i32* @static_len, align 4
  %add45 = add i32 %57, %mul44
  store i32 %add45, i32* @static_len, align 4
  br label %if.end46

if.end46:                                         ; preds = %if.then37, %if.end32
  br label %for.inc47

for.inc47:                                        ; preds = %if.end46, %if.then24
  %58 = load i32, i32* %h, align 4
  %inc48 = add nsw i32 %58, 1
  store i32 %inc48, i32* %h, align 4
  br label %for.cond5

for.end49:                                        ; preds = %for.cond5
  %59 = load i32, i32* %overflow, align 4
  %cmp50 = icmp eq i32 %59, 0
  br i1 %cmp50, label %if.then52, label %if.end53

if.then52:                                        ; preds = %for.end49
  br label %for.end114

if.end53:                                         ; preds = %for.end49
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.end53
  %60 = load i32, i32* %max_length, align 4
  %sub54 = sub nsw i32 %60, 1
  store i32 %sub54, i32* %bits, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %do.body
  %61 = load i32, i32* %bits, align 4
  %arrayidx55 = getelementptr inbounds [16 x i16], [16 x i16]* @bl_count, i32 0, i32 %61
  %62 = load i16, i16* %arrayidx55, align 2
  %conv56 = zext i16 %62 to i32
  %cmp57 = icmp eq i32 %conv56, 0
  br i1 %cmp57, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %63 = load i32, i32* %bits, align 4
  %dec = add nsw i32 %63, -1
  store i32 %dec, i32* %bits, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %64 = load i32, i32* %bits, align 4
  %arrayidx59 = getelementptr inbounds [16 x i16], [16 x i16]* @bl_count, i32 0, i32 %64
  %65 = load i16, i16* %arrayidx59, align 2
  %dec60 = add i16 %65, -1
  store i16 %dec60, i16* %arrayidx59, align 2
  %66 = load i32, i32* %bits, align 4
  %add61 = add nsw i32 %66, 1
  %arrayidx62 = getelementptr inbounds [16 x i16], [16 x i16]* @bl_count, i32 0, i32 %add61
  %67 = load i16, i16* %arrayidx62, align 2
  %conv63 = zext i16 %67 to i32
  %add64 = add nsw i32 %conv63, 2
  %conv65 = trunc i32 %add64 to i16
  store i16 %conv65, i16* %arrayidx62, align 2
  %68 = load i32, i32* %max_length, align 4
  %arrayidx66 = getelementptr inbounds [16 x i16], [16 x i16]* @bl_count, i32 0, i32 %68
  %69 = load i16, i16* %arrayidx66, align 2
  %dec67 = add i16 %69, -1
  store i16 %dec67, i16* %arrayidx66, align 2
  %70 = load i32, i32* %overflow, align 4
  %sub68 = sub nsw i32 %70, 2
  store i32 %sub68, i32* %overflow, align 4
  br label %do.cond

do.cond:                                          ; preds = %while.end
  %71 = load i32, i32* %overflow, align 4
  %cmp69 = icmp sgt i32 %71, 0
  br i1 %cmp69, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  %72 = load i32, i32* %max_length, align 4
  store i32 %72, i32* %bits, align 4
  br label %for.cond71

for.cond71:                                       ; preds = %for.inc112, %do.end
  %73 = load i32, i32* %bits, align 4
  %cmp72 = icmp ne i32 %73, 0
  br i1 %cmp72, label %for.body74, label %for.end114

for.body74:                                       ; preds = %for.cond71
  %74 = load i32, i32* %bits, align 4
  %arrayidx75 = getelementptr inbounds [16 x i16], [16 x i16]* @bl_count, i32 0, i32 %74
  %75 = load i16, i16* %arrayidx75, align 2
  %conv76 = zext i16 %75 to i32
  store i32 %conv76, i32* %n, align 4
  br label %CallOutFuncBB

CallOutFuncBB:                                    ; preds = %for.body74
  call void @while.cond77.OutLineFunc(i32* %n, i32* %h, i32* %m, i32* %max_code, %struct.ct_data** %tree, i32* %bits)
  %76 = getelementptr inbounds %Struct.RetValue.31, %Struct.RetValue.31* @Struct.RetValue.40, i32 0, i32 0
  %77 = load i32*, i32** %76, align 4
  %78 = load i32, i32* %77, align 4
  store i32 %78, i32* %n
  %79 = getelementptr inbounds %Struct.RetValue.31, %Struct.RetValue.31* @Struct.RetValue.40, i32 0, i32 1
  %80 = load i32*, i32** %79, align 4
  %81 = load i32, i32* %80, align 4
  store i32 %81, i32* %h
  %82 = getelementptr inbounds %Struct.RetValue.31, %Struct.RetValue.31* @Struct.RetValue.40, i32 0, i32 2
  %83 = load i32*, i32** %82, align 4
  %84 = load i32, i32* %83, align 4
  store i32 %84, i32* %m
  br label %for.inc112

for.inc112:                                       ; preds = %CallOutFuncBB
  %85 = load i32, i32* %bits, align 4
  %dec113 = add nsw i32 %85, -1
  store i32 %dec113, i32* %bits, align 4
  br label %for.cond71

for.end114:                                       ; preds = %for.cond71, %if.then52
  ret void
}

; Function Attrs: noinline nounwind optnone sspstrong
define dso_local i32 @ct_tally(i32 %dist, i32 %lc) #0 {
entry:
  %retval = alloca i32, align 4
  %lc.addr = alloca i32, align 4
  %dist.addr = alloca i32, align 4
  %out_length = alloca i32, align 4
  %in_length = alloca i32, align 4
  %dcode = alloca i32, align 4
  store i32 %lc, i32* %lc.addr, align 4
  store i32 %dist, i32* %dist.addr, align 4
  %0 = load i32, i32* %lc.addr, align 4
  %conv = trunc i32 %0 to i8
  %1 = load i32, i32* @last_lit, align 4
  %inc = add i32 %1, 1
  store i32 %inc, i32* @last_lit, align 4
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i32 0, i32 %1
  store i8 %conv, i8* %arrayidx, align 1
  %2 = load i32, i32* %dist.addr, align 4
  %cmp = icmp eq i32 %2, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %lc.addr, align 4
  %arrayidx2 = getelementptr inbounds [573 x %struct.ct_data], [573 x %struct.ct_data]* @dyn_ltree, i32 0, i32 %3
  %fc = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx2, i32 0, i32 0
  %freq = bitcast %union.anon.5* %fc to i16*
  %4 = load i16, i16* %freq, align 2
  %inc3 = add i16 %4, 1
  store i16 %inc3, i16* %freq, align 2
  br label %CallOutFuncBB

if.else:                                          ; preds = %entry
  %5 = load i32, i32* %dist.addr, align 4
  %dec = add nsw i32 %5, -1
  store i32 %dec, i32* %dist.addr, align 4
  %6 = load i32, i32* %lc.addr, align 4
  %arrayidx4 = getelementptr inbounds [256 x i8], [256 x i8]* @length_code, i32 0, i32 %6
  %7 = load i8, i8* %arrayidx4, align 1
  %conv5 = zext i8 %7 to i32
  %add = add nsw i32 %conv5, 256
  %add6 = add nsw i32 %add, 1
  %arrayidx7 = getelementptr inbounds [573 x %struct.ct_data], [573 x %struct.ct_data]* @dyn_ltree, i32 0, i32 %add6
  %fc8 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx7, i32 0, i32 0
  %freq9 = bitcast %union.anon.5* %fc8 to i16*
  %8 = load i16, i16* %freq9, align 2
  %inc10 = add i16 %8, 1
  store i16 %inc10, i16* %freq9, align 2
  %9 = load i32, i32* %dist.addr, align 4
  %cmp11 = icmp slt i32 %9, 256
  br i1 %cmp11, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.else
  %10 = load i32, i32* %dist.addr, align 4
  %arrayidx13 = getelementptr inbounds [512 x i8], [512 x i8]* @dist_code, i32 0, i32 %10
  %11 = load i8, i8* %arrayidx13, align 1
  %conv14 = zext i8 %11 to i32
  br label %cond.end

cond.false:                                       ; preds = %if.else
  %12 = load i32, i32* %dist.addr, align 4
  %shr = ashr i32 %12, 7
  %add15 = add nsw i32 256, %shr
  %arrayidx16 = getelementptr inbounds [512 x i8], [512 x i8]* @dist_code, i32 0, i32 %add15
  %13 = load i8, i8* %arrayidx16, align 1
  %conv17 = zext i8 %13 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv14, %cond.true ], [ %conv17, %cond.false ]
  %arrayidx18 = getelementptr inbounds [61 x %struct.ct_data], [61 x %struct.ct_data]* @dyn_dtree, i32 0, i32 %cond
  %fc19 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx18, i32 0, i32 0
  %freq20 = bitcast %union.anon.5* %fc19 to i16*
  %14 = load i16, i16* %freq20, align 2
  %inc21 = add i16 %14, 1
  store i16 %inc21, i16* %freq20, align 2
  %15 = load i32, i32* %dist.addr, align 4
  %conv22 = trunc i32 %15 to i16
  %16 = load i32, i32* @last_dist, align 4
  %inc23 = add i32 %16, 1
  store i32 %inc23, i32* @last_dist, align 4
  %arrayidx24 = getelementptr inbounds [0 x i16], [0 x i16]* bitcast ([32768 x i16]* @d_buf to [0 x i16]*), i32 0, i32 %16
  store i16 %conv22, i16* %arrayidx24, align 2
  %17 = load i8, i8* @flag_bit, align 1
  %conv25 = zext i8 %17 to i32
  %18 = load i8, i8* @flags, align 1
  %conv26 = zext i8 %18 to i32
  %or = or i32 %conv26, %conv25
  %conv27 = trunc i32 %or to i8
  store i8 %conv27, i8* @flags, align 1
  br label %CallOutFuncBB

CallOutFuncBB:                                    ; preds = %if.then, %cond.end
  call void @if.end.OutLineFunc()
  br label %new

new:                                              ; preds = %CallOutFuncBB
  %19 = load i32, i32* @level, align 4
  %cmp36 = icmp sgt i32 %19, 2
  br i1 %cmp36, label %land.lhs.true, label %if.end62

land.lhs.true:                                    ; preds = %new
  %20 = load i32, i32* @last_lit, align 4
  %and38 = and i32 %20, 4095
  %cmp39 = icmp eq i32 %and38, 0
  br i1 %cmp39, label %if.then41, label %if.end62

if.then41:                                        ; preds = %land.lhs.true
  %21 = load i32, i32* @last_lit, align 4
  %mul = mul i32 %21, 8
  store i32 %mul, i32* %out_length, align 4
  %22 = load i32, i32* @strstart, align 4
  %23 = load i32, i32* @block_start, align 4
  %sub = sub i32 %22, %23
  store i32 %sub, i32* %in_length, align 4
  store i32 0, i32* %dcode, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then41
  %24 = load i32, i32* %dcode, align 4
  %cmp42 = icmp slt i32 %24, 30
  br i1 %cmp42, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %25 = load i32, i32* %dcode, align 4
  %arrayidx44 = getelementptr inbounds [61 x %struct.ct_data], [61 x %struct.ct_data]* @dyn_dtree, i32 0, i32 %25
  %fc45 = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx44, i32 0, i32 0
  %freq46 = bitcast %union.anon.5* %fc45 to i16*
  %26 = load i16, i16* %freq46, align 2
  %conv47 = zext i16 %26 to i32
  %27 = load i32, i32* %dcode, align 4
  %arrayidx48 = getelementptr inbounds [30 x i32], [30 x i32]* @extra_dbits, i32 0, i32 %27
  %28 = load i32, i32* %arrayidx48, align 4
  %add49 = add nsw i32 5, %28
  %mul50 = mul i32 %conv47, %add49
  %29 = load i32, i32* %out_length, align 4
  %add51 = add i32 %29, %mul50
  store i32 %add51, i32* %out_length, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %30 = load i32, i32* %dcode, align 4
  %inc52 = add nsw i32 %30, 1
  store i32 %inc52, i32* %dcode, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %31 = load i32, i32* %out_length, align 4
  %shr53 = lshr i32 %31, 3
  store i32 %shr53, i32* %out_length, align 4
  %32 = load i32, i32* @last_dist, align 4
  %33 = load i32, i32* @last_lit, align 4
  %div = udiv i32 %33, 2
  %cmp54 = icmp ult i32 %32, %div
  br i1 %cmp54, label %land.lhs.true56, label %if.end61

land.lhs.true56:                                  ; preds = %for.end
  %34 = load i32, i32* %out_length, align 4
  %35 = load i32, i32* %in_length, align 4
  %div57 = udiv i32 %35, 2
  %cmp58 = icmp ult i32 %34, %div57
  br i1 %cmp58, label %if.then60, label %if.end61

if.then60:                                        ; preds = %land.lhs.true56
  store i32 1, i32* %retval, align 4
  br label %return

if.end61:                                         ; preds = %land.lhs.true56, %for.end
  br label %if.end62

if.end62:                                         ; preds = %if.end61, %land.lhs.true, %new
  %36 = load i32, i32* @last_lit, align 4
  %cmp63 = icmp eq i32 %36, 32767
  br i1 %cmp63, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.end62
  %37 = load i32, i32* @last_dist, align 4
  %cmp65 = icmp eq i32 %37, 32768
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %if.end62
  %38 = phi i1 [ true, %if.end62 ], [ %cmp65, %lor.rhs ]
  %lor.ext = zext i1 %38 to i32
  store i32 %lor.ext, i32* %retval, align 4
  br label %return

return:                                           ; preds = %lor.end, %if.then60
  %39 = load i32, i32* %retval, align 4
  ret i32 %39
}

; Function Attrs: noinline optnone sspstrong
define dso_local i32 @unlzh(i32 %in, i32 %out) #1 {
entry:
  %out.addr = alloca i32, align 4
  %in.addr = alloca i32, align 4
  %n = alloca i32, align 4
  store i32 %out, i32* %out.addr, align 4
  store i32 %in, i32* %in.addr, align 4
  %0 = load i32, i32* %in.addr, align 4
  store i32 %0, i32* @ifd, align 4
  %1 = load i32, i32* %out.addr, align 4
  store i32 %1, i32* @ofd, align 4
  call void @decode_start()
  %RetValuePtr = alloca i32, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end, %entry
  %2 = load i32, i32* @done, align 4
  %tobool = icmp ne i32 %2, 0
  %lnot = xor i1 %tobool, true
  br i1 %lnot, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %call = call i32 @decode(i32 8192, i8* getelementptr inbounds ([65536 x i8], [65536 x i8]* @window, i32 0, i32 0))
  store i32 %call, i32* %n, align 4
  %3 = load i32, i32* @test, align 4
  %tobool1 = icmp ne i32 %3, 0
  br i1 %tobool1, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %while.body
  %4 = load i32, i32* %n, align 4
  %cmp = icmp ugt i32 %4, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %5 = load i32, i32* %n, align 4
  %6 = load i32, i32* %out.addr, align 4
  br label %entry.write_buf.Clone

entry.write_buf.Clone:                            ; preds = %if.then
  %cnt.addr.write_buf.Clone = alloca i32, align 4
  %buf.addr.write_buf.Clone = alloca i8*, align 4
  %fd.addr.write_buf.Clone = alloca i32, align 4
  %n.write_buf.Clone = alloca i32, align 4
  store i32 %5, i32* %cnt.addr.write_buf.Clone, align 4
  store i8* getelementptr inbounds ([65536 x i8], [65536 x i8]* @window, i32 0, i32 0), i8** %buf.addr.write_buf.Clone, align 4
  store i32 %6, i32* %fd.addr.write_buf.Clone, align 4
  br label %while.cond.write_buf.Clone

while.cond.write_buf.Clone:                       ; preds = %if.end.write_buf.Clone, %entry.write_buf.Clone
  %7 = load i32, i32* %cnt.addr.write_buf.Clone, align 4
  %8 = load i8*, i8** %buf.addr.write_buf.Clone, align 4
  %9 = load i32, i32* %fd.addr.write_buf.Clone, align 4
  br label %entry.spec_write.Clone

entry.spec_write.Clone:                           ; preds = %while.cond.write_buf.Clone
  %size.addr.spec_write.Clone = alloca i32, align 4
  %buf.addr.spec_write.Clone = alloca i8*, align 4
  %fd.addr.spec_write.Clone = alloca i32, align 4
  store i32 %7, i32* %size.addr.spec_write.Clone, align 4
  store i8* %8, i8** %buf.addr.spec_write.Clone, align 4
  store i32 %9, i32* %fd.addr.spec_write.Clone, align 4
  %10 = load i32, i32* @dbglvl, align 4
  %cmp.spec_write.Clone = icmp slt i32 4, %10
  br i1 %cmp.spec_write.Clone, label %if.then.spec_write.Clone, label %if.end.spec_write.Clone

if.then.spec_write.Clone:                         ; preds = %entry.spec_write.Clone
  %11 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %12 = load i8*, i8** %buf.addr.spec_write.Clone, align 4
  %13 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %call.spec_write.Clone = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @"??_C@_0BK@GKFGHPHN@spec_write?3?5?$CFd?0?5?$CFx?0?5?$CFd?5?$DN?5?$AA@", i32 0, i32 0), i32 %13, i8* %12, i32 %11)
  br label %if.end.spec_write.Clone

if.end.spec_write.Clone:                          ; preds = %if.then.spec_write.Clone, %entry.spec_write.Clone
  %14 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %cmp1.spec_write.Clone = icmp sgt i32 %14, 3
  br i1 %cmp1.spec_write.Clone, label %if.then2.spec_write.Clone, label %if.end5.spec_write.Clone

if.then2.spec_write.Clone:                        ; preds = %if.end.spec_write.Clone
  %15 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %call3.spec_write.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx.spec_write.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.spec_write.Clone, i32 2
  %call4.spec_write.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.spec_write.Clone, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"??_C@_0CD@NANFEFEM@spec_write?3?5fd?$DN?$CFd?0?5?$DO?5MAX_SPEC_FD@", i32 0, i32 0), i32 %15)
  call void @exit(i32 1) #7
  unreachable

if.end5.spec_write.Clone:                         ; preds = %if.end.spec_write.Clone
  %16 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx6.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %16
  %buf7.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx6.spec_write.Clone, i32 0, i32 3
  %17 = load i8*, i8** %buf7.spec_write.Clone, align 4
  %18 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx8.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %18
  %pos.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx8.spec_write.Clone, i32 0, i32 2
  %19 = load i32, i32* %pos.spec_write.Clone, align 4
  %arrayidx9.spec_write.Clone = getelementptr inbounds i8, i8* %17, i32 %19
  %20 = load i8*, i8** %buf.addr.spec_write.Clone, align 4
  %21 = load i32, i32* %size.addr.spec_write.Clone, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %arrayidx9.spec_write.Clone, i8* align 1 %20, i32 %21, i1 false)
  %22 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %23 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx10.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %23
  %len.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx10.spec_write.Clone, i32 0, i32 1
  %24 = load i32, i32* %len.spec_write.Clone, align 4
  %add.spec_write.Clone = add nsw i32 %24, %22
  store i32 %add.spec_write.Clone, i32* %len.spec_write.Clone, align 4
  %25 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %26 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx11.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %26
  %pos12.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx11.spec_write.Clone, i32 0, i32 2
  %27 = load i32, i32* %pos12.spec_write.Clone, align 4
  %add13.spec_write.Clone = add nsw i32 %27, %25
  store i32 %add13.spec_write.Clone, i32* %pos12.spec_write.Clone, align 4
  %28 = load i32, i32* @dbglvl, align 4
  %cmp14.spec_write.Clone = icmp slt i32 4, %28
  br i1 %cmp14.spec_write.Clone, label %if.then15.spec_write.Clone, label %if.end17.spec_write.Clone

if.then15.spec_write.Clone:                       ; preds = %if.end5.spec_write.Clone
  %29 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %call16.spec_write.Clone = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"??_C@_03PMGGPEJJ@?$CFd?6?$AA@", i32 0, i32 0), i32 %29)
  br label %if.end17.spec_write.Clone

if.end17.spec_write.Clone:                        ; preds = %if.then15.spec_write.Clone, %if.end5.spec_write.Clone
  %30 = load i32, i32* %size.addr.spec_write.Clone, align 4
  store i32 %30, i32* %RetValuePtr
  br label %while.cond.write_buf.Clone.Split

while.cond.write_buf.Clone.Split:                 ; preds = %if.end17.spec_write.Clone
  %RetValue = load i32, i32* %RetValuePtr
  store i32 %RetValue, i32* %n.write_buf.Clone, align 4
  %31 = load i32, i32* %cnt.addr.write_buf.Clone, align 4
  %cmp.write_buf.Clone = icmp ne i32 %RetValue, %31
  br i1 %cmp.write_buf.Clone, label %while.body.write_buf.Clone, label %while.end.write_buf.Clone

while.body.write_buf.Clone:                       ; preds = %while.cond.write_buf.Clone.Split
  %32 = load i32, i32* %n.write_buf.Clone, align 4
  %cmp1.write_buf.Clone = icmp eq i32 %32, -1
  br i1 %cmp1.write_buf.Clone, label %if.then.write_buf.Clone, label %if.end.write_buf.Clone

if.then.write_buf.Clone:                          ; preds = %while.body.write_buf.Clone
  call void @write_error()
  br label %if.end.write_buf.Clone

if.end.write_buf.Clone:                           ; preds = %if.then.write_buf.Clone, %while.body.write_buf.Clone
  %33 = load i32, i32* %n.write_buf.Clone, align 4
  %34 = load i32, i32* %cnt.addr.write_buf.Clone, align 4
  %sub.write_buf.Clone = sub i32 %34, %33
  store i32 %sub.write_buf.Clone, i32* %cnt.addr.write_buf.Clone, align 4
  %35 = load i8*, i8** %buf.addr.write_buf.Clone, align 4
  %36 = load i32, i32* %n.write_buf.Clone, align 4
  %add.ptr.write_buf.Clone = getelementptr inbounds i8, i8* %35, i32 %36
  store i8* %add.ptr.write_buf.Clone, i8** %buf.addr.write_buf.Clone, align 4
  br label %while.cond.write_buf.Clone

while.end.write_buf.Clone:                        ; preds = %while.cond.write_buf.Clone.Split
  br label %if.then.Split

if.then.Split:                                    ; preds = %while.end.write_buf.Clone
  br label %if.end

if.end:                                           ; preds = %if.then.Split, %land.lhs.true, %while.body
  br label %while.cond

while.end:                                        ; preds = %while.cond
  ret i32 0
}

; Function Attrs: noinline optnone sspstrong
define internal void @decode_start() #1 {
entry:
  call void @huf_decode_start()
  store i32 0, i32* @j, align 4
  store i32 0, i32* @done, align 4
  ret void
}

; Function Attrs: noinline optnone sspstrong
define internal i32 @decode(i32 %count, i8* %buffer) #1 {
entry:
  %retval = alloca i32, align 4
  %buffer.addr = alloca i8*, align 4
  %count.addr = alloca i32, align 4
  %r = alloca i32, align 4
  %c = alloca i32, align 4
  store i8* %buffer, i8** %buffer.addr, align 4
  store i32 %count, i32* %count.addr, align 4
  store i32 0, i32* %r, align 4
  %RetValuePtr = alloca i32, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end, %entry
  %0 = load i32, i32* @j, align 4
  %dec = add nsw i32 %0, -1
  store i32 %dec, i32* @j, align 4
  %cmp = icmp sge i32 %dec, 0
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %1 = load i8*, i8** %buffer.addr, align 4
  %2 = load i32, i32* @decode.i, align 4
  %arrayidx = getelementptr inbounds i8, i8* %1, i32 %2
  %3 = load i8, i8* %arrayidx, align 1
  %4 = load i8*, i8** %buffer.addr, align 4
  %5 = load i32, i32* %r, align 4
  %arrayidx1 = getelementptr inbounds i8, i8* %4, i32 %5
  store i8 %3, i8* %arrayidx1, align 1
  %6 = load i32, i32* @decode.i, align 4
  %add = add i32 %6, 1
  %and = and i32 %add, 8191
  store i32 %and, i32* @decode.i, align 4
  %7 = load i32, i32* %r, align 4
  %inc = add i32 %7, 1
  store i32 %inc, i32* %r, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp2 = icmp eq i32 %inc, %8
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %while.body
  %9 = load i32, i32* %r, align 4
  store i32 %9, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %while.body
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %for.cond

for.cond:                                         ; preds = %if.end33, %while.end
  %call = call i32 @decode_c()
  store i32 %call, i32* %c, align 4
  %10 = load i32, i32* %c, align 4
  %cmp3 = icmp eq i32 %10, 510
  br i1 %cmp3, label %if.then4, label %if.end5

if.then4:                                         ; preds = %for.cond
  store i32 1, i32* @done, align 4
  %11 = load i32, i32* %r, align 4
  store i32 %11, i32* %retval, align 4
  br label %return

if.end5:                                          ; preds = %for.cond
  %12 = load i32, i32* %c, align 4
  %cmp6 = icmp ule i32 %12, 255
  br i1 %cmp6, label %if.then7, label %if.else

if.then7:                                         ; preds = %if.end5
  %13 = load i32, i32* %c, align 4
  %conv = trunc i32 %13 to i8
  %14 = load i8*, i8** %buffer.addr, align 4
  %15 = load i32, i32* %r, align 4
  %arrayidx8 = getelementptr inbounds i8, i8* %14, i32 %15
  store i8 %conv, i8* %arrayidx8, align 1
  %16 = load i32, i32* %r, align 4
  %inc9 = add i32 %16, 1
  store i32 %inc9, i32* %r, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp10 = icmp eq i32 %inc9, %17
  br i1 %cmp10, label %if.then12, label %if.end13

if.then12:                                        ; preds = %if.then7
  %18 = load i32, i32* %r, align 4
  store i32 %18, i32* %retval, align 4
  br label %return

if.end13:                                         ; preds = %if.then7
  br label %if.end33

if.else:                                          ; preds = %if.end5
  %19 = load i32, i32* %c, align 4
  %sub = sub i32 %19, 253
  store i32 %sub, i32* @j, align 4
  %20 = load i32, i32* %r, align 4
  br label %entry.decode_p.Clone

entry.decode_p.Clone:                             ; preds = %if.else
  %j.decode_p.Clone = alloca i32, align 4
  %mask.decode_p.Clone = alloca i32, align 4
  %21 = load i16, i16* @bitbuf, align 2
  %conv.decode_p.Clone = zext i16 %21 to i32
  %shr.decode_p.Clone = ashr i32 %conv.decode_p.Clone, 8
  %arrayidx.decode_p.Clone = getelementptr inbounds [256 x i16], [256 x i16]* @pt_table, i32 0, i32 %shr.decode_p.Clone
  %22 = load i16, i16* %arrayidx.decode_p.Clone, align 2
  %conv1.decode_p.Clone = zext i16 %22 to i32
  store i32 %conv1.decode_p.Clone, i32* %j.decode_p.Clone, align 4
  %23 = load i32, i32* %j.decode_p.Clone, align 4
  %cmp.decode_p.Clone = icmp uge i32 %23, 14
  %RetValuePtr.decode_p.Clone = alloca i32, align 4
  br i1 %cmp.decode_p.Clone, label %if.then.decode_p.Clone, label %if.end12.decode_p.Clone

if.then.decode_p.Clone:                           ; preds = %entry.decode_p.Clone
  store i32 128, i32* %mask.decode_p.Clone, align 4
  br label %do.body.decode_p.Clone

do.body.decode_p.Clone:                           ; preds = %do.cond.decode_p.Clone, %if.then.decode_p.Clone
  %24 = load i16, i16* @bitbuf, align 2
  %conv3.decode_p.Clone = zext i16 %24 to i32
  %25 = load i32, i32* %mask.decode_p.Clone, align 4
  %and.decode_p.Clone = and i32 %conv3.decode_p.Clone, %25
  %tobool.decode_p.Clone = icmp ne i32 %and.decode_p.Clone, 0
  br i1 %tobool.decode_p.Clone, label %if.then4.decode_p.Clone, label %if.else.decode_p.Clone

if.then4.decode_p.Clone:                          ; preds = %do.body.decode_p.Clone
  %26 = load i32, i32* %j.decode_p.Clone, align 4
  %arrayidx5.decode_p.Clone = getelementptr inbounds i16, i16* getelementptr inbounds ([65536 x i16], [65536 x i16]* @prev, i32 0, i32 32768), i32 %26
  %27 = load i16, i16* %arrayidx5.decode_p.Clone, align 2
  %conv6.decode_p.Clone = zext i16 %27 to i32
  store i32 %conv6.decode_p.Clone, i32* %j.decode_p.Clone, align 4
  br label %if.end.decode_p.Clone

if.else.decode_p.Clone:                           ; preds = %do.body.decode_p.Clone
  %28 = load i32, i32* %j.decode_p.Clone, align 4
  %arrayidx7.decode_p.Clone = getelementptr inbounds [0 x i16], [0 x i16]* bitcast ([65536 x i16]* @prev to [0 x i16]*), i32 0, i32 %28
  %29 = load i16, i16* %arrayidx7.decode_p.Clone, align 2
  %conv8.decode_p.Clone = zext i16 %29 to i32
  store i32 %conv8.decode_p.Clone, i32* %j.decode_p.Clone, align 4
  br label %if.end.decode_p.Clone

if.end.decode_p.Clone:                            ; preds = %if.else.decode_p.Clone, %if.then4.decode_p.Clone
  %30 = load i32, i32* %mask.decode_p.Clone, align 4
  %shr9.decode_p.Clone = lshr i32 %30, 1
  store i32 %shr9.decode_p.Clone, i32* %mask.decode_p.Clone, align 4
  br label %do.cond.decode_p.Clone

do.cond.decode_p.Clone:                           ; preds = %if.end.decode_p.Clone
  %31 = load i32, i32* %j.decode_p.Clone, align 4
  %cmp10.decode_p.Clone = icmp uge i32 %31, 14
  br i1 %cmp10.decode_p.Clone, label %do.body.decode_p.Clone, label %do.end.decode_p.Clone

do.end.decode_p.Clone:                            ; preds = %do.cond.decode_p.Clone
  br label %if.end12.decode_p.Clone

if.end12.decode_p.Clone:                          ; preds = %do.end.decode_p.Clone, %entry.decode_p.Clone
  %32 = load i32, i32* %j.decode_p.Clone, align 4
  %arrayidx13.decode_p.Clone = getelementptr inbounds [19 x i8], [19 x i8]* @pt_len, i32 0, i32 %32
  %33 = load i8, i8* %arrayidx13.decode_p.Clone, align 1
  %conv14.decode_p.Clone = zext i8 %33 to i32
  br label %entry.fillbuf.Clone1.decode_p.Clone

entry.fillbuf.Clone1.decode_p.Clone:              ; preds = %if.end12.decode_p.Clone
  %n.addr.fillbuf.Clone2.decode_p.Clone = alloca i32, align 4
  store i32 %conv14.decode_p.Clone, i32* %n.addr.fillbuf.Clone2.decode_p.Clone, align 4
  %34 = load i32, i32* %n.addr.fillbuf.Clone2.decode_p.Clone, align 4
  %35 = load i16, i16* @bitbuf, align 2
  %conv.fillbuf.Clone3.decode_p.Clone = zext i16 %35 to i32
  %shl.fillbuf.Clone4.decode_p.Clone = shl i32 %conv.fillbuf.Clone3.decode_p.Clone, %34
  %conv1.fillbuf.Clone5.decode_p.Clone = trunc i32 %shl.fillbuf.Clone4.decode_p.Clone to i16
  store i16 %conv1.fillbuf.Clone5.decode_p.Clone, i16* @bitbuf, align 2
  %RetValuePtr.fillbuf.Clone6.decode_p.Clone = alloca i32, align 4
  br label %while.cond.fillbuf.Clone7.decode_p.Clone

while.cond.fillbuf.Clone7.decode_p.Clone:         ; preds = %if.end.fillbuf.Clone54.decode_p.Clone, %entry.fillbuf.Clone1.decode_p.Clone
  %36 = load i32, i32* %n.addr.fillbuf.Clone2.decode_p.Clone, align 4
  %37 = load i32, i32* @bitcount, align 4
  %cmp.fillbuf.Clone8.decode_p.Clone = icmp sgt i32 %36, %37
  br i1 %cmp.fillbuf.Clone8.decode_p.Clone, label %while.body.fillbuf.Clone9.decode_p.Clone, label %while.end.fillbuf.Clone55.decode_p.Clone

while.body.fillbuf.Clone9.decode_p.Clone:         ; preds = %while.cond.fillbuf.Clone7.decode_p.Clone
  %38 = load i32, i32* @subbitbuf, align 4
  %39 = load i32, i32* @bitcount, align 4
  %40 = load i32, i32* %n.addr.fillbuf.Clone2.decode_p.Clone, align 4
  %sub.fillbuf.Clone10.decode_p.Clone = sub nsw i32 %40, %39
  store i32 %sub.fillbuf.Clone10.decode_p.Clone, i32* %n.addr.fillbuf.Clone2.decode_p.Clone, align 4
  %shl3.fillbuf.Clone11.decode_p.Clone = shl i32 %38, %sub.fillbuf.Clone10.decode_p.Clone
  %41 = load i16, i16* @bitbuf, align 2
  %conv4.fillbuf.Clone12.decode_p.Clone = zext i16 %41 to i32
  %or.fillbuf.Clone13.decode_p.Clone = or i32 %conv4.fillbuf.Clone12.decode_p.Clone, %shl3.fillbuf.Clone11.decode_p.Clone
  %conv5.fillbuf.Clone14.decode_p.Clone = trunc i32 %or.fillbuf.Clone13.decode_p.Clone to i16
  store i16 %conv5.fillbuf.Clone14.decode_p.Clone, i16* @bitbuf, align 2
  %42 = load i32, i32* @inptr, align 4
  %43 = load i32, i32* @insize, align 4
  %cmp6.fillbuf.Clone15.decode_p.Clone = icmp ult i32 %42, %43
  br i1 %cmp6.fillbuf.Clone15.decode_p.Clone, label %cond.true.fillbuf.Clone16.decode_p.Clone, label %cond.false.fillbuf.Clone20.decode_p.Clone

cond.true.fillbuf.Clone16.decode_p.Clone:         ; preds = %while.body.fillbuf.Clone9.decode_p.Clone
  %44 = load i32, i32* @inptr, align 4
  %inc.fillbuf.Clone17.decode_p.Clone = add i32 %44, 1
  store i32 %inc.fillbuf.Clone17.decode_p.Clone, i32* @inptr, align 4
  %arrayidx.fillbuf.Clone18.decode_p.Clone = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i32 0, i32 %44
  %45 = load i8, i8* %arrayidx.fillbuf.Clone18.decode_p.Clone, align 1
  %conv8.fillbuf.Clone19.decode_p.Clone = zext i8 %45 to i32
  br label %cond.end.fillbuf.Clone50.decode_p.Clone

cond.false.fillbuf.Clone20.decode_p.Clone:        ; preds = %while.body.fillbuf.Clone9.decode_p.Clone
  br label %entry.fill_inbuf.Clone.fillbuf.Clone21.decode_p.Clone

entry.fill_inbuf.Clone.fillbuf.Clone21.decode_p.Clone: ; preds = %cond.false.fillbuf.Clone20.decode_p.Clone
  %retval.fill_inbuf.Clone.fillbuf.Clone22.decode_p.Clone = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone.fillbuf.Clone23.decode_p.Clone = alloca i32, align 4
  %len.fill_inbuf.Clone.fillbuf.Clone24.decode_p.Clone = alloca i32, align 4
  store i32 1, i32* %eof_ok.addr.fill_inbuf.Clone.fillbuf.Clone23.decode_p.Clone, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone.fillbuf.Clone25.decode_p.Clone = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone.fillbuf.Clone25.decode_p.Clone, align 4
  br label %do.body.fill_inbuf.Clone.fillbuf.Clone26.decode_p.Clone

do.body.fill_inbuf.Clone.fillbuf.Clone26.decode_p.Clone: ; preds = %do.cond.fill_inbuf.Clone.fillbuf.Clone36.decode_p.Clone, %entry.fill_inbuf.Clone.fillbuf.Clone21.decode_p.Clone
  %46 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone.fillbuf.Clone27.decode_p.Clone = sub i32 32768, %46
  %47 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone.fillbuf.Clone28.decode_p.Clone = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %47
  %48 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone.fillbuf.Clone29.decode_p.Clone = call i32 @spec_read(i32 %48, i8* %add.ptr.fill_inbuf.Clone.fillbuf.Clone28.decode_p.Clone, i32 %sub.fill_inbuf.Clone.fillbuf.Clone27.decode_p.Clone)
  store i32 %call1.fill_inbuf.Clone.fillbuf.Clone29.decode_p.Clone, i32* %len.fill_inbuf.Clone.fillbuf.Clone24.decode_p.Clone, align 4
  %49 = load i32, i32* %len.fill_inbuf.Clone.fillbuf.Clone24.decode_p.Clone, align 4
  %cmp.fill_inbuf.Clone.fillbuf.Clone30.decode_p.Clone = icmp eq i32 %49, 0
  br i1 %cmp.fill_inbuf.Clone.fillbuf.Clone30.decode_p.Clone, label %if.then.fill_inbuf.Clone.fillbuf.Clone33.decode_p.Clone, label %lor.lhs.false.fill_inbuf.Clone.fillbuf.Clone31.decode_p.Clone

lor.lhs.false.fill_inbuf.Clone.fillbuf.Clone31.decode_p.Clone: ; preds = %do.body.fill_inbuf.Clone.fillbuf.Clone26.decode_p.Clone
  %50 = load i32, i32* %len.fill_inbuf.Clone.fillbuf.Clone24.decode_p.Clone, align 4
  %cmp2.fill_inbuf.Clone.fillbuf.Clone32.decode_p.Clone = icmp eq i32 %50, -1
  br i1 %cmp2.fill_inbuf.Clone.fillbuf.Clone32.decode_p.Clone, label %if.then.fill_inbuf.Clone.fillbuf.Clone33.decode_p.Clone, label %if.end.fill_inbuf.Clone.fillbuf.Clone34.decode_p.Clone

if.then.fill_inbuf.Clone.fillbuf.Clone33.decode_p.Clone: ; preds = %lor.lhs.false.fill_inbuf.Clone.fillbuf.Clone31.decode_p.Clone, %do.body.fill_inbuf.Clone.fillbuf.Clone26.decode_p.Clone
  br label %do.end.fill_inbuf.Clone.fillbuf.Clone38.decode_p.Clone

if.end.fill_inbuf.Clone.fillbuf.Clone34.decode_p.Clone: ; preds = %lor.lhs.false.fill_inbuf.Clone.fillbuf.Clone31.decode_p.Clone
  %51 = load i32, i32* %len.fill_inbuf.Clone.fillbuf.Clone24.decode_p.Clone, align 4
  %52 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone.fillbuf.Clone35.decode_p.Clone = add i32 %52, %51
  store i32 %add.fill_inbuf.Clone.fillbuf.Clone35.decode_p.Clone, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone.fillbuf.Clone36.decode_p.Clone

do.cond.fill_inbuf.Clone.fillbuf.Clone36.decode_p.Clone: ; preds = %if.end.fill_inbuf.Clone.fillbuf.Clone34.decode_p.Clone
  %53 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone.fillbuf.Clone37.decode_p.Clone = icmp ult i32 %53, 32768
  br i1 %cmp3.fill_inbuf.Clone.fillbuf.Clone37.decode_p.Clone, label %do.body.fill_inbuf.Clone.fillbuf.Clone26.decode_p.Clone, label %do.end.fill_inbuf.Clone.fillbuf.Clone38.decode_p.Clone

do.end.fill_inbuf.Clone.fillbuf.Clone38.decode_p.Clone: ; preds = %do.cond.fill_inbuf.Clone.fillbuf.Clone36.decode_p.Clone, %if.then.fill_inbuf.Clone.fillbuf.Clone33.decode_p.Clone
  %54 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone.fillbuf.Clone39.decode_p.Clone = icmp eq i32 %54, 0
  br i1 %cmp4.fill_inbuf.Clone.fillbuf.Clone39.decode_p.Clone, label %if.then5.fill_inbuf.Clone.fillbuf.Clone40.decode_p.Clone, label %if.end8.fill_inbuf.Clone.fillbuf.Clone44.decode_p.Clone

if.then5.fill_inbuf.Clone.fillbuf.Clone40.decode_p.Clone: ; preds = %do.end.fill_inbuf.Clone.fillbuf.Clone38.decode_p.Clone
  %55 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone.fillbuf.Clone23.decode_p.Clone, align 4
  %tobool.fill_inbuf.Clone.fillbuf.Clone41.decode_p.Clone = icmp ne i32 %55, 0
  br i1 %tobool.fill_inbuf.Clone.fillbuf.Clone41.decode_p.Clone, label %if.then6.fill_inbuf.Clone.fillbuf.Clone42.decode_p.Clone, label %if.end7.fill_inbuf.Clone.fillbuf.Clone43.decode_p.Clone

if.then6.fill_inbuf.Clone.fillbuf.Clone42.decode_p.Clone: ; preds = %if.then5.fill_inbuf.Clone.fillbuf.Clone40.decode_p.Clone
  store i32 -1, i32* %retval.fill_inbuf.Clone.fillbuf.Clone22.decode_p.Clone, align 4
  br label %return.fill_inbuf.Clone.fillbuf.Clone47.decode_p.Clone

if.end7.fill_inbuf.Clone.fillbuf.Clone43.decode_p.Clone: ; preds = %if.then5.fill_inbuf.Clone.fillbuf.Clone40.decode_p.Clone
  br label %entry.read_error.Clone.decode_p.Clone

entry.read_error.Clone.decode_p.Clone:            ; preds = %if.end7.fill_inbuf.Clone.fillbuf.Clone43.decode_p.Clone
  %56 = load i8*, i8** @progname, align 4
  %call.read_error.Clone.decode_p.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone.decode_p.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone.decode_p.Clone, i32 2
  %call1.read_error.Clone.decode_p.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone.decode_p.Clone, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %56)
  %call2.read_error.Clone.decode_p.Clone = call i32* @_errno()
  %57 = load i32, i32* %call2.read_error.Clone.decode_p.Clone, align 4
  %cmp.read_error.Clone.decode_p.Clone = icmp ne i32 %57, 0
  br i1 %cmp.read_error.Clone.decode_p.Clone, label %if.then.read_error.Clone.decode_p.Clone, label %if.else.read_error.Clone.decode_p.Clone

if.then.read_error.Clone.decode_p.Clone:          ; preds = %entry.read_error.Clone.decode_p.Clone
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone.decode_p.Clone

if.else.read_error.Clone.decode_p.Clone:          ; preds = %entry.read_error.Clone.decode_p.Clone
  %call3.read_error.Clone.decode_p.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone.decode_p.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone.decode_p.Clone, i32 2
  %call5.read_error.Clone.decode_p.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone.decode_p.Clone, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone.decode_p.Clone

if.end.read_error.Clone.decode_p.Clone:           ; preds = %if.else.read_error.Clone.decode_p.Clone, %if.then.read_error.Clone.decode_p.Clone
  br label %entry.abort_gzip.Clone73.decode_p.Clone

entry.abort_gzip.Clone73.decode_p.Clone:          ; preds = %if.end.read_error.Clone.decode_p.Clone
  %58 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone74.decode_p.Clone = icmp ne i32 %58, 0
  br i1 %tobool.abort_gzip.Clone74.decode_p.Clone, label %if.then.abort_gzip.Clone75.decode_p.Clone, label %if.end.abort_gzip.Clone78.decode_p.Clone

if.then.abort_gzip.Clone75.decode_p.Clone:        ; preds = %entry.abort_gzip.Clone73.decode_p.Clone
  %59 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone76.decode_p.Clone = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %59)
  %call1.abort_gzip.Clone77.decode_p.Clone = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone78.decode_p.Clone

if.end.abort_gzip.Clone78.decode_p.Clone:         ; preds = %if.then.abort_gzip.Clone75.decode_p.Clone, %entry.abort_gzip.Clone73.decode_p.Clone
  br label %entry.do_exit.Clone1

entry.do_exit.Clone1:                             ; preds = %if.end.abort_gzip.Clone78.decode_p.Clone
  %exitcode.addr.do_exit.Clone2 = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone2, align 4
  %60 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone3 = icmp ne i32 %60, 0
  br i1 %tobool.do_exit.Clone3, label %if.then.do_exit.Clone4, label %if.end.do_exit.Clone5

if.then.do_exit.Clone4:                           ; preds = %entry.do_exit.Clone1
  %61 = load i32, i32* %exitcode.addr.do_exit.Clone2, align 4
  call void @exit(i32 %61) #7
  unreachable

if.end.do_exit.Clone5:                            ; preds = %entry.do_exit.Clone1
  store i32 1, i32* @do_exit.in_exit, align 4
  %62 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone6 = icmp ne i8* %62, null
  br i1 %cmp.do_exit.Clone6, label %if.then1.do_exit.Clone7, label %if.end2.do_exit.Clone8

if.then1.do_exit.Clone7:                          ; preds = %if.end.do_exit.Clone5
  %63 = load i8*, i8** @env, align 4
  call void @free(i8* %63) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone8

if.end2.do_exit.Clone8:                           ; preds = %if.then1.do_exit.Clone7, %if.end.do_exit.Clone5
  %64 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone9 = icmp ne i8** %64, null
  br i1 %cmp3.do_exit.Clone9, label %if.then4.do_exit.Clone10, label %if.end5.do_exit.Clone11

if.then4.do_exit.Clone10:                         ; preds = %if.end2.do_exit.Clone8
  %65 = load i8**, i8*** @args, align 4
  %66 = bitcast i8** %65 to i8*
  call void @free(i8* %66) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone11

if.end5.do_exit.Clone11:                          ; preds = %if.then4.do_exit.Clone10, %if.end2.do_exit.Clone8
  %67 = load i32, i32* %exitcode.addr.do_exit.Clone2, align 4
  call void @exit(i32 %67) #7
  unreachable

return.do_exit.Clone12:                           ; No predecessors!
  br label %if.end.abort_gzip.Clone78.decode_p.Clone.Split

if.end.abort_gzip.Clone78.decode_p.Clone.Split:   ; preds = %return.do_exit.Clone12
  br label %if.end.read_error.Clone.Split.decode_p.Clone

if.end.read_error.Clone.Split.decode_p.Clone:     ; preds = %if.end.abort_gzip.Clone78.decode_p.Clone.Split
  br label %if.end7.fill_inbuf.Clone.fillbuf.Clone43.Split.decode_p.Clone

if.end7.fill_inbuf.Clone.fillbuf.Clone43.Split.decode_p.Clone: ; preds = %if.end.read_error.Clone.Split.decode_p.Clone
  br label %if.end8.fill_inbuf.Clone.fillbuf.Clone44.decode_p.Clone

if.end8.fill_inbuf.Clone.fillbuf.Clone44.decode_p.Clone: ; preds = %if.end7.fill_inbuf.Clone.fillbuf.Clone43.Split.decode_p.Clone, %do.end.fill_inbuf.Clone.fillbuf.Clone38.decode_p.Clone
  %68 = load i32, i32* @insize, align 4
  %69 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone.fillbuf.Clone45.decode_p.Clone = add i32 %69, %68
  store i32 %add9.fill_inbuf.Clone.fillbuf.Clone45.decode_p.Clone, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %70 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone.fillbuf.Clone46.decode_p.Clone = zext i8 %70 to i32
  store i32 %conv.fill_inbuf.Clone.fillbuf.Clone46.decode_p.Clone, i32* %retval.fill_inbuf.Clone.fillbuf.Clone22.decode_p.Clone, align 4
  br label %return.fill_inbuf.Clone.fillbuf.Clone47.decode_p.Clone

return.fill_inbuf.Clone.fillbuf.Clone47.decode_p.Clone: ; preds = %if.end8.fill_inbuf.Clone.fillbuf.Clone44.decode_p.Clone, %if.then6.fill_inbuf.Clone.fillbuf.Clone42.decode_p.Clone
  %71 = load i32, i32* %retval.fill_inbuf.Clone.fillbuf.Clone22.decode_p.Clone, align 4
  store i32 %71, i32* %RetValuePtr.fillbuf.Clone6.decode_p.Clone
  br label %cond.false.Split.fillbuf.Clone48.decode_p.Clone

cond.false.Split.fillbuf.Clone48.decode_p.Clone:  ; preds = %return.fill_inbuf.Clone.fillbuf.Clone47.decode_p.Clone
  %RetValue.fillbuf.Clone49.decode_p.Clone = load i32, i32* %RetValuePtr.fillbuf.Clone6.decode_p.Clone
  br label %cond.end.fillbuf.Clone50.decode_p.Clone

cond.end.fillbuf.Clone50.decode_p.Clone:          ; preds = %cond.false.Split.fillbuf.Clone48.decode_p.Clone, %cond.true.fillbuf.Clone16.decode_p.Clone
  %cond.fillbuf.Clone51.decode_p.Clone = phi i32 [ %conv8.fillbuf.Clone19.decode_p.Clone, %cond.true.fillbuf.Clone16.decode_p.Clone ], [ %RetValue.fillbuf.Clone49.decode_p.Clone, %cond.false.Split.fillbuf.Clone48.decode_p.Clone ]
  store i32 %cond.fillbuf.Clone51.decode_p.Clone, i32* @subbitbuf, align 4
  %72 = load i32, i32* @subbitbuf, align 4
  %cmp9.fillbuf.Clone52.decode_p.Clone = icmp eq i32 %72, -1
  br i1 %cmp9.fillbuf.Clone52.decode_p.Clone, label %if.then.fillbuf.Clone53.decode_p.Clone, label %if.end.fillbuf.Clone54.decode_p.Clone

if.then.fillbuf.Clone53.decode_p.Clone:           ; preds = %cond.end.fillbuf.Clone50.decode_p.Clone
  store i32 0, i32* @subbitbuf, align 4
  br label %if.end.fillbuf.Clone54.decode_p.Clone

if.end.fillbuf.Clone54.decode_p.Clone:            ; preds = %if.then.fillbuf.Clone53.decode_p.Clone, %cond.end.fillbuf.Clone50.decode_p.Clone
  store i32 8, i32* @bitcount, align 4
  br label %while.cond.fillbuf.Clone7.decode_p.Clone

while.end.fillbuf.Clone55.decode_p.Clone:         ; preds = %while.cond.fillbuf.Clone7.decode_p.Clone
  %73 = load i32, i32* @subbitbuf, align 4
  %74 = load i32, i32* %n.addr.fillbuf.Clone2.decode_p.Clone, align 4
  %75 = load i32, i32* @bitcount, align 4
  %sub11.fillbuf.Clone56.decode_p.Clone = sub nsw i32 %75, %74
  store i32 %sub11.fillbuf.Clone56.decode_p.Clone, i32* @bitcount, align 4
  %shr.fillbuf.Clone57.decode_p.Clone = lshr i32 %73, %sub11.fillbuf.Clone56.decode_p.Clone
  %76 = load i16, i16* @bitbuf, align 2
  %conv12.fillbuf.Clone58.decode_p.Clone = zext i16 %76 to i32
  %or13.fillbuf.Clone59.decode_p.Clone = or i32 %conv12.fillbuf.Clone58.decode_p.Clone, %shr.fillbuf.Clone57.decode_p.Clone
  %conv14.fillbuf.Clone60.decode_p.Clone = trunc i32 %or13.fillbuf.Clone59.decode_p.Clone to i16
  store i16 %conv14.fillbuf.Clone60.decode_p.Clone, i16* @bitbuf, align 2
  br label %if.end12.Split.decode_p.Clone

if.end12.Split.decode_p.Clone:                    ; preds = %while.end.fillbuf.Clone55.decode_p.Clone
  %77 = load i32, i32* %j.decode_p.Clone, align 4
  %cmp15.decode_p.Clone = icmp ne i32 %77, 0
  br i1 %cmp15.decode_p.Clone, label %if.then17.decode_p.Clone, label %if.end19.decode_p.Clone

if.then17.decode_p.Clone:                         ; preds = %if.end12.Split.decode_p.Clone
  %78 = load i32, i32* %j.decode_p.Clone, align 4
  %sub.decode_p.Clone = sub i32 %78, 1
  %shl.decode_p.Clone = shl i32 1, %sub.decode_p.Clone
  %79 = load i32, i32* %j.decode_p.Clone, align 4
  %sub18.decode_p.Clone = sub i32 %79, 1
  br label %entry.getbits.Clone.decode_p.Clone

entry.getbits.Clone.decode_p.Clone:               ; preds = %if.then17.decode_p.Clone
  %n.addr.getbits.Clone.decode_p.Clone = alloca i32, align 4
  %x.getbits.Clone.decode_p.Clone = alloca i32, align 4
  store i32 %sub18.decode_p.Clone, i32* %n.addr.getbits.Clone.decode_p.Clone, align 4
  %80 = load i16, i16* @bitbuf, align 2
  %conv.getbits.Clone.decode_p.Clone = zext i16 %80 to i32
  %81 = load i32, i32* %n.addr.getbits.Clone.decode_p.Clone, align 4
  %sub.getbits.Clone.decode_p.Clone = sub i32 16, %81
  %shr.getbits.Clone.decode_p.Clone = ashr i32 %conv.getbits.Clone.decode_p.Clone, %sub.getbits.Clone.decode_p.Clone
  store i32 %shr.getbits.Clone.decode_p.Clone, i32* %x.getbits.Clone.decode_p.Clone, align 4
  %82 = load i32, i32* %n.addr.getbits.Clone.decode_p.Clone, align 4
  br label %entry.fillbuf.Clone.decode_p.Clone

entry.fillbuf.Clone.decode_p.Clone:               ; preds = %entry.getbits.Clone.decode_p.Clone
  %n.addr.fillbuf.Clone.decode_p.Clone = alloca i32, align 4
  store i32 %82, i32* %n.addr.fillbuf.Clone.decode_p.Clone, align 4
  %83 = load i32, i32* %n.addr.fillbuf.Clone.decode_p.Clone, align 4
  %84 = load i16, i16* @bitbuf, align 2
  %conv.fillbuf.Clone.decode_p.Clone = zext i16 %84 to i32
  %shl.fillbuf.Clone.decode_p.Clone = shl i32 %conv.fillbuf.Clone.decode_p.Clone, %83
  %conv1.fillbuf.Clone.decode_p.Clone = trunc i32 %shl.fillbuf.Clone.decode_p.Clone to i16
  store i16 %conv1.fillbuf.Clone.decode_p.Clone, i16* @bitbuf, align 2
  %RetValuePtr.fillbuf.Clone.decode_p.Clone = alloca i32, align 4
  br label %while.cond.fillbuf.Clone.decode_p.Clone

while.cond.fillbuf.Clone.decode_p.Clone:          ; preds = %if.end.fillbuf.Clone.decode_p.Clone, %entry.fillbuf.Clone.decode_p.Clone
  %85 = load i32, i32* %n.addr.fillbuf.Clone.decode_p.Clone, align 4
  %86 = load i32, i32* @bitcount, align 4
  %cmp.fillbuf.Clone.decode_p.Clone = icmp sgt i32 %85, %86
  br i1 %cmp.fillbuf.Clone.decode_p.Clone, label %while.body.fillbuf.Clone.decode_p.Clone, label %while.end.fillbuf.Clone.decode_p.Clone

while.body.fillbuf.Clone.decode_p.Clone:          ; preds = %while.cond.fillbuf.Clone.decode_p.Clone
  %87 = load i32, i32* @subbitbuf, align 4
  %88 = load i32, i32* @bitcount, align 4
  %89 = load i32, i32* %n.addr.fillbuf.Clone.decode_p.Clone, align 4
  %sub.fillbuf.Clone.decode_p.Clone = sub nsw i32 %89, %88
  store i32 %sub.fillbuf.Clone.decode_p.Clone, i32* %n.addr.fillbuf.Clone.decode_p.Clone, align 4
  %shl3.fillbuf.Clone.decode_p.Clone = shl i32 %87, %sub.fillbuf.Clone.decode_p.Clone
  %90 = load i16, i16* @bitbuf, align 2
  %conv4.fillbuf.Clone.decode_p.Clone = zext i16 %90 to i32
  %or.fillbuf.Clone.decode_p.Clone = or i32 %conv4.fillbuf.Clone.decode_p.Clone, %shl3.fillbuf.Clone.decode_p.Clone
  %conv5.fillbuf.Clone.decode_p.Clone = trunc i32 %or.fillbuf.Clone.decode_p.Clone to i16
  store i16 %conv5.fillbuf.Clone.decode_p.Clone, i16* @bitbuf, align 2
  %91 = load i32, i32* @inptr, align 4
  %92 = load i32, i32* @insize, align 4
  %cmp6.fillbuf.Clone.decode_p.Clone = icmp ult i32 %91, %92
  br i1 %cmp6.fillbuf.Clone.decode_p.Clone, label %cond.true.fillbuf.Clone.decode_p.Clone, label %cond.false.fillbuf.Clone.decode_p.Clone

cond.true.fillbuf.Clone.decode_p.Clone:           ; preds = %while.body.fillbuf.Clone.decode_p.Clone
  %93 = load i32, i32* @inptr, align 4
  %inc.fillbuf.Clone.decode_p.Clone = add i32 %93, 1
  store i32 %inc.fillbuf.Clone.decode_p.Clone, i32* @inptr, align 4
  %arrayidx.fillbuf.Clone.decode_p.Clone = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i32 0, i32 %93
  %94 = load i8, i8* %arrayidx.fillbuf.Clone.decode_p.Clone, align 1
  %conv8.fillbuf.Clone.decode_p.Clone = zext i8 %94 to i32
  br label %cond.end.fillbuf.Clone.decode_p.Clone

cond.false.fillbuf.Clone.decode_p.Clone:          ; preds = %while.body.fillbuf.Clone.decode_p.Clone
  br label %entry.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone

entry.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone: ; preds = %cond.false.fillbuf.Clone.decode_p.Clone
  %retval.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone = alloca i32, align 4
  %len.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone = alloca i32, align 4
  store i32 1, i32* %eof_ok.addr.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone, align 4
  br label %do.body.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone

do.body.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone: ; preds = %do.cond.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone, %entry.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone
  %95 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone = sub i32 32768, %95
  %96 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %96
  %97 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone = call i32 @spec_read(i32 %97, i8* %add.ptr.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone, i32 %sub.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone)
  store i32 %call1.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone, i32* %len.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone, align 4
  %98 = load i32, i32* %len.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone, align 4
  %cmp.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone = icmp eq i32 %98, 0
  br i1 %cmp.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone, label %if.then.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone, label %lor.lhs.false.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone

lor.lhs.false.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone: ; preds = %do.body.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone
  %99 = load i32, i32* %len.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone, align 4
  %cmp2.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone = icmp eq i32 %99, -1
  br i1 %cmp2.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone, label %if.then.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone, label %if.end.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone

if.then.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone: ; preds = %lor.lhs.false.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone, %do.body.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone
  br label %do.end.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone

if.end.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone: ; preds = %lor.lhs.false.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone
  %100 = load i32, i32* %len.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone, align 4
  %101 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone = add i32 %101, %100
  store i32 %add.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone

do.cond.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone: ; preds = %if.end.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone
  %102 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone = icmp ult i32 %102, 32768
  br i1 %cmp3.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone, label %do.body.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone, label %do.end.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone

do.end.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone: ; preds = %do.cond.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone, %if.then.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone
  %103 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone = icmp eq i32 %103, 0
  br i1 %cmp4.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone, label %if.then5.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone, label %if.end8.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone

if.then5.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone: ; preds = %do.end.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone
  %104 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone, align 4
  %tobool.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone = icmp ne i32 %104, 0
  br i1 %tobool.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone, label %if.then6.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone, label %if.end7.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone

if.then6.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone: ; preds = %if.then5.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone
  store i32 -1, i32* %retval.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone, align 4
  br label %return.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone

if.end7.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone: ; preds = %if.then5.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone
  br label %entry.read_error.Clone61.decode_p.Clone

entry.read_error.Clone61.decode_p.Clone:          ; preds = %if.end7.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone
  %105 = load i8*, i8** @progname, align 4
  %call.read_error.Clone62.decode_p.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone63.decode_p.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone62.decode_p.Clone, i32 2
  %call1.read_error.Clone64.decode_p.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone63.decode_p.Clone, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %105)
  %call2.read_error.Clone65.decode_p.Clone = call i32* @_errno()
  %106 = load i32, i32* %call2.read_error.Clone65.decode_p.Clone, align 4
  %cmp.read_error.Clone66.decode_p.Clone = icmp ne i32 %106, 0
  br i1 %cmp.read_error.Clone66.decode_p.Clone, label %if.then.read_error.Clone67.decode_p.Clone, label %if.else.read_error.Clone68.decode_p.Clone

if.then.read_error.Clone67.decode_p.Clone:        ; preds = %entry.read_error.Clone61.decode_p.Clone
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone72.decode_p.Clone

if.else.read_error.Clone68.decode_p.Clone:        ; preds = %entry.read_error.Clone61.decode_p.Clone
  %call3.read_error.Clone69.decode_p.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone70.decode_p.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone69.decode_p.Clone, i32 2
  %call5.read_error.Clone71.decode_p.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone70.decode_p.Clone, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone72.decode_p.Clone

if.end.read_error.Clone72.decode_p.Clone:         ; preds = %if.else.read_error.Clone68.decode_p.Clone, %if.then.read_error.Clone67.decode_p.Clone
  br label %entry.abort_gzip.Clone.decode_p.Clone

entry.abort_gzip.Clone.decode_p.Clone:            ; preds = %if.end.read_error.Clone72.decode_p.Clone
  %107 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone.decode_p.Clone = icmp ne i32 %107, 0
  br i1 %tobool.abort_gzip.Clone.decode_p.Clone, label %if.then.abort_gzip.Clone.decode_p.Clone, label %if.end.abort_gzip.Clone.decode_p.Clone

if.then.abort_gzip.Clone.decode_p.Clone:          ; preds = %entry.abort_gzip.Clone.decode_p.Clone
  %108 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone.decode_p.Clone = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %108)
  %call1.abort_gzip.Clone.decode_p.Clone = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone.decode_p.Clone

if.end.abort_gzip.Clone.decode_p.Clone:           ; preds = %if.then.abort_gzip.Clone.decode_p.Clone, %entry.abort_gzip.Clone.decode_p.Clone
  br label %entry.do_exit.Clone

entry.do_exit.Clone:                              ; preds = %if.end.abort_gzip.Clone.decode_p.Clone
  %exitcode.addr.do_exit.Clone = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone, align 4
  %109 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone = icmp ne i32 %109, 0
  br i1 %tobool.do_exit.Clone, label %if.then.do_exit.Clone, label %if.end.do_exit.Clone

if.then.do_exit.Clone:                            ; preds = %entry.do_exit.Clone
  %110 = load i32, i32* %exitcode.addr.do_exit.Clone, align 4
  call void @exit(i32 %110) #7
  unreachable

if.end.do_exit.Clone:                             ; preds = %entry.do_exit.Clone
  store i32 1, i32* @do_exit.in_exit, align 4
  %111 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone = icmp ne i8* %111, null
  br i1 %cmp.do_exit.Clone, label %if.then1.do_exit.Clone, label %if.end2.do_exit.Clone

if.then1.do_exit.Clone:                           ; preds = %if.end.do_exit.Clone
  %112 = load i8*, i8** @env, align 4
  call void @free(i8* %112) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone

if.end2.do_exit.Clone:                            ; preds = %if.then1.do_exit.Clone, %if.end.do_exit.Clone
  %113 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone = icmp ne i8** %113, null
  br i1 %cmp3.do_exit.Clone, label %if.then4.do_exit.Clone, label %if.end5.do_exit.Clone

if.then4.do_exit.Clone:                           ; preds = %if.end2.do_exit.Clone
  %114 = load i8**, i8*** @args, align 4
  %115 = bitcast i8** %114 to i8*
  call void @free(i8* %115) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone

if.end5.do_exit.Clone:                            ; preds = %if.then4.do_exit.Clone, %if.end2.do_exit.Clone
  %116 = load i32, i32* %exitcode.addr.do_exit.Clone, align 4
  call void @exit(i32 %116) #7
  unreachable

return.do_exit.Clone:                             ; No predecessors!
  br label %if.end.abort_gzip.Clone.decode_p.Clone.Split

if.end.abort_gzip.Clone.decode_p.Clone.Split:     ; preds = %return.do_exit.Clone
  br label %if.end.read_error.Clone72.Split.decode_p.Clone

if.end.read_error.Clone72.Split.decode_p.Clone:   ; preds = %if.end.abort_gzip.Clone.decode_p.Clone.Split
  br label %if.end7.fill_inbuf.Clone.fillbuf.Clone.Split.decode_p.Clone

if.end7.fill_inbuf.Clone.fillbuf.Clone.Split.decode_p.Clone: ; preds = %if.end.read_error.Clone72.Split.decode_p.Clone
  br label %if.end8.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone

if.end8.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone: ; preds = %if.end7.fill_inbuf.Clone.fillbuf.Clone.Split.decode_p.Clone, %do.end.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone
  %117 = load i32, i32* @insize, align 4
  %118 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone = add i32 %118, %117
  store i32 %add9.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %119 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone = zext i8 %119 to i32
  store i32 %conv.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone, i32* %retval.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone, align 4
  br label %return.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone

return.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone: ; preds = %if.end8.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone, %if.then6.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone
  %120 = load i32, i32* %retval.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone, align 4
  store i32 %120, i32* %RetValuePtr.fillbuf.Clone.decode_p.Clone
  br label %cond.false.Split.fillbuf.Clone.decode_p.Clone

cond.false.Split.fillbuf.Clone.decode_p.Clone:    ; preds = %return.fill_inbuf.Clone.fillbuf.Clone.decode_p.Clone
  %RetValue.fillbuf.Clone.decode_p.Clone = load i32, i32* %RetValuePtr.fillbuf.Clone.decode_p.Clone
  br label %cond.end.fillbuf.Clone.decode_p.Clone

cond.end.fillbuf.Clone.decode_p.Clone:            ; preds = %cond.false.Split.fillbuf.Clone.decode_p.Clone, %cond.true.fillbuf.Clone.decode_p.Clone
  %cond.fillbuf.Clone.decode_p.Clone = phi i32 [ %conv8.fillbuf.Clone.decode_p.Clone, %cond.true.fillbuf.Clone.decode_p.Clone ], [ %RetValue.fillbuf.Clone.decode_p.Clone, %cond.false.Split.fillbuf.Clone.decode_p.Clone ]
  store i32 %cond.fillbuf.Clone.decode_p.Clone, i32* @subbitbuf, align 4
  %121 = load i32, i32* @subbitbuf, align 4
  %cmp9.fillbuf.Clone.decode_p.Clone = icmp eq i32 %121, -1
  br i1 %cmp9.fillbuf.Clone.decode_p.Clone, label %if.then.fillbuf.Clone.decode_p.Clone, label %if.end.fillbuf.Clone.decode_p.Clone

if.then.fillbuf.Clone.decode_p.Clone:             ; preds = %cond.end.fillbuf.Clone.decode_p.Clone
  store i32 0, i32* @subbitbuf, align 4
  br label %if.end.fillbuf.Clone.decode_p.Clone

if.end.fillbuf.Clone.decode_p.Clone:              ; preds = %if.then.fillbuf.Clone.decode_p.Clone, %cond.end.fillbuf.Clone.decode_p.Clone
  store i32 8, i32* @bitcount, align 4
  br label %while.cond.fillbuf.Clone.decode_p.Clone

while.end.fillbuf.Clone.decode_p.Clone:           ; preds = %while.cond.fillbuf.Clone.decode_p.Clone
  %122 = load i32, i32* @subbitbuf, align 4
  %123 = load i32, i32* %n.addr.fillbuf.Clone.decode_p.Clone, align 4
  %124 = load i32, i32* @bitcount, align 4
  %sub11.fillbuf.Clone.decode_p.Clone = sub nsw i32 %124, %123
  store i32 %sub11.fillbuf.Clone.decode_p.Clone, i32* @bitcount, align 4
  %shr.fillbuf.Clone.decode_p.Clone = lshr i32 %122, %sub11.fillbuf.Clone.decode_p.Clone
  %125 = load i16, i16* @bitbuf, align 2
  %conv12.fillbuf.Clone.decode_p.Clone = zext i16 %125 to i32
  %or13.fillbuf.Clone.decode_p.Clone = or i32 %conv12.fillbuf.Clone.decode_p.Clone, %shr.fillbuf.Clone.decode_p.Clone
  %conv14.fillbuf.Clone.decode_p.Clone = trunc i32 %or13.fillbuf.Clone.decode_p.Clone to i16
  store i16 %conv14.fillbuf.Clone.decode_p.Clone, i16* @bitbuf, align 2
  br label %entry.getbits.Clone.Split.decode_p.Clone

entry.getbits.Clone.Split.decode_p.Clone:         ; preds = %while.end.fillbuf.Clone.decode_p.Clone
  %126 = load i32, i32* %x.getbits.Clone.decode_p.Clone, align 4
  store i32 %126, i32* %RetValuePtr.decode_p.Clone
  br label %if.then17.Split.decode_p.Clone

if.then17.Split.decode_p.Clone:                   ; preds = %entry.getbits.Clone.Split.decode_p.Clone
  %RetValue.decode_p.Clone = load i32, i32* %RetValuePtr.decode_p.Clone
  %add.decode_p.Clone = add i32 %shl.decode_p.Clone, %RetValue.decode_p.Clone
  store i32 %add.decode_p.Clone, i32* %j.decode_p.Clone, align 4
  br label %if.end19.decode_p.Clone

if.end19.decode_p.Clone:                          ; preds = %if.then17.Split.decode_p.Clone, %if.end12.Split.decode_p.Clone
  %127 = load i32, i32* %j.decode_p.Clone, align 4
  store i32 %127, i32* %RetValuePtr
  br label %if.else.Split

if.else.Split:                                    ; preds = %if.end19.decode_p.Clone
  %RetValue = load i32, i32* %RetValuePtr
  %sub15 = sub i32 %20, %RetValue
  %sub16 = sub i32 %sub15, 1
  %and17 = and i32 %sub16, 8191
  store i32 %and17, i32* @decode.i, align 4
  br label %while.cond18

while.cond18:                                     ; preds = %if.end31, %if.else.Split
  %128 = load i32, i32* @j, align 4
  %dec19 = add nsw i32 %128, -1
  store i32 %dec19, i32* @j, align 4
  %cmp20 = icmp sge i32 %dec19, 0
  br i1 %cmp20, label %while.body22, label %while.end32

while.body22:                                     ; preds = %while.cond18
  %129 = load i8*, i8** %buffer.addr, align 4
  %130 = load i32, i32* @decode.i, align 4
  %arrayidx23 = getelementptr inbounds i8, i8* %129, i32 %130
  %131 = load i8, i8* %arrayidx23, align 1
  %132 = load i8*, i8** %buffer.addr, align 4
  %133 = load i32, i32* %r, align 4
  %arrayidx24 = getelementptr inbounds i8, i8* %132, i32 %133
  store i8 %131, i8* %arrayidx24, align 1
  %134 = load i32, i32* @decode.i, align 4
  %add25 = add i32 %134, 1
  %and26 = and i32 %add25, 8191
  store i32 %and26, i32* @decode.i, align 4
  %135 = load i32, i32* %r, align 4
  %inc27 = add i32 %135, 1
  store i32 %inc27, i32* %r, align 4
  %136 = load i32, i32* %count.addr, align 4
  %cmp28 = icmp eq i32 %inc27, %136
  br i1 %cmp28, label %if.then30, label %if.end31

if.then30:                                        ; preds = %while.body22
  %137 = load i32, i32* %r, align 4
  store i32 %137, i32* %retval, align 4
  br label %return

if.end31:                                         ; preds = %while.body22
  br label %while.cond18

while.end32:                                      ; preds = %while.cond18
  br label %if.end33

if.end33:                                         ; preds = %while.end32, %if.end13
  br label %for.cond

return:                                           ; preds = %if.then30, %if.then12, %if.then4, %if.then
  %138 = load i32, i32* %retval, align 4
  ret i32 %138
}

; Function Attrs: noinline optnone sspstrong
define internal i32 @decode_c() #1 {
entry:
  %retval = alloca i32, align 4
  %j = alloca i32, align 4
  %mask = alloca i32, align 4
  %0 = load i32, i32* @blocksize, align 4
  %cmp = icmp eq i32 %0, 0
  %RetValuePtr = alloca i32, align 4
  br i1 %cmp, label %if.then, label %CallOutFuncBB

if.then:                                          ; preds = %entry
  br label %entry.getbits.Clone

entry.getbits.Clone:                              ; preds = %if.then
  %n.addr.getbits.Clone = alloca i32, align 4
  %x.getbits.Clone = alloca i32, align 4
  store i32 16, i32* %n.addr.getbits.Clone, align 4
  %1 = load i16, i16* @bitbuf, align 2
  %conv.getbits.Clone = zext i16 %1 to i32
  %2 = load i32, i32* %n.addr.getbits.Clone, align 4
  %sub.getbits.Clone = sub i32 16, %2
  %shr.getbits.Clone = ashr i32 %conv.getbits.Clone, %sub.getbits.Clone
  store i32 %shr.getbits.Clone, i32* %x.getbits.Clone, align 4
  %3 = load i32, i32* %n.addr.getbits.Clone, align 4
  br label %entry.fillbuf.Clone

entry.fillbuf.Clone:                              ; preds = %entry.getbits.Clone
  %n.addr.fillbuf.Clone = alloca i32, align 4
  store i32 %3, i32* %n.addr.fillbuf.Clone, align 4
  %4 = load i32, i32* %n.addr.fillbuf.Clone, align 4
  %5 = load i16, i16* @bitbuf, align 2
  %conv.fillbuf.Clone = zext i16 %5 to i32
  %shl.fillbuf.Clone = shl i32 %conv.fillbuf.Clone, %4
  %conv1.fillbuf.Clone = trunc i32 %shl.fillbuf.Clone to i16
  store i16 %conv1.fillbuf.Clone, i16* @bitbuf, align 2
  %RetValuePtr.fillbuf.Clone = alloca i32, align 4
  br label %while.cond.fillbuf.Clone

while.cond.fillbuf.Clone:                         ; preds = %if.end.fillbuf.Clone, %entry.fillbuf.Clone
  %6 = load i32, i32* %n.addr.fillbuf.Clone, align 4
  %7 = load i32, i32* @bitcount, align 4
  %cmp.fillbuf.Clone = icmp sgt i32 %6, %7
  br i1 %cmp.fillbuf.Clone, label %while.body.fillbuf.Clone, label %while.end.fillbuf.Clone

while.body.fillbuf.Clone:                         ; preds = %while.cond.fillbuf.Clone
  %8 = load i32, i32* @subbitbuf, align 4
  %9 = load i32, i32* @bitcount, align 4
  %10 = load i32, i32* %n.addr.fillbuf.Clone, align 4
  %sub.fillbuf.Clone = sub nsw i32 %10, %9
  store i32 %sub.fillbuf.Clone, i32* %n.addr.fillbuf.Clone, align 4
  %shl3.fillbuf.Clone = shl i32 %8, %sub.fillbuf.Clone
  %11 = load i16, i16* @bitbuf, align 2
  %conv4.fillbuf.Clone = zext i16 %11 to i32
  %or.fillbuf.Clone = or i32 %conv4.fillbuf.Clone, %shl3.fillbuf.Clone
  %conv5.fillbuf.Clone = trunc i32 %or.fillbuf.Clone to i16
  store i16 %conv5.fillbuf.Clone, i16* @bitbuf, align 2
  %12 = load i32, i32* @inptr, align 4
  %13 = load i32, i32* @insize, align 4
  %cmp6.fillbuf.Clone = icmp ult i32 %12, %13
  br i1 %cmp6.fillbuf.Clone, label %cond.true.fillbuf.Clone, label %cond.false.fillbuf.Clone

cond.true.fillbuf.Clone:                          ; preds = %while.body.fillbuf.Clone
  %14 = load i32, i32* @inptr, align 4
  %inc.fillbuf.Clone = add i32 %14, 1
  store i32 %inc.fillbuf.Clone, i32* @inptr, align 4
  %arrayidx.fillbuf.Clone = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i32 0, i32 %14
  %15 = load i8, i8* %arrayidx.fillbuf.Clone, align 1
  %conv8.fillbuf.Clone = zext i8 %15 to i32
  br label %cond.end.fillbuf.Clone

cond.false.fillbuf.Clone:                         ; preds = %while.body.fillbuf.Clone
  br label %entry.fill_inbuf.Clone.fillbuf.Clone

entry.fill_inbuf.Clone.fillbuf.Clone:             ; preds = %cond.false.fillbuf.Clone
  %retval.fill_inbuf.Clone.fillbuf.Clone = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone.fillbuf.Clone = alloca i32, align 4
  %len.fill_inbuf.Clone.fillbuf.Clone = alloca i32, align 4
  store i32 1, i32* %eof_ok.addr.fill_inbuf.Clone.fillbuf.Clone, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone.fillbuf.Clone = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone.fillbuf.Clone, align 4
  br label %do.body.fill_inbuf.Clone.fillbuf.Clone

do.body.fill_inbuf.Clone.fillbuf.Clone:           ; preds = %do.cond.fill_inbuf.Clone.fillbuf.Clone, %entry.fill_inbuf.Clone.fillbuf.Clone
  %16 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone.fillbuf.Clone = sub i32 32768, %16
  %17 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone.fillbuf.Clone = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %17
  %18 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone.fillbuf.Clone = call i32 @spec_read(i32 %18, i8* %add.ptr.fill_inbuf.Clone.fillbuf.Clone, i32 %sub.fill_inbuf.Clone.fillbuf.Clone)
  store i32 %call1.fill_inbuf.Clone.fillbuf.Clone, i32* %len.fill_inbuf.Clone.fillbuf.Clone, align 4
  %19 = load i32, i32* %len.fill_inbuf.Clone.fillbuf.Clone, align 4
  %cmp.fill_inbuf.Clone.fillbuf.Clone = icmp eq i32 %19, 0
  br i1 %cmp.fill_inbuf.Clone.fillbuf.Clone, label %if.then.fill_inbuf.Clone.fillbuf.Clone, label %lor.lhs.false.fill_inbuf.Clone.fillbuf.Clone

lor.lhs.false.fill_inbuf.Clone.fillbuf.Clone:     ; preds = %do.body.fill_inbuf.Clone.fillbuf.Clone
  %20 = load i32, i32* %len.fill_inbuf.Clone.fillbuf.Clone, align 4
  %cmp2.fill_inbuf.Clone.fillbuf.Clone = icmp eq i32 %20, -1
  br i1 %cmp2.fill_inbuf.Clone.fillbuf.Clone, label %if.then.fill_inbuf.Clone.fillbuf.Clone, label %if.end.fill_inbuf.Clone.fillbuf.Clone

if.then.fill_inbuf.Clone.fillbuf.Clone:           ; preds = %lor.lhs.false.fill_inbuf.Clone.fillbuf.Clone, %do.body.fill_inbuf.Clone.fillbuf.Clone
  br label %do.end.fill_inbuf.Clone.fillbuf.Clone

if.end.fill_inbuf.Clone.fillbuf.Clone:            ; preds = %lor.lhs.false.fill_inbuf.Clone.fillbuf.Clone
  %21 = load i32, i32* %len.fill_inbuf.Clone.fillbuf.Clone, align 4
  %22 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone.fillbuf.Clone = add i32 %22, %21
  store i32 %add.fill_inbuf.Clone.fillbuf.Clone, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone.fillbuf.Clone

do.cond.fill_inbuf.Clone.fillbuf.Clone:           ; preds = %if.end.fill_inbuf.Clone.fillbuf.Clone
  %23 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone.fillbuf.Clone = icmp ult i32 %23, 32768
  br i1 %cmp3.fill_inbuf.Clone.fillbuf.Clone, label %do.body.fill_inbuf.Clone.fillbuf.Clone, label %do.end.fill_inbuf.Clone.fillbuf.Clone

do.end.fill_inbuf.Clone.fillbuf.Clone:            ; preds = %do.cond.fill_inbuf.Clone.fillbuf.Clone, %if.then.fill_inbuf.Clone.fillbuf.Clone
  %24 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone.fillbuf.Clone = icmp eq i32 %24, 0
  br i1 %cmp4.fill_inbuf.Clone.fillbuf.Clone, label %if.then5.fill_inbuf.Clone.fillbuf.Clone, label %if.end8.fill_inbuf.Clone.fillbuf.Clone

if.then5.fill_inbuf.Clone.fillbuf.Clone:          ; preds = %do.end.fill_inbuf.Clone.fillbuf.Clone
  %25 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone.fillbuf.Clone, align 4
  %tobool.fill_inbuf.Clone.fillbuf.Clone = icmp ne i32 %25, 0
  br i1 %tobool.fill_inbuf.Clone.fillbuf.Clone, label %if.then6.fill_inbuf.Clone.fillbuf.Clone, label %if.end7.fill_inbuf.Clone.fillbuf.Clone

if.then6.fill_inbuf.Clone.fillbuf.Clone:          ; preds = %if.then5.fill_inbuf.Clone.fillbuf.Clone
  store i32 -1, i32* %retval.fill_inbuf.Clone.fillbuf.Clone, align 4
  br label %return.fill_inbuf.Clone.fillbuf.Clone

if.end7.fill_inbuf.Clone.fillbuf.Clone:           ; preds = %if.then5.fill_inbuf.Clone.fillbuf.Clone
  br label %entry.read_error.Clone

entry.read_error.Clone:                           ; preds = %if.end7.fill_inbuf.Clone.fillbuf.Clone
  %26 = load i8*, i8** @progname, align 4
  %call.read_error.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone, i32 2
  %call1.read_error.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %26)
  %call2.read_error.Clone = call i32* @_errno()
  %27 = load i32, i32* %call2.read_error.Clone, align 4
  %cmp.read_error.Clone = icmp ne i32 %27, 0
  br i1 %cmp.read_error.Clone, label %if.then.read_error.Clone, label %if.else.read_error.Clone

if.then.read_error.Clone:                         ; preds = %entry.read_error.Clone
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone

if.else.read_error.Clone:                         ; preds = %entry.read_error.Clone
  %call3.read_error.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone, i32 2
  %call5.read_error.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone

if.end.read_error.Clone:                          ; preds = %if.else.read_error.Clone, %if.then.read_error.Clone
  br label %entry.abort_gzip.Clone

entry.abort_gzip.Clone:                           ; preds = %if.end.read_error.Clone
  %28 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone = icmp ne i32 %28, 0
  br i1 %tobool.abort_gzip.Clone, label %if.then.abort_gzip.Clone, label %if.end.abort_gzip.Clone

if.then.abort_gzip.Clone:                         ; preds = %entry.abort_gzip.Clone
  %29 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %29)
  %call1.abort_gzip.Clone = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone

if.end.abort_gzip.Clone:                          ; preds = %if.then.abort_gzip.Clone, %entry.abort_gzip.Clone
  br label %entry.do_exit.Clone

entry.do_exit.Clone:                              ; preds = %if.end.abort_gzip.Clone
  %exitcode.addr.do_exit.Clone = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone, align 4
  %30 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone = icmp ne i32 %30, 0
  br i1 %tobool.do_exit.Clone, label %if.then.do_exit.Clone, label %if.end.do_exit.Clone

if.then.do_exit.Clone:                            ; preds = %entry.do_exit.Clone
  %31 = load i32, i32* %exitcode.addr.do_exit.Clone, align 4
  call void @exit(i32 %31) #7
  unreachable

if.end.do_exit.Clone:                             ; preds = %entry.do_exit.Clone
  store i32 1, i32* @do_exit.in_exit, align 4
  %32 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone = icmp ne i8* %32, null
  br i1 %cmp.do_exit.Clone, label %if.then1.do_exit.Clone, label %if.end2.do_exit.Clone

if.then1.do_exit.Clone:                           ; preds = %if.end.do_exit.Clone
  %33 = load i8*, i8** @env, align 4
  call void @free(i8* %33) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone

if.end2.do_exit.Clone:                            ; preds = %if.then1.do_exit.Clone, %if.end.do_exit.Clone
  %34 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone = icmp ne i8** %34, null
  br i1 %cmp3.do_exit.Clone, label %if.then4.do_exit.Clone, label %if.end5.do_exit.Clone

if.then4.do_exit.Clone:                           ; preds = %if.end2.do_exit.Clone
  %35 = load i8**, i8*** @args, align 4
  %36 = bitcast i8** %35 to i8*
  call void @free(i8* %36) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone

if.end5.do_exit.Clone:                            ; preds = %if.then4.do_exit.Clone, %if.end2.do_exit.Clone
  %37 = load i32, i32* %exitcode.addr.do_exit.Clone, align 4
  call void @exit(i32 %37) #7
  unreachable

return.do_exit.Clone:                             ; No predecessors!
  br label %if.end.abort_gzip.Clone.Split

if.end.abort_gzip.Clone.Split:                    ; preds = %return.do_exit.Clone
  br label %if.end.read_error.Clone.Split

if.end.read_error.Clone.Split:                    ; preds = %if.end.abort_gzip.Clone.Split
  br label %if.end7.fill_inbuf.Clone.fillbuf.Clone.Split

if.end7.fill_inbuf.Clone.fillbuf.Clone.Split:     ; preds = %if.end.read_error.Clone.Split
  br label %if.end8.fill_inbuf.Clone.fillbuf.Clone

if.end8.fill_inbuf.Clone.fillbuf.Clone:           ; preds = %if.end7.fill_inbuf.Clone.fillbuf.Clone.Split, %do.end.fill_inbuf.Clone.fillbuf.Clone
  %38 = load i32, i32* @insize, align 4
  %39 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone.fillbuf.Clone = add i32 %39, %38
  store i32 %add9.fill_inbuf.Clone.fillbuf.Clone, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %40 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone.fillbuf.Clone = zext i8 %40 to i32
  store i32 %conv.fill_inbuf.Clone.fillbuf.Clone, i32* %retval.fill_inbuf.Clone.fillbuf.Clone, align 4
  br label %return.fill_inbuf.Clone.fillbuf.Clone

return.fill_inbuf.Clone.fillbuf.Clone:            ; preds = %if.end8.fill_inbuf.Clone.fillbuf.Clone, %if.then6.fill_inbuf.Clone.fillbuf.Clone
  %41 = load i32, i32* %retval.fill_inbuf.Clone.fillbuf.Clone, align 4
  store i32 %41, i32* %RetValuePtr.fillbuf.Clone
  br label %cond.false.Split.fillbuf.Clone

cond.false.Split.fillbuf.Clone:                   ; preds = %return.fill_inbuf.Clone.fillbuf.Clone
  %RetValue.fillbuf.Clone = load i32, i32* %RetValuePtr.fillbuf.Clone
  br label %cond.end.fillbuf.Clone

cond.end.fillbuf.Clone:                           ; preds = %cond.false.Split.fillbuf.Clone, %cond.true.fillbuf.Clone
  %cond.fillbuf.Clone = phi i32 [ %conv8.fillbuf.Clone, %cond.true.fillbuf.Clone ], [ %RetValue.fillbuf.Clone, %cond.false.Split.fillbuf.Clone ]
  store i32 %cond.fillbuf.Clone, i32* @subbitbuf, align 4
  %42 = load i32, i32* @subbitbuf, align 4
  %cmp9.fillbuf.Clone = icmp eq i32 %42, -1
  br i1 %cmp9.fillbuf.Clone, label %if.then.fillbuf.Clone, label %if.end.fillbuf.Clone

if.then.fillbuf.Clone:                            ; preds = %cond.end.fillbuf.Clone
  store i32 0, i32* @subbitbuf, align 4
  br label %if.end.fillbuf.Clone

if.end.fillbuf.Clone:                             ; preds = %if.then.fillbuf.Clone, %cond.end.fillbuf.Clone
  store i32 8, i32* @bitcount, align 4
  br label %while.cond.fillbuf.Clone

while.end.fillbuf.Clone:                          ; preds = %while.cond.fillbuf.Clone
  %43 = load i32, i32* @subbitbuf, align 4
  %44 = load i32, i32* %n.addr.fillbuf.Clone, align 4
  %45 = load i32, i32* @bitcount, align 4
  %sub11.fillbuf.Clone = sub nsw i32 %45, %44
  store i32 %sub11.fillbuf.Clone, i32* @bitcount, align 4
  %shr.fillbuf.Clone = lshr i32 %43, %sub11.fillbuf.Clone
  %46 = load i16, i16* @bitbuf, align 2
  %conv12.fillbuf.Clone = zext i16 %46 to i32
  %or13.fillbuf.Clone = or i32 %conv12.fillbuf.Clone, %shr.fillbuf.Clone
  %conv14.fillbuf.Clone = trunc i32 %or13.fillbuf.Clone to i16
  store i16 %conv14.fillbuf.Clone, i16* @bitbuf, align 2
  br label %entry.getbits.Clone.Split

entry.getbits.Clone.Split:                        ; preds = %while.end.fillbuf.Clone
  %47 = load i32, i32* %x.getbits.Clone, align 4
  store i32 %47, i32* %RetValuePtr
  br label %if.then.Split

if.then.Split:                                    ; preds = %entry.getbits.Clone.Split
  %RetValue = load i32, i32* %RetValuePtr
  store i32 %RetValue, i32* @blocksize, align 4
  %48 = load i32, i32* @blocksize, align 4
  %cmp1 = icmp eq i32 %48, 0
  br i1 %cmp1, label %if.then2, label %if.end

if.then2:                                         ; preds = %if.then.Split
  store i32 510, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %if.then.Split
  call void @read_pt_len(i32 19, i32 5, i32 3)
  call void @read_c_len()
  call void @read_pt_len(i32 14, i32 4, i32 -1)
  br label %CallOutFuncBB

CallOutFuncBB:                                    ; preds = %entry, %if.end
  call void @if.end3.OutLineFunc(i32* %j, i32* %mask, i32* %retval)
  %49 = getelementptr inbounds %Struct.RetValue.33, %Struct.RetValue.33* @Struct.RetValue.42, i32 0, i32 0
  %50 = load i32*, i32** %49, align 4
  %51 = load i32, i32* %50, align 4
  store i32 %51, i32* %j
  %52 = getelementptr inbounds %Struct.RetValue.33, %Struct.RetValue.33* @Struct.RetValue.42, i32 0, i32 1
  %53 = load i32*, i32** %52, align 4
  %54 = load i32, i32* %53, align 4
  store i32 %54, i32* %mask
  %55 = getelementptr inbounds %Struct.RetValue.33, %Struct.RetValue.33* @Struct.RetValue.42, i32 0, i32 2
  %56 = load i32*, i32** %55, align 4
  %57 = load i32, i32* %56, align 4
  store i32 %57, i32* %retval
  br label %return

return:                                           ; preds = %CallOutFuncBB, %if.then2
  %58 = load i32, i32* %retval, align 4
  ret i32 %58
}

; Function Attrs: noinline optnone sspstrong
define internal void @read_pt_len(i32 %nn, i32 %nbit, i32 %i_special) #1 {
entry:
  %i_special.addr = alloca i32, align 4
  %nbit.addr = alloca i32, align 4
  %nn.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %c = alloca i32, align 4
  %n = alloca i32, align 4
  %mask = alloca i32, align 4
  store i32 %i_special, i32* %i_special.addr, align 4
  store i32 %nbit, i32* %nbit.addr, align 4
  store i32 %nn, i32* %nn.addr, align 4
  %0 = load i32, i32* %nbit.addr, align 4
  %RetValuePtr15 = alloca i32, align 4
  br label %entry.getbits.Clone9

entry.getbits.Clone9:                             ; preds = %entry
  %n.addr.getbits.Clone10 = alloca i32, align 4
  %x.getbits.Clone11 = alloca i32, align 4
  store i32 %0, i32* %n.addr.getbits.Clone10, align 4
  %1 = load i16, i16* @bitbuf, align 2
  %conv.getbits.Clone12 = zext i16 %1 to i32
  %2 = load i32, i32* %n.addr.getbits.Clone10, align 4
  %sub.getbits.Clone13 = sub i32 16, %2
  %shr.getbits.Clone14 = ashr i32 %conv.getbits.Clone12, %sub.getbits.Clone13
  store i32 %shr.getbits.Clone14, i32* %x.getbits.Clone11, align 4
  %3 = load i32, i32* %n.addr.getbits.Clone10, align 4
  br label %entry.fillbuf.Clone

entry.fillbuf.Clone:                              ; preds = %entry.getbits.Clone9
  %n.addr.fillbuf.Clone = alloca i32, align 4
  store i32 %3, i32* %n.addr.fillbuf.Clone, align 4
  %4 = load i32, i32* %n.addr.fillbuf.Clone, align 4
  %5 = load i16, i16* @bitbuf, align 2
  %conv.fillbuf.Clone = zext i16 %5 to i32
  %shl.fillbuf.Clone = shl i32 %conv.fillbuf.Clone, %4
  %conv1.fillbuf.Clone = trunc i32 %shl.fillbuf.Clone to i16
  store i16 %conv1.fillbuf.Clone, i16* @bitbuf, align 2
  %RetValuePtr.fillbuf.Clone = alloca i32, align 4
  br label %while.cond.fillbuf.Clone

while.cond.fillbuf.Clone:                         ; preds = %if.end.fillbuf.Clone, %entry.fillbuf.Clone
  %6 = load i32, i32* %n.addr.fillbuf.Clone, align 4
  %7 = load i32, i32* @bitcount, align 4
  %cmp.fillbuf.Clone = icmp sgt i32 %6, %7
  br i1 %cmp.fillbuf.Clone, label %while.body.fillbuf.Clone, label %while.end.fillbuf.Clone

while.body.fillbuf.Clone:                         ; preds = %while.cond.fillbuf.Clone
  %8 = load i32, i32* @subbitbuf, align 4
  %9 = load i32, i32* @bitcount, align 4
  %10 = load i32, i32* %n.addr.fillbuf.Clone, align 4
  %sub.fillbuf.Clone = sub nsw i32 %10, %9
  store i32 %sub.fillbuf.Clone, i32* %n.addr.fillbuf.Clone, align 4
  %shl3.fillbuf.Clone = shl i32 %8, %sub.fillbuf.Clone
  %11 = load i16, i16* @bitbuf, align 2
  %conv4.fillbuf.Clone = zext i16 %11 to i32
  %or.fillbuf.Clone = or i32 %conv4.fillbuf.Clone, %shl3.fillbuf.Clone
  %conv5.fillbuf.Clone = trunc i32 %or.fillbuf.Clone to i16
  store i16 %conv5.fillbuf.Clone, i16* @bitbuf, align 2
  %12 = load i32, i32* @inptr, align 4
  %13 = load i32, i32* @insize, align 4
  %cmp6.fillbuf.Clone = icmp ult i32 %12, %13
  br i1 %cmp6.fillbuf.Clone, label %cond.true.fillbuf.Clone, label %cond.false.fillbuf.Clone

cond.true.fillbuf.Clone:                          ; preds = %while.body.fillbuf.Clone
  %14 = load i32, i32* @inptr, align 4
  %inc.fillbuf.Clone = add i32 %14, 1
  store i32 %inc.fillbuf.Clone, i32* @inptr, align 4
  %arrayidx.fillbuf.Clone = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i32 0, i32 %14
  %15 = load i8, i8* %arrayidx.fillbuf.Clone, align 1
  %conv8.fillbuf.Clone = zext i8 %15 to i32
  br label %cond.end.fillbuf.Clone

cond.false.fillbuf.Clone:                         ; preds = %while.body.fillbuf.Clone
  br label %entry.fill_inbuf.Clone.fillbuf.Clone

entry.fill_inbuf.Clone.fillbuf.Clone:             ; preds = %cond.false.fillbuf.Clone
  %retval.fill_inbuf.Clone.fillbuf.Clone = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone.fillbuf.Clone = alloca i32, align 4
  %len.fill_inbuf.Clone.fillbuf.Clone = alloca i32, align 4
  store i32 1, i32* %eof_ok.addr.fill_inbuf.Clone.fillbuf.Clone, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone.fillbuf.Clone = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone.fillbuf.Clone, align 4
  br label %do.body.fill_inbuf.Clone.fillbuf.Clone

do.body.fill_inbuf.Clone.fillbuf.Clone:           ; preds = %do.cond.fill_inbuf.Clone.fillbuf.Clone, %entry.fill_inbuf.Clone.fillbuf.Clone
  %16 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone.fillbuf.Clone = sub i32 32768, %16
  %17 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone.fillbuf.Clone = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %17
  %18 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone.fillbuf.Clone = call i32 @spec_read(i32 %18, i8* %add.ptr.fill_inbuf.Clone.fillbuf.Clone, i32 %sub.fill_inbuf.Clone.fillbuf.Clone)
  store i32 %call1.fill_inbuf.Clone.fillbuf.Clone, i32* %len.fill_inbuf.Clone.fillbuf.Clone, align 4
  %19 = load i32, i32* %len.fill_inbuf.Clone.fillbuf.Clone, align 4
  %cmp.fill_inbuf.Clone.fillbuf.Clone = icmp eq i32 %19, 0
  br i1 %cmp.fill_inbuf.Clone.fillbuf.Clone, label %if.then.fill_inbuf.Clone.fillbuf.Clone, label %lor.lhs.false.fill_inbuf.Clone.fillbuf.Clone

lor.lhs.false.fill_inbuf.Clone.fillbuf.Clone:     ; preds = %do.body.fill_inbuf.Clone.fillbuf.Clone
  %20 = load i32, i32* %len.fill_inbuf.Clone.fillbuf.Clone, align 4
  %cmp2.fill_inbuf.Clone.fillbuf.Clone = icmp eq i32 %20, -1
  br i1 %cmp2.fill_inbuf.Clone.fillbuf.Clone, label %if.then.fill_inbuf.Clone.fillbuf.Clone, label %if.end.fill_inbuf.Clone.fillbuf.Clone

if.then.fill_inbuf.Clone.fillbuf.Clone:           ; preds = %lor.lhs.false.fill_inbuf.Clone.fillbuf.Clone, %do.body.fill_inbuf.Clone.fillbuf.Clone
  br label %do.end.fill_inbuf.Clone.fillbuf.Clone

if.end.fill_inbuf.Clone.fillbuf.Clone:            ; preds = %lor.lhs.false.fill_inbuf.Clone.fillbuf.Clone
  %21 = load i32, i32* %len.fill_inbuf.Clone.fillbuf.Clone, align 4
  %22 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone.fillbuf.Clone = add i32 %22, %21
  store i32 %add.fill_inbuf.Clone.fillbuf.Clone, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone.fillbuf.Clone

do.cond.fill_inbuf.Clone.fillbuf.Clone:           ; preds = %if.end.fill_inbuf.Clone.fillbuf.Clone
  %23 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone.fillbuf.Clone = icmp ult i32 %23, 32768
  br i1 %cmp3.fill_inbuf.Clone.fillbuf.Clone, label %do.body.fill_inbuf.Clone.fillbuf.Clone, label %do.end.fill_inbuf.Clone.fillbuf.Clone

do.end.fill_inbuf.Clone.fillbuf.Clone:            ; preds = %do.cond.fill_inbuf.Clone.fillbuf.Clone, %if.then.fill_inbuf.Clone.fillbuf.Clone
  %24 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone.fillbuf.Clone = icmp eq i32 %24, 0
  br i1 %cmp4.fill_inbuf.Clone.fillbuf.Clone, label %if.then5.fill_inbuf.Clone.fillbuf.Clone, label %if.end8.fill_inbuf.Clone.fillbuf.Clone

if.then5.fill_inbuf.Clone.fillbuf.Clone:          ; preds = %do.end.fill_inbuf.Clone.fillbuf.Clone
  %25 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone.fillbuf.Clone, align 4
  %tobool.fill_inbuf.Clone.fillbuf.Clone = icmp ne i32 %25, 0
  br i1 %tobool.fill_inbuf.Clone.fillbuf.Clone, label %if.then6.fill_inbuf.Clone.fillbuf.Clone, label %if.end7.fill_inbuf.Clone.fillbuf.Clone

if.then6.fill_inbuf.Clone.fillbuf.Clone:          ; preds = %if.then5.fill_inbuf.Clone.fillbuf.Clone
  store i32 -1, i32* %retval.fill_inbuf.Clone.fillbuf.Clone, align 4
  br label %return.fill_inbuf.Clone.fillbuf.Clone

if.end7.fill_inbuf.Clone.fillbuf.Clone:           ; preds = %if.then5.fill_inbuf.Clone.fillbuf.Clone
  br label %entry.read_error.Clone221

entry.read_error.Clone221:                        ; preds = %if.end7.fill_inbuf.Clone.fillbuf.Clone
  %26 = load i8*, i8** @progname, align 4
  %call.read_error.Clone222 = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone223 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone222, i32 2
  %call1.read_error.Clone224 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone223, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %26)
  %call2.read_error.Clone225 = call i32* @_errno()
  %27 = load i32, i32* %call2.read_error.Clone225, align 4
  %cmp.read_error.Clone226 = icmp ne i32 %27, 0
  br i1 %cmp.read_error.Clone226, label %if.then.read_error.Clone227, label %if.else.read_error.Clone228

if.then.read_error.Clone227:                      ; preds = %entry.read_error.Clone221
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone232

if.else.read_error.Clone228:                      ; preds = %entry.read_error.Clone221
  %call3.read_error.Clone229 = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone230 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone229, i32 2
  %call5.read_error.Clone231 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone230, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone232

if.end.read_error.Clone232:                       ; preds = %if.else.read_error.Clone228, %if.then.read_error.Clone227
  br label %entry.abort_gzip.Clone

entry.abort_gzip.Clone:                           ; preds = %if.end.read_error.Clone232
  %28 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone = icmp ne i32 %28, 0
  br i1 %tobool.abort_gzip.Clone, label %if.then.abort_gzip.Clone, label %if.end.abort_gzip.Clone

if.then.abort_gzip.Clone:                         ; preds = %entry.abort_gzip.Clone
  %29 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %29)
  %call1.abort_gzip.Clone = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone

if.end.abort_gzip.Clone:                          ; preds = %if.then.abort_gzip.Clone, %entry.abort_gzip.Clone
  br label %entry.do_exit.Clone275

entry.do_exit.Clone275:                           ; preds = %if.end.abort_gzip.Clone
  %exitcode.addr.do_exit.Clone276 = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone276, align 4
  %30 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone277 = icmp ne i32 %30, 0
  br i1 %tobool.do_exit.Clone277, label %if.then.do_exit.Clone278, label %if.end.do_exit.Clone279

if.then.do_exit.Clone278:                         ; preds = %entry.do_exit.Clone275
  %31 = load i32, i32* %exitcode.addr.do_exit.Clone276, align 4
  call void @exit(i32 %31) #7
  unreachable

if.end.do_exit.Clone279:                          ; preds = %entry.do_exit.Clone275
  store i32 1, i32* @do_exit.in_exit, align 4
  %32 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone280 = icmp ne i8* %32, null
  br i1 %cmp.do_exit.Clone280, label %if.then1.do_exit.Clone281, label %if.end2.do_exit.Clone282

if.then1.do_exit.Clone281:                        ; preds = %if.end.do_exit.Clone279
  %33 = load i8*, i8** @env, align 4
  call void @free(i8* %33) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone282

if.end2.do_exit.Clone282:                         ; preds = %if.then1.do_exit.Clone281, %if.end.do_exit.Clone279
  %34 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone283 = icmp ne i8** %34, null
  br i1 %cmp3.do_exit.Clone283, label %if.then4.do_exit.Clone284, label %if.end5.do_exit.Clone285

if.then4.do_exit.Clone284:                        ; preds = %if.end2.do_exit.Clone282
  %35 = load i8**, i8*** @args, align 4
  %36 = bitcast i8** %35 to i8*
  call void @free(i8* %36) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone285

if.end5.do_exit.Clone285:                         ; preds = %if.then4.do_exit.Clone284, %if.end2.do_exit.Clone282
  %37 = load i32, i32* %exitcode.addr.do_exit.Clone276, align 4
  call void @exit(i32 %37) #7
  unreachable

return.do_exit.Clone286:                          ; No predecessors!
  br label %if.end.abort_gzip.Clone.Split

if.end.abort_gzip.Clone.Split:                    ; preds = %return.do_exit.Clone286
  br label %if.end.read_error.Clone232.Split

if.end.read_error.Clone232.Split:                 ; preds = %if.end.abort_gzip.Clone.Split
  br label %if.end7.fill_inbuf.Clone.fillbuf.Clone.Split

if.end7.fill_inbuf.Clone.fillbuf.Clone.Split:     ; preds = %if.end.read_error.Clone232.Split
  br label %if.end8.fill_inbuf.Clone.fillbuf.Clone

if.end8.fill_inbuf.Clone.fillbuf.Clone:           ; preds = %if.end7.fill_inbuf.Clone.fillbuf.Clone.Split, %do.end.fill_inbuf.Clone.fillbuf.Clone
  %38 = load i32, i32* @insize, align 4
  %39 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone.fillbuf.Clone = add i32 %39, %38
  store i32 %add9.fill_inbuf.Clone.fillbuf.Clone, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %40 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone.fillbuf.Clone = zext i8 %40 to i32
  store i32 %conv.fill_inbuf.Clone.fillbuf.Clone, i32* %retval.fill_inbuf.Clone.fillbuf.Clone, align 4
  br label %return.fill_inbuf.Clone.fillbuf.Clone

return.fill_inbuf.Clone.fillbuf.Clone:            ; preds = %if.end8.fill_inbuf.Clone.fillbuf.Clone, %if.then6.fill_inbuf.Clone.fillbuf.Clone
  %41 = load i32, i32* %retval.fill_inbuf.Clone.fillbuf.Clone, align 4
  store i32 %41, i32* %RetValuePtr.fillbuf.Clone
  br label %cond.false.Split.fillbuf.Clone

cond.false.Split.fillbuf.Clone:                   ; preds = %return.fill_inbuf.Clone.fillbuf.Clone
  %RetValue.fillbuf.Clone = load i32, i32* %RetValuePtr.fillbuf.Clone
  br label %cond.end.fillbuf.Clone

cond.end.fillbuf.Clone:                           ; preds = %cond.false.Split.fillbuf.Clone, %cond.true.fillbuf.Clone
  %cond.fillbuf.Clone = phi i32 [ %conv8.fillbuf.Clone, %cond.true.fillbuf.Clone ], [ %RetValue.fillbuf.Clone, %cond.false.Split.fillbuf.Clone ]
  store i32 %cond.fillbuf.Clone, i32* @subbitbuf, align 4
  %42 = load i32, i32* @subbitbuf, align 4
  %cmp9.fillbuf.Clone = icmp eq i32 %42, -1
  br i1 %cmp9.fillbuf.Clone, label %if.then.fillbuf.Clone, label %if.end.fillbuf.Clone

if.then.fillbuf.Clone:                            ; preds = %cond.end.fillbuf.Clone
  store i32 0, i32* @subbitbuf, align 4
  br label %if.end.fillbuf.Clone

if.end.fillbuf.Clone:                             ; preds = %if.then.fillbuf.Clone, %cond.end.fillbuf.Clone
  store i32 8, i32* @bitcount, align 4
  br label %while.cond.fillbuf.Clone

while.end.fillbuf.Clone:                          ; preds = %while.cond.fillbuf.Clone
  %43 = load i32, i32* @subbitbuf, align 4
  %44 = load i32, i32* %n.addr.fillbuf.Clone, align 4
  %45 = load i32, i32* @bitcount, align 4
  %sub11.fillbuf.Clone = sub nsw i32 %45, %44
  store i32 %sub11.fillbuf.Clone, i32* @bitcount, align 4
  %shr.fillbuf.Clone = lshr i32 %43, %sub11.fillbuf.Clone
  %46 = load i16, i16* @bitbuf, align 2
  %conv12.fillbuf.Clone = zext i16 %46 to i32
  %or13.fillbuf.Clone = or i32 %conv12.fillbuf.Clone, %shr.fillbuf.Clone
  %conv14.fillbuf.Clone = trunc i32 %or13.fillbuf.Clone to i16
  store i16 %conv14.fillbuf.Clone, i16* @bitbuf, align 2
  br label %entry.getbits.Clone9.Split

entry.getbits.Clone9.Split:                       ; preds = %while.end.fillbuf.Clone
  %47 = load i32, i32* %x.getbits.Clone11, align 4
  store i32 %47, i32* %RetValuePtr15
  br label %entry.Split

entry.Split:                                      ; preds = %entry.getbits.Clone9.Split
  %RetValue16 = load i32, i32* %RetValuePtr15
  store i32 %RetValue16, i32* %n, align 4
  %48 = load i32, i32* %n, align 4
  %cmp = icmp eq i32 %48, 0
  %RetValuePtr = alloca i32, align 4
  %RetValuePtr7 = alloca i32, align 4
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry.Split
  %49 = load i32, i32* %nbit.addr, align 4
  br label %entry.getbits.Clone1

entry.getbits.Clone1:                             ; preds = %if.then
  %n.addr.getbits.Clone2 = alloca i32, align 4
  %x.getbits.Clone3 = alloca i32, align 4
  store i32 %49, i32* %n.addr.getbits.Clone2, align 4
  %50 = load i16, i16* @bitbuf, align 2
  %conv.getbits.Clone4 = zext i16 %50 to i32
  %51 = load i32, i32* %n.addr.getbits.Clone2, align 4
  %sub.getbits.Clone5 = sub i32 16, %51
  %shr.getbits.Clone6 = ashr i32 %conv.getbits.Clone4, %sub.getbits.Clone5
  store i32 %shr.getbits.Clone6, i32* %x.getbits.Clone3, align 4
  %52 = load i32, i32* %n.addr.getbits.Clone2, align 4
  br label %entry.fillbuf.Clone17

entry.fillbuf.Clone17:                            ; preds = %entry.getbits.Clone1
  %n.addr.fillbuf.Clone18 = alloca i32, align 4
  store i32 %52, i32* %n.addr.fillbuf.Clone18, align 4
  %53 = load i32, i32* %n.addr.fillbuf.Clone18, align 4
  %54 = load i16, i16* @bitbuf, align 2
  %conv.fillbuf.Clone19 = zext i16 %54 to i32
  %shl.fillbuf.Clone20 = shl i32 %conv.fillbuf.Clone19, %53
  %conv1.fillbuf.Clone21 = trunc i32 %shl.fillbuf.Clone20 to i16
  store i16 %conv1.fillbuf.Clone21, i16* @bitbuf, align 2
  %RetValuePtr.fillbuf.Clone22 = alloca i32, align 4
  br label %while.cond.fillbuf.Clone23

while.cond.fillbuf.Clone23:                       ; preds = %if.end.fillbuf.Clone70, %entry.fillbuf.Clone17
  %55 = load i32, i32* %n.addr.fillbuf.Clone18, align 4
  %56 = load i32, i32* @bitcount, align 4
  %cmp.fillbuf.Clone24 = icmp sgt i32 %55, %56
  br i1 %cmp.fillbuf.Clone24, label %while.body.fillbuf.Clone25, label %while.end.fillbuf.Clone71

while.body.fillbuf.Clone25:                       ; preds = %while.cond.fillbuf.Clone23
  %57 = load i32, i32* @subbitbuf, align 4
  %58 = load i32, i32* @bitcount, align 4
  %59 = load i32, i32* %n.addr.fillbuf.Clone18, align 4
  %sub.fillbuf.Clone26 = sub nsw i32 %59, %58
  store i32 %sub.fillbuf.Clone26, i32* %n.addr.fillbuf.Clone18, align 4
  %shl3.fillbuf.Clone27 = shl i32 %57, %sub.fillbuf.Clone26
  %60 = load i16, i16* @bitbuf, align 2
  %conv4.fillbuf.Clone28 = zext i16 %60 to i32
  %or.fillbuf.Clone29 = or i32 %conv4.fillbuf.Clone28, %shl3.fillbuf.Clone27
  %conv5.fillbuf.Clone30 = trunc i32 %or.fillbuf.Clone29 to i16
  store i16 %conv5.fillbuf.Clone30, i16* @bitbuf, align 2
  %61 = load i32, i32* @inptr, align 4
  %62 = load i32, i32* @insize, align 4
  %cmp6.fillbuf.Clone31 = icmp ult i32 %61, %62
  br i1 %cmp6.fillbuf.Clone31, label %cond.true.fillbuf.Clone32, label %cond.false.fillbuf.Clone36

cond.true.fillbuf.Clone32:                        ; preds = %while.body.fillbuf.Clone25
  %63 = load i32, i32* @inptr, align 4
  %inc.fillbuf.Clone33 = add i32 %63, 1
  store i32 %inc.fillbuf.Clone33, i32* @inptr, align 4
  %arrayidx.fillbuf.Clone34 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i32 0, i32 %63
  %64 = load i8, i8* %arrayidx.fillbuf.Clone34, align 1
  %conv8.fillbuf.Clone35 = zext i8 %64 to i32
  br label %cond.end.fillbuf.Clone66

cond.false.fillbuf.Clone36:                       ; preds = %while.body.fillbuf.Clone25
  br label %entry.fill_inbuf.Clone.fillbuf.Clone37

entry.fill_inbuf.Clone.fillbuf.Clone37:           ; preds = %cond.false.fillbuf.Clone36
  %retval.fill_inbuf.Clone.fillbuf.Clone38 = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone.fillbuf.Clone39 = alloca i32, align 4
  %len.fill_inbuf.Clone.fillbuf.Clone40 = alloca i32, align 4
  store i32 1, i32* %eof_ok.addr.fill_inbuf.Clone.fillbuf.Clone39, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone.fillbuf.Clone41 = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone.fillbuf.Clone41, align 4
  br label %do.body.fill_inbuf.Clone.fillbuf.Clone42

do.body.fill_inbuf.Clone.fillbuf.Clone42:         ; preds = %do.cond.fill_inbuf.Clone.fillbuf.Clone52, %entry.fill_inbuf.Clone.fillbuf.Clone37
  %65 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone.fillbuf.Clone43 = sub i32 32768, %65
  %66 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone.fillbuf.Clone44 = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %66
  %67 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone.fillbuf.Clone45 = call i32 @spec_read(i32 %67, i8* %add.ptr.fill_inbuf.Clone.fillbuf.Clone44, i32 %sub.fill_inbuf.Clone.fillbuf.Clone43)
  store i32 %call1.fill_inbuf.Clone.fillbuf.Clone45, i32* %len.fill_inbuf.Clone.fillbuf.Clone40, align 4
  %68 = load i32, i32* %len.fill_inbuf.Clone.fillbuf.Clone40, align 4
  %cmp.fill_inbuf.Clone.fillbuf.Clone46 = icmp eq i32 %68, 0
  br i1 %cmp.fill_inbuf.Clone.fillbuf.Clone46, label %if.then.fill_inbuf.Clone.fillbuf.Clone49, label %lor.lhs.false.fill_inbuf.Clone.fillbuf.Clone47

lor.lhs.false.fill_inbuf.Clone.fillbuf.Clone47:   ; preds = %do.body.fill_inbuf.Clone.fillbuf.Clone42
  %69 = load i32, i32* %len.fill_inbuf.Clone.fillbuf.Clone40, align 4
  %cmp2.fill_inbuf.Clone.fillbuf.Clone48 = icmp eq i32 %69, -1
  br i1 %cmp2.fill_inbuf.Clone.fillbuf.Clone48, label %if.then.fill_inbuf.Clone.fillbuf.Clone49, label %if.end.fill_inbuf.Clone.fillbuf.Clone50

if.then.fill_inbuf.Clone.fillbuf.Clone49:         ; preds = %lor.lhs.false.fill_inbuf.Clone.fillbuf.Clone47, %do.body.fill_inbuf.Clone.fillbuf.Clone42
  br label %do.end.fill_inbuf.Clone.fillbuf.Clone54

if.end.fill_inbuf.Clone.fillbuf.Clone50:          ; preds = %lor.lhs.false.fill_inbuf.Clone.fillbuf.Clone47
  %70 = load i32, i32* %len.fill_inbuf.Clone.fillbuf.Clone40, align 4
  %71 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone.fillbuf.Clone51 = add i32 %71, %70
  store i32 %add.fill_inbuf.Clone.fillbuf.Clone51, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone.fillbuf.Clone52

do.cond.fill_inbuf.Clone.fillbuf.Clone52:         ; preds = %if.end.fill_inbuf.Clone.fillbuf.Clone50
  %72 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone.fillbuf.Clone53 = icmp ult i32 %72, 32768
  br i1 %cmp3.fill_inbuf.Clone.fillbuf.Clone53, label %do.body.fill_inbuf.Clone.fillbuf.Clone42, label %do.end.fill_inbuf.Clone.fillbuf.Clone54

do.end.fill_inbuf.Clone.fillbuf.Clone54:          ; preds = %do.cond.fill_inbuf.Clone.fillbuf.Clone52, %if.then.fill_inbuf.Clone.fillbuf.Clone49
  %73 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone.fillbuf.Clone55 = icmp eq i32 %73, 0
  br i1 %cmp4.fill_inbuf.Clone.fillbuf.Clone55, label %if.then5.fill_inbuf.Clone.fillbuf.Clone56, label %if.end8.fill_inbuf.Clone.fillbuf.Clone60

if.then5.fill_inbuf.Clone.fillbuf.Clone56:        ; preds = %do.end.fill_inbuf.Clone.fillbuf.Clone54
  %74 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone.fillbuf.Clone39, align 4
  %tobool.fill_inbuf.Clone.fillbuf.Clone57 = icmp ne i32 %74, 0
  br i1 %tobool.fill_inbuf.Clone.fillbuf.Clone57, label %if.then6.fill_inbuf.Clone.fillbuf.Clone58, label %if.end7.fill_inbuf.Clone.fillbuf.Clone59

if.then6.fill_inbuf.Clone.fillbuf.Clone58:        ; preds = %if.then5.fill_inbuf.Clone.fillbuf.Clone56
  store i32 -1, i32* %retval.fill_inbuf.Clone.fillbuf.Clone38, align 4
  br label %return.fill_inbuf.Clone.fillbuf.Clone63

if.end7.fill_inbuf.Clone.fillbuf.Clone59:         ; preds = %if.then5.fill_inbuf.Clone.fillbuf.Clone56
  br label %entry.read_error.Clone209

entry.read_error.Clone209:                        ; preds = %if.end7.fill_inbuf.Clone.fillbuf.Clone59
  %75 = load i8*, i8** @progname, align 4
  %call.read_error.Clone210 = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone211 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone210, i32 2
  %call1.read_error.Clone212 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone211, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %75)
  %call2.read_error.Clone213 = call i32* @_errno()
  %76 = load i32, i32* %call2.read_error.Clone213, align 4
  %cmp.read_error.Clone214 = icmp ne i32 %76, 0
  br i1 %cmp.read_error.Clone214, label %if.then.read_error.Clone215, label %if.else.read_error.Clone216

if.then.read_error.Clone215:                      ; preds = %entry.read_error.Clone209
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone220

if.else.read_error.Clone216:                      ; preds = %entry.read_error.Clone209
  %call3.read_error.Clone217 = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone218 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone217, i32 2
  %call5.read_error.Clone219 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone218, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone220

if.end.read_error.Clone220:                       ; preds = %if.else.read_error.Clone216, %if.then.read_error.Clone215
  br label %entry.abort_gzip.Clone233

entry.abort_gzip.Clone233:                        ; preds = %if.end.read_error.Clone220
  %77 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone234 = icmp ne i32 %77, 0
  br i1 %tobool.abort_gzip.Clone234, label %if.then.abort_gzip.Clone235, label %if.end.abort_gzip.Clone238

if.then.abort_gzip.Clone235:                      ; preds = %entry.abort_gzip.Clone233
  %78 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone236 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %78)
  %call1.abort_gzip.Clone237 = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone238

if.end.abort_gzip.Clone238:                       ; preds = %if.then.abort_gzip.Clone235, %entry.abort_gzip.Clone233
  br label %entry.do_exit.Clone263

entry.do_exit.Clone263:                           ; preds = %if.end.abort_gzip.Clone238
  %exitcode.addr.do_exit.Clone264 = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone264, align 4
  %79 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone265 = icmp ne i32 %79, 0
  br i1 %tobool.do_exit.Clone265, label %if.then.do_exit.Clone266, label %if.end.do_exit.Clone267

if.then.do_exit.Clone266:                         ; preds = %entry.do_exit.Clone263
  %80 = load i32, i32* %exitcode.addr.do_exit.Clone264, align 4
  call void @exit(i32 %80) #7
  unreachable

if.end.do_exit.Clone267:                          ; preds = %entry.do_exit.Clone263
  store i32 1, i32* @do_exit.in_exit, align 4
  %81 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone268 = icmp ne i8* %81, null
  br i1 %cmp.do_exit.Clone268, label %if.then1.do_exit.Clone269, label %if.end2.do_exit.Clone270

if.then1.do_exit.Clone269:                        ; preds = %if.end.do_exit.Clone267
  %82 = load i8*, i8** @env, align 4
  call void @free(i8* %82) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone270

if.end2.do_exit.Clone270:                         ; preds = %if.then1.do_exit.Clone269, %if.end.do_exit.Clone267
  %83 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone271 = icmp ne i8** %83, null
  br i1 %cmp3.do_exit.Clone271, label %if.then4.do_exit.Clone272, label %if.end5.do_exit.Clone273

if.then4.do_exit.Clone272:                        ; preds = %if.end2.do_exit.Clone270
  %84 = load i8**, i8*** @args, align 4
  %85 = bitcast i8** %84 to i8*
  call void @free(i8* %85) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone273

if.end5.do_exit.Clone273:                         ; preds = %if.then4.do_exit.Clone272, %if.end2.do_exit.Clone270
  %86 = load i32, i32* %exitcode.addr.do_exit.Clone264, align 4
  call void @exit(i32 %86) #7
  unreachable

return.do_exit.Clone274:                          ; No predecessors!
  br label %if.end.abort_gzip.Clone238.Split

if.end.abort_gzip.Clone238.Split:                 ; preds = %return.do_exit.Clone274
  br label %if.end.read_error.Clone220.Split

if.end.read_error.Clone220.Split:                 ; preds = %if.end.abort_gzip.Clone238.Split
  br label %if.end7.fill_inbuf.Clone.fillbuf.Clone59.Split

if.end7.fill_inbuf.Clone.fillbuf.Clone59.Split:   ; preds = %if.end.read_error.Clone220.Split
  br label %if.end8.fill_inbuf.Clone.fillbuf.Clone60

if.end8.fill_inbuf.Clone.fillbuf.Clone60:         ; preds = %if.end7.fill_inbuf.Clone.fillbuf.Clone59.Split, %do.end.fill_inbuf.Clone.fillbuf.Clone54
  %87 = load i32, i32* @insize, align 4
  %88 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone.fillbuf.Clone61 = add i32 %88, %87
  store i32 %add9.fill_inbuf.Clone.fillbuf.Clone61, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %89 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone.fillbuf.Clone62 = zext i8 %89 to i32
  store i32 %conv.fill_inbuf.Clone.fillbuf.Clone62, i32* %retval.fill_inbuf.Clone.fillbuf.Clone38, align 4
  br label %return.fill_inbuf.Clone.fillbuf.Clone63

return.fill_inbuf.Clone.fillbuf.Clone63:          ; preds = %if.end8.fill_inbuf.Clone.fillbuf.Clone60, %if.then6.fill_inbuf.Clone.fillbuf.Clone58
  %90 = load i32, i32* %retval.fill_inbuf.Clone.fillbuf.Clone38, align 4
  store i32 %90, i32* %RetValuePtr.fillbuf.Clone22
  br label %cond.false.Split.fillbuf.Clone64

cond.false.Split.fillbuf.Clone64:                 ; preds = %return.fill_inbuf.Clone.fillbuf.Clone63
  %RetValue.fillbuf.Clone65 = load i32, i32* %RetValuePtr.fillbuf.Clone22
  br label %cond.end.fillbuf.Clone66

cond.end.fillbuf.Clone66:                         ; preds = %cond.false.Split.fillbuf.Clone64, %cond.true.fillbuf.Clone32
  %cond.fillbuf.Clone67 = phi i32 [ %conv8.fillbuf.Clone35, %cond.true.fillbuf.Clone32 ], [ %RetValue.fillbuf.Clone65, %cond.false.Split.fillbuf.Clone64 ]
  store i32 %cond.fillbuf.Clone67, i32* @subbitbuf, align 4
  %91 = load i32, i32* @subbitbuf, align 4
  %cmp9.fillbuf.Clone68 = icmp eq i32 %91, -1
  br i1 %cmp9.fillbuf.Clone68, label %if.then.fillbuf.Clone69, label %if.end.fillbuf.Clone70

if.then.fillbuf.Clone69:                          ; preds = %cond.end.fillbuf.Clone66
  store i32 0, i32* @subbitbuf, align 4
  br label %if.end.fillbuf.Clone70

if.end.fillbuf.Clone70:                           ; preds = %if.then.fillbuf.Clone69, %cond.end.fillbuf.Clone66
  store i32 8, i32* @bitcount, align 4
  br label %while.cond.fillbuf.Clone23

while.end.fillbuf.Clone71:                        ; preds = %while.cond.fillbuf.Clone23
  %92 = load i32, i32* @subbitbuf, align 4
  %93 = load i32, i32* %n.addr.fillbuf.Clone18, align 4
  %94 = load i32, i32* @bitcount, align 4
  %sub11.fillbuf.Clone72 = sub nsw i32 %94, %93
  store i32 %sub11.fillbuf.Clone72, i32* @bitcount, align 4
  %shr.fillbuf.Clone73 = lshr i32 %92, %sub11.fillbuf.Clone72
  %95 = load i16, i16* @bitbuf, align 2
  %conv12.fillbuf.Clone74 = zext i16 %95 to i32
  %or13.fillbuf.Clone75 = or i32 %conv12.fillbuf.Clone74, %shr.fillbuf.Clone73
  %conv14.fillbuf.Clone76 = trunc i32 %or13.fillbuf.Clone75 to i16
  store i16 %conv14.fillbuf.Clone76, i16* @bitbuf, align 2
  br label %entry.getbits.Clone1.Split

entry.getbits.Clone1.Split:                       ; preds = %while.end.fillbuf.Clone71
  %96 = load i32, i32* %x.getbits.Clone3, align 4
  store i32 %96, i32* %RetValuePtr7
  br label %if.then.Split

if.then.Split:                                    ; preds = %entry.getbits.Clone1.Split
  %RetValue8 = load i32, i32* %RetValuePtr7
  store i32 %RetValue8, i32* %c, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.Split
  %97 = load i32, i32* %i, align 4
  %98 = load i32, i32* %nn.addr, align 4
  %cmp2 = icmp slt i32 %97, %98
  br i1 %cmp2, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %99 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [19 x i8], [19 x i8]* @pt_len, i32 0, i32 %99
  store i8 0, i8* %arrayidx, align 1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %100 = load i32, i32* %i, align 4
  %inc = add nsw i32 %100, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4
  br label %for.cond3

for.cond3:                                        ; preds = %for.inc7, %for.end
  %101 = load i32, i32* %i, align 4
  %cmp4 = icmp slt i32 %101, 256
  br i1 %cmp4, label %for.body5, label %for.end9

for.body5:                                        ; preds = %for.cond3
  %102 = load i32, i32* %c, align 4
  %conv = trunc i32 %102 to i16
  %103 = load i32, i32* %i, align 4
  %arrayidx6 = getelementptr inbounds [256 x i16], [256 x i16]* @pt_table, i32 0, i32 %103
  store i16 %conv, i16* %arrayidx6, align 2
  br label %for.inc7

for.inc7:                                         ; preds = %for.body5
  %104 = load i32, i32* %i, align 4
  %inc8 = add nsw i32 %104, 1
  store i32 %inc8, i32* %i, align 4
  br label %for.cond3

for.end9:                                         ; preds = %for.cond3
  br label %if.end46

if.else:                                          ; preds = %entry.Split
  store i32 0, i32* %i, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end37, %if.else
  %105 = load i32, i32* %i, align 4
  %106 = load i32, i32* %n, align 4
  %cmp10 = icmp slt i32 %105, %106
  br i1 %cmp10, label %CallOutFuncBB, label %while.end38

CallOutFuncBB:                                    ; preds = %while.cond
  call void @while.body.OutLineFunc.44(i32* %c, i32* %mask)
  %107 = getelementptr inbounds %Struct.RetValue.34, %Struct.RetValue.34* @Struct.RetValue.43, i32 0, i32 0
  %108 = load i32*, i32** %107, align 4
  %109 = load i32, i32* %108, align 4
  store i32 %109, i32* %c
  %110 = getelementptr inbounds %Struct.RetValue.34, %Struct.RetValue.34* @Struct.RetValue.43, i32 0, i32 1
  %111 = load i32*, i32** %110, align 4
  %112 = load i32, i32* %111, align 4
  store i32 %112, i32* %mask
  br label %new

new:                                              ; preds = %CallOutFuncBB
  %113 = load i32, i32* %c, align 4
  %cmp21 = icmp slt i32 %113, 7
  br i1 %cmp21, label %cond.true, label %cond.false

cond.true:                                        ; preds = %new
  br label %cond.end

cond.false:                                       ; preds = %new
  %114 = load i32, i32* %c, align 4
  %sub = sub nsw i32 %114, 3
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 3, %cond.true ], [ %sub, %cond.false ]
  br label %entry.fillbuf.Clone137

entry.fillbuf.Clone137:                           ; preds = %cond.end
  %n.addr.fillbuf.Clone138 = alloca i32, align 4
  store i32 %cond, i32* %n.addr.fillbuf.Clone138, align 4
  %115 = load i32, i32* %n.addr.fillbuf.Clone138, align 4
  %116 = load i16, i16* @bitbuf, align 2
  %conv.fillbuf.Clone139 = zext i16 %116 to i32
  %shl.fillbuf.Clone140 = shl i32 %conv.fillbuf.Clone139, %115
  %conv1.fillbuf.Clone141 = trunc i32 %shl.fillbuf.Clone140 to i16
  store i16 %conv1.fillbuf.Clone141, i16* @bitbuf, align 2
  %RetValuePtr.fillbuf.Clone142 = alloca i32, align 4
  br label %while.cond.fillbuf.Clone143

while.cond.fillbuf.Clone143:                      ; preds = %if.end.fillbuf.Clone190, %entry.fillbuf.Clone137
  %117 = load i32, i32* %n.addr.fillbuf.Clone138, align 4
  %118 = load i32, i32* @bitcount, align 4
  %cmp.fillbuf.Clone144 = icmp sgt i32 %117, %118
  br i1 %cmp.fillbuf.Clone144, label %while.body.fillbuf.Clone145, label %while.end.fillbuf.Clone191

while.body.fillbuf.Clone145:                      ; preds = %while.cond.fillbuf.Clone143
  %119 = load i32, i32* @subbitbuf, align 4
  %120 = load i32, i32* @bitcount, align 4
  %121 = load i32, i32* %n.addr.fillbuf.Clone138, align 4
  %sub.fillbuf.Clone146 = sub nsw i32 %121, %120
  store i32 %sub.fillbuf.Clone146, i32* %n.addr.fillbuf.Clone138, align 4
  %shl3.fillbuf.Clone147 = shl i32 %119, %sub.fillbuf.Clone146
  %122 = load i16, i16* @bitbuf, align 2
  %conv4.fillbuf.Clone148 = zext i16 %122 to i32
  %or.fillbuf.Clone149 = or i32 %conv4.fillbuf.Clone148, %shl3.fillbuf.Clone147
  %conv5.fillbuf.Clone150 = trunc i32 %or.fillbuf.Clone149 to i16
  store i16 %conv5.fillbuf.Clone150, i16* @bitbuf, align 2
  %123 = load i32, i32* @inptr, align 4
  %124 = load i32, i32* @insize, align 4
  %cmp6.fillbuf.Clone151 = icmp ult i32 %123, %124
  br i1 %cmp6.fillbuf.Clone151, label %cond.true.fillbuf.Clone152, label %cond.false.fillbuf.Clone156

cond.true.fillbuf.Clone152:                       ; preds = %while.body.fillbuf.Clone145
  %125 = load i32, i32* @inptr, align 4
  %inc.fillbuf.Clone153 = add i32 %125, 1
  store i32 %inc.fillbuf.Clone153, i32* @inptr, align 4
  %arrayidx.fillbuf.Clone154 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i32 0, i32 %125
  %126 = load i8, i8* %arrayidx.fillbuf.Clone154, align 1
  %conv8.fillbuf.Clone155 = zext i8 %126 to i32
  br label %cond.end.fillbuf.Clone186

cond.false.fillbuf.Clone156:                      ; preds = %while.body.fillbuf.Clone145
  br label %entry.fill_inbuf.Clone.fillbuf.Clone157

entry.fill_inbuf.Clone.fillbuf.Clone157:          ; preds = %cond.false.fillbuf.Clone156
  %retval.fill_inbuf.Clone.fillbuf.Clone158 = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone.fillbuf.Clone159 = alloca i32, align 4
  %len.fill_inbuf.Clone.fillbuf.Clone160 = alloca i32, align 4
  store i32 1, i32* %eof_ok.addr.fill_inbuf.Clone.fillbuf.Clone159, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone.fillbuf.Clone161 = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone.fillbuf.Clone161, align 4
  br label %do.body.fill_inbuf.Clone.fillbuf.Clone162

do.body.fill_inbuf.Clone.fillbuf.Clone162:        ; preds = %do.cond.fill_inbuf.Clone.fillbuf.Clone172, %entry.fill_inbuf.Clone.fillbuf.Clone157
  %127 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone.fillbuf.Clone163 = sub i32 32768, %127
  %128 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone.fillbuf.Clone164 = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %128
  %129 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone.fillbuf.Clone165 = call i32 @spec_read(i32 %129, i8* %add.ptr.fill_inbuf.Clone.fillbuf.Clone164, i32 %sub.fill_inbuf.Clone.fillbuf.Clone163)
  store i32 %call1.fill_inbuf.Clone.fillbuf.Clone165, i32* %len.fill_inbuf.Clone.fillbuf.Clone160, align 4
  %130 = load i32, i32* %len.fill_inbuf.Clone.fillbuf.Clone160, align 4
  %cmp.fill_inbuf.Clone.fillbuf.Clone166 = icmp eq i32 %130, 0
  br i1 %cmp.fill_inbuf.Clone.fillbuf.Clone166, label %if.then.fill_inbuf.Clone.fillbuf.Clone169, label %lor.lhs.false.fill_inbuf.Clone.fillbuf.Clone167

lor.lhs.false.fill_inbuf.Clone.fillbuf.Clone167:  ; preds = %do.body.fill_inbuf.Clone.fillbuf.Clone162
  %131 = load i32, i32* %len.fill_inbuf.Clone.fillbuf.Clone160, align 4
  %cmp2.fill_inbuf.Clone.fillbuf.Clone168 = icmp eq i32 %131, -1
  br i1 %cmp2.fill_inbuf.Clone.fillbuf.Clone168, label %if.then.fill_inbuf.Clone.fillbuf.Clone169, label %if.end.fill_inbuf.Clone.fillbuf.Clone170

if.then.fill_inbuf.Clone.fillbuf.Clone169:        ; preds = %lor.lhs.false.fill_inbuf.Clone.fillbuf.Clone167, %do.body.fill_inbuf.Clone.fillbuf.Clone162
  br label %do.end.fill_inbuf.Clone.fillbuf.Clone174

if.end.fill_inbuf.Clone.fillbuf.Clone170:         ; preds = %lor.lhs.false.fill_inbuf.Clone.fillbuf.Clone167
  %132 = load i32, i32* %len.fill_inbuf.Clone.fillbuf.Clone160, align 4
  %133 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone.fillbuf.Clone171 = add i32 %133, %132
  store i32 %add.fill_inbuf.Clone.fillbuf.Clone171, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone.fillbuf.Clone172

do.cond.fill_inbuf.Clone.fillbuf.Clone172:        ; preds = %if.end.fill_inbuf.Clone.fillbuf.Clone170
  %134 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone.fillbuf.Clone173 = icmp ult i32 %134, 32768
  br i1 %cmp3.fill_inbuf.Clone.fillbuf.Clone173, label %do.body.fill_inbuf.Clone.fillbuf.Clone162, label %do.end.fill_inbuf.Clone.fillbuf.Clone174

do.end.fill_inbuf.Clone.fillbuf.Clone174:         ; preds = %do.cond.fill_inbuf.Clone.fillbuf.Clone172, %if.then.fill_inbuf.Clone.fillbuf.Clone169
  %135 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone.fillbuf.Clone175 = icmp eq i32 %135, 0
  br i1 %cmp4.fill_inbuf.Clone.fillbuf.Clone175, label %if.then5.fill_inbuf.Clone.fillbuf.Clone176, label %if.end8.fill_inbuf.Clone.fillbuf.Clone180

if.then5.fill_inbuf.Clone.fillbuf.Clone176:       ; preds = %do.end.fill_inbuf.Clone.fillbuf.Clone174
  %136 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone.fillbuf.Clone159, align 4
  %tobool.fill_inbuf.Clone.fillbuf.Clone177 = icmp ne i32 %136, 0
  br i1 %tobool.fill_inbuf.Clone.fillbuf.Clone177, label %if.then6.fill_inbuf.Clone.fillbuf.Clone178, label %if.end7.fill_inbuf.Clone.fillbuf.Clone179

if.then6.fill_inbuf.Clone.fillbuf.Clone178:       ; preds = %if.then5.fill_inbuf.Clone.fillbuf.Clone176
  store i32 -1, i32* %retval.fill_inbuf.Clone.fillbuf.Clone158, align 4
  br label %return.fill_inbuf.Clone.fillbuf.Clone183

if.end7.fill_inbuf.Clone.fillbuf.Clone179:        ; preds = %if.then5.fill_inbuf.Clone.fillbuf.Clone176
  br label %entry.read_error.Clone

entry.read_error.Clone:                           ; preds = %if.end7.fill_inbuf.Clone.fillbuf.Clone179
  %137 = load i8*, i8** @progname, align 4
  %call.read_error.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone, i32 2
  %call1.read_error.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %137)
  %call2.read_error.Clone = call i32* @_errno()
  %138 = load i32, i32* %call2.read_error.Clone, align 4
  %cmp.read_error.Clone = icmp ne i32 %138, 0
  br i1 %cmp.read_error.Clone, label %if.then.read_error.Clone, label %if.else.read_error.Clone

if.then.read_error.Clone:                         ; preds = %entry.read_error.Clone
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone

if.else.read_error.Clone:                         ; preds = %entry.read_error.Clone
  %call3.read_error.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone, i32 2
  %call5.read_error.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone

if.end.read_error.Clone:                          ; preds = %if.else.read_error.Clone, %if.then.read_error.Clone
  br label %entry.abort_gzip.Clone245

entry.abort_gzip.Clone245:                        ; preds = %if.end.read_error.Clone
  %139 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone246 = icmp ne i32 %139, 0
  br i1 %tobool.abort_gzip.Clone246, label %if.then.abort_gzip.Clone247, label %if.end.abort_gzip.Clone250

if.then.abort_gzip.Clone247:                      ; preds = %entry.abort_gzip.Clone245
  %140 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone248 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %140)
  %call1.abort_gzip.Clone249 = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone250

if.end.abort_gzip.Clone250:                       ; preds = %if.then.abort_gzip.Clone247, %entry.abort_gzip.Clone245
  br label %entry.do_exit.Clone

entry.do_exit.Clone:                              ; preds = %if.end.abort_gzip.Clone250
  %exitcode.addr.do_exit.Clone = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone, align 4
  %141 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone = icmp ne i32 %141, 0
  br i1 %tobool.do_exit.Clone, label %if.then.do_exit.Clone, label %if.end.do_exit.Clone

if.then.do_exit.Clone:                            ; preds = %entry.do_exit.Clone
  %142 = load i32, i32* %exitcode.addr.do_exit.Clone, align 4
  call void @exit(i32 %142) #7
  unreachable

if.end.do_exit.Clone:                             ; preds = %entry.do_exit.Clone
  store i32 1, i32* @do_exit.in_exit, align 4
  %143 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone = icmp ne i8* %143, null
  br i1 %cmp.do_exit.Clone, label %if.then1.do_exit.Clone, label %if.end2.do_exit.Clone

if.then1.do_exit.Clone:                           ; preds = %if.end.do_exit.Clone
  %144 = load i8*, i8** @env, align 4
  call void @free(i8* %144) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone

if.end2.do_exit.Clone:                            ; preds = %if.then1.do_exit.Clone, %if.end.do_exit.Clone
  %145 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone = icmp ne i8** %145, null
  br i1 %cmp3.do_exit.Clone, label %if.then4.do_exit.Clone, label %if.end5.do_exit.Clone

if.then4.do_exit.Clone:                           ; preds = %if.end2.do_exit.Clone
  %146 = load i8**, i8*** @args, align 4
  %147 = bitcast i8** %146 to i8*
  call void @free(i8* %147) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone

if.end5.do_exit.Clone:                            ; preds = %if.then4.do_exit.Clone, %if.end2.do_exit.Clone
  %148 = load i32, i32* %exitcode.addr.do_exit.Clone, align 4
  call void @exit(i32 %148) #7
  unreachable

return.do_exit.Clone:                             ; No predecessors!
  br label %if.end.abort_gzip.Clone250.Split

if.end.abort_gzip.Clone250.Split:                 ; preds = %return.do_exit.Clone
  br label %if.end.read_error.Clone.Split

if.end.read_error.Clone.Split:                    ; preds = %if.end.abort_gzip.Clone250.Split
  br label %if.end7.fill_inbuf.Clone.fillbuf.Clone179.Split

if.end7.fill_inbuf.Clone.fillbuf.Clone179.Split:  ; preds = %if.end.read_error.Clone.Split
  br label %if.end8.fill_inbuf.Clone.fillbuf.Clone180

if.end8.fill_inbuf.Clone.fillbuf.Clone180:        ; preds = %if.end7.fill_inbuf.Clone.fillbuf.Clone179.Split, %do.end.fill_inbuf.Clone.fillbuf.Clone174
  %149 = load i32, i32* @insize, align 4
  %150 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone.fillbuf.Clone181 = add i32 %150, %149
  store i32 %add9.fill_inbuf.Clone.fillbuf.Clone181, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %151 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone.fillbuf.Clone182 = zext i8 %151 to i32
  store i32 %conv.fill_inbuf.Clone.fillbuf.Clone182, i32* %retval.fill_inbuf.Clone.fillbuf.Clone158, align 4
  br label %return.fill_inbuf.Clone.fillbuf.Clone183

return.fill_inbuf.Clone.fillbuf.Clone183:         ; preds = %if.end8.fill_inbuf.Clone.fillbuf.Clone180, %if.then6.fill_inbuf.Clone.fillbuf.Clone178
  %152 = load i32, i32* %retval.fill_inbuf.Clone.fillbuf.Clone158, align 4
  store i32 %152, i32* %RetValuePtr.fillbuf.Clone142
  br label %cond.false.Split.fillbuf.Clone184

cond.false.Split.fillbuf.Clone184:                ; preds = %return.fill_inbuf.Clone.fillbuf.Clone183
  %RetValue.fillbuf.Clone185 = load i32, i32* %RetValuePtr.fillbuf.Clone142
  br label %cond.end.fillbuf.Clone186

cond.end.fillbuf.Clone186:                        ; preds = %cond.false.Split.fillbuf.Clone184, %cond.true.fillbuf.Clone152
  %cond.fillbuf.Clone187 = phi i32 [ %conv8.fillbuf.Clone155, %cond.true.fillbuf.Clone152 ], [ %RetValue.fillbuf.Clone185, %cond.false.Split.fillbuf.Clone184 ]
  store i32 %cond.fillbuf.Clone187, i32* @subbitbuf, align 4
  %153 = load i32, i32* @subbitbuf, align 4
  %cmp9.fillbuf.Clone188 = icmp eq i32 %153, -1
  br i1 %cmp9.fillbuf.Clone188, label %if.then.fillbuf.Clone189, label %if.end.fillbuf.Clone190

if.then.fillbuf.Clone189:                         ; preds = %cond.end.fillbuf.Clone186
  store i32 0, i32* @subbitbuf, align 4
  br label %if.end.fillbuf.Clone190

if.end.fillbuf.Clone190:                          ; preds = %if.then.fillbuf.Clone189, %cond.end.fillbuf.Clone186
  store i32 8, i32* @bitcount, align 4
  br label %while.cond.fillbuf.Clone143

while.end.fillbuf.Clone191:                       ; preds = %while.cond.fillbuf.Clone143
  %154 = load i32, i32* @subbitbuf, align 4
  %155 = load i32, i32* %n.addr.fillbuf.Clone138, align 4
  %156 = load i32, i32* @bitcount, align 4
  %sub11.fillbuf.Clone192 = sub nsw i32 %156, %155
  store i32 %sub11.fillbuf.Clone192, i32* @bitcount, align 4
  %shr.fillbuf.Clone193 = lshr i32 %154, %sub11.fillbuf.Clone192
  %157 = load i16, i16* @bitbuf, align 2
  %conv12.fillbuf.Clone194 = zext i16 %157 to i32
  %or13.fillbuf.Clone195 = or i32 %conv12.fillbuf.Clone194, %shr.fillbuf.Clone193
  %conv14.fillbuf.Clone196 = trunc i32 %or13.fillbuf.Clone195 to i16
  store i16 %conv14.fillbuf.Clone196, i16* @bitbuf, align 2
  br label %cond.end.Split

cond.end.Split:                                   ; preds = %while.end.fillbuf.Clone191
  %158 = load i32, i32* %c, align 4
  %conv23 = trunc i32 %158 to i8
  %159 = load i32, i32* %i, align 4
  %inc24 = add nsw i32 %159, 1
  store i32 %inc24, i32* %i, align 4
  %arrayidx25 = getelementptr inbounds [19 x i8], [19 x i8]* @pt_len, i32 0, i32 %159
  store i8 %conv23, i8* %arrayidx25, align 1
  %160 = load i32, i32* %i, align 4
  %161 = load i32, i32* %i_special.addr, align 4
  %cmp26 = icmp eq i32 %160, %161
  br i1 %cmp26, label %if.then28, label %if.end37

if.then28:                                        ; preds = %cond.end.Split
  br label %entry.getbits.Clone

entry.getbits.Clone:                              ; preds = %if.then28
  %n.addr.getbits.Clone = alloca i32, align 4
  %x.getbits.Clone = alloca i32, align 4
  store i32 2, i32* %n.addr.getbits.Clone, align 4
  %162 = load i16, i16* @bitbuf, align 2
  %conv.getbits.Clone = zext i16 %162 to i32
  %163 = load i32, i32* %n.addr.getbits.Clone, align 4
  %sub.getbits.Clone = sub i32 16, %163
  %shr.getbits.Clone = ashr i32 %conv.getbits.Clone, %sub.getbits.Clone
  store i32 %shr.getbits.Clone, i32* %x.getbits.Clone, align 4
  %164 = load i32, i32* %n.addr.getbits.Clone, align 4
  br label %entry.fillbuf.Clone77

entry.fillbuf.Clone77:                            ; preds = %entry.getbits.Clone
  %n.addr.fillbuf.Clone78 = alloca i32, align 4
  store i32 %164, i32* %n.addr.fillbuf.Clone78, align 4
  %165 = load i32, i32* %n.addr.fillbuf.Clone78, align 4
  %166 = load i16, i16* @bitbuf, align 2
  %conv.fillbuf.Clone79 = zext i16 %166 to i32
  %shl.fillbuf.Clone80 = shl i32 %conv.fillbuf.Clone79, %165
  %conv1.fillbuf.Clone81 = trunc i32 %shl.fillbuf.Clone80 to i16
  store i16 %conv1.fillbuf.Clone81, i16* @bitbuf, align 2
  %RetValuePtr.fillbuf.Clone82 = alloca i32, align 4
  br label %while.cond.fillbuf.Clone83

while.cond.fillbuf.Clone83:                       ; preds = %if.end.fillbuf.Clone130, %entry.fillbuf.Clone77
  %167 = load i32, i32* %n.addr.fillbuf.Clone78, align 4
  %168 = load i32, i32* @bitcount, align 4
  %cmp.fillbuf.Clone84 = icmp sgt i32 %167, %168
  br i1 %cmp.fillbuf.Clone84, label %while.body.fillbuf.Clone85, label %while.end.fillbuf.Clone131

while.body.fillbuf.Clone85:                       ; preds = %while.cond.fillbuf.Clone83
  %169 = load i32, i32* @subbitbuf, align 4
  %170 = load i32, i32* @bitcount, align 4
  %171 = load i32, i32* %n.addr.fillbuf.Clone78, align 4
  %sub.fillbuf.Clone86 = sub nsw i32 %171, %170
  store i32 %sub.fillbuf.Clone86, i32* %n.addr.fillbuf.Clone78, align 4
  %shl3.fillbuf.Clone87 = shl i32 %169, %sub.fillbuf.Clone86
  %172 = load i16, i16* @bitbuf, align 2
  %conv4.fillbuf.Clone88 = zext i16 %172 to i32
  %or.fillbuf.Clone89 = or i32 %conv4.fillbuf.Clone88, %shl3.fillbuf.Clone87
  %conv5.fillbuf.Clone90 = trunc i32 %or.fillbuf.Clone89 to i16
  store i16 %conv5.fillbuf.Clone90, i16* @bitbuf, align 2
  %173 = load i32, i32* @inptr, align 4
  %174 = load i32, i32* @insize, align 4
  %cmp6.fillbuf.Clone91 = icmp ult i32 %173, %174
  br i1 %cmp6.fillbuf.Clone91, label %cond.true.fillbuf.Clone92, label %cond.false.fillbuf.Clone96

cond.true.fillbuf.Clone92:                        ; preds = %while.body.fillbuf.Clone85
  %175 = load i32, i32* @inptr, align 4
  %inc.fillbuf.Clone93 = add i32 %175, 1
  store i32 %inc.fillbuf.Clone93, i32* @inptr, align 4
  %arrayidx.fillbuf.Clone94 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i32 0, i32 %175
  %176 = load i8, i8* %arrayidx.fillbuf.Clone94, align 1
  %conv8.fillbuf.Clone95 = zext i8 %176 to i32
  br label %cond.end.fillbuf.Clone126

cond.false.fillbuf.Clone96:                       ; preds = %while.body.fillbuf.Clone85
  br label %entry.fill_inbuf.Clone.fillbuf.Clone97

entry.fill_inbuf.Clone.fillbuf.Clone97:           ; preds = %cond.false.fillbuf.Clone96
  %retval.fill_inbuf.Clone.fillbuf.Clone98 = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone.fillbuf.Clone99 = alloca i32, align 4
  %len.fill_inbuf.Clone.fillbuf.Clone100 = alloca i32, align 4
  store i32 1, i32* %eof_ok.addr.fill_inbuf.Clone.fillbuf.Clone99, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone.fillbuf.Clone101 = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone.fillbuf.Clone101, align 4
  br label %do.body.fill_inbuf.Clone.fillbuf.Clone102

do.body.fill_inbuf.Clone.fillbuf.Clone102:        ; preds = %do.cond.fill_inbuf.Clone.fillbuf.Clone112, %entry.fill_inbuf.Clone.fillbuf.Clone97
  %177 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone.fillbuf.Clone103 = sub i32 32768, %177
  %178 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone.fillbuf.Clone104 = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %178
  %179 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone.fillbuf.Clone105 = call i32 @spec_read(i32 %179, i8* %add.ptr.fill_inbuf.Clone.fillbuf.Clone104, i32 %sub.fill_inbuf.Clone.fillbuf.Clone103)
  store i32 %call1.fill_inbuf.Clone.fillbuf.Clone105, i32* %len.fill_inbuf.Clone.fillbuf.Clone100, align 4
  %180 = load i32, i32* %len.fill_inbuf.Clone.fillbuf.Clone100, align 4
  %cmp.fill_inbuf.Clone.fillbuf.Clone106 = icmp eq i32 %180, 0
  br i1 %cmp.fill_inbuf.Clone.fillbuf.Clone106, label %if.then.fill_inbuf.Clone.fillbuf.Clone109, label %lor.lhs.false.fill_inbuf.Clone.fillbuf.Clone107

lor.lhs.false.fill_inbuf.Clone.fillbuf.Clone107:  ; preds = %do.body.fill_inbuf.Clone.fillbuf.Clone102
  %181 = load i32, i32* %len.fill_inbuf.Clone.fillbuf.Clone100, align 4
  %cmp2.fill_inbuf.Clone.fillbuf.Clone108 = icmp eq i32 %181, -1
  br i1 %cmp2.fill_inbuf.Clone.fillbuf.Clone108, label %if.then.fill_inbuf.Clone.fillbuf.Clone109, label %if.end.fill_inbuf.Clone.fillbuf.Clone110

if.then.fill_inbuf.Clone.fillbuf.Clone109:        ; preds = %lor.lhs.false.fill_inbuf.Clone.fillbuf.Clone107, %do.body.fill_inbuf.Clone.fillbuf.Clone102
  br label %do.end.fill_inbuf.Clone.fillbuf.Clone114

if.end.fill_inbuf.Clone.fillbuf.Clone110:         ; preds = %lor.lhs.false.fill_inbuf.Clone.fillbuf.Clone107
  %182 = load i32, i32* %len.fill_inbuf.Clone.fillbuf.Clone100, align 4
  %183 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone.fillbuf.Clone111 = add i32 %183, %182
  store i32 %add.fill_inbuf.Clone.fillbuf.Clone111, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone.fillbuf.Clone112

do.cond.fill_inbuf.Clone.fillbuf.Clone112:        ; preds = %if.end.fill_inbuf.Clone.fillbuf.Clone110
  %184 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone.fillbuf.Clone113 = icmp ult i32 %184, 32768
  br i1 %cmp3.fill_inbuf.Clone.fillbuf.Clone113, label %do.body.fill_inbuf.Clone.fillbuf.Clone102, label %do.end.fill_inbuf.Clone.fillbuf.Clone114

do.end.fill_inbuf.Clone.fillbuf.Clone114:         ; preds = %do.cond.fill_inbuf.Clone.fillbuf.Clone112, %if.then.fill_inbuf.Clone.fillbuf.Clone109
  %185 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone.fillbuf.Clone115 = icmp eq i32 %185, 0
  br i1 %cmp4.fill_inbuf.Clone.fillbuf.Clone115, label %if.then5.fill_inbuf.Clone.fillbuf.Clone116, label %if.end8.fill_inbuf.Clone.fillbuf.Clone120

if.then5.fill_inbuf.Clone.fillbuf.Clone116:       ; preds = %do.end.fill_inbuf.Clone.fillbuf.Clone114
  %186 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone.fillbuf.Clone99, align 4
  %tobool.fill_inbuf.Clone.fillbuf.Clone117 = icmp ne i32 %186, 0
  br i1 %tobool.fill_inbuf.Clone.fillbuf.Clone117, label %if.then6.fill_inbuf.Clone.fillbuf.Clone118, label %if.end7.fill_inbuf.Clone.fillbuf.Clone119

if.then6.fill_inbuf.Clone.fillbuf.Clone118:       ; preds = %if.then5.fill_inbuf.Clone.fillbuf.Clone116
  store i32 -1, i32* %retval.fill_inbuf.Clone.fillbuf.Clone98, align 4
  br label %return.fill_inbuf.Clone.fillbuf.Clone123

if.end7.fill_inbuf.Clone.fillbuf.Clone119:        ; preds = %if.then5.fill_inbuf.Clone.fillbuf.Clone116
  br label %entry.read_error.Clone197

entry.read_error.Clone197:                        ; preds = %if.end7.fill_inbuf.Clone.fillbuf.Clone119
  %187 = load i8*, i8** @progname, align 4
  %call.read_error.Clone198 = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone199 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone198, i32 2
  %call1.read_error.Clone200 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone199, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %187)
  %call2.read_error.Clone201 = call i32* @_errno()
  %188 = load i32, i32* %call2.read_error.Clone201, align 4
  %cmp.read_error.Clone202 = icmp ne i32 %188, 0
  br i1 %cmp.read_error.Clone202, label %if.then.read_error.Clone203, label %if.else.read_error.Clone204

if.then.read_error.Clone203:                      ; preds = %entry.read_error.Clone197
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone208

if.else.read_error.Clone204:                      ; preds = %entry.read_error.Clone197
  %call3.read_error.Clone205 = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone206 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone205, i32 2
  %call5.read_error.Clone207 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone206, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone208

if.end.read_error.Clone208:                       ; preds = %if.else.read_error.Clone204, %if.then.read_error.Clone203
  br label %entry.abort_gzip.Clone239

entry.abort_gzip.Clone239:                        ; preds = %if.end.read_error.Clone208
  %189 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone240 = icmp ne i32 %189, 0
  br i1 %tobool.abort_gzip.Clone240, label %if.then.abort_gzip.Clone241, label %if.end.abort_gzip.Clone244

if.then.abort_gzip.Clone241:                      ; preds = %entry.abort_gzip.Clone239
  %190 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone242 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %190)
  %call1.abort_gzip.Clone243 = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone244

if.end.abort_gzip.Clone244:                       ; preds = %if.then.abort_gzip.Clone241, %entry.abort_gzip.Clone239
  br label %entry.do_exit.Clone251

entry.do_exit.Clone251:                           ; preds = %if.end.abort_gzip.Clone244
  %exitcode.addr.do_exit.Clone252 = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone252, align 4
  %191 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone253 = icmp ne i32 %191, 0
  br i1 %tobool.do_exit.Clone253, label %if.then.do_exit.Clone254, label %if.end.do_exit.Clone255

if.then.do_exit.Clone254:                         ; preds = %entry.do_exit.Clone251
  %192 = load i32, i32* %exitcode.addr.do_exit.Clone252, align 4
  call void @exit(i32 %192) #7
  unreachable

if.end.do_exit.Clone255:                          ; preds = %entry.do_exit.Clone251
  store i32 1, i32* @do_exit.in_exit, align 4
  %193 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone256 = icmp ne i8* %193, null
  br i1 %cmp.do_exit.Clone256, label %if.then1.do_exit.Clone257, label %if.end2.do_exit.Clone258

if.then1.do_exit.Clone257:                        ; preds = %if.end.do_exit.Clone255
  %194 = load i8*, i8** @env, align 4
  call void @free(i8* %194) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone258

if.end2.do_exit.Clone258:                         ; preds = %if.then1.do_exit.Clone257, %if.end.do_exit.Clone255
  %195 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone259 = icmp ne i8** %195, null
  br i1 %cmp3.do_exit.Clone259, label %if.then4.do_exit.Clone260, label %if.end5.do_exit.Clone261

if.then4.do_exit.Clone260:                        ; preds = %if.end2.do_exit.Clone258
  %196 = load i8**, i8*** @args, align 4
  %197 = bitcast i8** %196 to i8*
  call void @free(i8* %197) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone261

if.end5.do_exit.Clone261:                         ; preds = %if.then4.do_exit.Clone260, %if.end2.do_exit.Clone258
  %198 = load i32, i32* %exitcode.addr.do_exit.Clone252, align 4
  call void @exit(i32 %198) #7
  unreachable

return.do_exit.Clone262:                          ; No predecessors!
  br label %if.end.abort_gzip.Clone244.Split

if.end.abort_gzip.Clone244.Split:                 ; preds = %return.do_exit.Clone262
  br label %if.end.read_error.Clone208.Split

if.end.read_error.Clone208.Split:                 ; preds = %if.end.abort_gzip.Clone244.Split
  br label %if.end7.fill_inbuf.Clone.fillbuf.Clone119.Split

if.end7.fill_inbuf.Clone.fillbuf.Clone119.Split:  ; preds = %if.end.read_error.Clone208.Split
  br label %if.end8.fill_inbuf.Clone.fillbuf.Clone120

if.end8.fill_inbuf.Clone.fillbuf.Clone120:        ; preds = %if.end7.fill_inbuf.Clone.fillbuf.Clone119.Split, %do.end.fill_inbuf.Clone.fillbuf.Clone114
  %199 = load i32, i32* @insize, align 4
  %200 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone.fillbuf.Clone121 = add i32 %200, %199
  store i32 %add9.fill_inbuf.Clone.fillbuf.Clone121, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %201 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone.fillbuf.Clone122 = zext i8 %201 to i32
  store i32 %conv.fill_inbuf.Clone.fillbuf.Clone122, i32* %retval.fill_inbuf.Clone.fillbuf.Clone98, align 4
  br label %return.fill_inbuf.Clone.fillbuf.Clone123

return.fill_inbuf.Clone.fillbuf.Clone123:         ; preds = %if.end8.fill_inbuf.Clone.fillbuf.Clone120, %if.then6.fill_inbuf.Clone.fillbuf.Clone118
  %202 = load i32, i32* %retval.fill_inbuf.Clone.fillbuf.Clone98, align 4
  store i32 %202, i32* %RetValuePtr.fillbuf.Clone82
  br label %cond.false.Split.fillbuf.Clone124

cond.false.Split.fillbuf.Clone124:                ; preds = %return.fill_inbuf.Clone.fillbuf.Clone123
  %RetValue.fillbuf.Clone125 = load i32, i32* %RetValuePtr.fillbuf.Clone82
  br label %cond.end.fillbuf.Clone126

cond.end.fillbuf.Clone126:                        ; preds = %cond.false.Split.fillbuf.Clone124, %cond.true.fillbuf.Clone92
  %cond.fillbuf.Clone127 = phi i32 [ %conv8.fillbuf.Clone95, %cond.true.fillbuf.Clone92 ], [ %RetValue.fillbuf.Clone125, %cond.false.Split.fillbuf.Clone124 ]
  store i32 %cond.fillbuf.Clone127, i32* @subbitbuf, align 4
  %203 = load i32, i32* @subbitbuf, align 4
  %cmp9.fillbuf.Clone128 = icmp eq i32 %203, -1
  br i1 %cmp9.fillbuf.Clone128, label %if.then.fillbuf.Clone129, label %if.end.fillbuf.Clone130

if.then.fillbuf.Clone129:                         ; preds = %cond.end.fillbuf.Clone126
  store i32 0, i32* @subbitbuf, align 4
  br label %if.end.fillbuf.Clone130

if.end.fillbuf.Clone130:                          ; preds = %if.then.fillbuf.Clone129, %cond.end.fillbuf.Clone126
  store i32 8, i32* @bitcount, align 4
  br label %while.cond.fillbuf.Clone83

while.end.fillbuf.Clone131:                       ; preds = %while.cond.fillbuf.Clone83
  %204 = load i32, i32* @subbitbuf, align 4
  %205 = load i32, i32* %n.addr.fillbuf.Clone78, align 4
  %206 = load i32, i32* @bitcount, align 4
  %sub11.fillbuf.Clone132 = sub nsw i32 %206, %205
  store i32 %sub11.fillbuf.Clone132, i32* @bitcount, align 4
  %shr.fillbuf.Clone133 = lshr i32 %204, %sub11.fillbuf.Clone132
  %207 = load i16, i16* @bitbuf, align 2
  %conv12.fillbuf.Clone134 = zext i16 %207 to i32
  %or13.fillbuf.Clone135 = or i32 %conv12.fillbuf.Clone134, %shr.fillbuf.Clone133
  %conv14.fillbuf.Clone136 = trunc i32 %or13.fillbuf.Clone135 to i16
  store i16 %conv14.fillbuf.Clone136, i16* @bitbuf, align 2
  br label %entry.getbits.Clone.Split

entry.getbits.Clone.Split:                        ; preds = %while.end.fillbuf.Clone131
  %208 = load i32, i32* %x.getbits.Clone, align 4
  store i32 %208, i32* %RetValuePtr
  br label %if.then28.Split

if.then28.Split:                                  ; preds = %entry.getbits.Clone.Split
  %RetValue = load i32, i32* %RetValuePtr
  store i32 %RetValue, i32* %c, align 4
  br label %while.cond30

while.cond30:                                     ; preds = %while.body33, %if.then28.Split
  %209 = load i32, i32* %c, align 4
  %dec = add nsw i32 %209, -1
  store i32 %dec, i32* %c, align 4
  %cmp31 = icmp sge i32 %dec, 0
  br i1 %cmp31, label %while.body33, label %while.end36

while.body33:                                     ; preds = %while.cond30
  %210 = load i32, i32* %i, align 4
  %inc34 = add nsw i32 %210, 1
  store i32 %inc34, i32* %i, align 4
  %arrayidx35 = getelementptr inbounds [19 x i8], [19 x i8]* @pt_len, i32 0, i32 %210
  store i8 0, i8* %arrayidx35, align 1
  br label %while.cond30

while.end36:                                      ; preds = %while.cond30
  br label %if.end37

if.end37:                                         ; preds = %while.end36, %cond.end.Split
  br label %while.cond

while.end38:                                      ; preds = %while.cond
  br label %while.cond39

while.cond39:                                     ; preds = %while.body42, %while.end38
  %211 = load i32, i32* %i, align 4
  %212 = load i32, i32* %nn.addr, align 4
  %cmp40 = icmp slt i32 %211, %212
  br i1 %cmp40, label %while.body42, label %while.end45

while.body42:                                     ; preds = %while.cond39
  %213 = load i32, i32* %i, align 4
  %inc43 = add nsw i32 %213, 1
  store i32 %inc43, i32* %i, align 4
  %arrayidx44 = getelementptr inbounds [19 x i8], [19 x i8]* @pt_len, i32 0, i32 %213
  store i8 0, i8* %arrayidx44, align 1
  br label %while.cond39

while.end45:                                      ; preds = %while.cond39
  %214 = load i32, i32* %nn.addr, align 4
  call void @make_table(i32 %214, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @pt_len, i32 0, i32 0), i32 8, i16* getelementptr inbounds ([256 x i16], [256 x i16]* @pt_table, i32 0, i32 0))
  br label %if.end46

if.end46:                                         ; preds = %while.end45, %for.end9
  ret void
}

; Function Attrs: noinline optnone sspstrong
define internal void @read_c_len() #1 {
entry:
  %i = alloca i32, align 4
  %c = alloca i32, align 4
  %n = alloca i32, align 4
  %mask = alloca i32, align 4
  %RetValuePtr23 = alloca i32, align 4
  br label %entry.getbits.Clone17

entry.getbits.Clone17:                            ; preds = %entry
  %n.addr.getbits.Clone18 = alloca i32, align 4
  %x.getbits.Clone19 = alloca i32, align 4
  store i32 9, i32* %n.addr.getbits.Clone18, align 4
  %0 = load i16, i16* @bitbuf, align 2
  %conv.getbits.Clone20 = zext i16 %0 to i32
  %1 = load i32, i32* %n.addr.getbits.Clone18, align 4
  %sub.getbits.Clone21 = sub i32 16, %1
  %shr.getbits.Clone22 = ashr i32 %conv.getbits.Clone20, %sub.getbits.Clone21
  store i32 %shr.getbits.Clone22, i32* %x.getbits.Clone19, align 4
  %2 = load i32, i32* %n.addr.getbits.Clone18, align 4
  br label %entry.fillbuf.Clone

entry.fillbuf.Clone:                              ; preds = %entry.getbits.Clone17
  %n.addr.fillbuf.Clone = alloca i32, align 4
  store i32 %2, i32* %n.addr.fillbuf.Clone, align 4
  %3 = load i32, i32* %n.addr.fillbuf.Clone, align 4
  %4 = load i16, i16* @bitbuf, align 2
  %conv.fillbuf.Clone = zext i16 %4 to i32
  %shl.fillbuf.Clone = shl i32 %conv.fillbuf.Clone, %3
  %conv1.fillbuf.Clone = trunc i32 %shl.fillbuf.Clone to i16
  store i16 %conv1.fillbuf.Clone, i16* @bitbuf, align 2
  %RetValuePtr.fillbuf.Clone = alloca i32, align 4
  br label %while.cond.fillbuf.Clone

while.cond.fillbuf.Clone:                         ; preds = %if.end.fillbuf.Clone, %entry.fillbuf.Clone
  %5 = load i32, i32* %n.addr.fillbuf.Clone, align 4
  %6 = load i32, i32* @bitcount, align 4
  %cmp.fillbuf.Clone = icmp sgt i32 %5, %6
  br i1 %cmp.fillbuf.Clone, label %while.body.fillbuf.Clone, label %while.end.fillbuf.Clone

while.body.fillbuf.Clone:                         ; preds = %while.cond.fillbuf.Clone
  %7 = load i32, i32* @subbitbuf, align 4
  %8 = load i32, i32* @bitcount, align 4
  %9 = load i32, i32* %n.addr.fillbuf.Clone, align 4
  %sub.fillbuf.Clone = sub nsw i32 %9, %8
  store i32 %sub.fillbuf.Clone, i32* %n.addr.fillbuf.Clone, align 4
  %shl3.fillbuf.Clone = shl i32 %7, %sub.fillbuf.Clone
  %10 = load i16, i16* @bitbuf, align 2
  %conv4.fillbuf.Clone = zext i16 %10 to i32
  %or.fillbuf.Clone = or i32 %conv4.fillbuf.Clone, %shl3.fillbuf.Clone
  %conv5.fillbuf.Clone = trunc i32 %or.fillbuf.Clone to i16
  store i16 %conv5.fillbuf.Clone, i16* @bitbuf, align 2
  %11 = load i32, i32* @inptr, align 4
  %12 = load i32, i32* @insize, align 4
  %cmp6.fillbuf.Clone = icmp ult i32 %11, %12
  br i1 %cmp6.fillbuf.Clone, label %cond.true.fillbuf.Clone, label %cond.false.fillbuf.Clone

cond.true.fillbuf.Clone:                          ; preds = %while.body.fillbuf.Clone
  %13 = load i32, i32* @inptr, align 4
  %inc.fillbuf.Clone = add i32 %13, 1
  store i32 %inc.fillbuf.Clone, i32* @inptr, align 4
  %arrayidx.fillbuf.Clone = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i32 0, i32 %13
  %14 = load i8, i8* %arrayidx.fillbuf.Clone, align 1
  %conv8.fillbuf.Clone = zext i8 %14 to i32
  br label %cond.end.fillbuf.Clone

cond.false.fillbuf.Clone:                         ; preds = %while.body.fillbuf.Clone
  br label %entry.fill_inbuf.Clone.fillbuf.Clone

entry.fill_inbuf.Clone.fillbuf.Clone:             ; preds = %cond.false.fillbuf.Clone
  %retval.fill_inbuf.Clone.fillbuf.Clone = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone.fillbuf.Clone = alloca i32, align 4
  %len.fill_inbuf.Clone.fillbuf.Clone = alloca i32, align 4
  store i32 1, i32* %eof_ok.addr.fill_inbuf.Clone.fillbuf.Clone, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone.fillbuf.Clone = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone.fillbuf.Clone, align 4
  br label %do.body.fill_inbuf.Clone.fillbuf.Clone

do.body.fill_inbuf.Clone.fillbuf.Clone:           ; preds = %do.cond.fill_inbuf.Clone.fillbuf.Clone, %entry.fill_inbuf.Clone.fillbuf.Clone
  %15 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone.fillbuf.Clone = sub i32 32768, %15
  %16 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone.fillbuf.Clone = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %16
  %17 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone.fillbuf.Clone = call i32 @spec_read(i32 %17, i8* %add.ptr.fill_inbuf.Clone.fillbuf.Clone, i32 %sub.fill_inbuf.Clone.fillbuf.Clone)
  store i32 %call1.fill_inbuf.Clone.fillbuf.Clone, i32* %len.fill_inbuf.Clone.fillbuf.Clone, align 4
  %18 = load i32, i32* %len.fill_inbuf.Clone.fillbuf.Clone, align 4
  %cmp.fill_inbuf.Clone.fillbuf.Clone = icmp eq i32 %18, 0
  br i1 %cmp.fill_inbuf.Clone.fillbuf.Clone, label %if.then.fill_inbuf.Clone.fillbuf.Clone, label %lor.lhs.false.fill_inbuf.Clone.fillbuf.Clone

lor.lhs.false.fill_inbuf.Clone.fillbuf.Clone:     ; preds = %do.body.fill_inbuf.Clone.fillbuf.Clone
  %19 = load i32, i32* %len.fill_inbuf.Clone.fillbuf.Clone, align 4
  %cmp2.fill_inbuf.Clone.fillbuf.Clone = icmp eq i32 %19, -1
  br i1 %cmp2.fill_inbuf.Clone.fillbuf.Clone, label %if.then.fill_inbuf.Clone.fillbuf.Clone, label %if.end.fill_inbuf.Clone.fillbuf.Clone

if.then.fill_inbuf.Clone.fillbuf.Clone:           ; preds = %lor.lhs.false.fill_inbuf.Clone.fillbuf.Clone, %do.body.fill_inbuf.Clone.fillbuf.Clone
  br label %do.end.fill_inbuf.Clone.fillbuf.Clone

if.end.fill_inbuf.Clone.fillbuf.Clone:            ; preds = %lor.lhs.false.fill_inbuf.Clone.fillbuf.Clone
  %20 = load i32, i32* %len.fill_inbuf.Clone.fillbuf.Clone, align 4
  %21 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone.fillbuf.Clone = add i32 %21, %20
  store i32 %add.fill_inbuf.Clone.fillbuf.Clone, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone.fillbuf.Clone

do.cond.fill_inbuf.Clone.fillbuf.Clone:           ; preds = %if.end.fill_inbuf.Clone.fillbuf.Clone
  %22 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone.fillbuf.Clone = icmp ult i32 %22, 32768
  br i1 %cmp3.fill_inbuf.Clone.fillbuf.Clone, label %do.body.fill_inbuf.Clone.fillbuf.Clone, label %do.end.fill_inbuf.Clone.fillbuf.Clone

do.end.fill_inbuf.Clone.fillbuf.Clone:            ; preds = %do.cond.fill_inbuf.Clone.fillbuf.Clone, %if.then.fill_inbuf.Clone.fillbuf.Clone
  %23 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone.fillbuf.Clone = icmp eq i32 %23, 0
  br i1 %cmp4.fill_inbuf.Clone.fillbuf.Clone, label %if.then5.fill_inbuf.Clone.fillbuf.Clone, label %if.end8.fill_inbuf.Clone.fillbuf.Clone

if.then5.fill_inbuf.Clone.fillbuf.Clone:          ; preds = %do.end.fill_inbuf.Clone.fillbuf.Clone
  %24 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone.fillbuf.Clone, align 4
  %tobool.fill_inbuf.Clone.fillbuf.Clone = icmp ne i32 %24, 0
  br i1 %tobool.fill_inbuf.Clone.fillbuf.Clone, label %if.then6.fill_inbuf.Clone.fillbuf.Clone, label %if.end7.fill_inbuf.Clone.fillbuf.Clone

if.then6.fill_inbuf.Clone.fillbuf.Clone:          ; preds = %if.then5.fill_inbuf.Clone.fillbuf.Clone
  store i32 -1, i32* %retval.fill_inbuf.Clone.fillbuf.Clone, align 4
  br label %return.fill_inbuf.Clone.fillbuf.Clone

if.end7.fill_inbuf.Clone.fillbuf.Clone:           ; preds = %if.then5.fill_inbuf.Clone.fillbuf.Clone
  br label %entry.read_error.Clone301

entry.read_error.Clone301:                        ; preds = %if.end7.fill_inbuf.Clone.fillbuf.Clone
  %25 = load i8*, i8** @progname, align 4
  %call.read_error.Clone302 = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone303 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone302, i32 2
  %call1.read_error.Clone304 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone303, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %25)
  %call2.read_error.Clone305 = call i32* @_errno()
  %26 = load i32, i32* %call2.read_error.Clone305, align 4
  %cmp.read_error.Clone306 = icmp ne i32 %26, 0
  br i1 %cmp.read_error.Clone306, label %if.then.read_error.Clone307, label %if.else.read_error.Clone308

if.then.read_error.Clone307:                      ; preds = %entry.read_error.Clone301
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone312

if.else.read_error.Clone308:                      ; preds = %entry.read_error.Clone301
  %call3.read_error.Clone309 = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone310 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone309, i32 2
  %call5.read_error.Clone311 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone310, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone312

if.end.read_error.Clone312:                       ; preds = %if.else.read_error.Clone308, %if.then.read_error.Clone307
  br label %entry.abort_gzip.Clone

entry.abort_gzip.Clone:                           ; preds = %if.end.read_error.Clone312
  %27 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone = icmp ne i32 %27, 0
  br i1 %tobool.abort_gzip.Clone, label %if.then.abort_gzip.Clone, label %if.end.abort_gzip.Clone

if.then.abort_gzip.Clone:                         ; preds = %entry.abort_gzip.Clone
  %28 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %28)
  %call1.abort_gzip.Clone = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone

if.end.abort_gzip.Clone:                          ; preds = %if.then.abort_gzip.Clone, %entry.abort_gzip.Clone
  br label %entry.do_exit.Clone373

entry.do_exit.Clone373:                           ; preds = %if.end.abort_gzip.Clone
  %exitcode.addr.do_exit.Clone374 = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone374, align 4
  %29 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone375 = icmp ne i32 %29, 0
  br i1 %tobool.do_exit.Clone375, label %if.then.do_exit.Clone376, label %if.end.do_exit.Clone377

if.then.do_exit.Clone376:                         ; preds = %entry.do_exit.Clone373
  %30 = load i32, i32* %exitcode.addr.do_exit.Clone374, align 4
  call void @exit(i32 %30) #7
  unreachable

if.end.do_exit.Clone377:                          ; preds = %entry.do_exit.Clone373
  store i32 1, i32* @do_exit.in_exit, align 4
  %31 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone378 = icmp ne i8* %31, null
  br i1 %cmp.do_exit.Clone378, label %if.then1.do_exit.Clone379, label %if.end2.do_exit.Clone380

if.then1.do_exit.Clone379:                        ; preds = %if.end.do_exit.Clone377
  %32 = load i8*, i8** @env, align 4
  call void @free(i8* %32) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone380

if.end2.do_exit.Clone380:                         ; preds = %if.then1.do_exit.Clone379, %if.end.do_exit.Clone377
  %33 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone381 = icmp ne i8** %33, null
  br i1 %cmp3.do_exit.Clone381, label %if.then4.do_exit.Clone382, label %if.end5.do_exit.Clone383

if.then4.do_exit.Clone382:                        ; preds = %if.end2.do_exit.Clone380
  %34 = load i8**, i8*** @args, align 4
  %35 = bitcast i8** %34 to i8*
  call void @free(i8* %35) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone383

if.end5.do_exit.Clone383:                         ; preds = %if.then4.do_exit.Clone382, %if.end2.do_exit.Clone380
  %36 = load i32, i32* %exitcode.addr.do_exit.Clone374, align 4
  call void @exit(i32 %36) #7
  unreachable

return.do_exit.Clone384:                          ; No predecessors!
  br label %if.end.abort_gzip.Clone.Split

if.end.abort_gzip.Clone.Split:                    ; preds = %return.do_exit.Clone384
  br label %if.end.read_error.Clone312.Split

if.end.read_error.Clone312.Split:                 ; preds = %if.end.abort_gzip.Clone.Split
  br label %if.end7.fill_inbuf.Clone.fillbuf.Clone.Split

if.end7.fill_inbuf.Clone.fillbuf.Clone.Split:     ; preds = %if.end.read_error.Clone312.Split
  br label %if.end8.fill_inbuf.Clone.fillbuf.Clone

if.end8.fill_inbuf.Clone.fillbuf.Clone:           ; preds = %if.end7.fill_inbuf.Clone.fillbuf.Clone.Split, %do.end.fill_inbuf.Clone.fillbuf.Clone
  %37 = load i32, i32* @insize, align 4
  %38 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone.fillbuf.Clone = add i32 %38, %37
  store i32 %add9.fill_inbuf.Clone.fillbuf.Clone, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %39 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone.fillbuf.Clone = zext i8 %39 to i32
  store i32 %conv.fill_inbuf.Clone.fillbuf.Clone, i32* %retval.fill_inbuf.Clone.fillbuf.Clone, align 4
  br label %return.fill_inbuf.Clone.fillbuf.Clone

return.fill_inbuf.Clone.fillbuf.Clone:            ; preds = %if.end8.fill_inbuf.Clone.fillbuf.Clone, %if.then6.fill_inbuf.Clone.fillbuf.Clone
  %40 = load i32, i32* %retval.fill_inbuf.Clone.fillbuf.Clone, align 4
  store i32 %40, i32* %RetValuePtr.fillbuf.Clone
  br label %cond.false.Split.fillbuf.Clone

cond.false.Split.fillbuf.Clone:                   ; preds = %return.fill_inbuf.Clone.fillbuf.Clone
  %RetValue.fillbuf.Clone = load i32, i32* %RetValuePtr.fillbuf.Clone
  br label %cond.end.fillbuf.Clone

cond.end.fillbuf.Clone:                           ; preds = %cond.false.Split.fillbuf.Clone, %cond.true.fillbuf.Clone
  %cond.fillbuf.Clone = phi i32 [ %conv8.fillbuf.Clone, %cond.true.fillbuf.Clone ], [ %RetValue.fillbuf.Clone, %cond.false.Split.fillbuf.Clone ]
  store i32 %cond.fillbuf.Clone, i32* @subbitbuf, align 4
  %41 = load i32, i32* @subbitbuf, align 4
  %cmp9.fillbuf.Clone = icmp eq i32 %41, -1
  br i1 %cmp9.fillbuf.Clone, label %if.then.fillbuf.Clone, label %if.end.fillbuf.Clone

if.then.fillbuf.Clone:                            ; preds = %cond.end.fillbuf.Clone
  store i32 0, i32* @subbitbuf, align 4
  br label %if.end.fillbuf.Clone

if.end.fillbuf.Clone:                             ; preds = %if.then.fillbuf.Clone, %cond.end.fillbuf.Clone
  store i32 8, i32* @bitcount, align 4
  br label %while.cond.fillbuf.Clone

while.end.fillbuf.Clone:                          ; preds = %while.cond.fillbuf.Clone
  %42 = load i32, i32* @subbitbuf, align 4
  %43 = load i32, i32* %n.addr.fillbuf.Clone, align 4
  %44 = load i32, i32* @bitcount, align 4
  %sub11.fillbuf.Clone = sub nsw i32 %44, %43
  store i32 %sub11.fillbuf.Clone, i32* @bitcount, align 4
  %shr.fillbuf.Clone = lshr i32 %42, %sub11.fillbuf.Clone
  %45 = load i16, i16* @bitbuf, align 2
  %conv12.fillbuf.Clone = zext i16 %45 to i32
  %or13.fillbuf.Clone = or i32 %conv12.fillbuf.Clone, %shr.fillbuf.Clone
  %conv14.fillbuf.Clone = trunc i32 %or13.fillbuf.Clone to i16
  store i16 %conv14.fillbuf.Clone, i16* @bitbuf, align 2
  br label %entry.getbits.Clone17.Split

entry.getbits.Clone17.Split:                      ; preds = %while.end.fillbuf.Clone
  %46 = load i32, i32* %x.getbits.Clone19, align 4
  store i32 %46, i32* %RetValuePtr23
  br label %entry.Split

entry.Split:                                      ; preds = %entry.getbits.Clone17.Split
  %RetValue24 = load i32, i32* %RetValuePtr23
  store i32 %RetValue24, i32* %n, align 4
  %47 = load i32, i32* %n, align 4
  %cmp = icmp eq i32 %47, 0
  %RetValuePtr = alloca i32, align 4
  %RetValuePtr7 = alloca i32, align 4
  %RetValuePtr15 = alloca i32, align 4
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry.Split
  br label %entry.getbits.Clone9

entry.getbits.Clone9:                             ; preds = %if.then
  %n.addr.getbits.Clone10 = alloca i32, align 4
  %x.getbits.Clone11 = alloca i32, align 4
  store i32 9, i32* %n.addr.getbits.Clone10, align 4
  %48 = load i16, i16* @bitbuf, align 2
  %conv.getbits.Clone12 = zext i16 %48 to i32
  %49 = load i32, i32* %n.addr.getbits.Clone10, align 4
  %sub.getbits.Clone13 = sub i32 16, %49
  %shr.getbits.Clone14 = ashr i32 %conv.getbits.Clone12, %sub.getbits.Clone13
  store i32 %shr.getbits.Clone14, i32* %x.getbits.Clone11, align 4
  %50 = load i32, i32* %n.addr.getbits.Clone10, align 4
  br label %entry.fillbuf.Clone25

entry.fillbuf.Clone25:                            ; preds = %entry.getbits.Clone9
  %n.addr.fillbuf.Clone26 = alloca i32, align 4
  store i32 %50, i32* %n.addr.fillbuf.Clone26, align 4
  %51 = load i32, i32* %n.addr.fillbuf.Clone26, align 4
  %52 = load i16, i16* @bitbuf, align 2
  %conv.fillbuf.Clone27 = zext i16 %52 to i32
  %shl.fillbuf.Clone28 = shl i32 %conv.fillbuf.Clone27, %51
  %conv1.fillbuf.Clone29 = trunc i32 %shl.fillbuf.Clone28 to i16
  store i16 %conv1.fillbuf.Clone29, i16* @bitbuf, align 2
  %RetValuePtr.fillbuf.Clone30 = alloca i32, align 4
  br label %while.cond.fillbuf.Clone31

while.cond.fillbuf.Clone31:                       ; preds = %if.end.fillbuf.Clone78, %entry.fillbuf.Clone25
  %53 = load i32, i32* %n.addr.fillbuf.Clone26, align 4
  %54 = load i32, i32* @bitcount, align 4
  %cmp.fillbuf.Clone32 = icmp sgt i32 %53, %54
  br i1 %cmp.fillbuf.Clone32, label %while.body.fillbuf.Clone33, label %while.end.fillbuf.Clone79

while.body.fillbuf.Clone33:                       ; preds = %while.cond.fillbuf.Clone31
  %55 = load i32, i32* @subbitbuf, align 4
  %56 = load i32, i32* @bitcount, align 4
  %57 = load i32, i32* %n.addr.fillbuf.Clone26, align 4
  %sub.fillbuf.Clone34 = sub nsw i32 %57, %56
  store i32 %sub.fillbuf.Clone34, i32* %n.addr.fillbuf.Clone26, align 4
  %shl3.fillbuf.Clone35 = shl i32 %55, %sub.fillbuf.Clone34
  %58 = load i16, i16* @bitbuf, align 2
  %conv4.fillbuf.Clone36 = zext i16 %58 to i32
  %or.fillbuf.Clone37 = or i32 %conv4.fillbuf.Clone36, %shl3.fillbuf.Clone35
  %conv5.fillbuf.Clone38 = trunc i32 %or.fillbuf.Clone37 to i16
  store i16 %conv5.fillbuf.Clone38, i16* @bitbuf, align 2
  %59 = load i32, i32* @inptr, align 4
  %60 = load i32, i32* @insize, align 4
  %cmp6.fillbuf.Clone39 = icmp ult i32 %59, %60
  br i1 %cmp6.fillbuf.Clone39, label %cond.true.fillbuf.Clone40, label %cond.false.fillbuf.Clone44

cond.true.fillbuf.Clone40:                        ; preds = %while.body.fillbuf.Clone33
  %61 = load i32, i32* @inptr, align 4
  %inc.fillbuf.Clone41 = add i32 %61, 1
  store i32 %inc.fillbuf.Clone41, i32* @inptr, align 4
  %arrayidx.fillbuf.Clone42 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i32 0, i32 %61
  %62 = load i8, i8* %arrayidx.fillbuf.Clone42, align 1
  %conv8.fillbuf.Clone43 = zext i8 %62 to i32
  br label %cond.end.fillbuf.Clone74

cond.false.fillbuf.Clone44:                       ; preds = %while.body.fillbuf.Clone33
  br label %entry.fill_inbuf.Clone.fillbuf.Clone45

entry.fill_inbuf.Clone.fillbuf.Clone45:           ; preds = %cond.false.fillbuf.Clone44
  %retval.fill_inbuf.Clone.fillbuf.Clone46 = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone.fillbuf.Clone47 = alloca i32, align 4
  %len.fill_inbuf.Clone.fillbuf.Clone48 = alloca i32, align 4
  store i32 1, i32* %eof_ok.addr.fill_inbuf.Clone.fillbuf.Clone47, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone.fillbuf.Clone49 = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone.fillbuf.Clone49, align 4
  br label %do.body.fill_inbuf.Clone.fillbuf.Clone50

do.body.fill_inbuf.Clone.fillbuf.Clone50:         ; preds = %do.cond.fill_inbuf.Clone.fillbuf.Clone60, %entry.fill_inbuf.Clone.fillbuf.Clone45
  %63 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone.fillbuf.Clone51 = sub i32 32768, %63
  %64 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone.fillbuf.Clone52 = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %64
  %65 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone.fillbuf.Clone53 = call i32 @spec_read(i32 %65, i8* %add.ptr.fill_inbuf.Clone.fillbuf.Clone52, i32 %sub.fill_inbuf.Clone.fillbuf.Clone51)
  store i32 %call1.fill_inbuf.Clone.fillbuf.Clone53, i32* %len.fill_inbuf.Clone.fillbuf.Clone48, align 4
  %66 = load i32, i32* %len.fill_inbuf.Clone.fillbuf.Clone48, align 4
  %cmp.fill_inbuf.Clone.fillbuf.Clone54 = icmp eq i32 %66, 0
  br i1 %cmp.fill_inbuf.Clone.fillbuf.Clone54, label %if.then.fill_inbuf.Clone.fillbuf.Clone57, label %lor.lhs.false.fill_inbuf.Clone.fillbuf.Clone55

lor.lhs.false.fill_inbuf.Clone.fillbuf.Clone55:   ; preds = %do.body.fill_inbuf.Clone.fillbuf.Clone50
  %67 = load i32, i32* %len.fill_inbuf.Clone.fillbuf.Clone48, align 4
  %cmp2.fill_inbuf.Clone.fillbuf.Clone56 = icmp eq i32 %67, -1
  br i1 %cmp2.fill_inbuf.Clone.fillbuf.Clone56, label %if.then.fill_inbuf.Clone.fillbuf.Clone57, label %if.end.fill_inbuf.Clone.fillbuf.Clone58

if.then.fill_inbuf.Clone.fillbuf.Clone57:         ; preds = %lor.lhs.false.fill_inbuf.Clone.fillbuf.Clone55, %do.body.fill_inbuf.Clone.fillbuf.Clone50
  br label %do.end.fill_inbuf.Clone.fillbuf.Clone62

if.end.fill_inbuf.Clone.fillbuf.Clone58:          ; preds = %lor.lhs.false.fill_inbuf.Clone.fillbuf.Clone55
  %68 = load i32, i32* %len.fill_inbuf.Clone.fillbuf.Clone48, align 4
  %69 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone.fillbuf.Clone59 = add i32 %69, %68
  store i32 %add.fill_inbuf.Clone.fillbuf.Clone59, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone.fillbuf.Clone60

do.cond.fill_inbuf.Clone.fillbuf.Clone60:         ; preds = %if.end.fill_inbuf.Clone.fillbuf.Clone58
  %70 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone.fillbuf.Clone61 = icmp ult i32 %70, 32768
  br i1 %cmp3.fill_inbuf.Clone.fillbuf.Clone61, label %do.body.fill_inbuf.Clone.fillbuf.Clone50, label %do.end.fill_inbuf.Clone.fillbuf.Clone62

do.end.fill_inbuf.Clone.fillbuf.Clone62:          ; preds = %do.cond.fill_inbuf.Clone.fillbuf.Clone60, %if.then.fill_inbuf.Clone.fillbuf.Clone57
  %71 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone.fillbuf.Clone63 = icmp eq i32 %71, 0
  br i1 %cmp4.fill_inbuf.Clone.fillbuf.Clone63, label %if.then5.fill_inbuf.Clone.fillbuf.Clone64, label %if.end8.fill_inbuf.Clone.fillbuf.Clone68

if.then5.fill_inbuf.Clone.fillbuf.Clone64:        ; preds = %do.end.fill_inbuf.Clone.fillbuf.Clone62
  %72 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone.fillbuf.Clone47, align 4
  %tobool.fill_inbuf.Clone.fillbuf.Clone65 = icmp ne i32 %72, 0
  br i1 %tobool.fill_inbuf.Clone.fillbuf.Clone65, label %if.then6.fill_inbuf.Clone.fillbuf.Clone66, label %if.end7.fill_inbuf.Clone.fillbuf.Clone67

if.then6.fill_inbuf.Clone.fillbuf.Clone66:        ; preds = %if.then5.fill_inbuf.Clone.fillbuf.Clone64
  store i32 -1, i32* %retval.fill_inbuf.Clone.fillbuf.Clone46, align 4
  br label %return.fill_inbuf.Clone.fillbuf.Clone71

if.end7.fill_inbuf.Clone.fillbuf.Clone67:         ; preds = %if.then5.fill_inbuf.Clone.fillbuf.Clone64
  br label %entry.read_error.Clone289

entry.read_error.Clone289:                        ; preds = %if.end7.fill_inbuf.Clone.fillbuf.Clone67
  %73 = load i8*, i8** @progname, align 4
  %call.read_error.Clone290 = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone291 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone290, i32 2
  %call1.read_error.Clone292 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone291, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %73)
  %call2.read_error.Clone293 = call i32* @_errno()
  %74 = load i32, i32* %call2.read_error.Clone293, align 4
  %cmp.read_error.Clone294 = icmp ne i32 %74, 0
  br i1 %cmp.read_error.Clone294, label %if.then.read_error.Clone295, label %if.else.read_error.Clone296

if.then.read_error.Clone295:                      ; preds = %entry.read_error.Clone289
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone300

if.else.read_error.Clone296:                      ; preds = %entry.read_error.Clone289
  %call3.read_error.Clone297 = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone298 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone297, i32 2
  %call5.read_error.Clone299 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone298, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone300

if.end.read_error.Clone300:                       ; preds = %if.else.read_error.Clone296, %if.then.read_error.Clone295
  br label %entry.abort_gzip.Clone313

entry.abort_gzip.Clone313:                        ; preds = %if.end.read_error.Clone300
  %75 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone314 = icmp ne i32 %75, 0
  br i1 %tobool.abort_gzip.Clone314, label %if.then.abort_gzip.Clone315, label %if.end.abort_gzip.Clone318

if.then.abort_gzip.Clone315:                      ; preds = %entry.abort_gzip.Clone313
  %76 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone316 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %76)
  %call1.abort_gzip.Clone317 = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone318

if.end.abort_gzip.Clone318:                       ; preds = %if.then.abort_gzip.Clone315, %entry.abort_gzip.Clone313
  br label %entry.do_exit.Clone361

entry.do_exit.Clone361:                           ; preds = %if.end.abort_gzip.Clone318
  %exitcode.addr.do_exit.Clone362 = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone362, align 4
  %77 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone363 = icmp ne i32 %77, 0
  br i1 %tobool.do_exit.Clone363, label %if.then.do_exit.Clone364, label %if.end.do_exit.Clone365

if.then.do_exit.Clone364:                         ; preds = %entry.do_exit.Clone361
  %78 = load i32, i32* %exitcode.addr.do_exit.Clone362, align 4
  call void @exit(i32 %78) #7
  unreachable

if.end.do_exit.Clone365:                          ; preds = %entry.do_exit.Clone361
  store i32 1, i32* @do_exit.in_exit, align 4
  %79 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone366 = icmp ne i8* %79, null
  br i1 %cmp.do_exit.Clone366, label %if.then1.do_exit.Clone367, label %if.end2.do_exit.Clone368

if.then1.do_exit.Clone367:                        ; preds = %if.end.do_exit.Clone365
  %80 = load i8*, i8** @env, align 4
  call void @free(i8* %80) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone368

if.end2.do_exit.Clone368:                         ; preds = %if.then1.do_exit.Clone367, %if.end.do_exit.Clone365
  %81 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone369 = icmp ne i8** %81, null
  br i1 %cmp3.do_exit.Clone369, label %if.then4.do_exit.Clone370, label %if.end5.do_exit.Clone371

if.then4.do_exit.Clone370:                        ; preds = %if.end2.do_exit.Clone368
  %82 = load i8**, i8*** @args, align 4
  %83 = bitcast i8** %82 to i8*
  call void @free(i8* %83) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone371

if.end5.do_exit.Clone371:                         ; preds = %if.then4.do_exit.Clone370, %if.end2.do_exit.Clone368
  %84 = load i32, i32* %exitcode.addr.do_exit.Clone362, align 4
  call void @exit(i32 %84) #7
  unreachable

return.do_exit.Clone372:                          ; No predecessors!
  br label %if.end.abort_gzip.Clone318.Split

if.end.abort_gzip.Clone318.Split:                 ; preds = %return.do_exit.Clone372
  br label %if.end.read_error.Clone300.Split

if.end.read_error.Clone300.Split:                 ; preds = %if.end.abort_gzip.Clone318.Split
  br label %if.end7.fill_inbuf.Clone.fillbuf.Clone67.Split

if.end7.fill_inbuf.Clone.fillbuf.Clone67.Split:   ; preds = %if.end.read_error.Clone300.Split
  br label %if.end8.fill_inbuf.Clone.fillbuf.Clone68

if.end8.fill_inbuf.Clone.fillbuf.Clone68:         ; preds = %if.end7.fill_inbuf.Clone.fillbuf.Clone67.Split, %do.end.fill_inbuf.Clone.fillbuf.Clone62
  %85 = load i32, i32* @insize, align 4
  %86 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone.fillbuf.Clone69 = add i32 %86, %85
  store i32 %add9.fill_inbuf.Clone.fillbuf.Clone69, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %87 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone.fillbuf.Clone70 = zext i8 %87 to i32
  store i32 %conv.fill_inbuf.Clone.fillbuf.Clone70, i32* %retval.fill_inbuf.Clone.fillbuf.Clone46, align 4
  br label %return.fill_inbuf.Clone.fillbuf.Clone71

return.fill_inbuf.Clone.fillbuf.Clone71:          ; preds = %if.end8.fill_inbuf.Clone.fillbuf.Clone68, %if.then6.fill_inbuf.Clone.fillbuf.Clone66
  %88 = load i32, i32* %retval.fill_inbuf.Clone.fillbuf.Clone46, align 4
  store i32 %88, i32* %RetValuePtr.fillbuf.Clone30
  br label %cond.false.Split.fillbuf.Clone72

cond.false.Split.fillbuf.Clone72:                 ; preds = %return.fill_inbuf.Clone.fillbuf.Clone71
  %RetValue.fillbuf.Clone73 = load i32, i32* %RetValuePtr.fillbuf.Clone30
  br label %cond.end.fillbuf.Clone74

cond.end.fillbuf.Clone74:                         ; preds = %cond.false.Split.fillbuf.Clone72, %cond.true.fillbuf.Clone40
  %cond.fillbuf.Clone75 = phi i32 [ %conv8.fillbuf.Clone43, %cond.true.fillbuf.Clone40 ], [ %RetValue.fillbuf.Clone73, %cond.false.Split.fillbuf.Clone72 ]
  store i32 %cond.fillbuf.Clone75, i32* @subbitbuf, align 4
  %89 = load i32, i32* @subbitbuf, align 4
  %cmp9.fillbuf.Clone76 = icmp eq i32 %89, -1
  br i1 %cmp9.fillbuf.Clone76, label %if.then.fillbuf.Clone77, label %if.end.fillbuf.Clone78

if.then.fillbuf.Clone77:                          ; preds = %cond.end.fillbuf.Clone74
  store i32 0, i32* @subbitbuf, align 4
  br label %if.end.fillbuf.Clone78

if.end.fillbuf.Clone78:                           ; preds = %if.then.fillbuf.Clone77, %cond.end.fillbuf.Clone74
  store i32 8, i32* @bitcount, align 4
  br label %while.cond.fillbuf.Clone31

while.end.fillbuf.Clone79:                        ; preds = %while.cond.fillbuf.Clone31
  %90 = load i32, i32* @subbitbuf, align 4
  %91 = load i32, i32* %n.addr.fillbuf.Clone26, align 4
  %92 = load i32, i32* @bitcount, align 4
  %sub11.fillbuf.Clone80 = sub nsw i32 %92, %91
  store i32 %sub11.fillbuf.Clone80, i32* @bitcount, align 4
  %shr.fillbuf.Clone81 = lshr i32 %90, %sub11.fillbuf.Clone80
  %93 = load i16, i16* @bitbuf, align 2
  %conv12.fillbuf.Clone82 = zext i16 %93 to i32
  %or13.fillbuf.Clone83 = or i32 %conv12.fillbuf.Clone82, %shr.fillbuf.Clone81
  %conv14.fillbuf.Clone84 = trunc i32 %or13.fillbuf.Clone83 to i16
  store i16 %conv14.fillbuf.Clone84, i16* @bitbuf, align 2
  br label %entry.getbits.Clone9.Split

entry.getbits.Clone9.Split:                       ; preds = %while.end.fillbuf.Clone79
  %94 = load i32, i32* %x.getbits.Clone11, align 4
  store i32 %94, i32* %RetValuePtr15
  br label %if.then.Split

if.then.Split:                                    ; preds = %entry.getbits.Clone9.Split
  %RetValue16 = load i32, i32* %RetValuePtr15
  store i32 %RetValue16, i32* %c, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.Split
  %95 = load i32, i32* %i, align 4
  %cmp2 = icmp slt i32 %95, 510
  br i1 %cmp2, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %96 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i32 0, i32 %96
  store i8 0, i8* %arrayidx, align 1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %97 = load i32, i32* %i, align 4
  %inc = add nsw i32 %97, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4
  br label %for.cond3

for.cond3:                                        ; preds = %for.inc7, %for.end
  %98 = load i32, i32* %i, align 4
  %cmp4 = icmp slt i32 %98, 4096
  br i1 %cmp4, label %for.body5, label %for.end9

for.body5:                                        ; preds = %for.cond3
  %99 = load i32, i32* %c, align 4
  %conv = trunc i32 %99 to i16
  %100 = load i32, i32* %i, align 4
  %arrayidx6 = getelementptr inbounds [0 x i16], [0 x i16]* bitcast ([32768 x i16]* @d_buf to [0 x i16]*), i32 0, i32 %100
  store i16 %conv, i16* %arrayidx6, align 2
  br label %for.inc7

for.inc7:                                         ; preds = %for.body5
  %101 = load i32, i32* %i, align 4
  %inc8 = add nsw i32 %101, 1
  store i32 %inc8, i32* %i, align 4
  br label %for.cond3

for.end9:                                         ; preds = %for.cond3
  br label %if.end66

if.else:                                          ; preds = %entry.Split
  store i32 0, i32* %i, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end57, %if.else
  %102 = load i32, i32* %i, align 4
  %103 = load i32, i32* %n, align 4
  %cmp10 = icmp slt i32 %102, %103
  br i1 %cmp10, label %while.body, label %while.end58

while.body:                                       ; preds = %while.cond
  %104 = load i16, i16* @bitbuf, align 2
  %conv12 = zext i16 %104 to i32
  %shr = ashr i32 %conv12, 8
  %arrayidx13 = getelementptr inbounds [256 x i16], [256 x i16]* @pt_table, i32 0, i32 %shr
  %105 = load i16, i16* %arrayidx13, align 2
  %conv14 = zext i16 %105 to i32
  store i32 %conv14, i32* %c, align 4
  %106 = load i32, i32* %c, align 4
  %cmp15 = icmp sge i32 %106, 19
  br i1 %cmp15, label %if.then17, label %if.end28

if.then17:                                        ; preds = %while.body
  store i32 128, i32* %mask, align 4
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then17
  %107 = load i16, i16* @bitbuf, align 2
  %conv18 = zext i16 %107 to i32
  %108 = load i32, i32* %mask, align 4
  %and = and i32 %conv18, %108
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then19, label %if.else22

if.then19:                                        ; preds = %do.body
  %109 = load i32, i32* %c, align 4
  %arrayidx20 = getelementptr inbounds i16, i16* getelementptr inbounds ([65536 x i16], [65536 x i16]* @prev, i32 0, i32 32768), i32 %109
  %110 = load i16, i16* %arrayidx20, align 2
  %conv21 = zext i16 %110 to i32
  store i32 %conv21, i32* %c, align 4
  br label %if.end

if.else22:                                        ; preds = %do.body
  %111 = load i32, i32* %c, align 4
  %arrayidx23 = getelementptr inbounds [0 x i16], [0 x i16]* bitcast ([65536 x i16]* @prev to [0 x i16]*), i32 0, i32 %111
  %112 = load i16, i16* %arrayidx23, align 2
  %conv24 = zext i16 %112 to i32
  store i32 %conv24, i32* %c, align 4
  br label %if.end

if.end:                                           ; preds = %if.else22, %if.then19
  %113 = load i32, i32* %mask, align 4
  %shr25 = lshr i32 %113, 1
  store i32 %shr25, i32* %mask, align 4
  br label %do.cond

do.cond:                                          ; preds = %if.end
  %114 = load i32, i32* %c, align 4
  %cmp26 = icmp sge i32 %114, 19
  br i1 %cmp26, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end28

if.end28:                                         ; preds = %do.end, %while.body
  %115 = load i32, i32* %c, align 4
  %arrayidx29 = getelementptr inbounds [19 x i8], [19 x i8]* @pt_len, i32 0, i32 %115
  %116 = load i8, i8* %arrayidx29, align 1
  %conv30 = zext i8 %116 to i32
  br label %entry.fillbuf.Clone205

entry.fillbuf.Clone205:                           ; preds = %if.end28
  %n.addr.fillbuf.Clone206 = alloca i32, align 4
  store i32 %conv30, i32* %n.addr.fillbuf.Clone206, align 4
  %117 = load i32, i32* %n.addr.fillbuf.Clone206, align 4
  %118 = load i16, i16* @bitbuf, align 2
  %conv.fillbuf.Clone207 = zext i16 %118 to i32
  %shl.fillbuf.Clone208 = shl i32 %conv.fillbuf.Clone207, %117
  %conv1.fillbuf.Clone209 = trunc i32 %shl.fillbuf.Clone208 to i16
  store i16 %conv1.fillbuf.Clone209, i16* @bitbuf, align 2
  %RetValuePtr.fillbuf.Clone210 = alloca i32, align 4
  br label %while.cond.fillbuf.Clone211

while.cond.fillbuf.Clone211:                      ; preds = %if.end.fillbuf.Clone258, %entry.fillbuf.Clone205
  %119 = load i32, i32* %n.addr.fillbuf.Clone206, align 4
  %120 = load i32, i32* @bitcount, align 4
  %cmp.fillbuf.Clone212 = icmp sgt i32 %119, %120
  br i1 %cmp.fillbuf.Clone212, label %while.body.fillbuf.Clone213, label %while.end.fillbuf.Clone259

while.body.fillbuf.Clone213:                      ; preds = %while.cond.fillbuf.Clone211
  %121 = load i32, i32* @subbitbuf, align 4
  %122 = load i32, i32* @bitcount, align 4
  %123 = load i32, i32* %n.addr.fillbuf.Clone206, align 4
  %sub.fillbuf.Clone214 = sub nsw i32 %123, %122
  store i32 %sub.fillbuf.Clone214, i32* %n.addr.fillbuf.Clone206, align 4
  %shl3.fillbuf.Clone215 = shl i32 %121, %sub.fillbuf.Clone214
  %124 = load i16, i16* @bitbuf, align 2
  %conv4.fillbuf.Clone216 = zext i16 %124 to i32
  %or.fillbuf.Clone217 = or i32 %conv4.fillbuf.Clone216, %shl3.fillbuf.Clone215
  %conv5.fillbuf.Clone218 = trunc i32 %or.fillbuf.Clone217 to i16
  store i16 %conv5.fillbuf.Clone218, i16* @bitbuf, align 2
  %125 = load i32, i32* @inptr, align 4
  %126 = load i32, i32* @insize, align 4
  %cmp6.fillbuf.Clone219 = icmp ult i32 %125, %126
  br i1 %cmp6.fillbuf.Clone219, label %cond.true.fillbuf.Clone220, label %cond.false.fillbuf.Clone224

cond.true.fillbuf.Clone220:                       ; preds = %while.body.fillbuf.Clone213
  %127 = load i32, i32* @inptr, align 4
  %inc.fillbuf.Clone221 = add i32 %127, 1
  store i32 %inc.fillbuf.Clone221, i32* @inptr, align 4
  %arrayidx.fillbuf.Clone222 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i32 0, i32 %127
  %128 = load i8, i8* %arrayidx.fillbuf.Clone222, align 1
  %conv8.fillbuf.Clone223 = zext i8 %128 to i32
  br label %cond.end.fillbuf.Clone254

cond.false.fillbuf.Clone224:                      ; preds = %while.body.fillbuf.Clone213
  br label %entry.fill_inbuf.Clone.fillbuf.Clone225

entry.fill_inbuf.Clone.fillbuf.Clone225:          ; preds = %cond.false.fillbuf.Clone224
  %retval.fill_inbuf.Clone.fillbuf.Clone226 = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone.fillbuf.Clone227 = alloca i32, align 4
  %len.fill_inbuf.Clone.fillbuf.Clone228 = alloca i32, align 4
  store i32 1, i32* %eof_ok.addr.fill_inbuf.Clone.fillbuf.Clone227, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone.fillbuf.Clone229 = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone.fillbuf.Clone229, align 4
  br label %do.body.fill_inbuf.Clone.fillbuf.Clone230

do.body.fill_inbuf.Clone.fillbuf.Clone230:        ; preds = %do.cond.fill_inbuf.Clone.fillbuf.Clone240, %entry.fill_inbuf.Clone.fillbuf.Clone225
  %129 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone.fillbuf.Clone231 = sub i32 32768, %129
  %130 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone.fillbuf.Clone232 = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %130
  %131 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone.fillbuf.Clone233 = call i32 @spec_read(i32 %131, i8* %add.ptr.fill_inbuf.Clone.fillbuf.Clone232, i32 %sub.fill_inbuf.Clone.fillbuf.Clone231)
  store i32 %call1.fill_inbuf.Clone.fillbuf.Clone233, i32* %len.fill_inbuf.Clone.fillbuf.Clone228, align 4
  %132 = load i32, i32* %len.fill_inbuf.Clone.fillbuf.Clone228, align 4
  %cmp.fill_inbuf.Clone.fillbuf.Clone234 = icmp eq i32 %132, 0
  br i1 %cmp.fill_inbuf.Clone.fillbuf.Clone234, label %if.then.fill_inbuf.Clone.fillbuf.Clone237, label %lor.lhs.false.fill_inbuf.Clone.fillbuf.Clone235

lor.lhs.false.fill_inbuf.Clone.fillbuf.Clone235:  ; preds = %do.body.fill_inbuf.Clone.fillbuf.Clone230
  %133 = load i32, i32* %len.fill_inbuf.Clone.fillbuf.Clone228, align 4
  %cmp2.fill_inbuf.Clone.fillbuf.Clone236 = icmp eq i32 %133, -1
  br i1 %cmp2.fill_inbuf.Clone.fillbuf.Clone236, label %if.then.fill_inbuf.Clone.fillbuf.Clone237, label %if.end.fill_inbuf.Clone.fillbuf.Clone238

if.then.fill_inbuf.Clone.fillbuf.Clone237:        ; preds = %lor.lhs.false.fill_inbuf.Clone.fillbuf.Clone235, %do.body.fill_inbuf.Clone.fillbuf.Clone230
  br label %do.end.fill_inbuf.Clone.fillbuf.Clone242

if.end.fill_inbuf.Clone.fillbuf.Clone238:         ; preds = %lor.lhs.false.fill_inbuf.Clone.fillbuf.Clone235
  %134 = load i32, i32* %len.fill_inbuf.Clone.fillbuf.Clone228, align 4
  %135 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone.fillbuf.Clone239 = add i32 %135, %134
  store i32 %add.fill_inbuf.Clone.fillbuf.Clone239, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone.fillbuf.Clone240

do.cond.fill_inbuf.Clone.fillbuf.Clone240:        ; preds = %if.end.fill_inbuf.Clone.fillbuf.Clone238
  %136 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone.fillbuf.Clone241 = icmp ult i32 %136, 32768
  br i1 %cmp3.fill_inbuf.Clone.fillbuf.Clone241, label %do.body.fill_inbuf.Clone.fillbuf.Clone230, label %do.end.fill_inbuf.Clone.fillbuf.Clone242

do.end.fill_inbuf.Clone.fillbuf.Clone242:         ; preds = %do.cond.fill_inbuf.Clone.fillbuf.Clone240, %if.then.fill_inbuf.Clone.fillbuf.Clone237
  %137 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone.fillbuf.Clone243 = icmp eq i32 %137, 0
  br i1 %cmp4.fill_inbuf.Clone.fillbuf.Clone243, label %if.then5.fill_inbuf.Clone.fillbuf.Clone244, label %if.end8.fill_inbuf.Clone.fillbuf.Clone248

if.then5.fill_inbuf.Clone.fillbuf.Clone244:       ; preds = %do.end.fill_inbuf.Clone.fillbuf.Clone242
  %138 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone.fillbuf.Clone227, align 4
  %tobool.fill_inbuf.Clone.fillbuf.Clone245 = icmp ne i32 %138, 0
  br i1 %tobool.fill_inbuf.Clone.fillbuf.Clone245, label %if.then6.fill_inbuf.Clone.fillbuf.Clone246, label %if.end7.fill_inbuf.Clone.fillbuf.Clone247

if.then6.fill_inbuf.Clone.fillbuf.Clone246:       ; preds = %if.then5.fill_inbuf.Clone.fillbuf.Clone244
  store i32 -1, i32* %retval.fill_inbuf.Clone.fillbuf.Clone226, align 4
  br label %return.fill_inbuf.Clone.fillbuf.Clone251

if.end7.fill_inbuf.Clone.fillbuf.Clone247:        ; preds = %if.then5.fill_inbuf.Clone.fillbuf.Clone244
  br label %entry.read_error.Clone

entry.read_error.Clone:                           ; preds = %if.end7.fill_inbuf.Clone.fillbuf.Clone247
  %139 = load i8*, i8** @progname, align 4
  %call.read_error.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone, i32 2
  %call1.read_error.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %139)
  %call2.read_error.Clone = call i32* @_errno()
  %140 = load i32, i32* %call2.read_error.Clone, align 4
  %cmp.read_error.Clone = icmp ne i32 %140, 0
  br i1 %cmp.read_error.Clone, label %if.then.read_error.Clone, label %if.else.read_error.Clone

if.then.read_error.Clone:                         ; preds = %entry.read_error.Clone
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone

if.else.read_error.Clone:                         ; preds = %entry.read_error.Clone
  %call3.read_error.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone, i32 2
  %call5.read_error.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone

if.end.read_error.Clone:                          ; preds = %if.else.read_error.Clone, %if.then.read_error.Clone
  br label %entry.abort_gzip.Clone331

entry.abort_gzip.Clone331:                        ; preds = %if.end.read_error.Clone
  %141 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone332 = icmp ne i32 %141, 0
  br i1 %tobool.abort_gzip.Clone332, label %if.then.abort_gzip.Clone333, label %if.end.abort_gzip.Clone336

if.then.abort_gzip.Clone333:                      ; preds = %entry.abort_gzip.Clone331
  %142 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone334 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %142)
  %call1.abort_gzip.Clone335 = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone336

if.end.abort_gzip.Clone336:                       ; preds = %if.then.abort_gzip.Clone333, %entry.abort_gzip.Clone331
  br label %entry.do_exit.Clone

entry.do_exit.Clone:                              ; preds = %if.end.abort_gzip.Clone336
  %exitcode.addr.do_exit.Clone = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone, align 4
  %143 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone = icmp ne i32 %143, 0
  br i1 %tobool.do_exit.Clone, label %if.then.do_exit.Clone, label %if.end.do_exit.Clone

if.then.do_exit.Clone:                            ; preds = %entry.do_exit.Clone
  %144 = load i32, i32* %exitcode.addr.do_exit.Clone, align 4
  call void @exit(i32 %144) #7
  unreachable

if.end.do_exit.Clone:                             ; preds = %entry.do_exit.Clone
  store i32 1, i32* @do_exit.in_exit, align 4
  %145 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone = icmp ne i8* %145, null
  br i1 %cmp.do_exit.Clone, label %if.then1.do_exit.Clone, label %if.end2.do_exit.Clone

if.then1.do_exit.Clone:                           ; preds = %if.end.do_exit.Clone
  %146 = load i8*, i8** @env, align 4
  call void @free(i8* %146) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone

if.end2.do_exit.Clone:                            ; preds = %if.then1.do_exit.Clone, %if.end.do_exit.Clone
  %147 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone = icmp ne i8** %147, null
  br i1 %cmp3.do_exit.Clone, label %if.then4.do_exit.Clone, label %if.end5.do_exit.Clone

if.then4.do_exit.Clone:                           ; preds = %if.end2.do_exit.Clone
  %148 = load i8**, i8*** @args, align 4
  %149 = bitcast i8** %148 to i8*
  call void @free(i8* %149) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone

if.end5.do_exit.Clone:                            ; preds = %if.then4.do_exit.Clone, %if.end2.do_exit.Clone
  %150 = load i32, i32* %exitcode.addr.do_exit.Clone, align 4
  call void @exit(i32 %150) #7
  unreachable

return.do_exit.Clone:                             ; No predecessors!
  br label %if.end.abort_gzip.Clone336.Split

if.end.abort_gzip.Clone336.Split:                 ; preds = %return.do_exit.Clone
  br label %if.end.read_error.Clone.Split

if.end.read_error.Clone.Split:                    ; preds = %if.end.abort_gzip.Clone336.Split
  br label %if.end7.fill_inbuf.Clone.fillbuf.Clone247.Split

if.end7.fill_inbuf.Clone.fillbuf.Clone247.Split:  ; preds = %if.end.read_error.Clone.Split
  br label %if.end8.fill_inbuf.Clone.fillbuf.Clone248

if.end8.fill_inbuf.Clone.fillbuf.Clone248:        ; preds = %if.end7.fill_inbuf.Clone.fillbuf.Clone247.Split, %do.end.fill_inbuf.Clone.fillbuf.Clone242
  %151 = load i32, i32* @insize, align 4
  %152 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone.fillbuf.Clone249 = add i32 %152, %151
  store i32 %add9.fill_inbuf.Clone.fillbuf.Clone249, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %153 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone.fillbuf.Clone250 = zext i8 %153 to i32
  store i32 %conv.fill_inbuf.Clone.fillbuf.Clone250, i32* %retval.fill_inbuf.Clone.fillbuf.Clone226, align 4
  br label %return.fill_inbuf.Clone.fillbuf.Clone251

return.fill_inbuf.Clone.fillbuf.Clone251:         ; preds = %if.end8.fill_inbuf.Clone.fillbuf.Clone248, %if.then6.fill_inbuf.Clone.fillbuf.Clone246
  %154 = load i32, i32* %retval.fill_inbuf.Clone.fillbuf.Clone226, align 4
  store i32 %154, i32* %RetValuePtr.fillbuf.Clone210
  br label %cond.false.Split.fillbuf.Clone252

cond.false.Split.fillbuf.Clone252:                ; preds = %return.fill_inbuf.Clone.fillbuf.Clone251
  %RetValue.fillbuf.Clone253 = load i32, i32* %RetValuePtr.fillbuf.Clone210
  br label %cond.end.fillbuf.Clone254

cond.end.fillbuf.Clone254:                        ; preds = %cond.false.Split.fillbuf.Clone252, %cond.true.fillbuf.Clone220
  %cond.fillbuf.Clone255 = phi i32 [ %conv8.fillbuf.Clone223, %cond.true.fillbuf.Clone220 ], [ %RetValue.fillbuf.Clone253, %cond.false.Split.fillbuf.Clone252 ]
  store i32 %cond.fillbuf.Clone255, i32* @subbitbuf, align 4
  %155 = load i32, i32* @subbitbuf, align 4
  %cmp9.fillbuf.Clone256 = icmp eq i32 %155, -1
  br i1 %cmp9.fillbuf.Clone256, label %if.then.fillbuf.Clone257, label %if.end.fillbuf.Clone258

if.then.fillbuf.Clone257:                         ; preds = %cond.end.fillbuf.Clone254
  store i32 0, i32* @subbitbuf, align 4
  br label %if.end.fillbuf.Clone258

if.end.fillbuf.Clone258:                          ; preds = %if.then.fillbuf.Clone257, %cond.end.fillbuf.Clone254
  store i32 8, i32* @bitcount, align 4
  br label %while.cond.fillbuf.Clone211

while.end.fillbuf.Clone259:                       ; preds = %while.cond.fillbuf.Clone211
  %156 = load i32, i32* @subbitbuf, align 4
  %157 = load i32, i32* %n.addr.fillbuf.Clone206, align 4
  %158 = load i32, i32* @bitcount, align 4
  %sub11.fillbuf.Clone260 = sub nsw i32 %158, %157
  store i32 %sub11.fillbuf.Clone260, i32* @bitcount, align 4
  %shr.fillbuf.Clone261 = lshr i32 %156, %sub11.fillbuf.Clone260
  %159 = load i16, i16* @bitbuf, align 2
  %conv12.fillbuf.Clone262 = zext i16 %159 to i32
  %or13.fillbuf.Clone263 = or i32 %conv12.fillbuf.Clone262, %shr.fillbuf.Clone261
  %conv14.fillbuf.Clone264 = trunc i32 %or13.fillbuf.Clone263 to i16
  store i16 %conv14.fillbuf.Clone264, i16* @bitbuf, align 2
  br label %if.end28.Split

if.end28.Split:                                   ; preds = %while.end.fillbuf.Clone259
  %160 = load i32, i32* %c, align 4
  %cmp31 = icmp sle i32 %160, 2
  br i1 %cmp31, label %if.then33, label %if.else53

if.then33:                                        ; preds = %if.end28.Split
  %161 = load i32, i32* %c, align 4
  %cmp34 = icmp eq i32 %161, 0
  br i1 %cmp34, label %if.then36, label %if.else37

if.then36:                                        ; preds = %if.then33
  store i32 1, i32* %c, align 4
  br label %if.end46

if.else37:                                        ; preds = %if.then33
  %162 = load i32, i32* %c, align 4
  %cmp38 = icmp eq i32 %162, 1
  br i1 %cmp38, label %if.then40, label %if.else42

if.then40:                                        ; preds = %if.else37
  br label %entry.getbits.Clone1

entry.getbits.Clone1:                             ; preds = %if.then40
  %n.addr.getbits.Clone2 = alloca i32, align 4
  %x.getbits.Clone3 = alloca i32, align 4
  store i32 4, i32* %n.addr.getbits.Clone2, align 4
  %163 = load i16, i16* @bitbuf, align 2
  %conv.getbits.Clone4 = zext i16 %163 to i32
  %164 = load i32, i32* %n.addr.getbits.Clone2, align 4
  %sub.getbits.Clone5 = sub i32 16, %164
  %shr.getbits.Clone6 = ashr i32 %conv.getbits.Clone4, %sub.getbits.Clone5
  store i32 %shr.getbits.Clone6, i32* %x.getbits.Clone3, align 4
  %165 = load i32, i32* %n.addr.getbits.Clone2, align 4
  br label %entry.fillbuf.Clone85

entry.fillbuf.Clone85:                            ; preds = %entry.getbits.Clone1
  %n.addr.fillbuf.Clone86 = alloca i32, align 4
  store i32 %165, i32* %n.addr.fillbuf.Clone86, align 4
  %166 = load i32, i32* %n.addr.fillbuf.Clone86, align 4
  %167 = load i16, i16* @bitbuf, align 2
  %conv.fillbuf.Clone87 = zext i16 %167 to i32
  %shl.fillbuf.Clone88 = shl i32 %conv.fillbuf.Clone87, %166
  %conv1.fillbuf.Clone89 = trunc i32 %shl.fillbuf.Clone88 to i16
  store i16 %conv1.fillbuf.Clone89, i16* @bitbuf, align 2
  %RetValuePtr.fillbuf.Clone90 = alloca i32, align 4
  br label %while.cond.fillbuf.Clone91

while.cond.fillbuf.Clone91:                       ; preds = %if.end.fillbuf.Clone138, %entry.fillbuf.Clone85
  %168 = load i32, i32* %n.addr.fillbuf.Clone86, align 4
  %169 = load i32, i32* @bitcount, align 4
  %cmp.fillbuf.Clone92 = icmp sgt i32 %168, %169
  br i1 %cmp.fillbuf.Clone92, label %while.body.fillbuf.Clone93, label %while.end.fillbuf.Clone139

while.body.fillbuf.Clone93:                       ; preds = %while.cond.fillbuf.Clone91
  %170 = load i32, i32* @subbitbuf, align 4
  %171 = load i32, i32* @bitcount, align 4
  %172 = load i32, i32* %n.addr.fillbuf.Clone86, align 4
  %sub.fillbuf.Clone94 = sub nsw i32 %172, %171
  store i32 %sub.fillbuf.Clone94, i32* %n.addr.fillbuf.Clone86, align 4
  %shl3.fillbuf.Clone95 = shl i32 %170, %sub.fillbuf.Clone94
  %173 = load i16, i16* @bitbuf, align 2
  %conv4.fillbuf.Clone96 = zext i16 %173 to i32
  %or.fillbuf.Clone97 = or i32 %conv4.fillbuf.Clone96, %shl3.fillbuf.Clone95
  %conv5.fillbuf.Clone98 = trunc i32 %or.fillbuf.Clone97 to i16
  store i16 %conv5.fillbuf.Clone98, i16* @bitbuf, align 2
  %174 = load i32, i32* @inptr, align 4
  %175 = load i32, i32* @insize, align 4
  %cmp6.fillbuf.Clone99 = icmp ult i32 %174, %175
  br i1 %cmp6.fillbuf.Clone99, label %cond.true.fillbuf.Clone100, label %cond.false.fillbuf.Clone104

cond.true.fillbuf.Clone100:                       ; preds = %while.body.fillbuf.Clone93
  %176 = load i32, i32* @inptr, align 4
  %inc.fillbuf.Clone101 = add i32 %176, 1
  store i32 %inc.fillbuf.Clone101, i32* @inptr, align 4
  %arrayidx.fillbuf.Clone102 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i32 0, i32 %176
  %177 = load i8, i8* %arrayidx.fillbuf.Clone102, align 1
  %conv8.fillbuf.Clone103 = zext i8 %177 to i32
  br label %cond.end.fillbuf.Clone134

cond.false.fillbuf.Clone104:                      ; preds = %while.body.fillbuf.Clone93
  br label %entry.fill_inbuf.Clone.fillbuf.Clone105

entry.fill_inbuf.Clone.fillbuf.Clone105:          ; preds = %cond.false.fillbuf.Clone104
  %retval.fill_inbuf.Clone.fillbuf.Clone106 = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone.fillbuf.Clone107 = alloca i32, align 4
  %len.fill_inbuf.Clone.fillbuf.Clone108 = alloca i32, align 4
  store i32 1, i32* %eof_ok.addr.fill_inbuf.Clone.fillbuf.Clone107, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone.fillbuf.Clone109 = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone.fillbuf.Clone109, align 4
  br label %do.body.fill_inbuf.Clone.fillbuf.Clone110

do.body.fill_inbuf.Clone.fillbuf.Clone110:        ; preds = %do.cond.fill_inbuf.Clone.fillbuf.Clone120, %entry.fill_inbuf.Clone.fillbuf.Clone105
  %178 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone.fillbuf.Clone111 = sub i32 32768, %178
  %179 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone.fillbuf.Clone112 = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %179
  %180 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone.fillbuf.Clone113 = call i32 @spec_read(i32 %180, i8* %add.ptr.fill_inbuf.Clone.fillbuf.Clone112, i32 %sub.fill_inbuf.Clone.fillbuf.Clone111)
  store i32 %call1.fill_inbuf.Clone.fillbuf.Clone113, i32* %len.fill_inbuf.Clone.fillbuf.Clone108, align 4
  %181 = load i32, i32* %len.fill_inbuf.Clone.fillbuf.Clone108, align 4
  %cmp.fill_inbuf.Clone.fillbuf.Clone114 = icmp eq i32 %181, 0
  br i1 %cmp.fill_inbuf.Clone.fillbuf.Clone114, label %if.then.fill_inbuf.Clone.fillbuf.Clone117, label %lor.lhs.false.fill_inbuf.Clone.fillbuf.Clone115

lor.lhs.false.fill_inbuf.Clone.fillbuf.Clone115:  ; preds = %do.body.fill_inbuf.Clone.fillbuf.Clone110
  %182 = load i32, i32* %len.fill_inbuf.Clone.fillbuf.Clone108, align 4
  %cmp2.fill_inbuf.Clone.fillbuf.Clone116 = icmp eq i32 %182, -1
  br i1 %cmp2.fill_inbuf.Clone.fillbuf.Clone116, label %if.then.fill_inbuf.Clone.fillbuf.Clone117, label %if.end.fill_inbuf.Clone.fillbuf.Clone118

if.then.fill_inbuf.Clone.fillbuf.Clone117:        ; preds = %lor.lhs.false.fill_inbuf.Clone.fillbuf.Clone115, %do.body.fill_inbuf.Clone.fillbuf.Clone110
  br label %do.end.fill_inbuf.Clone.fillbuf.Clone122

if.end.fill_inbuf.Clone.fillbuf.Clone118:         ; preds = %lor.lhs.false.fill_inbuf.Clone.fillbuf.Clone115
  %183 = load i32, i32* %len.fill_inbuf.Clone.fillbuf.Clone108, align 4
  %184 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone.fillbuf.Clone119 = add i32 %184, %183
  store i32 %add.fill_inbuf.Clone.fillbuf.Clone119, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone.fillbuf.Clone120

do.cond.fill_inbuf.Clone.fillbuf.Clone120:        ; preds = %if.end.fill_inbuf.Clone.fillbuf.Clone118
  %185 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone.fillbuf.Clone121 = icmp ult i32 %185, 32768
  br i1 %cmp3.fill_inbuf.Clone.fillbuf.Clone121, label %do.body.fill_inbuf.Clone.fillbuf.Clone110, label %do.end.fill_inbuf.Clone.fillbuf.Clone122

do.end.fill_inbuf.Clone.fillbuf.Clone122:         ; preds = %do.cond.fill_inbuf.Clone.fillbuf.Clone120, %if.then.fill_inbuf.Clone.fillbuf.Clone117
  %186 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone.fillbuf.Clone123 = icmp eq i32 %186, 0
  br i1 %cmp4.fill_inbuf.Clone.fillbuf.Clone123, label %if.then5.fill_inbuf.Clone.fillbuf.Clone124, label %if.end8.fill_inbuf.Clone.fillbuf.Clone128

if.then5.fill_inbuf.Clone.fillbuf.Clone124:       ; preds = %do.end.fill_inbuf.Clone.fillbuf.Clone122
  %187 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone.fillbuf.Clone107, align 4
  %tobool.fill_inbuf.Clone.fillbuf.Clone125 = icmp ne i32 %187, 0
  br i1 %tobool.fill_inbuf.Clone.fillbuf.Clone125, label %if.then6.fill_inbuf.Clone.fillbuf.Clone126, label %if.end7.fill_inbuf.Clone.fillbuf.Clone127

if.then6.fill_inbuf.Clone.fillbuf.Clone126:       ; preds = %if.then5.fill_inbuf.Clone.fillbuf.Clone124
  store i32 -1, i32* %retval.fill_inbuf.Clone.fillbuf.Clone106, align 4
  br label %return.fill_inbuf.Clone.fillbuf.Clone131

if.end7.fill_inbuf.Clone.fillbuf.Clone127:        ; preds = %if.then5.fill_inbuf.Clone.fillbuf.Clone124
  br label %entry.read_error.Clone277

entry.read_error.Clone277:                        ; preds = %if.end7.fill_inbuf.Clone.fillbuf.Clone127
  %188 = load i8*, i8** @progname, align 4
  %call.read_error.Clone278 = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone279 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone278, i32 2
  %call1.read_error.Clone280 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone279, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %188)
  %call2.read_error.Clone281 = call i32* @_errno()
  %189 = load i32, i32* %call2.read_error.Clone281, align 4
  %cmp.read_error.Clone282 = icmp ne i32 %189, 0
  br i1 %cmp.read_error.Clone282, label %if.then.read_error.Clone283, label %if.else.read_error.Clone284

if.then.read_error.Clone283:                      ; preds = %entry.read_error.Clone277
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone288

if.else.read_error.Clone284:                      ; preds = %entry.read_error.Clone277
  %call3.read_error.Clone285 = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone286 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone285, i32 2
  %call5.read_error.Clone287 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone286, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone288

if.end.read_error.Clone288:                       ; preds = %if.else.read_error.Clone284, %if.then.read_error.Clone283
  br label %entry.abort_gzip.Clone319

entry.abort_gzip.Clone319:                        ; preds = %if.end.read_error.Clone288
  %190 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone320 = icmp ne i32 %190, 0
  br i1 %tobool.abort_gzip.Clone320, label %if.then.abort_gzip.Clone321, label %if.end.abort_gzip.Clone324

if.then.abort_gzip.Clone321:                      ; preds = %entry.abort_gzip.Clone319
  %191 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone322 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %191)
  %call1.abort_gzip.Clone323 = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone324

if.end.abort_gzip.Clone324:                       ; preds = %if.then.abort_gzip.Clone321, %entry.abort_gzip.Clone319
  br label %entry.do_exit.Clone349

entry.do_exit.Clone349:                           ; preds = %if.end.abort_gzip.Clone324
  %exitcode.addr.do_exit.Clone350 = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone350, align 4
  %192 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone351 = icmp ne i32 %192, 0
  br i1 %tobool.do_exit.Clone351, label %if.then.do_exit.Clone352, label %if.end.do_exit.Clone353

if.then.do_exit.Clone352:                         ; preds = %entry.do_exit.Clone349
  %193 = load i32, i32* %exitcode.addr.do_exit.Clone350, align 4
  call void @exit(i32 %193) #7
  unreachable

if.end.do_exit.Clone353:                          ; preds = %entry.do_exit.Clone349
  store i32 1, i32* @do_exit.in_exit, align 4
  %194 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone354 = icmp ne i8* %194, null
  br i1 %cmp.do_exit.Clone354, label %if.then1.do_exit.Clone355, label %if.end2.do_exit.Clone356

if.then1.do_exit.Clone355:                        ; preds = %if.end.do_exit.Clone353
  %195 = load i8*, i8** @env, align 4
  call void @free(i8* %195) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone356

if.end2.do_exit.Clone356:                         ; preds = %if.then1.do_exit.Clone355, %if.end.do_exit.Clone353
  %196 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone357 = icmp ne i8** %196, null
  br i1 %cmp3.do_exit.Clone357, label %if.then4.do_exit.Clone358, label %if.end5.do_exit.Clone359

if.then4.do_exit.Clone358:                        ; preds = %if.end2.do_exit.Clone356
  %197 = load i8**, i8*** @args, align 4
  %198 = bitcast i8** %197 to i8*
  call void @free(i8* %198) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone359

if.end5.do_exit.Clone359:                         ; preds = %if.then4.do_exit.Clone358, %if.end2.do_exit.Clone356
  %199 = load i32, i32* %exitcode.addr.do_exit.Clone350, align 4
  call void @exit(i32 %199) #7
  unreachable

return.do_exit.Clone360:                          ; No predecessors!
  br label %if.end.abort_gzip.Clone324.Split

if.end.abort_gzip.Clone324.Split:                 ; preds = %return.do_exit.Clone360
  br label %if.end.read_error.Clone288.Split

if.end.read_error.Clone288.Split:                 ; preds = %if.end.abort_gzip.Clone324.Split
  br label %if.end7.fill_inbuf.Clone.fillbuf.Clone127.Split

if.end7.fill_inbuf.Clone.fillbuf.Clone127.Split:  ; preds = %if.end.read_error.Clone288.Split
  br label %if.end8.fill_inbuf.Clone.fillbuf.Clone128

if.end8.fill_inbuf.Clone.fillbuf.Clone128:        ; preds = %if.end7.fill_inbuf.Clone.fillbuf.Clone127.Split, %do.end.fill_inbuf.Clone.fillbuf.Clone122
  %200 = load i32, i32* @insize, align 4
  %201 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone.fillbuf.Clone129 = add i32 %201, %200
  store i32 %add9.fill_inbuf.Clone.fillbuf.Clone129, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %202 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone.fillbuf.Clone130 = zext i8 %202 to i32
  store i32 %conv.fill_inbuf.Clone.fillbuf.Clone130, i32* %retval.fill_inbuf.Clone.fillbuf.Clone106, align 4
  br label %return.fill_inbuf.Clone.fillbuf.Clone131

return.fill_inbuf.Clone.fillbuf.Clone131:         ; preds = %if.end8.fill_inbuf.Clone.fillbuf.Clone128, %if.then6.fill_inbuf.Clone.fillbuf.Clone126
  %203 = load i32, i32* %retval.fill_inbuf.Clone.fillbuf.Clone106, align 4
  store i32 %203, i32* %RetValuePtr.fillbuf.Clone90
  br label %cond.false.Split.fillbuf.Clone132

cond.false.Split.fillbuf.Clone132:                ; preds = %return.fill_inbuf.Clone.fillbuf.Clone131
  %RetValue.fillbuf.Clone133 = load i32, i32* %RetValuePtr.fillbuf.Clone90
  br label %cond.end.fillbuf.Clone134

cond.end.fillbuf.Clone134:                        ; preds = %cond.false.Split.fillbuf.Clone132, %cond.true.fillbuf.Clone100
  %cond.fillbuf.Clone135 = phi i32 [ %conv8.fillbuf.Clone103, %cond.true.fillbuf.Clone100 ], [ %RetValue.fillbuf.Clone133, %cond.false.Split.fillbuf.Clone132 ]
  store i32 %cond.fillbuf.Clone135, i32* @subbitbuf, align 4
  %204 = load i32, i32* @subbitbuf, align 4
  %cmp9.fillbuf.Clone136 = icmp eq i32 %204, -1
  br i1 %cmp9.fillbuf.Clone136, label %if.then.fillbuf.Clone137, label %if.end.fillbuf.Clone138

if.then.fillbuf.Clone137:                         ; preds = %cond.end.fillbuf.Clone134
  store i32 0, i32* @subbitbuf, align 4
  br label %if.end.fillbuf.Clone138

if.end.fillbuf.Clone138:                          ; preds = %if.then.fillbuf.Clone137, %cond.end.fillbuf.Clone134
  store i32 8, i32* @bitcount, align 4
  br label %while.cond.fillbuf.Clone91

while.end.fillbuf.Clone139:                       ; preds = %while.cond.fillbuf.Clone91
  %205 = load i32, i32* @subbitbuf, align 4
  %206 = load i32, i32* %n.addr.fillbuf.Clone86, align 4
  %207 = load i32, i32* @bitcount, align 4
  %sub11.fillbuf.Clone140 = sub nsw i32 %207, %206
  store i32 %sub11.fillbuf.Clone140, i32* @bitcount, align 4
  %shr.fillbuf.Clone141 = lshr i32 %205, %sub11.fillbuf.Clone140
  %208 = load i16, i16* @bitbuf, align 2
  %conv12.fillbuf.Clone142 = zext i16 %208 to i32
  %or13.fillbuf.Clone143 = or i32 %conv12.fillbuf.Clone142, %shr.fillbuf.Clone141
  %conv14.fillbuf.Clone144 = trunc i32 %or13.fillbuf.Clone143 to i16
  store i16 %conv14.fillbuf.Clone144, i16* @bitbuf, align 2
  br label %entry.getbits.Clone1.Split

entry.getbits.Clone1.Split:                       ; preds = %while.end.fillbuf.Clone139
  %209 = load i32, i32* %x.getbits.Clone3, align 4
  store i32 %209, i32* %RetValuePtr7
  br label %if.then40.Split

if.then40.Split:                                  ; preds = %entry.getbits.Clone1.Split
  %RetValue8 = load i32, i32* %RetValuePtr7
  %add = add i32 %RetValue8, 3
  store i32 %add, i32* %c, align 4
  br label %if.end45

if.else42:                                        ; preds = %if.else37
  br label %entry.getbits.Clone

entry.getbits.Clone:                              ; preds = %if.else42
  %n.addr.getbits.Clone = alloca i32, align 4
  %x.getbits.Clone = alloca i32, align 4
  store i32 9, i32* %n.addr.getbits.Clone, align 4
  %210 = load i16, i16* @bitbuf, align 2
  %conv.getbits.Clone = zext i16 %210 to i32
  %211 = load i32, i32* %n.addr.getbits.Clone, align 4
  %sub.getbits.Clone = sub i32 16, %211
  %shr.getbits.Clone = ashr i32 %conv.getbits.Clone, %sub.getbits.Clone
  store i32 %shr.getbits.Clone, i32* %x.getbits.Clone, align 4
  %212 = load i32, i32* %n.addr.getbits.Clone, align 4
  br label %entry.fillbuf.Clone145

entry.fillbuf.Clone145:                           ; preds = %entry.getbits.Clone
  %n.addr.fillbuf.Clone146 = alloca i32, align 4
  store i32 %212, i32* %n.addr.fillbuf.Clone146, align 4
  %213 = load i32, i32* %n.addr.fillbuf.Clone146, align 4
  %214 = load i16, i16* @bitbuf, align 2
  %conv.fillbuf.Clone147 = zext i16 %214 to i32
  %shl.fillbuf.Clone148 = shl i32 %conv.fillbuf.Clone147, %213
  %conv1.fillbuf.Clone149 = trunc i32 %shl.fillbuf.Clone148 to i16
  store i16 %conv1.fillbuf.Clone149, i16* @bitbuf, align 2
  %RetValuePtr.fillbuf.Clone150 = alloca i32, align 4
  br label %while.cond.fillbuf.Clone151

while.cond.fillbuf.Clone151:                      ; preds = %if.end.fillbuf.Clone198, %entry.fillbuf.Clone145
  %215 = load i32, i32* %n.addr.fillbuf.Clone146, align 4
  %216 = load i32, i32* @bitcount, align 4
  %cmp.fillbuf.Clone152 = icmp sgt i32 %215, %216
  br i1 %cmp.fillbuf.Clone152, label %while.body.fillbuf.Clone153, label %while.end.fillbuf.Clone199

while.body.fillbuf.Clone153:                      ; preds = %while.cond.fillbuf.Clone151
  %217 = load i32, i32* @subbitbuf, align 4
  %218 = load i32, i32* @bitcount, align 4
  %219 = load i32, i32* %n.addr.fillbuf.Clone146, align 4
  %sub.fillbuf.Clone154 = sub nsw i32 %219, %218
  store i32 %sub.fillbuf.Clone154, i32* %n.addr.fillbuf.Clone146, align 4
  %shl3.fillbuf.Clone155 = shl i32 %217, %sub.fillbuf.Clone154
  %220 = load i16, i16* @bitbuf, align 2
  %conv4.fillbuf.Clone156 = zext i16 %220 to i32
  %or.fillbuf.Clone157 = or i32 %conv4.fillbuf.Clone156, %shl3.fillbuf.Clone155
  %conv5.fillbuf.Clone158 = trunc i32 %or.fillbuf.Clone157 to i16
  store i16 %conv5.fillbuf.Clone158, i16* @bitbuf, align 2
  %221 = load i32, i32* @inptr, align 4
  %222 = load i32, i32* @insize, align 4
  %cmp6.fillbuf.Clone159 = icmp ult i32 %221, %222
  br i1 %cmp6.fillbuf.Clone159, label %cond.true.fillbuf.Clone160, label %cond.false.fillbuf.Clone164

cond.true.fillbuf.Clone160:                       ; preds = %while.body.fillbuf.Clone153
  %223 = load i32, i32* @inptr, align 4
  %inc.fillbuf.Clone161 = add i32 %223, 1
  store i32 %inc.fillbuf.Clone161, i32* @inptr, align 4
  %arrayidx.fillbuf.Clone162 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i32 0, i32 %223
  %224 = load i8, i8* %arrayidx.fillbuf.Clone162, align 1
  %conv8.fillbuf.Clone163 = zext i8 %224 to i32
  br label %cond.end.fillbuf.Clone194

cond.false.fillbuf.Clone164:                      ; preds = %while.body.fillbuf.Clone153
  br label %entry.fill_inbuf.Clone.fillbuf.Clone165

entry.fill_inbuf.Clone.fillbuf.Clone165:          ; preds = %cond.false.fillbuf.Clone164
  %retval.fill_inbuf.Clone.fillbuf.Clone166 = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone.fillbuf.Clone167 = alloca i32, align 4
  %len.fill_inbuf.Clone.fillbuf.Clone168 = alloca i32, align 4
  store i32 1, i32* %eof_ok.addr.fill_inbuf.Clone.fillbuf.Clone167, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone.fillbuf.Clone169 = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone.fillbuf.Clone169, align 4
  br label %do.body.fill_inbuf.Clone.fillbuf.Clone170

do.body.fill_inbuf.Clone.fillbuf.Clone170:        ; preds = %do.cond.fill_inbuf.Clone.fillbuf.Clone180, %entry.fill_inbuf.Clone.fillbuf.Clone165
  %225 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone.fillbuf.Clone171 = sub i32 32768, %225
  %226 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone.fillbuf.Clone172 = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %226
  %227 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone.fillbuf.Clone173 = call i32 @spec_read(i32 %227, i8* %add.ptr.fill_inbuf.Clone.fillbuf.Clone172, i32 %sub.fill_inbuf.Clone.fillbuf.Clone171)
  store i32 %call1.fill_inbuf.Clone.fillbuf.Clone173, i32* %len.fill_inbuf.Clone.fillbuf.Clone168, align 4
  %228 = load i32, i32* %len.fill_inbuf.Clone.fillbuf.Clone168, align 4
  %cmp.fill_inbuf.Clone.fillbuf.Clone174 = icmp eq i32 %228, 0
  br i1 %cmp.fill_inbuf.Clone.fillbuf.Clone174, label %if.then.fill_inbuf.Clone.fillbuf.Clone177, label %lor.lhs.false.fill_inbuf.Clone.fillbuf.Clone175

lor.lhs.false.fill_inbuf.Clone.fillbuf.Clone175:  ; preds = %do.body.fill_inbuf.Clone.fillbuf.Clone170
  %229 = load i32, i32* %len.fill_inbuf.Clone.fillbuf.Clone168, align 4
  %cmp2.fill_inbuf.Clone.fillbuf.Clone176 = icmp eq i32 %229, -1
  br i1 %cmp2.fill_inbuf.Clone.fillbuf.Clone176, label %if.then.fill_inbuf.Clone.fillbuf.Clone177, label %if.end.fill_inbuf.Clone.fillbuf.Clone178

if.then.fill_inbuf.Clone.fillbuf.Clone177:        ; preds = %lor.lhs.false.fill_inbuf.Clone.fillbuf.Clone175, %do.body.fill_inbuf.Clone.fillbuf.Clone170
  br label %do.end.fill_inbuf.Clone.fillbuf.Clone182

if.end.fill_inbuf.Clone.fillbuf.Clone178:         ; preds = %lor.lhs.false.fill_inbuf.Clone.fillbuf.Clone175
  %230 = load i32, i32* %len.fill_inbuf.Clone.fillbuf.Clone168, align 4
  %231 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone.fillbuf.Clone179 = add i32 %231, %230
  store i32 %add.fill_inbuf.Clone.fillbuf.Clone179, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone.fillbuf.Clone180

do.cond.fill_inbuf.Clone.fillbuf.Clone180:        ; preds = %if.end.fill_inbuf.Clone.fillbuf.Clone178
  %232 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone.fillbuf.Clone181 = icmp ult i32 %232, 32768
  br i1 %cmp3.fill_inbuf.Clone.fillbuf.Clone181, label %do.body.fill_inbuf.Clone.fillbuf.Clone170, label %do.end.fill_inbuf.Clone.fillbuf.Clone182

do.end.fill_inbuf.Clone.fillbuf.Clone182:         ; preds = %do.cond.fill_inbuf.Clone.fillbuf.Clone180, %if.then.fill_inbuf.Clone.fillbuf.Clone177
  %233 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone.fillbuf.Clone183 = icmp eq i32 %233, 0
  br i1 %cmp4.fill_inbuf.Clone.fillbuf.Clone183, label %if.then5.fill_inbuf.Clone.fillbuf.Clone184, label %if.end8.fill_inbuf.Clone.fillbuf.Clone188

if.then5.fill_inbuf.Clone.fillbuf.Clone184:       ; preds = %do.end.fill_inbuf.Clone.fillbuf.Clone182
  %234 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone.fillbuf.Clone167, align 4
  %tobool.fill_inbuf.Clone.fillbuf.Clone185 = icmp ne i32 %234, 0
  br i1 %tobool.fill_inbuf.Clone.fillbuf.Clone185, label %if.then6.fill_inbuf.Clone.fillbuf.Clone186, label %if.end7.fill_inbuf.Clone.fillbuf.Clone187

if.then6.fill_inbuf.Clone.fillbuf.Clone186:       ; preds = %if.then5.fill_inbuf.Clone.fillbuf.Clone184
  store i32 -1, i32* %retval.fill_inbuf.Clone.fillbuf.Clone166, align 4
  br label %return.fill_inbuf.Clone.fillbuf.Clone191

if.end7.fill_inbuf.Clone.fillbuf.Clone187:        ; preds = %if.then5.fill_inbuf.Clone.fillbuf.Clone184
  br label %entry.read_error.Clone265

entry.read_error.Clone265:                        ; preds = %if.end7.fill_inbuf.Clone.fillbuf.Clone187
  %235 = load i8*, i8** @progname, align 4
  %call.read_error.Clone266 = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone267 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone266, i32 2
  %call1.read_error.Clone268 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone267, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %235)
  %call2.read_error.Clone269 = call i32* @_errno()
  %236 = load i32, i32* %call2.read_error.Clone269, align 4
  %cmp.read_error.Clone270 = icmp ne i32 %236, 0
  br i1 %cmp.read_error.Clone270, label %if.then.read_error.Clone271, label %if.else.read_error.Clone272

if.then.read_error.Clone271:                      ; preds = %entry.read_error.Clone265
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone276

if.else.read_error.Clone272:                      ; preds = %entry.read_error.Clone265
  %call3.read_error.Clone273 = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone274 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone273, i32 2
  %call5.read_error.Clone275 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone274, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone276

if.end.read_error.Clone276:                       ; preds = %if.else.read_error.Clone272, %if.then.read_error.Clone271
  br label %entry.abort_gzip.Clone325

entry.abort_gzip.Clone325:                        ; preds = %if.end.read_error.Clone276
  %237 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone326 = icmp ne i32 %237, 0
  br i1 %tobool.abort_gzip.Clone326, label %if.then.abort_gzip.Clone327, label %if.end.abort_gzip.Clone330

if.then.abort_gzip.Clone327:                      ; preds = %entry.abort_gzip.Clone325
  %238 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone328 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %238)
  %call1.abort_gzip.Clone329 = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone330

if.end.abort_gzip.Clone330:                       ; preds = %if.then.abort_gzip.Clone327, %entry.abort_gzip.Clone325
  br label %entry.do_exit.Clone337

entry.do_exit.Clone337:                           ; preds = %if.end.abort_gzip.Clone330
  %exitcode.addr.do_exit.Clone338 = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone338, align 4
  %239 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone339 = icmp ne i32 %239, 0
  br i1 %tobool.do_exit.Clone339, label %if.then.do_exit.Clone340, label %if.end.do_exit.Clone341

if.then.do_exit.Clone340:                         ; preds = %entry.do_exit.Clone337
  %240 = load i32, i32* %exitcode.addr.do_exit.Clone338, align 4
  call void @exit(i32 %240) #7
  unreachable

if.end.do_exit.Clone341:                          ; preds = %entry.do_exit.Clone337
  store i32 1, i32* @do_exit.in_exit, align 4
  %241 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone342 = icmp ne i8* %241, null
  br i1 %cmp.do_exit.Clone342, label %if.then1.do_exit.Clone343, label %if.end2.do_exit.Clone344

if.then1.do_exit.Clone343:                        ; preds = %if.end.do_exit.Clone341
  %242 = load i8*, i8** @env, align 4
  call void @free(i8* %242) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone344

if.end2.do_exit.Clone344:                         ; preds = %if.then1.do_exit.Clone343, %if.end.do_exit.Clone341
  %243 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone345 = icmp ne i8** %243, null
  br i1 %cmp3.do_exit.Clone345, label %if.then4.do_exit.Clone346, label %if.end5.do_exit.Clone347

if.then4.do_exit.Clone346:                        ; preds = %if.end2.do_exit.Clone344
  %244 = load i8**, i8*** @args, align 4
  %245 = bitcast i8** %244 to i8*
  call void @free(i8* %245) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone347

if.end5.do_exit.Clone347:                         ; preds = %if.then4.do_exit.Clone346, %if.end2.do_exit.Clone344
  %246 = load i32, i32* %exitcode.addr.do_exit.Clone338, align 4
  call void @exit(i32 %246) #7
  unreachable

return.do_exit.Clone348:                          ; No predecessors!
  br label %if.end.abort_gzip.Clone330.Split

if.end.abort_gzip.Clone330.Split:                 ; preds = %return.do_exit.Clone348
  br label %if.end.read_error.Clone276.Split

if.end.read_error.Clone276.Split:                 ; preds = %if.end.abort_gzip.Clone330.Split
  br label %if.end7.fill_inbuf.Clone.fillbuf.Clone187.Split

if.end7.fill_inbuf.Clone.fillbuf.Clone187.Split:  ; preds = %if.end.read_error.Clone276.Split
  br label %if.end8.fill_inbuf.Clone.fillbuf.Clone188

if.end8.fill_inbuf.Clone.fillbuf.Clone188:        ; preds = %if.end7.fill_inbuf.Clone.fillbuf.Clone187.Split, %do.end.fill_inbuf.Clone.fillbuf.Clone182
  %247 = load i32, i32* @insize, align 4
  %248 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone.fillbuf.Clone189 = add i32 %248, %247
  store i32 %add9.fill_inbuf.Clone.fillbuf.Clone189, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %249 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone.fillbuf.Clone190 = zext i8 %249 to i32
  store i32 %conv.fill_inbuf.Clone.fillbuf.Clone190, i32* %retval.fill_inbuf.Clone.fillbuf.Clone166, align 4
  br label %return.fill_inbuf.Clone.fillbuf.Clone191

return.fill_inbuf.Clone.fillbuf.Clone191:         ; preds = %if.end8.fill_inbuf.Clone.fillbuf.Clone188, %if.then6.fill_inbuf.Clone.fillbuf.Clone186
  %250 = load i32, i32* %retval.fill_inbuf.Clone.fillbuf.Clone166, align 4
  store i32 %250, i32* %RetValuePtr.fillbuf.Clone150
  br label %cond.false.Split.fillbuf.Clone192

cond.false.Split.fillbuf.Clone192:                ; preds = %return.fill_inbuf.Clone.fillbuf.Clone191
  %RetValue.fillbuf.Clone193 = load i32, i32* %RetValuePtr.fillbuf.Clone150
  br label %cond.end.fillbuf.Clone194

cond.end.fillbuf.Clone194:                        ; preds = %cond.false.Split.fillbuf.Clone192, %cond.true.fillbuf.Clone160
  %cond.fillbuf.Clone195 = phi i32 [ %conv8.fillbuf.Clone163, %cond.true.fillbuf.Clone160 ], [ %RetValue.fillbuf.Clone193, %cond.false.Split.fillbuf.Clone192 ]
  store i32 %cond.fillbuf.Clone195, i32* @subbitbuf, align 4
  %251 = load i32, i32* @subbitbuf, align 4
  %cmp9.fillbuf.Clone196 = icmp eq i32 %251, -1
  br i1 %cmp9.fillbuf.Clone196, label %if.then.fillbuf.Clone197, label %if.end.fillbuf.Clone198

if.then.fillbuf.Clone197:                         ; preds = %cond.end.fillbuf.Clone194
  store i32 0, i32* @subbitbuf, align 4
  br label %if.end.fillbuf.Clone198

if.end.fillbuf.Clone198:                          ; preds = %if.then.fillbuf.Clone197, %cond.end.fillbuf.Clone194
  store i32 8, i32* @bitcount, align 4
  br label %while.cond.fillbuf.Clone151

while.end.fillbuf.Clone199:                       ; preds = %while.cond.fillbuf.Clone151
  %252 = load i32, i32* @subbitbuf, align 4
  %253 = load i32, i32* %n.addr.fillbuf.Clone146, align 4
  %254 = load i32, i32* @bitcount, align 4
  %sub11.fillbuf.Clone200 = sub nsw i32 %254, %253
  store i32 %sub11.fillbuf.Clone200, i32* @bitcount, align 4
  %shr.fillbuf.Clone201 = lshr i32 %252, %sub11.fillbuf.Clone200
  %255 = load i16, i16* @bitbuf, align 2
  %conv12.fillbuf.Clone202 = zext i16 %255 to i32
  %or13.fillbuf.Clone203 = or i32 %conv12.fillbuf.Clone202, %shr.fillbuf.Clone201
  %conv14.fillbuf.Clone204 = trunc i32 %or13.fillbuf.Clone203 to i16
  store i16 %conv14.fillbuf.Clone204, i16* @bitbuf, align 2
  br label %entry.getbits.Clone.Split

entry.getbits.Clone.Split:                        ; preds = %while.end.fillbuf.Clone199
  %256 = load i32, i32* %x.getbits.Clone, align 4
  store i32 %256, i32* %RetValuePtr
  br label %if.else42.Split

if.else42.Split:                                  ; preds = %entry.getbits.Clone.Split
  %RetValue = load i32, i32* %RetValuePtr
  %add44 = add i32 %RetValue, 20
  store i32 %add44, i32* %c, align 4
  br label %if.end45

if.end45:                                         ; preds = %if.else42.Split, %if.then40.Split
  br label %if.end46

if.end46:                                         ; preds = %if.end45, %if.then36
  br label %while.cond47

while.cond47:                                     ; preds = %while.body50, %if.end46
  %257 = load i32, i32* %c, align 4
  %dec = add nsw i32 %257, -1
  store i32 %dec, i32* %c, align 4
  %cmp48 = icmp sge i32 %dec, 0
  br i1 %cmp48, label %while.body50, label %while.end

while.body50:                                     ; preds = %while.cond47
  %258 = load i32, i32* %i, align 4
  %inc51 = add nsw i32 %258, 1
  store i32 %inc51, i32* %i, align 4
  %arrayidx52 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i32 0, i32 %258
  store i8 0, i8* %arrayidx52, align 1
  br label %while.cond47

while.end:                                        ; preds = %while.cond47
  br label %if.end57

if.else53:                                        ; preds = %if.end28.Split
  %259 = load i32, i32* %c, align 4
  %sub = sub nsw i32 %259, 2
  %conv54 = trunc i32 %sub to i8
  %260 = load i32, i32* %i, align 4
  %inc55 = add nsw i32 %260, 1
  store i32 %inc55, i32* %i, align 4
  %arrayidx56 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i32 0, i32 %260
  store i8 %conv54, i8* %arrayidx56, align 1
  br label %if.end57

if.end57:                                         ; preds = %if.else53, %while.end
  br label %while.cond

while.end58:                                      ; preds = %while.cond
  br label %CallOutFuncBB

CallOutFuncBB:                                    ; preds = %while.end58
  call void @while.cond59.OutLineFunc(i32* %i)
  %261 = getelementptr inbounds %Struct.RetValue.35, %Struct.RetValue.35* @Struct.RetValue.45, i32 0, i32 0
  %262 = load i32*, i32** %261, align 4
  %263 = load i32, i32* %262, align 4
  store i32 %263, i32* %i
  br label %if.end66

if.end66:                                         ; preds = %CallOutFuncBB, %for.end9
  ret void
}

; Function Attrs: noinline optnone sspstrong
define internal void @make_table(i32 %nchar, i8* %bitlen, i32 %tablebits, i16* %table) #1 {
entry:
  %table.addr = alloca i16*, align 4
  %tablebits.addr = alloca i32, align 4
  %bitlen.addr = alloca i8*, align 4
  %nchar.addr = alloca i32, align 4
  %count = alloca [17 x i16], align 2
  %weight = alloca [17 x i16], align 2
  %start = alloca [18 x i16], align 2
  %p = alloca i16*, align 4
  %i = alloca i32, align 4
  %k = alloca i32, align 4
  %len = alloca i32, align 4
  %ch = alloca i32, align 4
  %jutbits = alloca i32, align 4
  %avail = alloca i32, align 4
  %nextcode = alloca i32, align 4
  %mask = alloca i32, align 4
  store i16* %table, i16** %table.addr, align 4
  store i32 %tablebits, i32* %tablebits.addr, align 4
  store i8* %bitlen, i8** %bitlen.addr, align 4
  store i32 %nchar, i32* %nchar.addr, align 4
  store i32 1, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %cmp = icmp ule i32 %0, 16
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [17 x i16], [17 x i16]* %count, i32 0, i32 %1
  store i16 0, i16* %arrayidx, align 2
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %2 = load i32, i32* %i, align 4
  %inc = add i32 %2, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc7, %for.end
  %3 = load i32, i32* %i, align 4
  %4 = load i32, i32* %nchar.addr, align 4
  %cmp2 = icmp ult i32 %3, %4
  br i1 %cmp2, label %for.body3, label %for.end9

for.body3:                                        ; preds = %for.cond1
  %5 = load i8*, i8** %bitlen.addr, align 4
  %6 = load i32, i32* %i, align 4
  %arrayidx4 = getelementptr inbounds i8, i8* %5, i32 %6
  %7 = load i8, i8* %arrayidx4, align 1
  %idxprom = zext i8 %7 to i32
  %arrayidx5 = getelementptr inbounds [17 x i16], [17 x i16]* %count, i32 0, i32 %idxprom
  %8 = load i16, i16* %arrayidx5, align 2
  %inc6 = add i16 %8, 1
  store i16 %inc6, i16* %arrayidx5, align 2
  br label %for.inc7

for.inc7:                                         ; preds = %for.body3
  %9 = load i32, i32* %i, align 4
  %inc8 = add i32 %9, 1
  store i32 %inc8, i32* %i, align 4
  br label %for.cond1

for.end9:                                         ; preds = %for.cond1
  %arrayidx10 = getelementptr inbounds [18 x i16], [18 x i16]* %start, i32 0, i32 1
  store i16 0, i16* %arrayidx10, align 2
  store i32 1, i32* %i, align 4
  br label %CallOutFuncBB

CallOutFuncBB:                                    ; preds = %for.end9
  call void @for.cond11.OutLineFunc(i32* %i, [18 x i16]* %start, [17 x i16]* %count)
  %10 = getelementptr inbounds %Struct.RetValue.36, %Struct.RetValue.36* @Struct.RetValue.46, i32 0, i32 0
  %11 = load i32*, i32** %10, align 4
  %12 = load i32, i32* %11, align 4
  store i32 %12, i32* %i
  br label %new

new:                                              ; preds = %CallOutFuncBB
  %arrayidx23 = getelementptr inbounds [18 x i16], [18 x i16]* %start, i32 0, i32 17
  %13 = load i16, i16* %arrayidx23, align 2
  %conv24 = zext i16 %13 to i32
  %and = and i32 %conv24, 65535
  %cmp25 = icmp ne i32 %and, 0
  br i1 %cmp25, label %if.then, label %if.end

if.then:                                          ; preds = %new
  br label %entry.error.Clone

entry.error.Clone:                                ; preds = %if.then
  %m.addr.error.Clone = alloca i8*, align 4
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"??_C@_0L@CBPOJGJN@Bad?5table?6?$AA@", i32 0, i32 0), i8** %m.addr.error.Clone, align 4
  %14 = load i8*, i8** %m.addr.error.Clone, align 4
  %15 = load i8*, i8** @progname, align 4
  %call.error.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx.error.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.error.Clone, i32 2
  %call1.error.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.error.Clone, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @"??_C@_0N@ODCEBLNH@?6?$CFs?3?5?$CFs?3?5?$CFs?6?$AA@", i32 0, i32 0), i8* %15, i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0), i8* %14)
  br label %entry.abort_gzip.Clone

entry.abort_gzip.Clone:                           ; preds = %entry.error.Clone
  %16 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone = icmp ne i32 %16, 0
  br i1 %tobool.abort_gzip.Clone, label %if.then.abort_gzip.Clone, label %if.end.abort_gzip.Clone

if.then.abort_gzip.Clone:                         ; preds = %entry.abort_gzip.Clone
  %17 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %17)
  %call1.abort_gzip.Clone = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone

if.end.abort_gzip.Clone:                          ; preds = %if.then.abort_gzip.Clone, %entry.abort_gzip.Clone
  br label %entry.do_exit.Clone

entry.do_exit.Clone:                              ; preds = %if.end.abort_gzip.Clone
  %exitcode.addr.do_exit.Clone = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone, align 4
  %18 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone = icmp ne i32 %18, 0
  br i1 %tobool.do_exit.Clone, label %if.then.do_exit.Clone, label %if.end.do_exit.Clone

if.then.do_exit.Clone:                            ; preds = %entry.do_exit.Clone
  %19 = load i32, i32* %exitcode.addr.do_exit.Clone, align 4
  call void @exit(i32 %19) #7
  unreachable

if.end.do_exit.Clone:                             ; preds = %entry.do_exit.Clone
  store i32 1, i32* @do_exit.in_exit, align 4
  %20 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone = icmp ne i8* %20, null
  br i1 %cmp.do_exit.Clone, label %if.then1.do_exit.Clone, label %if.end2.do_exit.Clone

if.then1.do_exit.Clone:                           ; preds = %if.end.do_exit.Clone
  %21 = load i8*, i8** @env, align 4
  call void @free(i8* %21) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone

if.end2.do_exit.Clone:                            ; preds = %if.then1.do_exit.Clone, %if.end.do_exit.Clone
  %22 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone = icmp ne i8** %22, null
  br i1 %cmp3.do_exit.Clone, label %if.then4.do_exit.Clone, label %if.end5.do_exit.Clone

if.then4.do_exit.Clone:                           ; preds = %if.end2.do_exit.Clone
  %23 = load i8**, i8*** @args, align 4
  %24 = bitcast i8** %23 to i8*
  call void @free(i8* %24) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone

if.end5.do_exit.Clone:                            ; preds = %if.then4.do_exit.Clone, %if.end2.do_exit.Clone
  %25 = load i32, i32* %exitcode.addr.do_exit.Clone, align 4
  call void @exit(i32 %25) #7
  unreachable

return.do_exit.Clone:                             ; No predecessors!
  br label %if.end.abort_gzip.Clone.Split

if.end.abort_gzip.Clone.Split:                    ; preds = %return.do_exit.Clone
  br label %entry.error.Clone.Split

entry.error.Clone.Split:                          ; preds = %if.end.abort_gzip.Clone.Split
  br label %if.then.Split

if.then.Split:                                    ; preds = %entry.error.Clone.Split
  br label %if.end

if.end:                                           ; preds = %if.then.Split, %new
  %26 = load i32, i32* %tablebits.addr, align 4
  %sub27 = sub nsw i32 16, %26
  store i32 %sub27, i32* %jutbits, align 4
  store i32 1, i32* %i, align 4
  br label %for.cond28

for.cond28:                                       ; preds = %for.inc39, %if.end
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %tablebits.addr, align 4
  %cmp29 = icmp ule i32 %27, %28
  br i1 %cmp29, label %for.body31, label %for.end41

for.body31:                                       ; preds = %for.cond28
  %29 = load i32, i32* %jutbits, align 4
  %30 = load i32, i32* %i, align 4
  %arrayidx32 = getelementptr inbounds [18 x i16], [18 x i16]* %start, i32 0, i32 %30
  %31 = load i16, i16* %arrayidx32, align 2
  %conv33 = zext i16 %31 to i32
  %shr = ashr i32 %conv33, %29
  %conv34 = trunc i32 %shr to i16
  store i16 %conv34, i16* %arrayidx32, align 2
  %32 = load i32, i32* %tablebits.addr, align 4
  %33 = load i32, i32* %i, align 4
  %sub35 = sub i32 %32, %33
  %shl36 = shl i32 1, %sub35
  %conv37 = trunc i32 %shl36 to i16
  %34 = load i32, i32* %i, align 4
  %arrayidx38 = getelementptr inbounds [17 x i16], [17 x i16]* %weight, i32 0, i32 %34
  store i16 %conv37, i16* %arrayidx38, align 2
  br label %for.inc39

for.inc39:                                        ; preds = %for.body31
  %35 = load i32, i32* %i, align 4
  %inc40 = add i32 %35, 1
  store i32 %inc40, i32* %i, align 4
  br label %for.cond28

for.end41:                                        ; preds = %for.cond28
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.end41
  %36 = load i32, i32* %i, align 4
  %cmp42 = icmp ule i32 %36, 16
  br i1 %cmp42, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %37 = load i32, i32* %i, align 4
  %sub44 = sub i32 16, %37
  %shl45 = shl i32 1, %sub44
  %conv46 = trunc i32 %shl45 to i16
  %38 = load i32, i32* %i, align 4
  %arrayidx47 = getelementptr inbounds [17 x i16], [17 x i16]* %weight, i32 0, i32 %38
  store i16 %conv46, i16* %arrayidx47, align 2
  %39 = load i32, i32* %i, align 4
  %inc48 = add i32 %39, 1
  store i32 %inc48, i32* %i, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %40 = load i32, i32* %tablebits.addr, align 4
  %add49 = add nsw i32 %40, 1
  %arrayidx50 = getelementptr inbounds [18 x i16], [18 x i16]* %start, i32 0, i32 %add49
  %41 = load i16, i16* %arrayidx50, align 2
  %conv51 = zext i16 %41 to i32
  %42 = load i32, i32* %jutbits, align 4
  %shr52 = ashr i32 %conv51, %42
  store i32 %shr52, i32* %i, align 4
  %43 = load i32, i32* %i, align 4
  %cmp53 = icmp ne i32 %43, 0
  br i1 %cmp53, label %if.then55, label %if.end64

if.then55:                                        ; preds = %while.end
  %44 = load i32, i32* %tablebits.addr, align 4
  %shl56 = shl i32 1, %44
  store i32 %shl56, i32* %k, align 4
  br label %while.cond57

while.cond57:                                     ; preds = %while.body60, %if.then55
  %45 = load i32, i32* %i, align 4
  %46 = load i32, i32* %k, align 4
  %cmp58 = icmp ne i32 %45, %46
  br i1 %cmp58, label %while.body60, label %while.end63

while.body60:                                     ; preds = %while.cond57
  %47 = load i16*, i16** %table.addr, align 4
  %48 = load i32, i32* %i, align 4
  %inc61 = add i32 %48, 1
  store i32 %inc61, i32* %i, align 4
  %arrayidx62 = getelementptr inbounds i16, i16* %47, i32 %48
  store i16 0, i16* %arrayidx62, align 2
  br label %while.cond57

while.end63:                                      ; preds = %while.cond57
  br label %if.end64

if.end64:                                         ; preds = %while.end63, %while.end
  %49 = load i32, i32* %nchar.addr, align 4
  store i32 %49, i32* %avail, align 4
  %50 = load i32, i32* %tablebits.addr, align 4
  %sub65 = sub nsw i32 15, %50
  %shl66 = shl i32 1, %sub65
  store i32 %shl66, i32* %mask, align 4
  store i32 0, i32* %ch, align 4
  br label %for.cond67

for.cond67:                                       ; preds = %for.inc128, %if.end64
  %51 = load i32, i32* %ch, align 4
  %52 = load i32, i32* %nchar.addr, align 4
  %cmp68 = icmp ult i32 %51, %52
  br i1 %cmp68, label %for.body70, label %for.end130

for.body70:                                       ; preds = %for.cond67
  %53 = load i8*, i8** %bitlen.addr, align 4
  %54 = load i32, i32* %ch, align 4
  %arrayidx71 = getelementptr inbounds i8, i8* %53, i32 %54
  %55 = load i8, i8* %arrayidx71, align 1
  %conv72 = zext i8 %55 to i32
  store i32 %conv72, i32* %len, align 4
  %cmp73 = icmp eq i32 %conv72, 0
  br i1 %cmp73, label %if.then75, label %if.end76

if.then75:                                        ; preds = %for.body70
  br label %for.inc128

if.end76:                                         ; preds = %for.body70
  %56 = load i32, i32* %len, align 4
  %arrayidx77 = getelementptr inbounds [18 x i16], [18 x i16]* %start, i32 0, i32 %56
  %57 = load i16, i16* %arrayidx77, align 2
  %conv78 = zext i16 %57 to i32
  %58 = load i32, i32* %len, align 4
  %arrayidx79 = getelementptr inbounds [17 x i16], [17 x i16]* %weight, i32 0, i32 %58
  %59 = load i16, i16* %arrayidx79, align 2
  %conv80 = zext i16 %59 to i32
  %add81 = add nsw i32 %conv78, %conv80
  store i32 %add81, i32* %nextcode, align 4
  %60 = load i32, i32* %len, align 4
  %61 = load i32, i32* %tablebits.addr, align 4
  %cmp82 = icmp ule i32 %60, %61
  br i1 %cmp82, label %if.then84, label %if.else

if.then84:                                        ; preds = %if.end76
  %62 = load i32, i32* %len, align 4
  %arrayidx85 = getelementptr inbounds [18 x i16], [18 x i16]* %start, i32 0, i32 %62
  %63 = load i16, i16* %arrayidx85, align 2
  %conv86 = zext i16 %63 to i32
  store i32 %conv86, i32* %i, align 4
  br label %for.cond87

for.cond87:                                       ; preds = %for.inc93, %if.then84
  %64 = load i32, i32* %i, align 4
  %65 = load i32, i32* %nextcode, align 4
  %cmp88 = icmp ult i32 %64, %65
  br i1 %cmp88, label %for.body90, label %for.end95

for.body90:                                       ; preds = %for.cond87
  %66 = load i32, i32* %ch, align 4
  %conv91 = trunc i32 %66 to i16
  %67 = load i16*, i16** %table.addr, align 4
  %68 = load i32, i32* %i, align 4
  %arrayidx92 = getelementptr inbounds i16, i16* %67, i32 %68
  store i16 %conv91, i16* %arrayidx92, align 2
  br label %for.inc93

for.inc93:                                        ; preds = %for.body90
  %69 = load i32, i32* %i, align 4
  %inc94 = add i32 %69, 1
  store i32 %inc94, i32* %i, align 4
  br label %for.cond87

for.end95:                                        ; preds = %for.cond87
  br label %if.end125

if.else:                                          ; preds = %if.end76
  %70 = load i32, i32* %len, align 4
  %arrayidx96 = getelementptr inbounds [18 x i16], [18 x i16]* %start, i32 0, i32 %70
  %71 = load i16, i16* %arrayidx96, align 2
  %conv97 = zext i16 %71 to i32
  store i32 %conv97, i32* %k, align 4
  %72 = load i16*, i16** %table.addr, align 4
  %73 = load i32, i32* %k, align 4
  %74 = load i32, i32* %jutbits, align 4
  %shr98 = lshr i32 %73, %74
  %arrayidx99 = getelementptr inbounds i16, i16* %72, i32 %shr98
  store i16* %arrayidx99, i16** %p, align 4
  %75 = load i32, i32* %len, align 4
  %76 = load i32, i32* %tablebits.addr, align 4
  %sub100 = sub i32 %75, %76
  store i32 %sub100, i32* %i, align 4
  br label %while.cond101

while.cond101:                                    ; preds = %if.end121, %if.else
  %77 = load i32, i32* %i, align 4
  %cmp102 = icmp ne i32 %77, 0
  br i1 %cmp102, label %while.body104, label %while.end123

while.body104:                                    ; preds = %while.cond101
  %78 = load i16*, i16** %p, align 4
  %79 = load i16, i16* %78, align 2
  %conv105 = zext i16 %79 to i32
  %cmp106 = icmp eq i32 %conv105, 0
  br i1 %cmp106, label %if.then108, label %if.end113

if.then108:                                       ; preds = %while.body104
  %80 = load i32, i32* %avail, align 4
  %arrayidx109 = getelementptr inbounds [0 x i16], [0 x i16]* bitcast ([65536 x i16]* @prev to [0 x i16]*), i32 0, i32 %80
  store i16 0, i16* %arrayidx109, align 2
  %81 = load i32, i32* %avail, align 4
  %arrayidx110 = getelementptr inbounds i16, i16* getelementptr inbounds ([65536 x i16], [65536 x i16]* @prev, i32 0, i32 32768), i32 %81
  store i16 0, i16* %arrayidx110, align 2
  %82 = load i32, i32* %avail, align 4
  %inc111 = add i32 %82, 1
  store i32 %inc111, i32* %avail, align 4
  %conv112 = trunc i32 %82 to i16
  %83 = load i16*, i16** %p, align 4
  store i16 %conv112, i16* %83, align 2
  br label %if.end113

if.end113:                                        ; preds = %if.then108, %while.body104
  %84 = load i32, i32* %k, align 4
  %85 = load i32, i32* %mask, align 4
  %and114 = and i32 %84, %85
  %tobool = icmp ne i32 %and114, 0
  br i1 %tobool, label %if.then115, label %if.else118

if.then115:                                       ; preds = %if.end113
  %86 = load i16*, i16** %p, align 4
  %87 = load i16, i16* %86, align 2
  %idxprom116 = zext i16 %87 to i32
  %arrayidx117 = getelementptr inbounds i16, i16* getelementptr inbounds ([65536 x i16], [65536 x i16]* @prev, i32 0, i32 32768), i32 %idxprom116
  store i16* %arrayidx117, i16** %p, align 4
  br label %if.end121

if.else118:                                       ; preds = %if.end113
  %88 = load i16*, i16** %p, align 4
  %89 = load i16, i16* %88, align 2
  %idxprom119 = zext i16 %89 to i32
  %arrayidx120 = getelementptr inbounds [0 x i16], [0 x i16]* bitcast ([65536 x i16]* @prev to [0 x i16]*), i32 0, i32 %idxprom119
  store i16* %arrayidx120, i16** %p, align 4
  br label %if.end121

if.end121:                                        ; preds = %if.else118, %if.then115
  %90 = load i32, i32* %k, align 4
  %shl122 = shl i32 %90, 1
  store i32 %shl122, i32* %k, align 4
  %91 = load i32, i32* %i, align 4
  %dec = add i32 %91, -1
  store i32 %dec, i32* %i, align 4
  br label %while.cond101

while.end123:                                     ; preds = %while.cond101
  %92 = load i32, i32* %ch, align 4
  %conv124 = trunc i32 %92 to i16
  %93 = load i16*, i16** %p, align 4
  store i16 %conv124, i16* %93, align 2
  br label %if.end125

if.end125:                                        ; preds = %while.end123, %for.end95
  %94 = load i32, i32* %nextcode, align 4
  %conv126 = trunc i32 %94 to i16
  %95 = load i32, i32* %len, align 4
  %arrayidx127 = getelementptr inbounds [18 x i16], [18 x i16]* %start, i32 0, i32 %95
  store i16 %conv126, i16* %arrayidx127, align 2
  br label %for.inc128

for.inc128:                                       ; preds = %if.end125, %if.then75
  %96 = load i32, i32* %ch, align 4
  %inc129 = add i32 %96, 1
  store i32 %inc129, i32* %ch, align 4
  br label %for.cond67

for.end130:                                       ; preds = %for.cond67
  ret void
}

; Function Attrs: noinline optnone sspstrong
define internal void @huf_decode_start() #1 {
entry:
  call void @init_getbits()
  store i32 0, i32* @blocksize, align 4
  ret void
}

; Function Attrs: noinline optnone sspstrong
define internal void @init_getbits() #1 {
entry:
  store i16 0, i16* @bitbuf, align 2
  store i32 0, i32* @subbitbuf, align 4
  store i32 0, i32* @bitcount, align 4
  br label %entry.fillbuf.Clone

entry.fillbuf.Clone:                              ; preds = %entry
  %n.addr.fillbuf.Clone = alloca i32, align 4
  store i32 16, i32* %n.addr.fillbuf.Clone, align 4
  %0 = load i32, i32* %n.addr.fillbuf.Clone, align 4
  %1 = load i16, i16* @bitbuf, align 2
  %conv.fillbuf.Clone = zext i16 %1 to i32
  %shl.fillbuf.Clone = shl i32 %conv.fillbuf.Clone, %0
  %conv1.fillbuf.Clone = trunc i32 %shl.fillbuf.Clone to i16
  store i16 %conv1.fillbuf.Clone, i16* @bitbuf, align 2
  %RetValuePtr.fillbuf.Clone = alloca i32, align 4
  br label %while.cond.fillbuf.Clone

while.cond.fillbuf.Clone:                         ; preds = %if.end.fillbuf.Clone, %entry.fillbuf.Clone
  %2 = load i32, i32* %n.addr.fillbuf.Clone, align 4
  %3 = load i32, i32* @bitcount, align 4
  %cmp.fillbuf.Clone = icmp sgt i32 %2, %3
  br i1 %cmp.fillbuf.Clone, label %while.body.fillbuf.Clone, label %while.end.fillbuf.Clone

while.body.fillbuf.Clone:                         ; preds = %while.cond.fillbuf.Clone
  %4 = load i32, i32* @subbitbuf, align 4
  %5 = load i32, i32* @bitcount, align 4
  %6 = load i32, i32* %n.addr.fillbuf.Clone, align 4
  %sub.fillbuf.Clone = sub nsw i32 %6, %5
  store i32 %sub.fillbuf.Clone, i32* %n.addr.fillbuf.Clone, align 4
  %shl3.fillbuf.Clone = shl i32 %4, %sub.fillbuf.Clone
  %7 = load i16, i16* @bitbuf, align 2
  %conv4.fillbuf.Clone = zext i16 %7 to i32
  %or.fillbuf.Clone = or i32 %conv4.fillbuf.Clone, %shl3.fillbuf.Clone
  %conv5.fillbuf.Clone = trunc i32 %or.fillbuf.Clone to i16
  store i16 %conv5.fillbuf.Clone, i16* @bitbuf, align 2
  %8 = load i32, i32* @inptr, align 4
  %9 = load i32, i32* @insize, align 4
  %cmp6.fillbuf.Clone = icmp ult i32 %8, %9
  br i1 %cmp6.fillbuf.Clone, label %cond.true.fillbuf.Clone, label %cond.false.fillbuf.Clone

cond.true.fillbuf.Clone:                          ; preds = %while.body.fillbuf.Clone
  %10 = load i32, i32* @inptr, align 4
  %inc.fillbuf.Clone = add i32 %10, 1
  store i32 %inc.fillbuf.Clone, i32* @inptr, align 4
  %arrayidx.fillbuf.Clone = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i32 0, i32 %10
  %11 = load i8, i8* %arrayidx.fillbuf.Clone, align 1
  %conv8.fillbuf.Clone = zext i8 %11 to i32
  br label %cond.end.fillbuf.Clone

cond.false.fillbuf.Clone:                         ; preds = %while.body.fillbuf.Clone
  br label %entry.fill_inbuf.Clone.fillbuf.Clone

entry.fill_inbuf.Clone.fillbuf.Clone:             ; preds = %cond.false.fillbuf.Clone
  %retval.fill_inbuf.Clone.fillbuf.Clone = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone.fillbuf.Clone = alloca i32, align 4
  %len.fill_inbuf.Clone.fillbuf.Clone = alloca i32, align 4
  store i32 1, i32* %eof_ok.addr.fill_inbuf.Clone.fillbuf.Clone, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone.fillbuf.Clone = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone.fillbuf.Clone, align 4
  br label %do.body.fill_inbuf.Clone.fillbuf.Clone

do.body.fill_inbuf.Clone.fillbuf.Clone:           ; preds = %do.cond.fill_inbuf.Clone.fillbuf.Clone, %entry.fill_inbuf.Clone.fillbuf.Clone
  %12 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone.fillbuf.Clone = sub i32 32768, %12
  %13 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone.fillbuf.Clone = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %13
  %14 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone.fillbuf.Clone = call i32 @spec_read(i32 %14, i8* %add.ptr.fill_inbuf.Clone.fillbuf.Clone, i32 %sub.fill_inbuf.Clone.fillbuf.Clone)
  store i32 %call1.fill_inbuf.Clone.fillbuf.Clone, i32* %len.fill_inbuf.Clone.fillbuf.Clone, align 4
  %15 = load i32, i32* %len.fill_inbuf.Clone.fillbuf.Clone, align 4
  %cmp.fill_inbuf.Clone.fillbuf.Clone = icmp eq i32 %15, 0
  br i1 %cmp.fill_inbuf.Clone.fillbuf.Clone, label %if.then.fill_inbuf.Clone.fillbuf.Clone, label %lor.lhs.false.fill_inbuf.Clone.fillbuf.Clone

lor.lhs.false.fill_inbuf.Clone.fillbuf.Clone:     ; preds = %do.body.fill_inbuf.Clone.fillbuf.Clone
  %16 = load i32, i32* %len.fill_inbuf.Clone.fillbuf.Clone, align 4
  %cmp2.fill_inbuf.Clone.fillbuf.Clone = icmp eq i32 %16, -1
  br i1 %cmp2.fill_inbuf.Clone.fillbuf.Clone, label %if.then.fill_inbuf.Clone.fillbuf.Clone, label %if.end.fill_inbuf.Clone.fillbuf.Clone

if.then.fill_inbuf.Clone.fillbuf.Clone:           ; preds = %lor.lhs.false.fill_inbuf.Clone.fillbuf.Clone, %do.body.fill_inbuf.Clone.fillbuf.Clone
  br label %do.end.fill_inbuf.Clone.fillbuf.Clone

if.end.fill_inbuf.Clone.fillbuf.Clone:            ; preds = %lor.lhs.false.fill_inbuf.Clone.fillbuf.Clone
  %17 = load i32, i32* %len.fill_inbuf.Clone.fillbuf.Clone, align 4
  %18 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone.fillbuf.Clone = add i32 %18, %17
  store i32 %add.fill_inbuf.Clone.fillbuf.Clone, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone.fillbuf.Clone

do.cond.fill_inbuf.Clone.fillbuf.Clone:           ; preds = %if.end.fill_inbuf.Clone.fillbuf.Clone
  %19 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone.fillbuf.Clone = icmp ult i32 %19, 32768
  br i1 %cmp3.fill_inbuf.Clone.fillbuf.Clone, label %do.body.fill_inbuf.Clone.fillbuf.Clone, label %do.end.fill_inbuf.Clone.fillbuf.Clone

do.end.fill_inbuf.Clone.fillbuf.Clone:            ; preds = %do.cond.fill_inbuf.Clone.fillbuf.Clone, %if.then.fill_inbuf.Clone.fillbuf.Clone
  %20 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone.fillbuf.Clone = icmp eq i32 %20, 0
  br i1 %cmp4.fill_inbuf.Clone.fillbuf.Clone, label %if.then5.fill_inbuf.Clone.fillbuf.Clone, label %if.end8.fill_inbuf.Clone.fillbuf.Clone

if.then5.fill_inbuf.Clone.fillbuf.Clone:          ; preds = %do.end.fill_inbuf.Clone.fillbuf.Clone
  %21 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone.fillbuf.Clone, align 4
  %tobool.fill_inbuf.Clone.fillbuf.Clone = icmp ne i32 %21, 0
  br i1 %tobool.fill_inbuf.Clone.fillbuf.Clone, label %if.then6.fill_inbuf.Clone.fillbuf.Clone, label %if.end7.fill_inbuf.Clone.fillbuf.Clone

if.then6.fill_inbuf.Clone.fillbuf.Clone:          ; preds = %if.then5.fill_inbuf.Clone.fillbuf.Clone
  store i32 -1, i32* %retval.fill_inbuf.Clone.fillbuf.Clone, align 4
  br label %return.fill_inbuf.Clone.fillbuf.Clone

if.end7.fill_inbuf.Clone.fillbuf.Clone:           ; preds = %if.then5.fill_inbuf.Clone.fillbuf.Clone
  br label %entry.read_error.Clone

entry.read_error.Clone:                           ; preds = %if.end7.fill_inbuf.Clone.fillbuf.Clone
  %22 = load i8*, i8** @progname, align 4
  %call.read_error.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone, i32 2
  %call1.read_error.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %22)
  %call2.read_error.Clone = call i32* @_errno()
  %23 = load i32, i32* %call2.read_error.Clone, align 4
  %cmp.read_error.Clone = icmp ne i32 %23, 0
  br i1 %cmp.read_error.Clone, label %if.then.read_error.Clone, label %if.else.read_error.Clone

if.then.read_error.Clone:                         ; preds = %entry.read_error.Clone
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone

if.else.read_error.Clone:                         ; preds = %entry.read_error.Clone
  %call3.read_error.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone, i32 2
  %call5.read_error.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone

if.end.read_error.Clone:                          ; preds = %if.else.read_error.Clone, %if.then.read_error.Clone
  br label %entry.abort_gzip.Clone

entry.abort_gzip.Clone:                           ; preds = %if.end.read_error.Clone
  %24 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone = icmp ne i32 %24, 0
  br i1 %tobool.abort_gzip.Clone, label %if.then.abort_gzip.Clone, label %if.end.abort_gzip.Clone

if.then.abort_gzip.Clone:                         ; preds = %entry.abort_gzip.Clone
  %25 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %25)
  %call1.abort_gzip.Clone = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone

if.end.abort_gzip.Clone:                          ; preds = %if.then.abort_gzip.Clone, %entry.abort_gzip.Clone
  br label %entry.do_exit.Clone

entry.do_exit.Clone:                              ; preds = %if.end.abort_gzip.Clone
  %exitcode.addr.do_exit.Clone = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone, align 4
  %26 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone = icmp ne i32 %26, 0
  br i1 %tobool.do_exit.Clone, label %if.then.do_exit.Clone, label %if.end.do_exit.Clone

if.then.do_exit.Clone:                            ; preds = %entry.do_exit.Clone
  %27 = load i32, i32* %exitcode.addr.do_exit.Clone, align 4
  call void @exit(i32 %27) #7
  unreachable

if.end.do_exit.Clone:                             ; preds = %entry.do_exit.Clone
  store i32 1, i32* @do_exit.in_exit, align 4
  %28 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone = icmp ne i8* %28, null
  br i1 %cmp.do_exit.Clone, label %if.then1.do_exit.Clone, label %if.end2.do_exit.Clone

if.then1.do_exit.Clone:                           ; preds = %if.end.do_exit.Clone
  %29 = load i8*, i8** @env, align 4
  call void @free(i8* %29) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone

if.end2.do_exit.Clone:                            ; preds = %if.then1.do_exit.Clone, %if.end.do_exit.Clone
  %30 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone = icmp ne i8** %30, null
  br i1 %cmp3.do_exit.Clone, label %if.then4.do_exit.Clone, label %if.end5.do_exit.Clone

if.then4.do_exit.Clone:                           ; preds = %if.end2.do_exit.Clone
  %31 = load i8**, i8*** @args, align 4
  %32 = bitcast i8** %31 to i8*
  call void @free(i8* %32) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone

if.end5.do_exit.Clone:                            ; preds = %if.then4.do_exit.Clone, %if.end2.do_exit.Clone
  %33 = load i32, i32* %exitcode.addr.do_exit.Clone, align 4
  call void @exit(i32 %33) #7
  unreachable

return.do_exit.Clone:                             ; No predecessors!
  br label %if.end.abort_gzip.Clone.Split

if.end.abort_gzip.Clone.Split:                    ; preds = %return.do_exit.Clone
  br label %if.end.read_error.Clone.Split

if.end.read_error.Clone.Split:                    ; preds = %if.end.abort_gzip.Clone.Split
  br label %if.end7.fill_inbuf.Clone.fillbuf.Clone.Split

if.end7.fill_inbuf.Clone.fillbuf.Clone.Split:     ; preds = %if.end.read_error.Clone.Split
  br label %if.end8.fill_inbuf.Clone.fillbuf.Clone

if.end8.fill_inbuf.Clone.fillbuf.Clone:           ; preds = %if.end7.fill_inbuf.Clone.fillbuf.Clone.Split, %do.end.fill_inbuf.Clone.fillbuf.Clone
  %34 = load i32, i32* @insize, align 4
  %35 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone.fillbuf.Clone = add i32 %35, %34
  store i32 %add9.fill_inbuf.Clone.fillbuf.Clone, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %36 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone.fillbuf.Clone = zext i8 %36 to i32
  store i32 %conv.fill_inbuf.Clone.fillbuf.Clone, i32* %retval.fill_inbuf.Clone.fillbuf.Clone, align 4
  br label %return.fill_inbuf.Clone.fillbuf.Clone

return.fill_inbuf.Clone.fillbuf.Clone:            ; preds = %if.end8.fill_inbuf.Clone.fillbuf.Clone, %if.then6.fill_inbuf.Clone.fillbuf.Clone
  %37 = load i32, i32* %retval.fill_inbuf.Clone.fillbuf.Clone, align 4
  store i32 %37, i32* %RetValuePtr.fillbuf.Clone
  br label %cond.false.Split.fillbuf.Clone

cond.false.Split.fillbuf.Clone:                   ; preds = %return.fill_inbuf.Clone.fillbuf.Clone
  %RetValue.fillbuf.Clone = load i32, i32* %RetValuePtr.fillbuf.Clone
  br label %cond.end.fillbuf.Clone

cond.end.fillbuf.Clone:                           ; preds = %cond.false.Split.fillbuf.Clone, %cond.true.fillbuf.Clone
  %cond.fillbuf.Clone = phi i32 [ %conv8.fillbuf.Clone, %cond.true.fillbuf.Clone ], [ %RetValue.fillbuf.Clone, %cond.false.Split.fillbuf.Clone ]
  store i32 %cond.fillbuf.Clone, i32* @subbitbuf, align 4
  %38 = load i32, i32* @subbitbuf, align 4
  %cmp9.fillbuf.Clone = icmp eq i32 %38, -1
  br i1 %cmp9.fillbuf.Clone, label %if.then.fillbuf.Clone, label %if.end.fillbuf.Clone

if.then.fillbuf.Clone:                            ; preds = %cond.end.fillbuf.Clone
  store i32 0, i32* @subbitbuf, align 4
  br label %if.end.fillbuf.Clone

if.end.fillbuf.Clone:                             ; preds = %if.then.fillbuf.Clone, %cond.end.fillbuf.Clone
  store i32 8, i32* @bitcount, align 4
  br label %while.cond.fillbuf.Clone

while.end.fillbuf.Clone:                          ; preds = %while.cond.fillbuf.Clone
  %39 = load i32, i32* @subbitbuf, align 4
  %40 = load i32, i32* %n.addr.fillbuf.Clone, align 4
  %41 = load i32, i32* @bitcount, align 4
  %sub11.fillbuf.Clone = sub nsw i32 %41, %40
  store i32 %sub11.fillbuf.Clone, i32* @bitcount, align 4
  %shr.fillbuf.Clone = lshr i32 %39, %sub11.fillbuf.Clone
  %42 = load i16, i16* @bitbuf, align 2
  %conv12.fillbuf.Clone = zext i16 %42 to i32
  %or13.fillbuf.Clone = or i32 %conv12.fillbuf.Clone, %shr.fillbuf.Clone
  %conv14.fillbuf.Clone = trunc i32 %or13.fillbuf.Clone to i16
  store i16 %conv14.fillbuf.Clone, i16* @bitbuf, align 2
  br label %entry.Split

entry.Split:                                      ; preds = %while.end.fillbuf.Clone
  ret void
}

; Function Attrs: noinline optnone sspstrong
define dso_local i32 @unlzw(i32 %in, i32 %out) #1 {
entry:
  %retval = alloca i32, align 4
  %out.addr = alloca i32, align 4
  %in.addr = alloca i32, align 4
  %stackp = alloca i8*, align 4
  %code = alloca i32, align 4
  %finchar = alloca i32, align 4
  %oldcode = alloca i32, align 4
  %incode = alloca i32, align 4
  %inbits = alloca i32, align 4
  %posbits = alloca i32, align 4
  %outpos = alloca i32, align 4
  %bitmask = alloca i32, align 4
  %free_ent = alloca i32, align 4
  %maxcode = alloca i32, align 4
  %maxmaxcode = alloca i32, align 4
  %n_bits = alloca i32, align 4
  %rsize = alloca i32, align 4
  %i = alloca i32, align 4
  %e = alloca i32, align 4
  %o = alloca i32, align 4
  %p = alloca i8*, align 4
  %i158 = alloca i32, align 4
  store i32 %out, i32* %out.addr, align 4
  store i32 %in, i32* %in.addr, align 4
  %0 = load i32, i32* @inptr, align 4
  %1 = load i32, i32* @insize, align 4
  %cmp = icmp ult i32 %0, %1
  %RetValuePtr = alloca i32, align 4
  %RetValuePtr87 = alloca i32, align 4
  %RetValuePtr118 = alloca i32, align 4
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %2 = load i32, i32* @inptr, align 4
  %inc = add i32 %2, 1
  store i32 %inc, i32* @inptr, align 4
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i32 0, i32 %2
  %3 = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %3 to i32
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %entry.fill_inbuf.Clone

entry.fill_inbuf.Clone:                           ; preds = %cond.false
  %retval.fill_inbuf.Clone = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone = alloca i32, align 4
  %len.fill_inbuf.Clone = alloca i32, align 4
  store i32 0, i32* %eof_ok.addr.fill_inbuf.Clone, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone, align 4
  br label %do.body.fill_inbuf.Clone

do.body.fill_inbuf.Clone:                         ; preds = %do.cond.fill_inbuf.Clone, %entry.fill_inbuf.Clone
  %4 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone = sub i32 32768, %4
  %5 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %5
  %6 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone = call i32 @spec_read(i32 %6, i8* %add.ptr.fill_inbuf.Clone, i32 %sub.fill_inbuf.Clone)
  store i32 %call1.fill_inbuf.Clone, i32* %len.fill_inbuf.Clone, align 4
  %7 = load i32, i32* %len.fill_inbuf.Clone, align 4
  %cmp.fill_inbuf.Clone = icmp eq i32 %7, 0
  br i1 %cmp.fill_inbuf.Clone, label %if.then.fill_inbuf.Clone, label %lor.lhs.false.fill_inbuf.Clone

lor.lhs.false.fill_inbuf.Clone:                   ; preds = %do.body.fill_inbuf.Clone
  %8 = load i32, i32* %len.fill_inbuf.Clone, align 4
  %cmp2.fill_inbuf.Clone = icmp eq i32 %8, -1
  br i1 %cmp2.fill_inbuf.Clone, label %if.then.fill_inbuf.Clone, label %if.end.fill_inbuf.Clone

if.then.fill_inbuf.Clone:                         ; preds = %lor.lhs.false.fill_inbuf.Clone, %do.body.fill_inbuf.Clone
  br label %do.end.fill_inbuf.Clone

if.end.fill_inbuf.Clone:                          ; preds = %lor.lhs.false.fill_inbuf.Clone
  %9 = load i32, i32* %len.fill_inbuf.Clone, align 4
  %10 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone = add i32 %10, %9
  store i32 %add.fill_inbuf.Clone, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone

do.cond.fill_inbuf.Clone:                         ; preds = %if.end.fill_inbuf.Clone
  %11 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone = icmp ult i32 %11, 32768
  br i1 %cmp3.fill_inbuf.Clone, label %do.body.fill_inbuf.Clone, label %do.end.fill_inbuf.Clone

do.end.fill_inbuf.Clone:                          ; preds = %do.cond.fill_inbuf.Clone, %if.then.fill_inbuf.Clone
  %12 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone = icmp eq i32 %12, 0
  br i1 %cmp4.fill_inbuf.Clone, label %if.then5.fill_inbuf.Clone, label %if.end8.fill_inbuf.Clone

if.then5.fill_inbuf.Clone:                        ; preds = %do.end.fill_inbuf.Clone
  %13 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone, align 4
  %tobool.fill_inbuf.Clone = icmp ne i32 %13, 0
  br i1 %tobool.fill_inbuf.Clone, label %if.then6.fill_inbuf.Clone, label %if.end7.fill_inbuf.Clone

if.then6.fill_inbuf.Clone:                        ; preds = %if.then5.fill_inbuf.Clone
  store i32 -1, i32* %retval.fill_inbuf.Clone, align 4
  br label %return.fill_inbuf.Clone

if.end7.fill_inbuf.Clone:                         ; preds = %if.then5.fill_inbuf.Clone
  br label %entry.read_error.Clone

entry.read_error.Clone:                           ; preds = %if.end7.fill_inbuf.Clone
  %14 = load i8*, i8** @progname, align 4
  %call.read_error.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone, i32 2
  %call1.read_error.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %14)
  %call2.read_error.Clone = call i32* @_errno()
  %15 = load i32, i32* %call2.read_error.Clone, align 4
  %cmp.read_error.Clone = icmp ne i32 %15, 0
  br i1 %cmp.read_error.Clone, label %if.then.read_error.Clone, label %if.else.read_error.Clone

if.then.read_error.Clone:                         ; preds = %entry.read_error.Clone
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone

if.else.read_error.Clone:                         ; preds = %entry.read_error.Clone
  %call3.read_error.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone, i32 2
  %call5.read_error.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone

if.end.read_error.Clone:                          ; preds = %if.else.read_error.Clone, %if.then.read_error.Clone
  br label %entry.abort_gzip.Clone33

entry.abort_gzip.Clone33:                         ; preds = %if.end.read_error.Clone
  %16 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone34 = icmp ne i32 %16, 0
  br i1 %tobool.abort_gzip.Clone34, label %if.then.abort_gzip.Clone35, label %if.end.abort_gzip.Clone38

if.then.abort_gzip.Clone35:                       ; preds = %entry.abort_gzip.Clone33
  %17 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone36 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %17)
  %call1.abort_gzip.Clone37 = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone38

if.end.abort_gzip.Clone38:                        ; preds = %if.then.abort_gzip.Clone35, %entry.abort_gzip.Clone33
  br label %entry.do_exit.Clone63

entry.do_exit.Clone63:                            ; preds = %if.end.abort_gzip.Clone38
  %exitcode.addr.do_exit.Clone64 = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone64, align 4
  %18 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone65 = icmp ne i32 %18, 0
  br i1 %tobool.do_exit.Clone65, label %if.then.do_exit.Clone66, label %if.end.do_exit.Clone67

if.then.do_exit.Clone66:                          ; preds = %entry.do_exit.Clone63
  %19 = load i32, i32* %exitcode.addr.do_exit.Clone64, align 4
  call void @exit(i32 %19) #7
  unreachable

if.end.do_exit.Clone67:                           ; preds = %entry.do_exit.Clone63
  store i32 1, i32* @do_exit.in_exit, align 4
  %20 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone68 = icmp ne i8* %20, null
  br i1 %cmp.do_exit.Clone68, label %if.then1.do_exit.Clone69, label %if.end2.do_exit.Clone70

if.then1.do_exit.Clone69:                         ; preds = %if.end.do_exit.Clone67
  %21 = load i8*, i8** @env, align 4
  call void @free(i8* %21) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone70

if.end2.do_exit.Clone70:                          ; preds = %if.then1.do_exit.Clone69, %if.end.do_exit.Clone67
  %22 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone71 = icmp ne i8** %22, null
  br i1 %cmp3.do_exit.Clone71, label %if.then4.do_exit.Clone72, label %if.end5.do_exit.Clone73

if.then4.do_exit.Clone72:                         ; preds = %if.end2.do_exit.Clone70
  %23 = load i8**, i8*** @args, align 4
  %24 = bitcast i8** %23 to i8*
  call void @free(i8* %24) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone73

if.end5.do_exit.Clone73:                          ; preds = %if.then4.do_exit.Clone72, %if.end2.do_exit.Clone70
  %25 = load i32, i32* %exitcode.addr.do_exit.Clone64, align 4
  call void @exit(i32 %25) #7
  unreachable

return.do_exit.Clone74:                           ; No predecessors!
  br label %if.end.abort_gzip.Clone38.Split

if.end.abort_gzip.Clone38.Split:                  ; preds = %return.do_exit.Clone74
  br label %if.end.read_error.Clone.Split

if.end.read_error.Clone.Split:                    ; preds = %if.end.abort_gzip.Clone38.Split
  br label %if.end7.fill_inbuf.Clone.Split

if.end7.fill_inbuf.Clone.Split:                   ; preds = %if.end.read_error.Clone.Split
  br label %if.end8.fill_inbuf.Clone

if.end8.fill_inbuf.Clone:                         ; preds = %if.end7.fill_inbuf.Clone.Split, %do.end.fill_inbuf.Clone
  %26 = load i32, i32* @insize, align 4
  %27 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone = add i32 %27, %26
  store i32 %add9.fill_inbuf.Clone, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %28 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone = zext i8 %28 to i32
  store i32 %conv.fill_inbuf.Clone, i32* %retval.fill_inbuf.Clone, align 4
  br label %return.fill_inbuf.Clone

return.fill_inbuf.Clone:                          ; preds = %if.end8.fill_inbuf.Clone, %if.then6.fill_inbuf.Clone
  %29 = load i32, i32* %retval.fill_inbuf.Clone, align 4
  store i32 %29, i32* %RetValuePtr
  br label %cond.false.Split

cond.false.Split:                                 ; preds = %return.fill_inbuf.Clone
  %RetValue = load i32, i32* %RetValuePtr
  br label %cond.end

cond.end:                                         ; preds = %cond.false.Split, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %RetValue, %cond.false.Split ]
  store i32 %cond, i32* @maxbits, align 4
  %30 = load i32, i32* @maxbits, align 4
  %and = and i32 %30, 128
  store i32 %and, i32* @block_mode, align 4
  %31 = load i32, i32* @maxbits, align 4
  %and1 = and i32 %31, 96
  %cmp2 = icmp ne i32 %and1, 0
  br i1 %cmp2, label %if.then, label %if.end13

if.then:                                          ; preds = %cond.end
  %32 = load i32, i32* @quiet, align 4
  %tobool = icmp ne i32 %32, 0
  br i1 %tobool, label %if.end, label %if.then4

if.then4:                                         ; preds = %if.then
  %33 = load i32, i32* @maxbits, align 4
  %and5 = and i32 %33, 96
  %34 = load i8*, i8** @progname, align 4
  %call6 = call %struct._iobuf* @__iob_func()
  %arrayidx7 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call6, i32 2
  %call8 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx7, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @"??_C@_0CG@BMCOKLOC@?6?$CFs?3?5?$CFs?3?5warning?0?5unknown?5flags?5@", i32 0, i32 0), i8* %34, i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0), i32 %and5)
  br label %if.end

if.end:                                           ; preds = %if.then4, %if.then
  %35 = load i32, i32* @exit_code, align 4
  %cmp9 = icmp eq i32 %35, 0
  br i1 %cmp9, label %if.then11, label %if.end12

if.then11:                                        ; preds = %if.end
  store i32 2, i32* @exit_code, align 4
  br label %if.end12

if.end12:                                         ; preds = %if.then11, %if.end
  br label %if.end13

if.end13:                                         ; preds = %if.end12, %cond.end
  %36 = load i32, i32* @maxbits, align 4
  %and14 = and i32 %36, 31
  store i32 %and14, i32* @maxbits, align 4
  %37 = load i32, i32* @maxbits, align 4
  %shl = shl i32 1, %37
  store i32 %shl, i32* %maxmaxcode, align 4
  %38 = load i32, i32* @maxbits, align 4
  %cmp15 = icmp sgt i32 %38, 16
  br i1 %cmp15, label %if.then17, label %if.end21

if.then17:                                        ; preds = %if.end13
  %39 = load i32, i32* @maxbits, align 4
  %40 = load i8*, i8** @progname, align 4
  %call18 = call %struct._iobuf* @__iob_func()
  %arrayidx19 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call18, i32 2
  %call20 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx19, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @"??_C@_0DL@NICGIDGJ@?6?$CFs?3?5?$CFs?3?5compressed?5with?5?$CFd?5bits@", i32 0, i32 0), i8* %40, i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0), i32 %39, i32 16)
  store i32 1, i32* @exit_code, align 4
  store i32 1, i32* %retval, align 4
  br label %return

if.end21:                                         ; preds = %if.end13
  %41 = load i32, i32* @insize, align 4
  store i32 %41, i32* %rsize, align 4
  store i32 9, i32* %n_bits, align 4
  store i32 511, i32* %maxcode, align 4
  %42 = load i32, i32* %n_bits, align 4
  %shl22 = shl i32 1, %42
  %sub = sub nsw i32 %shl22, 1
  store i32 %sub, i32* %bitmask, align 4
  store i32 -1, i32* %oldcode, align 4
  store i32 0, i32* %finchar, align 4
  store i32 0, i32* %outpos, align 4
  %43 = load i32, i32* @inptr, align 4
  %shl23 = shl i32 %43, 3
  store i32 %shl23, i32* %posbits, align 4
  %44 = load i32, i32* @block_mode, align 4
  %tobool24 = icmp ne i32 %44, 0
  %45 = zext i1 %tobool24 to i64
  %cond25 = select i1 %tobool24, i32 257, i32 256
  store i32 %cond25, i32* %free_ent, align 4
  call void @llvm.memset.p0i8.i32(i8* align 2 bitcast ([65536 x i16]* @prev to i8*), i8 0, i32 256, i1 false)
  store i32 255, i32* %code, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end21
  %46 = load i32, i32* %code, align 4
  %cmp26 = icmp sge i32 %46, 0
  br i1 %cmp26, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %47 = load i32, i32* %code, align 4
  %conv28 = trunc i32 %47 to i8
  %48 = load i32, i32* %code, align 4
  %arrayidx29 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([65536 x i8]* @window to [0 x i8]*), i32 0, i32 %48
  store i8 %conv28, i8* %arrayidx29, align 1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %49 = load i32, i32* %code, align 4
  %dec = add nsw i32 %49, -1
  store i32 %dec, i32* %code, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %do.body

do.body:                                          ; preds = %do.cond203, %for.end
  br label %resetbuf

resetbuf:                                         ; preds = %if.then115, %if.end82, %do.body
  %50 = load i32, i32* @insize, align 4
  %51 = load i32, i32* %posbits, align 4
  %shr = ashr i32 %51, 3
  store i32 %shr, i32* %o, align 4
  %sub30 = sub i32 %50, %shr
  store i32 %sub30, i32* %e, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond31

for.cond31:                                       ; preds = %for.inc37, %resetbuf
  %52 = load i32, i32* %i, align 4
  %53 = load i32, i32* %e, align 4
  %cmp32 = icmp slt i32 %52, %53
  br i1 %cmp32, label %for.body34, label %for.end39

for.body34:                                       ; preds = %for.cond31
  %54 = load i32, i32* %i, align 4
  %55 = load i32, i32* %o, align 4
  %add = add nsw i32 %54, %55
  %arrayidx35 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i32 0, i32 %add
  %56 = load i8, i8* %arrayidx35, align 1
  %57 = load i32, i32* %i, align 4
  %arrayidx36 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i32 0, i32 %57
  store i8 %56, i8* %arrayidx36, align 1
  br label %for.inc37

for.inc37:                                        ; preds = %for.body34
  %58 = load i32, i32* %i, align 4
  %inc38 = add nsw i32 %58, 1
  store i32 %inc38, i32* %i, align 4
  br label %for.cond31

for.end39:                                        ; preds = %for.cond31
  %59 = load i32, i32* %e, align 4
  store i32 %59, i32* @insize, align 4
  store i32 0, i32* %posbits, align 4
  %60 = load i32, i32* @insize, align 4
  %cmp40 = icmp ult i32 %60, 64
  br i1 %cmp40, label %if.then42, label %if.end50

if.then42:                                        ; preds = %for.end39
  %61 = load i32, i32* @insize, align 4
  %add.ptr = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %61
  %62 = load i32, i32* %in.addr, align 4
  %call43 = call i32 @spec_read(i32 %62, i8* %add.ptr, i32 32768)
  store i32 %call43, i32* %rsize, align 4
  %cmp44 = icmp eq i32 %call43, -1
  br i1 %cmp44, label %if.then46, label %if.end47

if.then46:                                        ; preds = %if.then42
  br label %entry.read_error.Clone21

entry.read_error.Clone21:                         ; preds = %if.then46
  %63 = load i8*, i8** @progname, align 4
  %call.read_error.Clone22 = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone23 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone22, i32 2
  %call1.read_error.Clone24 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone23, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %63)
  %call2.read_error.Clone25 = call i32* @_errno()
  %64 = load i32, i32* %call2.read_error.Clone25, align 4
  %cmp.read_error.Clone26 = icmp ne i32 %64, 0
  br i1 %cmp.read_error.Clone26, label %if.then.read_error.Clone27, label %if.else.read_error.Clone28

if.then.read_error.Clone27:                       ; preds = %entry.read_error.Clone21
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone32

if.else.read_error.Clone28:                       ; preds = %entry.read_error.Clone21
  %call3.read_error.Clone29 = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone30 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone29, i32 2
  %call5.read_error.Clone31 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone30, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone32

if.end.read_error.Clone32:                        ; preds = %if.else.read_error.Clone28, %if.then.read_error.Clone27
  br label %entry.abort_gzip.Clone

entry.abort_gzip.Clone:                           ; preds = %if.end.read_error.Clone32
  %65 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone = icmp ne i32 %65, 0
  br i1 %tobool.abort_gzip.Clone, label %if.then.abort_gzip.Clone, label %if.end.abort_gzip.Clone

if.then.abort_gzip.Clone:                         ; preds = %entry.abort_gzip.Clone
  %66 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %66)
  %call1.abort_gzip.Clone = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone

if.end.abort_gzip.Clone:                          ; preds = %if.then.abort_gzip.Clone, %entry.abort_gzip.Clone
  br label %entry.do_exit.Clone75

entry.do_exit.Clone75:                            ; preds = %if.end.abort_gzip.Clone
  %exitcode.addr.do_exit.Clone76 = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone76, align 4
  %67 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone77 = icmp ne i32 %67, 0
  br i1 %tobool.do_exit.Clone77, label %if.then.do_exit.Clone78, label %if.end.do_exit.Clone79

if.then.do_exit.Clone78:                          ; preds = %entry.do_exit.Clone75
  %68 = load i32, i32* %exitcode.addr.do_exit.Clone76, align 4
  call void @exit(i32 %68) #7
  unreachable

if.end.do_exit.Clone79:                           ; preds = %entry.do_exit.Clone75
  store i32 1, i32* @do_exit.in_exit, align 4
  %69 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone80 = icmp ne i8* %69, null
  br i1 %cmp.do_exit.Clone80, label %if.then1.do_exit.Clone81, label %if.end2.do_exit.Clone82

if.then1.do_exit.Clone81:                         ; preds = %if.end.do_exit.Clone79
  %70 = load i8*, i8** @env, align 4
  call void @free(i8* %70) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone82

if.end2.do_exit.Clone82:                          ; preds = %if.then1.do_exit.Clone81, %if.end.do_exit.Clone79
  %71 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone83 = icmp ne i8** %71, null
  br i1 %cmp3.do_exit.Clone83, label %if.then4.do_exit.Clone84, label %if.end5.do_exit.Clone85

if.then4.do_exit.Clone84:                         ; preds = %if.end2.do_exit.Clone82
  %72 = load i8**, i8*** @args, align 4
  %73 = bitcast i8** %72 to i8*
  call void @free(i8* %73) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone85

if.end5.do_exit.Clone85:                          ; preds = %if.then4.do_exit.Clone84, %if.end2.do_exit.Clone82
  %74 = load i32, i32* %exitcode.addr.do_exit.Clone76, align 4
  call void @exit(i32 %74) #7
  unreachable

return.do_exit.Clone86:                           ; No predecessors!
  br label %if.end.abort_gzip.Clone.Split

if.end.abort_gzip.Clone.Split:                    ; preds = %return.do_exit.Clone86
  br label %if.end.read_error.Clone32.Split

if.end.read_error.Clone32.Split:                  ; preds = %if.end.abort_gzip.Clone.Split
  br label %if.then46.Split

if.then46.Split:                                  ; preds = %if.end.read_error.Clone32.Split
  br label %if.end47

if.end47:                                         ; preds = %if.then46.Split, %if.then42
  %75 = load i32, i32* %rsize, align 4
  %76 = load i32, i32* @insize, align 4
  %add48 = add i32 %76, %75
  store i32 %add48, i32* @insize, align 4
  %77 = load i32, i32* %rsize, align 4
  %78 = load i32, i32* @bytes_in, align 4
  %add49 = add i32 %78, %77
  store i32 %add49, i32* @bytes_in, align 4
  br label %if.end50

if.end50:                                         ; preds = %if.end47, %for.end39
  %79 = load i32, i32* %rsize, align 4
  %cmp51 = icmp ne i32 %79, 0
  br i1 %cmp51, label %cond.true53, label %cond.false56

cond.true53:                                      ; preds = %if.end50
  %80 = load i32, i32* @insize, align 4
  %81 = load i32, i32* @insize, align 4
  %82 = load i32, i32* %n_bits, align 4
  %rem = urem i32 %81, %82
  %sub54 = sub i32 %80, %rem
  %shl55 = shl i32 %sub54, 3
  br label %cond.end60

cond.false56:                                     ; preds = %if.end50
  %83 = load i32, i32* @insize, align 4
  %shl57 = shl i32 %83, 3
  %84 = load i32, i32* %n_bits, align 4
  %sub58 = sub nsw i32 %84, 1
  %sub59 = sub nsw i32 %shl57, %sub58
  br label %cond.end60

cond.end60:                                       ; preds = %cond.false56, %cond.true53
  %cond61 = phi i32 [ %shl55, %cond.true53 ], [ %sub59, %cond.false56 ]
  store i32 %cond61, i32* %inbits, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end201, %if.end107, %cond.end60
  %85 = load i32, i32* %inbits, align 4
  %86 = load i32, i32* %posbits, align 4
  %cmp62 = icmp sgt i32 %85, %86
  br i1 %cmp62, label %while.body, label %while.end202

while.body:                                       ; preds = %while.cond
  %87 = load i32, i32* %free_ent, align 4
  %88 = load i32, i32* %maxcode, align 4
  %cmp64 = icmp sgt i32 %87, %88
  br i1 %cmp64, label %if.then66, label %if.end85

if.then66:                                        ; preds = %while.body
  %89 = load i32, i32* %posbits, align 4
  %sub67 = sub nsw i32 %89, 1
  %90 = load i32, i32* %n_bits, align 4
  %shl68 = shl i32 %90, 3
  %91 = load i32, i32* %posbits, align 4
  %sub69 = sub nsw i32 %91, 1
  %92 = load i32, i32* %n_bits, align 4
  %shl70 = shl i32 %92, 3
  %add71 = add nsw i32 %sub69, %shl70
  %93 = load i32, i32* %n_bits, align 4
  %shl72 = shl i32 %93, 3
  %rem73 = srem i32 %add71, %shl72
  %sub74 = sub nsw i32 %shl68, %rem73
  %add75 = add nsw i32 %sub67, %sub74
  store i32 %add75, i32* %posbits, align 4
  %94 = load i32, i32* %n_bits, align 4
  %inc76 = add nsw i32 %94, 1
  store i32 %inc76, i32* %n_bits, align 4
  %95 = load i32, i32* %n_bits, align 4
  %96 = load i32, i32* @maxbits, align 4
  %cmp77 = icmp eq i32 %95, %96
  br i1 %cmp77, label %if.then79, label %if.else

if.then79:                                        ; preds = %if.then66
  %97 = load i32, i32* %maxmaxcode, align 4
  store i32 %97, i32* %maxcode, align 4
  br label %if.end82

if.else:                                          ; preds = %if.then66
  %98 = load i32, i32* %n_bits, align 4
  %shl80 = shl i32 1, %98
  %sub81 = sub nsw i32 %shl80, 1
  store i32 %sub81, i32* %maxcode, align 4
  br label %if.end82

if.end82:                                         ; preds = %if.else, %if.then79
  %99 = load i32, i32* %n_bits, align 4
  %shl83 = shl i32 1, %99
  %sub84 = sub nsw i32 %shl83, 1
  store i32 %sub84, i32* %bitmask, align 4
  br label %resetbuf

if.end85:                                         ; preds = %while.body
  %100 = load i32, i32* %posbits, align 4
  %shr86 = ashr i32 %100, 3
  %arrayidx87 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i32 0, i32 %shr86
  store i8* %arrayidx87, i8** %p, align 4
  %101 = load i8*, i8** %p, align 4
  %arrayidx88 = getelementptr inbounds i8, i8* %101, i32 0
  %102 = load i8, i8* %arrayidx88, align 1
  %conv89 = zext i8 %102 to i32
  %103 = load i8*, i8** %p, align 4
  %arrayidx90 = getelementptr inbounds i8, i8* %103, i32 1
  %104 = load i8, i8* %arrayidx90, align 1
  %conv91 = zext i8 %104 to i32
  %shl92 = shl i32 %conv91, 8
  %or = or i32 %conv89, %shl92
  %105 = load i8*, i8** %p, align 4
  %arrayidx93 = getelementptr inbounds i8, i8* %105, i32 2
  %106 = load i8, i8* %arrayidx93, align 1
  %conv94 = zext i8 %106 to i32
  %shl95 = shl i32 %conv94, 16
  %or96 = or i32 %or, %shl95
  %107 = load i32, i32* %posbits, align 4
  %and97 = and i32 %107, 7
  %shr98 = ashr i32 %or96, %and97
  %108 = load i32, i32* %bitmask, align 4
  %and99 = and i32 %shr98, %108
  store i32 %and99, i32* %code, align 4
  %109 = load i32, i32* %n_bits, align 4
  %110 = load i32, i32* %posbits, align 4
  %add100 = add nsw i32 %110, %109
  store i32 %add100, i32* %posbits, align 4
  %111 = load i32, i32* %oldcode, align 4
  %cmp101 = icmp eq i32 %111, -1
  br i1 %cmp101, label %if.then103, label %if.end111

if.then103:                                       ; preds = %if.end85
  %112 = load i32, i32* %code, align 4
  %cmp104 = icmp sge i32 %112, 256
  br i1 %cmp104, label %if.then106, label %if.end107

if.then106:                                       ; preds = %if.then103
  br label %entry.error.Clone1

entry.error.Clone1:                               ; preds = %if.then106
  %m.addr.error.Clone2 = alloca i8*, align 4
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @"??_C@_0P@EPOGKLIC@corrupt?5input?4?$AA@", i32 0, i32 0), i8** %m.addr.error.Clone2, align 4
  %113 = load i8*, i8** %m.addr.error.Clone2, align 4
  %114 = load i8*, i8** @progname, align 4
  %call.error.Clone3 = call %struct._iobuf* @__iob_func()
  %arrayidx.error.Clone4 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.error.Clone3, i32 2
  %call1.error.Clone5 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.error.Clone4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @"??_C@_0N@ODCEBLNH@?6?$CFs?3?5?$CFs?3?5?$CFs?6?$AA@", i32 0, i32 0), i8* %114, i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0), i8* %113)
  br label %entry.abort_gzip.Clone39

entry.abort_gzip.Clone39:                         ; preds = %entry.error.Clone1
  %115 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone40 = icmp ne i32 %115, 0
  br i1 %tobool.abort_gzip.Clone40, label %if.then.abort_gzip.Clone41, label %if.end.abort_gzip.Clone44

if.then.abort_gzip.Clone41:                       ; preds = %entry.abort_gzip.Clone39
  %116 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone42 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %116)
  %call1.abort_gzip.Clone43 = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone44

if.end.abort_gzip.Clone44:                        ; preds = %if.then.abort_gzip.Clone41, %entry.abort_gzip.Clone39
  br label %entry.do_exit.Clone51

entry.do_exit.Clone51:                            ; preds = %if.end.abort_gzip.Clone44
  %exitcode.addr.do_exit.Clone52 = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone52, align 4
  %117 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone53 = icmp ne i32 %117, 0
  br i1 %tobool.do_exit.Clone53, label %if.then.do_exit.Clone54, label %if.end.do_exit.Clone55

if.then.do_exit.Clone54:                          ; preds = %entry.do_exit.Clone51
  %118 = load i32, i32* %exitcode.addr.do_exit.Clone52, align 4
  call void @exit(i32 %118) #7
  unreachable

if.end.do_exit.Clone55:                           ; preds = %entry.do_exit.Clone51
  store i32 1, i32* @do_exit.in_exit, align 4
  %119 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone56 = icmp ne i8* %119, null
  br i1 %cmp.do_exit.Clone56, label %if.then1.do_exit.Clone57, label %if.end2.do_exit.Clone58

if.then1.do_exit.Clone57:                         ; preds = %if.end.do_exit.Clone55
  %120 = load i8*, i8** @env, align 4
  call void @free(i8* %120) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone58

if.end2.do_exit.Clone58:                          ; preds = %if.then1.do_exit.Clone57, %if.end.do_exit.Clone55
  %121 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone59 = icmp ne i8** %121, null
  br i1 %cmp3.do_exit.Clone59, label %if.then4.do_exit.Clone60, label %if.end5.do_exit.Clone61

if.then4.do_exit.Clone60:                         ; preds = %if.end2.do_exit.Clone58
  %122 = load i8**, i8*** @args, align 4
  %123 = bitcast i8** %122 to i8*
  call void @free(i8* %123) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone61

if.end5.do_exit.Clone61:                          ; preds = %if.then4.do_exit.Clone60, %if.end2.do_exit.Clone58
  %124 = load i32, i32* %exitcode.addr.do_exit.Clone52, align 4
  call void @exit(i32 %124) #7
  unreachable

return.do_exit.Clone62:                           ; No predecessors!
  br label %if.end.abort_gzip.Clone44.Split

if.end.abort_gzip.Clone44.Split:                  ; preds = %return.do_exit.Clone62
  br label %entry.error.Clone1.Split

entry.error.Clone1.Split:                         ; preds = %if.end.abort_gzip.Clone44.Split
  br label %if.then106.Split

if.then106.Split:                                 ; preds = %entry.error.Clone1.Split
  br label %if.end107

if.end107:                                        ; preds = %if.then106.Split, %if.then103
  %125 = load i32, i32* %code, align 4
  store i32 %125, i32* %oldcode, align 4
  store i32 %125, i32* %finchar, align 4
  %conv108 = trunc i32 %125 to i8
  %126 = load i32, i32* %outpos, align 4
  %inc109 = add nsw i32 %126, 1
  store i32 %inc109, i32* %outpos, align 4
  %arrayidx110 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i32 0, i32 %126
  store i8 %conv108, i8* %arrayidx110, align 1
  br label %while.cond

if.end111:                                        ; preds = %if.end85
  %127 = load i32, i32* %code, align 4
  %cmp112 = icmp eq i32 %127, 256
  br i1 %cmp112, label %land.lhs.true, label %if.end127

land.lhs.true:                                    ; preds = %if.end111
  %128 = load i32, i32* @block_mode, align 4
  %tobool114 = icmp ne i32 %128, 0
  br i1 %tobool114, label %if.then115, label %if.end127

if.then115:                                       ; preds = %land.lhs.true
  call void @llvm.memset.p0i8.i32(i8* align 2 bitcast ([65536 x i16]* @prev to i8*), i8 0, i32 256, i1 false)
  store i32 256, i32* %free_ent, align 4
  %129 = load i32, i32* %posbits, align 4
  %sub116 = sub nsw i32 %129, 1
  %130 = load i32, i32* %n_bits, align 4
  %shl117 = shl i32 %130, 3
  %131 = load i32, i32* %posbits, align 4
  %sub118 = sub nsw i32 %131, 1
  %132 = load i32, i32* %n_bits, align 4
  %shl119 = shl i32 %132, 3
  %add120 = add nsw i32 %sub118, %shl119
  %133 = load i32, i32* %n_bits, align 4
  %shl121 = shl i32 %133, 3
  %rem122 = srem i32 %add120, %shl121
  %sub123 = sub nsw i32 %shl117, %rem122
  %add124 = add nsw i32 %sub116, %sub123
  store i32 %add124, i32* %posbits, align 4
  store i32 9, i32* %n_bits, align 4
  store i32 511, i32* %maxcode, align 4
  %134 = load i32, i32* %n_bits, align 4
  %shl125 = shl i32 1, %134
  %sub126 = sub nsw i32 %shl125, 1
  store i32 %sub126, i32* %bitmask, align 4
  br label %resetbuf

if.end127:                                        ; preds = %land.lhs.true, %if.end111
  %135 = load i32, i32* %code, align 4
  store i32 %135, i32* %incode, align 4
  store i8* bitcast (i16* getelementptr inbounds ([32768 x i16], [32768 x i16]* @d_buf, i32 0, i32 32767) to i8*), i8** %stackp, align 4
  %136 = load i32, i32* %code, align 4
  %137 = load i32, i32* %free_ent, align 4
  %cmp128 = icmp sge i32 %136, %137
  br i1 %cmp128, label %if.then130, label %if.end145

if.then130:                                       ; preds = %if.end127
  %138 = load i32, i32* %code, align 4
  %139 = load i32, i32* %free_ent, align 4
  %cmp131 = icmp sgt i32 %138, %139
  br i1 %cmp131, label %if.then133, label %if.end143

if.then133:                                       ; preds = %if.then130
  %140 = load i32, i32* @test, align 4
  %tobool134 = icmp ne i32 %140, 0
  br i1 %tobool134, label %if.end140, label %land.lhs.true135

land.lhs.true135:                                 ; preds = %if.then133
  %141 = load i32, i32* %outpos, align 4
  %cmp136 = icmp sgt i32 %141, 0
  br i1 %cmp136, label %if.then138, label %if.end140

if.then138:                                       ; preds = %land.lhs.true135
  %142 = load i32, i32* %outpos, align 4
  %143 = load i32, i32* %out.addr, align 4
  br label %entry.write_buf.Clone6

entry.write_buf.Clone6:                           ; preds = %if.then138
  %cnt.addr.write_buf.Clone7 = alloca i32, align 4
  %buf.addr.write_buf.Clone8 = alloca i8*, align 4
  %fd.addr.write_buf.Clone9 = alloca i32, align 4
  %n.write_buf.Clone10 = alloca i32, align 4
  store i32 %142, i32* %cnt.addr.write_buf.Clone7, align 4
  store i8* getelementptr inbounds ([18432 x i8], [18432 x i8]* @outbuf, i32 0, i32 0), i8** %buf.addr.write_buf.Clone8, align 4
  store i32 %143, i32* %fd.addr.write_buf.Clone9, align 4
  br label %while.cond.write_buf.Clone11

while.cond.write_buf.Clone11:                     ; preds = %if.end.write_buf.Clone17, %entry.write_buf.Clone6
  %144 = load i32, i32* %cnt.addr.write_buf.Clone7, align 4
  %145 = load i8*, i8** %buf.addr.write_buf.Clone8, align 4
  %146 = load i32, i32* %fd.addr.write_buf.Clone9, align 4
  br label %entry.spec_write.Clone

entry.spec_write.Clone:                           ; preds = %while.cond.write_buf.Clone11
  %size.addr.spec_write.Clone = alloca i32, align 4
  %buf.addr.spec_write.Clone = alloca i8*, align 4
  %fd.addr.spec_write.Clone = alloca i32, align 4
  store i32 %144, i32* %size.addr.spec_write.Clone, align 4
  store i8* %145, i8** %buf.addr.spec_write.Clone, align 4
  store i32 %146, i32* %fd.addr.spec_write.Clone, align 4
  %147 = load i32, i32* @dbglvl, align 4
  %cmp.spec_write.Clone = icmp slt i32 4, %147
  br i1 %cmp.spec_write.Clone, label %if.then.spec_write.Clone, label %if.end.spec_write.Clone

if.then.spec_write.Clone:                         ; preds = %entry.spec_write.Clone
  %148 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %149 = load i8*, i8** %buf.addr.spec_write.Clone, align 4
  %150 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %call.spec_write.Clone = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @"??_C@_0BK@GKFGHPHN@spec_write?3?5?$CFd?0?5?$CFx?0?5?$CFd?5?$DN?5?$AA@", i32 0, i32 0), i32 %150, i8* %149, i32 %148)
  br label %if.end.spec_write.Clone

if.end.spec_write.Clone:                          ; preds = %if.then.spec_write.Clone, %entry.spec_write.Clone
  %151 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %cmp1.spec_write.Clone = icmp sgt i32 %151, 3
  br i1 %cmp1.spec_write.Clone, label %if.then2.spec_write.Clone, label %if.end5.spec_write.Clone

if.then2.spec_write.Clone:                        ; preds = %if.end.spec_write.Clone
  %152 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %call3.spec_write.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx.spec_write.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.spec_write.Clone, i32 2
  %call4.spec_write.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.spec_write.Clone, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"??_C@_0CD@NANFEFEM@spec_write?3?5fd?$DN?$CFd?0?5?$DO?5MAX_SPEC_FD@", i32 0, i32 0), i32 %152)
  call void @exit(i32 1) #7
  unreachable

if.end5.spec_write.Clone:                         ; preds = %if.end.spec_write.Clone
  %153 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx6.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %153
  %buf7.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx6.spec_write.Clone, i32 0, i32 3
  %154 = load i8*, i8** %buf7.spec_write.Clone, align 4
  %155 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx8.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %155
  %pos.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx8.spec_write.Clone, i32 0, i32 2
  %156 = load i32, i32* %pos.spec_write.Clone, align 4
  %arrayidx9.spec_write.Clone = getelementptr inbounds i8, i8* %154, i32 %156
  %157 = load i8*, i8** %buf.addr.spec_write.Clone, align 4
  %158 = load i32, i32* %size.addr.spec_write.Clone, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %arrayidx9.spec_write.Clone, i8* align 1 %157, i32 %158, i1 false)
  %159 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %160 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx10.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %160
  %len.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx10.spec_write.Clone, i32 0, i32 1
  %161 = load i32, i32* %len.spec_write.Clone, align 4
  %add.spec_write.Clone = add nsw i32 %161, %159
  store i32 %add.spec_write.Clone, i32* %len.spec_write.Clone, align 4
  %162 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %163 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx11.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %163
  %pos12.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx11.spec_write.Clone, i32 0, i32 2
  %164 = load i32, i32* %pos12.spec_write.Clone, align 4
  %add13.spec_write.Clone = add nsw i32 %164, %162
  store i32 %add13.spec_write.Clone, i32* %pos12.spec_write.Clone, align 4
  %165 = load i32, i32* @dbglvl, align 4
  %cmp14.spec_write.Clone = icmp slt i32 4, %165
  br i1 %cmp14.spec_write.Clone, label %if.then15.spec_write.Clone, label %if.end17.spec_write.Clone

if.then15.spec_write.Clone:                       ; preds = %if.end5.spec_write.Clone
  %166 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %call16.spec_write.Clone = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"??_C@_03PMGGPEJJ@?$CFd?6?$AA@", i32 0, i32 0), i32 %166)
  br label %if.end17.spec_write.Clone

if.end17.spec_write.Clone:                        ; preds = %if.then15.spec_write.Clone, %if.end5.spec_write.Clone
  %167 = load i32, i32* %size.addr.spec_write.Clone, align 4
  store i32 %167, i32* %RetValuePtr87
  br label %while.cond.write_buf.Clone11.Split

while.cond.write_buf.Clone11.Split:               ; preds = %if.end17.spec_write.Clone
  %RetValue88 = load i32, i32* %RetValuePtr87
  store i32 %RetValue88, i32* %n.write_buf.Clone10, align 4
  %168 = load i32, i32* %cnt.addr.write_buf.Clone7, align 4
  %cmp.write_buf.Clone13 = icmp ne i32 %RetValue88, %168
  br i1 %cmp.write_buf.Clone13, label %while.body.write_buf.Clone14, label %while.end.write_buf.Clone20

while.body.write_buf.Clone14:                     ; preds = %while.cond.write_buf.Clone11.Split
  %169 = load i32, i32* %n.write_buf.Clone10, align 4
  %cmp1.write_buf.Clone15 = icmp eq i32 %169, -1
  br i1 %cmp1.write_buf.Clone15, label %if.then.write_buf.Clone16, label %if.end.write_buf.Clone17

if.then.write_buf.Clone16:                        ; preds = %while.body.write_buf.Clone14
  call void @write_error()
  br label %if.end.write_buf.Clone17

if.end.write_buf.Clone17:                         ; preds = %if.then.write_buf.Clone16, %while.body.write_buf.Clone14
  %170 = load i32, i32* %n.write_buf.Clone10, align 4
  %171 = load i32, i32* %cnt.addr.write_buf.Clone7, align 4
  %sub.write_buf.Clone18 = sub i32 %171, %170
  store i32 %sub.write_buf.Clone18, i32* %cnt.addr.write_buf.Clone7, align 4
  %172 = load i8*, i8** %buf.addr.write_buf.Clone8, align 4
  %173 = load i32, i32* %n.write_buf.Clone10, align 4
  %add.ptr.write_buf.Clone19 = getelementptr inbounds i8, i8* %172, i32 %173
  store i8* %add.ptr.write_buf.Clone19, i8** %buf.addr.write_buf.Clone8, align 4
  br label %while.cond.write_buf.Clone11

while.end.write_buf.Clone20:                      ; preds = %while.cond.write_buf.Clone11.Split
  br label %if.then138.Split

if.then138.Split:                                 ; preds = %while.end.write_buf.Clone20
  %174 = load i32, i32* %outpos, align 4
  %175 = load i32, i32* @bytes_out, align 4
  %add139 = add i32 %175, %174
  store i32 %add139, i32* @bytes_out, align 4
  br label %if.end140

if.end140:                                        ; preds = %if.then138.Split, %land.lhs.true135, %if.then133
  %176 = load i32, i32* @to_stdout, align 4
  %tobool141 = icmp ne i32 %176, 0
  %177 = zext i1 %tobool141 to i64
  %cond142 = select i1 %tobool141, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @"??_C@_0P@EPOGKLIC@corrupt?5input?4?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @"??_C@_0CO@MKCGKOLJ@corrupt?5input?4?5Use?5zcat?5to?5recov@", i32 0, i32 0)
  br label %entry.error.Clone

entry.error.Clone:                                ; preds = %if.end140
  %m.addr.error.Clone = alloca i8*, align 4
  store i8* %cond142, i8** %m.addr.error.Clone, align 4
  %178 = load i8*, i8** %m.addr.error.Clone, align 4
  %179 = load i8*, i8** @progname, align 4
  %call.error.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx.error.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.error.Clone, i32 2
  %call1.error.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.error.Clone, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @"??_C@_0N@ODCEBLNH@?6?$CFs?3?5?$CFs?3?5?$CFs?6?$AA@", i32 0, i32 0), i8* %179, i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0), i8* %178)
  br label %entry.abort_gzip.Clone45

entry.abort_gzip.Clone45:                         ; preds = %entry.error.Clone
  %180 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone46 = icmp ne i32 %180, 0
  br i1 %tobool.abort_gzip.Clone46, label %if.then.abort_gzip.Clone47, label %if.end.abort_gzip.Clone50

if.then.abort_gzip.Clone47:                       ; preds = %entry.abort_gzip.Clone45
  %181 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone48 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %181)
  %call1.abort_gzip.Clone49 = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone50

if.end.abort_gzip.Clone50:                        ; preds = %if.then.abort_gzip.Clone47, %entry.abort_gzip.Clone45
  br label %entry.do_exit.Clone

entry.do_exit.Clone:                              ; preds = %if.end.abort_gzip.Clone50
  %exitcode.addr.do_exit.Clone = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone, align 4
  %182 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone = icmp ne i32 %182, 0
  br i1 %tobool.do_exit.Clone, label %if.then.do_exit.Clone, label %if.end.do_exit.Clone

if.then.do_exit.Clone:                            ; preds = %entry.do_exit.Clone
  %183 = load i32, i32* %exitcode.addr.do_exit.Clone, align 4
  call void @exit(i32 %183) #7
  unreachable

if.end.do_exit.Clone:                             ; preds = %entry.do_exit.Clone
  store i32 1, i32* @do_exit.in_exit, align 4
  %184 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone = icmp ne i8* %184, null
  br i1 %cmp.do_exit.Clone, label %if.then1.do_exit.Clone, label %if.end2.do_exit.Clone

if.then1.do_exit.Clone:                           ; preds = %if.end.do_exit.Clone
  %185 = load i8*, i8** @env, align 4
  call void @free(i8* %185) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone

if.end2.do_exit.Clone:                            ; preds = %if.then1.do_exit.Clone, %if.end.do_exit.Clone
  %186 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone = icmp ne i8** %186, null
  br i1 %cmp3.do_exit.Clone, label %if.then4.do_exit.Clone, label %if.end5.do_exit.Clone

if.then4.do_exit.Clone:                           ; preds = %if.end2.do_exit.Clone
  %187 = load i8**, i8*** @args, align 4
  %188 = bitcast i8** %187 to i8*
  call void @free(i8* %188) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone

if.end5.do_exit.Clone:                            ; preds = %if.then4.do_exit.Clone, %if.end2.do_exit.Clone
  %189 = load i32, i32* %exitcode.addr.do_exit.Clone, align 4
  call void @exit(i32 %189) #7
  unreachable

return.do_exit.Clone:                             ; No predecessors!
  br label %if.end.abort_gzip.Clone50.Split

if.end.abort_gzip.Clone50.Split:                  ; preds = %return.do_exit.Clone
  br label %entry.error.Clone.Split

entry.error.Clone.Split:                          ; preds = %if.end.abort_gzip.Clone50.Split
  br label %if.end140.Split

if.end140.Split:                                  ; preds = %entry.error.Clone.Split
  br label %if.end143

if.end143:                                        ; preds = %if.end140.Split, %if.then130
  %190 = load i32, i32* %finchar, align 4
  %conv144 = trunc i32 %190 to i8
  %191 = load i8*, i8** %stackp, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %191, i32 -1
  store i8* %incdec.ptr, i8** %stackp, align 4
  store i8 %conv144, i8* %incdec.ptr, align 1
  %192 = load i32, i32* %oldcode, align 4
  store i32 %192, i32* %code, align 4
  br label %if.end145

if.end145:                                        ; preds = %if.end143, %if.end127
  br label %while.cond146

while.cond146:                                    ; preds = %while.body149, %if.end145
  %193 = load i32, i32* %code, align 4
  %cmp147 = icmp uge i32 %193, 256
  br i1 %cmp147, label %while.body149, label %while.end

while.body149:                                    ; preds = %while.cond146
  %194 = load i32, i32* %code, align 4
  %arrayidx150 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([65536 x i8]* @window to [0 x i8]*), i32 0, i32 %194
  %195 = load i8, i8* %arrayidx150, align 1
  %196 = load i8*, i8** %stackp, align 4
  %incdec.ptr151 = getelementptr inbounds i8, i8* %196, i32 -1
  store i8* %incdec.ptr151, i8** %stackp, align 4
  store i8 %195, i8* %incdec.ptr151, align 1
  %197 = load i32, i32* %code, align 4
  %arrayidx152 = getelementptr inbounds [0 x i16], [0 x i16]* bitcast ([65536 x i16]* @prev to [0 x i16]*), i32 0, i32 %197
  %198 = load i16, i16* %arrayidx152, align 2
  %conv153 = zext i16 %198 to i32
  store i32 %conv153, i32* %code, align 4
  br label %while.cond146

while.end:                                        ; preds = %while.cond146
  %199 = load i32, i32* %code, align 4
  %arrayidx154 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([65536 x i8]* @window to [0 x i8]*), i32 0, i32 %199
  %200 = load i8, i8* %arrayidx154, align 1
  %conv155 = zext i8 %200 to i32
  store i32 %conv155, i32* %finchar, align 4
  %conv156 = trunc i32 %conv155 to i8
  %201 = load i8*, i8** %stackp, align 4
  %incdec.ptr157 = getelementptr inbounds i8, i8* %201, i32 -1
  store i8* %incdec.ptr157, i8** %stackp, align 4
  store i8 %conv156, i8* %incdec.ptr157, align 1
  %202 = load i32, i32* %outpos, align 4
  %203 = load i8*, i8** %stackp, align 4
  %sub.ptr.rhs.cast = ptrtoint i8* %203 to i32
  %sub.ptr.sub = sub i32 ptrtoint (i16* getelementptr inbounds ([32768 x i16], [32768 x i16]* @d_buf, i32 0, i32 32767) to i32), %sub.ptr.rhs.cast
  store i32 %sub.ptr.sub, i32* %i158, align 4
  %add159 = add nsw i32 %202, %sub.ptr.sub
  %cmp160 = icmp sge i32 %add159, 16384
  br i1 %cmp160, label %if.then162, label %if.else189

if.then162:                                       ; preds = %while.end
  br label %do.body163

do.body163:                                       ; preds = %do.cond, %if.then162
  %204 = load i32, i32* %i158, align 4
  %205 = load i32, i32* %outpos, align 4
  %sub164 = sub nsw i32 16384, %205
  %cmp165 = icmp sgt i32 %204, %sub164
  br i1 %cmp165, label %if.then167, label %if.end169

if.then167:                                       ; preds = %do.body163
  %206 = load i32, i32* %outpos, align 4
  %sub168 = sub nsw i32 16384, %206
  store i32 %sub168, i32* %i158, align 4
  br label %if.end169

if.end169:                                        ; preds = %if.then167, %do.body163
  %207 = load i32, i32* %i158, align 4
  %cmp170 = icmp sgt i32 %207, 0
  br i1 %cmp170, label %if.then172, label %CallOutFuncBB

if.then172:                                       ; preds = %if.end169
  %208 = load i32, i32* %outpos, align 4
  %add.ptr173 = getelementptr inbounds i8, i8* getelementptr inbounds ([18432 x i8], [18432 x i8]* @outbuf, i32 0, i32 0), i32 %208
  %209 = load i8*, i8** %stackp, align 4
  %210 = load i32, i32* %i158, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %add.ptr173, i8* align 1 %209, i32 %210, i1 false)
  %211 = load i32, i32* %i158, align 4
  %212 = load i32, i32* %outpos, align 4
  %add174 = add nsw i32 %212, %211
  store i32 %add174, i32* %outpos, align 4
  br label %CallOutFuncBB

CallOutFuncBB:                                    ; preds = %if.end169, %if.then172
  call void @if.end175.OutLineFunc(i32* %outpos, i32* %out.addr, i32* %i158, i8** %stackp)
  %213 = getelementptr inbounds %Struct.RetValue.37, %Struct.RetValue.37* @Struct.RetValue.47, i32 0, i32 0
  %214 = load i32*, i32** %213, align 4
  %215 = load i32, i32* %214, align 4
  store i32 %215, i32* %outpos
  %216 = getelementptr inbounds %Struct.RetValue.37, %Struct.RetValue.37* @Struct.RetValue.47, i32 0, i32 1
  %217 = load i8**, i8*** %216, align 4
  %218 = load i8*, i8** %217, align 4
  store i8* %218, i8** %stackp
  br label %do.cond

do.cond:                                          ; preds = %CallOutFuncBB
  %219 = load i8*, i8** %stackp, align 4
  %sub.ptr.rhs.cast185 = ptrtoint i8* %219 to i32
  %sub.ptr.sub186 = sub i32 ptrtoint (i16* getelementptr inbounds ([32768 x i16], [32768 x i16]* @d_buf, i32 0, i32 32767) to i32), %sub.ptr.rhs.cast185
  store i32 %sub.ptr.sub186, i32* %i158, align 4
  %cmp187 = icmp sgt i32 %sub.ptr.sub186, 0
  br i1 %cmp187, label %do.body163, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end192

if.else189:                                       ; preds = %while.end
  %220 = load i32, i32* %outpos, align 4
  %add.ptr190 = getelementptr inbounds i8, i8* getelementptr inbounds ([18432 x i8], [18432 x i8]* @outbuf, i32 0, i32 0), i32 %220
  %221 = load i8*, i8** %stackp, align 4
  %222 = load i32, i32* %i158, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %add.ptr190, i8* align 1 %221, i32 %222, i1 false)
  %223 = load i32, i32* %i158, align 4
  %224 = load i32, i32* %outpos, align 4
  %add191 = add nsw i32 %224, %223
  store i32 %add191, i32* %outpos, align 4
  br label %if.end192

if.end192:                                        ; preds = %if.else189, %do.end
  %225 = load i32, i32* %free_ent, align 4
  store i32 %225, i32* %code, align 4
  %226 = load i32, i32* %maxmaxcode, align 4
  %cmp193 = icmp slt i32 %225, %226
  br i1 %cmp193, label %if.then195, label %if.end201

if.then195:                                       ; preds = %if.end192
  %227 = load i32, i32* %oldcode, align 4
  %conv196 = trunc i32 %227 to i16
  %228 = load i32, i32* %code, align 4
  %arrayidx197 = getelementptr inbounds [0 x i16], [0 x i16]* bitcast ([65536 x i16]* @prev to [0 x i16]*), i32 0, i32 %228
  store i16 %conv196, i16* %arrayidx197, align 2
  %229 = load i32, i32* %finchar, align 4
  %conv198 = trunc i32 %229 to i8
  %230 = load i32, i32* %code, align 4
  %arrayidx199 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([65536 x i8]* @window to [0 x i8]*), i32 0, i32 %230
  store i8 %conv198, i8* %arrayidx199, align 1
  %231 = load i32, i32* %code, align 4
  %add200 = add nsw i32 %231, 1
  store i32 %add200, i32* %free_ent, align 4
  br label %if.end201

if.end201:                                        ; preds = %if.then195, %if.end192
  %232 = load i32, i32* %incode, align 4
  store i32 %232, i32* %oldcode, align 4
  br label %while.cond

while.end202:                                     ; preds = %while.cond
  br label %do.cond203

do.cond203:                                       ; preds = %while.end202
  %233 = load i32, i32* %rsize, align 4
  %cmp204 = icmp ne i32 %233, 0
  br i1 %cmp204, label %do.body, label %do.end206

do.end206:                                        ; preds = %do.cond203
  %234 = load i32, i32* @test, align 4
  %tobool207 = icmp ne i32 %234, 0
  br i1 %tobool207, label %if.end213, label %land.lhs.true208

land.lhs.true208:                                 ; preds = %do.end206
  %235 = load i32, i32* %outpos, align 4
  %cmp209 = icmp sgt i32 %235, 0
  br i1 %cmp209, label %if.then211, label %if.end213

if.then211:                                       ; preds = %land.lhs.true208
  %236 = load i32, i32* %outpos, align 4
  %237 = load i32, i32* %out.addr, align 4
  br label %entry.write_buf.Clone

entry.write_buf.Clone:                            ; preds = %if.then211
  %cnt.addr.write_buf.Clone = alloca i32, align 4
  %buf.addr.write_buf.Clone = alloca i8*, align 4
  %fd.addr.write_buf.Clone = alloca i32, align 4
  %n.write_buf.Clone = alloca i32, align 4
  store i32 %236, i32* %cnt.addr.write_buf.Clone, align 4
  store i8* getelementptr inbounds ([18432 x i8], [18432 x i8]* @outbuf, i32 0, i32 0), i8** %buf.addr.write_buf.Clone, align 4
  store i32 %237, i32* %fd.addr.write_buf.Clone, align 4
  br label %while.cond.write_buf.Clone

while.cond.write_buf.Clone:                       ; preds = %if.end.write_buf.Clone, %entry.write_buf.Clone
  %238 = load i32, i32* %cnt.addr.write_buf.Clone, align 4
  %239 = load i8*, i8** %buf.addr.write_buf.Clone, align 4
  %240 = load i32, i32* %fd.addr.write_buf.Clone, align 4
  br label %entry.spec_write.Clone89

entry.spec_write.Clone89:                         ; preds = %while.cond.write_buf.Clone
  %size.addr.spec_write.Clone90 = alloca i32, align 4
  %buf.addr.spec_write.Clone91 = alloca i8*, align 4
  %fd.addr.spec_write.Clone92 = alloca i32, align 4
  store i32 %238, i32* %size.addr.spec_write.Clone90, align 4
  store i8* %239, i8** %buf.addr.spec_write.Clone91, align 4
  store i32 %240, i32* %fd.addr.spec_write.Clone92, align 4
  %241 = load i32, i32* @dbglvl, align 4
  %cmp.spec_write.Clone93 = icmp slt i32 4, %241
  br i1 %cmp.spec_write.Clone93, label %if.then.spec_write.Clone94, label %if.end.spec_write.Clone96

if.then.spec_write.Clone94:                       ; preds = %entry.spec_write.Clone89
  %242 = load i32, i32* %size.addr.spec_write.Clone90, align 4
  %243 = load i8*, i8** %buf.addr.spec_write.Clone91, align 4
  %244 = load i32, i32* %fd.addr.spec_write.Clone92, align 4
  %call.spec_write.Clone95 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @"??_C@_0BK@GKFGHPHN@spec_write?3?5?$CFd?0?5?$CFx?0?5?$CFd?5?$DN?5?$AA@", i32 0, i32 0), i32 %244, i8* %243, i32 %242)
  br label %if.end.spec_write.Clone96

if.end.spec_write.Clone96:                        ; preds = %if.then.spec_write.Clone94, %entry.spec_write.Clone89
  %245 = load i32, i32* %fd.addr.spec_write.Clone92, align 4
  %cmp1.spec_write.Clone97 = icmp sgt i32 %245, 3
  br i1 %cmp1.spec_write.Clone97, label %if.then2.spec_write.Clone98, label %if.end5.spec_write.Clone102

if.then2.spec_write.Clone98:                      ; preds = %if.end.spec_write.Clone96
  %246 = load i32, i32* %fd.addr.spec_write.Clone92, align 4
  %call3.spec_write.Clone99 = call %struct._iobuf* @__iob_func()
  %arrayidx.spec_write.Clone100 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.spec_write.Clone99, i32 2
  %call4.spec_write.Clone101 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.spec_write.Clone100, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"??_C@_0CD@NANFEFEM@spec_write?3?5fd?$DN?$CFd?0?5?$DO?5MAX_SPEC_FD@", i32 0, i32 0), i32 %246)
  call void @exit(i32 1) #7
  unreachable

if.end5.spec_write.Clone102:                      ; preds = %if.end.spec_write.Clone96
  %247 = load i32, i32* %fd.addr.spec_write.Clone92, align 4
  %arrayidx6.spec_write.Clone103 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %247
  %buf7.spec_write.Clone104 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx6.spec_write.Clone103, i32 0, i32 3
  %248 = load i8*, i8** %buf7.spec_write.Clone104, align 4
  %249 = load i32, i32* %fd.addr.spec_write.Clone92, align 4
  %arrayidx8.spec_write.Clone105 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %249
  %pos.spec_write.Clone106 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx8.spec_write.Clone105, i32 0, i32 2
  %250 = load i32, i32* %pos.spec_write.Clone106, align 4
  %arrayidx9.spec_write.Clone107 = getelementptr inbounds i8, i8* %248, i32 %250
  %251 = load i8*, i8** %buf.addr.spec_write.Clone91, align 4
  %252 = load i32, i32* %size.addr.spec_write.Clone90, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %arrayidx9.spec_write.Clone107, i8* align 1 %251, i32 %252, i1 false)
  %253 = load i32, i32* %size.addr.spec_write.Clone90, align 4
  %254 = load i32, i32* %fd.addr.spec_write.Clone92, align 4
  %arrayidx10.spec_write.Clone108 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %254
  %len.spec_write.Clone109 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx10.spec_write.Clone108, i32 0, i32 1
  %255 = load i32, i32* %len.spec_write.Clone109, align 4
  %add.spec_write.Clone110 = add nsw i32 %255, %253
  store i32 %add.spec_write.Clone110, i32* %len.spec_write.Clone109, align 4
  %256 = load i32, i32* %size.addr.spec_write.Clone90, align 4
  %257 = load i32, i32* %fd.addr.spec_write.Clone92, align 4
  %arrayidx11.spec_write.Clone111 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %257
  %pos12.spec_write.Clone112 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx11.spec_write.Clone111, i32 0, i32 2
  %258 = load i32, i32* %pos12.spec_write.Clone112, align 4
  %add13.spec_write.Clone113 = add nsw i32 %258, %256
  store i32 %add13.spec_write.Clone113, i32* %pos12.spec_write.Clone112, align 4
  %259 = load i32, i32* @dbglvl, align 4
  %cmp14.spec_write.Clone114 = icmp slt i32 4, %259
  br i1 %cmp14.spec_write.Clone114, label %if.then15.spec_write.Clone115, label %if.end17.spec_write.Clone117

if.then15.spec_write.Clone115:                    ; preds = %if.end5.spec_write.Clone102
  %260 = load i32, i32* %size.addr.spec_write.Clone90, align 4
  %call16.spec_write.Clone116 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"??_C@_03PMGGPEJJ@?$CFd?6?$AA@", i32 0, i32 0), i32 %260)
  br label %if.end17.spec_write.Clone117

if.end17.spec_write.Clone117:                     ; preds = %if.then15.spec_write.Clone115, %if.end5.spec_write.Clone102
  %261 = load i32, i32* %size.addr.spec_write.Clone90, align 4
  store i32 %261, i32* %RetValuePtr118
  br label %while.cond.write_buf.Clone.Split

while.cond.write_buf.Clone.Split:                 ; preds = %if.end17.spec_write.Clone117
  %RetValue119 = load i32, i32* %RetValuePtr118
  store i32 %RetValue119, i32* %n.write_buf.Clone, align 4
  %262 = load i32, i32* %cnt.addr.write_buf.Clone, align 4
  %cmp.write_buf.Clone = icmp ne i32 %RetValue119, %262
  br i1 %cmp.write_buf.Clone, label %while.body.write_buf.Clone, label %while.end.write_buf.Clone

while.body.write_buf.Clone:                       ; preds = %while.cond.write_buf.Clone.Split
  %263 = load i32, i32* %n.write_buf.Clone, align 4
  %cmp1.write_buf.Clone = icmp eq i32 %263, -1
  br i1 %cmp1.write_buf.Clone, label %if.then.write_buf.Clone, label %if.end.write_buf.Clone

if.then.write_buf.Clone:                          ; preds = %while.body.write_buf.Clone
  call void @write_error()
  br label %if.end.write_buf.Clone

if.end.write_buf.Clone:                           ; preds = %if.then.write_buf.Clone, %while.body.write_buf.Clone
  %264 = load i32, i32* %n.write_buf.Clone, align 4
  %265 = load i32, i32* %cnt.addr.write_buf.Clone, align 4
  %sub.write_buf.Clone = sub i32 %265, %264
  store i32 %sub.write_buf.Clone, i32* %cnt.addr.write_buf.Clone, align 4
  %266 = load i8*, i8** %buf.addr.write_buf.Clone, align 4
  %267 = load i32, i32* %n.write_buf.Clone, align 4
  %add.ptr.write_buf.Clone = getelementptr inbounds i8, i8* %266, i32 %267
  store i8* %add.ptr.write_buf.Clone, i8** %buf.addr.write_buf.Clone, align 4
  br label %while.cond.write_buf.Clone

while.end.write_buf.Clone:                        ; preds = %while.cond.write_buf.Clone.Split
  br label %if.then211.Split

if.then211.Split:                                 ; preds = %while.end.write_buf.Clone
  %268 = load i32, i32* %outpos, align 4
  %269 = load i32, i32* @bytes_out, align 4
  %add212 = add i32 %269, %268
  store i32 %add212, i32* @bytes_out, align 4
  br label %if.end213

if.end213:                                        ; preds = %if.then211.Split, %land.lhs.true208, %do.end206
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end213, %if.then17
  %270 = load i32, i32* %retval, align 4
  ret i32 %270
}

; Function Attrs: noinline optnone sspstrong
define dso_local i32 @unpack(i32 %in, i32 %out) #1 {
entry:
  %out.addr = alloca i32, align 4
  %in.addr = alloca i32, align 4
  %len = alloca i32, align 4
  %eob = alloca i32, align 4
  %peek = alloca i32, align 4
  %peek_mask = alloca i32, align 4
  %mask = alloca i32, align 4
  store i32 %out, i32* %out.addr, align 4
  store i32 %in, i32* %in.addr, align 4
  %0 = load i32, i32* %in.addr, align 4
  store i32 %0, i32* @ifd, align 4
  %1 = load i32, i32* %out.addr, align 4
  store i32 %1, i32* @ofd, align 4
  call void @read_tree()
  call void @build_tree.19()
  store i32 0, i32* @valid, align 4
  store i32 0, i32* @bitbuf.20, align 4
  %2 = load i32, i32* @peek_bits, align 4
  %shl = shl i32 1, %2
  %sub = sub nsw i32 %shl, 1
  store i32 %sub, i32* %peek_mask, align 4
  %3 = load i32, i32* @max_len, align 4
  %arrayidx = getelementptr inbounds [26 x i32], [26 x i32]* @leaves, i32 0, i32 %3
  %4 = load i32, i32* %arrayidx, align 4
  %sub1 = sub nsw i32 %4, 1
  store i32 %sub1, i32* %eob, align 4
  %RetValuePtr = alloca i32, align 4
  %RetValuePtr28 = alloca i32, align 4
  %RetValuePtr30 = alloca i32, align 4
  %RetValuePtr80 = alloca i32, align 4
  br label %for.cond

for.cond:                                         ; preds = %CallOutFuncBB, %entry
  br label %while.cond

while.cond:                                       ; preds = %cond.end, %for.cond
  %5 = load i32, i32* @valid, align 4
  %6 = load i32, i32* @peek_bits, align 4
  %cmp = icmp slt i32 %5, %6
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %7 = load i32, i32* @bitbuf.20, align 4
  %shl2 = shl i32 %7, 8
  %8 = load i32, i32* @inptr, align 4
  %9 = load i32, i32* @insize, align 4
  %cmp3 = icmp ult i32 %8, %9
  br i1 %cmp3, label %cond.true, label %cond.false

cond.true:                                        ; preds = %while.body
  %10 = load i32, i32* @inptr, align 4
  %inc = add i32 %10, 1
  store i32 %inc, i32* @inptr, align 4
  %arrayidx4 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i32 0, i32 %10
  %11 = load i8, i8* %arrayidx4, align 1
  %conv = zext i8 %11 to i32
  br label %cond.end

cond.false:                                       ; preds = %while.body
  br label %entry.fill_inbuf.Clone1

entry.fill_inbuf.Clone1:                          ; preds = %cond.false
  %retval.fill_inbuf.Clone2 = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone3 = alloca i32, align 4
  %len.fill_inbuf.Clone4 = alloca i32, align 4
  store i32 0, i32* %eof_ok.addr.fill_inbuf.Clone3, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone5 = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone5, align 4
  br label %do.body.fill_inbuf.Clone6

do.body.fill_inbuf.Clone6:                        ; preds = %do.cond.fill_inbuf.Clone16, %entry.fill_inbuf.Clone1
  %12 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone7 = sub i32 32768, %12
  %13 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone8 = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %13
  %14 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone9 = call i32 @spec_read(i32 %14, i8* %add.ptr.fill_inbuf.Clone8, i32 %sub.fill_inbuf.Clone7)
  store i32 %call1.fill_inbuf.Clone9, i32* %len.fill_inbuf.Clone4, align 4
  %15 = load i32, i32* %len.fill_inbuf.Clone4, align 4
  %cmp.fill_inbuf.Clone10 = icmp eq i32 %15, 0
  br i1 %cmp.fill_inbuf.Clone10, label %if.then.fill_inbuf.Clone13, label %lor.lhs.false.fill_inbuf.Clone11

lor.lhs.false.fill_inbuf.Clone11:                 ; preds = %do.body.fill_inbuf.Clone6
  %16 = load i32, i32* %len.fill_inbuf.Clone4, align 4
  %cmp2.fill_inbuf.Clone12 = icmp eq i32 %16, -1
  br i1 %cmp2.fill_inbuf.Clone12, label %if.then.fill_inbuf.Clone13, label %if.end.fill_inbuf.Clone14

if.then.fill_inbuf.Clone13:                       ; preds = %lor.lhs.false.fill_inbuf.Clone11, %do.body.fill_inbuf.Clone6
  br label %do.end.fill_inbuf.Clone18

if.end.fill_inbuf.Clone14:                        ; preds = %lor.lhs.false.fill_inbuf.Clone11
  %17 = load i32, i32* %len.fill_inbuf.Clone4, align 4
  %18 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone15 = add i32 %18, %17
  store i32 %add.fill_inbuf.Clone15, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone16

do.cond.fill_inbuf.Clone16:                       ; preds = %if.end.fill_inbuf.Clone14
  %19 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone17 = icmp ult i32 %19, 32768
  br i1 %cmp3.fill_inbuf.Clone17, label %do.body.fill_inbuf.Clone6, label %do.end.fill_inbuf.Clone18

do.end.fill_inbuf.Clone18:                        ; preds = %do.cond.fill_inbuf.Clone16, %if.then.fill_inbuf.Clone13
  %20 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone19 = icmp eq i32 %20, 0
  br i1 %cmp4.fill_inbuf.Clone19, label %if.then5.fill_inbuf.Clone20, label %if.end8.fill_inbuf.Clone24

if.then5.fill_inbuf.Clone20:                      ; preds = %do.end.fill_inbuf.Clone18
  %21 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone3, align 4
  %tobool.fill_inbuf.Clone21 = icmp ne i32 %21, 0
  br i1 %tobool.fill_inbuf.Clone21, label %if.then6.fill_inbuf.Clone22, label %if.end7.fill_inbuf.Clone23

if.then6.fill_inbuf.Clone22:                      ; preds = %if.then5.fill_inbuf.Clone20
  store i32 -1, i32* %retval.fill_inbuf.Clone2, align 4
  br label %return.fill_inbuf.Clone27

if.end7.fill_inbuf.Clone23:                       ; preds = %if.then5.fill_inbuf.Clone20
  br label %entry.read_error.Clone

entry.read_error.Clone:                           ; preds = %if.end7.fill_inbuf.Clone23
  %22 = load i8*, i8** @progname, align 4
  %call.read_error.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone, i32 2
  %call1.read_error.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %22)
  %call2.read_error.Clone = call i32* @_errno()
  %23 = load i32, i32* %call2.read_error.Clone, align 4
  %cmp.read_error.Clone = icmp ne i32 %23, 0
  br i1 %cmp.read_error.Clone, label %if.then.read_error.Clone, label %if.else.read_error.Clone

if.then.read_error.Clone:                         ; preds = %entry.read_error.Clone
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone

if.else.read_error.Clone:                         ; preds = %entry.read_error.Clone
  %call3.read_error.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone, i32 2
  %call5.read_error.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone

if.end.read_error.Clone:                          ; preds = %if.else.read_error.Clone, %if.then.read_error.Clone
  br label %entry.abort_gzip.Clone44

entry.abort_gzip.Clone44:                         ; preds = %if.end.read_error.Clone
  %24 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone45 = icmp ne i32 %24, 0
  br i1 %tobool.abort_gzip.Clone45, label %if.then.abort_gzip.Clone46, label %if.end.abort_gzip.Clone49

if.then.abort_gzip.Clone46:                       ; preds = %entry.abort_gzip.Clone44
  %25 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone47 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %25)
  %call1.abort_gzip.Clone48 = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone49

if.end.abort_gzip.Clone49:                        ; preds = %if.then.abort_gzip.Clone46, %entry.abort_gzip.Clone44
  br label %entry.do_exit.Clone56

entry.do_exit.Clone56:                            ; preds = %if.end.abort_gzip.Clone49
  %exitcode.addr.do_exit.Clone57 = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone57, align 4
  %26 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone58 = icmp ne i32 %26, 0
  br i1 %tobool.do_exit.Clone58, label %if.then.do_exit.Clone59, label %if.end.do_exit.Clone60

if.then.do_exit.Clone59:                          ; preds = %entry.do_exit.Clone56
  %27 = load i32, i32* %exitcode.addr.do_exit.Clone57, align 4
  call void @exit(i32 %27) #7
  unreachable

if.end.do_exit.Clone60:                           ; preds = %entry.do_exit.Clone56
  store i32 1, i32* @do_exit.in_exit, align 4
  %28 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone61 = icmp ne i8* %28, null
  br i1 %cmp.do_exit.Clone61, label %if.then1.do_exit.Clone62, label %if.end2.do_exit.Clone63

if.then1.do_exit.Clone62:                         ; preds = %if.end.do_exit.Clone60
  %29 = load i8*, i8** @env, align 4
  call void @free(i8* %29) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone63

if.end2.do_exit.Clone63:                          ; preds = %if.then1.do_exit.Clone62, %if.end.do_exit.Clone60
  %30 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone64 = icmp ne i8** %30, null
  br i1 %cmp3.do_exit.Clone64, label %if.then4.do_exit.Clone65, label %if.end5.do_exit.Clone66

if.then4.do_exit.Clone65:                         ; preds = %if.end2.do_exit.Clone63
  %31 = load i8**, i8*** @args, align 4
  %32 = bitcast i8** %31 to i8*
  call void @free(i8* %32) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone66

if.end5.do_exit.Clone66:                          ; preds = %if.then4.do_exit.Clone65, %if.end2.do_exit.Clone63
  %33 = load i32, i32* %exitcode.addr.do_exit.Clone57, align 4
  call void @exit(i32 %33) #7
  unreachable

return.do_exit.Clone67:                           ; No predecessors!
  br label %if.end.abort_gzip.Clone49.Split

if.end.abort_gzip.Clone49.Split:                  ; preds = %return.do_exit.Clone67
  br label %if.end.read_error.Clone.Split

if.end.read_error.Clone.Split:                    ; preds = %if.end.abort_gzip.Clone49.Split
  br label %if.end7.fill_inbuf.Clone23.Split

if.end7.fill_inbuf.Clone23.Split:                 ; preds = %if.end.read_error.Clone.Split
  br label %if.end8.fill_inbuf.Clone24

if.end8.fill_inbuf.Clone24:                       ; preds = %if.end7.fill_inbuf.Clone23.Split, %do.end.fill_inbuf.Clone18
  %34 = load i32, i32* @insize, align 4
  %35 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone25 = add i32 %35, %34
  store i32 %add9.fill_inbuf.Clone25, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %36 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone26 = zext i8 %36 to i32
  store i32 %conv.fill_inbuf.Clone26, i32* %retval.fill_inbuf.Clone2, align 4
  br label %return.fill_inbuf.Clone27

return.fill_inbuf.Clone27:                        ; preds = %if.end8.fill_inbuf.Clone24, %if.then6.fill_inbuf.Clone22
  %37 = load i32, i32* %retval.fill_inbuf.Clone2, align 4
  store i32 %37, i32* %RetValuePtr28
  br label %cond.false.Split

cond.false.Split:                                 ; preds = %return.fill_inbuf.Clone27
  %RetValue29 = load i32, i32* %RetValuePtr28
  br label %cond.end

cond.end:                                         ; preds = %cond.false.Split, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %RetValue29, %cond.false.Split ]
  %or = or i32 %shl2, %cond
  store i32 %or, i32* @bitbuf.20, align 4
  %38 = load i32, i32* @valid, align 4
  %add = add nsw i32 %38, 8
  store i32 %add, i32* @valid, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %39 = load i32, i32* @bitbuf.20, align 4
  %40 = load i32, i32* @valid, align 4
  %41 = load i32, i32* @peek_bits, align 4
  %sub5 = sub nsw i32 %40, %41
  %shr = lshr i32 %39, %sub5
  %42 = load i32, i32* %peek_mask, align 4
  %and = and i32 %shr, %42
  store i32 %and, i32* %peek, align 4
  %43 = load i32, i32* %peek, align 4
  %arrayidx6 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i32 0, i32 %43
  %44 = load i8, i8* %arrayidx6, align 1
  %conv7 = zext i8 %44 to i32
  store i32 %conv7, i32* %len, align 4
  %45 = load i32, i32* %len, align 4
  %cmp8 = icmp sgt i32 %45, 0
  br i1 %cmp8, label %if.then, label %if.else

if.then:                                          ; preds = %while.end
  %46 = load i32, i32* @peek_bits, align 4
  %47 = load i32, i32* %len, align 4
  %sub10 = sub nsw i32 %46, %47
  %48 = load i32, i32* %peek, align 4
  %shr11 = lshr i32 %48, %sub10
  store i32 %shr11, i32* %peek, align 4
  br label %if.end

if.else:                                          ; preds = %while.end
  %49 = load i32, i32* %peek_mask, align 4
  store i32 %49, i32* %mask, align 4
  %50 = load i32, i32* @peek_bits, align 4
  store i32 %50, i32* %len, align 4
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.else
  %51 = load i32, i32* %len, align 4
  %inc12 = add nsw i32 %51, 1
  store i32 %inc12, i32* %len, align 4
  %52 = load i32, i32* %mask, align 4
  %shl13 = shl i32 %52, 1
  %add14 = add i32 %shl13, 1
  store i32 %add14, i32* %mask, align 4
  br label %while.cond15

while.cond15:                                     ; preds = %cond.end28, %do.body
  %53 = load i32, i32* @valid, align 4
  %54 = load i32, i32* %len, align 4
  %cmp16 = icmp slt i32 %53, %54
  br i1 %cmp16, label %while.body18, label %while.end32

while.body18:                                     ; preds = %while.cond15
  %55 = load i32, i32* @bitbuf.20, align 4
  %shl19 = shl i32 %55, 8
  %56 = load i32, i32* @inptr, align 4
  %57 = load i32, i32* @insize, align 4
  %cmp20 = icmp ult i32 %56, %57
  br i1 %cmp20, label %cond.true22, label %cond.false26

cond.true22:                                      ; preds = %while.body18
  %58 = load i32, i32* @inptr, align 4
  %inc23 = add i32 %58, 1
  store i32 %inc23, i32* @inptr, align 4
  %arrayidx24 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i32 0, i32 %58
  %59 = load i8, i8* %arrayidx24, align 1
  %conv25 = zext i8 %59 to i32
  br label %cond.end28

cond.false26:                                     ; preds = %while.body18
  br label %entry.fill_inbuf.Clone

entry.fill_inbuf.Clone:                           ; preds = %cond.false26
  %retval.fill_inbuf.Clone = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone = alloca i32, align 4
  %len.fill_inbuf.Clone = alloca i32, align 4
  store i32 0, i32* %eof_ok.addr.fill_inbuf.Clone, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone, align 4
  br label %do.body.fill_inbuf.Clone

do.body.fill_inbuf.Clone:                         ; preds = %do.cond.fill_inbuf.Clone, %entry.fill_inbuf.Clone
  %60 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone = sub i32 32768, %60
  %61 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %61
  %62 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone = call i32 @spec_read(i32 %62, i8* %add.ptr.fill_inbuf.Clone, i32 %sub.fill_inbuf.Clone)
  store i32 %call1.fill_inbuf.Clone, i32* %len.fill_inbuf.Clone, align 4
  %63 = load i32, i32* %len.fill_inbuf.Clone, align 4
  %cmp.fill_inbuf.Clone = icmp eq i32 %63, 0
  br i1 %cmp.fill_inbuf.Clone, label %if.then.fill_inbuf.Clone, label %lor.lhs.false.fill_inbuf.Clone

lor.lhs.false.fill_inbuf.Clone:                   ; preds = %do.body.fill_inbuf.Clone
  %64 = load i32, i32* %len.fill_inbuf.Clone, align 4
  %cmp2.fill_inbuf.Clone = icmp eq i32 %64, -1
  br i1 %cmp2.fill_inbuf.Clone, label %if.then.fill_inbuf.Clone, label %if.end.fill_inbuf.Clone

if.then.fill_inbuf.Clone:                         ; preds = %lor.lhs.false.fill_inbuf.Clone, %do.body.fill_inbuf.Clone
  br label %do.end.fill_inbuf.Clone

if.end.fill_inbuf.Clone:                          ; preds = %lor.lhs.false.fill_inbuf.Clone
  %65 = load i32, i32* %len.fill_inbuf.Clone, align 4
  %66 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone = add i32 %66, %65
  store i32 %add.fill_inbuf.Clone, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone

do.cond.fill_inbuf.Clone:                         ; preds = %if.end.fill_inbuf.Clone
  %67 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone = icmp ult i32 %67, 32768
  br i1 %cmp3.fill_inbuf.Clone, label %do.body.fill_inbuf.Clone, label %do.end.fill_inbuf.Clone

do.end.fill_inbuf.Clone:                          ; preds = %do.cond.fill_inbuf.Clone, %if.then.fill_inbuf.Clone
  %68 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone = icmp eq i32 %68, 0
  br i1 %cmp4.fill_inbuf.Clone, label %if.then5.fill_inbuf.Clone, label %if.end8.fill_inbuf.Clone

if.then5.fill_inbuf.Clone:                        ; preds = %do.end.fill_inbuf.Clone
  %69 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone, align 4
  %tobool.fill_inbuf.Clone = icmp ne i32 %69, 0
  br i1 %tobool.fill_inbuf.Clone, label %if.then6.fill_inbuf.Clone, label %if.end7.fill_inbuf.Clone

if.then6.fill_inbuf.Clone:                        ; preds = %if.then5.fill_inbuf.Clone
  store i32 -1, i32* %retval.fill_inbuf.Clone, align 4
  br label %return.fill_inbuf.Clone

if.end7.fill_inbuf.Clone:                         ; preds = %if.then5.fill_inbuf.Clone
  br label %entry.read_error.Clone32

entry.read_error.Clone32:                         ; preds = %if.end7.fill_inbuf.Clone
  %70 = load i8*, i8** @progname, align 4
  %call.read_error.Clone33 = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone34 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone33, i32 2
  %call1.read_error.Clone35 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone34, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %70)
  %call2.read_error.Clone36 = call i32* @_errno()
  %71 = load i32, i32* %call2.read_error.Clone36, align 4
  %cmp.read_error.Clone37 = icmp ne i32 %71, 0
  br i1 %cmp.read_error.Clone37, label %if.then.read_error.Clone38, label %if.else.read_error.Clone39

if.then.read_error.Clone38:                       ; preds = %entry.read_error.Clone32
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone43

if.else.read_error.Clone39:                       ; preds = %entry.read_error.Clone32
  %call3.read_error.Clone40 = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone41 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone40, i32 2
  %call5.read_error.Clone42 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone41, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone43

if.end.read_error.Clone43:                        ; preds = %if.else.read_error.Clone39, %if.then.read_error.Clone38
  br label %entry.abort_gzip.Clone

entry.abort_gzip.Clone:                           ; preds = %if.end.read_error.Clone43
  %72 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone = icmp ne i32 %72, 0
  br i1 %tobool.abort_gzip.Clone, label %if.then.abort_gzip.Clone, label %if.end.abort_gzip.Clone

if.then.abort_gzip.Clone:                         ; preds = %entry.abort_gzip.Clone
  %73 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %73)
  %call1.abort_gzip.Clone = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone

if.end.abort_gzip.Clone:                          ; preds = %if.then.abort_gzip.Clone, %entry.abort_gzip.Clone
  br label %entry.do_exit.Clone68

entry.do_exit.Clone68:                            ; preds = %if.end.abort_gzip.Clone
  %exitcode.addr.do_exit.Clone69 = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone69, align 4
  %74 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone70 = icmp ne i32 %74, 0
  br i1 %tobool.do_exit.Clone70, label %if.then.do_exit.Clone71, label %if.end.do_exit.Clone72

if.then.do_exit.Clone71:                          ; preds = %entry.do_exit.Clone68
  %75 = load i32, i32* %exitcode.addr.do_exit.Clone69, align 4
  call void @exit(i32 %75) #7
  unreachable

if.end.do_exit.Clone72:                           ; preds = %entry.do_exit.Clone68
  store i32 1, i32* @do_exit.in_exit, align 4
  %76 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone73 = icmp ne i8* %76, null
  br i1 %cmp.do_exit.Clone73, label %if.then1.do_exit.Clone74, label %if.end2.do_exit.Clone75

if.then1.do_exit.Clone74:                         ; preds = %if.end.do_exit.Clone72
  %77 = load i8*, i8** @env, align 4
  call void @free(i8* %77) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone75

if.end2.do_exit.Clone75:                          ; preds = %if.then1.do_exit.Clone74, %if.end.do_exit.Clone72
  %78 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone76 = icmp ne i8** %78, null
  br i1 %cmp3.do_exit.Clone76, label %if.then4.do_exit.Clone77, label %if.end5.do_exit.Clone78

if.then4.do_exit.Clone77:                         ; preds = %if.end2.do_exit.Clone75
  %79 = load i8**, i8*** @args, align 4
  %80 = bitcast i8** %79 to i8*
  call void @free(i8* %80) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone78

if.end5.do_exit.Clone78:                          ; preds = %if.then4.do_exit.Clone77, %if.end2.do_exit.Clone75
  %81 = load i32, i32* %exitcode.addr.do_exit.Clone69, align 4
  call void @exit(i32 %81) #7
  unreachable

return.do_exit.Clone79:                           ; No predecessors!
  br label %if.end.abort_gzip.Clone.Split

if.end.abort_gzip.Clone.Split:                    ; preds = %return.do_exit.Clone79
  br label %if.end.read_error.Clone43.Split

if.end.read_error.Clone43.Split:                  ; preds = %if.end.abort_gzip.Clone.Split
  br label %if.end7.fill_inbuf.Clone.Split

if.end7.fill_inbuf.Clone.Split:                   ; preds = %if.end.read_error.Clone43.Split
  br label %if.end8.fill_inbuf.Clone

if.end8.fill_inbuf.Clone:                         ; preds = %if.end7.fill_inbuf.Clone.Split, %do.end.fill_inbuf.Clone
  %82 = load i32, i32* @insize, align 4
  %83 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone = add i32 %83, %82
  store i32 %add9.fill_inbuf.Clone, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %84 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone = zext i8 %84 to i32
  store i32 %conv.fill_inbuf.Clone, i32* %retval.fill_inbuf.Clone, align 4
  br label %return.fill_inbuf.Clone

return.fill_inbuf.Clone:                          ; preds = %if.end8.fill_inbuf.Clone, %if.then6.fill_inbuf.Clone
  %85 = load i32, i32* %retval.fill_inbuf.Clone, align 4
  store i32 %85, i32* %RetValuePtr
  br label %cond.false26.Split

cond.false26.Split:                               ; preds = %return.fill_inbuf.Clone
  %RetValue = load i32, i32* %RetValuePtr
  br label %cond.end28

cond.end28:                                       ; preds = %cond.false26.Split, %cond.true22
  %cond29 = phi i32 [ %conv25, %cond.true22 ], [ %RetValue, %cond.false26.Split ]
  %or30 = or i32 %shl19, %cond29
  store i32 %or30, i32* @bitbuf.20, align 4
  %86 = load i32, i32* @valid, align 4
  %add31 = add nsw i32 %86, 8
  store i32 %add31, i32* @valid, align 4
  br label %while.cond15

while.end32:                                      ; preds = %while.cond15
  %87 = load i32, i32* @bitbuf.20, align 4
  %88 = load i32, i32* @valid, align 4
  %89 = load i32, i32* %len, align 4
  %sub33 = sub nsw i32 %88, %89
  %shr34 = lshr i32 %87, %sub33
  %90 = load i32, i32* %mask, align 4
  %and35 = and i32 %shr34, %90
  store i32 %and35, i32* %peek, align 4
  br label %do.cond

do.cond:                                          ; preds = %while.end32
  %91 = load i32, i32* %peek, align 4
  %92 = load i32, i32* %len, align 4
  %arrayidx36 = getelementptr inbounds [26 x i32], [26 x i32]* @parents, i32 0, i32 %92
  %93 = load i32, i32* %arrayidx36, align 4
  %cmp37 = icmp ult i32 %91, %93
  br i1 %cmp37, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %if.then
  %94 = load i32, i32* %peek, align 4
  %95 = load i32, i32* %eob, align 4
  %cmp39 = icmp eq i32 %94, %95
  br i1 %cmp39, label %land.lhs.true, label %CallOutFuncBB

land.lhs.true:                                    ; preds = %if.end
  %96 = load i32, i32* %len, align 4
  %97 = load i32, i32* @max_len, align 4
  %cmp41 = icmp eq i32 %96, %97
  br i1 %cmp41, label %if.then43, label %CallOutFuncBB

if.then43:                                        ; preds = %land.lhs.true
  br label %for.end

CallOutFuncBB:                                    ; preds = %if.end, %land.lhs.true
  call void @if.end44.OutLineFunc(i32* %peek, i32* %len)
  br label %for.cond

for.end:                                          ; preds = %if.then43
  br label %entry.flush_window.Clone

entry.flush_window.Clone:                         ; preds = %for.end
  %98 = load i32, i32* @outcnt, align 4
  %cmp.flush_window.Clone = icmp eq i32 %98, 0
  br i1 %cmp.flush_window.Clone, label %if.then.flush_window.Clone, label %if.end.flush_window.Clone

if.then.flush_window.Clone:                       ; preds = %entry.flush_window.Clone
  br label %return.flush_window.Clone

if.end.flush_window.Clone:                        ; preds = %entry.flush_window.Clone
  %99 = load i32, i32* @outcnt, align 4
  br label %entry.updcrc.Clone

entry.updcrc.Clone:                               ; preds = %if.end.flush_window.Clone
  %n.addr.updcrc.Clone = alloca i32, align 4
  %s.addr.updcrc.Clone = alloca i8*, align 4
  %c.updcrc.Clone = alloca i32, align 4
  store i32 %99, i32* %n.addr.updcrc.Clone, align 4
  store i8* getelementptr inbounds ([65536 x i8], [65536 x i8]* @window, i32 0, i32 0), i8** %s.addr.updcrc.Clone, align 4
  %100 = load i8*, i8** %s.addr.updcrc.Clone, align 4
  %cmp.updcrc.Clone = icmp eq i8* %100, null
  br i1 %cmp.updcrc.Clone, label %if.then.updcrc.Clone, label %if.else.updcrc.Clone

if.then.updcrc.Clone:                             ; preds = %entry.updcrc.Clone
  store i32 -1, i32* %c.updcrc.Clone, align 4
  br label %if.end4.updcrc.Clone

if.else.updcrc.Clone:                             ; preds = %entry.updcrc.Clone
  %101 = load i32, i32* @updcrc.crc, align 4
  store i32 %101, i32* %c.updcrc.Clone, align 4
  %102 = load i32, i32* %n.addr.updcrc.Clone, align 4
  %tobool.updcrc.Clone = icmp ne i32 %102, 0
  br i1 %tobool.updcrc.Clone, label %if.then1.updcrc.Clone, label %if.end.updcrc.Clone

if.then1.updcrc.Clone:                            ; preds = %if.else.updcrc.Clone
  br label %do.body.updcrc.Clone

do.body.updcrc.Clone:                             ; preds = %do.cond.updcrc.Clone, %if.then1.updcrc.Clone
  %103 = load i32, i32* %c.updcrc.Clone, align 4
  %104 = load i8*, i8** %s.addr.updcrc.Clone, align 4
  %incdec.ptr.updcrc.Clone = getelementptr inbounds i8, i8* %104, i32 1
  store i8* %incdec.ptr.updcrc.Clone, i8** %s.addr.updcrc.Clone, align 4
  %105 = load i8, i8* %104, align 1
  %conv.updcrc.Clone = zext i8 %105 to i32
  %xor.updcrc.Clone = xor i32 %103, %conv.updcrc.Clone
  %and.updcrc.Clone = and i32 %xor.updcrc.Clone, 255
  %arrayidx.updcrc.Clone = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([256 x i32]* @crc_32_tab to [0 x i32]*), i32 0, i32 %and.updcrc.Clone
  %106 = load i32, i32* %arrayidx.updcrc.Clone, align 4
  %107 = load i32, i32* %c.updcrc.Clone, align 4
  %shr.updcrc.Clone = lshr i32 %107, 8
  %xor2.updcrc.Clone = xor i32 %106, %shr.updcrc.Clone
  store i32 %xor2.updcrc.Clone, i32* %c.updcrc.Clone, align 4
  br label %do.cond.updcrc.Clone

do.cond.updcrc.Clone:                             ; preds = %do.body.updcrc.Clone
  %108 = load i32, i32* %n.addr.updcrc.Clone, align 4
  %dec.updcrc.Clone = add i32 %108, -1
  store i32 %dec.updcrc.Clone, i32* %n.addr.updcrc.Clone, align 4
  %tobool3.updcrc.Clone = icmp ne i32 %dec.updcrc.Clone, 0
  br i1 %tobool3.updcrc.Clone, label %do.body.updcrc.Clone, label %do.end.updcrc.Clone

do.end.updcrc.Clone:                              ; preds = %do.cond.updcrc.Clone
  br label %if.end.updcrc.Clone

if.end.updcrc.Clone:                              ; preds = %do.end.updcrc.Clone, %if.else.updcrc.Clone
  br label %if.end4.updcrc.Clone

if.end4.updcrc.Clone:                             ; preds = %if.end.updcrc.Clone, %if.then.updcrc.Clone
  %109 = load i32, i32* %c.updcrc.Clone, align 4
  store i32 %109, i32* @updcrc.crc, align 4
  %110 = load i32, i32* %c.updcrc.Clone, align 4
  %xor5.updcrc.Clone = xor i32 %110, -1
  store i32 %xor5.updcrc.Clone, i32* %RetValuePtr30
  br label %if.end.flush_window.Clone.Split

if.end.flush_window.Clone.Split:                  ; preds = %if.end4.updcrc.Clone
  %RetValue31 = load i32, i32* %RetValuePtr30
  %111 = load i32, i32* @test, align 4
  %tobool.flush_window.Clone = icmp ne i32 %111, 0
  br i1 %tobool.flush_window.Clone, label %if.end2.flush_window.Clone, label %if.then1.flush_window.Clone

if.then1.flush_window.Clone:                      ; preds = %if.end.flush_window.Clone.Split
  %112 = load i32, i32* @outcnt, align 4
  %113 = load i32, i32* @ofd, align 4
  br label %entry.write_buf.Clone

entry.write_buf.Clone:                            ; preds = %if.then1.flush_window.Clone
  %cnt.addr.write_buf.Clone = alloca i32, align 4
  %buf.addr.write_buf.Clone = alloca i8*, align 4
  %fd.addr.write_buf.Clone = alloca i32, align 4
  %n.write_buf.Clone = alloca i32, align 4
  store i32 %112, i32* %cnt.addr.write_buf.Clone, align 4
  store i8* getelementptr inbounds ([65536 x i8], [65536 x i8]* @window, i32 0, i32 0), i8** %buf.addr.write_buf.Clone, align 4
  store i32 %113, i32* %fd.addr.write_buf.Clone, align 4
  br label %while.cond.write_buf.Clone

while.cond.write_buf.Clone:                       ; preds = %if.end.write_buf.Clone, %entry.write_buf.Clone
  %114 = load i32, i32* %cnt.addr.write_buf.Clone, align 4
  %115 = load i8*, i8** %buf.addr.write_buf.Clone, align 4
  %116 = load i32, i32* %fd.addr.write_buf.Clone, align 4
  br label %entry.spec_write.Clone

entry.spec_write.Clone:                           ; preds = %while.cond.write_buf.Clone
  %size.addr.spec_write.Clone = alloca i32, align 4
  %buf.addr.spec_write.Clone = alloca i8*, align 4
  %fd.addr.spec_write.Clone = alloca i32, align 4
  store i32 %114, i32* %size.addr.spec_write.Clone, align 4
  store i8* %115, i8** %buf.addr.spec_write.Clone, align 4
  store i32 %116, i32* %fd.addr.spec_write.Clone, align 4
  %117 = load i32, i32* @dbglvl, align 4
  %cmp.spec_write.Clone = icmp slt i32 4, %117
  br i1 %cmp.spec_write.Clone, label %if.then.spec_write.Clone, label %if.end.spec_write.Clone

if.then.spec_write.Clone:                         ; preds = %entry.spec_write.Clone
  %118 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %119 = load i8*, i8** %buf.addr.spec_write.Clone, align 4
  %120 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %call.spec_write.Clone = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @"??_C@_0BK@GKFGHPHN@spec_write?3?5?$CFd?0?5?$CFx?0?5?$CFd?5?$DN?5?$AA@", i32 0, i32 0), i32 %120, i8* %119, i32 %118)
  br label %if.end.spec_write.Clone

if.end.spec_write.Clone:                          ; preds = %if.then.spec_write.Clone, %entry.spec_write.Clone
  %121 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %cmp1.spec_write.Clone = icmp sgt i32 %121, 3
  br i1 %cmp1.spec_write.Clone, label %if.then2.spec_write.Clone, label %if.end5.spec_write.Clone

if.then2.spec_write.Clone:                        ; preds = %if.end.spec_write.Clone
  %122 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %call3.spec_write.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx.spec_write.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.spec_write.Clone, i32 2
  %call4.spec_write.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.spec_write.Clone, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"??_C@_0CD@NANFEFEM@spec_write?3?5fd?$DN?$CFd?0?5?$DO?5MAX_SPEC_FD@", i32 0, i32 0), i32 %122)
  call void @exit(i32 1) #7
  unreachable

if.end5.spec_write.Clone:                         ; preds = %if.end.spec_write.Clone
  %123 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx6.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %123
  %buf7.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx6.spec_write.Clone, i32 0, i32 3
  %124 = load i8*, i8** %buf7.spec_write.Clone, align 4
  %125 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx8.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %125
  %pos.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx8.spec_write.Clone, i32 0, i32 2
  %126 = load i32, i32* %pos.spec_write.Clone, align 4
  %arrayidx9.spec_write.Clone = getelementptr inbounds i8, i8* %124, i32 %126
  %127 = load i8*, i8** %buf.addr.spec_write.Clone, align 4
  %128 = load i32, i32* %size.addr.spec_write.Clone, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %arrayidx9.spec_write.Clone, i8* align 1 %127, i32 %128, i1 false)
  %129 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %130 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx10.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %130
  %len.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx10.spec_write.Clone, i32 0, i32 1
  %131 = load i32, i32* %len.spec_write.Clone, align 4
  %add.spec_write.Clone = add nsw i32 %131, %129
  store i32 %add.spec_write.Clone, i32* %len.spec_write.Clone, align 4
  %132 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %133 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx11.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %133
  %pos12.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx11.spec_write.Clone, i32 0, i32 2
  %134 = load i32, i32* %pos12.spec_write.Clone, align 4
  %add13.spec_write.Clone = add nsw i32 %134, %132
  store i32 %add13.spec_write.Clone, i32* %pos12.spec_write.Clone, align 4
  %135 = load i32, i32* @dbglvl, align 4
  %cmp14.spec_write.Clone = icmp slt i32 4, %135
  br i1 %cmp14.spec_write.Clone, label %if.then15.spec_write.Clone, label %if.end17.spec_write.Clone

if.then15.spec_write.Clone:                       ; preds = %if.end5.spec_write.Clone
  %136 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %call16.spec_write.Clone = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"??_C@_03PMGGPEJJ@?$CFd?6?$AA@", i32 0, i32 0), i32 %136)
  br label %if.end17.spec_write.Clone

if.end17.spec_write.Clone:                        ; preds = %if.then15.spec_write.Clone, %if.end5.spec_write.Clone
  %137 = load i32, i32* %size.addr.spec_write.Clone, align 4
  store i32 %137, i32* %RetValuePtr80
  br label %while.cond.write_buf.Clone.Split

while.cond.write_buf.Clone.Split:                 ; preds = %if.end17.spec_write.Clone
  %RetValue81 = load i32, i32* %RetValuePtr80
  store i32 %RetValue81, i32* %n.write_buf.Clone, align 4
  %138 = load i32, i32* %cnt.addr.write_buf.Clone, align 4
  %cmp.write_buf.Clone = icmp ne i32 %RetValue81, %138
  br i1 %cmp.write_buf.Clone, label %while.body.write_buf.Clone, label %while.end.write_buf.Clone

while.body.write_buf.Clone:                       ; preds = %while.cond.write_buf.Clone.Split
  %139 = load i32, i32* %n.write_buf.Clone, align 4
  %cmp1.write_buf.Clone = icmp eq i32 %139, -1
  br i1 %cmp1.write_buf.Clone, label %if.then.write_buf.Clone, label %if.end.write_buf.Clone

if.then.write_buf.Clone:                          ; preds = %while.body.write_buf.Clone
  call void @write_error()
  br label %if.end.write_buf.Clone

if.end.write_buf.Clone:                           ; preds = %if.then.write_buf.Clone, %while.body.write_buf.Clone
  %140 = load i32, i32* %n.write_buf.Clone, align 4
  %141 = load i32, i32* %cnt.addr.write_buf.Clone, align 4
  %sub.write_buf.Clone = sub i32 %141, %140
  store i32 %sub.write_buf.Clone, i32* %cnt.addr.write_buf.Clone, align 4
  %142 = load i8*, i8** %buf.addr.write_buf.Clone, align 4
  %143 = load i32, i32* %n.write_buf.Clone, align 4
  %add.ptr.write_buf.Clone = getelementptr inbounds i8, i8* %142, i32 %143
  store i8* %add.ptr.write_buf.Clone, i8** %buf.addr.write_buf.Clone, align 4
  br label %while.cond.write_buf.Clone

while.end.write_buf.Clone:                        ; preds = %while.cond.write_buf.Clone.Split
  br label %if.then1.flush_window.Clone.Split

if.then1.flush_window.Clone.Split:                ; preds = %while.end.write_buf.Clone
  br label %if.end2.flush_window.Clone

if.end2.flush_window.Clone:                       ; preds = %if.then1.flush_window.Clone.Split, %if.end.flush_window.Clone.Split
  %144 = load i32, i32* @outcnt, align 4
  %145 = load i32, i32* @bytes_out, align 4
  %add.flush_window.Clone = add i32 %145, %144
  store i32 %add.flush_window.Clone, i32* @bytes_out, align 4
  store i32 0, i32* @outcnt, align 4
  br label %return.flush_window.Clone

return.flush_window.Clone:                        ; preds = %if.end2.flush_window.Clone, %if.then.flush_window.Clone
  br label %for.end.Split

for.end.Split:                                    ; preds = %return.flush_window.Clone
  %146 = load i32, i32* @orig_len, align 4
  %147 = load i32, i32* @bytes_out, align 4
  %cmp55 = icmp ne i32 %146, %147
  br i1 %cmp55, label %if.then57, label %if.end58

if.then57:                                        ; preds = %for.end.Split
  br label %entry.error.Clone

entry.error.Clone:                                ; preds = %if.then57
  %m.addr.error.Clone = alloca i8*, align 4
  store i8* getelementptr inbounds ([38 x i8], [38 x i8]* @"??_C@_0CG@FNGHHANN@invalid?5compressed?5data?9?9length?5@", i32 0, i32 0), i8** %m.addr.error.Clone, align 4
  %148 = load i8*, i8** %m.addr.error.Clone, align 4
  %149 = load i8*, i8** @progname, align 4
  %call.error.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx.error.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.error.Clone, i32 2
  %call1.error.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.error.Clone, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @"??_C@_0N@ODCEBLNH@?6?$CFs?3?5?$CFs?3?5?$CFs?6?$AA@", i32 0, i32 0), i8* %149, i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0), i8* %148)
  br label %entry.abort_gzip.Clone50

entry.abort_gzip.Clone50:                         ; preds = %entry.error.Clone
  %150 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone51 = icmp ne i32 %150, 0
  br i1 %tobool.abort_gzip.Clone51, label %if.then.abort_gzip.Clone52, label %if.end.abort_gzip.Clone55

if.then.abort_gzip.Clone52:                       ; preds = %entry.abort_gzip.Clone50
  %151 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone53 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %151)
  %call1.abort_gzip.Clone54 = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone55

if.end.abort_gzip.Clone55:                        ; preds = %if.then.abort_gzip.Clone52, %entry.abort_gzip.Clone50
  br label %entry.do_exit.Clone

entry.do_exit.Clone:                              ; preds = %if.end.abort_gzip.Clone55
  %exitcode.addr.do_exit.Clone = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone, align 4
  %152 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone = icmp ne i32 %152, 0
  br i1 %tobool.do_exit.Clone, label %if.then.do_exit.Clone, label %if.end.do_exit.Clone

if.then.do_exit.Clone:                            ; preds = %entry.do_exit.Clone
  %153 = load i32, i32* %exitcode.addr.do_exit.Clone, align 4
  call void @exit(i32 %153) #7
  unreachable

if.end.do_exit.Clone:                             ; preds = %entry.do_exit.Clone
  store i32 1, i32* @do_exit.in_exit, align 4
  %154 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone = icmp ne i8* %154, null
  br i1 %cmp.do_exit.Clone, label %if.then1.do_exit.Clone, label %if.end2.do_exit.Clone

if.then1.do_exit.Clone:                           ; preds = %if.end.do_exit.Clone
  %155 = load i8*, i8** @env, align 4
  call void @free(i8* %155) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone

if.end2.do_exit.Clone:                            ; preds = %if.then1.do_exit.Clone, %if.end.do_exit.Clone
  %156 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone = icmp ne i8** %156, null
  br i1 %cmp3.do_exit.Clone, label %if.then4.do_exit.Clone, label %if.end5.do_exit.Clone

if.then4.do_exit.Clone:                           ; preds = %if.end2.do_exit.Clone
  %157 = load i8**, i8*** @args, align 4
  %158 = bitcast i8** %157 to i8*
  call void @free(i8* %158) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone

if.end5.do_exit.Clone:                            ; preds = %if.then4.do_exit.Clone, %if.end2.do_exit.Clone
  %159 = load i32, i32* %exitcode.addr.do_exit.Clone, align 4
  call void @exit(i32 %159) #7
  unreachable

return.do_exit.Clone:                             ; No predecessors!
  br label %if.end.abort_gzip.Clone55.Split

if.end.abort_gzip.Clone55.Split:                  ; preds = %return.do_exit.Clone
  br label %entry.error.Clone.Split

entry.error.Clone.Split:                          ; preds = %if.end.abort_gzip.Clone55.Split
  br label %if.then57.Split

if.then57.Split:                                  ; preds = %entry.error.Clone.Split
  br label %if.end58

if.end58:                                         ; preds = %if.then57.Split, %for.end.Split
  ret i32 0
}

; Function Attrs: noinline optnone sspstrong
define internal void @read_tree() #1 {
entry:
  %len = alloca i32, align 4
  %base = alloca i32, align 4
  %n = alloca i32, align 4
  store i32 0, i32* @orig_len, align 4
  store i32 1, i32* %n, align 4
  %RetValuePtr = alloca i32, align 4
  %RetValuePtr28 = alloca i32, align 4
  %RetValuePtr57 = alloca i32, align 4
  %RetValuePtr86 = alloca i32, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %n, align 4
  %cmp = icmp sle i32 %0, 4
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* @orig_len, align 4
  %shl = shl i32 %1, 8
  %2 = load i32, i32* @inptr, align 4
  %3 = load i32, i32* @insize, align 4
  %cmp1 = icmp ult i32 %2, %3
  br i1 %cmp1, label %cond.true, label %cond.false

cond.true:                                        ; preds = %for.body
  %4 = load i32, i32* @inptr, align 4
  %inc = add i32 %4, 1
  store i32 %inc, i32* @inptr, align 4
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i32 0, i32 %4
  %5 = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %5 to i32
  br label %cond.end

cond.false:                                       ; preds = %for.body
  br label %entry.fill_inbuf.Clone59

entry.fill_inbuf.Clone59:                         ; preds = %cond.false
  %retval.fill_inbuf.Clone60 = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone61 = alloca i32, align 4
  %len.fill_inbuf.Clone62 = alloca i32, align 4
  store i32 0, i32* %eof_ok.addr.fill_inbuf.Clone61, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone63 = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone63, align 4
  br label %do.body.fill_inbuf.Clone64

do.body.fill_inbuf.Clone64:                       ; preds = %do.cond.fill_inbuf.Clone74, %entry.fill_inbuf.Clone59
  %6 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone65 = sub i32 32768, %6
  %7 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone66 = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %7
  %8 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone67 = call i32 @spec_read(i32 %8, i8* %add.ptr.fill_inbuf.Clone66, i32 %sub.fill_inbuf.Clone65)
  store i32 %call1.fill_inbuf.Clone67, i32* %len.fill_inbuf.Clone62, align 4
  %9 = load i32, i32* %len.fill_inbuf.Clone62, align 4
  %cmp.fill_inbuf.Clone68 = icmp eq i32 %9, 0
  br i1 %cmp.fill_inbuf.Clone68, label %if.then.fill_inbuf.Clone71, label %lor.lhs.false.fill_inbuf.Clone69

lor.lhs.false.fill_inbuf.Clone69:                 ; preds = %do.body.fill_inbuf.Clone64
  %10 = load i32, i32* %len.fill_inbuf.Clone62, align 4
  %cmp2.fill_inbuf.Clone70 = icmp eq i32 %10, -1
  br i1 %cmp2.fill_inbuf.Clone70, label %if.then.fill_inbuf.Clone71, label %if.end.fill_inbuf.Clone72

if.then.fill_inbuf.Clone71:                       ; preds = %lor.lhs.false.fill_inbuf.Clone69, %do.body.fill_inbuf.Clone64
  br label %do.end.fill_inbuf.Clone76

if.end.fill_inbuf.Clone72:                        ; preds = %lor.lhs.false.fill_inbuf.Clone69
  %11 = load i32, i32* %len.fill_inbuf.Clone62, align 4
  %12 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone73 = add i32 %12, %11
  store i32 %add.fill_inbuf.Clone73, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone74

do.cond.fill_inbuf.Clone74:                       ; preds = %if.end.fill_inbuf.Clone72
  %13 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone75 = icmp ult i32 %13, 32768
  br i1 %cmp3.fill_inbuf.Clone75, label %do.body.fill_inbuf.Clone64, label %do.end.fill_inbuf.Clone76

do.end.fill_inbuf.Clone76:                        ; preds = %do.cond.fill_inbuf.Clone74, %if.then.fill_inbuf.Clone71
  %14 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone77 = icmp eq i32 %14, 0
  br i1 %cmp4.fill_inbuf.Clone77, label %if.then5.fill_inbuf.Clone78, label %if.end8.fill_inbuf.Clone82

if.then5.fill_inbuf.Clone78:                      ; preds = %do.end.fill_inbuf.Clone76
  %15 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone61, align 4
  %tobool.fill_inbuf.Clone79 = icmp ne i32 %15, 0
  br i1 %tobool.fill_inbuf.Clone79, label %if.then6.fill_inbuf.Clone80, label %if.end7.fill_inbuf.Clone81

if.then6.fill_inbuf.Clone80:                      ; preds = %if.then5.fill_inbuf.Clone78
  store i32 -1, i32* %retval.fill_inbuf.Clone60, align 4
  br label %return.fill_inbuf.Clone85

if.end7.fill_inbuf.Clone81:                       ; preds = %if.then5.fill_inbuf.Clone78
  br label %entry.read_error.Clone

entry.read_error.Clone:                           ; preds = %if.end7.fill_inbuf.Clone81
  %16 = load i8*, i8** @progname, align 4
  %call.read_error.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone, i32 2
  %call1.read_error.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %16)
  %call2.read_error.Clone = call i32* @_errno()
  %17 = load i32, i32* %call2.read_error.Clone, align 4
  %cmp.read_error.Clone = icmp ne i32 %17, 0
  br i1 %cmp.read_error.Clone, label %if.then.read_error.Clone, label %if.else.read_error.Clone

if.then.read_error.Clone:                         ; preds = %entry.read_error.Clone
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone

if.else.read_error.Clone:                         ; preds = %entry.read_error.Clone
  %call3.read_error.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone, i32 2
  %call5.read_error.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone

if.end.read_error.Clone:                          ; preds = %if.else.read_error.Clone, %if.then.read_error.Clone
  br label %entry.abort_gzip.Clone136

entry.abort_gzip.Clone136:                        ; preds = %if.end.read_error.Clone
  %18 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone137 = icmp ne i32 %18, 0
  br i1 %tobool.abort_gzip.Clone137, label %if.then.abort_gzip.Clone138, label %if.end.abort_gzip.Clone141

if.then.abort_gzip.Clone138:                      ; preds = %entry.abort_gzip.Clone136
  %19 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone139 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %19)
  %call1.abort_gzip.Clone140 = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone141

if.end.abort_gzip.Clone141:                       ; preds = %if.then.abort_gzip.Clone138, %entry.abort_gzip.Clone136
  br label %entry.do_exit.Clone148

entry.do_exit.Clone148:                           ; preds = %if.end.abort_gzip.Clone141
  %exitcode.addr.do_exit.Clone149 = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone149, align 4
  %20 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone150 = icmp ne i32 %20, 0
  br i1 %tobool.do_exit.Clone150, label %if.then.do_exit.Clone151, label %if.end.do_exit.Clone152

if.then.do_exit.Clone151:                         ; preds = %entry.do_exit.Clone148
  %21 = load i32, i32* %exitcode.addr.do_exit.Clone149, align 4
  call void @exit(i32 %21) #7
  unreachable

if.end.do_exit.Clone152:                          ; preds = %entry.do_exit.Clone148
  store i32 1, i32* @do_exit.in_exit, align 4
  %22 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone153 = icmp ne i8* %22, null
  br i1 %cmp.do_exit.Clone153, label %if.then1.do_exit.Clone154, label %if.end2.do_exit.Clone155

if.then1.do_exit.Clone154:                        ; preds = %if.end.do_exit.Clone152
  %23 = load i8*, i8** @env, align 4
  call void @free(i8* %23) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone155

if.end2.do_exit.Clone155:                         ; preds = %if.then1.do_exit.Clone154, %if.end.do_exit.Clone152
  %24 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone156 = icmp ne i8** %24, null
  br i1 %cmp3.do_exit.Clone156, label %if.then4.do_exit.Clone157, label %if.end5.do_exit.Clone158

if.then4.do_exit.Clone157:                        ; preds = %if.end2.do_exit.Clone155
  %25 = load i8**, i8*** @args, align 4
  %26 = bitcast i8** %25 to i8*
  call void @free(i8* %26) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone158

if.end5.do_exit.Clone158:                         ; preds = %if.then4.do_exit.Clone157, %if.end2.do_exit.Clone155
  %27 = load i32, i32* %exitcode.addr.do_exit.Clone149, align 4
  call void @exit(i32 %27) #7
  unreachable

return.do_exit.Clone159:                          ; No predecessors!
  br label %if.end.abort_gzip.Clone141.Split

if.end.abort_gzip.Clone141.Split:                 ; preds = %return.do_exit.Clone159
  br label %if.end.read_error.Clone.Split

if.end.read_error.Clone.Split:                    ; preds = %if.end.abort_gzip.Clone141.Split
  br label %if.end7.fill_inbuf.Clone81.Split

if.end7.fill_inbuf.Clone81.Split:                 ; preds = %if.end.read_error.Clone.Split
  br label %if.end8.fill_inbuf.Clone82

if.end8.fill_inbuf.Clone82:                       ; preds = %if.end7.fill_inbuf.Clone81.Split, %do.end.fill_inbuf.Clone76
  %28 = load i32, i32* @insize, align 4
  %29 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone83 = add i32 %29, %28
  store i32 %add9.fill_inbuf.Clone83, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %30 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone84 = zext i8 %30 to i32
  store i32 %conv.fill_inbuf.Clone84, i32* %retval.fill_inbuf.Clone60, align 4
  br label %return.fill_inbuf.Clone85

return.fill_inbuf.Clone85:                        ; preds = %if.end8.fill_inbuf.Clone82, %if.then6.fill_inbuf.Clone80
  %31 = load i32, i32* %retval.fill_inbuf.Clone60, align 4
  store i32 %31, i32* %RetValuePtr86
  br label %cond.false.Split

cond.false.Split:                                 ; preds = %return.fill_inbuf.Clone85
  %RetValue87 = load i32, i32* %RetValuePtr86
  br label %cond.end

cond.end:                                         ; preds = %cond.false.Split, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %RetValue87, %cond.false.Split ]
  %or = or i32 %shl, %cond
  store i32 %or, i32* @orig_len, align 4
  br label %for.inc

for.inc:                                          ; preds = %cond.end
  %32 = load i32, i32* %n, align 4
  %inc2 = add nsw i32 %32, 1
  store i32 %inc2, i32* %n, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %33 = load i32, i32* @inptr, align 4
  %34 = load i32, i32* @insize, align 4
  %cmp3 = icmp ult i32 %33, %34
  br i1 %cmp3, label %cond.true5, label %cond.false9

cond.true5:                                       ; preds = %for.end
  %35 = load i32, i32* @inptr, align 4
  %inc6 = add i32 %35, 1
  store i32 %inc6, i32* @inptr, align 4
  %arrayidx7 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i32 0, i32 %35
  %36 = load i8, i8* %arrayidx7, align 1
  %conv8 = zext i8 %36 to i32
  br label %cond.end11

cond.false9:                                      ; preds = %for.end
  br label %entry.fill_inbuf.Clone30

entry.fill_inbuf.Clone30:                         ; preds = %cond.false9
  %retval.fill_inbuf.Clone31 = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone32 = alloca i32, align 4
  %len.fill_inbuf.Clone33 = alloca i32, align 4
  store i32 0, i32* %eof_ok.addr.fill_inbuf.Clone32, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone34 = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone34, align 4
  br label %do.body.fill_inbuf.Clone35

do.body.fill_inbuf.Clone35:                       ; preds = %do.cond.fill_inbuf.Clone45, %entry.fill_inbuf.Clone30
  %37 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone36 = sub i32 32768, %37
  %38 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone37 = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %38
  %39 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone38 = call i32 @spec_read(i32 %39, i8* %add.ptr.fill_inbuf.Clone37, i32 %sub.fill_inbuf.Clone36)
  store i32 %call1.fill_inbuf.Clone38, i32* %len.fill_inbuf.Clone33, align 4
  %40 = load i32, i32* %len.fill_inbuf.Clone33, align 4
  %cmp.fill_inbuf.Clone39 = icmp eq i32 %40, 0
  br i1 %cmp.fill_inbuf.Clone39, label %if.then.fill_inbuf.Clone42, label %lor.lhs.false.fill_inbuf.Clone40

lor.lhs.false.fill_inbuf.Clone40:                 ; preds = %do.body.fill_inbuf.Clone35
  %41 = load i32, i32* %len.fill_inbuf.Clone33, align 4
  %cmp2.fill_inbuf.Clone41 = icmp eq i32 %41, -1
  br i1 %cmp2.fill_inbuf.Clone41, label %if.then.fill_inbuf.Clone42, label %if.end.fill_inbuf.Clone43

if.then.fill_inbuf.Clone42:                       ; preds = %lor.lhs.false.fill_inbuf.Clone40, %do.body.fill_inbuf.Clone35
  br label %do.end.fill_inbuf.Clone47

if.end.fill_inbuf.Clone43:                        ; preds = %lor.lhs.false.fill_inbuf.Clone40
  %42 = load i32, i32* %len.fill_inbuf.Clone33, align 4
  %43 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone44 = add i32 %43, %42
  store i32 %add.fill_inbuf.Clone44, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone45

do.cond.fill_inbuf.Clone45:                       ; preds = %if.end.fill_inbuf.Clone43
  %44 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone46 = icmp ult i32 %44, 32768
  br i1 %cmp3.fill_inbuf.Clone46, label %do.body.fill_inbuf.Clone35, label %do.end.fill_inbuf.Clone47

do.end.fill_inbuf.Clone47:                        ; preds = %do.cond.fill_inbuf.Clone45, %if.then.fill_inbuf.Clone42
  %45 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone48 = icmp eq i32 %45, 0
  br i1 %cmp4.fill_inbuf.Clone48, label %if.then5.fill_inbuf.Clone49, label %if.end8.fill_inbuf.Clone53

if.then5.fill_inbuf.Clone49:                      ; preds = %do.end.fill_inbuf.Clone47
  %46 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone32, align 4
  %tobool.fill_inbuf.Clone50 = icmp ne i32 %46, 0
  br i1 %tobool.fill_inbuf.Clone50, label %if.then6.fill_inbuf.Clone51, label %if.end7.fill_inbuf.Clone52

if.then6.fill_inbuf.Clone51:                      ; preds = %if.then5.fill_inbuf.Clone49
  store i32 -1, i32* %retval.fill_inbuf.Clone31, align 4
  br label %return.fill_inbuf.Clone56

if.end7.fill_inbuf.Clone52:                       ; preds = %if.then5.fill_inbuf.Clone49
  br label %entry.read_error.Clone88

entry.read_error.Clone88:                         ; preds = %if.end7.fill_inbuf.Clone52
  %47 = load i8*, i8** @progname, align 4
  %call.read_error.Clone89 = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone90 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone89, i32 2
  %call1.read_error.Clone91 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone90, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %47)
  %call2.read_error.Clone92 = call i32* @_errno()
  %48 = load i32, i32* %call2.read_error.Clone92, align 4
  %cmp.read_error.Clone93 = icmp ne i32 %48, 0
  br i1 %cmp.read_error.Clone93, label %if.then.read_error.Clone94, label %if.else.read_error.Clone95

if.then.read_error.Clone94:                       ; preds = %entry.read_error.Clone88
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone99

if.else.read_error.Clone95:                       ; preds = %entry.read_error.Clone88
  %call3.read_error.Clone96 = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone97 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone96, i32 2
  %call5.read_error.Clone98 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone97, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone99

if.end.read_error.Clone99:                        ; preds = %if.else.read_error.Clone95, %if.then.read_error.Clone94
  br label %entry.abort_gzip.Clone130

entry.abort_gzip.Clone130:                        ; preds = %if.end.read_error.Clone99
  %49 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone131 = icmp ne i32 %49, 0
  br i1 %tobool.abort_gzip.Clone131, label %if.then.abort_gzip.Clone132, label %if.end.abort_gzip.Clone135

if.then.abort_gzip.Clone132:                      ; preds = %entry.abort_gzip.Clone130
  %50 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone133 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %50)
  %call1.abort_gzip.Clone134 = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone135

if.end.abort_gzip.Clone135:                       ; preds = %if.then.abort_gzip.Clone132, %entry.abort_gzip.Clone130
  br label %entry.do_exit.Clone160

entry.do_exit.Clone160:                           ; preds = %if.end.abort_gzip.Clone135
  %exitcode.addr.do_exit.Clone161 = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone161, align 4
  %51 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone162 = icmp ne i32 %51, 0
  br i1 %tobool.do_exit.Clone162, label %if.then.do_exit.Clone163, label %if.end.do_exit.Clone164

if.then.do_exit.Clone163:                         ; preds = %entry.do_exit.Clone160
  %52 = load i32, i32* %exitcode.addr.do_exit.Clone161, align 4
  call void @exit(i32 %52) #7
  unreachable

if.end.do_exit.Clone164:                          ; preds = %entry.do_exit.Clone160
  store i32 1, i32* @do_exit.in_exit, align 4
  %53 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone165 = icmp ne i8* %53, null
  br i1 %cmp.do_exit.Clone165, label %if.then1.do_exit.Clone166, label %if.end2.do_exit.Clone167

if.then1.do_exit.Clone166:                        ; preds = %if.end.do_exit.Clone164
  %54 = load i8*, i8** @env, align 4
  call void @free(i8* %54) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone167

if.end2.do_exit.Clone167:                         ; preds = %if.then1.do_exit.Clone166, %if.end.do_exit.Clone164
  %55 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone168 = icmp ne i8** %55, null
  br i1 %cmp3.do_exit.Clone168, label %if.then4.do_exit.Clone169, label %if.end5.do_exit.Clone170

if.then4.do_exit.Clone169:                        ; preds = %if.end2.do_exit.Clone167
  %56 = load i8**, i8*** @args, align 4
  %57 = bitcast i8** %56 to i8*
  call void @free(i8* %57) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone170

if.end5.do_exit.Clone170:                         ; preds = %if.then4.do_exit.Clone169, %if.end2.do_exit.Clone167
  %58 = load i32, i32* %exitcode.addr.do_exit.Clone161, align 4
  call void @exit(i32 %58) #7
  unreachable

return.do_exit.Clone171:                          ; No predecessors!
  br label %if.end.abort_gzip.Clone135.Split

if.end.abort_gzip.Clone135.Split:                 ; preds = %return.do_exit.Clone171
  br label %if.end.read_error.Clone99.Split

if.end.read_error.Clone99.Split:                  ; preds = %if.end.abort_gzip.Clone135.Split
  br label %if.end7.fill_inbuf.Clone52.Split

if.end7.fill_inbuf.Clone52.Split:                 ; preds = %if.end.read_error.Clone99.Split
  br label %if.end8.fill_inbuf.Clone53

if.end8.fill_inbuf.Clone53:                       ; preds = %if.end7.fill_inbuf.Clone52.Split, %do.end.fill_inbuf.Clone47
  %59 = load i32, i32* @insize, align 4
  %60 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone54 = add i32 %60, %59
  store i32 %add9.fill_inbuf.Clone54, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %61 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone55 = zext i8 %61 to i32
  store i32 %conv.fill_inbuf.Clone55, i32* %retval.fill_inbuf.Clone31, align 4
  br label %return.fill_inbuf.Clone56

return.fill_inbuf.Clone56:                        ; preds = %if.end8.fill_inbuf.Clone53, %if.then6.fill_inbuf.Clone51
  %62 = load i32, i32* %retval.fill_inbuf.Clone31, align 4
  store i32 %62, i32* %RetValuePtr57
  br label %cond.false9.Split

cond.false9.Split:                                ; preds = %return.fill_inbuf.Clone56
  %RetValue58 = load i32, i32* %RetValuePtr57
  br label %cond.end11

cond.end11:                                       ; preds = %cond.false9.Split, %cond.true5
  %cond12 = phi i32 [ %conv8, %cond.true5 ], [ %RetValue58, %cond.false9.Split ]
  store i32 %cond12, i32* @max_len, align 4
  %63 = load i32, i32* @max_len, align 4
  %cmp13 = icmp sgt i32 %63, 25
  br i1 %cmp13, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end11
  br label %entry.error.Clone

entry.error.Clone:                                ; preds = %if.then
  %m.addr.error.Clone = alloca i8*, align 4
  store i8* getelementptr inbounds ([50 x i8], [50 x i8]* @"??_C@_0DC@KKBPADLA@invalid?5compressed?5data?5?9?9?5Huffm@", i32 0, i32 0), i8** %m.addr.error.Clone, align 4
  %64 = load i8*, i8** %m.addr.error.Clone, align 4
  %65 = load i8*, i8** @progname, align 4
  %call.error.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx.error.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.error.Clone, i32 2
  %call1.error.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.error.Clone, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @"??_C@_0N@ODCEBLNH@?6?$CFs?3?5?$CFs?3?5?$CFs?6?$AA@", i32 0, i32 0), i8* %65, i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0), i8* %64)
  br label %entry.abort_gzip.Clone142

entry.abort_gzip.Clone142:                        ; preds = %entry.error.Clone
  %66 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone143 = icmp ne i32 %66, 0
  br i1 %tobool.abort_gzip.Clone143, label %if.then.abort_gzip.Clone144, label %if.end.abort_gzip.Clone147

if.then.abort_gzip.Clone144:                      ; preds = %entry.abort_gzip.Clone142
  %67 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone145 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %67)
  %call1.abort_gzip.Clone146 = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone147

if.end.abort_gzip.Clone147:                       ; preds = %if.then.abort_gzip.Clone144, %entry.abort_gzip.Clone142
  br label %entry.do_exit.Clone

entry.do_exit.Clone:                              ; preds = %if.end.abort_gzip.Clone147
  %exitcode.addr.do_exit.Clone = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone, align 4
  %68 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone = icmp ne i32 %68, 0
  br i1 %tobool.do_exit.Clone, label %if.then.do_exit.Clone, label %if.end.do_exit.Clone

if.then.do_exit.Clone:                            ; preds = %entry.do_exit.Clone
  %69 = load i32, i32* %exitcode.addr.do_exit.Clone, align 4
  call void @exit(i32 %69) #7
  unreachable

if.end.do_exit.Clone:                             ; preds = %entry.do_exit.Clone
  store i32 1, i32* @do_exit.in_exit, align 4
  %70 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone = icmp ne i8* %70, null
  br i1 %cmp.do_exit.Clone, label %if.then1.do_exit.Clone, label %if.end2.do_exit.Clone

if.then1.do_exit.Clone:                           ; preds = %if.end.do_exit.Clone
  %71 = load i8*, i8** @env, align 4
  call void @free(i8* %71) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone

if.end2.do_exit.Clone:                            ; preds = %if.then1.do_exit.Clone, %if.end.do_exit.Clone
  %72 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone = icmp ne i8** %72, null
  br i1 %cmp3.do_exit.Clone, label %if.then4.do_exit.Clone, label %if.end5.do_exit.Clone

if.then4.do_exit.Clone:                           ; preds = %if.end2.do_exit.Clone
  %73 = load i8**, i8*** @args, align 4
  %74 = bitcast i8** %73 to i8*
  call void @free(i8* %74) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone

if.end5.do_exit.Clone:                            ; preds = %if.then4.do_exit.Clone, %if.end2.do_exit.Clone
  %75 = load i32, i32* %exitcode.addr.do_exit.Clone, align 4
  call void @exit(i32 %75) #7
  unreachable

return.do_exit.Clone:                             ; No predecessors!
  br label %if.end.abort_gzip.Clone147.Split

if.end.abort_gzip.Clone147.Split:                 ; preds = %return.do_exit.Clone
  br label %entry.error.Clone.Split

entry.error.Clone.Split:                          ; preds = %if.end.abort_gzip.Clone147.Split
  br label %if.then.Split

if.then.Split:                                    ; preds = %entry.error.Clone.Split
  br label %if.end

if.end:                                           ; preds = %if.then.Split, %cond.end11
  store i32 0, i32* %n, align 4
  store i32 1, i32* %len, align 4
  br label %for.cond15

for.cond15:                                       ; preds = %for.inc31, %if.end
  %76 = load i32, i32* %len, align 4
  %77 = load i32, i32* @max_len, align 4
  %cmp16 = icmp sle i32 %76, %77
  br i1 %cmp16, label %for.body18, label %CallOutFuncBB

for.body18:                                       ; preds = %for.cond15
  %78 = load i32, i32* @inptr, align 4
  %79 = load i32, i32* @insize, align 4
  %cmp19 = icmp ult i32 %78, %79
  br i1 %cmp19, label %cond.true21, label %cond.false25

cond.true21:                                      ; preds = %for.body18
  %80 = load i32, i32* @inptr, align 4
  %inc22 = add i32 %80, 1
  store i32 %inc22, i32* @inptr, align 4
  %arrayidx23 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i32 0, i32 %80
  %81 = load i8, i8* %arrayidx23, align 1
  %conv24 = zext i8 %81 to i32
  br label %cond.end27

cond.false25:                                     ; preds = %for.body18
  br label %entry.fill_inbuf.Clone1

entry.fill_inbuf.Clone1:                          ; preds = %cond.false25
  %retval.fill_inbuf.Clone2 = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone3 = alloca i32, align 4
  %len.fill_inbuf.Clone4 = alloca i32, align 4
  store i32 0, i32* %eof_ok.addr.fill_inbuf.Clone3, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone5 = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone5, align 4
  br label %do.body.fill_inbuf.Clone6

do.body.fill_inbuf.Clone6:                        ; preds = %do.cond.fill_inbuf.Clone16, %entry.fill_inbuf.Clone1
  %82 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone7 = sub i32 32768, %82
  %83 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone8 = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %83
  %84 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone9 = call i32 @spec_read(i32 %84, i8* %add.ptr.fill_inbuf.Clone8, i32 %sub.fill_inbuf.Clone7)
  store i32 %call1.fill_inbuf.Clone9, i32* %len.fill_inbuf.Clone4, align 4
  %85 = load i32, i32* %len.fill_inbuf.Clone4, align 4
  %cmp.fill_inbuf.Clone10 = icmp eq i32 %85, 0
  br i1 %cmp.fill_inbuf.Clone10, label %if.then.fill_inbuf.Clone13, label %lor.lhs.false.fill_inbuf.Clone11

lor.lhs.false.fill_inbuf.Clone11:                 ; preds = %do.body.fill_inbuf.Clone6
  %86 = load i32, i32* %len.fill_inbuf.Clone4, align 4
  %cmp2.fill_inbuf.Clone12 = icmp eq i32 %86, -1
  br i1 %cmp2.fill_inbuf.Clone12, label %if.then.fill_inbuf.Clone13, label %if.end.fill_inbuf.Clone14

if.then.fill_inbuf.Clone13:                       ; preds = %lor.lhs.false.fill_inbuf.Clone11, %do.body.fill_inbuf.Clone6
  br label %do.end.fill_inbuf.Clone18

if.end.fill_inbuf.Clone14:                        ; preds = %lor.lhs.false.fill_inbuf.Clone11
  %87 = load i32, i32* %len.fill_inbuf.Clone4, align 4
  %88 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone15 = add i32 %88, %87
  store i32 %add.fill_inbuf.Clone15, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone16

do.cond.fill_inbuf.Clone16:                       ; preds = %if.end.fill_inbuf.Clone14
  %89 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone17 = icmp ult i32 %89, 32768
  br i1 %cmp3.fill_inbuf.Clone17, label %do.body.fill_inbuf.Clone6, label %do.end.fill_inbuf.Clone18

do.end.fill_inbuf.Clone18:                        ; preds = %do.cond.fill_inbuf.Clone16, %if.then.fill_inbuf.Clone13
  %90 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone19 = icmp eq i32 %90, 0
  br i1 %cmp4.fill_inbuf.Clone19, label %if.then5.fill_inbuf.Clone20, label %if.end8.fill_inbuf.Clone24

if.then5.fill_inbuf.Clone20:                      ; preds = %do.end.fill_inbuf.Clone18
  %91 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone3, align 4
  %tobool.fill_inbuf.Clone21 = icmp ne i32 %91, 0
  br i1 %tobool.fill_inbuf.Clone21, label %if.then6.fill_inbuf.Clone22, label %if.end7.fill_inbuf.Clone23

if.then6.fill_inbuf.Clone22:                      ; preds = %if.then5.fill_inbuf.Clone20
  store i32 -1, i32* %retval.fill_inbuf.Clone2, align 4
  br label %return.fill_inbuf.Clone27

if.end7.fill_inbuf.Clone23:                       ; preds = %if.then5.fill_inbuf.Clone20
  br label %entry.read_error.Clone100

entry.read_error.Clone100:                        ; preds = %if.end7.fill_inbuf.Clone23
  %92 = load i8*, i8** @progname, align 4
  %call.read_error.Clone101 = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone102 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone101, i32 2
  %call1.read_error.Clone103 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone102, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %92)
  %call2.read_error.Clone104 = call i32* @_errno()
  %93 = load i32, i32* %call2.read_error.Clone104, align 4
  %cmp.read_error.Clone105 = icmp ne i32 %93, 0
  br i1 %cmp.read_error.Clone105, label %if.then.read_error.Clone106, label %if.else.read_error.Clone107

if.then.read_error.Clone106:                      ; preds = %entry.read_error.Clone100
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone111

if.else.read_error.Clone107:                      ; preds = %entry.read_error.Clone100
  %call3.read_error.Clone108 = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone109 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone108, i32 2
  %call5.read_error.Clone110 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone109, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone111

if.end.read_error.Clone111:                       ; preds = %if.else.read_error.Clone107, %if.then.read_error.Clone106
  br label %entry.abort_gzip.Clone124

entry.abort_gzip.Clone124:                        ; preds = %if.end.read_error.Clone111
  %94 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone125 = icmp ne i32 %94, 0
  br i1 %tobool.abort_gzip.Clone125, label %if.then.abort_gzip.Clone126, label %if.end.abort_gzip.Clone129

if.then.abort_gzip.Clone126:                      ; preds = %entry.abort_gzip.Clone124
  %95 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone127 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %95)
  %call1.abort_gzip.Clone128 = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone129

if.end.abort_gzip.Clone129:                       ; preds = %if.then.abort_gzip.Clone126, %entry.abort_gzip.Clone124
  br label %entry.do_exit.Clone172

entry.do_exit.Clone172:                           ; preds = %if.end.abort_gzip.Clone129
  %exitcode.addr.do_exit.Clone173 = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone173, align 4
  %96 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone174 = icmp ne i32 %96, 0
  br i1 %tobool.do_exit.Clone174, label %if.then.do_exit.Clone175, label %if.end.do_exit.Clone176

if.then.do_exit.Clone175:                         ; preds = %entry.do_exit.Clone172
  %97 = load i32, i32* %exitcode.addr.do_exit.Clone173, align 4
  call void @exit(i32 %97) #7
  unreachable

if.end.do_exit.Clone176:                          ; preds = %entry.do_exit.Clone172
  store i32 1, i32* @do_exit.in_exit, align 4
  %98 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone177 = icmp ne i8* %98, null
  br i1 %cmp.do_exit.Clone177, label %if.then1.do_exit.Clone178, label %if.end2.do_exit.Clone179

if.then1.do_exit.Clone178:                        ; preds = %if.end.do_exit.Clone176
  %99 = load i8*, i8** @env, align 4
  call void @free(i8* %99) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone179

if.end2.do_exit.Clone179:                         ; preds = %if.then1.do_exit.Clone178, %if.end.do_exit.Clone176
  %100 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone180 = icmp ne i8** %100, null
  br i1 %cmp3.do_exit.Clone180, label %if.then4.do_exit.Clone181, label %if.end5.do_exit.Clone182

if.then4.do_exit.Clone181:                        ; preds = %if.end2.do_exit.Clone179
  %101 = load i8**, i8*** @args, align 4
  %102 = bitcast i8** %101 to i8*
  call void @free(i8* %102) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone182

if.end5.do_exit.Clone182:                         ; preds = %if.then4.do_exit.Clone181, %if.end2.do_exit.Clone179
  %103 = load i32, i32* %exitcode.addr.do_exit.Clone173, align 4
  call void @exit(i32 %103) #7
  unreachable

return.do_exit.Clone183:                          ; No predecessors!
  br label %if.end.abort_gzip.Clone129.Split

if.end.abort_gzip.Clone129.Split:                 ; preds = %return.do_exit.Clone183
  br label %if.end.read_error.Clone111.Split

if.end.read_error.Clone111.Split:                 ; preds = %if.end.abort_gzip.Clone129.Split
  br label %if.end7.fill_inbuf.Clone23.Split

if.end7.fill_inbuf.Clone23.Split:                 ; preds = %if.end.read_error.Clone111.Split
  br label %if.end8.fill_inbuf.Clone24

if.end8.fill_inbuf.Clone24:                       ; preds = %if.end7.fill_inbuf.Clone23.Split, %do.end.fill_inbuf.Clone18
  %104 = load i32, i32* @insize, align 4
  %105 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone25 = add i32 %105, %104
  store i32 %add9.fill_inbuf.Clone25, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %106 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone26 = zext i8 %106 to i32
  store i32 %conv.fill_inbuf.Clone26, i32* %retval.fill_inbuf.Clone2, align 4
  br label %return.fill_inbuf.Clone27

return.fill_inbuf.Clone27:                        ; preds = %if.end8.fill_inbuf.Clone24, %if.then6.fill_inbuf.Clone22
  %107 = load i32, i32* %retval.fill_inbuf.Clone2, align 4
  store i32 %107, i32* %RetValuePtr28
  br label %cond.false25.Split

cond.false25.Split:                               ; preds = %return.fill_inbuf.Clone27
  %RetValue29 = load i32, i32* %RetValuePtr28
  br label %cond.end27

cond.end27:                                       ; preds = %cond.false25.Split, %cond.true21
  %cond28 = phi i32 [ %conv24, %cond.true21 ], [ %RetValue29, %cond.false25.Split ]
  %108 = load i32, i32* %len, align 4
  %arrayidx29 = getelementptr inbounds [26 x i32], [26 x i32]* @leaves, i32 0, i32 %108
  store i32 %cond28, i32* %arrayidx29, align 4
  %109 = load i32, i32* %len, align 4
  %arrayidx30 = getelementptr inbounds [26 x i32], [26 x i32]* @leaves, i32 0, i32 %109
  %110 = load i32, i32* %arrayidx30, align 4
  %111 = load i32, i32* %n, align 4
  %add = add nsw i32 %111, %110
  store i32 %add, i32* %n, align 4
  br label %for.inc31

for.inc31:                                        ; preds = %cond.end27
  %112 = load i32, i32* %len, align 4
  %inc32 = add nsw i32 %112, 1
  store i32 %inc32, i32* %len, align 4
  br label %for.cond15

CallOutFuncBB:                                    ; preds = %for.cond15
  call void @for.end33.OutLineFunc(i32* %n, i32* %base, i32* %len)
  %113 = getelementptr inbounds %Struct.RetValue.39, %Struct.RetValue.39* @Struct.RetValue.49, i32 0, i32 0
  %114 = load i32*, i32** %113, align 4
  %115 = load i32, i32* %114, align 4
  store i32 %115, i32* %base
  %116 = getelementptr inbounds %Struct.RetValue.39, %Struct.RetValue.39* @Struct.RetValue.49, i32 0, i32 1
  %117 = load i32*, i32** %116, align 4
  %118 = load i32, i32* %117, align 4
  store i32 %118, i32* %len
  br label %for.cond40

for.cond40:                                       ; preds = %CallOutFuncBB, %for.inc65
  %119 = load i32, i32* %len, align 4
  %120 = load i32, i32* @max_len, align 4
  %cmp41 = icmp sle i32 %119, %120
  br i1 %cmp41, label %for.body43, label %for.end67

for.body43:                                       ; preds = %for.cond40
  %121 = load i32, i32* %base, align 4
  %122 = load i32, i32* %len, align 4
  %arrayidx44 = getelementptr inbounds [26 x i32], [26 x i32]* @lit_base, i32 0, i32 %122
  store i32 %121, i32* %arrayidx44, align 4
  %123 = load i32, i32* %len, align 4
  %arrayidx45 = getelementptr inbounds [26 x i32], [26 x i32]* @leaves, i32 0, i32 %123
  %124 = load i32, i32* %arrayidx45, align 4
  store i32 %124, i32* %n, align 4
  br label %for.cond46

for.cond46:                                       ; preds = %for.inc63, %for.body43
  %125 = load i32, i32* %n, align 4
  %cmp47 = icmp sgt i32 %125, 0
  br i1 %cmp47, label %for.body49, label %for.end64

for.body49:                                       ; preds = %for.cond46
  %126 = load i32, i32* @inptr, align 4
  %127 = load i32, i32* @insize, align 4
  %cmp50 = icmp ult i32 %126, %127
  br i1 %cmp50, label %cond.true52, label %cond.false56

cond.true52:                                      ; preds = %for.body49
  %128 = load i32, i32* @inptr, align 4
  %inc53 = add i32 %128, 1
  store i32 %inc53, i32* @inptr, align 4
  %arrayidx54 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i32 0, i32 %128
  %129 = load i8, i8* %arrayidx54, align 1
  %conv55 = zext i8 %129 to i32
  br label %cond.end58

cond.false56:                                     ; preds = %for.body49
  br label %entry.fill_inbuf.Clone

entry.fill_inbuf.Clone:                           ; preds = %cond.false56
  %retval.fill_inbuf.Clone = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone = alloca i32, align 4
  %len.fill_inbuf.Clone = alloca i32, align 4
  store i32 0, i32* %eof_ok.addr.fill_inbuf.Clone, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone, align 4
  br label %do.body.fill_inbuf.Clone

do.body.fill_inbuf.Clone:                         ; preds = %do.cond.fill_inbuf.Clone, %entry.fill_inbuf.Clone
  %130 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone = sub i32 32768, %130
  %131 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %131
  %132 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone = call i32 @spec_read(i32 %132, i8* %add.ptr.fill_inbuf.Clone, i32 %sub.fill_inbuf.Clone)
  store i32 %call1.fill_inbuf.Clone, i32* %len.fill_inbuf.Clone, align 4
  %133 = load i32, i32* %len.fill_inbuf.Clone, align 4
  %cmp.fill_inbuf.Clone = icmp eq i32 %133, 0
  br i1 %cmp.fill_inbuf.Clone, label %if.then.fill_inbuf.Clone, label %lor.lhs.false.fill_inbuf.Clone

lor.lhs.false.fill_inbuf.Clone:                   ; preds = %do.body.fill_inbuf.Clone
  %134 = load i32, i32* %len.fill_inbuf.Clone, align 4
  %cmp2.fill_inbuf.Clone = icmp eq i32 %134, -1
  br i1 %cmp2.fill_inbuf.Clone, label %if.then.fill_inbuf.Clone, label %if.end.fill_inbuf.Clone

if.then.fill_inbuf.Clone:                         ; preds = %lor.lhs.false.fill_inbuf.Clone, %do.body.fill_inbuf.Clone
  br label %do.end.fill_inbuf.Clone

if.end.fill_inbuf.Clone:                          ; preds = %lor.lhs.false.fill_inbuf.Clone
  %135 = load i32, i32* %len.fill_inbuf.Clone, align 4
  %136 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone = add i32 %136, %135
  store i32 %add.fill_inbuf.Clone, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone

do.cond.fill_inbuf.Clone:                         ; preds = %if.end.fill_inbuf.Clone
  %137 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone = icmp ult i32 %137, 32768
  br i1 %cmp3.fill_inbuf.Clone, label %do.body.fill_inbuf.Clone, label %do.end.fill_inbuf.Clone

do.end.fill_inbuf.Clone:                          ; preds = %do.cond.fill_inbuf.Clone, %if.then.fill_inbuf.Clone
  %138 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone = icmp eq i32 %138, 0
  br i1 %cmp4.fill_inbuf.Clone, label %if.then5.fill_inbuf.Clone, label %if.end8.fill_inbuf.Clone

if.then5.fill_inbuf.Clone:                        ; preds = %do.end.fill_inbuf.Clone
  %139 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone, align 4
  %tobool.fill_inbuf.Clone = icmp ne i32 %139, 0
  br i1 %tobool.fill_inbuf.Clone, label %if.then6.fill_inbuf.Clone, label %if.end7.fill_inbuf.Clone

if.then6.fill_inbuf.Clone:                        ; preds = %if.then5.fill_inbuf.Clone
  store i32 -1, i32* %retval.fill_inbuf.Clone, align 4
  br label %return.fill_inbuf.Clone

if.end7.fill_inbuf.Clone:                         ; preds = %if.then5.fill_inbuf.Clone
  br label %entry.read_error.Clone112

entry.read_error.Clone112:                        ; preds = %if.end7.fill_inbuf.Clone
  %140 = load i8*, i8** @progname, align 4
  %call.read_error.Clone113 = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone114 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone113, i32 2
  %call1.read_error.Clone115 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone114, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %140)
  %call2.read_error.Clone116 = call i32* @_errno()
  %141 = load i32, i32* %call2.read_error.Clone116, align 4
  %cmp.read_error.Clone117 = icmp ne i32 %141, 0
  br i1 %cmp.read_error.Clone117, label %if.then.read_error.Clone118, label %if.else.read_error.Clone119

if.then.read_error.Clone118:                      ; preds = %entry.read_error.Clone112
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone123

if.else.read_error.Clone119:                      ; preds = %entry.read_error.Clone112
  %call3.read_error.Clone120 = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone121 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone120, i32 2
  %call5.read_error.Clone122 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone121, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone123

if.end.read_error.Clone123:                       ; preds = %if.else.read_error.Clone119, %if.then.read_error.Clone118
  br label %entry.abort_gzip.Clone

entry.abort_gzip.Clone:                           ; preds = %if.end.read_error.Clone123
  %142 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone = icmp ne i32 %142, 0
  br i1 %tobool.abort_gzip.Clone, label %if.then.abort_gzip.Clone, label %if.end.abort_gzip.Clone

if.then.abort_gzip.Clone:                         ; preds = %entry.abort_gzip.Clone
  %143 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %143)
  %call1.abort_gzip.Clone = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone

if.end.abort_gzip.Clone:                          ; preds = %if.then.abort_gzip.Clone, %entry.abort_gzip.Clone
  br label %entry.do_exit.Clone184

entry.do_exit.Clone184:                           ; preds = %if.end.abort_gzip.Clone
  %exitcode.addr.do_exit.Clone185 = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone185, align 4
  %144 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone186 = icmp ne i32 %144, 0
  br i1 %tobool.do_exit.Clone186, label %if.then.do_exit.Clone187, label %if.end.do_exit.Clone188

if.then.do_exit.Clone187:                         ; preds = %entry.do_exit.Clone184
  %145 = load i32, i32* %exitcode.addr.do_exit.Clone185, align 4
  call void @exit(i32 %145) #7
  unreachable

if.end.do_exit.Clone188:                          ; preds = %entry.do_exit.Clone184
  store i32 1, i32* @do_exit.in_exit, align 4
  %146 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone189 = icmp ne i8* %146, null
  br i1 %cmp.do_exit.Clone189, label %if.then1.do_exit.Clone190, label %if.end2.do_exit.Clone191

if.then1.do_exit.Clone190:                        ; preds = %if.end.do_exit.Clone188
  %147 = load i8*, i8** @env, align 4
  call void @free(i8* %147) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone191

if.end2.do_exit.Clone191:                         ; preds = %if.then1.do_exit.Clone190, %if.end.do_exit.Clone188
  %148 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone192 = icmp ne i8** %148, null
  br i1 %cmp3.do_exit.Clone192, label %if.then4.do_exit.Clone193, label %if.end5.do_exit.Clone194

if.then4.do_exit.Clone193:                        ; preds = %if.end2.do_exit.Clone191
  %149 = load i8**, i8*** @args, align 4
  %150 = bitcast i8** %149 to i8*
  call void @free(i8* %150) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone194

if.end5.do_exit.Clone194:                         ; preds = %if.then4.do_exit.Clone193, %if.end2.do_exit.Clone191
  %151 = load i32, i32* %exitcode.addr.do_exit.Clone185, align 4
  call void @exit(i32 %151) #7
  unreachable

return.do_exit.Clone195:                          ; No predecessors!
  br label %if.end.abort_gzip.Clone.Split

if.end.abort_gzip.Clone.Split:                    ; preds = %return.do_exit.Clone195
  br label %if.end.read_error.Clone123.Split

if.end.read_error.Clone123.Split:                 ; preds = %if.end.abort_gzip.Clone.Split
  br label %if.end7.fill_inbuf.Clone.Split

if.end7.fill_inbuf.Clone.Split:                   ; preds = %if.end.read_error.Clone123.Split
  br label %if.end8.fill_inbuf.Clone

if.end8.fill_inbuf.Clone:                         ; preds = %if.end7.fill_inbuf.Clone.Split, %do.end.fill_inbuf.Clone
  %152 = load i32, i32* @insize, align 4
  %153 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone = add i32 %153, %152
  store i32 %add9.fill_inbuf.Clone, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %154 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone = zext i8 %154 to i32
  store i32 %conv.fill_inbuf.Clone, i32* %retval.fill_inbuf.Clone, align 4
  br label %return.fill_inbuf.Clone

return.fill_inbuf.Clone:                          ; preds = %if.end8.fill_inbuf.Clone, %if.then6.fill_inbuf.Clone
  %155 = load i32, i32* %retval.fill_inbuf.Clone, align 4
  store i32 %155, i32* %RetValuePtr
  br label %cond.false56.Split

cond.false56.Split:                               ; preds = %return.fill_inbuf.Clone
  %RetValue = load i32, i32* %RetValuePtr
  br label %cond.end58

cond.end58:                                       ; preds = %cond.false56.Split, %cond.true52
  %cond59 = phi i32 [ %conv55, %cond.true52 ], [ %RetValue, %cond.false56.Split ]
  %conv60 = trunc i32 %cond59 to i8
  %156 = load i32, i32* %base, align 4
  %inc61 = add nsw i32 %156, 1
  store i32 %inc61, i32* %base, align 4
  %arrayidx62 = getelementptr inbounds [256 x i8], [256 x i8]* @literal, i32 0, i32 %156
  store i8 %conv60, i8* %arrayidx62, align 1
  br label %for.inc63

for.inc63:                                        ; preds = %cond.end58
  %157 = load i32, i32* %n, align 4
  %dec = add nsw i32 %157, -1
  store i32 %dec, i32* %n, align 4
  br label %for.cond46

for.end64:                                        ; preds = %for.cond46
  br label %for.inc65

for.inc65:                                        ; preds = %for.end64
  %158 = load i32, i32* %len, align 4
  %inc66 = add nsw i32 %158, 1
  store i32 %inc66, i32* %len, align 4
  br label %for.cond40

for.end67:                                        ; preds = %for.cond40
  %159 = load i32, i32* @max_len, align 4
  %arrayidx68 = getelementptr inbounds [26 x i32], [26 x i32]* @leaves, i32 0, i32 %159
  %160 = load i32, i32* %arrayidx68, align 4
  %inc69 = add nsw i32 %160, 1
  store i32 %inc69, i32* %arrayidx68, align 4
  ret void
}

; Function Attrs: noinline nounwind optnone sspstrong
define internal void @build_tree.19() #0 {
entry:
  %nodes = alloca i32, align 4
  %len = alloca i32, align 4
  %prefixp = alloca i8*, align 4
  %prefixes = alloca i32, align 4
  store i32 0, i32* %nodes, align 4
  %0 = load i32, i32* @max_len, align 4
  store i32 %0, i32* %len, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %len, align 4
  %cmp = icmp sge i32 %1, 1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %nodes, align 4
  %shr = ashr i32 %2, 1
  store i32 %shr, i32* %nodes, align 4
  %3 = load i32, i32* %nodes, align 4
  %4 = load i32, i32* %len, align 4
  %arrayidx = getelementptr inbounds [26 x i32], [26 x i32]* @parents, i32 0, i32 %4
  store i32 %3, i32* %arrayidx, align 4
  %5 = load i32, i32* %nodes, align 4
  %6 = load i32, i32* %len, align 4
  %arrayidx1 = getelementptr inbounds [26 x i32], [26 x i32]* @lit_base, i32 0, i32 %6
  %7 = load i32, i32* %arrayidx1, align 4
  %sub = sub nsw i32 %7, %5
  store i32 %sub, i32* %arrayidx1, align 4
  %8 = load i32, i32* %len, align 4
  %arrayidx2 = getelementptr inbounds [26 x i32], [26 x i32]* @leaves, i32 0, i32 %8
  %9 = load i32, i32* %arrayidx2, align 4
  %10 = load i32, i32* %nodes, align 4
  %add = add nsw i32 %10, %9
  store i32 %add, i32* %nodes, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %11 = load i32, i32* %len, align 4
  %dec = add nsw i32 %11, -1
  store i32 %dec, i32* %len, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %12 = load i32, i32* @max_len, align 4
  %cmp3 = icmp sle i32 %12, 12
  br i1 %cmp3, label %cond.true, label %cond.false

cond.true:                                        ; preds = %for.end
  %13 = load i32, i32* @max_len, align 4
  br label %cond.end

cond.false:                                       ; preds = %for.end
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %13, %cond.true ], [ 12, %cond.false ]
  store i32 %cond, i32* @peek_bits, align 4
  %14 = load i32, i32* @peek_bits, align 4
  %shl = shl i32 1, %14
  %arrayidx4 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i32 0, i32 %shl
  store i8* %arrayidx4, i8** %prefixp, align 4
  store i32 1, i32* %len, align 4
  br label %CallOutFuncBB

CallOutFuncBB:                                    ; preds = %cond.end
  call void @for.cond5.OutLineFunc(i32* %len, i32* %prefixes, i8** %prefixp)
  %15 = getelementptr inbounds %Struct.RetValue.40, %Struct.RetValue.40* @Struct.RetValue.50, i32 0, i32 0
  %16 = load i32*, i32** %15, align 4
  %17 = load i32, i32* %16, align 4
  store i32 %17, i32* %len
  %18 = getelementptr inbounds %Struct.RetValue.40, %Struct.RetValue.40* @Struct.RetValue.50, i32 0, i32 1
  %19 = load i32*, i32** %18, align 4
  %20 = load i32, i32* %19, align 4
  store i32 %20, i32* %prefixes
  %21 = getelementptr inbounds %Struct.RetValue.40, %Struct.RetValue.40* @Struct.RetValue.50, i32 0, i32 2
  %22 = load i8**, i8*** %21, align 4
  %23 = load i8*, i8** %22, align 4
  store i8* %23, i8** %prefixp
  br label %while.cond14

while.cond14:                                     ; preds = %CallOutFuncBB, %while.body17
  %24 = load i8*, i8** %prefixp, align 4
  %cmp15 = icmp ugt i8* %24, getelementptr inbounds ([18432 x i8], [18432 x i8]* @outbuf, i32 0, i32 0)
  br i1 %cmp15, label %while.body17, label %while.end19

while.body17:                                     ; preds = %while.cond14
  %25 = load i8*, i8** %prefixp, align 4
  %incdec.ptr18 = getelementptr inbounds i8, i8* %25, i32 -1
  store i8* %incdec.ptr18, i8** %prefixp, align 4
  store i8 0, i8* %incdec.ptr18, align 1
  br label %while.cond14

while.end19:                                      ; preds = %while.cond14
  ret void
}

; Function Attrs: noinline optnone sspstrong
define dso_local i32 @check_zipfile(i32 %in) #1 {
entry:
  %retval = alloca i32, align 4
  %in.addr = alloca i32, align 4
  %h = alloca i8*, align 4
  store i32 %in, i32* %in.addr, align 4
  %0 = load i32, i32* @inptr, align 4
  %add.ptr = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %0
  store i8* %add.ptr, i8** %h, align 4
  %1 = load i32, i32* %in.addr, align 4
  store i32 %1, i32* @ifd, align 4
  %2 = load i8*, i8** %h, align 4
  %add.ptr1 = getelementptr inbounds i8, i8* %2, i32 26
  %arrayidx = getelementptr inbounds i8, i8* %add.ptr1, i32 0
  %3 = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %3 to i16
  %conv2 = zext i16 %conv to i32
  %4 = load i8*, i8** %h, align 4
  %add.ptr3 = getelementptr inbounds i8, i8* %4, i32 26
  %arrayidx4 = getelementptr inbounds i8, i8* %add.ptr3, i32 1
  %5 = load i8, i8* %arrayidx4, align 1
  %conv5 = zext i8 %5 to i16
  %conv6 = zext i16 %conv5 to i32
  %shl = shl i32 %conv6, 8
  %or = or i32 %conv2, %shl
  %add = add nsw i32 30, %or
  %6 = load i8*, i8** %h, align 4
  %add.ptr7 = getelementptr inbounds i8, i8* %6, i32 28
  %arrayidx8 = getelementptr inbounds i8, i8* %add.ptr7, i32 0
  %7 = load i8, i8* %arrayidx8, align 1
  %conv9 = zext i8 %7 to i16
  %conv10 = zext i16 %conv9 to i32
  %8 = load i8*, i8** %h, align 4
  %add.ptr11 = getelementptr inbounds i8, i8* %8, i32 28
  %arrayidx12 = getelementptr inbounds i8, i8* %add.ptr11, i32 1
  %9 = load i8, i8* %arrayidx12, align 1
  %conv13 = zext i8 %9 to i16
  %conv14 = zext i16 %conv13 to i32
  %shl15 = shl i32 %conv14, 8
  %or16 = or i32 %conv10, %shl15
  %add17 = add nsw i32 %add, %or16
  %10 = load i32, i32* @inptr, align 4
  %add18 = add i32 %10, %add17
  store i32 %add18, i32* @inptr, align 4
  %11 = load i32, i32* @inptr, align 4
  %12 = load i32, i32* @insize, align 4
  %cmp = icmp ugt i32 %11, %12
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %13 = load i8*, i8** %h, align 4
  %arrayidx20 = getelementptr inbounds i8, i8* %13, i32 0
  %14 = load i8, i8* %arrayidx20, align 1
  %conv21 = zext i8 %14 to i16
  %conv22 = zext i16 %conv21 to i32
  %15 = load i8*, i8** %h, align 4
  %arrayidx23 = getelementptr inbounds i8, i8* %15, i32 1
  %16 = load i8, i8* %arrayidx23, align 1
  %conv24 = zext i8 %16 to i16
  %conv25 = zext i16 %conv24 to i32
  %shl26 = shl i32 %conv25, 8
  %or27 = or i32 %conv22, %shl26
  %17 = load i8*, i8** %h, align 4
  %add.ptr28 = getelementptr inbounds i8, i8* %17, i32 2
  %arrayidx29 = getelementptr inbounds i8, i8* %add.ptr28, i32 0
  %18 = load i8, i8* %arrayidx29, align 1
  %conv30 = zext i8 %18 to i16
  %conv31 = zext i16 %conv30 to i32
  %19 = load i8*, i8** %h, align 4
  %add.ptr32 = getelementptr inbounds i8, i8* %19, i32 2
  %arrayidx33 = getelementptr inbounds i8, i8* %add.ptr32, i32 1
  %20 = load i8, i8* %arrayidx33, align 1
  %conv34 = zext i8 %20 to i16
  %conv35 = zext i16 %conv34 to i32
  %shl36 = shl i32 %conv35, 8
  %or37 = or i32 %conv31, %shl36
  %shl38 = shl i32 %or37, 16
  %or39 = or i32 %or27, %shl38
  %cmp40 = icmp ne i32 %or39, 67324752
  br i1 %cmp40, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  %21 = load i8*, i8** @progname, align 4
  %call = call %struct._iobuf* @__iob_func()
  %arrayidx42 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call, i32 2
  %call43 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx42, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @"??_C@_0BP@EPBKLAEA@?6?$CFs?3?5?$CFs?3?5not?5a?5valid?5zip?5file?6?$AA@", i32 0, i32 0), i8* %21, i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  store i32 1, i32* @exit_code, align 4
  store i32 1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %22 = load i8*, i8** %h, align 4
  %arrayidx44 = getelementptr inbounds i8, i8* %22, i32 8
  %23 = load i8, i8* %arrayidx44, align 1
  %conv45 = zext i8 %23 to i32
  store i32 %conv45, i32* @method, align 4
  %24 = load i32, i32* @method, align 4
  %cmp46 = icmp ne i32 %24, 0
  br i1 %cmp46, label %land.lhs.true, label %if.end54

land.lhs.true:                                    ; preds = %if.end
  %25 = load i32, i32* @method, align 4
  %cmp48 = icmp ne i32 %25, 8
  br i1 %cmp48, label %if.then50, label %if.end54

if.then50:                                        ; preds = %land.lhs.true
  %26 = load i8*, i8** @progname, align 4
  %call51 = call %struct._iobuf* @__iob_func()
  %arrayidx52 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call51, i32 2
  %call53 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx52, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @"??_C@_0DK@JINEBEMN@?6?$CFs?3?5?$CFs?3?5first?5entry?5not?5deflate@", i32 0, i32 0), i8* %26, i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  store i32 1, i32* @exit_code, align 4
  store i32 1, i32* %retval, align 4
  br label %return

if.end54:                                         ; preds = %land.lhs.true, %if.end
  %27 = load i8*, i8** %h, align 4
  %arrayidx55 = getelementptr inbounds i8, i8* %27, i32 6
  %28 = load i8, i8* %arrayidx55, align 1
  %conv56 = zext i8 %28 to i32
  %and = and i32 %conv56, 1
  store i32 %and, i32* @decrypt, align 4
  %cmp57 = icmp ne i32 %and, 0
  br i1 %cmp57, label %if.then59, label %if.end63

if.then59:                                        ; preds = %if.end54
  %29 = load i8*, i8** @progname, align 4
  %call60 = call %struct._iobuf* @__iob_func()
  %arrayidx61 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call60, i32 2
  %call62 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx61, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @"??_C@_0CG@IDAFIPME@?6?$CFs?3?5?$CFs?3?5encrypted?5file?5?9?9?5use?5u@", i32 0, i32 0), i8* %29, i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  store i32 1, i32* @exit_code, align 4
  store i32 1, i32* %retval, align 4
  br label %return

if.end63:                                         ; preds = %if.end54
  %30 = load i8*, i8** %h, align 4
  %arrayidx64 = getelementptr inbounds i8, i8* %30, i32 6
  %31 = load i8, i8* %arrayidx64, align 1
  %conv65 = zext i8 %31 to i32
  %and66 = and i32 %conv65, 8
  %cmp67 = icmp ne i32 %and66, 0
  %conv68 = zext i1 %cmp67 to i32
  store i32 %conv68, i32* @ext_header, align 4
  store i32 1, i32* @pkzip, align 4
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end63, %if.then59, %if.then50, %if.then
  %32 = load i32, i32* %retval, align 4
  ret i32 %32
}

; Function Attrs: noinline optnone sspstrong
define dso_local i32 @unzip(i32 %in, i32 %out) #1 {
entry:
  %retval = alloca i32, align 4
  %out.addr = alloca i32, align 4
  %in.addr = alloca i32, align 4
  %orig_crc = alloca i32, align 4
  %orig_len = alloca i32, align 4
  %n = alloca i32, align 4
  %buf = alloca [16 x i8], align 1
  %res = alloca i32, align 4
  %n44 = alloca i32, align 4
  %c = alloca i8, align 1
  store i32 %out, i32* %out.addr, align 4
  store i32 %in, i32* %in.addr, align 4
  store i32 0, i32* %orig_crc, align 4
  store i32 0, i32* %orig_len, align 4
  %0 = load i32, i32* %in.addr, align 4
  store i32 %0, i32* @ifd, align 4
  %1 = load i32, i32* %out.addr, align 4
  store i32 %1, i32* @ofd, align 4
  %RetValuePtr158 = alloca i32, align 4
  %RetValuePtr298 = alloca i32, align 4
  %RetValuePtr329 = alloca i32, align 4
  br label %entry.updcrc.Clone134

entry.updcrc.Clone134:                            ; preds = %entry
  %n.addr.updcrc.Clone135 = alloca i32, align 4
  %s.addr.updcrc.Clone136 = alloca i8*, align 4
  %c.updcrc.Clone137 = alloca i32, align 4
  store i32 0, i32* %n.addr.updcrc.Clone135, align 4
  store i8* null, i8** %s.addr.updcrc.Clone136, align 4
  %2 = load i8*, i8** %s.addr.updcrc.Clone136, align 4
  %cmp.updcrc.Clone138 = icmp eq i8* %2, null
  br i1 %cmp.updcrc.Clone138, label %if.then.updcrc.Clone139, label %if.else.updcrc.Clone140

if.then.updcrc.Clone139:                          ; preds = %entry.updcrc.Clone134
  store i32 -1, i32* %c.updcrc.Clone137, align 4
  br label %if.end4.updcrc.Clone156

if.else.updcrc.Clone140:                          ; preds = %entry.updcrc.Clone134
  %3 = load i32, i32* @updcrc.crc, align 4
  store i32 %3, i32* %c.updcrc.Clone137, align 4
  %4 = load i32, i32* %n.addr.updcrc.Clone135, align 4
  %tobool.updcrc.Clone141 = icmp ne i32 %4, 0
  br i1 %tobool.updcrc.Clone141, label %if.then1.updcrc.Clone142, label %if.end.updcrc.Clone155

if.then1.updcrc.Clone142:                         ; preds = %if.else.updcrc.Clone140
  br label %do.body.updcrc.Clone143

do.body.updcrc.Clone143:                          ; preds = %do.cond.updcrc.Clone151, %if.then1.updcrc.Clone142
  %5 = load i32, i32* %c.updcrc.Clone137, align 4
  %6 = load i8*, i8** %s.addr.updcrc.Clone136, align 4
  %incdec.ptr.updcrc.Clone144 = getelementptr inbounds i8, i8* %6, i32 1
  store i8* %incdec.ptr.updcrc.Clone144, i8** %s.addr.updcrc.Clone136, align 4
  %7 = load i8, i8* %6, align 1
  %conv.updcrc.Clone145 = zext i8 %7 to i32
  %xor.updcrc.Clone146 = xor i32 %5, %conv.updcrc.Clone145
  %and.updcrc.Clone147 = and i32 %xor.updcrc.Clone146, 255
  %arrayidx.updcrc.Clone148 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([256 x i32]* @crc_32_tab to [0 x i32]*), i32 0, i32 %and.updcrc.Clone147
  %8 = load i32, i32* %arrayidx.updcrc.Clone148, align 4
  %9 = load i32, i32* %c.updcrc.Clone137, align 4
  %shr.updcrc.Clone149 = lshr i32 %9, 8
  %xor2.updcrc.Clone150 = xor i32 %8, %shr.updcrc.Clone149
  store i32 %xor2.updcrc.Clone150, i32* %c.updcrc.Clone137, align 4
  br label %do.cond.updcrc.Clone151

do.cond.updcrc.Clone151:                          ; preds = %do.body.updcrc.Clone143
  %10 = load i32, i32* %n.addr.updcrc.Clone135, align 4
  %dec.updcrc.Clone152 = add i32 %10, -1
  store i32 %dec.updcrc.Clone152, i32* %n.addr.updcrc.Clone135, align 4
  %tobool3.updcrc.Clone153 = icmp ne i32 %dec.updcrc.Clone152, 0
  br i1 %tobool3.updcrc.Clone153, label %do.body.updcrc.Clone143, label %do.end.updcrc.Clone154

do.end.updcrc.Clone154:                           ; preds = %do.cond.updcrc.Clone151
  br label %if.end.updcrc.Clone155

if.end.updcrc.Clone155:                           ; preds = %do.end.updcrc.Clone154, %if.else.updcrc.Clone140
  br label %if.end4.updcrc.Clone156

if.end4.updcrc.Clone156:                          ; preds = %if.end.updcrc.Clone155, %if.then.updcrc.Clone139
  %11 = load i32, i32* %c.updcrc.Clone137, align 4
  store i32 %11, i32* @updcrc.crc, align 4
  %12 = load i32, i32* %c.updcrc.Clone137, align 4
  %xor5.updcrc.Clone157 = xor i32 %12, -1
  store i32 %xor5.updcrc.Clone157, i32* %RetValuePtr158
  br label %entry.Split

entry.Split:                                      ; preds = %if.end4.updcrc.Clone156
  %RetValue159 = load i32, i32* %RetValuePtr158
  %13 = load i32, i32* @pkzip, align 4
  %tobool = icmp ne i32 %13, 0
  %RetValuePtr = alloca i32, align 4
  %RetValuePtr28 = alloca i32, align 4
  %RetValuePtr80 = alloca i32, align 4
  %RetValuePtr106 = alloca i32, align 4
  %RetValuePtr132 = alloca i32, align 4
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry.Split
  %14 = load i32, i32* @ext_header, align 4
  %tobool1 = icmp ne i32 %14, 0
  br i1 %tobool1, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %15 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 14), align 1
  %conv = zext i8 %15 to i16
  %conv2 = zext i16 %conv to i32
  %16 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 15), align 1
  %conv3 = zext i8 %16 to i16
  %conv4 = zext i16 %conv3 to i32
  %shl = shl i32 %conv4, 8
  %or = or i32 %conv2, %shl
  %17 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 16), align 1
  %conv5 = zext i8 %17 to i16
  %conv6 = zext i16 %conv5 to i32
  %18 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 17), align 1
  %conv7 = zext i8 %18 to i16
  %conv8 = zext i16 %conv7 to i32
  %shl9 = shl i32 %conv8, 8
  %or10 = or i32 %conv6, %shl9
  %shl11 = shl i32 %or10, 16
  %or12 = or i32 %or, %shl11
  store i32 %or12, i32* %orig_crc, align 4
  %19 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 22), align 1
  %conv13 = zext i8 %19 to i16
  %conv14 = zext i16 %conv13 to i32
  %20 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 23), align 1
  %conv15 = zext i8 %20 to i16
  %conv16 = zext i16 %conv15 to i32
  %shl17 = shl i32 %conv16, 8
  %or18 = or i32 %conv14, %shl17
  %21 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 24), align 1
  %conv19 = zext i8 %21 to i16
  %conv20 = zext i16 %conv19 to i32
  %22 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 25), align 1
  %conv21 = zext i8 %22 to i16
  %conv22 = zext i16 %conv21 to i32
  %shl23 = shl i32 %conv22, 8
  %or24 = or i32 %conv20, %shl23
  %shl25 = shl i32 %or24, 16
  %or26 = or i32 %or18, %shl25
  store i32 %or26, i32* %orig_len, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry.Split
  %23 = load i32, i32* @method, align 4
  %cmp = icmp eq i32 %23, 8
  br i1 %cmp, label %if.then28, label %if.else38

if.then28:                                        ; preds = %if.end
  %call29 = call i32 @inflate()
  store i32 %call29, i32* %res, align 4
  %24 = load i32, i32* %res, align 4
  %cmp30 = icmp eq i32 %24, 3
  br i1 %cmp30, label %if.then32, label %if.else

if.then32:                                        ; preds = %if.then28
  br label %entry.error.Clone50

entry.error.Clone50:                              ; preds = %if.then32
  %m.addr.error.Clone51 = alloca i8*, align 4
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @"??_C@_0O@BNNCBLEN@out?5of?5memory?$AA@", i32 0, i32 0), i8** %m.addr.error.Clone51, align 4
  %25 = load i8*, i8** %m.addr.error.Clone51, align 4
  %26 = load i8*, i8** @progname, align 4
  %call.error.Clone52 = call %struct._iobuf* @__iob_func()
  %arrayidx.error.Clone53 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.error.Clone52, i32 2
  %call1.error.Clone54 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.error.Clone53, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @"??_C@_0N@ODCEBLNH@?6?$CFs?3?5?$CFs?3?5?$CFs?6?$AA@", i32 0, i32 0), i8* %26, i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0), i8* %25)
  br label %entry.abort_gzip.Clone178

entry.abort_gzip.Clone178:                        ; preds = %entry.error.Clone50
  %27 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone179 = icmp ne i32 %27, 0
  br i1 %tobool.abort_gzip.Clone179, label %if.then.abort_gzip.Clone180, label %if.end.abort_gzip.Clone183

if.then.abort_gzip.Clone180:                      ; preds = %entry.abort_gzip.Clone178
  %28 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone181 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %28)
  %call1.abort_gzip.Clone182 = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone183

if.end.abort_gzip.Clone183:                       ; preds = %if.then.abort_gzip.Clone180, %entry.abort_gzip.Clone178
  br label %entry.do_exit.Clone262

entry.do_exit.Clone262:                           ; preds = %if.end.abort_gzip.Clone183
  %exitcode.addr.do_exit.Clone263 = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone263, align 4
  %29 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone264 = icmp ne i32 %29, 0
  br i1 %tobool.do_exit.Clone264, label %if.then.do_exit.Clone265, label %if.end.do_exit.Clone266

if.then.do_exit.Clone265:                         ; preds = %entry.do_exit.Clone262
  %30 = load i32, i32* %exitcode.addr.do_exit.Clone263, align 4
  call void @exit(i32 %30) #7
  unreachable

if.end.do_exit.Clone266:                          ; preds = %entry.do_exit.Clone262
  store i32 1, i32* @do_exit.in_exit, align 4
  %31 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone267 = icmp ne i8* %31, null
  br i1 %cmp.do_exit.Clone267, label %if.then1.do_exit.Clone268, label %if.end2.do_exit.Clone269

if.then1.do_exit.Clone268:                        ; preds = %if.end.do_exit.Clone266
  %32 = load i8*, i8** @env, align 4
  call void @free(i8* %32) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone269

if.end2.do_exit.Clone269:                         ; preds = %if.then1.do_exit.Clone268, %if.end.do_exit.Clone266
  %33 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone270 = icmp ne i8** %33, null
  br i1 %cmp3.do_exit.Clone270, label %if.then4.do_exit.Clone271, label %if.end5.do_exit.Clone272

if.then4.do_exit.Clone271:                        ; preds = %if.end2.do_exit.Clone269
  %34 = load i8**, i8*** @args, align 4
  %35 = bitcast i8** %34 to i8*
  call void @free(i8* %35) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone272

if.end5.do_exit.Clone272:                         ; preds = %if.then4.do_exit.Clone271, %if.end2.do_exit.Clone269
  %36 = load i32, i32* %exitcode.addr.do_exit.Clone263, align 4
  call void @exit(i32 %36) #7
  unreachable

return.do_exit.Clone273:                          ; No predecessors!
  br label %if.end.abort_gzip.Clone183.Split

if.end.abort_gzip.Clone183.Split:                 ; preds = %return.do_exit.Clone273
  br label %entry.error.Clone50.Split

entry.error.Clone50.Split:                        ; preds = %if.end.abort_gzip.Clone183.Split
  br label %if.then32.Split

if.then32.Split:                                  ; preds = %entry.error.Clone50.Split
  br label %if.end37

if.else:                                          ; preds = %if.then28
  %37 = load i32, i32* %res, align 4
  %cmp33 = icmp ne i32 %37, 0
  br i1 %cmp33, label %if.then35, label %if.end36

if.then35:                                        ; preds = %if.else
  br label %entry.error.Clone45

entry.error.Clone45:                              ; preds = %if.then35
  %m.addr.error.Clone46 = alloca i8*, align 4
  store i8* getelementptr inbounds ([41 x i8], [41 x i8]* @"??_C@_0CJ@BENKEKBG@invalid?5compressed?5data?9?9format?5@", i32 0, i32 0), i8** %m.addr.error.Clone46, align 4
  %38 = load i8*, i8** %m.addr.error.Clone46, align 4
  %39 = load i8*, i8** @progname, align 4
  %call.error.Clone47 = call %struct._iobuf* @__iob_func()
  %arrayidx.error.Clone48 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.error.Clone47, i32 2
  %call1.error.Clone49 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.error.Clone48, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @"??_C@_0N@ODCEBLNH@?6?$CFs?3?5?$CFs?3?5?$CFs?6?$AA@", i32 0, i32 0), i8* %39, i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0), i8* %38)
  br label %entry.abort_gzip.Clone184

entry.abort_gzip.Clone184:                        ; preds = %entry.error.Clone45
  %40 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone185 = icmp ne i32 %40, 0
  br i1 %tobool.abort_gzip.Clone185, label %if.then.abort_gzip.Clone186, label %if.end.abort_gzip.Clone189

if.then.abort_gzip.Clone186:                      ; preds = %entry.abort_gzip.Clone184
  %41 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone187 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %41)
  %call1.abort_gzip.Clone188 = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone189

if.end.abort_gzip.Clone189:                       ; preds = %if.then.abort_gzip.Clone186, %entry.abort_gzip.Clone184
  br label %entry.do_exit.Clone250

entry.do_exit.Clone250:                           ; preds = %if.end.abort_gzip.Clone189
  %exitcode.addr.do_exit.Clone251 = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone251, align 4
  %42 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone252 = icmp ne i32 %42, 0
  br i1 %tobool.do_exit.Clone252, label %if.then.do_exit.Clone253, label %if.end.do_exit.Clone254

if.then.do_exit.Clone253:                         ; preds = %entry.do_exit.Clone250
  %43 = load i32, i32* %exitcode.addr.do_exit.Clone251, align 4
  call void @exit(i32 %43) #7
  unreachable

if.end.do_exit.Clone254:                          ; preds = %entry.do_exit.Clone250
  store i32 1, i32* @do_exit.in_exit, align 4
  %44 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone255 = icmp ne i8* %44, null
  br i1 %cmp.do_exit.Clone255, label %if.then1.do_exit.Clone256, label %if.end2.do_exit.Clone257

if.then1.do_exit.Clone256:                        ; preds = %if.end.do_exit.Clone254
  %45 = load i8*, i8** @env, align 4
  call void @free(i8* %45) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone257

if.end2.do_exit.Clone257:                         ; preds = %if.then1.do_exit.Clone256, %if.end.do_exit.Clone254
  %46 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone258 = icmp ne i8** %46, null
  br i1 %cmp3.do_exit.Clone258, label %if.then4.do_exit.Clone259, label %if.end5.do_exit.Clone260

if.then4.do_exit.Clone259:                        ; preds = %if.end2.do_exit.Clone257
  %47 = load i8**, i8*** @args, align 4
  %48 = bitcast i8** %47 to i8*
  call void @free(i8* %48) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone260

if.end5.do_exit.Clone260:                         ; preds = %if.then4.do_exit.Clone259, %if.end2.do_exit.Clone257
  %49 = load i32, i32* %exitcode.addr.do_exit.Clone251, align 4
  call void @exit(i32 %49) #7
  unreachable

return.do_exit.Clone261:                          ; No predecessors!
  br label %if.end.abort_gzip.Clone189.Split

if.end.abort_gzip.Clone189.Split:                 ; preds = %return.do_exit.Clone261
  br label %entry.error.Clone45.Split

entry.error.Clone45.Split:                        ; preds = %if.end.abort_gzip.Clone189.Split
  br label %if.then35.Split

if.then35.Split:                                  ; preds = %entry.error.Clone45.Split
  br label %if.end36

if.end36:                                         ; preds = %if.then35.Split, %if.else
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.then32.Split
  br label %if.end110

if.else38:                                        ; preds = %if.end
  %50 = load i32, i32* @pkzip, align 4
  %tobool39 = icmp ne i32 %50, 0
  br i1 %tobool39, label %land.lhs.true40, label %if.else108

land.lhs.true40:                                  ; preds = %if.else38
  %51 = load i32, i32* @method, align 4
  %cmp41 = icmp eq i32 %51, 0
  br i1 %cmp41, label %if.then43, label %if.else108

if.then43:                                        ; preds = %land.lhs.true40
  %52 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 22), align 1
  %conv45 = zext i8 %52 to i16
  %conv46 = zext i16 %conv45 to i32
  %53 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 23), align 1
  %conv47 = zext i8 %53 to i16
  %conv48 = zext i16 %conv47 to i32
  %shl49 = shl i32 %conv48, 8
  %or50 = or i32 %conv46, %shl49
  %54 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 24), align 1
  %conv51 = zext i8 %54 to i16
  %conv52 = zext i16 %conv51 to i32
  %55 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 25), align 1
  %conv53 = zext i8 %55 to i16
  %conv54 = zext i16 %conv53 to i32
  %shl55 = shl i32 %conv54, 8
  %or56 = or i32 %conv52, %shl55
  %shl57 = shl i32 %or56, 16
  %or58 = or i32 %or50, %shl57
  store i32 %or58, i32* %n44, align 4
  %56 = load i32, i32* %n44, align 4
  %57 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 18), align 1
  %conv59 = zext i8 %57 to i16
  %conv60 = zext i16 %conv59 to i32
  %58 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 19), align 1
  %conv61 = zext i8 %58 to i16
  %conv62 = zext i16 %conv61 to i32
  %shl63 = shl i32 %conv62, 8
  %or64 = or i32 %conv60, %shl63
  %59 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 20), align 1
  %conv65 = zext i8 %59 to i16
  %conv66 = zext i16 %conv65 to i32
  %60 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 21), align 1
  %conv67 = zext i8 %60 to i16
  %conv68 = zext i16 %conv67 to i32
  %shl69 = shl i32 %conv68, 8
  %or70 = or i32 %conv66, %shl69
  %shl71 = shl i32 %or70, 16
  %or72 = or i32 %or64, %shl71
  %61 = load i32, i32* @decrypt, align 4
  %tobool73 = icmp ne i32 %61, 0
  %62 = zext i1 %tobool73 to i64
  %cond = select i1 %tobool73, i32 12, i32 0
  %sub = sub i32 %or72, %cond
  %cmp74 = icmp ne i32 %56, %sub
  br i1 %cmp74, label %if.then76, label %if.end93

if.then76:                                        ; preds = %if.then43
  %63 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 18), align 1
  %conv77 = zext i8 %63 to i16
  %conv78 = zext i16 %conv77 to i32
  %64 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 19), align 1
  %conv79 = zext i8 %64 to i16
  %conv80 = zext i16 %conv79 to i32
  %shl81 = shl i32 %conv80, 8
  %or82 = or i32 %conv78, %shl81
  %65 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 20), align 1
  %conv83 = zext i8 %65 to i16
  %conv84 = zext i16 %conv83 to i32
  %66 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 21), align 1
  %conv85 = zext i8 %66 to i16
  %conv86 = zext i16 %conv85 to i32
  %shl87 = shl i32 %conv86, 8
  %or88 = or i32 %conv84, %shl87
  %shl89 = shl i32 %or88, 16
  %or90 = or i32 %or82, %shl89
  %67 = load i32, i32* %n44, align 4
  %call91 = call %struct._iobuf* @__iob_func()
  %arrayidx = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call91, i32 2
  %call92 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @"??_C@_0BC@MEEEOOBF@len?5?$CFld?0?5siz?5?$CFld?6?$AA@", i32 0, i32 0), i32 %67, i32 %or90)
  br label %entry.error.Clone40

entry.error.Clone40:                              ; preds = %if.then76
  %m.addr.error.Clone41 = alloca i8*, align 4
  store i8* getelementptr inbounds ([41 x i8], [41 x i8]* @"??_C@_0CJ@CMKGEAKG@invalid?5compressed?5data?9?9length?5@", i32 0, i32 0), i8** %m.addr.error.Clone41, align 4
  %68 = load i8*, i8** %m.addr.error.Clone41, align 4
  %69 = load i8*, i8** @progname, align 4
  %call.error.Clone42 = call %struct._iobuf* @__iob_func()
  %arrayidx.error.Clone43 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.error.Clone42, i32 2
  %call1.error.Clone44 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.error.Clone43, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @"??_C@_0N@ODCEBLNH@?6?$CFs?3?5?$CFs?3?5?$CFs?6?$AA@", i32 0, i32 0), i8* %69, i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0), i8* %68)
  br label %entry.abort_gzip.Clone190

entry.abort_gzip.Clone190:                        ; preds = %entry.error.Clone40
  %70 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone191 = icmp ne i32 %70, 0
  br i1 %tobool.abort_gzip.Clone191, label %if.then.abort_gzip.Clone192, label %if.end.abort_gzip.Clone195

if.then.abort_gzip.Clone192:                      ; preds = %entry.abort_gzip.Clone190
  %71 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone193 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %71)
  %call1.abort_gzip.Clone194 = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone195

if.end.abort_gzip.Clone195:                       ; preds = %if.then.abort_gzip.Clone192, %entry.abort_gzip.Clone190
  br label %entry.do_exit.Clone238

entry.do_exit.Clone238:                           ; preds = %if.end.abort_gzip.Clone195
  %exitcode.addr.do_exit.Clone239 = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone239, align 4
  %72 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone240 = icmp ne i32 %72, 0
  br i1 %tobool.do_exit.Clone240, label %if.then.do_exit.Clone241, label %if.end.do_exit.Clone242

if.then.do_exit.Clone241:                         ; preds = %entry.do_exit.Clone238
  %73 = load i32, i32* %exitcode.addr.do_exit.Clone239, align 4
  call void @exit(i32 %73) #7
  unreachable

if.end.do_exit.Clone242:                          ; preds = %entry.do_exit.Clone238
  store i32 1, i32* @do_exit.in_exit, align 4
  %74 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone243 = icmp ne i8* %74, null
  br i1 %cmp.do_exit.Clone243, label %if.then1.do_exit.Clone244, label %if.end2.do_exit.Clone245

if.then1.do_exit.Clone244:                        ; preds = %if.end.do_exit.Clone242
  %75 = load i8*, i8** @env, align 4
  call void @free(i8* %75) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone245

if.end2.do_exit.Clone245:                         ; preds = %if.then1.do_exit.Clone244, %if.end.do_exit.Clone242
  %76 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone246 = icmp ne i8** %76, null
  br i1 %cmp3.do_exit.Clone246, label %if.then4.do_exit.Clone247, label %if.end5.do_exit.Clone248

if.then4.do_exit.Clone247:                        ; preds = %if.end2.do_exit.Clone245
  %77 = load i8**, i8*** @args, align 4
  %78 = bitcast i8** %77 to i8*
  call void @free(i8* %78) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone248

if.end5.do_exit.Clone248:                         ; preds = %if.then4.do_exit.Clone247, %if.end2.do_exit.Clone245
  %79 = load i32, i32* %exitcode.addr.do_exit.Clone239, align 4
  call void @exit(i32 %79) #7
  unreachable

return.do_exit.Clone249:                          ; No predecessors!
  br label %if.end.abort_gzip.Clone195.Split

if.end.abort_gzip.Clone195.Split:                 ; preds = %return.do_exit.Clone249
  br label %entry.error.Clone40.Split

entry.error.Clone40.Split:                        ; preds = %if.end.abort_gzip.Clone195.Split
  br label %if.then76.Split

if.then76.Split:                                  ; preds = %entry.error.Clone40.Split
  br label %if.end93

if.end93:                                         ; preds = %if.then76.Split, %if.then43
  br label %while.cond

while.cond:                                       ; preds = %if.end107, %if.end93
  %80 = load i32, i32* %n44, align 4
  %dec = add i32 %80, -1
  store i32 %dec, i32* %n44, align 4
  %tobool94 = icmp ne i32 %80, 0
  br i1 %tobool94, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %81 = load i32, i32* @inptr, align 4
  %82 = load i32, i32* @insize, align 4
  %cmp95 = icmp ult i32 %81, %82
  br i1 %cmp95, label %cond.true, label %cond.false

cond.true:                                        ; preds = %while.body
  %83 = load i32, i32* @inptr, align 4
  %inc = add i32 %83, 1
  store i32 %inc, i32* @inptr, align 4
  %arrayidx97 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i32 0, i32 %83
  %84 = load i8, i8* %arrayidx97, align 1
  %conv98 = zext i8 %84 to i32
  br label %cond.end

cond.false:                                       ; preds = %while.body
  br label %entry.fill_inbuf.Clone1

entry.fill_inbuf.Clone1:                          ; preds = %cond.false
  %retval.fill_inbuf.Clone2 = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone3 = alloca i32, align 4
  %len.fill_inbuf.Clone4 = alloca i32, align 4
  store i32 0, i32* %eof_ok.addr.fill_inbuf.Clone3, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone5 = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone5, align 4
  br label %do.body.fill_inbuf.Clone6

do.body.fill_inbuf.Clone6:                        ; preds = %do.cond.fill_inbuf.Clone16, %entry.fill_inbuf.Clone1
  %85 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone7 = sub i32 32768, %85
  %86 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone8 = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %86
  %87 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone9 = call i32 @spec_read(i32 %87, i8* %add.ptr.fill_inbuf.Clone8, i32 %sub.fill_inbuf.Clone7)
  store i32 %call1.fill_inbuf.Clone9, i32* %len.fill_inbuf.Clone4, align 4
  %88 = load i32, i32* %len.fill_inbuf.Clone4, align 4
  %cmp.fill_inbuf.Clone10 = icmp eq i32 %88, 0
  br i1 %cmp.fill_inbuf.Clone10, label %if.then.fill_inbuf.Clone13, label %lor.lhs.false.fill_inbuf.Clone11

lor.lhs.false.fill_inbuf.Clone11:                 ; preds = %do.body.fill_inbuf.Clone6
  %89 = load i32, i32* %len.fill_inbuf.Clone4, align 4
  %cmp2.fill_inbuf.Clone12 = icmp eq i32 %89, -1
  br i1 %cmp2.fill_inbuf.Clone12, label %if.then.fill_inbuf.Clone13, label %if.end.fill_inbuf.Clone14

if.then.fill_inbuf.Clone13:                       ; preds = %lor.lhs.false.fill_inbuf.Clone11, %do.body.fill_inbuf.Clone6
  br label %do.end.fill_inbuf.Clone18

if.end.fill_inbuf.Clone14:                        ; preds = %lor.lhs.false.fill_inbuf.Clone11
  %90 = load i32, i32* %len.fill_inbuf.Clone4, align 4
  %91 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone15 = add i32 %91, %90
  store i32 %add.fill_inbuf.Clone15, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone16

do.cond.fill_inbuf.Clone16:                       ; preds = %if.end.fill_inbuf.Clone14
  %92 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone17 = icmp ult i32 %92, 32768
  br i1 %cmp3.fill_inbuf.Clone17, label %do.body.fill_inbuf.Clone6, label %do.end.fill_inbuf.Clone18

do.end.fill_inbuf.Clone18:                        ; preds = %do.cond.fill_inbuf.Clone16, %if.then.fill_inbuf.Clone13
  %93 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone19 = icmp eq i32 %93, 0
  br i1 %cmp4.fill_inbuf.Clone19, label %if.then5.fill_inbuf.Clone20, label %if.end8.fill_inbuf.Clone24

if.then5.fill_inbuf.Clone20:                      ; preds = %do.end.fill_inbuf.Clone18
  %94 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone3, align 4
  %tobool.fill_inbuf.Clone21 = icmp ne i32 %94, 0
  br i1 %tobool.fill_inbuf.Clone21, label %if.then6.fill_inbuf.Clone22, label %if.end7.fill_inbuf.Clone23

if.then6.fill_inbuf.Clone22:                      ; preds = %if.then5.fill_inbuf.Clone20
  store i32 -1, i32* %retval.fill_inbuf.Clone2, align 4
  br label %return.fill_inbuf.Clone27

if.end7.fill_inbuf.Clone23:                       ; preds = %if.then5.fill_inbuf.Clone20
  br label %entry.read_error.Clone

entry.read_error.Clone:                           ; preds = %if.end7.fill_inbuf.Clone23
  %95 = load i8*, i8** @progname, align 4
  %call.read_error.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone, i32 2
  %call1.read_error.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %95)
  %call2.read_error.Clone = call i32* @_errno()
  %96 = load i32, i32* %call2.read_error.Clone, align 4
  %cmp.read_error.Clone = icmp ne i32 %96, 0
  br i1 %cmp.read_error.Clone, label %if.then.read_error.Clone, label %if.else.read_error.Clone

if.then.read_error.Clone:                         ; preds = %entry.read_error.Clone
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone

if.else.read_error.Clone:                         ; preds = %entry.read_error.Clone
  %call3.read_error.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone, i32 2
  %call5.read_error.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone

if.end.read_error.Clone:                          ; preds = %if.else.read_error.Clone, %if.then.read_error.Clone
  br label %entry.abort_gzip.Clone172

entry.abort_gzip.Clone172:                        ; preds = %if.end.read_error.Clone
  %97 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone173 = icmp ne i32 %97, 0
  br i1 %tobool.abort_gzip.Clone173, label %if.then.abort_gzip.Clone174, label %if.end.abort_gzip.Clone177

if.then.abort_gzip.Clone174:                      ; preds = %entry.abort_gzip.Clone172
  %98 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone175 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %98)
  %call1.abort_gzip.Clone176 = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone177

if.end.abort_gzip.Clone177:                       ; preds = %if.then.abort_gzip.Clone174, %entry.abort_gzip.Clone172
  br label %entry.do_exit.Clone274

entry.do_exit.Clone274:                           ; preds = %if.end.abort_gzip.Clone177
  %exitcode.addr.do_exit.Clone275 = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone275, align 4
  %99 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone276 = icmp ne i32 %99, 0
  br i1 %tobool.do_exit.Clone276, label %if.then.do_exit.Clone277, label %if.end.do_exit.Clone278

if.then.do_exit.Clone277:                         ; preds = %entry.do_exit.Clone274
  %100 = load i32, i32* %exitcode.addr.do_exit.Clone275, align 4
  call void @exit(i32 %100) #7
  unreachable

if.end.do_exit.Clone278:                          ; preds = %entry.do_exit.Clone274
  store i32 1, i32* @do_exit.in_exit, align 4
  %101 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone279 = icmp ne i8* %101, null
  br i1 %cmp.do_exit.Clone279, label %if.then1.do_exit.Clone280, label %if.end2.do_exit.Clone281

if.then1.do_exit.Clone280:                        ; preds = %if.end.do_exit.Clone278
  %102 = load i8*, i8** @env, align 4
  call void @free(i8* %102) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone281

if.end2.do_exit.Clone281:                         ; preds = %if.then1.do_exit.Clone280, %if.end.do_exit.Clone278
  %103 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone282 = icmp ne i8** %103, null
  br i1 %cmp3.do_exit.Clone282, label %if.then4.do_exit.Clone283, label %if.end5.do_exit.Clone284

if.then4.do_exit.Clone283:                        ; preds = %if.end2.do_exit.Clone281
  %104 = load i8**, i8*** @args, align 4
  %105 = bitcast i8** %104 to i8*
  call void @free(i8* %105) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone284

if.end5.do_exit.Clone284:                         ; preds = %if.then4.do_exit.Clone283, %if.end2.do_exit.Clone281
  %106 = load i32, i32* %exitcode.addr.do_exit.Clone275, align 4
  call void @exit(i32 %106) #7
  unreachable

return.do_exit.Clone285:                          ; No predecessors!
  br label %if.end.abort_gzip.Clone177.Split

if.end.abort_gzip.Clone177.Split:                 ; preds = %return.do_exit.Clone285
  br label %if.end.read_error.Clone.Split

if.end.read_error.Clone.Split:                    ; preds = %if.end.abort_gzip.Clone177.Split
  br label %if.end7.fill_inbuf.Clone23.Split

if.end7.fill_inbuf.Clone23.Split:                 ; preds = %if.end.read_error.Clone.Split
  br label %if.end8.fill_inbuf.Clone24

if.end8.fill_inbuf.Clone24:                       ; preds = %if.end7.fill_inbuf.Clone23.Split, %do.end.fill_inbuf.Clone18
  %107 = load i32, i32* @insize, align 4
  %108 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone25 = add i32 %108, %107
  store i32 %add9.fill_inbuf.Clone25, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %109 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone26 = zext i8 %109 to i32
  store i32 %conv.fill_inbuf.Clone26, i32* %retval.fill_inbuf.Clone2, align 4
  br label %return.fill_inbuf.Clone27

return.fill_inbuf.Clone27:                        ; preds = %if.end8.fill_inbuf.Clone24, %if.then6.fill_inbuf.Clone22
  %110 = load i32, i32* %retval.fill_inbuf.Clone2, align 4
  store i32 %110, i32* %RetValuePtr28
  br label %cond.false.Split

cond.false.Split:                                 ; preds = %return.fill_inbuf.Clone27
  %RetValue29 = load i32, i32* %RetValuePtr28
  br label %cond.end

cond.end:                                         ; preds = %cond.false.Split, %cond.true
  %cond100 = phi i32 [ %conv98, %cond.true ], [ %RetValue29, %cond.false.Split ]
  %conv101 = trunc i32 %cond100 to i8
  store i8 %conv101, i8* %c, align 1
  %111 = load i8, i8* %c, align 1
  %112 = load i32, i32* @outcnt, align 4
  %inc102 = add i32 %112, 1
  store i32 %inc102, i32* @outcnt, align 4
  %arrayidx103 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([65536 x i8]* @window to [0 x i8]*), i32 0, i32 %112
  store i8 %111, i8* %arrayidx103, align 1
  %113 = load i32, i32* @outcnt, align 4
  %cmp104 = icmp eq i32 %113, 32768
  br i1 %cmp104, label %if.then106, label %if.end107

if.then106:                                       ; preds = %cond.end
  br label %entry.flush_window.Clone55

entry.flush_window.Clone55:                       ; preds = %if.then106
  %114 = load i32, i32* @outcnt, align 4
  %cmp.flush_window.Clone56 = icmp eq i32 %114, 0
  br i1 %cmp.flush_window.Clone56, label %if.then.flush_window.Clone57, label %if.end.flush_window.Clone58

if.then.flush_window.Clone57:                     ; preds = %entry.flush_window.Clone55
  br label %return.flush_window.Clone64

if.end.flush_window.Clone58:                      ; preds = %entry.flush_window.Clone55
  %115 = load i32, i32* @outcnt, align 4
  br label %entry.updcrc.Clone

entry.updcrc.Clone:                               ; preds = %if.end.flush_window.Clone58
  %n.addr.updcrc.Clone = alloca i32, align 4
  %s.addr.updcrc.Clone = alloca i8*, align 4
  %c.updcrc.Clone = alloca i32, align 4
  store i32 %115, i32* %n.addr.updcrc.Clone, align 4
  store i8* getelementptr inbounds ([65536 x i8], [65536 x i8]* @window, i32 0, i32 0), i8** %s.addr.updcrc.Clone, align 4
  %116 = load i8*, i8** %s.addr.updcrc.Clone, align 4
  %cmp.updcrc.Clone = icmp eq i8* %116, null
  br i1 %cmp.updcrc.Clone, label %if.then.updcrc.Clone, label %if.else.updcrc.Clone

if.then.updcrc.Clone:                             ; preds = %entry.updcrc.Clone
  store i32 -1, i32* %c.updcrc.Clone, align 4
  br label %if.end4.updcrc.Clone

if.else.updcrc.Clone:                             ; preds = %entry.updcrc.Clone
  %117 = load i32, i32* @updcrc.crc, align 4
  store i32 %117, i32* %c.updcrc.Clone, align 4
  %118 = load i32, i32* %n.addr.updcrc.Clone, align 4
  %tobool.updcrc.Clone = icmp ne i32 %118, 0
  br i1 %tobool.updcrc.Clone, label %if.then1.updcrc.Clone, label %if.end.updcrc.Clone

if.then1.updcrc.Clone:                            ; preds = %if.else.updcrc.Clone
  br label %do.body.updcrc.Clone

do.body.updcrc.Clone:                             ; preds = %do.cond.updcrc.Clone, %if.then1.updcrc.Clone
  %119 = load i32, i32* %c.updcrc.Clone, align 4
  %120 = load i8*, i8** %s.addr.updcrc.Clone, align 4
  %incdec.ptr.updcrc.Clone = getelementptr inbounds i8, i8* %120, i32 1
  store i8* %incdec.ptr.updcrc.Clone, i8** %s.addr.updcrc.Clone, align 4
  %121 = load i8, i8* %120, align 1
  %conv.updcrc.Clone = zext i8 %121 to i32
  %xor.updcrc.Clone = xor i32 %119, %conv.updcrc.Clone
  %and.updcrc.Clone = and i32 %xor.updcrc.Clone, 255
  %arrayidx.updcrc.Clone = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([256 x i32]* @crc_32_tab to [0 x i32]*), i32 0, i32 %and.updcrc.Clone
  %122 = load i32, i32* %arrayidx.updcrc.Clone, align 4
  %123 = load i32, i32* %c.updcrc.Clone, align 4
  %shr.updcrc.Clone = lshr i32 %123, 8
  %xor2.updcrc.Clone = xor i32 %122, %shr.updcrc.Clone
  store i32 %xor2.updcrc.Clone, i32* %c.updcrc.Clone, align 4
  br label %do.cond.updcrc.Clone

do.cond.updcrc.Clone:                             ; preds = %do.body.updcrc.Clone
  %124 = load i32, i32* %n.addr.updcrc.Clone, align 4
  %dec.updcrc.Clone = add i32 %124, -1
  store i32 %dec.updcrc.Clone, i32* %n.addr.updcrc.Clone, align 4
  %tobool3.updcrc.Clone = icmp ne i32 %dec.updcrc.Clone, 0
  br i1 %tobool3.updcrc.Clone, label %do.body.updcrc.Clone, label %do.end.updcrc.Clone

do.end.updcrc.Clone:                              ; preds = %do.cond.updcrc.Clone
  br label %if.end.updcrc.Clone

if.end.updcrc.Clone:                              ; preds = %do.end.updcrc.Clone, %if.else.updcrc.Clone
  br label %if.end4.updcrc.Clone

if.end4.updcrc.Clone:                             ; preds = %if.end.updcrc.Clone, %if.then.updcrc.Clone
  %125 = load i32, i32* %c.updcrc.Clone, align 4
  store i32 %125, i32* @updcrc.crc, align 4
  %126 = load i32, i32* %c.updcrc.Clone, align 4
  %xor5.updcrc.Clone = xor i32 %126, -1
  store i32 %xor5.updcrc.Clone, i32* %RetValuePtr80
  br label %if.end.flush_window.Clone58.Split

if.end.flush_window.Clone58.Split:                ; preds = %if.end4.updcrc.Clone
  %RetValue81 = load i32, i32* %RetValuePtr80
  %127 = load i32, i32* @test, align 4
  %tobool.flush_window.Clone60 = icmp ne i32 %127, 0
  br i1 %tobool.flush_window.Clone60, label %if.end2.flush_window.Clone62, label %if.then1.flush_window.Clone61

if.then1.flush_window.Clone61:                    ; preds = %if.end.flush_window.Clone58.Split
  %128 = load i32, i32* @outcnt, align 4
  %129 = load i32, i32* @ofd, align 4
  br label %entry.write_buf.Clone

entry.write_buf.Clone:                            ; preds = %if.then1.flush_window.Clone61
  %cnt.addr.write_buf.Clone = alloca i32, align 4
  %buf.addr.write_buf.Clone = alloca i8*, align 4
  %fd.addr.write_buf.Clone = alloca i32, align 4
  %n.write_buf.Clone = alloca i32, align 4
  store i32 %128, i32* %cnt.addr.write_buf.Clone, align 4
  store i8* getelementptr inbounds ([65536 x i8], [65536 x i8]* @window, i32 0, i32 0), i8** %buf.addr.write_buf.Clone, align 4
  store i32 %129, i32* %fd.addr.write_buf.Clone, align 4
  br label %while.cond.write_buf.Clone

while.cond.write_buf.Clone:                       ; preds = %if.end.write_buf.Clone, %entry.write_buf.Clone
  %130 = load i32, i32* %cnt.addr.write_buf.Clone, align 4
  %131 = load i8*, i8** %buf.addr.write_buf.Clone, align 4
  %132 = load i32, i32* %fd.addr.write_buf.Clone, align 4
  br label %entry.spec_write.Clone300

entry.spec_write.Clone300:                        ; preds = %while.cond.write_buf.Clone
  %size.addr.spec_write.Clone301 = alloca i32, align 4
  %buf.addr.spec_write.Clone302 = alloca i8*, align 4
  %fd.addr.spec_write.Clone303 = alloca i32, align 4
  store i32 %130, i32* %size.addr.spec_write.Clone301, align 4
  store i8* %131, i8** %buf.addr.spec_write.Clone302, align 4
  store i32 %132, i32* %fd.addr.spec_write.Clone303, align 4
  %133 = load i32, i32* @dbglvl, align 4
  %cmp.spec_write.Clone304 = icmp slt i32 4, %133
  br i1 %cmp.spec_write.Clone304, label %if.then.spec_write.Clone305, label %if.end.spec_write.Clone307

if.then.spec_write.Clone305:                      ; preds = %entry.spec_write.Clone300
  %134 = load i32, i32* %size.addr.spec_write.Clone301, align 4
  %135 = load i8*, i8** %buf.addr.spec_write.Clone302, align 4
  %136 = load i32, i32* %fd.addr.spec_write.Clone303, align 4
  %call.spec_write.Clone306 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @"??_C@_0BK@GKFGHPHN@spec_write?3?5?$CFd?0?5?$CFx?0?5?$CFd?5?$DN?5?$AA@", i32 0, i32 0), i32 %136, i8* %135, i32 %134)
  br label %if.end.spec_write.Clone307

if.end.spec_write.Clone307:                       ; preds = %if.then.spec_write.Clone305, %entry.spec_write.Clone300
  %137 = load i32, i32* %fd.addr.spec_write.Clone303, align 4
  %cmp1.spec_write.Clone308 = icmp sgt i32 %137, 3
  br i1 %cmp1.spec_write.Clone308, label %if.then2.spec_write.Clone309, label %if.end5.spec_write.Clone313

if.then2.spec_write.Clone309:                     ; preds = %if.end.spec_write.Clone307
  %138 = load i32, i32* %fd.addr.spec_write.Clone303, align 4
  %call3.spec_write.Clone310 = call %struct._iobuf* @__iob_func()
  %arrayidx.spec_write.Clone311 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.spec_write.Clone310, i32 2
  %call4.spec_write.Clone312 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.spec_write.Clone311, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"??_C@_0CD@NANFEFEM@spec_write?3?5fd?$DN?$CFd?0?5?$DO?5MAX_SPEC_FD@", i32 0, i32 0), i32 %138)
  call void @exit(i32 1) #7
  unreachable

if.end5.spec_write.Clone313:                      ; preds = %if.end.spec_write.Clone307
  %139 = load i32, i32* %fd.addr.spec_write.Clone303, align 4
  %arrayidx6.spec_write.Clone314 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %139
  %buf7.spec_write.Clone315 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx6.spec_write.Clone314, i32 0, i32 3
  %140 = load i8*, i8** %buf7.spec_write.Clone315, align 4
  %141 = load i32, i32* %fd.addr.spec_write.Clone303, align 4
  %arrayidx8.spec_write.Clone316 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %141
  %pos.spec_write.Clone317 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx8.spec_write.Clone316, i32 0, i32 2
  %142 = load i32, i32* %pos.spec_write.Clone317, align 4
  %arrayidx9.spec_write.Clone318 = getelementptr inbounds i8, i8* %140, i32 %142
  %143 = load i8*, i8** %buf.addr.spec_write.Clone302, align 4
  %144 = load i32, i32* %size.addr.spec_write.Clone301, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %arrayidx9.spec_write.Clone318, i8* align 1 %143, i32 %144, i1 false)
  %145 = load i32, i32* %size.addr.spec_write.Clone301, align 4
  %146 = load i32, i32* %fd.addr.spec_write.Clone303, align 4
  %arrayidx10.spec_write.Clone319 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %146
  %len.spec_write.Clone320 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx10.spec_write.Clone319, i32 0, i32 1
  %147 = load i32, i32* %len.spec_write.Clone320, align 4
  %add.spec_write.Clone321 = add nsw i32 %147, %145
  store i32 %add.spec_write.Clone321, i32* %len.spec_write.Clone320, align 4
  %148 = load i32, i32* %size.addr.spec_write.Clone301, align 4
  %149 = load i32, i32* %fd.addr.spec_write.Clone303, align 4
  %arrayidx11.spec_write.Clone322 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %149
  %pos12.spec_write.Clone323 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx11.spec_write.Clone322, i32 0, i32 2
  %150 = load i32, i32* %pos12.spec_write.Clone323, align 4
  %add13.spec_write.Clone324 = add nsw i32 %150, %148
  store i32 %add13.spec_write.Clone324, i32* %pos12.spec_write.Clone323, align 4
  %151 = load i32, i32* @dbglvl, align 4
  %cmp14.spec_write.Clone325 = icmp slt i32 4, %151
  br i1 %cmp14.spec_write.Clone325, label %if.then15.spec_write.Clone326, label %if.end17.spec_write.Clone328

if.then15.spec_write.Clone326:                    ; preds = %if.end5.spec_write.Clone313
  %152 = load i32, i32* %size.addr.spec_write.Clone301, align 4
  %call16.spec_write.Clone327 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"??_C@_03PMGGPEJJ@?$CFd?6?$AA@", i32 0, i32 0), i32 %152)
  br label %if.end17.spec_write.Clone328

if.end17.spec_write.Clone328:                     ; preds = %if.then15.spec_write.Clone326, %if.end5.spec_write.Clone313
  %153 = load i32, i32* %size.addr.spec_write.Clone301, align 4
  store i32 %153, i32* %RetValuePtr329
  br label %while.cond.write_buf.Clone.Split

while.cond.write_buf.Clone.Split:                 ; preds = %if.end17.spec_write.Clone328
  %RetValue330 = load i32, i32* %RetValuePtr329
  store i32 %RetValue330, i32* %n.write_buf.Clone, align 4
  %154 = load i32, i32* %cnt.addr.write_buf.Clone, align 4
  %cmp.write_buf.Clone = icmp ne i32 %RetValue330, %154
  br i1 %cmp.write_buf.Clone, label %while.body.write_buf.Clone, label %while.end.write_buf.Clone

while.body.write_buf.Clone:                       ; preds = %while.cond.write_buf.Clone.Split
  %155 = load i32, i32* %n.write_buf.Clone, align 4
  %cmp1.write_buf.Clone = icmp eq i32 %155, -1
  br i1 %cmp1.write_buf.Clone, label %if.then.write_buf.Clone, label %if.end.write_buf.Clone

if.then.write_buf.Clone:                          ; preds = %while.body.write_buf.Clone
  call void @write_error()
  br label %if.end.write_buf.Clone

if.end.write_buf.Clone:                           ; preds = %if.then.write_buf.Clone, %while.body.write_buf.Clone
  %156 = load i32, i32* %n.write_buf.Clone, align 4
  %157 = load i32, i32* %cnt.addr.write_buf.Clone, align 4
  %sub.write_buf.Clone = sub i32 %157, %156
  store i32 %sub.write_buf.Clone, i32* %cnt.addr.write_buf.Clone, align 4
  %158 = load i8*, i8** %buf.addr.write_buf.Clone, align 4
  %159 = load i32, i32* %n.write_buf.Clone, align 4
  %add.ptr.write_buf.Clone = getelementptr inbounds i8, i8* %158, i32 %159
  store i8* %add.ptr.write_buf.Clone, i8** %buf.addr.write_buf.Clone, align 4
  br label %while.cond.write_buf.Clone

while.end.write_buf.Clone:                        ; preds = %while.cond.write_buf.Clone.Split
  br label %if.then1.flush_window.Clone61.Split

if.then1.flush_window.Clone61.Split:              ; preds = %while.end.write_buf.Clone
  br label %if.end2.flush_window.Clone62

if.end2.flush_window.Clone62:                     ; preds = %if.then1.flush_window.Clone61.Split, %if.end.flush_window.Clone58.Split
  %160 = load i32, i32* @outcnt, align 4
  %161 = load i32, i32* @bytes_out, align 4
  %add.flush_window.Clone63 = add i32 %161, %160
  store i32 %add.flush_window.Clone63, i32* @bytes_out, align 4
  store i32 0, i32* @outcnt, align 4
  br label %return.flush_window.Clone64

return.flush_window.Clone64:                      ; preds = %if.end2.flush_window.Clone62, %if.then.flush_window.Clone57
  br label %if.then106.Split

if.then106.Split:                                 ; preds = %return.flush_window.Clone64
  br label %if.end107

if.end107:                                        ; preds = %if.then106.Split, %cond.end
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %entry.flush_window.Clone

entry.flush_window.Clone:                         ; preds = %while.end
  %162 = load i32, i32* @outcnt, align 4
  %cmp.flush_window.Clone = icmp eq i32 %162, 0
  br i1 %cmp.flush_window.Clone, label %if.then.flush_window.Clone, label %if.end.flush_window.Clone

if.then.flush_window.Clone:                       ; preds = %entry.flush_window.Clone
  br label %return.flush_window.Clone

if.end.flush_window.Clone:                        ; preds = %entry.flush_window.Clone
  %163 = load i32, i32* @outcnt, align 4
  br label %entry.updcrc.Clone82

entry.updcrc.Clone82:                             ; preds = %if.end.flush_window.Clone
  %n.addr.updcrc.Clone83 = alloca i32, align 4
  %s.addr.updcrc.Clone84 = alloca i8*, align 4
  %c.updcrc.Clone85 = alloca i32, align 4
  store i32 %163, i32* %n.addr.updcrc.Clone83, align 4
  store i8* getelementptr inbounds ([65536 x i8], [65536 x i8]* @window, i32 0, i32 0), i8** %s.addr.updcrc.Clone84, align 4
  %164 = load i8*, i8** %s.addr.updcrc.Clone84, align 4
  %cmp.updcrc.Clone86 = icmp eq i8* %164, null
  br i1 %cmp.updcrc.Clone86, label %if.then.updcrc.Clone87, label %if.else.updcrc.Clone88

if.then.updcrc.Clone87:                           ; preds = %entry.updcrc.Clone82
  store i32 -1, i32* %c.updcrc.Clone85, align 4
  br label %if.end4.updcrc.Clone104

if.else.updcrc.Clone88:                           ; preds = %entry.updcrc.Clone82
  %165 = load i32, i32* @updcrc.crc, align 4
  store i32 %165, i32* %c.updcrc.Clone85, align 4
  %166 = load i32, i32* %n.addr.updcrc.Clone83, align 4
  %tobool.updcrc.Clone89 = icmp ne i32 %166, 0
  br i1 %tobool.updcrc.Clone89, label %if.then1.updcrc.Clone90, label %if.end.updcrc.Clone103

if.then1.updcrc.Clone90:                          ; preds = %if.else.updcrc.Clone88
  br label %do.body.updcrc.Clone91

do.body.updcrc.Clone91:                           ; preds = %do.cond.updcrc.Clone99, %if.then1.updcrc.Clone90
  %167 = load i32, i32* %c.updcrc.Clone85, align 4
  %168 = load i8*, i8** %s.addr.updcrc.Clone84, align 4
  %incdec.ptr.updcrc.Clone92 = getelementptr inbounds i8, i8* %168, i32 1
  store i8* %incdec.ptr.updcrc.Clone92, i8** %s.addr.updcrc.Clone84, align 4
  %169 = load i8, i8* %168, align 1
  %conv.updcrc.Clone93 = zext i8 %169 to i32
  %xor.updcrc.Clone94 = xor i32 %167, %conv.updcrc.Clone93
  %and.updcrc.Clone95 = and i32 %xor.updcrc.Clone94, 255
  %arrayidx.updcrc.Clone96 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([256 x i32]* @crc_32_tab to [0 x i32]*), i32 0, i32 %and.updcrc.Clone95
  %170 = load i32, i32* %arrayidx.updcrc.Clone96, align 4
  %171 = load i32, i32* %c.updcrc.Clone85, align 4
  %shr.updcrc.Clone97 = lshr i32 %171, 8
  %xor2.updcrc.Clone98 = xor i32 %170, %shr.updcrc.Clone97
  store i32 %xor2.updcrc.Clone98, i32* %c.updcrc.Clone85, align 4
  br label %do.cond.updcrc.Clone99

do.cond.updcrc.Clone99:                           ; preds = %do.body.updcrc.Clone91
  %172 = load i32, i32* %n.addr.updcrc.Clone83, align 4
  %dec.updcrc.Clone100 = add i32 %172, -1
  store i32 %dec.updcrc.Clone100, i32* %n.addr.updcrc.Clone83, align 4
  %tobool3.updcrc.Clone101 = icmp ne i32 %dec.updcrc.Clone100, 0
  br i1 %tobool3.updcrc.Clone101, label %do.body.updcrc.Clone91, label %do.end.updcrc.Clone102

do.end.updcrc.Clone102:                           ; preds = %do.cond.updcrc.Clone99
  br label %if.end.updcrc.Clone103

if.end.updcrc.Clone103:                           ; preds = %do.end.updcrc.Clone102, %if.else.updcrc.Clone88
  br label %if.end4.updcrc.Clone104

if.end4.updcrc.Clone104:                          ; preds = %if.end.updcrc.Clone103, %if.then.updcrc.Clone87
  %173 = load i32, i32* %c.updcrc.Clone85, align 4
  store i32 %173, i32* @updcrc.crc, align 4
  %174 = load i32, i32* %c.updcrc.Clone85, align 4
  %xor5.updcrc.Clone105 = xor i32 %174, -1
  store i32 %xor5.updcrc.Clone105, i32* %RetValuePtr106
  br label %if.end.flush_window.Clone.Split

if.end.flush_window.Clone.Split:                  ; preds = %if.end4.updcrc.Clone104
  %RetValue107 = load i32, i32* %RetValuePtr106
  %175 = load i32, i32* @test, align 4
  %tobool.flush_window.Clone = icmp ne i32 %175, 0
  br i1 %tobool.flush_window.Clone, label %if.end2.flush_window.Clone, label %if.then1.flush_window.Clone

if.then1.flush_window.Clone:                      ; preds = %if.end.flush_window.Clone.Split
  %176 = load i32, i32* @outcnt, align 4
  %177 = load i32, i32* @ofd, align 4
  br label %entry.write_buf.Clone65

entry.write_buf.Clone65:                          ; preds = %if.then1.flush_window.Clone
  %cnt.addr.write_buf.Clone66 = alloca i32, align 4
  %buf.addr.write_buf.Clone67 = alloca i8*, align 4
  %fd.addr.write_buf.Clone68 = alloca i32, align 4
  %n.write_buf.Clone69 = alloca i32, align 4
  store i32 %176, i32* %cnt.addr.write_buf.Clone66, align 4
  store i8* getelementptr inbounds ([65536 x i8], [65536 x i8]* @window, i32 0, i32 0), i8** %buf.addr.write_buf.Clone67, align 4
  store i32 %177, i32* %fd.addr.write_buf.Clone68, align 4
  br label %while.cond.write_buf.Clone70

while.cond.write_buf.Clone70:                     ; preds = %if.end.write_buf.Clone76, %entry.write_buf.Clone65
  %178 = load i32, i32* %cnt.addr.write_buf.Clone66, align 4
  %179 = load i8*, i8** %buf.addr.write_buf.Clone67, align 4
  %180 = load i32, i32* %fd.addr.write_buf.Clone68, align 4
  br label %entry.spec_write.Clone

entry.spec_write.Clone:                           ; preds = %while.cond.write_buf.Clone70
  %size.addr.spec_write.Clone = alloca i32, align 4
  %buf.addr.spec_write.Clone = alloca i8*, align 4
  %fd.addr.spec_write.Clone = alloca i32, align 4
  store i32 %178, i32* %size.addr.spec_write.Clone, align 4
  store i8* %179, i8** %buf.addr.spec_write.Clone, align 4
  store i32 %180, i32* %fd.addr.spec_write.Clone, align 4
  %181 = load i32, i32* @dbglvl, align 4
  %cmp.spec_write.Clone = icmp slt i32 4, %181
  br i1 %cmp.spec_write.Clone, label %if.then.spec_write.Clone, label %if.end.spec_write.Clone

if.then.spec_write.Clone:                         ; preds = %entry.spec_write.Clone
  %182 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %183 = load i8*, i8** %buf.addr.spec_write.Clone, align 4
  %184 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %call.spec_write.Clone = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @"??_C@_0BK@GKFGHPHN@spec_write?3?5?$CFd?0?5?$CFx?0?5?$CFd?5?$DN?5?$AA@", i32 0, i32 0), i32 %184, i8* %183, i32 %182)
  br label %if.end.spec_write.Clone

if.end.spec_write.Clone:                          ; preds = %if.then.spec_write.Clone, %entry.spec_write.Clone
  %185 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %cmp1.spec_write.Clone = icmp sgt i32 %185, 3
  br i1 %cmp1.spec_write.Clone, label %if.then2.spec_write.Clone, label %if.end5.spec_write.Clone

if.then2.spec_write.Clone:                        ; preds = %if.end.spec_write.Clone
  %186 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %call3.spec_write.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx.spec_write.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.spec_write.Clone, i32 2
  %call4.spec_write.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.spec_write.Clone, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"??_C@_0CD@NANFEFEM@spec_write?3?5fd?$DN?$CFd?0?5?$DO?5MAX_SPEC_FD@", i32 0, i32 0), i32 %186)
  call void @exit(i32 1) #7
  unreachable

if.end5.spec_write.Clone:                         ; preds = %if.end.spec_write.Clone
  %187 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx6.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %187
  %buf7.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx6.spec_write.Clone, i32 0, i32 3
  %188 = load i8*, i8** %buf7.spec_write.Clone, align 4
  %189 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx8.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %189
  %pos.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx8.spec_write.Clone, i32 0, i32 2
  %190 = load i32, i32* %pos.spec_write.Clone, align 4
  %arrayidx9.spec_write.Clone = getelementptr inbounds i8, i8* %188, i32 %190
  %191 = load i8*, i8** %buf.addr.spec_write.Clone, align 4
  %192 = load i32, i32* %size.addr.spec_write.Clone, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %arrayidx9.spec_write.Clone, i8* align 1 %191, i32 %192, i1 false)
  %193 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %194 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx10.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %194
  %len.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx10.spec_write.Clone, i32 0, i32 1
  %195 = load i32, i32* %len.spec_write.Clone, align 4
  %add.spec_write.Clone = add nsw i32 %195, %193
  store i32 %add.spec_write.Clone, i32* %len.spec_write.Clone, align 4
  %196 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %197 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx11.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %197
  %pos12.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx11.spec_write.Clone, i32 0, i32 2
  %198 = load i32, i32* %pos12.spec_write.Clone, align 4
  %add13.spec_write.Clone = add nsw i32 %198, %196
  store i32 %add13.spec_write.Clone, i32* %pos12.spec_write.Clone, align 4
  %199 = load i32, i32* @dbglvl, align 4
  %cmp14.spec_write.Clone = icmp slt i32 4, %199
  br i1 %cmp14.spec_write.Clone, label %if.then15.spec_write.Clone, label %if.end17.spec_write.Clone

if.then15.spec_write.Clone:                       ; preds = %if.end5.spec_write.Clone
  %200 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %call16.spec_write.Clone = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"??_C@_03PMGGPEJJ@?$CFd?6?$AA@", i32 0, i32 0), i32 %200)
  br label %if.end17.spec_write.Clone

if.end17.spec_write.Clone:                        ; preds = %if.then15.spec_write.Clone, %if.end5.spec_write.Clone
  %201 = load i32, i32* %size.addr.spec_write.Clone, align 4
  store i32 %201, i32* %RetValuePtr298
  br label %while.cond.write_buf.Clone70.Split

while.cond.write_buf.Clone70.Split:               ; preds = %if.end17.spec_write.Clone
  %RetValue299 = load i32, i32* %RetValuePtr298
  store i32 %RetValue299, i32* %n.write_buf.Clone69, align 4
  %202 = load i32, i32* %cnt.addr.write_buf.Clone66, align 4
  %cmp.write_buf.Clone72 = icmp ne i32 %RetValue299, %202
  br i1 %cmp.write_buf.Clone72, label %while.body.write_buf.Clone73, label %while.end.write_buf.Clone79

while.body.write_buf.Clone73:                     ; preds = %while.cond.write_buf.Clone70.Split
  %203 = load i32, i32* %n.write_buf.Clone69, align 4
  %cmp1.write_buf.Clone74 = icmp eq i32 %203, -1
  br i1 %cmp1.write_buf.Clone74, label %if.then.write_buf.Clone75, label %if.end.write_buf.Clone76

if.then.write_buf.Clone75:                        ; preds = %while.body.write_buf.Clone73
  call void @write_error()
  br label %if.end.write_buf.Clone76

if.end.write_buf.Clone76:                         ; preds = %if.then.write_buf.Clone75, %while.body.write_buf.Clone73
  %204 = load i32, i32* %n.write_buf.Clone69, align 4
  %205 = load i32, i32* %cnt.addr.write_buf.Clone66, align 4
  %sub.write_buf.Clone77 = sub i32 %205, %204
  store i32 %sub.write_buf.Clone77, i32* %cnt.addr.write_buf.Clone66, align 4
  %206 = load i8*, i8** %buf.addr.write_buf.Clone67, align 4
  %207 = load i32, i32* %n.write_buf.Clone69, align 4
  %add.ptr.write_buf.Clone78 = getelementptr inbounds i8, i8* %206, i32 %207
  store i8* %add.ptr.write_buf.Clone78, i8** %buf.addr.write_buf.Clone67, align 4
  br label %while.cond.write_buf.Clone70

while.end.write_buf.Clone79:                      ; preds = %while.cond.write_buf.Clone70.Split
  br label %if.then1.flush_window.Clone.Split

if.then1.flush_window.Clone.Split:                ; preds = %while.end.write_buf.Clone79
  br label %if.end2.flush_window.Clone

if.end2.flush_window.Clone:                       ; preds = %if.then1.flush_window.Clone.Split, %if.end.flush_window.Clone.Split
  %208 = load i32, i32* @outcnt, align 4
  %209 = load i32, i32* @bytes_out, align 4
  %add.flush_window.Clone = add i32 %209, %208
  store i32 %add.flush_window.Clone, i32* @bytes_out, align 4
  store i32 0, i32* @outcnt, align 4
  br label %return.flush_window.Clone

return.flush_window.Clone:                        ; preds = %if.end2.flush_window.Clone, %if.then.flush_window.Clone
  br label %while.end.Split

while.end.Split:                                  ; preds = %return.flush_window.Clone
  br label %if.end109

if.else108:                                       ; preds = %land.lhs.true40, %if.else38
  br label %entry.error.Clone35

entry.error.Clone35:                              ; preds = %if.else108
  %m.addr.error.Clone36 = alloca i8*, align 4
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @"??_C@_0BP@COKNNDHE@internal?5error?0?5invalid?5method?$AA@", i32 0, i32 0), i8** %m.addr.error.Clone36, align 4
  %210 = load i8*, i8** %m.addr.error.Clone36, align 4
  %211 = load i8*, i8** @progname, align 4
  %call.error.Clone37 = call %struct._iobuf* @__iob_func()
  %arrayidx.error.Clone38 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.error.Clone37, i32 2
  %call1.error.Clone39 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.error.Clone38, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @"??_C@_0N@ODCEBLNH@?6?$CFs?3?5?$CFs?3?5?$CFs?6?$AA@", i32 0, i32 0), i8* %211, i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0), i8* %210)
  br label %entry.abort_gzip.Clone196

entry.abort_gzip.Clone196:                        ; preds = %entry.error.Clone35
  %212 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone197 = icmp ne i32 %212, 0
  br i1 %tobool.abort_gzip.Clone197, label %if.then.abort_gzip.Clone198, label %if.end.abort_gzip.Clone201

if.then.abort_gzip.Clone198:                      ; preds = %entry.abort_gzip.Clone196
  %213 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone199 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %213)
  %call1.abort_gzip.Clone200 = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone201

if.end.abort_gzip.Clone201:                       ; preds = %if.then.abort_gzip.Clone198, %entry.abort_gzip.Clone196
  br label %entry.do_exit.Clone226

entry.do_exit.Clone226:                           ; preds = %if.end.abort_gzip.Clone201
  %exitcode.addr.do_exit.Clone227 = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone227, align 4
  %214 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone228 = icmp ne i32 %214, 0
  br i1 %tobool.do_exit.Clone228, label %if.then.do_exit.Clone229, label %if.end.do_exit.Clone230

if.then.do_exit.Clone229:                         ; preds = %entry.do_exit.Clone226
  %215 = load i32, i32* %exitcode.addr.do_exit.Clone227, align 4
  call void @exit(i32 %215) #7
  unreachable

if.end.do_exit.Clone230:                          ; preds = %entry.do_exit.Clone226
  store i32 1, i32* @do_exit.in_exit, align 4
  %216 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone231 = icmp ne i8* %216, null
  br i1 %cmp.do_exit.Clone231, label %if.then1.do_exit.Clone232, label %if.end2.do_exit.Clone233

if.then1.do_exit.Clone232:                        ; preds = %if.end.do_exit.Clone230
  %217 = load i8*, i8** @env, align 4
  call void @free(i8* %217) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone233

if.end2.do_exit.Clone233:                         ; preds = %if.then1.do_exit.Clone232, %if.end.do_exit.Clone230
  %218 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone234 = icmp ne i8** %218, null
  br i1 %cmp3.do_exit.Clone234, label %if.then4.do_exit.Clone235, label %if.end5.do_exit.Clone236

if.then4.do_exit.Clone235:                        ; preds = %if.end2.do_exit.Clone233
  %219 = load i8**, i8*** @args, align 4
  %220 = bitcast i8** %219 to i8*
  call void @free(i8* %220) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone236

if.end5.do_exit.Clone236:                         ; preds = %if.then4.do_exit.Clone235, %if.end2.do_exit.Clone233
  %221 = load i32, i32* %exitcode.addr.do_exit.Clone227, align 4
  call void @exit(i32 %221) #7
  unreachable

return.do_exit.Clone237:                          ; No predecessors!
  br label %if.end.abort_gzip.Clone201.Split

if.end.abort_gzip.Clone201.Split:                 ; preds = %return.do_exit.Clone237
  br label %entry.error.Clone35.Split

entry.error.Clone35.Split:                        ; preds = %if.end.abort_gzip.Clone201.Split
  br label %if.else108.Split

if.else108.Split:                                 ; preds = %entry.error.Clone35.Split
  br label %if.end109

if.end109:                                        ; preds = %if.else108.Split, %while.end.Split
  br label %if.end110

if.end110:                                        ; preds = %if.end109, %if.end37
  %222 = load i32, i32* @pkzip, align 4
  %tobool111 = icmp ne i32 %222, 0
  br i1 %tobool111, label %if.else176, label %if.then112

if.then112:                                       ; preds = %if.end110
  store i32 0, i32* %n, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then112
  %223 = load i32, i32* %n, align 4
  %cmp113 = icmp slt i32 %223, 8
  br i1 %cmp113, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %224 = load i32, i32* @inptr, align 4
  %225 = load i32, i32* @insize, align 4
  %cmp115 = icmp ult i32 %224, %225
  br i1 %cmp115, label %cond.true117, label %cond.false121

cond.true117:                                     ; preds = %for.body
  %226 = load i32, i32* @inptr, align 4
  %inc118 = add i32 %226, 1
  store i32 %inc118, i32* @inptr, align 4
  %arrayidx119 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i32 0, i32 %226
  %227 = load i8, i8* %arrayidx119, align 1
  %conv120 = zext i8 %227 to i32
  br label %cond.end123

cond.false121:                                    ; preds = %for.body
  br label %entry.fill_inbuf.Clone

entry.fill_inbuf.Clone:                           ; preds = %cond.false121
  %retval.fill_inbuf.Clone = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone = alloca i32, align 4
  %len.fill_inbuf.Clone = alloca i32, align 4
  store i32 0, i32* %eof_ok.addr.fill_inbuf.Clone, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone, align 4
  br label %do.body.fill_inbuf.Clone

do.body.fill_inbuf.Clone:                         ; preds = %do.cond.fill_inbuf.Clone, %entry.fill_inbuf.Clone
  %228 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone = sub i32 32768, %228
  %229 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %229
  %230 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone = call i32 @spec_read(i32 %230, i8* %add.ptr.fill_inbuf.Clone, i32 %sub.fill_inbuf.Clone)
  store i32 %call1.fill_inbuf.Clone, i32* %len.fill_inbuf.Clone, align 4
  %231 = load i32, i32* %len.fill_inbuf.Clone, align 4
  %cmp.fill_inbuf.Clone = icmp eq i32 %231, 0
  br i1 %cmp.fill_inbuf.Clone, label %if.then.fill_inbuf.Clone, label %lor.lhs.false.fill_inbuf.Clone

lor.lhs.false.fill_inbuf.Clone:                   ; preds = %do.body.fill_inbuf.Clone
  %232 = load i32, i32* %len.fill_inbuf.Clone, align 4
  %cmp2.fill_inbuf.Clone = icmp eq i32 %232, -1
  br i1 %cmp2.fill_inbuf.Clone, label %if.then.fill_inbuf.Clone, label %if.end.fill_inbuf.Clone

if.then.fill_inbuf.Clone:                         ; preds = %lor.lhs.false.fill_inbuf.Clone, %do.body.fill_inbuf.Clone
  br label %do.end.fill_inbuf.Clone

if.end.fill_inbuf.Clone:                          ; preds = %lor.lhs.false.fill_inbuf.Clone
  %233 = load i32, i32* %len.fill_inbuf.Clone, align 4
  %234 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone = add i32 %234, %233
  store i32 %add.fill_inbuf.Clone, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone

do.cond.fill_inbuf.Clone:                         ; preds = %if.end.fill_inbuf.Clone
  %235 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone = icmp ult i32 %235, 32768
  br i1 %cmp3.fill_inbuf.Clone, label %do.body.fill_inbuf.Clone, label %do.end.fill_inbuf.Clone

do.end.fill_inbuf.Clone:                          ; preds = %do.cond.fill_inbuf.Clone, %if.then.fill_inbuf.Clone
  %236 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone = icmp eq i32 %236, 0
  br i1 %cmp4.fill_inbuf.Clone, label %if.then5.fill_inbuf.Clone, label %if.end8.fill_inbuf.Clone

if.then5.fill_inbuf.Clone:                        ; preds = %do.end.fill_inbuf.Clone
  %237 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone, align 4
  %tobool.fill_inbuf.Clone = icmp ne i32 %237, 0
  br i1 %tobool.fill_inbuf.Clone, label %if.then6.fill_inbuf.Clone, label %if.end7.fill_inbuf.Clone

if.then6.fill_inbuf.Clone:                        ; preds = %if.then5.fill_inbuf.Clone
  store i32 -1, i32* %retval.fill_inbuf.Clone, align 4
  br label %return.fill_inbuf.Clone

if.end7.fill_inbuf.Clone:                         ; preds = %if.then5.fill_inbuf.Clone
  br label %entry.read_error.Clone160

entry.read_error.Clone160:                        ; preds = %if.end7.fill_inbuf.Clone
  %238 = load i8*, i8** @progname, align 4
  %call.read_error.Clone161 = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone162 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone161, i32 2
  %call1.read_error.Clone163 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone162, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %238)
  %call2.read_error.Clone164 = call i32* @_errno()
  %239 = load i32, i32* %call2.read_error.Clone164, align 4
  %cmp.read_error.Clone165 = icmp ne i32 %239, 0
  br i1 %cmp.read_error.Clone165, label %if.then.read_error.Clone166, label %if.else.read_error.Clone167

if.then.read_error.Clone166:                      ; preds = %entry.read_error.Clone160
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone171

if.else.read_error.Clone167:                      ; preds = %entry.read_error.Clone160
  %call3.read_error.Clone168 = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone169 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone168, i32 2
  %call5.read_error.Clone170 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone169, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone171

if.end.read_error.Clone171:                       ; preds = %if.else.read_error.Clone167, %if.then.read_error.Clone166
  br label %entry.abort_gzip.Clone

entry.abort_gzip.Clone:                           ; preds = %if.end.read_error.Clone171
  %240 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone = icmp ne i32 %240, 0
  br i1 %tobool.abort_gzip.Clone, label %if.then.abort_gzip.Clone, label %if.end.abort_gzip.Clone

if.then.abort_gzip.Clone:                         ; preds = %entry.abort_gzip.Clone
  %241 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %241)
  %call1.abort_gzip.Clone = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone

if.end.abort_gzip.Clone:                          ; preds = %if.then.abort_gzip.Clone, %entry.abort_gzip.Clone
  br label %entry.do_exit.Clone286

entry.do_exit.Clone286:                           ; preds = %if.end.abort_gzip.Clone
  %exitcode.addr.do_exit.Clone287 = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone287, align 4
  %242 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone288 = icmp ne i32 %242, 0
  br i1 %tobool.do_exit.Clone288, label %if.then.do_exit.Clone289, label %if.end.do_exit.Clone290

if.then.do_exit.Clone289:                         ; preds = %entry.do_exit.Clone286
  %243 = load i32, i32* %exitcode.addr.do_exit.Clone287, align 4
  call void @exit(i32 %243) #7
  unreachable

if.end.do_exit.Clone290:                          ; preds = %entry.do_exit.Clone286
  store i32 1, i32* @do_exit.in_exit, align 4
  %244 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone291 = icmp ne i8* %244, null
  br i1 %cmp.do_exit.Clone291, label %if.then1.do_exit.Clone292, label %if.end2.do_exit.Clone293

if.then1.do_exit.Clone292:                        ; preds = %if.end.do_exit.Clone290
  %245 = load i8*, i8** @env, align 4
  call void @free(i8* %245) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone293

if.end2.do_exit.Clone293:                         ; preds = %if.then1.do_exit.Clone292, %if.end.do_exit.Clone290
  %246 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone294 = icmp ne i8** %246, null
  br i1 %cmp3.do_exit.Clone294, label %if.then4.do_exit.Clone295, label %if.end5.do_exit.Clone296

if.then4.do_exit.Clone295:                        ; preds = %if.end2.do_exit.Clone293
  %247 = load i8**, i8*** @args, align 4
  %248 = bitcast i8** %247 to i8*
  call void @free(i8* %248) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone296

if.end5.do_exit.Clone296:                         ; preds = %if.then4.do_exit.Clone295, %if.end2.do_exit.Clone293
  %249 = load i32, i32* %exitcode.addr.do_exit.Clone287, align 4
  call void @exit(i32 %249) #7
  unreachable

return.do_exit.Clone297:                          ; No predecessors!
  br label %if.end.abort_gzip.Clone.Split

if.end.abort_gzip.Clone.Split:                    ; preds = %return.do_exit.Clone297
  br label %if.end.read_error.Clone171.Split

if.end.read_error.Clone171.Split:                 ; preds = %if.end.abort_gzip.Clone.Split
  br label %if.end7.fill_inbuf.Clone.Split

if.end7.fill_inbuf.Clone.Split:                   ; preds = %if.end.read_error.Clone171.Split
  br label %if.end8.fill_inbuf.Clone

if.end8.fill_inbuf.Clone:                         ; preds = %if.end7.fill_inbuf.Clone.Split, %do.end.fill_inbuf.Clone
  %250 = load i32, i32* @insize, align 4
  %251 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone = add i32 %251, %250
  store i32 %add9.fill_inbuf.Clone, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %252 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone = zext i8 %252 to i32
  store i32 %conv.fill_inbuf.Clone, i32* %retval.fill_inbuf.Clone, align 4
  br label %return.fill_inbuf.Clone

return.fill_inbuf.Clone:                          ; preds = %if.end8.fill_inbuf.Clone, %if.then6.fill_inbuf.Clone
  %253 = load i32, i32* %retval.fill_inbuf.Clone, align 4
  store i32 %253, i32* %RetValuePtr
  br label %cond.false121.Split

cond.false121.Split:                              ; preds = %return.fill_inbuf.Clone
  %RetValue = load i32, i32* %RetValuePtr
  br label %cond.end123

cond.end123:                                      ; preds = %cond.false121.Split, %cond.true117
  %cond124 = phi i32 [ %conv120, %cond.true117 ], [ %RetValue, %cond.false121.Split ]
  %conv125 = trunc i32 %cond124 to i8
  %254 = load i32, i32* %n, align 4
  %arrayidx126 = getelementptr inbounds [16 x i8], [16 x i8]* %buf, i32 0, i32 %254
  store i8 %conv125, i8* %arrayidx126, align 1
  br label %for.inc

for.inc:                                          ; preds = %cond.end123
  %255 = load i32, i32* %n, align 4
  %inc127 = add nsw i32 %255, 1
  store i32 %inc127, i32* %n, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %arrayidx128 = getelementptr inbounds [16 x i8], [16 x i8]* %buf, i32 0, i32 0
  %256 = load i8, i8* %arrayidx128, align 1
  %conv129 = zext i8 %256 to i16
  %conv130 = zext i16 %conv129 to i32
  %arrayidx131 = getelementptr inbounds [16 x i8], [16 x i8]* %buf, i32 0, i32 1
  %257 = load i8, i8* %arrayidx131, align 1
  %conv132 = zext i8 %257 to i16
  %conv133 = zext i16 %conv132 to i32
  %shl134 = shl i32 %conv133, 8
  %or135 = or i32 %conv130, %shl134
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %buf, i32 0, i32 0
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i32 2
  %arrayidx136 = getelementptr inbounds i8, i8* %add.ptr, i32 0
  %258 = load i8, i8* %arrayidx136, align 1
  %conv137 = zext i8 %258 to i16
  %conv138 = zext i16 %conv137 to i32
  %arraydecay139 = getelementptr inbounds [16 x i8], [16 x i8]* %buf, i32 0, i32 0
  %add.ptr140 = getelementptr inbounds i8, i8* %arraydecay139, i32 2
  %arrayidx141 = getelementptr inbounds i8, i8* %add.ptr140, i32 1
  %259 = load i8, i8* %arrayidx141, align 1
  %conv142 = zext i8 %259 to i16
  %conv143 = zext i16 %conv142 to i32
  %shl144 = shl i32 %conv143, 8
  %or145 = or i32 %conv138, %shl144
  %shl146 = shl i32 %or145, 16
  %or147 = or i32 %or135, %shl146
  store i32 %or147, i32* %orig_crc, align 4
  %arraydecay148 = getelementptr inbounds [16 x i8], [16 x i8]* %buf, i32 0, i32 0
  %add.ptr149 = getelementptr inbounds i8, i8* %arraydecay148, i32 4
  %arrayidx150 = getelementptr inbounds i8, i8* %add.ptr149, i32 0
  %260 = load i8, i8* %arrayidx150, align 1
  %conv151 = zext i8 %260 to i16
  %conv152 = zext i16 %conv151 to i32
  %arraydecay153 = getelementptr inbounds [16 x i8], [16 x i8]* %buf, i32 0, i32 0
  %add.ptr154 = getelementptr inbounds i8, i8* %arraydecay153, i32 4
  %arrayidx155 = getelementptr inbounds i8, i8* %add.ptr154, i32 1
  %261 = load i8, i8* %arrayidx155, align 1
  %conv156 = zext i8 %261 to i16
  %conv157 = zext i16 %conv156 to i32
  %shl158 = shl i32 %conv157, 8
  %or159 = or i32 %conv152, %shl158
  %arraydecay160 = getelementptr inbounds [16 x i8], [16 x i8]* %buf, i32 0, i32 0
  %add.ptr161 = getelementptr inbounds i8, i8* %arraydecay160, i32 4
  %add.ptr162 = getelementptr inbounds i8, i8* %add.ptr161, i32 2
  %arrayidx163 = getelementptr inbounds i8, i8* %add.ptr162, i32 0
  %262 = load i8, i8* %arrayidx163, align 1
  %conv164 = zext i8 %262 to i16
  %conv165 = zext i16 %conv164 to i32
  %arraydecay166 = getelementptr inbounds [16 x i8], [16 x i8]* %buf, i32 0, i32 0
  %add.ptr167 = getelementptr inbounds i8, i8* %arraydecay166, i32 4
  %add.ptr168 = getelementptr inbounds i8, i8* %add.ptr167, i32 2
  %arrayidx169 = getelementptr inbounds i8, i8* %add.ptr168, i32 1
  %263 = load i8, i8* %arrayidx169, align 1
  %conv170 = zext i8 %263 to i16
  %conv171 = zext i16 %conv170 to i32
  %shl172 = shl i32 %conv171, 8
  %or173 = or i32 %conv165, %shl172
  %shl174 = shl i32 %or173, 16
  %or175 = or i32 %or159, %shl174
  store i32 %or175, i32* %orig_len, align 4
  br label %if.end255

if.else176:                                       ; preds = %if.end110
  %264 = load i32, i32* @ext_header, align 4
  %tobool177 = icmp ne i32 %264, 0
  br i1 %tobool177, label %if.then178, label %if.end254

if.then178:                                       ; preds = %if.else176
  store i32 0, i32* %n, align 4
  br label %CallOutFuncBB

CallOutFuncBB:                                    ; preds = %if.then178
  call void @for.cond179.OutLineFunc(i32* %n, [16 x i8]* %buf, i32* %orig_crc, i32* %orig_len)
  %265 = getelementptr inbounds %Struct.RetValue.41, %Struct.RetValue.41* @Struct.RetValue.51, i32 0, i32 0
  %266 = load i32*, i32** %265, align 4
  %267 = load i32, i32* %266, align 4
  store i32 %267, i32* %n
  %268 = getelementptr inbounds %Struct.RetValue.41, %Struct.RetValue.41* @Struct.RetValue.51, i32 0, i32 1
  %269 = load i32*, i32** %268, align 4
  %270 = load i32, i32* %269, align 4
  store i32 %270, i32* %orig_crc
  %271 = getelementptr inbounds %Struct.RetValue.41, %Struct.RetValue.41* @Struct.RetValue.51, i32 0, i32 2
  %272 = load i32*, i32** %271, align 4
  %273 = load i32, i32* %272, align 4
  store i32 %273, i32* %orig_len
  br label %if.end254

if.end254:                                        ; preds = %CallOutFuncBB, %if.else176
  br label %if.end255

if.end255:                                        ; preds = %if.end254, %for.end
  %274 = load i32, i32* %orig_crc, align 4
  br label %entry.updcrc.Clone108

entry.updcrc.Clone108:                            ; preds = %if.end255
  %n.addr.updcrc.Clone109 = alloca i32, align 4
  %s.addr.updcrc.Clone110 = alloca i8*, align 4
  %c.updcrc.Clone111 = alloca i32, align 4
  store i32 0, i32* %n.addr.updcrc.Clone109, align 4
  store i8* getelementptr inbounds ([18432 x i8], [18432 x i8]* @outbuf, i32 0, i32 0), i8** %s.addr.updcrc.Clone110, align 4
  %275 = load i8*, i8** %s.addr.updcrc.Clone110, align 4
  %cmp.updcrc.Clone112 = icmp eq i8* %275, null
  br i1 %cmp.updcrc.Clone112, label %if.then.updcrc.Clone113, label %if.else.updcrc.Clone114

if.then.updcrc.Clone113:                          ; preds = %entry.updcrc.Clone108
  store i32 -1, i32* %c.updcrc.Clone111, align 4
  br label %if.end4.updcrc.Clone130

if.else.updcrc.Clone114:                          ; preds = %entry.updcrc.Clone108
  %276 = load i32, i32* @updcrc.crc, align 4
  store i32 %276, i32* %c.updcrc.Clone111, align 4
  %277 = load i32, i32* %n.addr.updcrc.Clone109, align 4
  %tobool.updcrc.Clone115 = icmp ne i32 %277, 0
  br i1 %tobool.updcrc.Clone115, label %if.then1.updcrc.Clone116, label %if.end.updcrc.Clone129

if.then1.updcrc.Clone116:                         ; preds = %if.else.updcrc.Clone114
  br label %do.body.updcrc.Clone117

do.body.updcrc.Clone117:                          ; preds = %do.cond.updcrc.Clone125, %if.then1.updcrc.Clone116
  %278 = load i32, i32* %c.updcrc.Clone111, align 4
  %279 = load i8*, i8** %s.addr.updcrc.Clone110, align 4
  %incdec.ptr.updcrc.Clone118 = getelementptr inbounds i8, i8* %279, i32 1
  store i8* %incdec.ptr.updcrc.Clone118, i8** %s.addr.updcrc.Clone110, align 4
  %280 = load i8, i8* %279, align 1
  %conv.updcrc.Clone119 = zext i8 %280 to i32
  %xor.updcrc.Clone120 = xor i32 %278, %conv.updcrc.Clone119
  %and.updcrc.Clone121 = and i32 %xor.updcrc.Clone120, 255
  %arrayidx.updcrc.Clone122 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([256 x i32]* @crc_32_tab to [0 x i32]*), i32 0, i32 %and.updcrc.Clone121
  %281 = load i32, i32* %arrayidx.updcrc.Clone122, align 4
  %282 = load i32, i32* %c.updcrc.Clone111, align 4
  %shr.updcrc.Clone123 = lshr i32 %282, 8
  %xor2.updcrc.Clone124 = xor i32 %281, %shr.updcrc.Clone123
  store i32 %xor2.updcrc.Clone124, i32* %c.updcrc.Clone111, align 4
  br label %do.cond.updcrc.Clone125

do.cond.updcrc.Clone125:                          ; preds = %do.body.updcrc.Clone117
  %283 = load i32, i32* %n.addr.updcrc.Clone109, align 4
  %dec.updcrc.Clone126 = add i32 %283, -1
  store i32 %dec.updcrc.Clone126, i32* %n.addr.updcrc.Clone109, align 4
  %tobool3.updcrc.Clone127 = icmp ne i32 %dec.updcrc.Clone126, 0
  br i1 %tobool3.updcrc.Clone127, label %do.body.updcrc.Clone117, label %do.end.updcrc.Clone128

do.end.updcrc.Clone128:                           ; preds = %do.cond.updcrc.Clone125
  br label %if.end.updcrc.Clone129

if.end.updcrc.Clone129:                           ; preds = %do.end.updcrc.Clone128, %if.else.updcrc.Clone114
  br label %if.end4.updcrc.Clone130

if.end4.updcrc.Clone130:                          ; preds = %if.end.updcrc.Clone129, %if.then.updcrc.Clone113
  %284 = load i32, i32* %c.updcrc.Clone111, align 4
  store i32 %284, i32* @updcrc.crc, align 4
  %285 = load i32, i32* %c.updcrc.Clone111, align 4
  %xor5.updcrc.Clone131 = xor i32 %285, -1
  store i32 %xor5.updcrc.Clone131, i32* %RetValuePtr132
  br label %if.end255.Split

if.end255.Split:                                  ; preds = %if.end4.updcrc.Clone130
  %RetValue133 = load i32, i32* %RetValuePtr132
  %cmp257 = icmp ne i32 %274, %RetValue133
  br i1 %cmp257, label %if.then259, label %if.end260

if.then259:                                       ; preds = %if.end255.Split
  br label %entry.error.Clone30

entry.error.Clone30:                              ; preds = %if.then259
  %m.addr.error.Clone31 = alloca i8*, align 4
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"??_C@_0CD@FONOOJNO@invalid?5compressed?5data?9?9crc?5err@", i32 0, i32 0), i8** %m.addr.error.Clone31, align 4
  %286 = load i8*, i8** %m.addr.error.Clone31, align 4
  %287 = load i8*, i8** @progname, align 4
  %call.error.Clone32 = call %struct._iobuf* @__iob_func()
  %arrayidx.error.Clone33 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.error.Clone32, i32 2
  %call1.error.Clone34 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.error.Clone33, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @"??_C@_0N@ODCEBLNH@?6?$CFs?3?5?$CFs?3?5?$CFs?6?$AA@", i32 0, i32 0), i8* %287, i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0), i8* %286)
  br label %entry.abort_gzip.Clone202

entry.abort_gzip.Clone202:                        ; preds = %entry.error.Clone30
  %288 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone203 = icmp ne i32 %288, 0
  br i1 %tobool.abort_gzip.Clone203, label %if.then.abort_gzip.Clone204, label %if.end.abort_gzip.Clone207

if.then.abort_gzip.Clone204:                      ; preds = %entry.abort_gzip.Clone202
  %289 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone205 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %289)
  %call1.abort_gzip.Clone206 = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone207

if.end.abort_gzip.Clone207:                       ; preds = %if.then.abort_gzip.Clone204, %entry.abort_gzip.Clone202
  br label %entry.do_exit.Clone214

entry.do_exit.Clone214:                           ; preds = %if.end.abort_gzip.Clone207
  %exitcode.addr.do_exit.Clone215 = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone215, align 4
  %290 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone216 = icmp ne i32 %290, 0
  br i1 %tobool.do_exit.Clone216, label %if.then.do_exit.Clone217, label %if.end.do_exit.Clone218

if.then.do_exit.Clone217:                         ; preds = %entry.do_exit.Clone214
  %291 = load i32, i32* %exitcode.addr.do_exit.Clone215, align 4
  call void @exit(i32 %291) #7
  unreachable

if.end.do_exit.Clone218:                          ; preds = %entry.do_exit.Clone214
  store i32 1, i32* @do_exit.in_exit, align 4
  %292 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone219 = icmp ne i8* %292, null
  br i1 %cmp.do_exit.Clone219, label %if.then1.do_exit.Clone220, label %if.end2.do_exit.Clone221

if.then1.do_exit.Clone220:                        ; preds = %if.end.do_exit.Clone218
  %293 = load i8*, i8** @env, align 4
  call void @free(i8* %293) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone221

if.end2.do_exit.Clone221:                         ; preds = %if.then1.do_exit.Clone220, %if.end.do_exit.Clone218
  %294 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone222 = icmp ne i8** %294, null
  br i1 %cmp3.do_exit.Clone222, label %if.then4.do_exit.Clone223, label %if.end5.do_exit.Clone224

if.then4.do_exit.Clone223:                        ; preds = %if.end2.do_exit.Clone221
  %295 = load i8**, i8*** @args, align 4
  %296 = bitcast i8** %295 to i8*
  call void @free(i8* %296) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone224

if.end5.do_exit.Clone224:                         ; preds = %if.then4.do_exit.Clone223, %if.end2.do_exit.Clone221
  %297 = load i32, i32* %exitcode.addr.do_exit.Clone215, align 4
  call void @exit(i32 %297) #7
  unreachable

return.do_exit.Clone225:                          ; No predecessors!
  br label %if.end.abort_gzip.Clone207.Split

if.end.abort_gzip.Clone207.Split:                 ; preds = %return.do_exit.Clone225
  br label %entry.error.Clone30.Split

entry.error.Clone30.Split:                        ; preds = %if.end.abort_gzip.Clone207.Split
  br label %if.then259.Split

if.then259.Split:                                 ; preds = %entry.error.Clone30.Split
  br label %if.end260

if.end260:                                        ; preds = %if.then259.Split, %if.end255.Split
  %298 = load i32, i32* %orig_len, align 4
  %299 = load i32, i32* @bytes_out, align 4
  %cmp261 = icmp ne i32 %298, %299
  br i1 %cmp261, label %if.then263, label %if.end264

if.then263:                                       ; preds = %if.end260
  br label %entry.error.Clone

entry.error.Clone:                                ; preds = %if.then263
  %m.addr.error.Clone = alloca i8*, align 4
  store i8* getelementptr inbounds ([38 x i8], [38 x i8]* @"??_C@_0CG@FNGHHANN@invalid?5compressed?5data?9?9length?5@", i32 0, i32 0), i8** %m.addr.error.Clone, align 4
  %300 = load i8*, i8** %m.addr.error.Clone, align 4
  %301 = load i8*, i8** @progname, align 4
  %call.error.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx.error.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.error.Clone, i32 2
  %call1.error.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.error.Clone, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @"??_C@_0N@ODCEBLNH@?6?$CFs?3?5?$CFs?3?5?$CFs?6?$AA@", i32 0, i32 0), i8* %301, i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0), i8* %300)
  br label %entry.abort_gzip.Clone208

entry.abort_gzip.Clone208:                        ; preds = %entry.error.Clone
  %302 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone209 = icmp ne i32 %302, 0
  br i1 %tobool.abort_gzip.Clone209, label %if.then.abort_gzip.Clone210, label %if.end.abort_gzip.Clone213

if.then.abort_gzip.Clone210:                      ; preds = %entry.abort_gzip.Clone208
  %303 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone211 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %303)
  %call1.abort_gzip.Clone212 = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone213

if.end.abort_gzip.Clone213:                       ; preds = %if.then.abort_gzip.Clone210, %entry.abort_gzip.Clone208
  br label %entry.do_exit.Clone

entry.do_exit.Clone:                              ; preds = %if.end.abort_gzip.Clone213
  %exitcode.addr.do_exit.Clone = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone, align 4
  %304 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone = icmp ne i32 %304, 0
  br i1 %tobool.do_exit.Clone, label %if.then.do_exit.Clone, label %if.end.do_exit.Clone

if.then.do_exit.Clone:                            ; preds = %entry.do_exit.Clone
  %305 = load i32, i32* %exitcode.addr.do_exit.Clone, align 4
  call void @exit(i32 %305) #7
  unreachable

if.end.do_exit.Clone:                             ; preds = %entry.do_exit.Clone
  store i32 1, i32* @do_exit.in_exit, align 4
  %306 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone = icmp ne i8* %306, null
  br i1 %cmp.do_exit.Clone, label %if.then1.do_exit.Clone, label %if.end2.do_exit.Clone

if.then1.do_exit.Clone:                           ; preds = %if.end.do_exit.Clone
  %307 = load i8*, i8** @env, align 4
  call void @free(i8* %307) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone

if.end2.do_exit.Clone:                            ; preds = %if.then1.do_exit.Clone, %if.end.do_exit.Clone
  %308 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone = icmp ne i8** %308, null
  br i1 %cmp3.do_exit.Clone, label %if.then4.do_exit.Clone, label %if.end5.do_exit.Clone

if.then4.do_exit.Clone:                           ; preds = %if.end2.do_exit.Clone
  %309 = load i8**, i8*** @args, align 4
  %310 = bitcast i8** %309 to i8*
  call void @free(i8* %310) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone

if.end5.do_exit.Clone:                            ; preds = %if.then4.do_exit.Clone, %if.end2.do_exit.Clone
  %311 = load i32, i32* %exitcode.addr.do_exit.Clone, align 4
  call void @exit(i32 %311) #7
  unreachable

return.do_exit.Clone:                             ; No predecessors!
  br label %if.end.abort_gzip.Clone213.Split

if.end.abort_gzip.Clone213.Split:                 ; preds = %return.do_exit.Clone
  br label %entry.error.Clone.Split

entry.error.Clone.Split:                          ; preds = %if.end.abort_gzip.Clone213.Split
  br label %if.then263.Split

if.then263.Split:                                 ; preds = %entry.error.Clone.Split
  br label %if.end264

if.end264:                                        ; preds = %if.then263.Split, %if.end260
  %312 = load i32, i32* @pkzip, align 4
  %tobool265 = icmp ne i32 %312, 0
  br i1 %tobool265, label %land.lhs.true266, label %if.end314

land.lhs.true266:                                 ; preds = %if.end264
  %313 = load i32, i32* @inptr, align 4
  %add = add i32 %313, 4
  %314 = load i32, i32* @insize, align 4
  %cmp267 = icmp ult i32 %add, %314
  br i1 %cmp267, label %land.lhs.true269, label %if.end314

land.lhs.true269:                                 ; preds = %land.lhs.true266
  %315 = load i32, i32* @inptr, align 4
  %add.ptr270 = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %315
  %arrayidx271 = getelementptr inbounds i8, i8* %add.ptr270, i32 0
  %316 = load i8, i8* %arrayidx271, align 1
  %conv272 = zext i8 %316 to i16
  %conv273 = zext i16 %conv272 to i32
  %317 = load i32, i32* @inptr, align 4
  %add.ptr274 = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %317
  %arrayidx275 = getelementptr inbounds i8, i8* %add.ptr274, i32 1
  %318 = load i8, i8* %arrayidx275, align 1
  %conv276 = zext i8 %318 to i16
  %conv277 = zext i16 %conv276 to i32
  %shl278 = shl i32 %conv277, 8
  %or279 = or i32 %conv273, %shl278
  %319 = load i32, i32* @inptr, align 4
  %add.ptr280 = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %319
  %add.ptr281 = getelementptr inbounds i8, i8* %add.ptr280, i32 2
  %arrayidx282 = getelementptr inbounds i8, i8* %add.ptr281, i32 0
  %320 = load i8, i8* %arrayidx282, align 1
  %conv283 = zext i8 %320 to i16
  %conv284 = zext i16 %conv283 to i32
  %321 = load i32, i32* @inptr, align 4
  %add.ptr285 = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %321
  %add.ptr286 = getelementptr inbounds i8, i8* %add.ptr285, i32 2
  %arrayidx287 = getelementptr inbounds i8, i8* %add.ptr286, i32 1
  %322 = load i8, i8* %arrayidx287, align 1
  %conv288 = zext i8 %322 to i16
  %conv289 = zext i16 %conv288 to i32
  %shl290 = shl i32 %conv289, 8
  %or291 = or i32 %conv284, %shl290
  %shl292 = shl i32 %or291, 16
  %or293 = or i32 %or279, %shl292
  %cmp294 = icmp eq i32 %or293, 67324752
  br i1 %cmp294, label %if.then296, label %if.end314

if.then296:                                       ; preds = %land.lhs.true269
  %323 = load i32, i32* @to_stdout, align 4
  %tobool297 = icmp ne i32 %323, 0
  br i1 %tobool297, label %if.then298, label %if.else309

if.then298:                                       ; preds = %if.then296
  %324 = load i32, i32* @quiet, align 4
  %tobool299 = icmp ne i32 %324, 0
  br i1 %tobool299, label %if.end304, label %if.then300

if.then300:                                       ; preds = %if.then298
  %325 = load i8*, i8** @progname, align 4
  %call301 = call %struct._iobuf* @__iob_func()
  %arrayidx302 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call301, i32 2
  %call303 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx302, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @"??_C@_0CO@IPDKOBOP@?$CFs?3?5?$CFs?5has?5more?5than?5one?5entry?9?9@", i32 0, i32 0), i8* %325, i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end304

if.end304:                                        ; preds = %if.then300, %if.then298
  %326 = load i32, i32* @exit_code, align 4
  %cmp305 = icmp eq i32 %326, 0
  br i1 %cmp305, label %if.then307, label %if.end308

if.then307:                                       ; preds = %if.end304
  store i32 2, i32* @exit_code, align 4
  br label %if.end308

if.end308:                                        ; preds = %if.then307, %if.end304
  br label %if.end313

if.else309:                                       ; preds = %if.then296
  %327 = load i8*, i8** @progname, align 4
  %call310 = call %struct._iobuf* @__iob_func()
  %arrayidx311 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call310, i32 2
  %call312 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx311, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @"??_C@_0CN@FCMAHAJH@?$CFs?3?5?$CFs?5has?5more?5than?5one?5entry?5?9@", i32 0, i32 0), i8* %327, i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  store i32 1, i32* @exit_code, align 4
  store i32 0, i32* @pkzip, align 4
  store i32 0, i32* @ext_header, align 4
  store i32 1, i32* %retval, align 4
  br label %return

if.end313:                                        ; preds = %if.end308
  br label %if.end314

if.end314:                                        ; preds = %if.end313, %land.lhs.true269, %land.lhs.true266, %if.end264
  store i32 0, i32* @pkzip, align 4
  store i32 0, i32* @ext_header, align 4
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end314, %if.else309
  %328 = load i32, i32* %retval, align 4
  ret i32 %328
}

; Function Attrs: noinline optnone sspstrong
define dso_local i32 @copy(i32 %in, i32 %out) #1 {
entry:
  %out.addr = alloca i32, align 4
  %in.addr = alloca i32, align 4
  store i32 %out, i32* %out.addr, align 4
  store i32 %in, i32* %in.addr, align 4
  %call = call i32* @_errno()
  store i32 0, i32* %call, align 4
  %RetValuePtr = alloca i32, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body.Split, %entry
  %0 = load i32, i32* @insize, align 4
  %cmp = icmp ne i32 %0, 0
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %1 = load i32, i32* @insize, align 4
  %cmp1 = icmp ne i32 %1, -1
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %2 = phi i1 [ false, %while.cond ], [ %cmp1, %land.rhs ]
  br i1 %2, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %3 = load i32, i32* @insize, align 4
  %4 = load i32, i32* %out.addr, align 4
  br label %entry.write_buf.Clone

entry.write_buf.Clone:                            ; preds = %while.body
  %cnt.addr.write_buf.Clone = alloca i32, align 4
  %buf.addr.write_buf.Clone = alloca i8*, align 4
  %fd.addr.write_buf.Clone = alloca i32, align 4
  %n.write_buf.Clone = alloca i32, align 4
  store i32 %3, i32* %cnt.addr.write_buf.Clone, align 4
  store i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i8** %buf.addr.write_buf.Clone, align 4
  store i32 %4, i32* %fd.addr.write_buf.Clone, align 4
  br label %while.cond.write_buf.Clone

while.cond.write_buf.Clone:                       ; preds = %if.end.write_buf.Clone, %entry.write_buf.Clone
  %5 = load i32, i32* %cnt.addr.write_buf.Clone, align 4
  %6 = load i8*, i8** %buf.addr.write_buf.Clone, align 4
  %7 = load i32, i32* %fd.addr.write_buf.Clone, align 4
  br label %entry.spec_write.Clone

entry.spec_write.Clone:                           ; preds = %while.cond.write_buf.Clone
  %size.addr.spec_write.Clone = alloca i32, align 4
  %buf.addr.spec_write.Clone = alloca i8*, align 4
  %fd.addr.spec_write.Clone = alloca i32, align 4
  store i32 %5, i32* %size.addr.spec_write.Clone, align 4
  store i8* %6, i8** %buf.addr.spec_write.Clone, align 4
  store i32 %7, i32* %fd.addr.spec_write.Clone, align 4
  %8 = load i32, i32* @dbglvl, align 4
  %cmp.spec_write.Clone = icmp slt i32 4, %8
  br i1 %cmp.spec_write.Clone, label %if.then.spec_write.Clone, label %if.end.spec_write.Clone

if.then.spec_write.Clone:                         ; preds = %entry.spec_write.Clone
  %9 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %10 = load i8*, i8** %buf.addr.spec_write.Clone, align 4
  %11 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %call.spec_write.Clone = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @"??_C@_0BK@GKFGHPHN@spec_write?3?5?$CFd?0?5?$CFx?0?5?$CFd?5?$DN?5?$AA@", i32 0, i32 0), i32 %11, i8* %10, i32 %9)
  br label %if.end.spec_write.Clone

if.end.spec_write.Clone:                          ; preds = %if.then.spec_write.Clone, %entry.spec_write.Clone
  %12 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %cmp1.spec_write.Clone = icmp sgt i32 %12, 3
  br i1 %cmp1.spec_write.Clone, label %if.then2.spec_write.Clone, label %if.end5.spec_write.Clone

if.then2.spec_write.Clone:                        ; preds = %if.end.spec_write.Clone
  %13 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %call3.spec_write.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx.spec_write.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.spec_write.Clone, i32 2
  %call4.spec_write.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.spec_write.Clone, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"??_C@_0CD@NANFEFEM@spec_write?3?5fd?$DN?$CFd?0?5?$DO?5MAX_SPEC_FD@", i32 0, i32 0), i32 %13)
  call void @exit(i32 1) #7
  unreachable

if.end5.spec_write.Clone:                         ; preds = %if.end.spec_write.Clone
  %14 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx6.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %14
  %buf7.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx6.spec_write.Clone, i32 0, i32 3
  %15 = load i8*, i8** %buf7.spec_write.Clone, align 4
  %16 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx8.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %16
  %pos.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx8.spec_write.Clone, i32 0, i32 2
  %17 = load i32, i32* %pos.spec_write.Clone, align 4
  %arrayidx9.spec_write.Clone = getelementptr inbounds i8, i8* %15, i32 %17
  %18 = load i8*, i8** %buf.addr.spec_write.Clone, align 4
  %19 = load i32, i32* %size.addr.spec_write.Clone, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %arrayidx9.spec_write.Clone, i8* align 1 %18, i32 %19, i1 false)
  %20 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %21 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx10.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %21
  %len.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx10.spec_write.Clone, i32 0, i32 1
  %22 = load i32, i32* %len.spec_write.Clone, align 4
  %add.spec_write.Clone = add nsw i32 %22, %20
  store i32 %add.spec_write.Clone, i32* %len.spec_write.Clone, align 4
  %23 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %24 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx11.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %24
  %pos12.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx11.spec_write.Clone, i32 0, i32 2
  %25 = load i32, i32* %pos12.spec_write.Clone, align 4
  %add13.spec_write.Clone = add nsw i32 %25, %23
  store i32 %add13.spec_write.Clone, i32* %pos12.spec_write.Clone, align 4
  %26 = load i32, i32* @dbglvl, align 4
  %cmp14.spec_write.Clone = icmp slt i32 4, %26
  br i1 %cmp14.spec_write.Clone, label %if.then15.spec_write.Clone, label %if.end17.spec_write.Clone

if.then15.spec_write.Clone:                       ; preds = %if.end5.spec_write.Clone
  %27 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %call16.spec_write.Clone = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"??_C@_03PMGGPEJJ@?$CFd?6?$AA@", i32 0, i32 0), i32 %27)
  br label %if.end17.spec_write.Clone

if.end17.spec_write.Clone:                        ; preds = %if.then15.spec_write.Clone, %if.end5.spec_write.Clone
  %28 = load i32, i32* %size.addr.spec_write.Clone, align 4
  store i32 %28, i32* %RetValuePtr
  br label %while.cond.write_buf.Clone.Split

while.cond.write_buf.Clone.Split:                 ; preds = %if.end17.spec_write.Clone
  %RetValue = load i32, i32* %RetValuePtr
  store i32 %RetValue, i32* %n.write_buf.Clone, align 4
  %29 = load i32, i32* %cnt.addr.write_buf.Clone, align 4
  %cmp.write_buf.Clone = icmp ne i32 %RetValue, %29
  br i1 %cmp.write_buf.Clone, label %while.body.write_buf.Clone, label %while.end.write_buf.Clone

while.body.write_buf.Clone:                       ; preds = %while.cond.write_buf.Clone.Split
  %30 = load i32, i32* %n.write_buf.Clone, align 4
  %cmp1.write_buf.Clone = icmp eq i32 %30, -1
  br i1 %cmp1.write_buf.Clone, label %if.then.write_buf.Clone, label %if.end.write_buf.Clone

if.then.write_buf.Clone:                          ; preds = %while.body.write_buf.Clone
  call void @write_error()
  br label %if.end.write_buf.Clone

if.end.write_buf.Clone:                           ; preds = %if.then.write_buf.Clone, %while.body.write_buf.Clone
  %31 = load i32, i32* %n.write_buf.Clone, align 4
  %32 = load i32, i32* %cnt.addr.write_buf.Clone, align 4
  %sub.write_buf.Clone = sub i32 %32, %31
  store i32 %sub.write_buf.Clone, i32* %cnt.addr.write_buf.Clone, align 4
  %33 = load i8*, i8** %buf.addr.write_buf.Clone, align 4
  %34 = load i32, i32* %n.write_buf.Clone, align 4
  %add.ptr.write_buf.Clone = getelementptr inbounds i8, i8* %33, i32 %34
  store i8* %add.ptr.write_buf.Clone, i8** %buf.addr.write_buf.Clone, align 4
  br label %while.cond.write_buf.Clone

while.end.write_buf.Clone:                        ; preds = %while.cond.write_buf.Clone.Split
  br label %while.body.Split

while.body.Split:                                 ; preds = %while.end.write_buf.Clone
  %35 = load i32, i32* @insize, align 4
  %36 = load i32, i32* @bytes_out, align 4
  %add = add i32 %36, %35
  store i32 %add, i32* @bytes_out, align 4
  %37 = load i32, i32* %in.addr, align 4
  %call2 = call i32 @spec_read(i32 %37, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 32768)
  store i32 %call2, i32* @insize, align 4
  br label %while.cond

while.end:                                        ; preds = %land.end
  %38 = load i32, i32* @insize, align 4
  %cmp3 = icmp eq i32 %38, -1
  br i1 %cmp3, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %while.end
  %call4 = call i32* @_errno()
  %39 = load i32, i32* %call4, align 4
  %cmp5 = icmp ne i32 %39, 0
  br i1 %cmp5, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  br label %entry.read_error.Clone

entry.read_error.Clone:                           ; preds = %if.then
  %40 = load i8*, i8** @progname, align 4
  %call.read_error.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone, i32 2
  %call1.read_error.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %40)
  %call2.read_error.Clone = call i32* @_errno()
  %41 = load i32, i32* %call2.read_error.Clone, align 4
  %cmp.read_error.Clone = icmp ne i32 %41, 0
  br i1 %cmp.read_error.Clone, label %if.then.read_error.Clone, label %if.else.read_error.Clone

if.then.read_error.Clone:                         ; preds = %entry.read_error.Clone
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone

if.else.read_error.Clone:                         ; preds = %entry.read_error.Clone
  %call3.read_error.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone, i32 2
  %call5.read_error.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone

if.end.read_error.Clone:                          ; preds = %if.else.read_error.Clone, %if.then.read_error.Clone
  br label %entry.abort_gzip.Clone

entry.abort_gzip.Clone:                           ; preds = %if.end.read_error.Clone
  %42 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone = icmp ne i32 %42, 0
  br i1 %tobool.abort_gzip.Clone, label %if.then.abort_gzip.Clone, label %if.end.abort_gzip.Clone

if.then.abort_gzip.Clone:                         ; preds = %entry.abort_gzip.Clone
  %43 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %43)
  %call1.abort_gzip.Clone = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone

if.end.abort_gzip.Clone:                          ; preds = %if.then.abort_gzip.Clone, %entry.abort_gzip.Clone
  br label %entry.do_exit.Clone

entry.do_exit.Clone:                              ; preds = %if.end.abort_gzip.Clone
  %exitcode.addr.do_exit.Clone = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone, align 4
  %44 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone = icmp ne i32 %44, 0
  br i1 %tobool.do_exit.Clone, label %if.then.do_exit.Clone, label %if.end.do_exit.Clone

if.then.do_exit.Clone:                            ; preds = %entry.do_exit.Clone
  %45 = load i32, i32* %exitcode.addr.do_exit.Clone, align 4
  call void @exit(i32 %45) #7
  unreachable

if.end.do_exit.Clone:                             ; preds = %entry.do_exit.Clone
  store i32 1, i32* @do_exit.in_exit, align 4
  %46 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone = icmp ne i8* %46, null
  br i1 %cmp.do_exit.Clone, label %if.then1.do_exit.Clone, label %if.end2.do_exit.Clone

if.then1.do_exit.Clone:                           ; preds = %if.end.do_exit.Clone
  %47 = load i8*, i8** @env, align 4
  call void @free(i8* %47) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone

if.end2.do_exit.Clone:                            ; preds = %if.then1.do_exit.Clone, %if.end.do_exit.Clone
  %48 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone = icmp ne i8** %48, null
  br i1 %cmp3.do_exit.Clone, label %if.then4.do_exit.Clone, label %if.end5.do_exit.Clone

if.then4.do_exit.Clone:                           ; preds = %if.end2.do_exit.Clone
  %49 = load i8**, i8*** @args, align 4
  %50 = bitcast i8** %49 to i8*
  call void @free(i8* %50) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone

if.end5.do_exit.Clone:                            ; preds = %if.then4.do_exit.Clone, %if.end2.do_exit.Clone
  %51 = load i32, i32* %exitcode.addr.do_exit.Clone, align 4
  call void @exit(i32 %51) #7
  unreachable

return.do_exit.Clone:                             ; No predecessors!
  br label %if.end.abort_gzip.Clone.Split

if.end.abort_gzip.Clone.Split:                    ; preds = %return.do_exit.Clone
  br label %if.end.read_error.Clone.Split

if.end.read_error.Clone.Split:                    ; preds = %if.end.abort_gzip.Clone.Split
  br label %if.then.Split

if.then.Split:                                    ; preds = %if.end.read_error.Clone.Split
  br label %if.end

if.end:                                           ; preds = %if.then.Split, %land.lhs.true, %while.end
  %52 = load i32, i32* @bytes_out, align 4
  store i32 %52, i32* @bytes_in, align 4
  ret i32 0
}

declare dllimport void @perror(i8*) #3

; Function Attrs: noinline optnone sspstrong
define dso_local void @write_error() #1 {
entry:
  %0 = load i8*, i8** @progname, align 4
  %call = call %struct._iobuf* @__iob_func()
  %arrayidx = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call, i32 2
  %call1 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %0)
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %entry.abort_gzip.Clone

entry.abort_gzip.Clone:                           ; preds = %entry
  %1 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone = icmp ne i32 %1, 0
  br i1 %tobool.abort_gzip.Clone, label %if.then.abort_gzip.Clone, label %if.end.abort_gzip.Clone

if.then.abort_gzip.Clone:                         ; preds = %entry.abort_gzip.Clone
  %2 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %2)
  %call1.abort_gzip.Clone = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone

if.end.abort_gzip.Clone:                          ; preds = %if.then.abort_gzip.Clone, %entry.abort_gzip.Clone
  br label %entry.do_exit.Clone

entry.do_exit.Clone:                              ; preds = %if.end.abort_gzip.Clone
  %exitcode.addr.do_exit.Clone = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone, align 4
  %3 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone = icmp ne i32 %3, 0
  br i1 %tobool.do_exit.Clone, label %if.then.do_exit.Clone, label %if.end.do_exit.Clone

if.then.do_exit.Clone:                            ; preds = %entry.do_exit.Clone
  %4 = load i32, i32* %exitcode.addr.do_exit.Clone, align 4
  call void @exit(i32 %4) #7
  unreachable

if.end.do_exit.Clone:                             ; preds = %entry.do_exit.Clone
  store i32 1, i32* @do_exit.in_exit, align 4
  %5 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone = icmp ne i8* %5, null
  br i1 %cmp.do_exit.Clone, label %if.then1.do_exit.Clone, label %if.end2.do_exit.Clone

if.then1.do_exit.Clone:                           ; preds = %if.end.do_exit.Clone
  %6 = load i8*, i8** @env, align 4
  call void @free(i8* %6) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone

if.end2.do_exit.Clone:                            ; preds = %if.then1.do_exit.Clone, %if.end.do_exit.Clone
  %7 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone = icmp ne i8** %7, null
  br i1 %cmp3.do_exit.Clone, label %if.then4.do_exit.Clone, label %if.end5.do_exit.Clone

if.then4.do_exit.Clone:                           ; preds = %if.end2.do_exit.Clone
  %8 = load i8**, i8*** @args, align 4
  %9 = bitcast i8** %8 to i8*
  call void @free(i8* %9) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone

if.end5.do_exit.Clone:                            ; preds = %if.then4.do_exit.Clone, %if.end2.do_exit.Clone
  %10 = load i32, i32* %exitcode.addr.do_exit.Clone, align 4
  call void @exit(i32 %10) #7
  unreachable

return.do_exit.Clone:                             ; No predecessors!
  br label %if.end.abort_gzip.Clone.Split

if.end.abort_gzip.Clone.Split:                    ; preds = %return.do_exit.Clone
  br label %entry.Split

entry.Split:                                      ; preds = %if.end.abort_gzip.Clone.Split
  ret void
}

; Function Attrs: noinline nounwind optnone sspstrong
define dso_local i32 @updcrc(i8* %s, i32 %n) #0 {
entry:
  %n.addr = alloca i32, align 4
  %s.addr = alloca i8*, align 4
  %c = alloca i32, align 4
  store i32 %n, i32* %n.addr, align 4
  store i8* %s, i8** %s.addr, align 4
  %0 = load i8*, i8** %s.addr, align 4
  %cmp = icmp eq i8* %0, null
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i32 -1, i32* %c, align 4
  br label %if.end4

if.else:                                          ; preds = %entry
  %1 = load i32, i32* @updcrc.crc, align 4
  store i32 %1, i32* %c, align 4
  %2 = load i32, i32* %n.addr, align 4
  %tobool = icmp ne i32 %2, 0
  br i1 %tobool, label %if.then1, label %if.end

if.then1:                                         ; preds = %if.else
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then1
  %3 = load i32, i32* %c, align 4
  %4 = load i8*, i8** %s.addr, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %4, i32 1
  store i8* %incdec.ptr, i8** %s.addr, align 4
  %5 = load i8, i8* %4, align 1
  %conv = zext i8 %5 to i32
  %xor = xor i32 %3, %conv
  %and = and i32 %xor, 255
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([256 x i32]* @crc_32_tab to [0 x i32]*), i32 0, i32 %and
  %6 = load i32, i32* %arrayidx, align 4
  %7 = load i32, i32* %c, align 4
  %shr = lshr i32 %7, 8
  %xor2 = xor i32 %6, %shr
  store i32 %xor2, i32* %c, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %8 = load i32, i32* %n.addr, align 4
  %dec = add i32 %8, -1
  store i32 %dec, i32* %n.addr, align 4
  %tobool3 = icmp ne i32 %dec, 0
  br i1 %tobool3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %if.else
  br label %if.end4

if.end4:                                          ; preds = %if.end, %if.then
  %9 = load i32, i32* %c, align 4
  store i32 %9, i32* @updcrc.crc, align 4
  %10 = load i32, i32* %c, align 4
  %xor5 = xor i32 %10, -1
  ret i32 %xor5
}

; Function Attrs: noinline nounwind optnone sspstrong
define dso_local i8* @strlwr(i8* %s) #0 {
entry:
  %s.addr = alloca i8*, align 4
  %t = alloca i8*, align 4
  store i8* %s, i8** %s.addr, align 4
  %0 = load i8*, i8** %s.addr, align 4
  store i8* %0, i8** %t, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8*, i8** %t, align 4
  %2 = load i8, i8* %1, align 1
  %tobool = icmp ne i8 %2, 0
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load i8*, i8** %t, align 4
  %4 = load i8, i8* %3, align 1
  %conv = sext i8 %4 to i32
  %call = call i32 @isupper(i32 %conv) #8
  %tobool1 = icmp ne i32 %call, 0
  br i1 %tobool1, label %cond.true, label %cond.false

cond.true:                                        ; preds = %for.body
  %5 = load i8*, i8** %t, align 4
  %6 = load i8, i8* %5, align 1
  %conv2 = sext i8 %6 to i32
  %sub = sub nsw i32 %conv2, 65
  %add = add nsw i32 %sub, 97
  br label %cond.end

cond.false:                                       ; preds = %for.body
  %7 = load i8*, i8** %t, align 4
  %8 = load i8, i8* %7, align 1
  %conv3 = sext i8 %8 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add, %cond.true ], [ %conv3, %cond.false ]
  %conv4 = trunc i32 %cond to i8
  %9 = load i8*, i8** %t, align 4
  store i8 %conv4, i8* %9, align 1
  br label %for.inc

for.inc:                                          ; preds = %cond.end
  %10 = load i8*, i8** %t, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %10, i32 1
  store i8* %incdec.ptr, i8** %t, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %11 = load i8*, i8** %s.addr, align 4
  ret i8* %11
}

; Function Attrs: nounwind readonly
declare dllimport i32 @isupper(i32) #6

declare dllimport i8* @strrchr(i8*, i32) #3

; Function Attrs: noinline optnone sspstrong
define dso_local void @make_simple_name(i8* %name) #1 {
entry:
  %name.addr = alloca i8*, align 4
  %p = alloca i8*, align 4
  store i8* %name, i8** %name.addr, align 4
  %0 = load i8*, i8** %name.addr, align 4
  %call = call i8* @strrchr(i8* %0, i32 46)
  store i8* %call, i8** %p, align 4
  %1 = load i8*, i8** %p, align 4
  %cmp = icmp eq i8* %1, null
  br i1 %cmp, label %if.then, label %CallOutFuncBB

if.then:                                          ; preds = %entry
  br label %do.end

CallOutFuncBB:                                    ; preds = %entry
  call void @if.end.OutLineFunc.53(i8** %p, i8** %name.addr)
  %2 = getelementptr inbounds %Struct.RetValue.42, %Struct.RetValue.42* @Struct.RetValue.52, i32 0, i32 0
  %3 = load i8**, i8*** %2, align 4
  %4 = load i8*, i8** %3, align 4
  store i8* %4, i8** %p
  br label %do.body

do.body:                                          ; preds = %CallOutFuncBB, %do.cond
  %5 = load i8*, i8** %p, align 4
  %incdec.ptr4 = getelementptr inbounds i8, i8* %5, i32 -1
  store i8* %incdec.ptr4, i8** %p, align 4
  %6 = load i8, i8* %incdec.ptr4, align 1
  %conv = sext i8 %6 to i32
  %cmp5 = icmp eq i32 %conv, 46
  br i1 %cmp5, label %if.then7, label %if.end8

if.then7:                                         ; preds = %do.body
  %7 = load i8*, i8** %p, align 4
  store i8 95, i8* %7, align 1
  br label %if.end8

if.end8:                                          ; preds = %if.then7, %do.body
  br label %do.cond

do.cond:                                          ; preds = %if.end8
  %8 = load i8*, i8** %p, align 4
  %9 = load i8*, i8** %name.addr, align 4
  %cmp9 = icmp ne i8* %8, %9
  br i1 %cmp9, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond, %if.then
  ret void
}

; Function Attrs: noinline optnone sspstrong
define dso_local i8* @add_envopt(i32* %argcp, i8*** %argvp, i8* %env) #1 {
entry:
  %retval = alloca i8*, align 4
  %env.addr = alloca i8*, align 4
  %argvp.addr = alloca i8***, align 4
  %argcp.addr = alloca i32*, align 4
  %p = alloca i8*, align 4
  %oargv = alloca i8**, align 4
  %nargv = alloca i8**, align 4
  %oargc = alloca i32, align 4
  %nargc = alloca i32, align 4
  store i8* %env, i8** %env.addr, align 4
  store i8*** %argvp, i8**** %argvp.addr, align 4
  store i32* %argcp, i32** %argcp.addr, align 4
  %0 = load i32*, i32** %argcp.addr, align 4
  %1 = load i32, i32* %0, align 4
  store i32 %1, i32* %oargc, align 4
  store i32 0, i32* %nargc, align 4
  %2 = load i8*, i8** %env.addr, align 4
  %call = call i8* bitcast (i8* (...)* @getenv to i8* (i8*)*)(i8* %2)
  store i8* %call, i8** %env.addr, align 4
  %3 = load i8*, i8** %env.addr, align 4
  %cmp = icmp eq i8* %3, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %env.addr, align 4
  %call1 = call i32 @strlen(i8* %4)
  %add = add i32 %call1, 1
  %call2 = call i8* @xmalloc(i32 %add)
  store i8* %call2, i8** %p, align 4
  %5 = load i8*, i8** %env.addr, align 4
  %6 = load i8*, i8** %p, align 4
  %call3 = call i8* @strcpy(i8* %6, i8* %5)
  store i8* %call3, i8** %env.addr, align 4
  %7 = load i8*, i8** %env.addr, align 4
  store i8* %7, i8** %p, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %8 = load i8*, i8** %p, align 4
  %9 = load i8, i8* %8, align 1
  %tobool = icmp ne i8 %9, 0
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %10 = load i8*, i8** %p, align 4
  %call4 = call i32 @strspn(i8* %10, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @"??_C@_02OJDBNLEE@?5?7?$AA@", i32 0, i32 0))
  %11 = load i8*, i8** %p, align 4
  %add.ptr = getelementptr inbounds i8, i8* %11, i32 %call4
  store i8* %add.ptr, i8** %p, align 4
  %12 = load i8*, i8** %p, align 4
  %13 = load i8, i8* %12, align 1
  %conv = sext i8 %13 to i32
  %cmp5 = icmp eq i32 %conv, 0
  br i1 %cmp5, label %if.then7, label %if.end8

if.then7:                                         ; preds = %for.body
  br label %for.end

if.end8:                                          ; preds = %for.body
  %14 = load i8*, i8** %p, align 4
  %call9 = call i32 @strcspn(i8* %14, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @"??_C@_02OJDBNLEE@?5?7?$AA@", i32 0, i32 0))
  %15 = load i8*, i8** %p, align 4
  %add.ptr10 = getelementptr inbounds i8, i8* %15, i32 %call9
  store i8* %add.ptr10, i8** %p, align 4
  %16 = load i8*, i8** %p, align 4
  %17 = load i8, i8* %16, align 1
  %tobool11 = icmp ne i8 %17, 0
  br i1 %tobool11, label %if.then12, label %if.end13

if.then12:                                        ; preds = %if.end8
  %18 = load i8*, i8** %p, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %18, i32 1
  store i8* %incdec.ptr, i8** %p, align 4
  store i8 0, i8* %18, align 1
  br label %if.end13

if.end13:                                         ; preds = %if.then12, %if.end8
  br label %for.inc

for.inc:                                          ; preds = %if.end13
  %19 = load i32, i32* %nargc, align 4
  %inc = add nsw i32 %19, 1
  store i32 %inc, i32* %nargc, align 4
  br label %for.cond

for.end:                                          ; preds = %if.then7, %for.cond
  %20 = load i32, i32* %nargc, align 4
  %cmp14 = icmp eq i32 %20, 0
  br i1 %cmp14, label %if.then16, label %if.end17

if.then16:                                        ; preds = %for.end
  %21 = load i8*, i8** %env.addr, align 4
  call void @free(i8* %21) #2
  store i8* null, i8** %retval, align 4
  br label %return

if.end17:                                         ; preds = %for.end
  %22 = load i32, i32* %nargc, align 4
  %23 = load i32*, i32** %argcp.addr, align 4
  %24 = load i32, i32* %23, align 4
  %add18 = add nsw i32 %24, %22
  store i32 %add18, i32* %23, align 4
  %25 = load i32*, i32** %argcp.addr, align 4
  %26 = load i32, i32* %25, align 4
  %add19 = add nsw i32 %26, 1
  %call20 = call noalias i8* @calloc(i32 %add19, i32 4) #2
  %27 = bitcast i8* %call20 to i8**
  store i8** %27, i8*** %nargv, align 4
  %28 = load i8**, i8*** %nargv, align 4
  %cmp21 = icmp eq i8** %28, null
  br i1 %cmp21, label %if.then23, label %if.end24

if.then23:                                        ; preds = %if.end17
  br label %entry.error.Clone1

entry.error.Clone1:                               ; preds = %if.then23
  %m.addr.error.Clone2 = alloca i8*, align 4
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @"??_C@_0O@BNNCBLEN@out?5of?5memory?$AA@", i32 0, i32 0), i8** %m.addr.error.Clone2, align 4
  %29 = load i8*, i8** %m.addr.error.Clone2, align 4
  %30 = load i8*, i8** @progname, align 4
  %call.error.Clone3 = call %struct._iobuf* @__iob_func()
  %arrayidx.error.Clone4 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.error.Clone3, i32 2
  %call1.error.Clone5 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.error.Clone4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @"??_C@_0N@ODCEBLNH@?6?$CFs?3?5?$CFs?3?5?$CFs?6?$AA@", i32 0, i32 0), i8* %30, i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0), i8* %29)
  br label %entry.abort_gzip.Clone

entry.abort_gzip.Clone:                           ; preds = %entry.error.Clone1
  %31 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone = icmp ne i32 %31, 0
  br i1 %tobool.abort_gzip.Clone, label %if.then.abort_gzip.Clone, label %if.end.abort_gzip.Clone

if.then.abort_gzip.Clone:                         ; preds = %entry.abort_gzip.Clone
  %32 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %32)
  %call1.abort_gzip.Clone = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone

if.end.abort_gzip.Clone:                          ; preds = %if.then.abort_gzip.Clone, %entry.abort_gzip.Clone
  br label %entry.do_exit.Clone12

entry.do_exit.Clone12:                            ; preds = %if.end.abort_gzip.Clone
  %exitcode.addr.do_exit.Clone13 = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone13, align 4
  %33 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone14 = icmp ne i32 %33, 0
  br i1 %tobool.do_exit.Clone14, label %if.then.do_exit.Clone15, label %if.end.do_exit.Clone16

if.then.do_exit.Clone15:                          ; preds = %entry.do_exit.Clone12
  %34 = load i32, i32* %exitcode.addr.do_exit.Clone13, align 4
  call void @exit(i32 %34) #7
  unreachable

if.end.do_exit.Clone16:                           ; preds = %entry.do_exit.Clone12
  store i32 1, i32* @do_exit.in_exit, align 4
  %35 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone17 = icmp ne i8* %35, null
  br i1 %cmp.do_exit.Clone17, label %if.then1.do_exit.Clone18, label %if.end2.do_exit.Clone19

if.then1.do_exit.Clone18:                         ; preds = %if.end.do_exit.Clone16
  %36 = load i8*, i8** @env, align 4
  call void @free(i8* %36) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone19

if.end2.do_exit.Clone19:                          ; preds = %if.then1.do_exit.Clone18, %if.end.do_exit.Clone16
  %37 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone20 = icmp ne i8** %37, null
  br i1 %cmp3.do_exit.Clone20, label %if.then4.do_exit.Clone21, label %if.end5.do_exit.Clone22

if.then4.do_exit.Clone21:                         ; preds = %if.end2.do_exit.Clone19
  %38 = load i8**, i8*** @args, align 4
  %39 = bitcast i8** %38 to i8*
  call void @free(i8* %39) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone22

if.end5.do_exit.Clone22:                          ; preds = %if.then4.do_exit.Clone21, %if.end2.do_exit.Clone19
  %40 = load i32, i32* %exitcode.addr.do_exit.Clone13, align 4
  call void @exit(i32 %40) #7
  unreachable

return.do_exit.Clone23:                           ; No predecessors!
  br label %if.end.abort_gzip.Clone.Split

if.end.abort_gzip.Clone.Split:                    ; preds = %return.do_exit.Clone23
  br label %entry.error.Clone1.Split

entry.error.Clone1.Split:                         ; preds = %if.end.abort_gzip.Clone.Split
  br label %if.then23.Split

if.then23.Split:                                  ; preds = %entry.error.Clone1.Split
  br label %if.end24

if.end24:                                         ; preds = %if.then23.Split, %if.end17
  %41 = load i8***, i8**** %argvp.addr, align 4
  %42 = load i8**, i8*** %41, align 4
  store i8** %42, i8*** %oargv, align 4
  %43 = load i8**, i8*** %nargv, align 4
  %44 = load i8***, i8**** %argvp.addr, align 4
  store i8** %43, i8*** %44, align 4
  %45 = load i32, i32* %oargc, align 4
  %dec = add nsw i32 %45, -1
  store i32 %dec, i32* %oargc, align 4
  %cmp25 = icmp slt i32 %45, 0
  br i1 %cmp25, label %if.then27, label %if.end28

if.then27:                                        ; preds = %if.end24
  br label %entry.error.Clone

entry.error.Clone:                                ; preds = %if.then27
  %m.addr.error.Clone = alloca i8*, align 4
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @"??_C@_07HPAAHEOH@argc?$DM?$DN0?$AA@", i32 0, i32 0), i8** %m.addr.error.Clone, align 4
  %46 = load i8*, i8** %m.addr.error.Clone, align 4
  %47 = load i8*, i8** @progname, align 4
  %call.error.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx.error.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.error.Clone, i32 2
  %call1.error.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.error.Clone, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @"??_C@_0N@ODCEBLNH@?6?$CFs?3?5?$CFs?3?5?$CFs?6?$AA@", i32 0, i32 0), i8* %47, i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0), i8* %46)
  br label %entry.abort_gzip.Clone6

entry.abort_gzip.Clone6:                          ; preds = %entry.error.Clone
  %48 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone7 = icmp ne i32 %48, 0
  br i1 %tobool.abort_gzip.Clone7, label %if.then.abort_gzip.Clone8, label %if.end.abort_gzip.Clone11

if.then.abort_gzip.Clone8:                        ; preds = %entry.abort_gzip.Clone6
  %49 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone9 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %49)
  %call1.abort_gzip.Clone10 = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone11

if.end.abort_gzip.Clone11:                        ; preds = %if.then.abort_gzip.Clone8, %entry.abort_gzip.Clone6
  br label %entry.do_exit.Clone

entry.do_exit.Clone:                              ; preds = %if.end.abort_gzip.Clone11
  %exitcode.addr.do_exit.Clone = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone, align 4
  %50 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone = icmp ne i32 %50, 0
  br i1 %tobool.do_exit.Clone, label %if.then.do_exit.Clone, label %if.end.do_exit.Clone

if.then.do_exit.Clone:                            ; preds = %entry.do_exit.Clone
  %51 = load i32, i32* %exitcode.addr.do_exit.Clone, align 4
  call void @exit(i32 %51) #7
  unreachable

if.end.do_exit.Clone:                             ; preds = %entry.do_exit.Clone
  store i32 1, i32* @do_exit.in_exit, align 4
  %52 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone = icmp ne i8* %52, null
  br i1 %cmp.do_exit.Clone, label %if.then1.do_exit.Clone, label %if.end2.do_exit.Clone

if.then1.do_exit.Clone:                           ; preds = %if.end.do_exit.Clone
  %53 = load i8*, i8** @env, align 4
  call void @free(i8* %53) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone

if.end2.do_exit.Clone:                            ; preds = %if.then1.do_exit.Clone, %if.end.do_exit.Clone
  %54 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone = icmp ne i8** %54, null
  br i1 %cmp3.do_exit.Clone, label %if.then4.do_exit.Clone, label %if.end5.do_exit.Clone

if.then4.do_exit.Clone:                           ; preds = %if.end2.do_exit.Clone
  %55 = load i8**, i8*** @args, align 4
  %56 = bitcast i8** %55 to i8*
  call void @free(i8* %56) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone

if.end5.do_exit.Clone:                            ; preds = %if.then4.do_exit.Clone, %if.end2.do_exit.Clone
  %57 = load i32, i32* %exitcode.addr.do_exit.Clone, align 4
  call void @exit(i32 %57) #7
  unreachable

return.do_exit.Clone:                             ; No predecessors!
  br label %if.end.abort_gzip.Clone11.Split

if.end.abort_gzip.Clone11.Split:                  ; preds = %return.do_exit.Clone
  br label %entry.error.Clone.Split

entry.error.Clone.Split:                          ; preds = %if.end.abort_gzip.Clone11.Split
  br label %if.then27.Split

if.then27.Split:                                  ; preds = %entry.error.Clone.Split
  br label %if.end28

if.end28:                                         ; preds = %if.then27.Split, %if.end24
  %58 = load i8**, i8*** %oargv, align 4
  %incdec.ptr29 = getelementptr inbounds i8*, i8** %58, i32 1
  store i8** %incdec.ptr29, i8*** %oargv, align 4
  %59 = load i8*, i8** %58, align 4
  %60 = load i8**, i8*** %nargv, align 4
  %incdec.ptr30 = getelementptr inbounds i8*, i8** %60, i32 1
  store i8** %incdec.ptr30, i8*** %nargv, align 4
  store i8* %59, i8** %60, align 4
  %61 = load i8*, i8** %env.addr, align 4
  store i8* %61, i8** %p, align 4
  br label %for.cond31

for.cond31:                                       ; preds = %for.inc40, %if.end28
  %62 = load i32, i32* %nargc, align 4
  %cmp32 = icmp sgt i32 %62, 0
  br i1 %cmp32, label %for.body34, label %for.end42

for.body34:                                       ; preds = %for.cond31
  %63 = load i8*, i8** %p, align 4
  %call35 = call i32 @strspn(i8* %63, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @"??_C@_02OJDBNLEE@?5?7?$AA@", i32 0, i32 0))
  %64 = load i8*, i8** %p, align 4
  %add.ptr36 = getelementptr inbounds i8, i8* %64, i32 %call35
  store i8* %add.ptr36, i8** %p, align 4
  %65 = load i8*, i8** %p, align 4
  %66 = load i8**, i8*** %nargv, align 4
  %incdec.ptr37 = getelementptr inbounds i8*, i8** %66, i32 1
  store i8** %incdec.ptr37, i8*** %nargv, align 4
  store i8* %65, i8** %66, align 4
  br label %CallOutFuncBB

CallOutFuncBB:                                    ; preds = %for.body34
  call void @while.cond.OutLineFunc.55(i8** %p)
  %67 = getelementptr inbounds %Struct.RetValue.43, %Struct.RetValue.43* @Struct.RetValue.54, i32 0, i32 0
  %68 = load i8**, i8*** %67, align 4
  %69 = load i8*, i8** %68, align 4
  store i8* %69, i8** %p
  br label %for.inc40

for.inc40:                                        ; preds = %CallOutFuncBB
  %70 = load i32, i32* %nargc, align 4
  %dec41 = add nsw i32 %70, -1
  store i32 %dec41, i32* %nargc, align 4
  br label %for.cond31

for.end42:                                        ; preds = %for.cond31
  br label %while.cond43

while.cond43:                                     ; preds = %while.body46, %for.end42
  %71 = load i32, i32* %oargc, align 4
  %dec44 = add nsw i32 %71, -1
  store i32 %dec44, i32* %oargc, align 4
  %tobool45 = icmp ne i32 %71, 0
  br i1 %tobool45, label %while.body46, label %while.end49

while.body46:                                     ; preds = %while.cond43
  %72 = load i8**, i8*** %oargv, align 4
  %incdec.ptr47 = getelementptr inbounds i8*, i8** %72, i32 1
  store i8** %incdec.ptr47, i8*** %oargv, align 4
  %73 = load i8*, i8** %72, align 4
  %74 = load i8**, i8*** %nargv, align 4
  %incdec.ptr48 = getelementptr inbounds i8*, i8** %74, i32 1
  store i8** %incdec.ptr48, i8*** %nargv, align 4
  store i8* %73, i8** %74, align 4
  br label %while.cond43

while.end49:                                      ; preds = %while.cond43
  %75 = load i8**, i8*** %nargv, align 4
  store i8* null, i8** %75, align 4
  %76 = load i8*, i8** %env.addr, align 4
  store i8* %76, i8** %retval, align 4
  br label %return

return:                                           ; preds = %while.end49, %if.then16, %if.then
  %77 = load i8*, i8** %retval, align 4
  ret i8* %77
}

declare dso_local i32 @strlen(i8*) #3

; Function Attrs: noinline optnone sspstrong
define dso_local i8* @xmalloc(i32 %size) #1 {
entry:
  %size.addr = alloca i32, align 4
  %cp = alloca i8*, align 4
  store i32 %size, i32* %size.addr, align 4
  %0 = load i32, i32* %size.addr, align 4
  %call = call noalias i8* @malloc(i32 %0) #2
  store i8* %call, i8** %cp, align 4
  %1 = load i8*, i8** %cp, align 4
  %cmp = icmp eq i8* %1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %entry.error.Clone

entry.error.Clone:                                ; preds = %if.then
  %m.addr.error.Clone = alloca i8*, align 4
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @"??_C@_0O@BNNCBLEN@out?5of?5memory?$AA@", i32 0, i32 0), i8** %m.addr.error.Clone, align 4
  %2 = load i8*, i8** %m.addr.error.Clone, align 4
  %3 = load i8*, i8** @progname, align 4
  %call.error.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx.error.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.error.Clone, i32 2
  %call1.error.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.error.Clone, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @"??_C@_0N@ODCEBLNH@?6?$CFs?3?5?$CFs?3?5?$CFs?6?$AA@", i32 0, i32 0), i8* %3, i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0), i8* %2)
  br label %entry.abort_gzip.Clone

entry.abort_gzip.Clone:                           ; preds = %entry.error.Clone
  %4 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone = icmp ne i32 %4, 0
  br i1 %tobool.abort_gzip.Clone, label %if.then.abort_gzip.Clone, label %if.end.abort_gzip.Clone

if.then.abort_gzip.Clone:                         ; preds = %entry.abort_gzip.Clone
  %5 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %5)
  %call1.abort_gzip.Clone = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone

if.end.abort_gzip.Clone:                          ; preds = %if.then.abort_gzip.Clone, %entry.abort_gzip.Clone
  br label %entry.do_exit.Clone

entry.do_exit.Clone:                              ; preds = %if.end.abort_gzip.Clone
  %exitcode.addr.do_exit.Clone = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone, align 4
  %6 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone = icmp ne i32 %6, 0
  br i1 %tobool.do_exit.Clone, label %if.then.do_exit.Clone, label %if.end.do_exit.Clone

if.then.do_exit.Clone:                            ; preds = %entry.do_exit.Clone
  %7 = load i32, i32* %exitcode.addr.do_exit.Clone, align 4
  call void @exit(i32 %7) #7
  unreachable

if.end.do_exit.Clone:                             ; preds = %entry.do_exit.Clone
  store i32 1, i32* @do_exit.in_exit, align 4
  %8 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone = icmp ne i8* %8, null
  br i1 %cmp.do_exit.Clone, label %if.then1.do_exit.Clone, label %if.end2.do_exit.Clone

if.then1.do_exit.Clone:                           ; preds = %if.end.do_exit.Clone
  %9 = load i8*, i8** @env, align 4
  call void @free(i8* %9) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone

if.end2.do_exit.Clone:                            ; preds = %if.then1.do_exit.Clone, %if.end.do_exit.Clone
  %10 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone = icmp ne i8** %10, null
  br i1 %cmp3.do_exit.Clone, label %if.then4.do_exit.Clone, label %if.end5.do_exit.Clone

if.then4.do_exit.Clone:                           ; preds = %if.end2.do_exit.Clone
  %11 = load i8**, i8*** @args, align 4
  %12 = bitcast i8** %11 to i8*
  call void @free(i8* %12) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone

if.end5.do_exit.Clone:                            ; preds = %if.then4.do_exit.Clone, %if.end2.do_exit.Clone
  %13 = load i32, i32* %exitcode.addr.do_exit.Clone, align 4
  call void @exit(i32 %13) #7
  unreachable

return.do_exit.Clone:                             ; No predecessors!
  br label %if.end.abort_gzip.Clone.Split

if.end.abort_gzip.Clone.Split:                    ; preds = %return.do_exit.Clone
  br label %entry.error.Clone.Split

entry.error.Clone.Split:                          ; preds = %if.end.abort_gzip.Clone.Split
  br label %if.then.Split

if.then.Split:                                    ; preds = %entry.error.Clone.Split
  br label %if.end

if.end:                                           ; preds = %if.then.Split, %entry
  %14 = load i8*, i8** %cp, align 4
  ret i8* %14
}

declare dso_local i8* @strcpy(i8*, i8*) #3

declare dllimport i32 @strspn(i8*, i8*) #3

declare dllimport i32 @strcspn(i8*, i8*) #3

; Function Attrs: argmemonly nounwind
declare dllimport noalias i8* @calloc(i32, i32) #5

; Function Attrs: noinline optnone sspstrong
define dso_local void @warn(i8* %a, i8* %b) #1 {
entry:
  %b.addr = alloca i8*, align 4
  %a.addr = alloca i8*, align 4
  store i8* %b, i8** %b.addr, align 4
  store i8* %a, i8** %a.addr, align 4
  %0 = load i32, i32* @quiet, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %b.addr, align 4
  %2 = load i8*, i8** %a.addr, align 4
  %3 = load i8*, i8** @progname, align 4
  %call = call %struct._iobuf* @__iob_func()
  %arrayidx = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call, i32 2
  %call1 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @"??_C@_0BH@KEMKLMGN@?$CFs?3?5?$CFs?3?5warning?3?5?$CFs?$CFs?6?$AA@", i32 0, i32 0), i8* %3, i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0), i8* %2, i8* %1)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %4 = load i32, i32* @exit_code, align 4
  %cmp = icmp eq i32 %4, 0
  br i1 %cmp, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  store i32 2, i32* @exit_code, align 4
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %if.end
  ret void
}

; Function Attrs: noinline optnone sspstrong
define dso_local void @display_ratio(i32 %num, i32 %den, %struct._iobuf* %file) #1 {
entry:
  %file.addr = alloca %struct._iobuf*, align 4
  %den.addr = alloca i32, align 4
  %num.addr = alloca i32, align 4
  %ratio = alloca i32, align 4
  store %struct._iobuf* %file, %struct._iobuf** %file.addr, align 4
  store i32 %den, i32* %den.addr, align 4
  store i32 %num, i32* %num.addr, align 4
  %0 = load i32, i32* %den.addr, align 4
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %CallOutFuncBB

if.then:                                          ; preds = %entry
  store i32 0, i32* %ratio, align 4
  br label %if.end6

CallOutFuncBB:                                    ; preds = %entry
  call void @if.else.OutLineFunc.57(i32* %den.addr, i32* %num.addr, i32* %ratio)
  %1 = getelementptr inbounds %Struct.RetValue.44, %Struct.RetValue.44* @Struct.RetValue.56, i32 0, i32 0
  %2 = load i32*, i32** %1, align 4
  %3 = load i32, i32* %2, align 4
  store i32 %3, i32* %ratio
  br label %if.end6

if.end6:                                          ; preds = %CallOutFuncBB, %if.then
  %4 = load i32, i32* %ratio, align 4
  %cmp7 = icmp slt i32 %4, 0
  br i1 %cmp7, label %if.then8, label %if.else9

if.then8:                                         ; preds = %if.end6
  %5 = load %struct._iobuf*, %struct._iobuf** %file.addr, align 4
  %call = call i32 @putc(i32 45, %struct._iobuf* %5)
  %6 = load i32, i32* %ratio, align 4
  %sub = sub nsw i32 0, %6
  store i32 %sub, i32* %ratio, align 4
  br label %if.end11

if.else9:                                         ; preds = %if.end6
  %7 = load %struct._iobuf*, %struct._iobuf** %file.addr, align 4
  %call10 = call i32 @putc(i32 32, %struct._iobuf* %7)
  br label %if.end11

if.end11:                                         ; preds = %if.else9, %if.then8
  %8 = load i32, i32* %ratio, align 4
  %rem = srem i32 %8, 10
  %9 = load i32, i32* %ratio, align 4
  %div12 = sdiv i32 %9, 10
  %10 = load %struct._iobuf*, %struct._iobuf** %file.addr, align 4
  %call13 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %10, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @"??_C@_0M@DOEGEPFA@?$CF2ld?4?$CF1ld?$CF?$CF?$AA@", i32 0, i32 0), i32 %div12, i32 %rem)
  ret void
}

declare dllimport i32 @putc(i32, %struct._iobuf*) #3

; Function Attrs: noinline optnone sspstrong
define dso_local i32 @zip(i32 %in, i32 %out) #1 {
entry:
  %out.addr = alloca i32, align 4
  %in.addr = alloca i32, align 4
  %flags = alloca i8, align 1
  %attr = alloca i16, align 2
  %deflate_flags = alloca i16, align 2
  %p = alloca i8*, align 4
  store i32 %out, i32* %out.addr, align 4
  store i32 %in, i32* %in.addr, align 4
  store i8 0, i8* %flags, align 1
  store i16 0, i16* %attr, align 2
  store i16 0, i16* %deflate_flags, align 2
  %0 = load i32, i32* %in.addr, align 4
  store i32 %0, i32* @ifd, align 4
  %1 = load i32, i32* %out.addr, align 4
  store i32 %1, i32* @ofd, align 4
  store i32 0, i32* @outcnt, align 4
  store i32 8, i32* @method, align 4
  %2 = load i8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @"??_C@_02MPLDIDCA@?$BP?$IL?$AA@", i32 0, i32 0), align 1
  %3 = load i32, i32* @outcnt, align 4
  %inc = add i32 %3, 1
  store i32 %inc, i32* @outcnt, align 4
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i32 0, i32 %3
  store i8 %2, i8* %arrayidx, align 1
  %4 = load i32, i32* @outcnt, align 4
  %cmp = icmp eq i32 %4, 16384
  %RetValuePtr = alloca i8*, align 4
  %RetValuePtr379 = alloca i32, align 4
  %RetValuePtr410 = alloca i32, align 4
  %RetValuePtr441 = alloca i32, align 4
  %RetValuePtr472 = alloca i32, align 4
  %RetValuePtr503 = alloca i32, align 4
  %RetValuePtr534 = alloca i32, align 4
  %RetValuePtr565 = alloca i32, align 4
  %RetValuePtr596 = alloca i32, align 4
  %RetValuePtr627 = alloca i32, align 4
  %RetValuePtr658 = alloca i32, align 4
  %RetValuePtr689 = alloca i32, align 4
  %RetValuePtr720 = alloca i32, align 4
  %RetValuePtr751 = alloca i32, align 4
  %RetValuePtr782 = alloca i32, align 4
  %RetValuePtr813 = alloca i32, align 4
  %RetValuePtr844 = alloca i32, align 4
  %RetValuePtr875 = alloca i32, align 4
  %RetValuePtr906 = alloca i32, align 4
  %RetValuePtr937 = alloca i32, align 4
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %entry.flush_outbuf.Clone103

entry.flush_outbuf.Clone103:                      ; preds = %if.then
  %5 = load i32, i32* @outcnt, align 4
  %cmp.flush_outbuf.Clone104 = icmp eq i32 %5, 0
  br i1 %cmp.flush_outbuf.Clone104, label %if.then.flush_outbuf.Clone105, label %if.end.flush_outbuf.Clone106

if.then.flush_outbuf.Clone105:                    ; preds = %entry.flush_outbuf.Clone103
  br label %return.flush_outbuf.Clone108

if.end.flush_outbuf.Clone106:                     ; preds = %entry.flush_outbuf.Clone103
  %6 = load i32, i32* @outcnt, align 4
  %7 = load i32, i32* @ofd, align 4
  br label %entry.write_buf.Clone

entry.write_buf.Clone:                            ; preds = %if.end.flush_outbuf.Clone106
  %cnt.addr.write_buf.Clone = alloca i32, align 4
  %buf.addr.write_buf.Clone = alloca i8*, align 4
  %fd.addr.write_buf.Clone = alloca i32, align 4
  %n.write_buf.Clone = alloca i32, align 4
  store i32 %6, i32* %cnt.addr.write_buf.Clone, align 4
  store i8* getelementptr inbounds ([18432 x i8], [18432 x i8]* @outbuf, i32 0, i32 0), i8** %buf.addr.write_buf.Clone, align 4
  store i32 %7, i32* %fd.addr.write_buf.Clone, align 4
  br label %while.cond.write_buf.Clone

while.cond.write_buf.Clone:                       ; preds = %if.end.write_buf.Clone, %entry.write_buf.Clone
  %8 = load i32, i32* %cnt.addr.write_buf.Clone, align 4
  %9 = load i8*, i8** %buf.addr.write_buf.Clone, align 4
  %10 = load i32, i32* %fd.addr.write_buf.Clone, align 4
  br label %entry.spec_write.Clone908

entry.spec_write.Clone908:                        ; preds = %while.cond.write_buf.Clone
  %size.addr.spec_write.Clone909 = alloca i32, align 4
  %buf.addr.spec_write.Clone910 = alloca i8*, align 4
  %fd.addr.spec_write.Clone911 = alloca i32, align 4
  store i32 %8, i32* %size.addr.spec_write.Clone909, align 4
  store i8* %9, i8** %buf.addr.spec_write.Clone910, align 4
  store i32 %10, i32* %fd.addr.spec_write.Clone911, align 4
  %11 = load i32, i32* @dbglvl, align 4
  %cmp.spec_write.Clone912 = icmp slt i32 4, %11
  br i1 %cmp.spec_write.Clone912, label %if.then.spec_write.Clone913, label %if.end.spec_write.Clone915

if.then.spec_write.Clone913:                      ; preds = %entry.spec_write.Clone908
  %12 = load i32, i32* %size.addr.spec_write.Clone909, align 4
  %13 = load i8*, i8** %buf.addr.spec_write.Clone910, align 4
  %14 = load i32, i32* %fd.addr.spec_write.Clone911, align 4
  %call.spec_write.Clone914 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @"??_C@_0BK@GKFGHPHN@spec_write?3?5?$CFd?0?5?$CFx?0?5?$CFd?5?$DN?5?$AA@", i32 0, i32 0), i32 %14, i8* %13, i32 %12)
  br label %if.end.spec_write.Clone915

if.end.spec_write.Clone915:                       ; preds = %if.then.spec_write.Clone913, %entry.spec_write.Clone908
  %15 = load i32, i32* %fd.addr.spec_write.Clone911, align 4
  %cmp1.spec_write.Clone916 = icmp sgt i32 %15, 3
  br i1 %cmp1.spec_write.Clone916, label %if.then2.spec_write.Clone917, label %if.end5.spec_write.Clone921

if.then2.spec_write.Clone917:                     ; preds = %if.end.spec_write.Clone915
  %16 = load i32, i32* %fd.addr.spec_write.Clone911, align 4
  %call3.spec_write.Clone918 = call %struct._iobuf* @__iob_func()
  %arrayidx.spec_write.Clone919 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.spec_write.Clone918, i32 2
  %call4.spec_write.Clone920 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.spec_write.Clone919, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"??_C@_0CD@NANFEFEM@spec_write?3?5fd?$DN?$CFd?0?5?$DO?5MAX_SPEC_FD@", i32 0, i32 0), i32 %16)
  call void @exit(i32 1) #7
  unreachable

if.end5.spec_write.Clone921:                      ; preds = %if.end.spec_write.Clone915
  %17 = load i32, i32* %fd.addr.spec_write.Clone911, align 4
  %arrayidx6.spec_write.Clone922 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %17
  %buf7.spec_write.Clone923 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx6.spec_write.Clone922, i32 0, i32 3
  %18 = load i8*, i8** %buf7.spec_write.Clone923, align 4
  %19 = load i32, i32* %fd.addr.spec_write.Clone911, align 4
  %arrayidx8.spec_write.Clone924 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %19
  %pos.spec_write.Clone925 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx8.spec_write.Clone924, i32 0, i32 2
  %20 = load i32, i32* %pos.spec_write.Clone925, align 4
  %arrayidx9.spec_write.Clone926 = getelementptr inbounds i8, i8* %18, i32 %20
  %21 = load i8*, i8** %buf.addr.spec_write.Clone910, align 4
  %22 = load i32, i32* %size.addr.spec_write.Clone909, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %arrayidx9.spec_write.Clone926, i8* align 1 %21, i32 %22, i1 false)
  %23 = load i32, i32* %size.addr.spec_write.Clone909, align 4
  %24 = load i32, i32* %fd.addr.spec_write.Clone911, align 4
  %arrayidx10.spec_write.Clone927 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %24
  %len.spec_write.Clone928 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx10.spec_write.Clone927, i32 0, i32 1
  %25 = load i32, i32* %len.spec_write.Clone928, align 4
  %add.spec_write.Clone929 = add nsw i32 %25, %23
  store i32 %add.spec_write.Clone929, i32* %len.spec_write.Clone928, align 4
  %26 = load i32, i32* %size.addr.spec_write.Clone909, align 4
  %27 = load i32, i32* %fd.addr.spec_write.Clone911, align 4
  %arrayidx11.spec_write.Clone930 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %27
  %pos12.spec_write.Clone931 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx11.spec_write.Clone930, i32 0, i32 2
  %28 = load i32, i32* %pos12.spec_write.Clone931, align 4
  %add13.spec_write.Clone932 = add nsw i32 %28, %26
  store i32 %add13.spec_write.Clone932, i32* %pos12.spec_write.Clone931, align 4
  %29 = load i32, i32* @dbglvl, align 4
  %cmp14.spec_write.Clone933 = icmp slt i32 4, %29
  br i1 %cmp14.spec_write.Clone933, label %if.then15.spec_write.Clone934, label %if.end17.spec_write.Clone936

if.then15.spec_write.Clone934:                    ; preds = %if.end5.spec_write.Clone921
  %30 = load i32, i32* %size.addr.spec_write.Clone909, align 4
  %call16.spec_write.Clone935 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"??_C@_03PMGGPEJJ@?$CFd?6?$AA@", i32 0, i32 0), i32 %30)
  br label %if.end17.spec_write.Clone936

if.end17.spec_write.Clone936:                     ; preds = %if.then15.spec_write.Clone934, %if.end5.spec_write.Clone921
  %31 = load i32, i32* %size.addr.spec_write.Clone909, align 4
  store i32 %31, i32* %RetValuePtr937
  br label %while.cond.write_buf.Clone.Split

while.cond.write_buf.Clone.Split:                 ; preds = %if.end17.spec_write.Clone936
  %RetValue938 = load i32, i32* %RetValuePtr937
  store i32 %RetValue938, i32* %n.write_buf.Clone, align 4
  %32 = load i32, i32* %cnt.addr.write_buf.Clone, align 4
  %cmp.write_buf.Clone = icmp ne i32 %RetValue938, %32
  br i1 %cmp.write_buf.Clone, label %while.body.write_buf.Clone, label %while.end.write_buf.Clone

while.body.write_buf.Clone:                       ; preds = %while.cond.write_buf.Clone.Split
  %33 = load i32, i32* %n.write_buf.Clone, align 4
  %cmp1.write_buf.Clone = icmp eq i32 %33, -1
  br i1 %cmp1.write_buf.Clone, label %if.then.write_buf.Clone, label %if.end.write_buf.Clone

if.then.write_buf.Clone:                          ; preds = %while.body.write_buf.Clone
  call void @write_error()
  br label %if.end.write_buf.Clone

if.end.write_buf.Clone:                           ; preds = %if.then.write_buf.Clone, %while.body.write_buf.Clone
  %34 = load i32, i32* %n.write_buf.Clone, align 4
  %35 = load i32, i32* %cnt.addr.write_buf.Clone, align 4
  %sub.write_buf.Clone = sub i32 %35, %34
  store i32 %sub.write_buf.Clone, i32* %cnt.addr.write_buf.Clone, align 4
  %36 = load i8*, i8** %buf.addr.write_buf.Clone, align 4
  %37 = load i32, i32* %n.write_buf.Clone, align 4
  %add.ptr.write_buf.Clone = getelementptr inbounds i8, i8* %36, i32 %37
  store i8* %add.ptr.write_buf.Clone, i8** %buf.addr.write_buf.Clone, align 4
  br label %while.cond.write_buf.Clone

while.end.write_buf.Clone:                        ; preds = %while.cond.write_buf.Clone.Split
  br label %if.end.flush_outbuf.Clone106.Split

if.end.flush_outbuf.Clone106.Split:               ; preds = %while.end.write_buf.Clone
  %38 = load i32, i32* @outcnt, align 4
  %39 = load i32, i32* @bytes_out, align 4
  %add.flush_outbuf.Clone107 = add i32 %39, %38
  store i32 %add.flush_outbuf.Clone107, i32* @bytes_out, align 4
  store i32 0, i32* @outcnt, align 4
  br label %return.flush_outbuf.Clone108

return.flush_outbuf.Clone108:                     ; preds = %if.end.flush_outbuf.Clone106.Split, %if.then.flush_outbuf.Clone105
  br label %if.then.Split

if.then.Split:                                    ; preds = %return.flush_outbuf.Clone108
  br label %if.end

if.end:                                           ; preds = %if.then.Split, %entry
  %40 = load i8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @"??_C@_02MPLDIDCA@?$BP?$IL?$AA@", i32 0, i32 1), align 1
  %41 = load i32, i32* @outcnt, align 4
  %inc1 = add i32 %41, 1
  store i32 %inc1, i32* @outcnt, align 4
  %arrayidx2 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i32 0, i32 %41
  store i8 %40, i8* %arrayidx2, align 1
  %42 = load i32, i32* @outcnt, align 4
  %cmp3 = icmp eq i32 %42, 16384
  br i1 %cmp3, label %if.then4, label %if.end5

if.then4:                                         ; preds = %if.end
  br label %entry.flush_outbuf.Clone97

entry.flush_outbuf.Clone97:                       ; preds = %if.then4
  %43 = load i32, i32* @outcnt, align 4
  %cmp.flush_outbuf.Clone98 = icmp eq i32 %43, 0
  br i1 %cmp.flush_outbuf.Clone98, label %if.then.flush_outbuf.Clone99, label %if.end.flush_outbuf.Clone100

if.then.flush_outbuf.Clone99:                     ; preds = %entry.flush_outbuf.Clone97
  br label %return.flush_outbuf.Clone102

if.end.flush_outbuf.Clone100:                     ; preds = %entry.flush_outbuf.Clone97
  %44 = load i32, i32* @outcnt, align 4
  %45 = load i32, i32* @ofd, align 4
  br label %entry.write_buf.Clone109

entry.write_buf.Clone109:                         ; preds = %if.end.flush_outbuf.Clone100
  %cnt.addr.write_buf.Clone110 = alloca i32, align 4
  %buf.addr.write_buf.Clone111 = alloca i8*, align 4
  %fd.addr.write_buf.Clone112 = alloca i32, align 4
  %n.write_buf.Clone113 = alloca i32, align 4
  store i32 %44, i32* %cnt.addr.write_buf.Clone110, align 4
  store i8* getelementptr inbounds ([18432 x i8], [18432 x i8]* @outbuf, i32 0, i32 0), i8** %buf.addr.write_buf.Clone111, align 4
  store i32 %45, i32* %fd.addr.write_buf.Clone112, align 4
  br label %while.cond.write_buf.Clone114

while.cond.write_buf.Clone114:                    ; preds = %if.end.write_buf.Clone120, %entry.write_buf.Clone109
  %46 = load i32, i32* %cnt.addr.write_buf.Clone110, align 4
  %47 = load i8*, i8** %buf.addr.write_buf.Clone111, align 4
  %48 = load i32, i32* %fd.addr.write_buf.Clone112, align 4
  br label %entry.spec_write.Clone877

entry.spec_write.Clone877:                        ; preds = %while.cond.write_buf.Clone114
  %size.addr.spec_write.Clone878 = alloca i32, align 4
  %buf.addr.spec_write.Clone879 = alloca i8*, align 4
  %fd.addr.spec_write.Clone880 = alloca i32, align 4
  store i32 %46, i32* %size.addr.spec_write.Clone878, align 4
  store i8* %47, i8** %buf.addr.spec_write.Clone879, align 4
  store i32 %48, i32* %fd.addr.spec_write.Clone880, align 4
  %49 = load i32, i32* @dbglvl, align 4
  %cmp.spec_write.Clone881 = icmp slt i32 4, %49
  br i1 %cmp.spec_write.Clone881, label %if.then.spec_write.Clone882, label %if.end.spec_write.Clone884

if.then.spec_write.Clone882:                      ; preds = %entry.spec_write.Clone877
  %50 = load i32, i32* %size.addr.spec_write.Clone878, align 4
  %51 = load i8*, i8** %buf.addr.spec_write.Clone879, align 4
  %52 = load i32, i32* %fd.addr.spec_write.Clone880, align 4
  %call.spec_write.Clone883 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @"??_C@_0BK@GKFGHPHN@spec_write?3?5?$CFd?0?5?$CFx?0?5?$CFd?5?$DN?5?$AA@", i32 0, i32 0), i32 %52, i8* %51, i32 %50)
  br label %if.end.spec_write.Clone884

if.end.spec_write.Clone884:                       ; preds = %if.then.spec_write.Clone882, %entry.spec_write.Clone877
  %53 = load i32, i32* %fd.addr.spec_write.Clone880, align 4
  %cmp1.spec_write.Clone885 = icmp sgt i32 %53, 3
  br i1 %cmp1.spec_write.Clone885, label %if.then2.spec_write.Clone886, label %if.end5.spec_write.Clone890

if.then2.spec_write.Clone886:                     ; preds = %if.end.spec_write.Clone884
  %54 = load i32, i32* %fd.addr.spec_write.Clone880, align 4
  %call3.spec_write.Clone887 = call %struct._iobuf* @__iob_func()
  %arrayidx.spec_write.Clone888 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.spec_write.Clone887, i32 2
  %call4.spec_write.Clone889 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.spec_write.Clone888, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"??_C@_0CD@NANFEFEM@spec_write?3?5fd?$DN?$CFd?0?5?$DO?5MAX_SPEC_FD@", i32 0, i32 0), i32 %54)
  call void @exit(i32 1) #7
  unreachable

if.end5.spec_write.Clone890:                      ; preds = %if.end.spec_write.Clone884
  %55 = load i32, i32* %fd.addr.spec_write.Clone880, align 4
  %arrayidx6.spec_write.Clone891 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %55
  %buf7.spec_write.Clone892 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx6.spec_write.Clone891, i32 0, i32 3
  %56 = load i8*, i8** %buf7.spec_write.Clone892, align 4
  %57 = load i32, i32* %fd.addr.spec_write.Clone880, align 4
  %arrayidx8.spec_write.Clone893 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %57
  %pos.spec_write.Clone894 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx8.spec_write.Clone893, i32 0, i32 2
  %58 = load i32, i32* %pos.spec_write.Clone894, align 4
  %arrayidx9.spec_write.Clone895 = getelementptr inbounds i8, i8* %56, i32 %58
  %59 = load i8*, i8** %buf.addr.spec_write.Clone879, align 4
  %60 = load i32, i32* %size.addr.spec_write.Clone878, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %arrayidx9.spec_write.Clone895, i8* align 1 %59, i32 %60, i1 false)
  %61 = load i32, i32* %size.addr.spec_write.Clone878, align 4
  %62 = load i32, i32* %fd.addr.spec_write.Clone880, align 4
  %arrayidx10.spec_write.Clone896 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %62
  %len.spec_write.Clone897 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx10.spec_write.Clone896, i32 0, i32 1
  %63 = load i32, i32* %len.spec_write.Clone897, align 4
  %add.spec_write.Clone898 = add nsw i32 %63, %61
  store i32 %add.spec_write.Clone898, i32* %len.spec_write.Clone897, align 4
  %64 = load i32, i32* %size.addr.spec_write.Clone878, align 4
  %65 = load i32, i32* %fd.addr.spec_write.Clone880, align 4
  %arrayidx11.spec_write.Clone899 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %65
  %pos12.spec_write.Clone900 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx11.spec_write.Clone899, i32 0, i32 2
  %66 = load i32, i32* %pos12.spec_write.Clone900, align 4
  %add13.spec_write.Clone901 = add nsw i32 %66, %64
  store i32 %add13.spec_write.Clone901, i32* %pos12.spec_write.Clone900, align 4
  %67 = load i32, i32* @dbglvl, align 4
  %cmp14.spec_write.Clone902 = icmp slt i32 4, %67
  br i1 %cmp14.spec_write.Clone902, label %if.then15.spec_write.Clone903, label %if.end17.spec_write.Clone905

if.then15.spec_write.Clone903:                    ; preds = %if.end5.spec_write.Clone890
  %68 = load i32, i32* %size.addr.spec_write.Clone878, align 4
  %call16.spec_write.Clone904 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"??_C@_03PMGGPEJJ@?$CFd?6?$AA@", i32 0, i32 0), i32 %68)
  br label %if.end17.spec_write.Clone905

if.end17.spec_write.Clone905:                     ; preds = %if.then15.spec_write.Clone903, %if.end5.spec_write.Clone890
  %69 = load i32, i32* %size.addr.spec_write.Clone878, align 4
  store i32 %69, i32* %RetValuePtr906
  br label %while.cond.write_buf.Clone114.Split

while.cond.write_buf.Clone114.Split:              ; preds = %if.end17.spec_write.Clone905
  %RetValue907 = load i32, i32* %RetValuePtr906
  store i32 %RetValue907, i32* %n.write_buf.Clone113, align 4
  %70 = load i32, i32* %cnt.addr.write_buf.Clone110, align 4
  %cmp.write_buf.Clone116 = icmp ne i32 %RetValue907, %70
  br i1 %cmp.write_buf.Clone116, label %while.body.write_buf.Clone117, label %while.end.write_buf.Clone123

while.body.write_buf.Clone117:                    ; preds = %while.cond.write_buf.Clone114.Split
  %71 = load i32, i32* %n.write_buf.Clone113, align 4
  %cmp1.write_buf.Clone118 = icmp eq i32 %71, -1
  br i1 %cmp1.write_buf.Clone118, label %if.then.write_buf.Clone119, label %if.end.write_buf.Clone120

if.then.write_buf.Clone119:                       ; preds = %while.body.write_buf.Clone117
  call void @write_error()
  br label %if.end.write_buf.Clone120

if.end.write_buf.Clone120:                        ; preds = %if.then.write_buf.Clone119, %while.body.write_buf.Clone117
  %72 = load i32, i32* %n.write_buf.Clone113, align 4
  %73 = load i32, i32* %cnt.addr.write_buf.Clone110, align 4
  %sub.write_buf.Clone121 = sub i32 %73, %72
  store i32 %sub.write_buf.Clone121, i32* %cnt.addr.write_buf.Clone110, align 4
  %74 = load i8*, i8** %buf.addr.write_buf.Clone111, align 4
  %75 = load i32, i32* %n.write_buf.Clone113, align 4
  %add.ptr.write_buf.Clone122 = getelementptr inbounds i8, i8* %74, i32 %75
  store i8* %add.ptr.write_buf.Clone122, i8** %buf.addr.write_buf.Clone111, align 4
  br label %while.cond.write_buf.Clone114

while.end.write_buf.Clone123:                     ; preds = %while.cond.write_buf.Clone114.Split
  br label %if.end.flush_outbuf.Clone100.Split

if.end.flush_outbuf.Clone100.Split:               ; preds = %while.end.write_buf.Clone123
  %76 = load i32, i32* @outcnt, align 4
  %77 = load i32, i32* @bytes_out, align 4
  %add.flush_outbuf.Clone101 = add i32 %77, %76
  store i32 %add.flush_outbuf.Clone101, i32* @bytes_out, align 4
  store i32 0, i32* @outcnt, align 4
  br label %return.flush_outbuf.Clone102

return.flush_outbuf.Clone102:                     ; preds = %if.end.flush_outbuf.Clone100.Split, %if.then.flush_outbuf.Clone99
  br label %if.then4.Split

if.then4.Split:                                   ; preds = %return.flush_outbuf.Clone102
  br label %if.end5

if.end5:                                          ; preds = %if.then4.Split, %if.end
  %78 = load i32, i32* @outcnt, align 4
  %inc6 = add i32 %78, 1
  store i32 %inc6, i32* @outcnt, align 4
  %arrayidx7 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i32 0, i32 %78
  store i8 8, i8* %arrayidx7, align 1
  %79 = load i32, i32* @outcnt, align 4
  %cmp8 = icmp eq i32 %79, 16384
  br i1 %cmp8, label %if.then9, label %if.end10

if.then9:                                         ; preds = %if.end5
  br label %entry.flush_outbuf.Clone91

entry.flush_outbuf.Clone91:                       ; preds = %if.then9
  %80 = load i32, i32* @outcnt, align 4
  %cmp.flush_outbuf.Clone92 = icmp eq i32 %80, 0
  br i1 %cmp.flush_outbuf.Clone92, label %if.then.flush_outbuf.Clone93, label %if.end.flush_outbuf.Clone94

if.then.flush_outbuf.Clone93:                     ; preds = %entry.flush_outbuf.Clone91
  br label %return.flush_outbuf.Clone96

if.end.flush_outbuf.Clone94:                      ; preds = %entry.flush_outbuf.Clone91
  %81 = load i32, i32* @outcnt, align 4
  %82 = load i32, i32* @ofd, align 4
  br label %entry.write_buf.Clone124

entry.write_buf.Clone124:                         ; preds = %if.end.flush_outbuf.Clone94
  %cnt.addr.write_buf.Clone125 = alloca i32, align 4
  %buf.addr.write_buf.Clone126 = alloca i8*, align 4
  %fd.addr.write_buf.Clone127 = alloca i32, align 4
  %n.write_buf.Clone128 = alloca i32, align 4
  store i32 %81, i32* %cnt.addr.write_buf.Clone125, align 4
  store i8* getelementptr inbounds ([18432 x i8], [18432 x i8]* @outbuf, i32 0, i32 0), i8** %buf.addr.write_buf.Clone126, align 4
  store i32 %82, i32* %fd.addr.write_buf.Clone127, align 4
  br label %while.cond.write_buf.Clone129

while.cond.write_buf.Clone129:                    ; preds = %if.end.write_buf.Clone135, %entry.write_buf.Clone124
  %83 = load i32, i32* %cnt.addr.write_buf.Clone125, align 4
  %84 = load i8*, i8** %buf.addr.write_buf.Clone126, align 4
  %85 = load i32, i32* %fd.addr.write_buf.Clone127, align 4
  br label %entry.spec_write.Clone846

entry.spec_write.Clone846:                        ; preds = %while.cond.write_buf.Clone129
  %size.addr.spec_write.Clone847 = alloca i32, align 4
  %buf.addr.spec_write.Clone848 = alloca i8*, align 4
  %fd.addr.spec_write.Clone849 = alloca i32, align 4
  store i32 %83, i32* %size.addr.spec_write.Clone847, align 4
  store i8* %84, i8** %buf.addr.spec_write.Clone848, align 4
  store i32 %85, i32* %fd.addr.spec_write.Clone849, align 4
  %86 = load i32, i32* @dbglvl, align 4
  %cmp.spec_write.Clone850 = icmp slt i32 4, %86
  br i1 %cmp.spec_write.Clone850, label %if.then.spec_write.Clone851, label %if.end.spec_write.Clone853

if.then.spec_write.Clone851:                      ; preds = %entry.spec_write.Clone846
  %87 = load i32, i32* %size.addr.spec_write.Clone847, align 4
  %88 = load i8*, i8** %buf.addr.spec_write.Clone848, align 4
  %89 = load i32, i32* %fd.addr.spec_write.Clone849, align 4
  %call.spec_write.Clone852 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @"??_C@_0BK@GKFGHPHN@spec_write?3?5?$CFd?0?5?$CFx?0?5?$CFd?5?$DN?5?$AA@", i32 0, i32 0), i32 %89, i8* %88, i32 %87)
  br label %if.end.spec_write.Clone853

if.end.spec_write.Clone853:                       ; preds = %if.then.spec_write.Clone851, %entry.spec_write.Clone846
  %90 = load i32, i32* %fd.addr.spec_write.Clone849, align 4
  %cmp1.spec_write.Clone854 = icmp sgt i32 %90, 3
  br i1 %cmp1.spec_write.Clone854, label %if.then2.spec_write.Clone855, label %if.end5.spec_write.Clone859

if.then2.spec_write.Clone855:                     ; preds = %if.end.spec_write.Clone853
  %91 = load i32, i32* %fd.addr.spec_write.Clone849, align 4
  %call3.spec_write.Clone856 = call %struct._iobuf* @__iob_func()
  %arrayidx.spec_write.Clone857 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.spec_write.Clone856, i32 2
  %call4.spec_write.Clone858 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.spec_write.Clone857, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"??_C@_0CD@NANFEFEM@spec_write?3?5fd?$DN?$CFd?0?5?$DO?5MAX_SPEC_FD@", i32 0, i32 0), i32 %91)
  call void @exit(i32 1) #7
  unreachable

if.end5.spec_write.Clone859:                      ; preds = %if.end.spec_write.Clone853
  %92 = load i32, i32* %fd.addr.spec_write.Clone849, align 4
  %arrayidx6.spec_write.Clone860 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %92
  %buf7.spec_write.Clone861 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx6.spec_write.Clone860, i32 0, i32 3
  %93 = load i8*, i8** %buf7.spec_write.Clone861, align 4
  %94 = load i32, i32* %fd.addr.spec_write.Clone849, align 4
  %arrayidx8.spec_write.Clone862 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %94
  %pos.spec_write.Clone863 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx8.spec_write.Clone862, i32 0, i32 2
  %95 = load i32, i32* %pos.spec_write.Clone863, align 4
  %arrayidx9.spec_write.Clone864 = getelementptr inbounds i8, i8* %93, i32 %95
  %96 = load i8*, i8** %buf.addr.spec_write.Clone848, align 4
  %97 = load i32, i32* %size.addr.spec_write.Clone847, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %arrayidx9.spec_write.Clone864, i8* align 1 %96, i32 %97, i1 false)
  %98 = load i32, i32* %size.addr.spec_write.Clone847, align 4
  %99 = load i32, i32* %fd.addr.spec_write.Clone849, align 4
  %arrayidx10.spec_write.Clone865 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %99
  %len.spec_write.Clone866 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx10.spec_write.Clone865, i32 0, i32 1
  %100 = load i32, i32* %len.spec_write.Clone866, align 4
  %add.spec_write.Clone867 = add nsw i32 %100, %98
  store i32 %add.spec_write.Clone867, i32* %len.spec_write.Clone866, align 4
  %101 = load i32, i32* %size.addr.spec_write.Clone847, align 4
  %102 = load i32, i32* %fd.addr.spec_write.Clone849, align 4
  %arrayidx11.spec_write.Clone868 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %102
  %pos12.spec_write.Clone869 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx11.spec_write.Clone868, i32 0, i32 2
  %103 = load i32, i32* %pos12.spec_write.Clone869, align 4
  %add13.spec_write.Clone870 = add nsw i32 %103, %101
  store i32 %add13.spec_write.Clone870, i32* %pos12.spec_write.Clone869, align 4
  %104 = load i32, i32* @dbglvl, align 4
  %cmp14.spec_write.Clone871 = icmp slt i32 4, %104
  br i1 %cmp14.spec_write.Clone871, label %if.then15.spec_write.Clone872, label %if.end17.spec_write.Clone874

if.then15.spec_write.Clone872:                    ; preds = %if.end5.spec_write.Clone859
  %105 = load i32, i32* %size.addr.spec_write.Clone847, align 4
  %call16.spec_write.Clone873 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"??_C@_03PMGGPEJJ@?$CFd?6?$AA@", i32 0, i32 0), i32 %105)
  br label %if.end17.spec_write.Clone874

if.end17.spec_write.Clone874:                     ; preds = %if.then15.spec_write.Clone872, %if.end5.spec_write.Clone859
  %106 = load i32, i32* %size.addr.spec_write.Clone847, align 4
  store i32 %106, i32* %RetValuePtr875
  br label %while.cond.write_buf.Clone129.Split

while.cond.write_buf.Clone129.Split:              ; preds = %if.end17.spec_write.Clone874
  %RetValue876 = load i32, i32* %RetValuePtr875
  store i32 %RetValue876, i32* %n.write_buf.Clone128, align 4
  %107 = load i32, i32* %cnt.addr.write_buf.Clone125, align 4
  %cmp.write_buf.Clone131 = icmp ne i32 %RetValue876, %107
  br i1 %cmp.write_buf.Clone131, label %while.body.write_buf.Clone132, label %while.end.write_buf.Clone138

while.body.write_buf.Clone132:                    ; preds = %while.cond.write_buf.Clone129.Split
  %108 = load i32, i32* %n.write_buf.Clone128, align 4
  %cmp1.write_buf.Clone133 = icmp eq i32 %108, -1
  br i1 %cmp1.write_buf.Clone133, label %if.then.write_buf.Clone134, label %if.end.write_buf.Clone135

if.then.write_buf.Clone134:                       ; preds = %while.body.write_buf.Clone132
  call void @write_error()
  br label %if.end.write_buf.Clone135

if.end.write_buf.Clone135:                        ; preds = %if.then.write_buf.Clone134, %while.body.write_buf.Clone132
  %109 = load i32, i32* %n.write_buf.Clone128, align 4
  %110 = load i32, i32* %cnt.addr.write_buf.Clone125, align 4
  %sub.write_buf.Clone136 = sub i32 %110, %109
  store i32 %sub.write_buf.Clone136, i32* %cnt.addr.write_buf.Clone125, align 4
  %111 = load i8*, i8** %buf.addr.write_buf.Clone126, align 4
  %112 = load i32, i32* %n.write_buf.Clone128, align 4
  %add.ptr.write_buf.Clone137 = getelementptr inbounds i8, i8* %111, i32 %112
  store i8* %add.ptr.write_buf.Clone137, i8** %buf.addr.write_buf.Clone126, align 4
  br label %while.cond.write_buf.Clone129

while.end.write_buf.Clone138:                     ; preds = %while.cond.write_buf.Clone129.Split
  br label %if.end.flush_outbuf.Clone94.Split

if.end.flush_outbuf.Clone94.Split:                ; preds = %while.end.write_buf.Clone138
  %113 = load i32, i32* @outcnt, align 4
  %114 = load i32, i32* @bytes_out, align 4
  %add.flush_outbuf.Clone95 = add i32 %114, %113
  store i32 %add.flush_outbuf.Clone95, i32* @bytes_out, align 4
  store i32 0, i32* @outcnt, align 4
  br label %return.flush_outbuf.Clone96

return.flush_outbuf.Clone96:                      ; preds = %if.end.flush_outbuf.Clone94.Split, %if.then.flush_outbuf.Clone93
  br label %if.then9.Split

if.then9.Split:                                   ; preds = %return.flush_outbuf.Clone96
  br label %if.end10

if.end10:                                         ; preds = %if.then9.Split, %if.end5
  %115 = load i32, i32* @save_orig_name, align 4
  %tobool = icmp ne i32 %115, 0
  br i1 %tobool, label %if.then11, label %if.end13

if.then11:                                        ; preds = %if.end10
  %116 = load i8, i8* %flags, align 1
  %conv = zext i8 %116 to i32
  %or = or i32 %conv, 8
  %conv12 = trunc i32 %or to i8
  store i8 %conv12, i8* %flags, align 1
  br label %if.end13

if.end13:                                         ; preds = %if.then11, %if.end10
  %117 = load i8, i8* %flags, align 1
  %118 = load i32, i32* @outcnt, align 4
  %inc14 = add i32 %118, 1
  store i32 %inc14, i32* @outcnt, align 4
  %arrayidx15 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i32 0, i32 %118
  store i8 %117, i8* %arrayidx15, align 1
  %119 = load i32, i32* @outcnt, align 4
  %cmp16 = icmp eq i32 %119, 16384
  br i1 %cmp16, label %if.then18, label %if.end19

if.then18:                                        ; preds = %if.end13
  br label %entry.flush_outbuf.Clone85

entry.flush_outbuf.Clone85:                       ; preds = %if.then18
  %120 = load i32, i32* @outcnt, align 4
  %cmp.flush_outbuf.Clone86 = icmp eq i32 %120, 0
  br i1 %cmp.flush_outbuf.Clone86, label %if.then.flush_outbuf.Clone87, label %if.end.flush_outbuf.Clone88

if.then.flush_outbuf.Clone87:                     ; preds = %entry.flush_outbuf.Clone85
  br label %return.flush_outbuf.Clone90

if.end.flush_outbuf.Clone88:                      ; preds = %entry.flush_outbuf.Clone85
  %121 = load i32, i32* @outcnt, align 4
  %122 = load i32, i32* @ofd, align 4
  br label %entry.write_buf.Clone139

entry.write_buf.Clone139:                         ; preds = %if.end.flush_outbuf.Clone88
  %cnt.addr.write_buf.Clone140 = alloca i32, align 4
  %buf.addr.write_buf.Clone141 = alloca i8*, align 4
  %fd.addr.write_buf.Clone142 = alloca i32, align 4
  %n.write_buf.Clone143 = alloca i32, align 4
  store i32 %121, i32* %cnt.addr.write_buf.Clone140, align 4
  store i8* getelementptr inbounds ([18432 x i8], [18432 x i8]* @outbuf, i32 0, i32 0), i8** %buf.addr.write_buf.Clone141, align 4
  store i32 %122, i32* %fd.addr.write_buf.Clone142, align 4
  br label %while.cond.write_buf.Clone144

while.cond.write_buf.Clone144:                    ; preds = %if.end.write_buf.Clone150, %entry.write_buf.Clone139
  %123 = load i32, i32* %cnt.addr.write_buf.Clone140, align 4
  %124 = load i8*, i8** %buf.addr.write_buf.Clone141, align 4
  %125 = load i32, i32* %fd.addr.write_buf.Clone142, align 4
  br label %entry.spec_write.Clone815

entry.spec_write.Clone815:                        ; preds = %while.cond.write_buf.Clone144
  %size.addr.spec_write.Clone816 = alloca i32, align 4
  %buf.addr.spec_write.Clone817 = alloca i8*, align 4
  %fd.addr.spec_write.Clone818 = alloca i32, align 4
  store i32 %123, i32* %size.addr.spec_write.Clone816, align 4
  store i8* %124, i8** %buf.addr.spec_write.Clone817, align 4
  store i32 %125, i32* %fd.addr.spec_write.Clone818, align 4
  %126 = load i32, i32* @dbglvl, align 4
  %cmp.spec_write.Clone819 = icmp slt i32 4, %126
  br i1 %cmp.spec_write.Clone819, label %if.then.spec_write.Clone820, label %if.end.spec_write.Clone822

if.then.spec_write.Clone820:                      ; preds = %entry.spec_write.Clone815
  %127 = load i32, i32* %size.addr.spec_write.Clone816, align 4
  %128 = load i8*, i8** %buf.addr.spec_write.Clone817, align 4
  %129 = load i32, i32* %fd.addr.spec_write.Clone818, align 4
  %call.spec_write.Clone821 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @"??_C@_0BK@GKFGHPHN@spec_write?3?5?$CFd?0?5?$CFx?0?5?$CFd?5?$DN?5?$AA@", i32 0, i32 0), i32 %129, i8* %128, i32 %127)
  br label %if.end.spec_write.Clone822

if.end.spec_write.Clone822:                       ; preds = %if.then.spec_write.Clone820, %entry.spec_write.Clone815
  %130 = load i32, i32* %fd.addr.spec_write.Clone818, align 4
  %cmp1.spec_write.Clone823 = icmp sgt i32 %130, 3
  br i1 %cmp1.spec_write.Clone823, label %if.then2.spec_write.Clone824, label %if.end5.spec_write.Clone828

if.then2.spec_write.Clone824:                     ; preds = %if.end.spec_write.Clone822
  %131 = load i32, i32* %fd.addr.spec_write.Clone818, align 4
  %call3.spec_write.Clone825 = call %struct._iobuf* @__iob_func()
  %arrayidx.spec_write.Clone826 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.spec_write.Clone825, i32 2
  %call4.spec_write.Clone827 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.spec_write.Clone826, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"??_C@_0CD@NANFEFEM@spec_write?3?5fd?$DN?$CFd?0?5?$DO?5MAX_SPEC_FD@", i32 0, i32 0), i32 %131)
  call void @exit(i32 1) #7
  unreachable

if.end5.spec_write.Clone828:                      ; preds = %if.end.spec_write.Clone822
  %132 = load i32, i32* %fd.addr.spec_write.Clone818, align 4
  %arrayidx6.spec_write.Clone829 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %132
  %buf7.spec_write.Clone830 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx6.spec_write.Clone829, i32 0, i32 3
  %133 = load i8*, i8** %buf7.spec_write.Clone830, align 4
  %134 = load i32, i32* %fd.addr.spec_write.Clone818, align 4
  %arrayidx8.spec_write.Clone831 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %134
  %pos.spec_write.Clone832 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx8.spec_write.Clone831, i32 0, i32 2
  %135 = load i32, i32* %pos.spec_write.Clone832, align 4
  %arrayidx9.spec_write.Clone833 = getelementptr inbounds i8, i8* %133, i32 %135
  %136 = load i8*, i8** %buf.addr.spec_write.Clone817, align 4
  %137 = load i32, i32* %size.addr.spec_write.Clone816, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %arrayidx9.spec_write.Clone833, i8* align 1 %136, i32 %137, i1 false)
  %138 = load i32, i32* %size.addr.spec_write.Clone816, align 4
  %139 = load i32, i32* %fd.addr.spec_write.Clone818, align 4
  %arrayidx10.spec_write.Clone834 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %139
  %len.spec_write.Clone835 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx10.spec_write.Clone834, i32 0, i32 1
  %140 = load i32, i32* %len.spec_write.Clone835, align 4
  %add.spec_write.Clone836 = add nsw i32 %140, %138
  store i32 %add.spec_write.Clone836, i32* %len.spec_write.Clone835, align 4
  %141 = load i32, i32* %size.addr.spec_write.Clone816, align 4
  %142 = load i32, i32* %fd.addr.spec_write.Clone818, align 4
  %arrayidx11.spec_write.Clone837 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %142
  %pos12.spec_write.Clone838 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx11.spec_write.Clone837, i32 0, i32 2
  %143 = load i32, i32* %pos12.spec_write.Clone838, align 4
  %add13.spec_write.Clone839 = add nsw i32 %143, %141
  store i32 %add13.spec_write.Clone839, i32* %pos12.spec_write.Clone838, align 4
  %144 = load i32, i32* @dbglvl, align 4
  %cmp14.spec_write.Clone840 = icmp slt i32 4, %144
  br i1 %cmp14.spec_write.Clone840, label %if.then15.spec_write.Clone841, label %if.end17.spec_write.Clone843

if.then15.spec_write.Clone841:                    ; preds = %if.end5.spec_write.Clone828
  %145 = load i32, i32* %size.addr.spec_write.Clone816, align 4
  %call16.spec_write.Clone842 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"??_C@_03PMGGPEJJ@?$CFd?6?$AA@", i32 0, i32 0), i32 %145)
  br label %if.end17.spec_write.Clone843

if.end17.spec_write.Clone843:                     ; preds = %if.then15.spec_write.Clone841, %if.end5.spec_write.Clone828
  %146 = load i32, i32* %size.addr.spec_write.Clone816, align 4
  store i32 %146, i32* %RetValuePtr844
  br label %while.cond.write_buf.Clone144.Split

while.cond.write_buf.Clone144.Split:              ; preds = %if.end17.spec_write.Clone843
  %RetValue845 = load i32, i32* %RetValuePtr844
  store i32 %RetValue845, i32* %n.write_buf.Clone143, align 4
  %147 = load i32, i32* %cnt.addr.write_buf.Clone140, align 4
  %cmp.write_buf.Clone146 = icmp ne i32 %RetValue845, %147
  br i1 %cmp.write_buf.Clone146, label %while.body.write_buf.Clone147, label %while.end.write_buf.Clone153

while.body.write_buf.Clone147:                    ; preds = %while.cond.write_buf.Clone144.Split
  %148 = load i32, i32* %n.write_buf.Clone143, align 4
  %cmp1.write_buf.Clone148 = icmp eq i32 %148, -1
  br i1 %cmp1.write_buf.Clone148, label %if.then.write_buf.Clone149, label %if.end.write_buf.Clone150

if.then.write_buf.Clone149:                       ; preds = %while.body.write_buf.Clone147
  call void @write_error()
  br label %if.end.write_buf.Clone150

if.end.write_buf.Clone150:                        ; preds = %if.then.write_buf.Clone149, %while.body.write_buf.Clone147
  %149 = load i32, i32* %n.write_buf.Clone143, align 4
  %150 = load i32, i32* %cnt.addr.write_buf.Clone140, align 4
  %sub.write_buf.Clone151 = sub i32 %150, %149
  store i32 %sub.write_buf.Clone151, i32* %cnt.addr.write_buf.Clone140, align 4
  %151 = load i8*, i8** %buf.addr.write_buf.Clone141, align 4
  %152 = load i32, i32* %n.write_buf.Clone143, align 4
  %add.ptr.write_buf.Clone152 = getelementptr inbounds i8, i8* %151, i32 %152
  store i8* %add.ptr.write_buf.Clone152, i8** %buf.addr.write_buf.Clone141, align 4
  br label %while.cond.write_buf.Clone144

while.end.write_buf.Clone153:                     ; preds = %while.cond.write_buf.Clone144.Split
  br label %if.end.flush_outbuf.Clone88.Split

if.end.flush_outbuf.Clone88.Split:                ; preds = %while.end.write_buf.Clone153
  %153 = load i32, i32* @outcnt, align 4
  %154 = load i32, i32* @bytes_out, align 4
  %add.flush_outbuf.Clone89 = add i32 %154, %153
  store i32 %add.flush_outbuf.Clone89, i32* @bytes_out, align 4
  store i32 0, i32* @outcnt, align 4
  br label %return.flush_outbuf.Clone90

return.flush_outbuf.Clone90:                      ; preds = %if.end.flush_outbuf.Clone88.Split, %if.then.flush_outbuf.Clone87
  br label %if.then18.Split

if.then18.Split:                                  ; preds = %return.flush_outbuf.Clone90
  br label %if.end19

if.end19:                                         ; preds = %if.then18.Split, %if.end13
  %155 = load i32, i32* @outcnt, align 4
  %cmp20 = icmp ult i32 %155, 16382
  br i1 %cmp20, label %if.then22, label %if.else

if.then22:                                        ; preds = %if.end19
  %156 = load i32, i32* @time_stamp, align 4
  %and = and i32 %156, 65535
  %and23 = and i32 %and, 255
  %conv24 = trunc i32 %and23 to i8
  %157 = load i32, i32* @outcnt, align 4
  %inc25 = add i32 %157, 1
  store i32 %inc25, i32* @outcnt, align 4
  %arrayidx26 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i32 0, i32 %157
  store i8 %conv24, i8* %arrayidx26, align 1
  %158 = load i32, i32* @time_stamp, align 4
  %and27 = and i32 %158, 65535
  %conv28 = trunc i32 %and27 to i16
  %conv29 = zext i16 %conv28 to i32
  %shr = ashr i32 %conv29, 8
  %conv30 = trunc i32 %shr to i8
  %159 = load i32, i32* @outcnt, align 4
  %inc31 = add i32 %159, 1
  store i32 %inc31, i32* @outcnt, align 4
  %arrayidx32 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i32 0, i32 %159
  store i8 %conv30, i8* %arrayidx32, align 1
  br label %if.end53

if.else:                                          ; preds = %if.end19
  %160 = load i32, i32* @time_stamp, align 4
  %and33 = and i32 %160, 65535
  %and34 = and i32 %and33, 255
  %conv35 = trunc i32 %and34 to i8
  %161 = load i32, i32* @outcnt, align 4
  %inc36 = add i32 %161, 1
  store i32 %inc36, i32* @outcnt, align 4
  %arrayidx37 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i32 0, i32 %161
  store i8 %conv35, i8* %arrayidx37, align 1
  %162 = load i32, i32* @outcnt, align 4
  %cmp38 = icmp eq i32 %162, 16384
  br i1 %cmp38, label %if.then40, label %if.end41

if.then40:                                        ; preds = %if.else
  br label %entry.flush_outbuf.Clone79

entry.flush_outbuf.Clone79:                       ; preds = %if.then40
  %163 = load i32, i32* @outcnt, align 4
  %cmp.flush_outbuf.Clone80 = icmp eq i32 %163, 0
  br i1 %cmp.flush_outbuf.Clone80, label %if.then.flush_outbuf.Clone81, label %if.end.flush_outbuf.Clone82

if.then.flush_outbuf.Clone81:                     ; preds = %entry.flush_outbuf.Clone79
  br label %return.flush_outbuf.Clone84

if.end.flush_outbuf.Clone82:                      ; preds = %entry.flush_outbuf.Clone79
  %164 = load i32, i32* @outcnt, align 4
  %165 = load i32, i32* @ofd, align 4
  br label %entry.write_buf.Clone154

entry.write_buf.Clone154:                         ; preds = %if.end.flush_outbuf.Clone82
  %cnt.addr.write_buf.Clone155 = alloca i32, align 4
  %buf.addr.write_buf.Clone156 = alloca i8*, align 4
  %fd.addr.write_buf.Clone157 = alloca i32, align 4
  %n.write_buf.Clone158 = alloca i32, align 4
  store i32 %164, i32* %cnt.addr.write_buf.Clone155, align 4
  store i8* getelementptr inbounds ([18432 x i8], [18432 x i8]* @outbuf, i32 0, i32 0), i8** %buf.addr.write_buf.Clone156, align 4
  store i32 %165, i32* %fd.addr.write_buf.Clone157, align 4
  br label %while.cond.write_buf.Clone159

while.cond.write_buf.Clone159:                    ; preds = %if.end.write_buf.Clone165, %entry.write_buf.Clone154
  %166 = load i32, i32* %cnt.addr.write_buf.Clone155, align 4
  %167 = load i8*, i8** %buf.addr.write_buf.Clone156, align 4
  %168 = load i32, i32* %fd.addr.write_buf.Clone157, align 4
  br label %entry.spec_write.Clone784

entry.spec_write.Clone784:                        ; preds = %while.cond.write_buf.Clone159
  %size.addr.spec_write.Clone785 = alloca i32, align 4
  %buf.addr.spec_write.Clone786 = alloca i8*, align 4
  %fd.addr.spec_write.Clone787 = alloca i32, align 4
  store i32 %166, i32* %size.addr.spec_write.Clone785, align 4
  store i8* %167, i8** %buf.addr.spec_write.Clone786, align 4
  store i32 %168, i32* %fd.addr.spec_write.Clone787, align 4
  %169 = load i32, i32* @dbglvl, align 4
  %cmp.spec_write.Clone788 = icmp slt i32 4, %169
  br i1 %cmp.spec_write.Clone788, label %if.then.spec_write.Clone789, label %if.end.spec_write.Clone791

if.then.spec_write.Clone789:                      ; preds = %entry.spec_write.Clone784
  %170 = load i32, i32* %size.addr.spec_write.Clone785, align 4
  %171 = load i8*, i8** %buf.addr.spec_write.Clone786, align 4
  %172 = load i32, i32* %fd.addr.spec_write.Clone787, align 4
  %call.spec_write.Clone790 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @"??_C@_0BK@GKFGHPHN@spec_write?3?5?$CFd?0?5?$CFx?0?5?$CFd?5?$DN?5?$AA@", i32 0, i32 0), i32 %172, i8* %171, i32 %170)
  br label %if.end.spec_write.Clone791

if.end.spec_write.Clone791:                       ; preds = %if.then.spec_write.Clone789, %entry.spec_write.Clone784
  %173 = load i32, i32* %fd.addr.spec_write.Clone787, align 4
  %cmp1.spec_write.Clone792 = icmp sgt i32 %173, 3
  br i1 %cmp1.spec_write.Clone792, label %if.then2.spec_write.Clone793, label %if.end5.spec_write.Clone797

if.then2.spec_write.Clone793:                     ; preds = %if.end.spec_write.Clone791
  %174 = load i32, i32* %fd.addr.spec_write.Clone787, align 4
  %call3.spec_write.Clone794 = call %struct._iobuf* @__iob_func()
  %arrayidx.spec_write.Clone795 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.spec_write.Clone794, i32 2
  %call4.spec_write.Clone796 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.spec_write.Clone795, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"??_C@_0CD@NANFEFEM@spec_write?3?5fd?$DN?$CFd?0?5?$DO?5MAX_SPEC_FD@", i32 0, i32 0), i32 %174)
  call void @exit(i32 1) #7
  unreachable

if.end5.spec_write.Clone797:                      ; preds = %if.end.spec_write.Clone791
  %175 = load i32, i32* %fd.addr.spec_write.Clone787, align 4
  %arrayidx6.spec_write.Clone798 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %175
  %buf7.spec_write.Clone799 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx6.spec_write.Clone798, i32 0, i32 3
  %176 = load i8*, i8** %buf7.spec_write.Clone799, align 4
  %177 = load i32, i32* %fd.addr.spec_write.Clone787, align 4
  %arrayidx8.spec_write.Clone800 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %177
  %pos.spec_write.Clone801 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx8.spec_write.Clone800, i32 0, i32 2
  %178 = load i32, i32* %pos.spec_write.Clone801, align 4
  %arrayidx9.spec_write.Clone802 = getelementptr inbounds i8, i8* %176, i32 %178
  %179 = load i8*, i8** %buf.addr.spec_write.Clone786, align 4
  %180 = load i32, i32* %size.addr.spec_write.Clone785, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %arrayidx9.spec_write.Clone802, i8* align 1 %179, i32 %180, i1 false)
  %181 = load i32, i32* %size.addr.spec_write.Clone785, align 4
  %182 = load i32, i32* %fd.addr.spec_write.Clone787, align 4
  %arrayidx10.spec_write.Clone803 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %182
  %len.spec_write.Clone804 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx10.spec_write.Clone803, i32 0, i32 1
  %183 = load i32, i32* %len.spec_write.Clone804, align 4
  %add.spec_write.Clone805 = add nsw i32 %183, %181
  store i32 %add.spec_write.Clone805, i32* %len.spec_write.Clone804, align 4
  %184 = load i32, i32* %size.addr.spec_write.Clone785, align 4
  %185 = load i32, i32* %fd.addr.spec_write.Clone787, align 4
  %arrayidx11.spec_write.Clone806 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %185
  %pos12.spec_write.Clone807 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx11.spec_write.Clone806, i32 0, i32 2
  %186 = load i32, i32* %pos12.spec_write.Clone807, align 4
  %add13.spec_write.Clone808 = add nsw i32 %186, %184
  store i32 %add13.spec_write.Clone808, i32* %pos12.spec_write.Clone807, align 4
  %187 = load i32, i32* @dbglvl, align 4
  %cmp14.spec_write.Clone809 = icmp slt i32 4, %187
  br i1 %cmp14.spec_write.Clone809, label %if.then15.spec_write.Clone810, label %if.end17.spec_write.Clone812

if.then15.spec_write.Clone810:                    ; preds = %if.end5.spec_write.Clone797
  %188 = load i32, i32* %size.addr.spec_write.Clone785, align 4
  %call16.spec_write.Clone811 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"??_C@_03PMGGPEJJ@?$CFd?6?$AA@", i32 0, i32 0), i32 %188)
  br label %if.end17.spec_write.Clone812

if.end17.spec_write.Clone812:                     ; preds = %if.then15.spec_write.Clone810, %if.end5.spec_write.Clone797
  %189 = load i32, i32* %size.addr.spec_write.Clone785, align 4
  store i32 %189, i32* %RetValuePtr813
  br label %while.cond.write_buf.Clone159.Split

while.cond.write_buf.Clone159.Split:              ; preds = %if.end17.spec_write.Clone812
  %RetValue814 = load i32, i32* %RetValuePtr813
  store i32 %RetValue814, i32* %n.write_buf.Clone158, align 4
  %190 = load i32, i32* %cnt.addr.write_buf.Clone155, align 4
  %cmp.write_buf.Clone161 = icmp ne i32 %RetValue814, %190
  br i1 %cmp.write_buf.Clone161, label %while.body.write_buf.Clone162, label %while.end.write_buf.Clone168

while.body.write_buf.Clone162:                    ; preds = %while.cond.write_buf.Clone159.Split
  %191 = load i32, i32* %n.write_buf.Clone158, align 4
  %cmp1.write_buf.Clone163 = icmp eq i32 %191, -1
  br i1 %cmp1.write_buf.Clone163, label %if.then.write_buf.Clone164, label %if.end.write_buf.Clone165

if.then.write_buf.Clone164:                       ; preds = %while.body.write_buf.Clone162
  call void @write_error()
  br label %if.end.write_buf.Clone165

if.end.write_buf.Clone165:                        ; preds = %if.then.write_buf.Clone164, %while.body.write_buf.Clone162
  %192 = load i32, i32* %n.write_buf.Clone158, align 4
  %193 = load i32, i32* %cnt.addr.write_buf.Clone155, align 4
  %sub.write_buf.Clone166 = sub i32 %193, %192
  store i32 %sub.write_buf.Clone166, i32* %cnt.addr.write_buf.Clone155, align 4
  %194 = load i8*, i8** %buf.addr.write_buf.Clone156, align 4
  %195 = load i32, i32* %n.write_buf.Clone158, align 4
  %add.ptr.write_buf.Clone167 = getelementptr inbounds i8, i8* %194, i32 %195
  store i8* %add.ptr.write_buf.Clone167, i8** %buf.addr.write_buf.Clone156, align 4
  br label %while.cond.write_buf.Clone159

while.end.write_buf.Clone168:                     ; preds = %while.cond.write_buf.Clone159.Split
  br label %if.end.flush_outbuf.Clone82.Split

if.end.flush_outbuf.Clone82.Split:                ; preds = %while.end.write_buf.Clone168
  %196 = load i32, i32* @outcnt, align 4
  %197 = load i32, i32* @bytes_out, align 4
  %add.flush_outbuf.Clone83 = add i32 %197, %196
  store i32 %add.flush_outbuf.Clone83, i32* @bytes_out, align 4
  store i32 0, i32* @outcnt, align 4
  br label %return.flush_outbuf.Clone84

return.flush_outbuf.Clone84:                      ; preds = %if.end.flush_outbuf.Clone82.Split, %if.then.flush_outbuf.Clone81
  br label %if.then40.Split

if.then40.Split:                                  ; preds = %return.flush_outbuf.Clone84
  br label %if.end41

if.end41:                                         ; preds = %if.then40.Split, %if.else
  %198 = load i32, i32* @time_stamp, align 4
  %and42 = and i32 %198, 65535
  %conv43 = trunc i32 %and42 to i16
  %conv44 = zext i16 %conv43 to i32
  %shr45 = ashr i32 %conv44, 8
  %conv46 = trunc i32 %shr45 to i8
  %199 = load i32, i32* @outcnt, align 4
  %inc47 = add i32 %199, 1
  store i32 %inc47, i32* @outcnt, align 4
  %arrayidx48 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i32 0, i32 %199
  store i8 %conv46, i8* %arrayidx48, align 1
  %200 = load i32, i32* @outcnt, align 4
  %cmp49 = icmp eq i32 %200, 16384
  br i1 %cmp49, label %if.then51, label %if.end52

if.then51:                                        ; preds = %if.end41
  br label %entry.flush_outbuf.Clone73

entry.flush_outbuf.Clone73:                       ; preds = %if.then51
  %201 = load i32, i32* @outcnt, align 4
  %cmp.flush_outbuf.Clone74 = icmp eq i32 %201, 0
  br i1 %cmp.flush_outbuf.Clone74, label %if.then.flush_outbuf.Clone75, label %if.end.flush_outbuf.Clone76

if.then.flush_outbuf.Clone75:                     ; preds = %entry.flush_outbuf.Clone73
  br label %return.flush_outbuf.Clone78

if.end.flush_outbuf.Clone76:                      ; preds = %entry.flush_outbuf.Clone73
  %202 = load i32, i32* @outcnt, align 4
  %203 = load i32, i32* @ofd, align 4
  br label %entry.write_buf.Clone169

entry.write_buf.Clone169:                         ; preds = %if.end.flush_outbuf.Clone76
  %cnt.addr.write_buf.Clone170 = alloca i32, align 4
  %buf.addr.write_buf.Clone171 = alloca i8*, align 4
  %fd.addr.write_buf.Clone172 = alloca i32, align 4
  %n.write_buf.Clone173 = alloca i32, align 4
  store i32 %202, i32* %cnt.addr.write_buf.Clone170, align 4
  store i8* getelementptr inbounds ([18432 x i8], [18432 x i8]* @outbuf, i32 0, i32 0), i8** %buf.addr.write_buf.Clone171, align 4
  store i32 %203, i32* %fd.addr.write_buf.Clone172, align 4
  br label %while.cond.write_buf.Clone174

while.cond.write_buf.Clone174:                    ; preds = %if.end.write_buf.Clone180, %entry.write_buf.Clone169
  %204 = load i32, i32* %cnt.addr.write_buf.Clone170, align 4
  %205 = load i8*, i8** %buf.addr.write_buf.Clone171, align 4
  %206 = load i32, i32* %fd.addr.write_buf.Clone172, align 4
  br label %entry.spec_write.Clone753

entry.spec_write.Clone753:                        ; preds = %while.cond.write_buf.Clone174
  %size.addr.spec_write.Clone754 = alloca i32, align 4
  %buf.addr.spec_write.Clone755 = alloca i8*, align 4
  %fd.addr.spec_write.Clone756 = alloca i32, align 4
  store i32 %204, i32* %size.addr.spec_write.Clone754, align 4
  store i8* %205, i8** %buf.addr.spec_write.Clone755, align 4
  store i32 %206, i32* %fd.addr.spec_write.Clone756, align 4
  %207 = load i32, i32* @dbglvl, align 4
  %cmp.spec_write.Clone757 = icmp slt i32 4, %207
  br i1 %cmp.spec_write.Clone757, label %if.then.spec_write.Clone758, label %if.end.spec_write.Clone760

if.then.spec_write.Clone758:                      ; preds = %entry.spec_write.Clone753
  %208 = load i32, i32* %size.addr.spec_write.Clone754, align 4
  %209 = load i8*, i8** %buf.addr.spec_write.Clone755, align 4
  %210 = load i32, i32* %fd.addr.spec_write.Clone756, align 4
  %call.spec_write.Clone759 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @"??_C@_0BK@GKFGHPHN@spec_write?3?5?$CFd?0?5?$CFx?0?5?$CFd?5?$DN?5?$AA@", i32 0, i32 0), i32 %210, i8* %209, i32 %208)
  br label %if.end.spec_write.Clone760

if.end.spec_write.Clone760:                       ; preds = %if.then.spec_write.Clone758, %entry.spec_write.Clone753
  %211 = load i32, i32* %fd.addr.spec_write.Clone756, align 4
  %cmp1.spec_write.Clone761 = icmp sgt i32 %211, 3
  br i1 %cmp1.spec_write.Clone761, label %if.then2.spec_write.Clone762, label %if.end5.spec_write.Clone766

if.then2.spec_write.Clone762:                     ; preds = %if.end.spec_write.Clone760
  %212 = load i32, i32* %fd.addr.spec_write.Clone756, align 4
  %call3.spec_write.Clone763 = call %struct._iobuf* @__iob_func()
  %arrayidx.spec_write.Clone764 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.spec_write.Clone763, i32 2
  %call4.spec_write.Clone765 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.spec_write.Clone764, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"??_C@_0CD@NANFEFEM@spec_write?3?5fd?$DN?$CFd?0?5?$DO?5MAX_SPEC_FD@", i32 0, i32 0), i32 %212)
  call void @exit(i32 1) #7
  unreachable

if.end5.spec_write.Clone766:                      ; preds = %if.end.spec_write.Clone760
  %213 = load i32, i32* %fd.addr.spec_write.Clone756, align 4
  %arrayidx6.spec_write.Clone767 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %213
  %buf7.spec_write.Clone768 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx6.spec_write.Clone767, i32 0, i32 3
  %214 = load i8*, i8** %buf7.spec_write.Clone768, align 4
  %215 = load i32, i32* %fd.addr.spec_write.Clone756, align 4
  %arrayidx8.spec_write.Clone769 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %215
  %pos.spec_write.Clone770 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx8.spec_write.Clone769, i32 0, i32 2
  %216 = load i32, i32* %pos.spec_write.Clone770, align 4
  %arrayidx9.spec_write.Clone771 = getelementptr inbounds i8, i8* %214, i32 %216
  %217 = load i8*, i8** %buf.addr.spec_write.Clone755, align 4
  %218 = load i32, i32* %size.addr.spec_write.Clone754, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %arrayidx9.spec_write.Clone771, i8* align 1 %217, i32 %218, i1 false)
  %219 = load i32, i32* %size.addr.spec_write.Clone754, align 4
  %220 = load i32, i32* %fd.addr.spec_write.Clone756, align 4
  %arrayidx10.spec_write.Clone772 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %220
  %len.spec_write.Clone773 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx10.spec_write.Clone772, i32 0, i32 1
  %221 = load i32, i32* %len.spec_write.Clone773, align 4
  %add.spec_write.Clone774 = add nsw i32 %221, %219
  store i32 %add.spec_write.Clone774, i32* %len.spec_write.Clone773, align 4
  %222 = load i32, i32* %size.addr.spec_write.Clone754, align 4
  %223 = load i32, i32* %fd.addr.spec_write.Clone756, align 4
  %arrayidx11.spec_write.Clone775 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %223
  %pos12.spec_write.Clone776 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx11.spec_write.Clone775, i32 0, i32 2
  %224 = load i32, i32* %pos12.spec_write.Clone776, align 4
  %add13.spec_write.Clone777 = add nsw i32 %224, %222
  store i32 %add13.spec_write.Clone777, i32* %pos12.spec_write.Clone776, align 4
  %225 = load i32, i32* @dbglvl, align 4
  %cmp14.spec_write.Clone778 = icmp slt i32 4, %225
  br i1 %cmp14.spec_write.Clone778, label %if.then15.spec_write.Clone779, label %if.end17.spec_write.Clone781

if.then15.spec_write.Clone779:                    ; preds = %if.end5.spec_write.Clone766
  %226 = load i32, i32* %size.addr.spec_write.Clone754, align 4
  %call16.spec_write.Clone780 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"??_C@_03PMGGPEJJ@?$CFd?6?$AA@", i32 0, i32 0), i32 %226)
  br label %if.end17.spec_write.Clone781

if.end17.spec_write.Clone781:                     ; preds = %if.then15.spec_write.Clone779, %if.end5.spec_write.Clone766
  %227 = load i32, i32* %size.addr.spec_write.Clone754, align 4
  store i32 %227, i32* %RetValuePtr782
  br label %while.cond.write_buf.Clone174.Split

while.cond.write_buf.Clone174.Split:              ; preds = %if.end17.spec_write.Clone781
  %RetValue783 = load i32, i32* %RetValuePtr782
  store i32 %RetValue783, i32* %n.write_buf.Clone173, align 4
  %228 = load i32, i32* %cnt.addr.write_buf.Clone170, align 4
  %cmp.write_buf.Clone176 = icmp ne i32 %RetValue783, %228
  br i1 %cmp.write_buf.Clone176, label %while.body.write_buf.Clone177, label %while.end.write_buf.Clone183

while.body.write_buf.Clone177:                    ; preds = %while.cond.write_buf.Clone174.Split
  %229 = load i32, i32* %n.write_buf.Clone173, align 4
  %cmp1.write_buf.Clone178 = icmp eq i32 %229, -1
  br i1 %cmp1.write_buf.Clone178, label %if.then.write_buf.Clone179, label %if.end.write_buf.Clone180

if.then.write_buf.Clone179:                       ; preds = %while.body.write_buf.Clone177
  call void @write_error()
  br label %if.end.write_buf.Clone180

if.end.write_buf.Clone180:                        ; preds = %if.then.write_buf.Clone179, %while.body.write_buf.Clone177
  %230 = load i32, i32* %n.write_buf.Clone173, align 4
  %231 = load i32, i32* %cnt.addr.write_buf.Clone170, align 4
  %sub.write_buf.Clone181 = sub i32 %231, %230
  store i32 %sub.write_buf.Clone181, i32* %cnt.addr.write_buf.Clone170, align 4
  %232 = load i8*, i8** %buf.addr.write_buf.Clone171, align 4
  %233 = load i32, i32* %n.write_buf.Clone173, align 4
  %add.ptr.write_buf.Clone182 = getelementptr inbounds i8, i8* %232, i32 %233
  store i8* %add.ptr.write_buf.Clone182, i8** %buf.addr.write_buf.Clone171, align 4
  br label %while.cond.write_buf.Clone174

while.end.write_buf.Clone183:                     ; preds = %while.cond.write_buf.Clone174.Split
  br label %if.end.flush_outbuf.Clone76.Split

if.end.flush_outbuf.Clone76.Split:                ; preds = %while.end.write_buf.Clone183
  %234 = load i32, i32* @outcnt, align 4
  %235 = load i32, i32* @bytes_out, align 4
  %add.flush_outbuf.Clone77 = add i32 %235, %234
  store i32 %add.flush_outbuf.Clone77, i32* @bytes_out, align 4
  store i32 0, i32* @outcnt, align 4
  br label %return.flush_outbuf.Clone78

return.flush_outbuf.Clone78:                      ; preds = %if.end.flush_outbuf.Clone76.Split, %if.then.flush_outbuf.Clone75
  br label %if.then51.Split

if.then51.Split:                                  ; preds = %return.flush_outbuf.Clone78
  br label %if.end52

if.end52:                                         ; preds = %if.then51.Split, %if.end41
  br label %if.end53

if.end53:                                         ; preds = %if.end52, %if.then22
  %236 = load i32, i32* @outcnt, align 4
  %cmp54 = icmp ult i32 %236, 16382
  br i1 %cmp54, label %if.then56, label %if.else69

if.then56:                                        ; preds = %if.end53
  %237 = load i32, i32* @time_stamp, align 4
  %shr57 = lshr i32 %237, 16
  %and58 = and i32 %shr57, 255
  %conv59 = trunc i32 %and58 to i8
  %238 = load i32, i32* @outcnt, align 4
  %inc60 = add i32 %238, 1
  store i32 %inc60, i32* @outcnt, align 4
  %arrayidx61 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i32 0, i32 %238
  store i8 %conv59, i8* %arrayidx61, align 1
  %239 = load i32, i32* @time_stamp, align 4
  %shr62 = lshr i32 %239, 16
  %conv63 = trunc i32 %shr62 to i16
  %conv64 = zext i16 %conv63 to i32
  %shr65 = ashr i32 %conv64, 8
  %conv66 = trunc i32 %shr65 to i8
  %240 = load i32, i32* @outcnt, align 4
  %inc67 = add i32 %240, 1
  store i32 %inc67, i32* @outcnt, align 4
  %arrayidx68 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i32 0, i32 %240
  store i8 %conv66, i8* %arrayidx68, align 1
  br label %CallOutFuncBB

if.else69:                                        ; preds = %if.end53
  %241 = load i32, i32* @time_stamp, align 4
  %shr70 = lshr i32 %241, 16
  %and71 = and i32 %shr70, 255
  %conv72 = trunc i32 %and71 to i8
  %242 = load i32, i32* @outcnt, align 4
  %inc73 = add i32 %242, 1
  store i32 %inc73, i32* @outcnt, align 4
  %arrayidx74 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i32 0, i32 %242
  store i8 %conv72, i8* %arrayidx74, align 1
  %243 = load i32, i32* @outcnt, align 4
  %cmp75 = icmp eq i32 %243, 16384
  br i1 %cmp75, label %if.then77, label %if.end78

if.then77:                                        ; preds = %if.else69
  br label %entry.flush_outbuf.Clone67

entry.flush_outbuf.Clone67:                       ; preds = %if.then77
  %244 = load i32, i32* @outcnt, align 4
  %cmp.flush_outbuf.Clone68 = icmp eq i32 %244, 0
  br i1 %cmp.flush_outbuf.Clone68, label %if.then.flush_outbuf.Clone69, label %if.end.flush_outbuf.Clone70

if.then.flush_outbuf.Clone69:                     ; preds = %entry.flush_outbuf.Clone67
  br label %return.flush_outbuf.Clone72

if.end.flush_outbuf.Clone70:                      ; preds = %entry.flush_outbuf.Clone67
  %245 = load i32, i32* @outcnt, align 4
  %246 = load i32, i32* @ofd, align 4
  br label %entry.write_buf.Clone184

entry.write_buf.Clone184:                         ; preds = %if.end.flush_outbuf.Clone70
  %cnt.addr.write_buf.Clone185 = alloca i32, align 4
  %buf.addr.write_buf.Clone186 = alloca i8*, align 4
  %fd.addr.write_buf.Clone187 = alloca i32, align 4
  %n.write_buf.Clone188 = alloca i32, align 4
  store i32 %245, i32* %cnt.addr.write_buf.Clone185, align 4
  store i8* getelementptr inbounds ([18432 x i8], [18432 x i8]* @outbuf, i32 0, i32 0), i8** %buf.addr.write_buf.Clone186, align 4
  store i32 %246, i32* %fd.addr.write_buf.Clone187, align 4
  br label %while.cond.write_buf.Clone189

while.cond.write_buf.Clone189:                    ; preds = %if.end.write_buf.Clone195, %entry.write_buf.Clone184
  %247 = load i32, i32* %cnt.addr.write_buf.Clone185, align 4
  %248 = load i8*, i8** %buf.addr.write_buf.Clone186, align 4
  %249 = load i32, i32* %fd.addr.write_buf.Clone187, align 4
  br label %entry.spec_write.Clone722

entry.spec_write.Clone722:                        ; preds = %while.cond.write_buf.Clone189
  %size.addr.spec_write.Clone723 = alloca i32, align 4
  %buf.addr.spec_write.Clone724 = alloca i8*, align 4
  %fd.addr.spec_write.Clone725 = alloca i32, align 4
  store i32 %247, i32* %size.addr.spec_write.Clone723, align 4
  store i8* %248, i8** %buf.addr.spec_write.Clone724, align 4
  store i32 %249, i32* %fd.addr.spec_write.Clone725, align 4
  %250 = load i32, i32* @dbglvl, align 4
  %cmp.spec_write.Clone726 = icmp slt i32 4, %250
  br i1 %cmp.spec_write.Clone726, label %if.then.spec_write.Clone727, label %if.end.spec_write.Clone729

if.then.spec_write.Clone727:                      ; preds = %entry.spec_write.Clone722
  %251 = load i32, i32* %size.addr.spec_write.Clone723, align 4
  %252 = load i8*, i8** %buf.addr.spec_write.Clone724, align 4
  %253 = load i32, i32* %fd.addr.spec_write.Clone725, align 4
  %call.spec_write.Clone728 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @"??_C@_0BK@GKFGHPHN@spec_write?3?5?$CFd?0?5?$CFx?0?5?$CFd?5?$DN?5?$AA@", i32 0, i32 0), i32 %253, i8* %252, i32 %251)
  br label %if.end.spec_write.Clone729

if.end.spec_write.Clone729:                       ; preds = %if.then.spec_write.Clone727, %entry.spec_write.Clone722
  %254 = load i32, i32* %fd.addr.spec_write.Clone725, align 4
  %cmp1.spec_write.Clone730 = icmp sgt i32 %254, 3
  br i1 %cmp1.spec_write.Clone730, label %if.then2.spec_write.Clone731, label %if.end5.spec_write.Clone735

if.then2.spec_write.Clone731:                     ; preds = %if.end.spec_write.Clone729
  %255 = load i32, i32* %fd.addr.spec_write.Clone725, align 4
  %call3.spec_write.Clone732 = call %struct._iobuf* @__iob_func()
  %arrayidx.spec_write.Clone733 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.spec_write.Clone732, i32 2
  %call4.spec_write.Clone734 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.spec_write.Clone733, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"??_C@_0CD@NANFEFEM@spec_write?3?5fd?$DN?$CFd?0?5?$DO?5MAX_SPEC_FD@", i32 0, i32 0), i32 %255)
  call void @exit(i32 1) #7
  unreachable

if.end5.spec_write.Clone735:                      ; preds = %if.end.spec_write.Clone729
  %256 = load i32, i32* %fd.addr.spec_write.Clone725, align 4
  %arrayidx6.spec_write.Clone736 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %256
  %buf7.spec_write.Clone737 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx6.spec_write.Clone736, i32 0, i32 3
  %257 = load i8*, i8** %buf7.spec_write.Clone737, align 4
  %258 = load i32, i32* %fd.addr.spec_write.Clone725, align 4
  %arrayidx8.spec_write.Clone738 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %258
  %pos.spec_write.Clone739 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx8.spec_write.Clone738, i32 0, i32 2
  %259 = load i32, i32* %pos.spec_write.Clone739, align 4
  %arrayidx9.spec_write.Clone740 = getelementptr inbounds i8, i8* %257, i32 %259
  %260 = load i8*, i8** %buf.addr.spec_write.Clone724, align 4
  %261 = load i32, i32* %size.addr.spec_write.Clone723, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %arrayidx9.spec_write.Clone740, i8* align 1 %260, i32 %261, i1 false)
  %262 = load i32, i32* %size.addr.spec_write.Clone723, align 4
  %263 = load i32, i32* %fd.addr.spec_write.Clone725, align 4
  %arrayidx10.spec_write.Clone741 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %263
  %len.spec_write.Clone742 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx10.spec_write.Clone741, i32 0, i32 1
  %264 = load i32, i32* %len.spec_write.Clone742, align 4
  %add.spec_write.Clone743 = add nsw i32 %264, %262
  store i32 %add.spec_write.Clone743, i32* %len.spec_write.Clone742, align 4
  %265 = load i32, i32* %size.addr.spec_write.Clone723, align 4
  %266 = load i32, i32* %fd.addr.spec_write.Clone725, align 4
  %arrayidx11.spec_write.Clone744 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %266
  %pos12.spec_write.Clone745 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx11.spec_write.Clone744, i32 0, i32 2
  %267 = load i32, i32* %pos12.spec_write.Clone745, align 4
  %add13.spec_write.Clone746 = add nsw i32 %267, %265
  store i32 %add13.spec_write.Clone746, i32* %pos12.spec_write.Clone745, align 4
  %268 = load i32, i32* @dbglvl, align 4
  %cmp14.spec_write.Clone747 = icmp slt i32 4, %268
  br i1 %cmp14.spec_write.Clone747, label %if.then15.spec_write.Clone748, label %if.end17.spec_write.Clone750

if.then15.spec_write.Clone748:                    ; preds = %if.end5.spec_write.Clone735
  %269 = load i32, i32* %size.addr.spec_write.Clone723, align 4
  %call16.spec_write.Clone749 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"??_C@_03PMGGPEJJ@?$CFd?6?$AA@", i32 0, i32 0), i32 %269)
  br label %if.end17.spec_write.Clone750

if.end17.spec_write.Clone750:                     ; preds = %if.then15.spec_write.Clone748, %if.end5.spec_write.Clone735
  %270 = load i32, i32* %size.addr.spec_write.Clone723, align 4
  store i32 %270, i32* %RetValuePtr751
  br label %while.cond.write_buf.Clone189.Split

while.cond.write_buf.Clone189.Split:              ; preds = %if.end17.spec_write.Clone750
  %RetValue752 = load i32, i32* %RetValuePtr751
  store i32 %RetValue752, i32* %n.write_buf.Clone188, align 4
  %271 = load i32, i32* %cnt.addr.write_buf.Clone185, align 4
  %cmp.write_buf.Clone191 = icmp ne i32 %RetValue752, %271
  br i1 %cmp.write_buf.Clone191, label %while.body.write_buf.Clone192, label %while.end.write_buf.Clone198

while.body.write_buf.Clone192:                    ; preds = %while.cond.write_buf.Clone189.Split
  %272 = load i32, i32* %n.write_buf.Clone188, align 4
  %cmp1.write_buf.Clone193 = icmp eq i32 %272, -1
  br i1 %cmp1.write_buf.Clone193, label %if.then.write_buf.Clone194, label %if.end.write_buf.Clone195

if.then.write_buf.Clone194:                       ; preds = %while.body.write_buf.Clone192
  call void @write_error()
  br label %if.end.write_buf.Clone195

if.end.write_buf.Clone195:                        ; preds = %if.then.write_buf.Clone194, %while.body.write_buf.Clone192
  %273 = load i32, i32* %n.write_buf.Clone188, align 4
  %274 = load i32, i32* %cnt.addr.write_buf.Clone185, align 4
  %sub.write_buf.Clone196 = sub i32 %274, %273
  store i32 %sub.write_buf.Clone196, i32* %cnt.addr.write_buf.Clone185, align 4
  %275 = load i8*, i8** %buf.addr.write_buf.Clone186, align 4
  %276 = load i32, i32* %n.write_buf.Clone188, align 4
  %add.ptr.write_buf.Clone197 = getelementptr inbounds i8, i8* %275, i32 %276
  store i8* %add.ptr.write_buf.Clone197, i8** %buf.addr.write_buf.Clone186, align 4
  br label %while.cond.write_buf.Clone189

while.end.write_buf.Clone198:                     ; preds = %while.cond.write_buf.Clone189.Split
  br label %if.end.flush_outbuf.Clone70.Split

if.end.flush_outbuf.Clone70.Split:                ; preds = %while.end.write_buf.Clone198
  %277 = load i32, i32* @outcnt, align 4
  %278 = load i32, i32* @bytes_out, align 4
  %add.flush_outbuf.Clone71 = add i32 %278, %277
  store i32 %add.flush_outbuf.Clone71, i32* @bytes_out, align 4
  store i32 0, i32* @outcnt, align 4
  br label %return.flush_outbuf.Clone72

return.flush_outbuf.Clone72:                      ; preds = %if.end.flush_outbuf.Clone70.Split, %if.then.flush_outbuf.Clone69
  br label %if.then77.Split

if.then77.Split:                                  ; preds = %return.flush_outbuf.Clone72
  br label %if.end78

if.end78:                                         ; preds = %if.then77.Split, %if.else69
  %279 = load i32, i32* @time_stamp, align 4
  %shr79 = lshr i32 %279, 16
  %conv80 = trunc i32 %shr79 to i16
  %conv81 = zext i16 %conv80 to i32
  %shr82 = ashr i32 %conv81, 8
  %conv83 = trunc i32 %shr82 to i8
  %280 = load i32, i32* @outcnt, align 4
  %inc84 = add i32 %280, 1
  store i32 %inc84, i32* @outcnt, align 4
  %arrayidx85 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i32 0, i32 %280
  store i8 %conv83, i8* %arrayidx85, align 1
  %281 = load i32, i32* @outcnt, align 4
  %cmp86 = icmp eq i32 %281, 16384
  br i1 %cmp86, label %if.then88, label %if.end89

if.then88:                                        ; preds = %if.end78
  br label %entry.flush_outbuf.Clone61

entry.flush_outbuf.Clone61:                       ; preds = %if.then88
  %282 = load i32, i32* @outcnt, align 4
  %cmp.flush_outbuf.Clone62 = icmp eq i32 %282, 0
  br i1 %cmp.flush_outbuf.Clone62, label %if.then.flush_outbuf.Clone63, label %if.end.flush_outbuf.Clone64

if.then.flush_outbuf.Clone63:                     ; preds = %entry.flush_outbuf.Clone61
  br label %return.flush_outbuf.Clone66

if.end.flush_outbuf.Clone64:                      ; preds = %entry.flush_outbuf.Clone61
  %283 = load i32, i32* @outcnt, align 4
  %284 = load i32, i32* @ofd, align 4
  br label %entry.write_buf.Clone199

entry.write_buf.Clone199:                         ; preds = %if.end.flush_outbuf.Clone64
  %cnt.addr.write_buf.Clone200 = alloca i32, align 4
  %buf.addr.write_buf.Clone201 = alloca i8*, align 4
  %fd.addr.write_buf.Clone202 = alloca i32, align 4
  %n.write_buf.Clone203 = alloca i32, align 4
  store i32 %283, i32* %cnt.addr.write_buf.Clone200, align 4
  store i8* getelementptr inbounds ([18432 x i8], [18432 x i8]* @outbuf, i32 0, i32 0), i8** %buf.addr.write_buf.Clone201, align 4
  store i32 %284, i32* %fd.addr.write_buf.Clone202, align 4
  br label %while.cond.write_buf.Clone204

while.cond.write_buf.Clone204:                    ; preds = %if.end.write_buf.Clone210, %entry.write_buf.Clone199
  %285 = load i32, i32* %cnt.addr.write_buf.Clone200, align 4
  %286 = load i8*, i8** %buf.addr.write_buf.Clone201, align 4
  %287 = load i32, i32* %fd.addr.write_buf.Clone202, align 4
  br label %entry.spec_write.Clone691

entry.spec_write.Clone691:                        ; preds = %while.cond.write_buf.Clone204
  %size.addr.spec_write.Clone692 = alloca i32, align 4
  %buf.addr.spec_write.Clone693 = alloca i8*, align 4
  %fd.addr.spec_write.Clone694 = alloca i32, align 4
  store i32 %285, i32* %size.addr.spec_write.Clone692, align 4
  store i8* %286, i8** %buf.addr.spec_write.Clone693, align 4
  store i32 %287, i32* %fd.addr.spec_write.Clone694, align 4
  %288 = load i32, i32* @dbglvl, align 4
  %cmp.spec_write.Clone695 = icmp slt i32 4, %288
  br i1 %cmp.spec_write.Clone695, label %if.then.spec_write.Clone696, label %if.end.spec_write.Clone698

if.then.spec_write.Clone696:                      ; preds = %entry.spec_write.Clone691
  %289 = load i32, i32* %size.addr.spec_write.Clone692, align 4
  %290 = load i8*, i8** %buf.addr.spec_write.Clone693, align 4
  %291 = load i32, i32* %fd.addr.spec_write.Clone694, align 4
  %call.spec_write.Clone697 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @"??_C@_0BK@GKFGHPHN@spec_write?3?5?$CFd?0?5?$CFx?0?5?$CFd?5?$DN?5?$AA@", i32 0, i32 0), i32 %291, i8* %290, i32 %289)
  br label %if.end.spec_write.Clone698

if.end.spec_write.Clone698:                       ; preds = %if.then.spec_write.Clone696, %entry.spec_write.Clone691
  %292 = load i32, i32* %fd.addr.spec_write.Clone694, align 4
  %cmp1.spec_write.Clone699 = icmp sgt i32 %292, 3
  br i1 %cmp1.spec_write.Clone699, label %if.then2.spec_write.Clone700, label %if.end5.spec_write.Clone704

if.then2.spec_write.Clone700:                     ; preds = %if.end.spec_write.Clone698
  %293 = load i32, i32* %fd.addr.spec_write.Clone694, align 4
  %call3.spec_write.Clone701 = call %struct._iobuf* @__iob_func()
  %arrayidx.spec_write.Clone702 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.spec_write.Clone701, i32 2
  %call4.spec_write.Clone703 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.spec_write.Clone702, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"??_C@_0CD@NANFEFEM@spec_write?3?5fd?$DN?$CFd?0?5?$DO?5MAX_SPEC_FD@", i32 0, i32 0), i32 %293)
  call void @exit(i32 1) #7
  unreachable

if.end5.spec_write.Clone704:                      ; preds = %if.end.spec_write.Clone698
  %294 = load i32, i32* %fd.addr.spec_write.Clone694, align 4
  %arrayidx6.spec_write.Clone705 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %294
  %buf7.spec_write.Clone706 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx6.spec_write.Clone705, i32 0, i32 3
  %295 = load i8*, i8** %buf7.spec_write.Clone706, align 4
  %296 = load i32, i32* %fd.addr.spec_write.Clone694, align 4
  %arrayidx8.spec_write.Clone707 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %296
  %pos.spec_write.Clone708 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx8.spec_write.Clone707, i32 0, i32 2
  %297 = load i32, i32* %pos.spec_write.Clone708, align 4
  %arrayidx9.spec_write.Clone709 = getelementptr inbounds i8, i8* %295, i32 %297
  %298 = load i8*, i8** %buf.addr.spec_write.Clone693, align 4
  %299 = load i32, i32* %size.addr.spec_write.Clone692, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %arrayidx9.spec_write.Clone709, i8* align 1 %298, i32 %299, i1 false)
  %300 = load i32, i32* %size.addr.spec_write.Clone692, align 4
  %301 = load i32, i32* %fd.addr.spec_write.Clone694, align 4
  %arrayidx10.spec_write.Clone710 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %301
  %len.spec_write.Clone711 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx10.spec_write.Clone710, i32 0, i32 1
  %302 = load i32, i32* %len.spec_write.Clone711, align 4
  %add.spec_write.Clone712 = add nsw i32 %302, %300
  store i32 %add.spec_write.Clone712, i32* %len.spec_write.Clone711, align 4
  %303 = load i32, i32* %size.addr.spec_write.Clone692, align 4
  %304 = load i32, i32* %fd.addr.spec_write.Clone694, align 4
  %arrayidx11.spec_write.Clone713 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %304
  %pos12.spec_write.Clone714 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx11.spec_write.Clone713, i32 0, i32 2
  %305 = load i32, i32* %pos12.spec_write.Clone714, align 4
  %add13.spec_write.Clone715 = add nsw i32 %305, %303
  store i32 %add13.spec_write.Clone715, i32* %pos12.spec_write.Clone714, align 4
  %306 = load i32, i32* @dbglvl, align 4
  %cmp14.spec_write.Clone716 = icmp slt i32 4, %306
  br i1 %cmp14.spec_write.Clone716, label %if.then15.spec_write.Clone717, label %if.end17.spec_write.Clone719

if.then15.spec_write.Clone717:                    ; preds = %if.end5.spec_write.Clone704
  %307 = load i32, i32* %size.addr.spec_write.Clone692, align 4
  %call16.spec_write.Clone718 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"??_C@_03PMGGPEJJ@?$CFd?6?$AA@", i32 0, i32 0), i32 %307)
  br label %if.end17.spec_write.Clone719

if.end17.spec_write.Clone719:                     ; preds = %if.then15.spec_write.Clone717, %if.end5.spec_write.Clone704
  %308 = load i32, i32* %size.addr.spec_write.Clone692, align 4
  store i32 %308, i32* %RetValuePtr720
  br label %while.cond.write_buf.Clone204.Split

while.cond.write_buf.Clone204.Split:              ; preds = %if.end17.spec_write.Clone719
  %RetValue721 = load i32, i32* %RetValuePtr720
  store i32 %RetValue721, i32* %n.write_buf.Clone203, align 4
  %309 = load i32, i32* %cnt.addr.write_buf.Clone200, align 4
  %cmp.write_buf.Clone206 = icmp ne i32 %RetValue721, %309
  br i1 %cmp.write_buf.Clone206, label %while.body.write_buf.Clone207, label %while.end.write_buf.Clone213

while.body.write_buf.Clone207:                    ; preds = %while.cond.write_buf.Clone204.Split
  %310 = load i32, i32* %n.write_buf.Clone203, align 4
  %cmp1.write_buf.Clone208 = icmp eq i32 %310, -1
  br i1 %cmp1.write_buf.Clone208, label %if.then.write_buf.Clone209, label %if.end.write_buf.Clone210

if.then.write_buf.Clone209:                       ; preds = %while.body.write_buf.Clone207
  call void @write_error()
  br label %if.end.write_buf.Clone210

if.end.write_buf.Clone210:                        ; preds = %if.then.write_buf.Clone209, %while.body.write_buf.Clone207
  %311 = load i32, i32* %n.write_buf.Clone203, align 4
  %312 = load i32, i32* %cnt.addr.write_buf.Clone200, align 4
  %sub.write_buf.Clone211 = sub i32 %312, %311
  store i32 %sub.write_buf.Clone211, i32* %cnt.addr.write_buf.Clone200, align 4
  %313 = load i8*, i8** %buf.addr.write_buf.Clone201, align 4
  %314 = load i32, i32* %n.write_buf.Clone203, align 4
  %add.ptr.write_buf.Clone212 = getelementptr inbounds i8, i8* %313, i32 %314
  store i8* %add.ptr.write_buf.Clone212, i8** %buf.addr.write_buf.Clone201, align 4
  br label %while.cond.write_buf.Clone204

while.end.write_buf.Clone213:                     ; preds = %while.cond.write_buf.Clone204.Split
  br label %if.end.flush_outbuf.Clone64.Split

if.end.flush_outbuf.Clone64.Split:                ; preds = %while.end.write_buf.Clone213
  %315 = load i32, i32* @outcnt, align 4
  %316 = load i32, i32* @bytes_out, align 4
  %add.flush_outbuf.Clone65 = add i32 %316, %315
  store i32 %add.flush_outbuf.Clone65, i32* @bytes_out, align 4
  store i32 0, i32* @outcnt, align 4
  br label %return.flush_outbuf.Clone66

return.flush_outbuf.Clone66:                      ; preds = %if.end.flush_outbuf.Clone64.Split, %if.then.flush_outbuf.Clone63
  br label %if.then88.Split

if.then88.Split:                                  ; preds = %return.flush_outbuf.Clone66
  br label %if.end89

if.end89:                                         ; preds = %if.then88.Split, %if.end78
  br label %CallOutFuncBB

CallOutFuncBB:                                    ; preds = %if.then56, %if.end89
  call void @if.end90.OutLineFunc(i32* %out.addr, i16* %attr, i16* %deflate_flags)
  br label %new

new:                                              ; preds = %CallOutFuncBB
  %317 = load i32, i32* @outcnt, align 4
  %inc98 = add i32 %317, 1
  store i32 %inc98, i32* @outcnt, align 4
  %arrayidx99 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i32 0, i32 %317
  store i8 3, i8* %arrayidx99, align 1
  %318 = load i32, i32* @outcnt, align 4
  %cmp100 = icmp eq i32 %318, 16384
  br i1 %cmp100, label %if.then102, label %if.end103

if.then102:                                       ; preds = %new
  br label %entry.flush_outbuf.Clone55

entry.flush_outbuf.Clone55:                       ; preds = %if.then102
  %319 = load i32, i32* @outcnt, align 4
  %cmp.flush_outbuf.Clone56 = icmp eq i32 %319, 0
  br i1 %cmp.flush_outbuf.Clone56, label %if.then.flush_outbuf.Clone57, label %if.end.flush_outbuf.Clone58

if.then.flush_outbuf.Clone57:                     ; preds = %entry.flush_outbuf.Clone55
  br label %return.flush_outbuf.Clone60

if.end.flush_outbuf.Clone58:                      ; preds = %entry.flush_outbuf.Clone55
  %320 = load i32, i32* @outcnt, align 4
  %321 = load i32, i32* @ofd, align 4
  br label %entry.write_buf.Clone214

entry.write_buf.Clone214:                         ; preds = %if.end.flush_outbuf.Clone58
  %cnt.addr.write_buf.Clone215 = alloca i32, align 4
  %buf.addr.write_buf.Clone216 = alloca i8*, align 4
  %fd.addr.write_buf.Clone217 = alloca i32, align 4
  %n.write_buf.Clone218 = alloca i32, align 4
  store i32 %320, i32* %cnt.addr.write_buf.Clone215, align 4
  store i8* getelementptr inbounds ([18432 x i8], [18432 x i8]* @outbuf, i32 0, i32 0), i8** %buf.addr.write_buf.Clone216, align 4
  store i32 %321, i32* %fd.addr.write_buf.Clone217, align 4
  br label %while.cond.write_buf.Clone219

while.cond.write_buf.Clone219:                    ; preds = %if.end.write_buf.Clone225, %entry.write_buf.Clone214
  %322 = load i32, i32* %cnt.addr.write_buf.Clone215, align 4
  %323 = load i8*, i8** %buf.addr.write_buf.Clone216, align 4
  %324 = load i32, i32* %fd.addr.write_buf.Clone217, align 4
  br label %entry.spec_write.Clone660

entry.spec_write.Clone660:                        ; preds = %while.cond.write_buf.Clone219
  %size.addr.spec_write.Clone661 = alloca i32, align 4
  %buf.addr.spec_write.Clone662 = alloca i8*, align 4
  %fd.addr.spec_write.Clone663 = alloca i32, align 4
  store i32 %322, i32* %size.addr.spec_write.Clone661, align 4
  store i8* %323, i8** %buf.addr.spec_write.Clone662, align 4
  store i32 %324, i32* %fd.addr.spec_write.Clone663, align 4
  %325 = load i32, i32* @dbglvl, align 4
  %cmp.spec_write.Clone664 = icmp slt i32 4, %325
  br i1 %cmp.spec_write.Clone664, label %if.then.spec_write.Clone665, label %if.end.spec_write.Clone667

if.then.spec_write.Clone665:                      ; preds = %entry.spec_write.Clone660
  %326 = load i32, i32* %size.addr.spec_write.Clone661, align 4
  %327 = load i8*, i8** %buf.addr.spec_write.Clone662, align 4
  %328 = load i32, i32* %fd.addr.spec_write.Clone663, align 4
  %call.spec_write.Clone666 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @"??_C@_0BK@GKFGHPHN@spec_write?3?5?$CFd?0?5?$CFx?0?5?$CFd?5?$DN?5?$AA@", i32 0, i32 0), i32 %328, i8* %327, i32 %326)
  br label %if.end.spec_write.Clone667

if.end.spec_write.Clone667:                       ; preds = %if.then.spec_write.Clone665, %entry.spec_write.Clone660
  %329 = load i32, i32* %fd.addr.spec_write.Clone663, align 4
  %cmp1.spec_write.Clone668 = icmp sgt i32 %329, 3
  br i1 %cmp1.spec_write.Clone668, label %if.then2.spec_write.Clone669, label %if.end5.spec_write.Clone673

if.then2.spec_write.Clone669:                     ; preds = %if.end.spec_write.Clone667
  %330 = load i32, i32* %fd.addr.spec_write.Clone663, align 4
  %call3.spec_write.Clone670 = call %struct._iobuf* @__iob_func()
  %arrayidx.spec_write.Clone671 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.spec_write.Clone670, i32 2
  %call4.spec_write.Clone672 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.spec_write.Clone671, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"??_C@_0CD@NANFEFEM@spec_write?3?5fd?$DN?$CFd?0?5?$DO?5MAX_SPEC_FD@", i32 0, i32 0), i32 %330)
  call void @exit(i32 1) #7
  unreachable

if.end5.spec_write.Clone673:                      ; preds = %if.end.spec_write.Clone667
  %331 = load i32, i32* %fd.addr.spec_write.Clone663, align 4
  %arrayidx6.spec_write.Clone674 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %331
  %buf7.spec_write.Clone675 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx6.spec_write.Clone674, i32 0, i32 3
  %332 = load i8*, i8** %buf7.spec_write.Clone675, align 4
  %333 = load i32, i32* %fd.addr.spec_write.Clone663, align 4
  %arrayidx8.spec_write.Clone676 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %333
  %pos.spec_write.Clone677 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx8.spec_write.Clone676, i32 0, i32 2
  %334 = load i32, i32* %pos.spec_write.Clone677, align 4
  %arrayidx9.spec_write.Clone678 = getelementptr inbounds i8, i8* %332, i32 %334
  %335 = load i8*, i8** %buf.addr.spec_write.Clone662, align 4
  %336 = load i32, i32* %size.addr.spec_write.Clone661, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %arrayidx9.spec_write.Clone678, i8* align 1 %335, i32 %336, i1 false)
  %337 = load i32, i32* %size.addr.spec_write.Clone661, align 4
  %338 = load i32, i32* %fd.addr.spec_write.Clone663, align 4
  %arrayidx10.spec_write.Clone679 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %338
  %len.spec_write.Clone680 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx10.spec_write.Clone679, i32 0, i32 1
  %339 = load i32, i32* %len.spec_write.Clone680, align 4
  %add.spec_write.Clone681 = add nsw i32 %339, %337
  store i32 %add.spec_write.Clone681, i32* %len.spec_write.Clone680, align 4
  %340 = load i32, i32* %size.addr.spec_write.Clone661, align 4
  %341 = load i32, i32* %fd.addr.spec_write.Clone663, align 4
  %arrayidx11.spec_write.Clone682 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %341
  %pos12.spec_write.Clone683 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx11.spec_write.Clone682, i32 0, i32 2
  %342 = load i32, i32* %pos12.spec_write.Clone683, align 4
  %add13.spec_write.Clone684 = add nsw i32 %342, %340
  store i32 %add13.spec_write.Clone684, i32* %pos12.spec_write.Clone683, align 4
  %343 = load i32, i32* @dbglvl, align 4
  %cmp14.spec_write.Clone685 = icmp slt i32 4, %343
  br i1 %cmp14.spec_write.Clone685, label %if.then15.spec_write.Clone686, label %if.end17.spec_write.Clone688

if.then15.spec_write.Clone686:                    ; preds = %if.end5.spec_write.Clone673
  %344 = load i32, i32* %size.addr.spec_write.Clone661, align 4
  %call16.spec_write.Clone687 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"??_C@_03PMGGPEJJ@?$CFd?6?$AA@", i32 0, i32 0), i32 %344)
  br label %if.end17.spec_write.Clone688

if.end17.spec_write.Clone688:                     ; preds = %if.then15.spec_write.Clone686, %if.end5.spec_write.Clone673
  %345 = load i32, i32* %size.addr.spec_write.Clone661, align 4
  store i32 %345, i32* %RetValuePtr689
  br label %while.cond.write_buf.Clone219.Split

while.cond.write_buf.Clone219.Split:              ; preds = %if.end17.spec_write.Clone688
  %RetValue690 = load i32, i32* %RetValuePtr689
  store i32 %RetValue690, i32* %n.write_buf.Clone218, align 4
  %346 = load i32, i32* %cnt.addr.write_buf.Clone215, align 4
  %cmp.write_buf.Clone221 = icmp ne i32 %RetValue690, %346
  br i1 %cmp.write_buf.Clone221, label %while.body.write_buf.Clone222, label %while.end.write_buf.Clone228

while.body.write_buf.Clone222:                    ; preds = %while.cond.write_buf.Clone219.Split
  %347 = load i32, i32* %n.write_buf.Clone218, align 4
  %cmp1.write_buf.Clone223 = icmp eq i32 %347, -1
  br i1 %cmp1.write_buf.Clone223, label %if.then.write_buf.Clone224, label %if.end.write_buf.Clone225

if.then.write_buf.Clone224:                       ; preds = %while.body.write_buf.Clone222
  call void @write_error()
  br label %if.end.write_buf.Clone225

if.end.write_buf.Clone225:                        ; preds = %if.then.write_buf.Clone224, %while.body.write_buf.Clone222
  %348 = load i32, i32* %n.write_buf.Clone218, align 4
  %349 = load i32, i32* %cnt.addr.write_buf.Clone215, align 4
  %sub.write_buf.Clone226 = sub i32 %349, %348
  store i32 %sub.write_buf.Clone226, i32* %cnt.addr.write_buf.Clone215, align 4
  %350 = load i8*, i8** %buf.addr.write_buf.Clone216, align 4
  %351 = load i32, i32* %n.write_buf.Clone218, align 4
  %add.ptr.write_buf.Clone227 = getelementptr inbounds i8, i8* %350, i32 %351
  store i8* %add.ptr.write_buf.Clone227, i8** %buf.addr.write_buf.Clone216, align 4
  br label %while.cond.write_buf.Clone219

while.end.write_buf.Clone228:                     ; preds = %while.cond.write_buf.Clone219.Split
  br label %if.end.flush_outbuf.Clone58.Split

if.end.flush_outbuf.Clone58.Split:                ; preds = %while.end.write_buf.Clone228
  %352 = load i32, i32* @outcnt, align 4
  %353 = load i32, i32* @bytes_out, align 4
  %add.flush_outbuf.Clone59 = add i32 %353, %352
  store i32 %add.flush_outbuf.Clone59, i32* @bytes_out, align 4
  store i32 0, i32* @outcnt, align 4
  br label %return.flush_outbuf.Clone60

return.flush_outbuf.Clone60:                      ; preds = %if.end.flush_outbuf.Clone58.Split, %if.then.flush_outbuf.Clone57
  br label %if.then102.Split

if.then102.Split:                                 ; preds = %return.flush_outbuf.Clone60
  br label %if.end103

if.end103:                                        ; preds = %if.then102.Split, %new
  %354 = load i32, i32* @save_orig_name, align 4
  %tobool104 = icmp ne i32 %354, 0
  br i1 %tobool104, label %if.then105, label %if.end114

if.then105:                                       ; preds = %if.end103
  br label %entry.gzipbasename.Clone

entry.gzipbasename.Clone:                         ; preds = %if.then105
  %fname.addr.gzipbasename.Clone = alloca i8*, align 4
  %p.gzipbasename.Clone = alloca i8*, align 4
  store i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0), i8** %fname.addr.gzipbasename.Clone, align 4
  %355 = load i8*, i8** %fname.addr.gzipbasename.Clone, align 4
  %call.gzipbasename.Clone = call i8* @strrchr(i8* %355, i32 47)
  store i8* %call.gzipbasename.Clone, i8** %p.gzipbasename.Clone, align 4
  %cmp.gzipbasename.Clone = icmp ne i8* %call.gzipbasename.Clone, null
  br i1 %cmp.gzipbasename.Clone, label %if.then.gzipbasename.Clone, label %if.end.gzipbasename.Clone

if.then.gzipbasename.Clone:                       ; preds = %entry.gzipbasename.Clone
  %356 = load i8*, i8** %p.gzipbasename.Clone, align 4
  %add.ptr.gzipbasename.Clone = getelementptr inbounds i8, i8* %356, i32 1
  store i8* %add.ptr.gzipbasename.Clone, i8** %fname.addr.gzipbasename.Clone, align 4
  br label %if.end.gzipbasename.Clone

if.end.gzipbasename.Clone:                        ; preds = %if.then.gzipbasename.Clone, %entry.gzipbasename.Clone
  %357 = load i8*, i8** %fname.addr.gzipbasename.Clone, align 4
  store i8* %357, i8** %RetValuePtr
  br label %if.then105.Split

if.then105.Split:                                 ; preds = %if.end.gzipbasename.Clone
  %RetValue = load i8*, i8** %RetValuePtr
  store i8* %RetValue, i8** %p, align 4
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then105.Split
  %358 = load i8*, i8** %p, align 4
  %359 = load i8, i8* %358, align 1
  %360 = load i32, i32* @outcnt, align 4
  %inc107 = add i32 %360, 1
  store i32 %inc107, i32* @outcnt, align 4
  %arrayidx108 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i32 0, i32 %360
  store i8 %359, i8* %arrayidx108, align 1
  %361 = load i32, i32* @outcnt, align 4
  %cmp109 = icmp eq i32 %361, 16384
  br i1 %cmp109, label %if.then111, label %if.end112

if.then111:                                       ; preds = %do.body
  br label %entry.flush_outbuf.Clone49

entry.flush_outbuf.Clone49:                       ; preds = %if.then111
  %362 = load i32, i32* @outcnt, align 4
  %cmp.flush_outbuf.Clone50 = icmp eq i32 %362, 0
  br i1 %cmp.flush_outbuf.Clone50, label %if.then.flush_outbuf.Clone51, label %if.end.flush_outbuf.Clone52

if.then.flush_outbuf.Clone51:                     ; preds = %entry.flush_outbuf.Clone49
  br label %return.flush_outbuf.Clone54

if.end.flush_outbuf.Clone52:                      ; preds = %entry.flush_outbuf.Clone49
  %363 = load i32, i32* @outcnt, align 4
  %364 = load i32, i32* @ofd, align 4
  br label %entry.write_buf.Clone229

entry.write_buf.Clone229:                         ; preds = %if.end.flush_outbuf.Clone52
  %cnt.addr.write_buf.Clone230 = alloca i32, align 4
  %buf.addr.write_buf.Clone231 = alloca i8*, align 4
  %fd.addr.write_buf.Clone232 = alloca i32, align 4
  %n.write_buf.Clone233 = alloca i32, align 4
  store i32 %363, i32* %cnt.addr.write_buf.Clone230, align 4
  store i8* getelementptr inbounds ([18432 x i8], [18432 x i8]* @outbuf, i32 0, i32 0), i8** %buf.addr.write_buf.Clone231, align 4
  store i32 %364, i32* %fd.addr.write_buf.Clone232, align 4
  br label %while.cond.write_buf.Clone234

while.cond.write_buf.Clone234:                    ; preds = %if.end.write_buf.Clone240, %entry.write_buf.Clone229
  %365 = load i32, i32* %cnt.addr.write_buf.Clone230, align 4
  %366 = load i8*, i8** %buf.addr.write_buf.Clone231, align 4
  %367 = load i32, i32* %fd.addr.write_buf.Clone232, align 4
  br label %entry.spec_write.Clone629

entry.spec_write.Clone629:                        ; preds = %while.cond.write_buf.Clone234
  %size.addr.spec_write.Clone630 = alloca i32, align 4
  %buf.addr.spec_write.Clone631 = alloca i8*, align 4
  %fd.addr.spec_write.Clone632 = alloca i32, align 4
  store i32 %365, i32* %size.addr.spec_write.Clone630, align 4
  store i8* %366, i8** %buf.addr.spec_write.Clone631, align 4
  store i32 %367, i32* %fd.addr.spec_write.Clone632, align 4
  %368 = load i32, i32* @dbglvl, align 4
  %cmp.spec_write.Clone633 = icmp slt i32 4, %368
  br i1 %cmp.spec_write.Clone633, label %if.then.spec_write.Clone634, label %if.end.spec_write.Clone636

if.then.spec_write.Clone634:                      ; preds = %entry.spec_write.Clone629
  %369 = load i32, i32* %size.addr.spec_write.Clone630, align 4
  %370 = load i8*, i8** %buf.addr.spec_write.Clone631, align 4
  %371 = load i32, i32* %fd.addr.spec_write.Clone632, align 4
  %call.spec_write.Clone635 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @"??_C@_0BK@GKFGHPHN@spec_write?3?5?$CFd?0?5?$CFx?0?5?$CFd?5?$DN?5?$AA@", i32 0, i32 0), i32 %371, i8* %370, i32 %369)
  br label %if.end.spec_write.Clone636

if.end.spec_write.Clone636:                       ; preds = %if.then.spec_write.Clone634, %entry.spec_write.Clone629
  %372 = load i32, i32* %fd.addr.spec_write.Clone632, align 4
  %cmp1.spec_write.Clone637 = icmp sgt i32 %372, 3
  br i1 %cmp1.spec_write.Clone637, label %if.then2.spec_write.Clone638, label %if.end5.spec_write.Clone642

if.then2.spec_write.Clone638:                     ; preds = %if.end.spec_write.Clone636
  %373 = load i32, i32* %fd.addr.spec_write.Clone632, align 4
  %call3.spec_write.Clone639 = call %struct._iobuf* @__iob_func()
  %arrayidx.spec_write.Clone640 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.spec_write.Clone639, i32 2
  %call4.spec_write.Clone641 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.spec_write.Clone640, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"??_C@_0CD@NANFEFEM@spec_write?3?5fd?$DN?$CFd?0?5?$DO?5MAX_SPEC_FD@", i32 0, i32 0), i32 %373)
  call void @exit(i32 1) #7
  unreachable

if.end5.spec_write.Clone642:                      ; preds = %if.end.spec_write.Clone636
  %374 = load i32, i32* %fd.addr.spec_write.Clone632, align 4
  %arrayidx6.spec_write.Clone643 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %374
  %buf7.spec_write.Clone644 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx6.spec_write.Clone643, i32 0, i32 3
  %375 = load i8*, i8** %buf7.spec_write.Clone644, align 4
  %376 = load i32, i32* %fd.addr.spec_write.Clone632, align 4
  %arrayidx8.spec_write.Clone645 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %376
  %pos.spec_write.Clone646 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx8.spec_write.Clone645, i32 0, i32 2
  %377 = load i32, i32* %pos.spec_write.Clone646, align 4
  %arrayidx9.spec_write.Clone647 = getelementptr inbounds i8, i8* %375, i32 %377
  %378 = load i8*, i8** %buf.addr.spec_write.Clone631, align 4
  %379 = load i32, i32* %size.addr.spec_write.Clone630, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %arrayidx9.spec_write.Clone647, i8* align 1 %378, i32 %379, i1 false)
  %380 = load i32, i32* %size.addr.spec_write.Clone630, align 4
  %381 = load i32, i32* %fd.addr.spec_write.Clone632, align 4
  %arrayidx10.spec_write.Clone648 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %381
  %len.spec_write.Clone649 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx10.spec_write.Clone648, i32 0, i32 1
  %382 = load i32, i32* %len.spec_write.Clone649, align 4
  %add.spec_write.Clone650 = add nsw i32 %382, %380
  store i32 %add.spec_write.Clone650, i32* %len.spec_write.Clone649, align 4
  %383 = load i32, i32* %size.addr.spec_write.Clone630, align 4
  %384 = load i32, i32* %fd.addr.spec_write.Clone632, align 4
  %arrayidx11.spec_write.Clone651 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %384
  %pos12.spec_write.Clone652 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx11.spec_write.Clone651, i32 0, i32 2
  %385 = load i32, i32* %pos12.spec_write.Clone652, align 4
  %add13.spec_write.Clone653 = add nsw i32 %385, %383
  store i32 %add13.spec_write.Clone653, i32* %pos12.spec_write.Clone652, align 4
  %386 = load i32, i32* @dbglvl, align 4
  %cmp14.spec_write.Clone654 = icmp slt i32 4, %386
  br i1 %cmp14.spec_write.Clone654, label %if.then15.spec_write.Clone655, label %if.end17.spec_write.Clone657

if.then15.spec_write.Clone655:                    ; preds = %if.end5.spec_write.Clone642
  %387 = load i32, i32* %size.addr.spec_write.Clone630, align 4
  %call16.spec_write.Clone656 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"??_C@_03PMGGPEJJ@?$CFd?6?$AA@", i32 0, i32 0), i32 %387)
  br label %if.end17.spec_write.Clone657

if.end17.spec_write.Clone657:                     ; preds = %if.then15.spec_write.Clone655, %if.end5.spec_write.Clone642
  %388 = load i32, i32* %size.addr.spec_write.Clone630, align 4
  store i32 %388, i32* %RetValuePtr658
  br label %while.cond.write_buf.Clone234.Split

while.cond.write_buf.Clone234.Split:              ; preds = %if.end17.spec_write.Clone657
  %RetValue659 = load i32, i32* %RetValuePtr658
  store i32 %RetValue659, i32* %n.write_buf.Clone233, align 4
  %389 = load i32, i32* %cnt.addr.write_buf.Clone230, align 4
  %cmp.write_buf.Clone236 = icmp ne i32 %RetValue659, %389
  br i1 %cmp.write_buf.Clone236, label %while.body.write_buf.Clone237, label %while.end.write_buf.Clone243

while.body.write_buf.Clone237:                    ; preds = %while.cond.write_buf.Clone234.Split
  %390 = load i32, i32* %n.write_buf.Clone233, align 4
  %cmp1.write_buf.Clone238 = icmp eq i32 %390, -1
  br i1 %cmp1.write_buf.Clone238, label %if.then.write_buf.Clone239, label %if.end.write_buf.Clone240

if.then.write_buf.Clone239:                       ; preds = %while.body.write_buf.Clone237
  call void @write_error()
  br label %if.end.write_buf.Clone240

if.end.write_buf.Clone240:                        ; preds = %if.then.write_buf.Clone239, %while.body.write_buf.Clone237
  %391 = load i32, i32* %n.write_buf.Clone233, align 4
  %392 = load i32, i32* %cnt.addr.write_buf.Clone230, align 4
  %sub.write_buf.Clone241 = sub i32 %392, %391
  store i32 %sub.write_buf.Clone241, i32* %cnt.addr.write_buf.Clone230, align 4
  %393 = load i8*, i8** %buf.addr.write_buf.Clone231, align 4
  %394 = load i32, i32* %n.write_buf.Clone233, align 4
  %add.ptr.write_buf.Clone242 = getelementptr inbounds i8, i8* %393, i32 %394
  store i8* %add.ptr.write_buf.Clone242, i8** %buf.addr.write_buf.Clone231, align 4
  br label %while.cond.write_buf.Clone234

while.end.write_buf.Clone243:                     ; preds = %while.cond.write_buf.Clone234.Split
  br label %if.end.flush_outbuf.Clone52.Split

if.end.flush_outbuf.Clone52.Split:                ; preds = %while.end.write_buf.Clone243
  %395 = load i32, i32* @outcnt, align 4
  %396 = load i32, i32* @bytes_out, align 4
  %add.flush_outbuf.Clone53 = add i32 %396, %395
  store i32 %add.flush_outbuf.Clone53, i32* @bytes_out, align 4
  store i32 0, i32* @outcnt, align 4
  br label %return.flush_outbuf.Clone54

return.flush_outbuf.Clone54:                      ; preds = %if.end.flush_outbuf.Clone52.Split, %if.then.flush_outbuf.Clone51
  br label %if.then111.Split

if.then111.Split:                                 ; preds = %return.flush_outbuf.Clone54
  br label %if.end112

if.end112:                                        ; preds = %if.then111.Split, %do.body
  br label %do.cond

do.cond:                                          ; preds = %if.end112
  %397 = load i8*, i8** %p, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %397, i32 1
  store i8* %incdec.ptr, i8** %p, align 4
  %398 = load i8, i8* %397, align 1
  %tobool113 = icmp ne i8 %398, 0
  br i1 %tobool113, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end114

if.end114:                                        ; preds = %do.end, %if.end103
  %399 = load i32, i32* @outcnt, align 4
  store i32 %399, i32* @header_bytes, align 4
  %call115 = call i32 @deflate()
  %400 = load i32, i32* @outcnt, align 4
  %cmp116 = icmp ult i32 %400, 16382
  br i1 %cmp116, label %if.then118, label %if.else131

if.then118:                                       ; preds = %if.end114
  %401 = load i32, i32* @crc, align 4
  %and119 = and i32 %401, 65535
  %and120 = and i32 %and119, 255
  %conv121 = trunc i32 %and120 to i8
  %402 = load i32, i32* @outcnt, align 4
  %inc122 = add i32 %402, 1
  store i32 %inc122, i32* @outcnt, align 4
  %arrayidx123 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i32 0, i32 %402
  store i8 %conv121, i8* %arrayidx123, align 1
  %403 = load i32, i32* @crc, align 4
  %and124 = and i32 %403, 65535
  %conv125 = trunc i32 %and124 to i16
  %conv126 = zext i16 %conv125 to i32
  %shr127 = ashr i32 %conv126, 8
  %conv128 = trunc i32 %shr127 to i8
  %404 = load i32, i32* @outcnt, align 4
  %inc129 = add i32 %404, 1
  store i32 %inc129, i32* @outcnt, align 4
  %arrayidx130 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i32 0, i32 %404
  store i8 %conv128, i8* %arrayidx130, align 1
  br label %if.end152

if.else131:                                       ; preds = %if.end114
  %405 = load i32, i32* @crc, align 4
  %and132 = and i32 %405, 65535
  %and133 = and i32 %and132, 255
  %conv134 = trunc i32 %and133 to i8
  %406 = load i32, i32* @outcnt, align 4
  %inc135 = add i32 %406, 1
  store i32 %inc135, i32* @outcnt, align 4
  %arrayidx136 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i32 0, i32 %406
  store i8 %conv134, i8* %arrayidx136, align 1
  %407 = load i32, i32* @outcnt, align 4
  %cmp137 = icmp eq i32 %407, 16384
  br i1 %cmp137, label %if.then139, label %if.end140

if.then139:                                       ; preds = %if.else131
  br label %entry.flush_outbuf.Clone43

entry.flush_outbuf.Clone43:                       ; preds = %if.then139
  %408 = load i32, i32* @outcnt, align 4
  %cmp.flush_outbuf.Clone44 = icmp eq i32 %408, 0
  br i1 %cmp.flush_outbuf.Clone44, label %if.then.flush_outbuf.Clone45, label %if.end.flush_outbuf.Clone46

if.then.flush_outbuf.Clone45:                     ; preds = %entry.flush_outbuf.Clone43
  br label %return.flush_outbuf.Clone48

if.end.flush_outbuf.Clone46:                      ; preds = %entry.flush_outbuf.Clone43
  %409 = load i32, i32* @outcnt, align 4
  %410 = load i32, i32* @ofd, align 4
  br label %entry.write_buf.Clone244

entry.write_buf.Clone244:                         ; preds = %if.end.flush_outbuf.Clone46
  %cnt.addr.write_buf.Clone245 = alloca i32, align 4
  %buf.addr.write_buf.Clone246 = alloca i8*, align 4
  %fd.addr.write_buf.Clone247 = alloca i32, align 4
  %n.write_buf.Clone248 = alloca i32, align 4
  store i32 %409, i32* %cnt.addr.write_buf.Clone245, align 4
  store i8* getelementptr inbounds ([18432 x i8], [18432 x i8]* @outbuf, i32 0, i32 0), i8** %buf.addr.write_buf.Clone246, align 4
  store i32 %410, i32* %fd.addr.write_buf.Clone247, align 4
  br label %while.cond.write_buf.Clone249

while.cond.write_buf.Clone249:                    ; preds = %if.end.write_buf.Clone255, %entry.write_buf.Clone244
  %411 = load i32, i32* %cnt.addr.write_buf.Clone245, align 4
  %412 = load i8*, i8** %buf.addr.write_buf.Clone246, align 4
  %413 = load i32, i32* %fd.addr.write_buf.Clone247, align 4
  br label %entry.spec_write.Clone598

entry.spec_write.Clone598:                        ; preds = %while.cond.write_buf.Clone249
  %size.addr.spec_write.Clone599 = alloca i32, align 4
  %buf.addr.spec_write.Clone600 = alloca i8*, align 4
  %fd.addr.spec_write.Clone601 = alloca i32, align 4
  store i32 %411, i32* %size.addr.spec_write.Clone599, align 4
  store i8* %412, i8** %buf.addr.spec_write.Clone600, align 4
  store i32 %413, i32* %fd.addr.spec_write.Clone601, align 4
  %414 = load i32, i32* @dbglvl, align 4
  %cmp.spec_write.Clone602 = icmp slt i32 4, %414
  br i1 %cmp.spec_write.Clone602, label %if.then.spec_write.Clone603, label %if.end.spec_write.Clone605

if.then.spec_write.Clone603:                      ; preds = %entry.spec_write.Clone598
  %415 = load i32, i32* %size.addr.spec_write.Clone599, align 4
  %416 = load i8*, i8** %buf.addr.spec_write.Clone600, align 4
  %417 = load i32, i32* %fd.addr.spec_write.Clone601, align 4
  %call.spec_write.Clone604 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @"??_C@_0BK@GKFGHPHN@spec_write?3?5?$CFd?0?5?$CFx?0?5?$CFd?5?$DN?5?$AA@", i32 0, i32 0), i32 %417, i8* %416, i32 %415)
  br label %if.end.spec_write.Clone605

if.end.spec_write.Clone605:                       ; preds = %if.then.spec_write.Clone603, %entry.spec_write.Clone598
  %418 = load i32, i32* %fd.addr.spec_write.Clone601, align 4
  %cmp1.spec_write.Clone606 = icmp sgt i32 %418, 3
  br i1 %cmp1.spec_write.Clone606, label %if.then2.spec_write.Clone607, label %if.end5.spec_write.Clone611

if.then2.spec_write.Clone607:                     ; preds = %if.end.spec_write.Clone605
  %419 = load i32, i32* %fd.addr.spec_write.Clone601, align 4
  %call3.spec_write.Clone608 = call %struct._iobuf* @__iob_func()
  %arrayidx.spec_write.Clone609 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.spec_write.Clone608, i32 2
  %call4.spec_write.Clone610 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.spec_write.Clone609, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"??_C@_0CD@NANFEFEM@spec_write?3?5fd?$DN?$CFd?0?5?$DO?5MAX_SPEC_FD@", i32 0, i32 0), i32 %419)
  call void @exit(i32 1) #7
  unreachable

if.end5.spec_write.Clone611:                      ; preds = %if.end.spec_write.Clone605
  %420 = load i32, i32* %fd.addr.spec_write.Clone601, align 4
  %arrayidx6.spec_write.Clone612 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %420
  %buf7.spec_write.Clone613 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx6.spec_write.Clone612, i32 0, i32 3
  %421 = load i8*, i8** %buf7.spec_write.Clone613, align 4
  %422 = load i32, i32* %fd.addr.spec_write.Clone601, align 4
  %arrayidx8.spec_write.Clone614 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %422
  %pos.spec_write.Clone615 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx8.spec_write.Clone614, i32 0, i32 2
  %423 = load i32, i32* %pos.spec_write.Clone615, align 4
  %arrayidx9.spec_write.Clone616 = getelementptr inbounds i8, i8* %421, i32 %423
  %424 = load i8*, i8** %buf.addr.spec_write.Clone600, align 4
  %425 = load i32, i32* %size.addr.spec_write.Clone599, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %arrayidx9.spec_write.Clone616, i8* align 1 %424, i32 %425, i1 false)
  %426 = load i32, i32* %size.addr.spec_write.Clone599, align 4
  %427 = load i32, i32* %fd.addr.spec_write.Clone601, align 4
  %arrayidx10.spec_write.Clone617 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %427
  %len.spec_write.Clone618 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx10.spec_write.Clone617, i32 0, i32 1
  %428 = load i32, i32* %len.spec_write.Clone618, align 4
  %add.spec_write.Clone619 = add nsw i32 %428, %426
  store i32 %add.spec_write.Clone619, i32* %len.spec_write.Clone618, align 4
  %429 = load i32, i32* %size.addr.spec_write.Clone599, align 4
  %430 = load i32, i32* %fd.addr.spec_write.Clone601, align 4
  %arrayidx11.spec_write.Clone620 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %430
  %pos12.spec_write.Clone621 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx11.spec_write.Clone620, i32 0, i32 2
  %431 = load i32, i32* %pos12.spec_write.Clone621, align 4
  %add13.spec_write.Clone622 = add nsw i32 %431, %429
  store i32 %add13.spec_write.Clone622, i32* %pos12.spec_write.Clone621, align 4
  %432 = load i32, i32* @dbglvl, align 4
  %cmp14.spec_write.Clone623 = icmp slt i32 4, %432
  br i1 %cmp14.spec_write.Clone623, label %if.then15.spec_write.Clone624, label %if.end17.spec_write.Clone626

if.then15.spec_write.Clone624:                    ; preds = %if.end5.spec_write.Clone611
  %433 = load i32, i32* %size.addr.spec_write.Clone599, align 4
  %call16.spec_write.Clone625 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"??_C@_03PMGGPEJJ@?$CFd?6?$AA@", i32 0, i32 0), i32 %433)
  br label %if.end17.spec_write.Clone626

if.end17.spec_write.Clone626:                     ; preds = %if.then15.spec_write.Clone624, %if.end5.spec_write.Clone611
  %434 = load i32, i32* %size.addr.spec_write.Clone599, align 4
  store i32 %434, i32* %RetValuePtr627
  br label %while.cond.write_buf.Clone249.Split

while.cond.write_buf.Clone249.Split:              ; preds = %if.end17.spec_write.Clone626
  %RetValue628 = load i32, i32* %RetValuePtr627
  store i32 %RetValue628, i32* %n.write_buf.Clone248, align 4
  %435 = load i32, i32* %cnt.addr.write_buf.Clone245, align 4
  %cmp.write_buf.Clone251 = icmp ne i32 %RetValue628, %435
  br i1 %cmp.write_buf.Clone251, label %while.body.write_buf.Clone252, label %while.end.write_buf.Clone258

while.body.write_buf.Clone252:                    ; preds = %while.cond.write_buf.Clone249.Split
  %436 = load i32, i32* %n.write_buf.Clone248, align 4
  %cmp1.write_buf.Clone253 = icmp eq i32 %436, -1
  br i1 %cmp1.write_buf.Clone253, label %if.then.write_buf.Clone254, label %if.end.write_buf.Clone255

if.then.write_buf.Clone254:                       ; preds = %while.body.write_buf.Clone252
  call void @write_error()
  br label %if.end.write_buf.Clone255

if.end.write_buf.Clone255:                        ; preds = %if.then.write_buf.Clone254, %while.body.write_buf.Clone252
  %437 = load i32, i32* %n.write_buf.Clone248, align 4
  %438 = load i32, i32* %cnt.addr.write_buf.Clone245, align 4
  %sub.write_buf.Clone256 = sub i32 %438, %437
  store i32 %sub.write_buf.Clone256, i32* %cnt.addr.write_buf.Clone245, align 4
  %439 = load i8*, i8** %buf.addr.write_buf.Clone246, align 4
  %440 = load i32, i32* %n.write_buf.Clone248, align 4
  %add.ptr.write_buf.Clone257 = getelementptr inbounds i8, i8* %439, i32 %440
  store i8* %add.ptr.write_buf.Clone257, i8** %buf.addr.write_buf.Clone246, align 4
  br label %while.cond.write_buf.Clone249

while.end.write_buf.Clone258:                     ; preds = %while.cond.write_buf.Clone249.Split
  br label %if.end.flush_outbuf.Clone46.Split

if.end.flush_outbuf.Clone46.Split:                ; preds = %while.end.write_buf.Clone258
  %441 = load i32, i32* @outcnt, align 4
  %442 = load i32, i32* @bytes_out, align 4
  %add.flush_outbuf.Clone47 = add i32 %442, %441
  store i32 %add.flush_outbuf.Clone47, i32* @bytes_out, align 4
  store i32 0, i32* @outcnt, align 4
  br label %return.flush_outbuf.Clone48

return.flush_outbuf.Clone48:                      ; preds = %if.end.flush_outbuf.Clone46.Split, %if.then.flush_outbuf.Clone45
  br label %if.then139.Split

if.then139.Split:                                 ; preds = %return.flush_outbuf.Clone48
  br label %if.end140

if.end140:                                        ; preds = %if.then139.Split, %if.else131
  %443 = load i32, i32* @crc, align 4
  %and141 = and i32 %443, 65535
  %conv142 = trunc i32 %and141 to i16
  %conv143 = zext i16 %conv142 to i32
  %shr144 = ashr i32 %conv143, 8
  %conv145 = trunc i32 %shr144 to i8
  %444 = load i32, i32* @outcnt, align 4
  %inc146 = add i32 %444, 1
  store i32 %inc146, i32* @outcnt, align 4
  %arrayidx147 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i32 0, i32 %444
  store i8 %conv145, i8* %arrayidx147, align 1
  %445 = load i32, i32* @outcnt, align 4
  %cmp148 = icmp eq i32 %445, 16384
  br i1 %cmp148, label %if.then150, label %if.end151

if.then150:                                       ; preds = %if.end140
  br label %entry.flush_outbuf.Clone37

entry.flush_outbuf.Clone37:                       ; preds = %if.then150
  %446 = load i32, i32* @outcnt, align 4
  %cmp.flush_outbuf.Clone38 = icmp eq i32 %446, 0
  br i1 %cmp.flush_outbuf.Clone38, label %if.then.flush_outbuf.Clone39, label %if.end.flush_outbuf.Clone40

if.then.flush_outbuf.Clone39:                     ; preds = %entry.flush_outbuf.Clone37
  br label %return.flush_outbuf.Clone42

if.end.flush_outbuf.Clone40:                      ; preds = %entry.flush_outbuf.Clone37
  %447 = load i32, i32* @outcnt, align 4
  %448 = load i32, i32* @ofd, align 4
  br label %entry.write_buf.Clone259

entry.write_buf.Clone259:                         ; preds = %if.end.flush_outbuf.Clone40
  %cnt.addr.write_buf.Clone260 = alloca i32, align 4
  %buf.addr.write_buf.Clone261 = alloca i8*, align 4
  %fd.addr.write_buf.Clone262 = alloca i32, align 4
  %n.write_buf.Clone263 = alloca i32, align 4
  store i32 %447, i32* %cnt.addr.write_buf.Clone260, align 4
  store i8* getelementptr inbounds ([18432 x i8], [18432 x i8]* @outbuf, i32 0, i32 0), i8** %buf.addr.write_buf.Clone261, align 4
  store i32 %448, i32* %fd.addr.write_buf.Clone262, align 4
  br label %while.cond.write_buf.Clone264

while.cond.write_buf.Clone264:                    ; preds = %if.end.write_buf.Clone270, %entry.write_buf.Clone259
  %449 = load i32, i32* %cnt.addr.write_buf.Clone260, align 4
  %450 = load i8*, i8** %buf.addr.write_buf.Clone261, align 4
  %451 = load i32, i32* %fd.addr.write_buf.Clone262, align 4
  br label %entry.spec_write.Clone567

entry.spec_write.Clone567:                        ; preds = %while.cond.write_buf.Clone264
  %size.addr.spec_write.Clone568 = alloca i32, align 4
  %buf.addr.spec_write.Clone569 = alloca i8*, align 4
  %fd.addr.spec_write.Clone570 = alloca i32, align 4
  store i32 %449, i32* %size.addr.spec_write.Clone568, align 4
  store i8* %450, i8** %buf.addr.spec_write.Clone569, align 4
  store i32 %451, i32* %fd.addr.spec_write.Clone570, align 4
  %452 = load i32, i32* @dbglvl, align 4
  %cmp.spec_write.Clone571 = icmp slt i32 4, %452
  br i1 %cmp.spec_write.Clone571, label %if.then.spec_write.Clone572, label %if.end.spec_write.Clone574

if.then.spec_write.Clone572:                      ; preds = %entry.spec_write.Clone567
  %453 = load i32, i32* %size.addr.spec_write.Clone568, align 4
  %454 = load i8*, i8** %buf.addr.spec_write.Clone569, align 4
  %455 = load i32, i32* %fd.addr.spec_write.Clone570, align 4
  %call.spec_write.Clone573 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @"??_C@_0BK@GKFGHPHN@spec_write?3?5?$CFd?0?5?$CFx?0?5?$CFd?5?$DN?5?$AA@", i32 0, i32 0), i32 %455, i8* %454, i32 %453)
  br label %if.end.spec_write.Clone574

if.end.spec_write.Clone574:                       ; preds = %if.then.spec_write.Clone572, %entry.spec_write.Clone567
  %456 = load i32, i32* %fd.addr.spec_write.Clone570, align 4
  %cmp1.spec_write.Clone575 = icmp sgt i32 %456, 3
  br i1 %cmp1.spec_write.Clone575, label %if.then2.spec_write.Clone576, label %if.end5.spec_write.Clone580

if.then2.spec_write.Clone576:                     ; preds = %if.end.spec_write.Clone574
  %457 = load i32, i32* %fd.addr.spec_write.Clone570, align 4
  %call3.spec_write.Clone577 = call %struct._iobuf* @__iob_func()
  %arrayidx.spec_write.Clone578 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.spec_write.Clone577, i32 2
  %call4.spec_write.Clone579 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.spec_write.Clone578, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"??_C@_0CD@NANFEFEM@spec_write?3?5fd?$DN?$CFd?0?5?$DO?5MAX_SPEC_FD@", i32 0, i32 0), i32 %457)
  call void @exit(i32 1) #7
  unreachable

if.end5.spec_write.Clone580:                      ; preds = %if.end.spec_write.Clone574
  %458 = load i32, i32* %fd.addr.spec_write.Clone570, align 4
  %arrayidx6.spec_write.Clone581 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %458
  %buf7.spec_write.Clone582 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx6.spec_write.Clone581, i32 0, i32 3
  %459 = load i8*, i8** %buf7.spec_write.Clone582, align 4
  %460 = load i32, i32* %fd.addr.spec_write.Clone570, align 4
  %arrayidx8.spec_write.Clone583 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %460
  %pos.spec_write.Clone584 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx8.spec_write.Clone583, i32 0, i32 2
  %461 = load i32, i32* %pos.spec_write.Clone584, align 4
  %arrayidx9.spec_write.Clone585 = getelementptr inbounds i8, i8* %459, i32 %461
  %462 = load i8*, i8** %buf.addr.spec_write.Clone569, align 4
  %463 = load i32, i32* %size.addr.spec_write.Clone568, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %arrayidx9.spec_write.Clone585, i8* align 1 %462, i32 %463, i1 false)
  %464 = load i32, i32* %size.addr.spec_write.Clone568, align 4
  %465 = load i32, i32* %fd.addr.spec_write.Clone570, align 4
  %arrayidx10.spec_write.Clone586 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %465
  %len.spec_write.Clone587 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx10.spec_write.Clone586, i32 0, i32 1
  %466 = load i32, i32* %len.spec_write.Clone587, align 4
  %add.spec_write.Clone588 = add nsw i32 %466, %464
  store i32 %add.spec_write.Clone588, i32* %len.spec_write.Clone587, align 4
  %467 = load i32, i32* %size.addr.spec_write.Clone568, align 4
  %468 = load i32, i32* %fd.addr.spec_write.Clone570, align 4
  %arrayidx11.spec_write.Clone589 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %468
  %pos12.spec_write.Clone590 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx11.spec_write.Clone589, i32 0, i32 2
  %469 = load i32, i32* %pos12.spec_write.Clone590, align 4
  %add13.spec_write.Clone591 = add nsw i32 %469, %467
  store i32 %add13.spec_write.Clone591, i32* %pos12.spec_write.Clone590, align 4
  %470 = load i32, i32* @dbglvl, align 4
  %cmp14.spec_write.Clone592 = icmp slt i32 4, %470
  br i1 %cmp14.spec_write.Clone592, label %if.then15.spec_write.Clone593, label %if.end17.spec_write.Clone595

if.then15.spec_write.Clone593:                    ; preds = %if.end5.spec_write.Clone580
  %471 = load i32, i32* %size.addr.spec_write.Clone568, align 4
  %call16.spec_write.Clone594 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"??_C@_03PMGGPEJJ@?$CFd?6?$AA@", i32 0, i32 0), i32 %471)
  br label %if.end17.spec_write.Clone595

if.end17.spec_write.Clone595:                     ; preds = %if.then15.spec_write.Clone593, %if.end5.spec_write.Clone580
  %472 = load i32, i32* %size.addr.spec_write.Clone568, align 4
  store i32 %472, i32* %RetValuePtr596
  br label %while.cond.write_buf.Clone264.Split

while.cond.write_buf.Clone264.Split:              ; preds = %if.end17.spec_write.Clone595
  %RetValue597 = load i32, i32* %RetValuePtr596
  store i32 %RetValue597, i32* %n.write_buf.Clone263, align 4
  %473 = load i32, i32* %cnt.addr.write_buf.Clone260, align 4
  %cmp.write_buf.Clone266 = icmp ne i32 %RetValue597, %473
  br i1 %cmp.write_buf.Clone266, label %while.body.write_buf.Clone267, label %while.end.write_buf.Clone273

while.body.write_buf.Clone267:                    ; preds = %while.cond.write_buf.Clone264.Split
  %474 = load i32, i32* %n.write_buf.Clone263, align 4
  %cmp1.write_buf.Clone268 = icmp eq i32 %474, -1
  br i1 %cmp1.write_buf.Clone268, label %if.then.write_buf.Clone269, label %if.end.write_buf.Clone270

if.then.write_buf.Clone269:                       ; preds = %while.body.write_buf.Clone267
  call void @write_error()
  br label %if.end.write_buf.Clone270

if.end.write_buf.Clone270:                        ; preds = %if.then.write_buf.Clone269, %while.body.write_buf.Clone267
  %475 = load i32, i32* %n.write_buf.Clone263, align 4
  %476 = load i32, i32* %cnt.addr.write_buf.Clone260, align 4
  %sub.write_buf.Clone271 = sub i32 %476, %475
  store i32 %sub.write_buf.Clone271, i32* %cnt.addr.write_buf.Clone260, align 4
  %477 = load i8*, i8** %buf.addr.write_buf.Clone261, align 4
  %478 = load i32, i32* %n.write_buf.Clone263, align 4
  %add.ptr.write_buf.Clone272 = getelementptr inbounds i8, i8* %477, i32 %478
  store i8* %add.ptr.write_buf.Clone272, i8** %buf.addr.write_buf.Clone261, align 4
  br label %while.cond.write_buf.Clone264

while.end.write_buf.Clone273:                     ; preds = %while.cond.write_buf.Clone264.Split
  br label %if.end.flush_outbuf.Clone40.Split

if.end.flush_outbuf.Clone40.Split:                ; preds = %while.end.write_buf.Clone273
  %479 = load i32, i32* @outcnt, align 4
  %480 = load i32, i32* @bytes_out, align 4
  %add.flush_outbuf.Clone41 = add i32 %480, %479
  store i32 %add.flush_outbuf.Clone41, i32* @bytes_out, align 4
  store i32 0, i32* @outcnt, align 4
  br label %return.flush_outbuf.Clone42

return.flush_outbuf.Clone42:                      ; preds = %if.end.flush_outbuf.Clone40.Split, %if.then.flush_outbuf.Clone39
  br label %if.then150.Split

if.then150.Split:                                 ; preds = %return.flush_outbuf.Clone42
  br label %if.end151

if.end151:                                        ; preds = %if.then150.Split, %if.end140
  br label %if.end152

if.end152:                                        ; preds = %if.end151, %if.then118
  %481 = load i32, i32* @outcnt, align 4
  %cmp153 = icmp ult i32 %481, 16382
  br i1 %cmp153, label %if.then155, label %if.else168

if.then155:                                       ; preds = %if.end152
  %482 = load i32, i32* @crc, align 4
  %shr156 = lshr i32 %482, 16
  %and157 = and i32 %shr156, 255
  %conv158 = trunc i32 %and157 to i8
  %483 = load i32, i32* @outcnt, align 4
  %inc159 = add i32 %483, 1
  store i32 %inc159, i32* @outcnt, align 4
  %arrayidx160 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i32 0, i32 %483
  store i8 %conv158, i8* %arrayidx160, align 1
  %484 = load i32, i32* @crc, align 4
  %shr161 = lshr i32 %484, 16
  %conv162 = trunc i32 %shr161 to i16
  %conv163 = zext i16 %conv162 to i32
  %shr164 = ashr i32 %conv163, 8
  %conv165 = trunc i32 %shr164 to i8
  %485 = load i32, i32* @outcnt, align 4
  %inc166 = add i32 %485, 1
  store i32 %inc166, i32* @outcnt, align 4
  %arrayidx167 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i32 0, i32 %485
  store i8 %conv165, i8* %arrayidx167, align 1
  br label %if.end189

if.else168:                                       ; preds = %if.end152
  %486 = load i32, i32* @crc, align 4
  %shr169 = lshr i32 %486, 16
  %and170 = and i32 %shr169, 255
  %conv171 = trunc i32 %and170 to i8
  %487 = load i32, i32* @outcnt, align 4
  %inc172 = add i32 %487, 1
  store i32 %inc172, i32* @outcnt, align 4
  %arrayidx173 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i32 0, i32 %487
  store i8 %conv171, i8* %arrayidx173, align 1
  %488 = load i32, i32* @outcnt, align 4
  %cmp174 = icmp eq i32 %488, 16384
  br i1 %cmp174, label %if.then176, label %if.end177

if.then176:                                       ; preds = %if.else168
  br label %entry.flush_outbuf.Clone31

entry.flush_outbuf.Clone31:                       ; preds = %if.then176
  %489 = load i32, i32* @outcnt, align 4
  %cmp.flush_outbuf.Clone32 = icmp eq i32 %489, 0
  br i1 %cmp.flush_outbuf.Clone32, label %if.then.flush_outbuf.Clone33, label %if.end.flush_outbuf.Clone34

if.then.flush_outbuf.Clone33:                     ; preds = %entry.flush_outbuf.Clone31
  br label %return.flush_outbuf.Clone36

if.end.flush_outbuf.Clone34:                      ; preds = %entry.flush_outbuf.Clone31
  %490 = load i32, i32* @outcnt, align 4
  %491 = load i32, i32* @ofd, align 4
  br label %entry.write_buf.Clone274

entry.write_buf.Clone274:                         ; preds = %if.end.flush_outbuf.Clone34
  %cnt.addr.write_buf.Clone275 = alloca i32, align 4
  %buf.addr.write_buf.Clone276 = alloca i8*, align 4
  %fd.addr.write_buf.Clone277 = alloca i32, align 4
  %n.write_buf.Clone278 = alloca i32, align 4
  store i32 %490, i32* %cnt.addr.write_buf.Clone275, align 4
  store i8* getelementptr inbounds ([18432 x i8], [18432 x i8]* @outbuf, i32 0, i32 0), i8** %buf.addr.write_buf.Clone276, align 4
  store i32 %491, i32* %fd.addr.write_buf.Clone277, align 4
  br label %while.cond.write_buf.Clone279

while.cond.write_buf.Clone279:                    ; preds = %if.end.write_buf.Clone285, %entry.write_buf.Clone274
  %492 = load i32, i32* %cnt.addr.write_buf.Clone275, align 4
  %493 = load i8*, i8** %buf.addr.write_buf.Clone276, align 4
  %494 = load i32, i32* %fd.addr.write_buf.Clone277, align 4
  br label %entry.spec_write.Clone536

entry.spec_write.Clone536:                        ; preds = %while.cond.write_buf.Clone279
  %size.addr.spec_write.Clone537 = alloca i32, align 4
  %buf.addr.spec_write.Clone538 = alloca i8*, align 4
  %fd.addr.spec_write.Clone539 = alloca i32, align 4
  store i32 %492, i32* %size.addr.spec_write.Clone537, align 4
  store i8* %493, i8** %buf.addr.spec_write.Clone538, align 4
  store i32 %494, i32* %fd.addr.spec_write.Clone539, align 4
  %495 = load i32, i32* @dbglvl, align 4
  %cmp.spec_write.Clone540 = icmp slt i32 4, %495
  br i1 %cmp.spec_write.Clone540, label %if.then.spec_write.Clone541, label %if.end.spec_write.Clone543

if.then.spec_write.Clone541:                      ; preds = %entry.spec_write.Clone536
  %496 = load i32, i32* %size.addr.spec_write.Clone537, align 4
  %497 = load i8*, i8** %buf.addr.spec_write.Clone538, align 4
  %498 = load i32, i32* %fd.addr.spec_write.Clone539, align 4
  %call.spec_write.Clone542 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @"??_C@_0BK@GKFGHPHN@spec_write?3?5?$CFd?0?5?$CFx?0?5?$CFd?5?$DN?5?$AA@", i32 0, i32 0), i32 %498, i8* %497, i32 %496)
  br label %if.end.spec_write.Clone543

if.end.spec_write.Clone543:                       ; preds = %if.then.spec_write.Clone541, %entry.spec_write.Clone536
  %499 = load i32, i32* %fd.addr.spec_write.Clone539, align 4
  %cmp1.spec_write.Clone544 = icmp sgt i32 %499, 3
  br i1 %cmp1.spec_write.Clone544, label %if.then2.spec_write.Clone545, label %if.end5.spec_write.Clone549

if.then2.spec_write.Clone545:                     ; preds = %if.end.spec_write.Clone543
  %500 = load i32, i32* %fd.addr.spec_write.Clone539, align 4
  %call3.spec_write.Clone546 = call %struct._iobuf* @__iob_func()
  %arrayidx.spec_write.Clone547 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.spec_write.Clone546, i32 2
  %call4.spec_write.Clone548 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.spec_write.Clone547, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"??_C@_0CD@NANFEFEM@spec_write?3?5fd?$DN?$CFd?0?5?$DO?5MAX_SPEC_FD@", i32 0, i32 0), i32 %500)
  call void @exit(i32 1) #7
  unreachable

if.end5.spec_write.Clone549:                      ; preds = %if.end.spec_write.Clone543
  %501 = load i32, i32* %fd.addr.spec_write.Clone539, align 4
  %arrayidx6.spec_write.Clone550 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %501
  %buf7.spec_write.Clone551 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx6.spec_write.Clone550, i32 0, i32 3
  %502 = load i8*, i8** %buf7.spec_write.Clone551, align 4
  %503 = load i32, i32* %fd.addr.spec_write.Clone539, align 4
  %arrayidx8.spec_write.Clone552 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %503
  %pos.spec_write.Clone553 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx8.spec_write.Clone552, i32 0, i32 2
  %504 = load i32, i32* %pos.spec_write.Clone553, align 4
  %arrayidx9.spec_write.Clone554 = getelementptr inbounds i8, i8* %502, i32 %504
  %505 = load i8*, i8** %buf.addr.spec_write.Clone538, align 4
  %506 = load i32, i32* %size.addr.spec_write.Clone537, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %arrayidx9.spec_write.Clone554, i8* align 1 %505, i32 %506, i1 false)
  %507 = load i32, i32* %size.addr.spec_write.Clone537, align 4
  %508 = load i32, i32* %fd.addr.spec_write.Clone539, align 4
  %arrayidx10.spec_write.Clone555 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %508
  %len.spec_write.Clone556 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx10.spec_write.Clone555, i32 0, i32 1
  %509 = load i32, i32* %len.spec_write.Clone556, align 4
  %add.spec_write.Clone557 = add nsw i32 %509, %507
  store i32 %add.spec_write.Clone557, i32* %len.spec_write.Clone556, align 4
  %510 = load i32, i32* %size.addr.spec_write.Clone537, align 4
  %511 = load i32, i32* %fd.addr.spec_write.Clone539, align 4
  %arrayidx11.spec_write.Clone558 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %511
  %pos12.spec_write.Clone559 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx11.spec_write.Clone558, i32 0, i32 2
  %512 = load i32, i32* %pos12.spec_write.Clone559, align 4
  %add13.spec_write.Clone560 = add nsw i32 %512, %510
  store i32 %add13.spec_write.Clone560, i32* %pos12.spec_write.Clone559, align 4
  %513 = load i32, i32* @dbglvl, align 4
  %cmp14.spec_write.Clone561 = icmp slt i32 4, %513
  br i1 %cmp14.spec_write.Clone561, label %if.then15.spec_write.Clone562, label %if.end17.spec_write.Clone564

if.then15.spec_write.Clone562:                    ; preds = %if.end5.spec_write.Clone549
  %514 = load i32, i32* %size.addr.spec_write.Clone537, align 4
  %call16.spec_write.Clone563 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"??_C@_03PMGGPEJJ@?$CFd?6?$AA@", i32 0, i32 0), i32 %514)
  br label %if.end17.spec_write.Clone564

if.end17.spec_write.Clone564:                     ; preds = %if.then15.spec_write.Clone562, %if.end5.spec_write.Clone549
  %515 = load i32, i32* %size.addr.spec_write.Clone537, align 4
  store i32 %515, i32* %RetValuePtr565
  br label %while.cond.write_buf.Clone279.Split

while.cond.write_buf.Clone279.Split:              ; preds = %if.end17.spec_write.Clone564
  %RetValue566 = load i32, i32* %RetValuePtr565
  store i32 %RetValue566, i32* %n.write_buf.Clone278, align 4
  %516 = load i32, i32* %cnt.addr.write_buf.Clone275, align 4
  %cmp.write_buf.Clone281 = icmp ne i32 %RetValue566, %516
  br i1 %cmp.write_buf.Clone281, label %while.body.write_buf.Clone282, label %while.end.write_buf.Clone288

while.body.write_buf.Clone282:                    ; preds = %while.cond.write_buf.Clone279.Split
  %517 = load i32, i32* %n.write_buf.Clone278, align 4
  %cmp1.write_buf.Clone283 = icmp eq i32 %517, -1
  br i1 %cmp1.write_buf.Clone283, label %if.then.write_buf.Clone284, label %if.end.write_buf.Clone285

if.then.write_buf.Clone284:                       ; preds = %while.body.write_buf.Clone282
  call void @write_error()
  br label %if.end.write_buf.Clone285

if.end.write_buf.Clone285:                        ; preds = %if.then.write_buf.Clone284, %while.body.write_buf.Clone282
  %518 = load i32, i32* %n.write_buf.Clone278, align 4
  %519 = load i32, i32* %cnt.addr.write_buf.Clone275, align 4
  %sub.write_buf.Clone286 = sub i32 %519, %518
  store i32 %sub.write_buf.Clone286, i32* %cnt.addr.write_buf.Clone275, align 4
  %520 = load i8*, i8** %buf.addr.write_buf.Clone276, align 4
  %521 = load i32, i32* %n.write_buf.Clone278, align 4
  %add.ptr.write_buf.Clone287 = getelementptr inbounds i8, i8* %520, i32 %521
  store i8* %add.ptr.write_buf.Clone287, i8** %buf.addr.write_buf.Clone276, align 4
  br label %while.cond.write_buf.Clone279

while.end.write_buf.Clone288:                     ; preds = %while.cond.write_buf.Clone279.Split
  br label %if.end.flush_outbuf.Clone34.Split

if.end.flush_outbuf.Clone34.Split:                ; preds = %while.end.write_buf.Clone288
  %522 = load i32, i32* @outcnt, align 4
  %523 = load i32, i32* @bytes_out, align 4
  %add.flush_outbuf.Clone35 = add i32 %523, %522
  store i32 %add.flush_outbuf.Clone35, i32* @bytes_out, align 4
  store i32 0, i32* @outcnt, align 4
  br label %return.flush_outbuf.Clone36

return.flush_outbuf.Clone36:                      ; preds = %if.end.flush_outbuf.Clone34.Split, %if.then.flush_outbuf.Clone33
  br label %if.then176.Split

if.then176.Split:                                 ; preds = %return.flush_outbuf.Clone36
  br label %if.end177

if.end177:                                        ; preds = %if.then176.Split, %if.else168
  %524 = load i32, i32* @crc, align 4
  %shr178 = lshr i32 %524, 16
  %conv179 = trunc i32 %shr178 to i16
  %conv180 = zext i16 %conv179 to i32
  %shr181 = ashr i32 %conv180, 8
  %conv182 = trunc i32 %shr181 to i8
  %525 = load i32, i32* @outcnt, align 4
  %inc183 = add i32 %525, 1
  store i32 %inc183, i32* @outcnt, align 4
  %arrayidx184 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i32 0, i32 %525
  store i8 %conv182, i8* %arrayidx184, align 1
  %526 = load i32, i32* @outcnt, align 4
  %cmp185 = icmp eq i32 %526, 16384
  br i1 %cmp185, label %if.then187, label %if.end188

if.then187:                                       ; preds = %if.end177
  br label %entry.flush_outbuf.Clone25

entry.flush_outbuf.Clone25:                       ; preds = %if.then187
  %527 = load i32, i32* @outcnt, align 4
  %cmp.flush_outbuf.Clone26 = icmp eq i32 %527, 0
  br i1 %cmp.flush_outbuf.Clone26, label %if.then.flush_outbuf.Clone27, label %if.end.flush_outbuf.Clone28

if.then.flush_outbuf.Clone27:                     ; preds = %entry.flush_outbuf.Clone25
  br label %return.flush_outbuf.Clone30

if.end.flush_outbuf.Clone28:                      ; preds = %entry.flush_outbuf.Clone25
  %528 = load i32, i32* @outcnt, align 4
  %529 = load i32, i32* @ofd, align 4
  br label %entry.write_buf.Clone289

entry.write_buf.Clone289:                         ; preds = %if.end.flush_outbuf.Clone28
  %cnt.addr.write_buf.Clone290 = alloca i32, align 4
  %buf.addr.write_buf.Clone291 = alloca i8*, align 4
  %fd.addr.write_buf.Clone292 = alloca i32, align 4
  %n.write_buf.Clone293 = alloca i32, align 4
  store i32 %528, i32* %cnt.addr.write_buf.Clone290, align 4
  store i8* getelementptr inbounds ([18432 x i8], [18432 x i8]* @outbuf, i32 0, i32 0), i8** %buf.addr.write_buf.Clone291, align 4
  store i32 %529, i32* %fd.addr.write_buf.Clone292, align 4
  br label %while.cond.write_buf.Clone294

while.cond.write_buf.Clone294:                    ; preds = %if.end.write_buf.Clone300, %entry.write_buf.Clone289
  %530 = load i32, i32* %cnt.addr.write_buf.Clone290, align 4
  %531 = load i8*, i8** %buf.addr.write_buf.Clone291, align 4
  %532 = load i32, i32* %fd.addr.write_buf.Clone292, align 4
  br label %entry.spec_write.Clone505

entry.spec_write.Clone505:                        ; preds = %while.cond.write_buf.Clone294
  %size.addr.spec_write.Clone506 = alloca i32, align 4
  %buf.addr.spec_write.Clone507 = alloca i8*, align 4
  %fd.addr.spec_write.Clone508 = alloca i32, align 4
  store i32 %530, i32* %size.addr.spec_write.Clone506, align 4
  store i8* %531, i8** %buf.addr.spec_write.Clone507, align 4
  store i32 %532, i32* %fd.addr.spec_write.Clone508, align 4
  %533 = load i32, i32* @dbglvl, align 4
  %cmp.spec_write.Clone509 = icmp slt i32 4, %533
  br i1 %cmp.spec_write.Clone509, label %if.then.spec_write.Clone510, label %if.end.spec_write.Clone512

if.then.spec_write.Clone510:                      ; preds = %entry.spec_write.Clone505
  %534 = load i32, i32* %size.addr.spec_write.Clone506, align 4
  %535 = load i8*, i8** %buf.addr.spec_write.Clone507, align 4
  %536 = load i32, i32* %fd.addr.spec_write.Clone508, align 4
  %call.spec_write.Clone511 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @"??_C@_0BK@GKFGHPHN@spec_write?3?5?$CFd?0?5?$CFx?0?5?$CFd?5?$DN?5?$AA@", i32 0, i32 0), i32 %536, i8* %535, i32 %534)
  br label %if.end.spec_write.Clone512

if.end.spec_write.Clone512:                       ; preds = %if.then.spec_write.Clone510, %entry.spec_write.Clone505
  %537 = load i32, i32* %fd.addr.spec_write.Clone508, align 4
  %cmp1.spec_write.Clone513 = icmp sgt i32 %537, 3
  br i1 %cmp1.spec_write.Clone513, label %if.then2.spec_write.Clone514, label %if.end5.spec_write.Clone518

if.then2.spec_write.Clone514:                     ; preds = %if.end.spec_write.Clone512
  %538 = load i32, i32* %fd.addr.spec_write.Clone508, align 4
  %call3.spec_write.Clone515 = call %struct._iobuf* @__iob_func()
  %arrayidx.spec_write.Clone516 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.spec_write.Clone515, i32 2
  %call4.spec_write.Clone517 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.spec_write.Clone516, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"??_C@_0CD@NANFEFEM@spec_write?3?5fd?$DN?$CFd?0?5?$DO?5MAX_SPEC_FD@", i32 0, i32 0), i32 %538)
  call void @exit(i32 1) #7
  unreachable

if.end5.spec_write.Clone518:                      ; preds = %if.end.spec_write.Clone512
  %539 = load i32, i32* %fd.addr.spec_write.Clone508, align 4
  %arrayidx6.spec_write.Clone519 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %539
  %buf7.spec_write.Clone520 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx6.spec_write.Clone519, i32 0, i32 3
  %540 = load i8*, i8** %buf7.spec_write.Clone520, align 4
  %541 = load i32, i32* %fd.addr.spec_write.Clone508, align 4
  %arrayidx8.spec_write.Clone521 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %541
  %pos.spec_write.Clone522 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx8.spec_write.Clone521, i32 0, i32 2
  %542 = load i32, i32* %pos.spec_write.Clone522, align 4
  %arrayidx9.spec_write.Clone523 = getelementptr inbounds i8, i8* %540, i32 %542
  %543 = load i8*, i8** %buf.addr.spec_write.Clone507, align 4
  %544 = load i32, i32* %size.addr.spec_write.Clone506, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %arrayidx9.spec_write.Clone523, i8* align 1 %543, i32 %544, i1 false)
  %545 = load i32, i32* %size.addr.spec_write.Clone506, align 4
  %546 = load i32, i32* %fd.addr.spec_write.Clone508, align 4
  %arrayidx10.spec_write.Clone524 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %546
  %len.spec_write.Clone525 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx10.spec_write.Clone524, i32 0, i32 1
  %547 = load i32, i32* %len.spec_write.Clone525, align 4
  %add.spec_write.Clone526 = add nsw i32 %547, %545
  store i32 %add.spec_write.Clone526, i32* %len.spec_write.Clone525, align 4
  %548 = load i32, i32* %size.addr.spec_write.Clone506, align 4
  %549 = load i32, i32* %fd.addr.spec_write.Clone508, align 4
  %arrayidx11.spec_write.Clone527 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %549
  %pos12.spec_write.Clone528 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx11.spec_write.Clone527, i32 0, i32 2
  %550 = load i32, i32* %pos12.spec_write.Clone528, align 4
  %add13.spec_write.Clone529 = add nsw i32 %550, %548
  store i32 %add13.spec_write.Clone529, i32* %pos12.spec_write.Clone528, align 4
  %551 = load i32, i32* @dbglvl, align 4
  %cmp14.spec_write.Clone530 = icmp slt i32 4, %551
  br i1 %cmp14.spec_write.Clone530, label %if.then15.spec_write.Clone531, label %if.end17.spec_write.Clone533

if.then15.spec_write.Clone531:                    ; preds = %if.end5.spec_write.Clone518
  %552 = load i32, i32* %size.addr.spec_write.Clone506, align 4
  %call16.spec_write.Clone532 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"??_C@_03PMGGPEJJ@?$CFd?6?$AA@", i32 0, i32 0), i32 %552)
  br label %if.end17.spec_write.Clone533

if.end17.spec_write.Clone533:                     ; preds = %if.then15.spec_write.Clone531, %if.end5.spec_write.Clone518
  %553 = load i32, i32* %size.addr.spec_write.Clone506, align 4
  store i32 %553, i32* %RetValuePtr534
  br label %while.cond.write_buf.Clone294.Split

while.cond.write_buf.Clone294.Split:              ; preds = %if.end17.spec_write.Clone533
  %RetValue535 = load i32, i32* %RetValuePtr534
  store i32 %RetValue535, i32* %n.write_buf.Clone293, align 4
  %554 = load i32, i32* %cnt.addr.write_buf.Clone290, align 4
  %cmp.write_buf.Clone296 = icmp ne i32 %RetValue535, %554
  br i1 %cmp.write_buf.Clone296, label %while.body.write_buf.Clone297, label %while.end.write_buf.Clone303

while.body.write_buf.Clone297:                    ; preds = %while.cond.write_buf.Clone294.Split
  %555 = load i32, i32* %n.write_buf.Clone293, align 4
  %cmp1.write_buf.Clone298 = icmp eq i32 %555, -1
  br i1 %cmp1.write_buf.Clone298, label %if.then.write_buf.Clone299, label %if.end.write_buf.Clone300

if.then.write_buf.Clone299:                       ; preds = %while.body.write_buf.Clone297
  call void @write_error()
  br label %if.end.write_buf.Clone300

if.end.write_buf.Clone300:                        ; preds = %if.then.write_buf.Clone299, %while.body.write_buf.Clone297
  %556 = load i32, i32* %n.write_buf.Clone293, align 4
  %557 = load i32, i32* %cnt.addr.write_buf.Clone290, align 4
  %sub.write_buf.Clone301 = sub i32 %557, %556
  store i32 %sub.write_buf.Clone301, i32* %cnt.addr.write_buf.Clone290, align 4
  %558 = load i8*, i8** %buf.addr.write_buf.Clone291, align 4
  %559 = load i32, i32* %n.write_buf.Clone293, align 4
  %add.ptr.write_buf.Clone302 = getelementptr inbounds i8, i8* %558, i32 %559
  store i8* %add.ptr.write_buf.Clone302, i8** %buf.addr.write_buf.Clone291, align 4
  br label %while.cond.write_buf.Clone294

while.end.write_buf.Clone303:                     ; preds = %while.cond.write_buf.Clone294.Split
  br label %if.end.flush_outbuf.Clone28.Split

if.end.flush_outbuf.Clone28.Split:                ; preds = %while.end.write_buf.Clone303
  %560 = load i32, i32* @outcnt, align 4
  %561 = load i32, i32* @bytes_out, align 4
  %add.flush_outbuf.Clone29 = add i32 %561, %560
  store i32 %add.flush_outbuf.Clone29, i32* @bytes_out, align 4
  store i32 0, i32* @outcnt, align 4
  br label %return.flush_outbuf.Clone30

return.flush_outbuf.Clone30:                      ; preds = %if.end.flush_outbuf.Clone28.Split, %if.then.flush_outbuf.Clone27
  br label %if.then187.Split

if.then187.Split:                                 ; preds = %return.flush_outbuf.Clone30
  br label %if.end188

if.end188:                                        ; preds = %if.then187.Split, %if.end177
  br label %if.end189

if.end189:                                        ; preds = %if.end188, %if.then155
  %562 = load i32, i32* @outcnt, align 4
  %cmp190 = icmp ult i32 %562, 16382
  br i1 %cmp190, label %if.then192, label %if.else205

if.then192:                                       ; preds = %if.end189
  %563 = load i32, i32* @bytes_in, align 4
  %and193 = and i32 %563, 65535
  %and194 = and i32 %and193, 255
  %conv195 = trunc i32 %and194 to i8
  %564 = load i32, i32* @outcnt, align 4
  %inc196 = add i32 %564, 1
  store i32 %inc196, i32* @outcnt, align 4
  %arrayidx197 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i32 0, i32 %564
  store i8 %conv195, i8* %arrayidx197, align 1
  %565 = load i32, i32* @bytes_in, align 4
  %and198 = and i32 %565, 65535
  %conv199 = trunc i32 %and198 to i16
  %conv200 = zext i16 %conv199 to i32
  %shr201 = ashr i32 %conv200, 8
  %conv202 = trunc i32 %shr201 to i8
  %566 = load i32, i32* @outcnt, align 4
  %inc203 = add i32 %566, 1
  store i32 %inc203, i32* @outcnt, align 4
  %arrayidx204 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i32 0, i32 %566
  store i8 %conv202, i8* %arrayidx204, align 1
  br label %if.end226

if.else205:                                       ; preds = %if.end189
  %567 = load i32, i32* @bytes_in, align 4
  %and206 = and i32 %567, 65535
  %and207 = and i32 %and206, 255
  %conv208 = trunc i32 %and207 to i8
  %568 = load i32, i32* @outcnt, align 4
  %inc209 = add i32 %568, 1
  store i32 %inc209, i32* @outcnt, align 4
  %arrayidx210 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i32 0, i32 %568
  store i8 %conv208, i8* %arrayidx210, align 1
  %569 = load i32, i32* @outcnt, align 4
  %cmp211 = icmp eq i32 %569, 16384
  br i1 %cmp211, label %if.then213, label %if.end214

if.then213:                                       ; preds = %if.else205
  br label %entry.flush_outbuf.Clone19

entry.flush_outbuf.Clone19:                       ; preds = %if.then213
  %570 = load i32, i32* @outcnt, align 4
  %cmp.flush_outbuf.Clone20 = icmp eq i32 %570, 0
  br i1 %cmp.flush_outbuf.Clone20, label %if.then.flush_outbuf.Clone21, label %if.end.flush_outbuf.Clone22

if.then.flush_outbuf.Clone21:                     ; preds = %entry.flush_outbuf.Clone19
  br label %return.flush_outbuf.Clone24

if.end.flush_outbuf.Clone22:                      ; preds = %entry.flush_outbuf.Clone19
  %571 = load i32, i32* @outcnt, align 4
  %572 = load i32, i32* @ofd, align 4
  br label %entry.write_buf.Clone304

entry.write_buf.Clone304:                         ; preds = %if.end.flush_outbuf.Clone22
  %cnt.addr.write_buf.Clone305 = alloca i32, align 4
  %buf.addr.write_buf.Clone306 = alloca i8*, align 4
  %fd.addr.write_buf.Clone307 = alloca i32, align 4
  %n.write_buf.Clone308 = alloca i32, align 4
  store i32 %571, i32* %cnt.addr.write_buf.Clone305, align 4
  store i8* getelementptr inbounds ([18432 x i8], [18432 x i8]* @outbuf, i32 0, i32 0), i8** %buf.addr.write_buf.Clone306, align 4
  store i32 %572, i32* %fd.addr.write_buf.Clone307, align 4
  br label %while.cond.write_buf.Clone309

while.cond.write_buf.Clone309:                    ; preds = %if.end.write_buf.Clone315, %entry.write_buf.Clone304
  %573 = load i32, i32* %cnt.addr.write_buf.Clone305, align 4
  %574 = load i8*, i8** %buf.addr.write_buf.Clone306, align 4
  %575 = load i32, i32* %fd.addr.write_buf.Clone307, align 4
  br label %entry.spec_write.Clone474

entry.spec_write.Clone474:                        ; preds = %while.cond.write_buf.Clone309
  %size.addr.spec_write.Clone475 = alloca i32, align 4
  %buf.addr.spec_write.Clone476 = alloca i8*, align 4
  %fd.addr.spec_write.Clone477 = alloca i32, align 4
  store i32 %573, i32* %size.addr.spec_write.Clone475, align 4
  store i8* %574, i8** %buf.addr.spec_write.Clone476, align 4
  store i32 %575, i32* %fd.addr.spec_write.Clone477, align 4
  %576 = load i32, i32* @dbglvl, align 4
  %cmp.spec_write.Clone478 = icmp slt i32 4, %576
  br i1 %cmp.spec_write.Clone478, label %if.then.spec_write.Clone479, label %if.end.spec_write.Clone481

if.then.spec_write.Clone479:                      ; preds = %entry.spec_write.Clone474
  %577 = load i32, i32* %size.addr.spec_write.Clone475, align 4
  %578 = load i8*, i8** %buf.addr.spec_write.Clone476, align 4
  %579 = load i32, i32* %fd.addr.spec_write.Clone477, align 4
  %call.spec_write.Clone480 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @"??_C@_0BK@GKFGHPHN@spec_write?3?5?$CFd?0?5?$CFx?0?5?$CFd?5?$DN?5?$AA@", i32 0, i32 0), i32 %579, i8* %578, i32 %577)
  br label %if.end.spec_write.Clone481

if.end.spec_write.Clone481:                       ; preds = %if.then.spec_write.Clone479, %entry.spec_write.Clone474
  %580 = load i32, i32* %fd.addr.spec_write.Clone477, align 4
  %cmp1.spec_write.Clone482 = icmp sgt i32 %580, 3
  br i1 %cmp1.spec_write.Clone482, label %if.then2.spec_write.Clone483, label %if.end5.spec_write.Clone487

if.then2.spec_write.Clone483:                     ; preds = %if.end.spec_write.Clone481
  %581 = load i32, i32* %fd.addr.spec_write.Clone477, align 4
  %call3.spec_write.Clone484 = call %struct._iobuf* @__iob_func()
  %arrayidx.spec_write.Clone485 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.spec_write.Clone484, i32 2
  %call4.spec_write.Clone486 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.spec_write.Clone485, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"??_C@_0CD@NANFEFEM@spec_write?3?5fd?$DN?$CFd?0?5?$DO?5MAX_SPEC_FD@", i32 0, i32 0), i32 %581)
  call void @exit(i32 1) #7
  unreachable

if.end5.spec_write.Clone487:                      ; preds = %if.end.spec_write.Clone481
  %582 = load i32, i32* %fd.addr.spec_write.Clone477, align 4
  %arrayidx6.spec_write.Clone488 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %582
  %buf7.spec_write.Clone489 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx6.spec_write.Clone488, i32 0, i32 3
  %583 = load i8*, i8** %buf7.spec_write.Clone489, align 4
  %584 = load i32, i32* %fd.addr.spec_write.Clone477, align 4
  %arrayidx8.spec_write.Clone490 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %584
  %pos.spec_write.Clone491 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx8.spec_write.Clone490, i32 0, i32 2
  %585 = load i32, i32* %pos.spec_write.Clone491, align 4
  %arrayidx9.spec_write.Clone492 = getelementptr inbounds i8, i8* %583, i32 %585
  %586 = load i8*, i8** %buf.addr.spec_write.Clone476, align 4
  %587 = load i32, i32* %size.addr.spec_write.Clone475, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %arrayidx9.spec_write.Clone492, i8* align 1 %586, i32 %587, i1 false)
  %588 = load i32, i32* %size.addr.spec_write.Clone475, align 4
  %589 = load i32, i32* %fd.addr.spec_write.Clone477, align 4
  %arrayidx10.spec_write.Clone493 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %589
  %len.spec_write.Clone494 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx10.spec_write.Clone493, i32 0, i32 1
  %590 = load i32, i32* %len.spec_write.Clone494, align 4
  %add.spec_write.Clone495 = add nsw i32 %590, %588
  store i32 %add.spec_write.Clone495, i32* %len.spec_write.Clone494, align 4
  %591 = load i32, i32* %size.addr.spec_write.Clone475, align 4
  %592 = load i32, i32* %fd.addr.spec_write.Clone477, align 4
  %arrayidx11.spec_write.Clone496 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %592
  %pos12.spec_write.Clone497 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx11.spec_write.Clone496, i32 0, i32 2
  %593 = load i32, i32* %pos12.spec_write.Clone497, align 4
  %add13.spec_write.Clone498 = add nsw i32 %593, %591
  store i32 %add13.spec_write.Clone498, i32* %pos12.spec_write.Clone497, align 4
  %594 = load i32, i32* @dbglvl, align 4
  %cmp14.spec_write.Clone499 = icmp slt i32 4, %594
  br i1 %cmp14.spec_write.Clone499, label %if.then15.spec_write.Clone500, label %if.end17.spec_write.Clone502

if.then15.spec_write.Clone500:                    ; preds = %if.end5.spec_write.Clone487
  %595 = load i32, i32* %size.addr.spec_write.Clone475, align 4
  %call16.spec_write.Clone501 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"??_C@_03PMGGPEJJ@?$CFd?6?$AA@", i32 0, i32 0), i32 %595)
  br label %if.end17.spec_write.Clone502

if.end17.spec_write.Clone502:                     ; preds = %if.then15.spec_write.Clone500, %if.end5.spec_write.Clone487
  %596 = load i32, i32* %size.addr.spec_write.Clone475, align 4
  store i32 %596, i32* %RetValuePtr503
  br label %while.cond.write_buf.Clone309.Split

while.cond.write_buf.Clone309.Split:              ; preds = %if.end17.spec_write.Clone502
  %RetValue504 = load i32, i32* %RetValuePtr503
  store i32 %RetValue504, i32* %n.write_buf.Clone308, align 4
  %597 = load i32, i32* %cnt.addr.write_buf.Clone305, align 4
  %cmp.write_buf.Clone311 = icmp ne i32 %RetValue504, %597
  br i1 %cmp.write_buf.Clone311, label %while.body.write_buf.Clone312, label %while.end.write_buf.Clone318

while.body.write_buf.Clone312:                    ; preds = %while.cond.write_buf.Clone309.Split
  %598 = load i32, i32* %n.write_buf.Clone308, align 4
  %cmp1.write_buf.Clone313 = icmp eq i32 %598, -1
  br i1 %cmp1.write_buf.Clone313, label %if.then.write_buf.Clone314, label %if.end.write_buf.Clone315

if.then.write_buf.Clone314:                       ; preds = %while.body.write_buf.Clone312
  call void @write_error()
  br label %if.end.write_buf.Clone315

if.end.write_buf.Clone315:                        ; preds = %if.then.write_buf.Clone314, %while.body.write_buf.Clone312
  %599 = load i32, i32* %n.write_buf.Clone308, align 4
  %600 = load i32, i32* %cnt.addr.write_buf.Clone305, align 4
  %sub.write_buf.Clone316 = sub i32 %600, %599
  store i32 %sub.write_buf.Clone316, i32* %cnt.addr.write_buf.Clone305, align 4
  %601 = load i8*, i8** %buf.addr.write_buf.Clone306, align 4
  %602 = load i32, i32* %n.write_buf.Clone308, align 4
  %add.ptr.write_buf.Clone317 = getelementptr inbounds i8, i8* %601, i32 %602
  store i8* %add.ptr.write_buf.Clone317, i8** %buf.addr.write_buf.Clone306, align 4
  br label %while.cond.write_buf.Clone309

while.end.write_buf.Clone318:                     ; preds = %while.cond.write_buf.Clone309.Split
  br label %if.end.flush_outbuf.Clone22.Split

if.end.flush_outbuf.Clone22.Split:                ; preds = %while.end.write_buf.Clone318
  %603 = load i32, i32* @outcnt, align 4
  %604 = load i32, i32* @bytes_out, align 4
  %add.flush_outbuf.Clone23 = add i32 %604, %603
  store i32 %add.flush_outbuf.Clone23, i32* @bytes_out, align 4
  store i32 0, i32* @outcnt, align 4
  br label %return.flush_outbuf.Clone24

return.flush_outbuf.Clone24:                      ; preds = %if.end.flush_outbuf.Clone22.Split, %if.then.flush_outbuf.Clone21
  br label %if.then213.Split

if.then213.Split:                                 ; preds = %return.flush_outbuf.Clone24
  br label %if.end214

if.end214:                                        ; preds = %if.then213.Split, %if.else205
  %605 = load i32, i32* @bytes_in, align 4
  %and215 = and i32 %605, 65535
  %conv216 = trunc i32 %and215 to i16
  %conv217 = zext i16 %conv216 to i32
  %shr218 = ashr i32 %conv217, 8
  %conv219 = trunc i32 %shr218 to i8
  %606 = load i32, i32* @outcnt, align 4
  %inc220 = add i32 %606, 1
  store i32 %inc220, i32* @outcnt, align 4
  %arrayidx221 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i32 0, i32 %606
  store i8 %conv219, i8* %arrayidx221, align 1
  %607 = load i32, i32* @outcnt, align 4
  %cmp222 = icmp eq i32 %607, 16384
  br i1 %cmp222, label %if.then224, label %if.end225

if.then224:                                       ; preds = %if.end214
  br label %entry.flush_outbuf.Clone13

entry.flush_outbuf.Clone13:                       ; preds = %if.then224
  %608 = load i32, i32* @outcnt, align 4
  %cmp.flush_outbuf.Clone14 = icmp eq i32 %608, 0
  br i1 %cmp.flush_outbuf.Clone14, label %if.then.flush_outbuf.Clone15, label %if.end.flush_outbuf.Clone16

if.then.flush_outbuf.Clone15:                     ; preds = %entry.flush_outbuf.Clone13
  br label %return.flush_outbuf.Clone18

if.end.flush_outbuf.Clone16:                      ; preds = %entry.flush_outbuf.Clone13
  %609 = load i32, i32* @outcnt, align 4
  %610 = load i32, i32* @ofd, align 4
  br label %entry.write_buf.Clone319

entry.write_buf.Clone319:                         ; preds = %if.end.flush_outbuf.Clone16
  %cnt.addr.write_buf.Clone320 = alloca i32, align 4
  %buf.addr.write_buf.Clone321 = alloca i8*, align 4
  %fd.addr.write_buf.Clone322 = alloca i32, align 4
  %n.write_buf.Clone323 = alloca i32, align 4
  store i32 %609, i32* %cnt.addr.write_buf.Clone320, align 4
  store i8* getelementptr inbounds ([18432 x i8], [18432 x i8]* @outbuf, i32 0, i32 0), i8** %buf.addr.write_buf.Clone321, align 4
  store i32 %610, i32* %fd.addr.write_buf.Clone322, align 4
  br label %while.cond.write_buf.Clone324

while.cond.write_buf.Clone324:                    ; preds = %if.end.write_buf.Clone330, %entry.write_buf.Clone319
  %611 = load i32, i32* %cnt.addr.write_buf.Clone320, align 4
  %612 = load i8*, i8** %buf.addr.write_buf.Clone321, align 4
  %613 = load i32, i32* %fd.addr.write_buf.Clone322, align 4
  br label %entry.spec_write.Clone443

entry.spec_write.Clone443:                        ; preds = %while.cond.write_buf.Clone324
  %size.addr.spec_write.Clone444 = alloca i32, align 4
  %buf.addr.spec_write.Clone445 = alloca i8*, align 4
  %fd.addr.spec_write.Clone446 = alloca i32, align 4
  store i32 %611, i32* %size.addr.spec_write.Clone444, align 4
  store i8* %612, i8** %buf.addr.spec_write.Clone445, align 4
  store i32 %613, i32* %fd.addr.spec_write.Clone446, align 4
  %614 = load i32, i32* @dbglvl, align 4
  %cmp.spec_write.Clone447 = icmp slt i32 4, %614
  br i1 %cmp.spec_write.Clone447, label %if.then.spec_write.Clone448, label %if.end.spec_write.Clone450

if.then.spec_write.Clone448:                      ; preds = %entry.spec_write.Clone443
  %615 = load i32, i32* %size.addr.spec_write.Clone444, align 4
  %616 = load i8*, i8** %buf.addr.spec_write.Clone445, align 4
  %617 = load i32, i32* %fd.addr.spec_write.Clone446, align 4
  %call.spec_write.Clone449 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @"??_C@_0BK@GKFGHPHN@spec_write?3?5?$CFd?0?5?$CFx?0?5?$CFd?5?$DN?5?$AA@", i32 0, i32 0), i32 %617, i8* %616, i32 %615)
  br label %if.end.spec_write.Clone450

if.end.spec_write.Clone450:                       ; preds = %if.then.spec_write.Clone448, %entry.spec_write.Clone443
  %618 = load i32, i32* %fd.addr.spec_write.Clone446, align 4
  %cmp1.spec_write.Clone451 = icmp sgt i32 %618, 3
  br i1 %cmp1.spec_write.Clone451, label %if.then2.spec_write.Clone452, label %if.end5.spec_write.Clone456

if.then2.spec_write.Clone452:                     ; preds = %if.end.spec_write.Clone450
  %619 = load i32, i32* %fd.addr.spec_write.Clone446, align 4
  %call3.spec_write.Clone453 = call %struct._iobuf* @__iob_func()
  %arrayidx.spec_write.Clone454 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.spec_write.Clone453, i32 2
  %call4.spec_write.Clone455 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.spec_write.Clone454, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"??_C@_0CD@NANFEFEM@spec_write?3?5fd?$DN?$CFd?0?5?$DO?5MAX_SPEC_FD@", i32 0, i32 0), i32 %619)
  call void @exit(i32 1) #7
  unreachable

if.end5.spec_write.Clone456:                      ; preds = %if.end.spec_write.Clone450
  %620 = load i32, i32* %fd.addr.spec_write.Clone446, align 4
  %arrayidx6.spec_write.Clone457 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %620
  %buf7.spec_write.Clone458 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx6.spec_write.Clone457, i32 0, i32 3
  %621 = load i8*, i8** %buf7.spec_write.Clone458, align 4
  %622 = load i32, i32* %fd.addr.spec_write.Clone446, align 4
  %arrayidx8.spec_write.Clone459 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %622
  %pos.spec_write.Clone460 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx8.spec_write.Clone459, i32 0, i32 2
  %623 = load i32, i32* %pos.spec_write.Clone460, align 4
  %arrayidx9.spec_write.Clone461 = getelementptr inbounds i8, i8* %621, i32 %623
  %624 = load i8*, i8** %buf.addr.spec_write.Clone445, align 4
  %625 = load i32, i32* %size.addr.spec_write.Clone444, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %arrayidx9.spec_write.Clone461, i8* align 1 %624, i32 %625, i1 false)
  %626 = load i32, i32* %size.addr.spec_write.Clone444, align 4
  %627 = load i32, i32* %fd.addr.spec_write.Clone446, align 4
  %arrayidx10.spec_write.Clone462 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %627
  %len.spec_write.Clone463 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx10.spec_write.Clone462, i32 0, i32 1
  %628 = load i32, i32* %len.spec_write.Clone463, align 4
  %add.spec_write.Clone464 = add nsw i32 %628, %626
  store i32 %add.spec_write.Clone464, i32* %len.spec_write.Clone463, align 4
  %629 = load i32, i32* %size.addr.spec_write.Clone444, align 4
  %630 = load i32, i32* %fd.addr.spec_write.Clone446, align 4
  %arrayidx11.spec_write.Clone465 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %630
  %pos12.spec_write.Clone466 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx11.spec_write.Clone465, i32 0, i32 2
  %631 = load i32, i32* %pos12.spec_write.Clone466, align 4
  %add13.spec_write.Clone467 = add nsw i32 %631, %629
  store i32 %add13.spec_write.Clone467, i32* %pos12.spec_write.Clone466, align 4
  %632 = load i32, i32* @dbglvl, align 4
  %cmp14.spec_write.Clone468 = icmp slt i32 4, %632
  br i1 %cmp14.spec_write.Clone468, label %if.then15.spec_write.Clone469, label %if.end17.spec_write.Clone471

if.then15.spec_write.Clone469:                    ; preds = %if.end5.spec_write.Clone456
  %633 = load i32, i32* %size.addr.spec_write.Clone444, align 4
  %call16.spec_write.Clone470 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"??_C@_03PMGGPEJJ@?$CFd?6?$AA@", i32 0, i32 0), i32 %633)
  br label %if.end17.spec_write.Clone471

if.end17.spec_write.Clone471:                     ; preds = %if.then15.spec_write.Clone469, %if.end5.spec_write.Clone456
  %634 = load i32, i32* %size.addr.spec_write.Clone444, align 4
  store i32 %634, i32* %RetValuePtr472
  br label %while.cond.write_buf.Clone324.Split

while.cond.write_buf.Clone324.Split:              ; preds = %if.end17.spec_write.Clone471
  %RetValue473 = load i32, i32* %RetValuePtr472
  store i32 %RetValue473, i32* %n.write_buf.Clone323, align 4
  %635 = load i32, i32* %cnt.addr.write_buf.Clone320, align 4
  %cmp.write_buf.Clone326 = icmp ne i32 %RetValue473, %635
  br i1 %cmp.write_buf.Clone326, label %while.body.write_buf.Clone327, label %while.end.write_buf.Clone333

while.body.write_buf.Clone327:                    ; preds = %while.cond.write_buf.Clone324.Split
  %636 = load i32, i32* %n.write_buf.Clone323, align 4
  %cmp1.write_buf.Clone328 = icmp eq i32 %636, -1
  br i1 %cmp1.write_buf.Clone328, label %if.then.write_buf.Clone329, label %if.end.write_buf.Clone330

if.then.write_buf.Clone329:                       ; preds = %while.body.write_buf.Clone327
  call void @write_error()
  br label %if.end.write_buf.Clone330

if.end.write_buf.Clone330:                        ; preds = %if.then.write_buf.Clone329, %while.body.write_buf.Clone327
  %637 = load i32, i32* %n.write_buf.Clone323, align 4
  %638 = load i32, i32* %cnt.addr.write_buf.Clone320, align 4
  %sub.write_buf.Clone331 = sub i32 %638, %637
  store i32 %sub.write_buf.Clone331, i32* %cnt.addr.write_buf.Clone320, align 4
  %639 = load i8*, i8** %buf.addr.write_buf.Clone321, align 4
  %640 = load i32, i32* %n.write_buf.Clone323, align 4
  %add.ptr.write_buf.Clone332 = getelementptr inbounds i8, i8* %639, i32 %640
  store i8* %add.ptr.write_buf.Clone332, i8** %buf.addr.write_buf.Clone321, align 4
  br label %while.cond.write_buf.Clone324

while.end.write_buf.Clone333:                     ; preds = %while.cond.write_buf.Clone324.Split
  br label %if.end.flush_outbuf.Clone16.Split

if.end.flush_outbuf.Clone16.Split:                ; preds = %while.end.write_buf.Clone333
  %641 = load i32, i32* @outcnt, align 4
  %642 = load i32, i32* @bytes_out, align 4
  %add.flush_outbuf.Clone17 = add i32 %642, %641
  store i32 %add.flush_outbuf.Clone17, i32* @bytes_out, align 4
  store i32 0, i32* @outcnt, align 4
  br label %return.flush_outbuf.Clone18

return.flush_outbuf.Clone18:                      ; preds = %if.end.flush_outbuf.Clone16.Split, %if.then.flush_outbuf.Clone15
  br label %if.then224.Split

if.then224.Split:                                 ; preds = %return.flush_outbuf.Clone18
  br label %if.end225

if.end225:                                        ; preds = %if.then224.Split, %if.end214
  br label %if.end226

if.end226:                                        ; preds = %if.end225, %if.then192
  %643 = load i32, i32* @outcnt, align 4
  %cmp227 = icmp ult i32 %643, 16382
  br i1 %cmp227, label %if.then229, label %if.else242

if.then229:                                       ; preds = %if.end226
  %644 = load i32, i32* @bytes_in, align 4
  %shr230 = lshr i32 %644, 16
  %and231 = and i32 %shr230, 255
  %conv232 = trunc i32 %and231 to i8
  %645 = load i32, i32* @outcnt, align 4
  %inc233 = add i32 %645, 1
  store i32 %inc233, i32* @outcnt, align 4
  %arrayidx234 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i32 0, i32 %645
  store i8 %conv232, i8* %arrayidx234, align 1
  %646 = load i32, i32* @bytes_in, align 4
  %shr235 = lshr i32 %646, 16
  %conv236 = trunc i32 %shr235 to i16
  %conv237 = zext i16 %conv236 to i32
  %shr238 = ashr i32 %conv237, 8
  %conv239 = trunc i32 %shr238 to i8
  %647 = load i32, i32* @outcnt, align 4
  %inc240 = add i32 %647, 1
  store i32 %inc240, i32* @outcnt, align 4
  %arrayidx241 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i32 0, i32 %647
  store i8 %conv239, i8* %arrayidx241, align 1
  br label %if.end263

if.else242:                                       ; preds = %if.end226
  %648 = load i32, i32* @bytes_in, align 4
  %shr243 = lshr i32 %648, 16
  %and244 = and i32 %shr243, 255
  %conv245 = trunc i32 %and244 to i8
  %649 = load i32, i32* @outcnt, align 4
  %inc246 = add i32 %649, 1
  store i32 %inc246, i32* @outcnt, align 4
  %arrayidx247 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i32 0, i32 %649
  store i8 %conv245, i8* %arrayidx247, align 1
  %650 = load i32, i32* @outcnt, align 4
  %cmp248 = icmp eq i32 %650, 16384
  br i1 %cmp248, label %if.then250, label %if.end251

if.then250:                                       ; preds = %if.else242
  br label %entry.flush_outbuf.Clone7

entry.flush_outbuf.Clone7:                        ; preds = %if.then250
  %651 = load i32, i32* @outcnt, align 4
  %cmp.flush_outbuf.Clone8 = icmp eq i32 %651, 0
  br i1 %cmp.flush_outbuf.Clone8, label %if.then.flush_outbuf.Clone9, label %if.end.flush_outbuf.Clone10

if.then.flush_outbuf.Clone9:                      ; preds = %entry.flush_outbuf.Clone7
  br label %return.flush_outbuf.Clone12

if.end.flush_outbuf.Clone10:                      ; preds = %entry.flush_outbuf.Clone7
  %652 = load i32, i32* @outcnt, align 4
  %653 = load i32, i32* @ofd, align 4
  br label %entry.write_buf.Clone334

entry.write_buf.Clone334:                         ; preds = %if.end.flush_outbuf.Clone10
  %cnt.addr.write_buf.Clone335 = alloca i32, align 4
  %buf.addr.write_buf.Clone336 = alloca i8*, align 4
  %fd.addr.write_buf.Clone337 = alloca i32, align 4
  %n.write_buf.Clone338 = alloca i32, align 4
  store i32 %652, i32* %cnt.addr.write_buf.Clone335, align 4
  store i8* getelementptr inbounds ([18432 x i8], [18432 x i8]* @outbuf, i32 0, i32 0), i8** %buf.addr.write_buf.Clone336, align 4
  store i32 %653, i32* %fd.addr.write_buf.Clone337, align 4
  br label %while.cond.write_buf.Clone339

while.cond.write_buf.Clone339:                    ; preds = %if.end.write_buf.Clone345, %entry.write_buf.Clone334
  %654 = load i32, i32* %cnt.addr.write_buf.Clone335, align 4
  %655 = load i8*, i8** %buf.addr.write_buf.Clone336, align 4
  %656 = load i32, i32* %fd.addr.write_buf.Clone337, align 4
  br label %entry.spec_write.Clone412

entry.spec_write.Clone412:                        ; preds = %while.cond.write_buf.Clone339
  %size.addr.spec_write.Clone413 = alloca i32, align 4
  %buf.addr.spec_write.Clone414 = alloca i8*, align 4
  %fd.addr.spec_write.Clone415 = alloca i32, align 4
  store i32 %654, i32* %size.addr.spec_write.Clone413, align 4
  store i8* %655, i8** %buf.addr.spec_write.Clone414, align 4
  store i32 %656, i32* %fd.addr.spec_write.Clone415, align 4
  %657 = load i32, i32* @dbglvl, align 4
  %cmp.spec_write.Clone416 = icmp slt i32 4, %657
  br i1 %cmp.spec_write.Clone416, label %if.then.spec_write.Clone417, label %if.end.spec_write.Clone419

if.then.spec_write.Clone417:                      ; preds = %entry.spec_write.Clone412
  %658 = load i32, i32* %size.addr.spec_write.Clone413, align 4
  %659 = load i8*, i8** %buf.addr.spec_write.Clone414, align 4
  %660 = load i32, i32* %fd.addr.spec_write.Clone415, align 4
  %call.spec_write.Clone418 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @"??_C@_0BK@GKFGHPHN@spec_write?3?5?$CFd?0?5?$CFx?0?5?$CFd?5?$DN?5?$AA@", i32 0, i32 0), i32 %660, i8* %659, i32 %658)
  br label %if.end.spec_write.Clone419

if.end.spec_write.Clone419:                       ; preds = %if.then.spec_write.Clone417, %entry.spec_write.Clone412
  %661 = load i32, i32* %fd.addr.spec_write.Clone415, align 4
  %cmp1.spec_write.Clone420 = icmp sgt i32 %661, 3
  br i1 %cmp1.spec_write.Clone420, label %if.then2.spec_write.Clone421, label %if.end5.spec_write.Clone425

if.then2.spec_write.Clone421:                     ; preds = %if.end.spec_write.Clone419
  %662 = load i32, i32* %fd.addr.spec_write.Clone415, align 4
  %call3.spec_write.Clone422 = call %struct._iobuf* @__iob_func()
  %arrayidx.spec_write.Clone423 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.spec_write.Clone422, i32 2
  %call4.spec_write.Clone424 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.spec_write.Clone423, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"??_C@_0CD@NANFEFEM@spec_write?3?5fd?$DN?$CFd?0?5?$DO?5MAX_SPEC_FD@", i32 0, i32 0), i32 %662)
  call void @exit(i32 1) #7
  unreachable

if.end5.spec_write.Clone425:                      ; preds = %if.end.spec_write.Clone419
  %663 = load i32, i32* %fd.addr.spec_write.Clone415, align 4
  %arrayidx6.spec_write.Clone426 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %663
  %buf7.spec_write.Clone427 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx6.spec_write.Clone426, i32 0, i32 3
  %664 = load i8*, i8** %buf7.spec_write.Clone427, align 4
  %665 = load i32, i32* %fd.addr.spec_write.Clone415, align 4
  %arrayidx8.spec_write.Clone428 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %665
  %pos.spec_write.Clone429 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx8.spec_write.Clone428, i32 0, i32 2
  %666 = load i32, i32* %pos.spec_write.Clone429, align 4
  %arrayidx9.spec_write.Clone430 = getelementptr inbounds i8, i8* %664, i32 %666
  %667 = load i8*, i8** %buf.addr.spec_write.Clone414, align 4
  %668 = load i32, i32* %size.addr.spec_write.Clone413, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %arrayidx9.spec_write.Clone430, i8* align 1 %667, i32 %668, i1 false)
  %669 = load i32, i32* %size.addr.spec_write.Clone413, align 4
  %670 = load i32, i32* %fd.addr.spec_write.Clone415, align 4
  %arrayidx10.spec_write.Clone431 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %670
  %len.spec_write.Clone432 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx10.spec_write.Clone431, i32 0, i32 1
  %671 = load i32, i32* %len.spec_write.Clone432, align 4
  %add.spec_write.Clone433 = add nsw i32 %671, %669
  store i32 %add.spec_write.Clone433, i32* %len.spec_write.Clone432, align 4
  %672 = load i32, i32* %size.addr.spec_write.Clone413, align 4
  %673 = load i32, i32* %fd.addr.spec_write.Clone415, align 4
  %arrayidx11.spec_write.Clone434 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %673
  %pos12.spec_write.Clone435 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx11.spec_write.Clone434, i32 0, i32 2
  %674 = load i32, i32* %pos12.spec_write.Clone435, align 4
  %add13.spec_write.Clone436 = add nsw i32 %674, %672
  store i32 %add13.spec_write.Clone436, i32* %pos12.spec_write.Clone435, align 4
  %675 = load i32, i32* @dbglvl, align 4
  %cmp14.spec_write.Clone437 = icmp slt i32 4, %675
  br i1 %cmp14.spec_write.Clone437, label %if.then15.spec_write.Clone438, label %if.end17.spec_write.Clone440

if.then15.spec_write.Clone438:                    ; preds = %if.end5.spec_write.Clone425
  %676 = load i32, i32* %size.addr.spec_write.Clone413, align 4
  %call16.spec_write.Clone439 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"??_C@_03PMGGPEJJ@?$CFd?6?$AA@", i32 0, i32 0), i32 %676)
  br label %if.end17.spec_write.Clone440

if.end17.spec_write.Clone440:                     ; preds = %if.then15.spec_write.Clone438, %if.end5.spec_write.Clone425
  %677 = load i32, i32* %size.addr.spec_write.Clone413, align 4
  store i32 %677, i32* %RetValuePtr441
  br label %while.cond.write_buf.Clone339.Split

while.cond.write_buf.Clone339.Split:              ; preds = %if.end17.spec_write.Clone440
  %RetValue442 = load i32, i32* %RetValuePtr441
  store i32 %RetValue442, i32* %n.write_buf.Clone338, align 4
  %678 = load i32, i32* %cnt.addr.write_buf.Clone335, align 4
  %cmp.write_buf.Clone341 = icmp ne i32 %RetValue442, %678
  br i1 %cmp.write_buf.Clone341, label %while.body.write_buf.Clone342, label %while.end.write_buf.Clone348

while.body.write_buf.Clone342:                    ; preds = %while.cond.write_buf.Clone339.Split
  %679 = load i32, i32* %n.write_buf.Clone338, align 4
  %cmp1.write_buf.Clone343 = icmp eq i32 %679, -1
  br i1 %cmp1.write_buf.Clone343, label %if.then.write_buf.Clone344, label %if.end.write_buf.Clone345

if.then.write_buf.Clone344:                       ; preds = %while.body.write_buf.Clone342
  call void @write_error()
  br label %if.end.write_buf.Clone345

if.end.write_buf.Clone345:                        ; preds = %if.then.write_buf.Clone344, %while.body.write_buf.Clone342
  %680 = load i32, i32* %n.write_buf.Clone338, align 4
  %681 = load i32, i32* %cnt.addr.write_buf.Clone335, align 4
  %sub.write_buf.Clone346 = sub i32 %681, %680
  store i32 %sub.write_buf.Clone346, i32* %cnt.addr.write_buf.Clone335, align 4
  %682 = load i8*, i8** %buf.addr.write_buf.Clone336, align 4
  %683 = load i32, i32* %n.write_buf.Clone338, align 4
  %add.ptr.write_buf.Clone347 = getelementptr inbounds i8, i8* %682, i32 %683
  store i8* %add.ptr.write_buf.Clone347, i8** %buf.addr.write_buf.Clone336, align 4
  br label %while.cond.write_buf.Clone339

while.end.write_buf.Clone348:                     ; preds = %while.cond.write_buf.Clone339.Split
  br label %if.end.flush_outbuf.Clone10.Split

if.end.flush_outbuf.Clone10.Split:                ; preds = %while.end.write_buf.Clone348
  %684 = load i32, i32* @outcnt, align 4
  %685 = load i32, i32* @bytes_out, align 4
  %add.flush_outbuf.Clone11 = add i32 %685, %684
  store i32 %add.flush_outbuf.Clone11, i32* @bytes_out, align 4
  store i32 0, i32* @outcnt, align 4
  br label %return.flush_outbuf.Clone12

return.flush_outbuf.Clone12:                      ; preds = %if.end.flush_outbuf.Clone10.Split, %if.then.flush_outbuf.Clone9
  br label %if.then250.Split

if.then250.Split:                                 ; preds = %return.flush_outbuf.Clone12
  br label %if.end251

if.end251:                                        ; preds = %if.then250.Split, %if.else242
  %686 = load i32, i32* @bytes_in, align 4
  %shr252 = lshr i32 %686, 16
  %conv253 = trunc i32 %shr252 to i16
  %conv254 = zext i16 %conv253 to i32
  %shr255 = ashr i32 %conv254, 8
  %conv256 = trunc i32 %shr255 to i8
  %687 = load i32, i32* @outcnt, align 4
  %inc257 = add i32 %687, 1
  store i32 %inc257, i32* @outcnt, align 4
  %arrayidx258 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i32 0, i32 %687
  store i8 %conv256, i8* %arrayidx258, align 1
  %688 = load i32, i32* @outcnt, align 4
  %cmp259 = icmp eq i32 %688, 16384
  br i1 %cmp259, label %if.then261, label %if.end262

if.then261:                                       ; preds = %if.end251
  br label %entry.flush_outbuf.Clone1

entry.flush_outbuf.Clone1:                        ; preds = %if.then261
  %689 = load i32, i32* @outcnt, align 4
  %cmp.flush_outbuf.Clone2 = icmp eq i32 %689, 0
  br i1 %cmp.flush_outbuf.Clone2, label %if.then.flush_outbuf.Clone3, label %if.end.flush_outbuf.Clone4

if.then.flush_outbuf.Clone3:                      ; preds = %entry.flush_outbuf.Clone1
  br label %return.flush_outbuf.Clone6

if.end.flush_outbuf.Clone4:                       ; preds = %entry.flush_outbuf.Clone1
  %690 = load i32, i32* @outcnt, align 4
  %691 = load i32, i32* @ofd, align 4
  br label %entry.write_buf.Clone349

entry.write_buf.Clone349:                         ; preds = %if.end.flush_outbuf.Clone4
  %cnt.addr.write_buf.Clone350 = alloca i32, align 4
  %buf.addr.write_buf.Clone351 = alloca i8*, align 4
  %fd.addr.write_buf.Clone352 = alloca i32, align 4
  %n.write_buf.Clone353 = alloca i32, align 4
  store i32 %690, i32* %cnt.addr.write_buf.Clone350, align 4
  store i8* getelementptr inbounds ([18432 x i8], [18432 x i8]* @outbuf, i32 0, i32 0), i8** %buf.addr.write_buf.Clone351, align 4
  store i32 %691, i32* %fd.addr.write_buf.Clone352, align 4
  br label %while.cond.write_buf.Clone354

while.cond.write_buf.Clone354:                    ; preds = %if.end.write_buf.Clone360, %entry.write_buf.Clone349
  %692 = load i32, i32* %cnt.addr.write_buf.Clone350, align 4
  %693 = load i8*, i8** %buf.addr.write_buf.Clone351, align 4
  %694 = load i32, i32* %fd.addr.write_buf.Clone352, align 4
  br label %entry.spec_write.Clone381

entry.spec_write.Clone381:                        ; preds = %while.cond.write_buf.Clone354
  %size.addr.spec_write.Clone382 = alloca i32, align 4
  %buf.addr.spec_write.Clone383 = alloca i8*, align 4
  %fd.addr.spec_write.Clone384 = alloca i32, align 4
  store i32 %692, i32* %size.addr.spec_write.Clone382, align 4
  store i8* %693, i8** %buf.addr.spec_write.Clone383, align 4
  store i32 %694, i32* %fd.addr.spec_write.Clone384, align 4
  %695 = load i32, i32* @dbglvl, align 4
  %cmp.spec_write.Clone385 = icmp slt i32 4, %695
  br i1 %cmp.spec_write.Clone385, label %if.then.spec_write.Clone386, label %if.end.spec_write.Clone388

if.then.spec_write.Clone386:                      ; preds = %entry.spec_write.Clone381
  %696 = load i32, i32* %size.addr.spec_write.Clone382, align 4
  %697 = load i8*, i8** %buf.addr.spec_write.Clone383, align 4
  %698 = load i32, i32* %fd.addr.spec_write.Clone384, align 4
  %call.spec_write.Clone387 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @"??_C@_0BK@GKFGHPHN@spec_write?3?5?$CFd?0?5?$CFx?0?5?$CFd?5?$DN?5?$AA@", i32 0, i32 0), i32 %698, i8* %697, i32 %696)
  br label %if.end.spec_write.Clone388

if.end.spec_write.Clone388:                       ; preds = %if.then.spec_write.Clone386, %entry.spec_write.Clone381
  %699 = load i32, i32* %fd.addr.spec_write.Clone384, align 4
  %cmp1.spec_write.Clone389 = icmp sgt i32 %699, 3
  br i1 %cmp1.spec_write.Clone389, label %if.then2.spec_write.Clone390, label %if.end5.spec_write.Clone394

if.then2.spec_write.Clone390:                     ; preds = %if.end.spec_write.Clone388
  %700 = load i32, i32* %fd.addr.spec_write.Clone384, align 4
  %call3.spec_write.Clone391 = call %struct._iobuf* @__iob_func()
  %arrayidx.spec_write.Clone392 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.spec_write.Clone391, i32 2
  %call4.spec_write.Clone393 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.spec_write.Clone392, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"??_C@_0CD@NANFEFEM@spec_write?3?5fd?$DN?$CFd?0?5?$DO?5MAX_SPEC_FD@", i32 0, i32 0), i32 %700)
  call void @exit(i32 1) #7
  unreachable

if.end5.spec_write.Clone394:                      ; preds = %if.end.spec_write.Clone388
  %701 = load i32, i32* %fd.addr.spec_write.Clone384, align 4
  %arrayidx6.spec_write.Clone395 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %701
  %buf7.spec_write.Clone396 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx6.spec_write.Clone395, i32 0, i32 3
  %702 = load i8*, i8** %buf7.spec_write.Clone396, align 4
  %703 = load i32, i32* %fd.addr.spec_write.Clone384, align 4
  %arrayidx8.spec_write.Clone397 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %703
  %pos.spec_write.Clone398 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx8.spec_write.Clone397, i32 0, i32 2
  %704 = load i32, i32* %pos.spec_write.Clone398, align 4
  %arrayidx9.spec_write.Clone399 = getelementptr inbounds i8, i8* %702, i32 %704
  %705 = load i8*, i8** %buf.addr.spec_write.Clone383, align 4
  %706 = load i32, i32* %size.addr.spec_write.Clone382, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %arrayidx9.spec_write.Clone399, i8* align 1 %705, i32 %706, i1 false)
  %707 = load i32, i32* %size.addr.spec_write.Clone382, align 4
  %708 = load i32, i32* %fd.addr.spec_write.Clone384, align 4
  %arrayidx10.spec_write.Clone400 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %708
  %len.spec_write.Clone401 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx10.spec_write.Clone400, i32 0, i32 1
  %709 = load i32, i32* %len.spec_write.Clone401, align 4
  %add.spec_write.Clone402 = add nsw i32 %709, %707
  store i32 %add.spec_write.Clone402, i32* %len.spec_write.Clone401, align 4
  %710 = load i32, i32* %size.addr.spec_write.Clone382, align 4
  %711 = load i32, i32* %fd.addr.spec_write.Clone384, align 4
  %arrayidx11.spec_write.Clone403 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %711
  %pos12.spec_write.Clone404 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx11.spec_write.Clone403, i32 0, i32 2
  %712 = load i32, i32* %pos12.spec_write.Clone404, align 4
  %add13.spec_write.Clone405 = add nsw i32 %712, %710
  store i32 %add13.spec_write.Clone405, i32* %pos12.spec_write.Clone404, align 4
  %713 = load i32, i32* @dbglvl, align 4
  %cmp14.spec_write.Clone406 = icmp slt i32 4, %713
  br i1 %cmp14.spec_write.Clone406, label %if.then15.spec_write.Clone407, label %if.end17.spec_write.Clone409

if.then15.spec_write.Clone407:                    ; preds = %if.end5.spec_write.Clone394
  %714 = load i32, i32* %size.addr.spec_write.Clone382, align 4
  %call16.spec_write.Clone408 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"??_C@_03PMGGPEJJ@?$CFd?6?$AA@", i32 0, i32 0), i32 %714)
  br label %if.end17.spec_write.Clone409

if.end17.spec_write.Clone409:                     ; preds = %if.then15.spec_write.Clone407, %if.end5.spec_write.Clone394
  %715 = load i32, i32* %size.addr.spec_write.Clone382, align 4
  store i32 %715, i32* %RetValuePtr410
  br label %while.cond.write_buf.Clone354.Split

while.cond.write_buf.Clone354.Split:              ; preds = %if.end17.spec_write.Clone409
  %RetValue411 = load i32, i32* %RetValuePtr410
  store i32 %RetValue411, i32* %n.write_buf.Clone353, align 4
  %716 = load i32, i32* %cnt.addr.write_buf.Clone350, align 4
  %cmp.write_buf.Clone356 = icmp ne i32 %RetValue411, %716
  br i1 %cmp.write_buf.Clone356, label %while.body.write_buf.Clone357, label %while.end.write_buf.Clone363

while.body.write_buf.Clone357:                    ; preds = %while.cond.write_buf.Clone354.Split
  %717 = load i32, i32* %n.write_buf.Clone353, align 4
  %cmp1.write_buf.Clone358 = icmp eq i32 %717, -1
  br i1 %cmp1.write_buf.Clone358, label %if.then.write_buf.Clone359, label %if.end.write_buf.Clone360

if.then.write_buf.Clone359:                       ; preds = %while.body.write_buf.Clone357
  call void @write_error()
  br label %if.end.write_buf.Clone360

if.end.write_buf.Clone360:                        ; preds = %if.then.write_buf.Clone359, %while.body.write_buf.Clone357
  %718 = load i32, i32* %n.write_buf.Clone353, align 4
  %719 = load i32, i32* %cnt.addr.write_buf.Clone350, align 4
  %sub.write_buf.Clone361 = sub i32 %719, %718
  store i32 %sub.write_buf.Clone361, i32* %cnt.addr.write_buf.Clone350, align 4
  %720 = load i8*, i8** %buf.addr.write_buf.Clone351, align 4
  %721 = load i32, i32* %n.write_buf.Clone353, align 4
  %add.ptr.write_buf.Clone362 = getelementptr inbounds i8, i8* %720, i32 %721
  store i8* %add.ptr.write_buf.Clone362, i8** %buf.addr.write_buf.Clone351, align 4
  br label %while.cond.write_buf.Clone354

while.end.write_buf.Clone363:                     ; preds = %while.cond.write_buf.Clone354.Split
  br label %if.end.flush_outbuf.Clone4.Split

if.end.flush_outbuf.Clone4.Split:                 ; preds = %while.end.write_buf.Clone363
  %722 = load i32, i32* @outcnt, align 4
  %723 = load i32, i32* @bytes_out, align 4
  %add.flush_outbuf.Clone5 = add i32 %723, %722
  store i32 %add.flush_outbuf.Clone5, i32* @bytes_out, align 4
  store i32 0, i32* @outcnt, align 4
  br label %return.flush_outbuf.Clone6

return.flush_outbuf.Clone6:                       ; preds = %if.end.flush_outbuf.Clone4.Split, %if.then.flush_outbuf.Clone3
  br label %if.then261.Split

if.then261.Split:                                 ; preds = %return.flush_outbuf.Clone6
  br label %if.end262

if.end262:                                        ; preds = %if.then261.Split, %if.end251
  br label %if.end263

if.end263:                                        ; preds = %if.end262, %if.then229
  %724 = load i32, i32* @header_bytes, align 4
  %add = add i32 %724, 8
  store i32 %add, i32* @header_bytes, align 4
  br label %entry.flush_outbuf.Clone

entry.flush_outbuf.Clone:                         ; preds = %if.end263
  %725 = load i32, i32* @outcnt, align 4
  %cmp.flush_outbuf.Clone = icmp eq i32 %725, 0
  br i1 %cmp.flush_outbuf.Clone, label %if.then.flush_outbuf.Clone, label %if.end.flush_outbuf.Clone

if.then.flush_outbuf.Clone:                       ; preds = %entry.flush_outbuf.Clone
  br label %return.flush_outbuf.Clone

if.end.flush_outbuf.Clone:                        ; preds = %entry.flush_outbuf.Clone
  %726 = load i32, i32* @outcnt, align 4
  %727 = load i32, i32* @ofd, align 4
  br label %entry.write_buf.Clone364

entry.write_buf.Clone364:                         ; preds = %if.end.flush_outbuf.Clone
  %cnt.addr.write_buf.Clone365 = alloca i32, align 4
  %buf.addr.write_buf.Clone366 = alloca i8*, align 4
  %fd.addr.write_buf.Clone367 = alloca i32, align 4
  %n.write_buf.Clone368 = alloca i32, align 4
  store i32 %726, i32* %cnt.addr.write_buf.Clone365, align 4
  store i8* getelementptr inbounds ([18432 x i8], [18432 x i8]* @outbuf, i32 0, i32 0), i8** %buf.addr.write_buf.Clone366, align 4
  store i32 %727, i32* %fd.addr.write_buf.Clone367, align 4
  br label %while.cond.write_buf.Clone369

while.cond.write_buf.Clone369:                    ; preds = %if.end.write_buf.Clone375, %entry.write_buf.Clone364
  %728 = load i32, i32* %cnt.addr.write_buf.Clone365, align 4
  %729 = load i8*, i8** %buf.addr.write_buf.Clone366, align 4
  %730 = load i32, i32* %fd.addr.write_buf.Clone367, align 4
  br label %entry.spec_write.Clone

entry.spec_write.Clone:                           ; preds = %while.cond.write_buf.Clone369
  %size.addr.spec_write.Clone = alloca i32, align 4
  %buf.addr.spec_write.Clone = alloca i8*, align 4
  %fd.addr.spec_write.Clone = alloca i32, align 4
  store i32 %728, i32* %size.addr.spec_write.Clone, align 4
  store i8* %729, i8** %buf.addr.spec_write.Clone, align 4
  store i32 %730, i32* %fd.addr.spec_write.Clone, align 4
  %731 = load i32, i32* @dbglvl, align 4
  %cmp.spec_write.Clone = icmp slt i32 4, %731
  br i1 %cmp.spec_write.Clone, label %if.then.spec_write.Clone, label %if.end.spec_write.Clone

if.then.spec_write.Clone:                         ; preds = %entry.spec_write.Clone
  %732 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %733 = load i8*, i8** %buf.addr.spec_write.Clone, align 4
  %734 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %call.spec_write.Clone = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @"??_C@_0BK@GKFGHPHN@spec_write?3?5?$CFd?0?5?$CFx?0?5?$CFd?5?$DN?5?$AA@", i32 0, i32 0), i32 %734, i8* %733, i32 %732)
  br label %if.end.spec_write.Clone

if.end.spec_write.Clone:                          ; preds = %if.then.spec_write.Clone, %entry.spec_write.Clone
  %735 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %cmp1.spec_write.Clone = icmp sgt i32 %735, 3
  br i1 %cmp1.spec_write.Clone, label %if.then2.spec_write.Clone, label %if.end5.spec_write.Clone

if.then2.spec_write.Clone:                        ; preds = %if.end.spec_write.Clone
  %736 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %call3.spec_write.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx.spec_write.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.spec_write.Clone, i32 2
  %call4.spec_write.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.spec_write.Clone, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"??_C@_0CD@NANFEFEM@spec_write?3?5fd?$DN?$CFd?0?5?$DO?5MAX_SPEC_FD@", i32 0, i32 0), i32 %736)
  call void @exit(i32 1) #7
  unreachable

if.end5.spec_write.Clone:                         ; preds = %if.end.spec_write.Clone
  %737 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx6.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %737
  %buf7.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx6.spec_write.Clone, i32 0, i32 3
  %738 = load i8*, i8** %buf7.spec_write.Clone, align 4
  %739 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx8.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %739
  %pos.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx8.spec_write.Clone, i32 0, i32 2
  %740 = load i32, i32* %pos.spec_write.Clone, align 4
  %arrayidx9.spec_write.Clone = getelementptr inbounds i8, i8* %738, i32 %740
  %741 = load i8*, i8** %buf.addr.spec_write.Clone, align 4
  %742 = load i32, i32* %size.addr.spec_write.Clone, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %arrayidx9.spec_write.Clone, i8* align 1 %741, i32 %742, i1 false)
  %743 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %744 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx10.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %744
  %len.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx10.spec_write.Clone, i32 0, i32 1
  %745 = load i32, i32* %len.spec_write.Clone, align 4
  %add.spec_write.Clone = add nsw i32 %745, %743
  store i32 %add.spec_write.Clone, i32* %len.spec_write.Clone, align 4
  %746 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %747 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx11.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %747
  %pos12.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx11.spec_write.Clone, i32 0, i32 2
  %748 = load i32, i32* %pos12.spec_write.Clone, align 4
  %add13.spec_write.Clone = add nsw i32 %748, %746
  store i32 %add13.spec_write.Clone, i32* %pos12.spec_write.Clone, align 4
  %749 = load i32, i32* @dbglvl, align 4
  %cmp14.spec_write.Clone = icmp slt i32 4, %749
  br i1 %cmp14.spec_write.Clone, label %if.then15.spec_write.Clone, label %if.end17.spec_write.Clone

if.then15.spec_write.Clone:                       ; preds = %if.end5.spec_write.Clone
  %750 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %call16.spec_write.Clone = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"??_C@_03PMGGPEJJ@?$CFd?6?$AA@", i32 0, i32 0), i32 %750)
  br label %if.end17.spec_write.Clone

if.end17.spec_write.Clone:                        ; preds = %if.then15.spec_write.Clone, %if.end5.spec_write.Clone
  %751 = load i32, i32* %size.addr.spec_write.Clone, align 4
  store i32 %751, i32* %RetValuePtr379
  br label %while.cond.write_buf.Clone369.Split

while.cond.write_buf.Clone369.Split:              ; preds = %if.end17.spec_write.Clone
  %RetValue380 = load i32, i32* %RetValuePtr379
  store i32 %RetValue380, i32* %n.write_buf.Clone368, align 4
  %752 = load i32, i32* %cnt.addr.write_buf.Clone365, align 4
  %cmp.write_buf.Clone371 = icmp ne i32 %RetValue380, %752
  br i1 %cmp.write_buf.Clone371, label %while.body.write_buf.Clone372, label %while.end.write_buf.Clone378

while.body.write_buf.Clone372:                    ; preds = %while.cond.write_buf.Clone369.Split
  %753 = load i32, i32* %n.write_buf.Clone368, align 4
  %cmp1.write_buf.Clone373 = icmp eq i32 %753, -1
  br i1 %cmp1.write_buf.Clone373, label %if.then.write_buf.Clone374, label %if.end.write_buf.Clone375

if.then.write_buf.Clone374:                       ; preds = %while.body.write_buf.Clone372
  call void @write_error()
  br label %if.end.write_buf.Clone375

if.end.write_buf.Clone375:                        ; preds = %if.then.write_buf.Clone374, %while.body.write_buf.Clone372
  %754 = load i32, i32* %n.write_buf.Clone368, align 4
  %755 = load i32, i32* %cnt.addr.write_buf.Clone365, align 4
  %sub.write_buf.Clone376 = sub i32 %755, %754
  store i32 %sub.write_buf.Clone376, i32* %cnt.addr.write_buf.Clone365, align 4
  %756 = load i8*, i8** %buf.addr.write_buf.Clone366, align 4
  %757 = load i32, i32* %n.write_buf.Clone368, align 4
  %add.ptr.write_buf.Clone377 = getelementptr inbounds i8, i8* %756, i32 %757
  store i8* %add.ptr.write_buf.Clone377, i8** %buf.addr.write_buf.Clone366, align 4
  br label %while.cond.write_buf.Clone369

while.end.write_buf.Clone378:                     ; preds = %while.cond.write_buf.Clone369.Split
  br label %if.end.flush_outbuf.Clone.Split

if.end.flush_outbuf.Clone.Split:                  ; preds = %while.end.write_buf.Clone378
  %758 = load i32, i32* @outcnt, align 4
  %759 = load i32, i32* @bytes_out, align 4
  %add.flush_outbuf.Clone = add i32 %759, %758
  store i32 %add.flush_outbuf.Clone, i32* @bytes_out, align 4
  store i32 0, i32* @outcnt, align 4
  br label %return.flush_outbuf.Clone

return.flush_outbuf.Clone:                        ; preds = %if.end.flush_outbuf.Clone.Split, %if.then.flush_outbuf.Clone
  br label %if.end263.Split

if.end263.Split:                                  ; preds = %return.flush_outbuf.Clone
  ret i32 0
}

; Function Attrs: noinline optnone sspstrong
define dso_local i32 @file_read(i8* %buf, i32 %size) #1 {
entry:
  %retval = alloca i32, align 4
  %size.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 4
  %len = alloca i32, align 4
  store i32 %size, i32* %size.addr, align 4
  store i8* %buf, i8** %buf.addr, align 4
  %0 = load i32, i32* %size.addr, align 4
  %1 = load i8*, i8** %buf.addr, align 4
  %2 = load i32, i32* @ifd, align 4
  %call = call i32 @spec_read(i32 %2, i8* %1, i32 %0)
  store i32 %call, i32* %len, align 4
  %3 = load i32, i32* %len, align 4
  %cmp = icmp eq i32 %3, -1
  %RetValuePtr = alloca i32, align 4
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %4 = load i32, i32* %len, align 4
  %cmp1 = icmp eq i32 %4, 0
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  %5 = load i32, i32* %len, align 4
  store i32 %5, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %6 = load i32, i32* %len, align 4
  %7 = load i8*, i8** %buf.addr, align 4
  br label %entry.updcrc.Clone

entry.updcrc.Clone:                               ; preds = %if.end
  %n.addr.updcrc.Clone = alloca i32, align 4
  %s.addr.updcrc.Clone = alloca i8*, align 4
  %c.updcrc.Clone = alloca i32, align 4
  store i32 %6, i32* %n.addr.updcrc.Clone, align 4
  store i8* %7, i8** %s.addr.updcrc.Clone, align 4
  %8 = load i8*, i8** %s.addr.updcrc.Clone, align 4
  %cmp.updcrc.Clone = icmp eq i8* %8, null
  br i1 %cmp.updcrc.Clone, label %if.then.updcrc.Clone, label %if.else.updcrc.Clone

if.then.updcrc.Clone:                             ; preds = %entry.updcrc.Clone
  store i32 -1, i32* %c.updcrc.Clone, align 4
  br label %if.end4.updcrc.Clone

if.else.updcrc.Clone:                             ; preds = %entry.updcrc.Clone
  %9 = load i32, i32* @updcrc.crc, align 4
  store i32 %9, i32* %c.updcrc.Clone, align 4
  %10 = load i32, i32* %n.addr.updcrc.Clone, align 4
  %tobool.updcrc.Clone = icmp ne i32 %10, 0
  br i1 %tobool.updcrc.Clone, label %if.then1.updcrc.Clone, label %if.end.updcrc.Clone

if.then1.updcrc.Clone:                            ; preds = %if.else.updcrc.Clone
  br label %do.body.updcrc.Clone

do.body.updcrc.Clone:                             ; preds = %do.cond.updcrc.Clone, %if.then1.updcrc.Clone
  %11 = load i32, i32* %c.updcrc.Clone, align 4
  %12 = load i8*, i8** %s.addr.updcrc.Clone, align 4
  %incdec.ptr.updcrc.Clone = getelementptr inbounds i8, i8* %12, i32 1
  store i8* %incdec.ptr.updcrc.Clone, i8** %s.addr.updcrc.Clone, align 4
  %13 = load i8, i8* %12, align 1
  %conv.updcrc.Clone = zext i8 %13 to i32
  %xor.updcrc.Clone = xor i32 %11, %conv.updcrc.Clone
  %and.updcrc.Clone = and i32 %xor.updcrc.Clone, 255
  %arrayidx.updcrc.Clone = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([256 x i32]* @crc_32_tab to [0 x i32]*), i32 0, i32 %and.updcrc.Clone
  %14 = load i32, i32* %arrayidx.updcrc.Clone, align 4
  %15 = load i32, i32* %c.updcrc.Clone, align 4
  %shr.updcrc.Clone = lshr i32 %15, 8
  %xor2.updcrc.Clone = xor i32 %14, %shr.updcrc.Clone
  store i32 %xor2.updcrc.Clone, i32* %c.updcrc.Clone, align 4
  br label %do.cond.updcrc.Clone

do.cond.updcrc.Clone:                             ; preds = %do.body.updcrc.Clone
  %16 = load i32, i32* %n.addr.updcrc.Clone, align 4
  %dec.updcrc.Clone = add i32 %16, -1
  store i32 %dec.updcrc.Clone, i32* %n.addr.updcrc.Clone, align 4
  %tobool3.updcrc.Clone = icmp ne i32 %dec.updcrc.Clone, 0
  br i1 %tobool3.updcrc.Clone, label %do.body.updcrc.Clone, label %do.end.updcrc.Clone

do.end.updcrc.Clone:                              ; preds = %do.cond.updcrc.Clone
  br label %if.end.updcrc.Clone

if.end.updcrc.Clone:                              ; preds = %do.end.updcrc.Clone, %if.else.updcrc.Clone
  br label %if.end4.updcrc.Clone

if.end4.updcrc.Clone:                             ; preds = %if.end.updcrc.Clone, %if.then.updcrc.Clone
  %17 = load i32, i32* %c.updcrc.Clone, align 4
  store i32 %17, i32* @updcrc.crc, align 4
  %18 = load i32, i32* %c.updcrc.Clone, align 4
  %xor5.updcrc.Clone = xor i32 %18, -1
  store i32 %xor5.updcrc.Clone, i32* %RetValuePtr
  br label %if.end.Split

if.end.Split:                                     ; preds = %if.end4.updcrc.Clone
  %RetValue = load i32, i32* %RetValuePtr
  store i32 %RetValue, i32* @crc, align 4
  %19 = load i32, i32* %len, align 4
  %20 = load i32, i32* @bytes_in, align 4
  %add = add i32 %20, %19
  store i32 %add, i32* @bytes_in, align 4
  %21 = load i32, i32* %len, align 4
  store i32 %21, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end.Split, %if.then
  %22 = load i32, i32* %retval, align 4
  ret i32 %22
}

define void @if.then.OutLineFunc(i32* %OutFuncArg, i32* %OutFuncArg1) {
entry:
  %OutFuncArg.addr = alloca i32*, align 4
  store i32* %OutFuncArg, i32** %OutFuncArg.addr, align 4
  %value.addr.Clone = load i32*, i32** %OutFuncArg.addr, align 4
  %OutFuncArg1.addr = alloca i32*, align 4
  store i32* %OutFuncArg1, i32** %OutFuncArg1.addr, align 4
  %length.addr.Clone = load i32*, i32** %OutFuncArg1.addr, align 4
  %RetValuePtr = alloca i32, align 4
  %RetValuePtr52 = alloca i32, align 4
  br label %if.then.Clone

if.then.Clone:                                    ; preds = %entry
  %0 = load i32, i32* %value.addr.Clone, align 4
  %1 = load i32, i32* @bi_valid, align 4
  %shl.Clone = shl i32 %0, %1
  %2 = load i16, i16* @bi_buf, align 2
  %conv.Clone = zext i16 %2 to i32
  %or.Clone = or i32 %conv.Clone, %shl.Clone
  %conv1.Clone = trunc i32 %or.Clone to i16
  store i16 %conv1.Clone, i16* @bi_buf, align 2
  %3 = load i32, i32* @outcnt, align 4
  %cmp2.Clone = icmp ult i32 %3, 16382
  br i1 %cmp2.Clone, label %if.then4.Clone, label %if.else.Clone

if.then4.Clone:                                   ; preds = %if.then.Clone
  %4 = load i16, i16* @bi_buf, align 2
  %conv5.Clone = zext i16 %4 to i32
  %and.Clone = and i32 %conv5.Clone, 255
  %conv6.Clone = trunc i32 %and.Clone to i8
  %5 = load i32, i32* @outcnt, align 4
  %inc.Clone = add i32 %5, 1
  store i32 %inc.Clone, i32* @outcnt, align 4
  %arrayidx.Clone = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i32 0, i32 %5
  store i8 %conv6.Clone, i8* %arrayidx.Clone, align 1
  %6 = load i16, i16* @bi_buf, align 2
  %conv7.Clone = zext i16 %6 to i32
  %shr.Clone = ashr i32 %conv7.Clone, 8
  %conv8.Clone = trunc i32 %shr.Clone to i8
  %7 = load i32, i32* @outcnt, align 4
  %inc9.Clone = add i32 %7, 1
  store i32 %inc9.Clone, i32* @outcnt, align 4
  %arrayidx10.Clone = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i32 0, i32 %7
  store i8 %conv8.Clone, i8* %arrayidx10.Clone, align 1
  br label %if.end28.Clone

if.else.Clone:                                    ; preds = %if.then.Clone
  %8 = load i16, i16* @bi_buf, align 2
  %conv11.Clone = zext i16 %8 to i32
  %and12.Clone = and i32 %conv11.Clone, 255
  %conv13.Clone = trunc i32 %and12.Clone to i8
  %9 = load i32, i32* @outcnt, align 4
  %inc14.Clone = add i32 %9, 1
  store i32 %inc14.Clone, i32* @outcnt, align 4
  %arrayidx15.Clone = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i32 0, i32 %9
  store i8 %conv13.Clone, i8* %arrayidx15.Clone, align 1
  %10 = load i32, i32* @outcnt, align 4
  %cmp16.Clone = icmp eq i32 %10, 16384
  br i1 %cmp16.Clone, label %if.then18.Clone, label %if.end.Clone

if.then18.Clone:                                  ; preds = %if.else.Clone
  br label %entry.flush_outbuf.Clone2

entry.flush_outbuf.Clone2:                        ; preds = %if.then18.Clone
  %11 = load i32, i32* @outcnt, align 4
  %cmp.flush_outbuf.Clone3 = icmp eq i32 %11, 0
  br i1 %cmp.flush_outbuf.Clone3, label %if.then.flush_outbuf.Clone4, label %if.end.flush_outbuf.Clone5

if.then.flush_outbuf.Clone4:                      ; preds = %entry.flush_outbuf.Clone2
  br label %return.flush_outbuf.Clone7

if.end.flush_outbuf.Clone5:                       ; preds = %entry.flush_outbuf.Clone2
  %12 = load i32, i32* @outcnt, align 4
  %13 = load i32, i32* @ofd, align 4
  br label %entry.write_buf.Clone

entry.write_buf.Clone:                            ; preds = %if.end.flush_outbuf.Clone5
  %cnt.addr.write_buf.Clone = alloca i32, align 4
  %buf.addr.write_buf.Clone = alloca i8*, align 4
  %fd.addr.write_buf.Clone = alloca i32, align 4
  %n.write_buf.Clone = alloca i32, align 4
  store i32 %12, i32* %cnt.addr.write_buf.Clone, align 4
  store i8* getelementptr inbounds ([18432 x i8], [18432 x i8]* @outbuf, i32 0, i32 0), i8** %buf.addr.write_buf.Clone, align 4
  store i32 %13, i32* %fd.addr.write_buf.Clone, align 4
  br label %while.cond.write_buf.Clone

while.cond.write_buf.Clone:                       ; preds = %if.end.write_buf.Clone, %entry.write_buf.Clone
  %14 = load i32, i32* %cnt.addr.write_buf.Clone, align 4
  %15 = load i8*, i8** %buf.addr.write_buf.Clone, align 4
  %16 = load i32, i32* %fd.addr.write_buf.Clone, align 4
  br label %entry.spec_write.Clone23

entry.spec_write.Clone23:                         ; preds = %while.cond.write_buf.Clone
  %size.addr.spec_write.Clone24 = alloca i32, align 4
  %buf.addr.spec_write.Clone25 = alloca i8*, align 4
  %fd.addr.spec_write.Clone26 = alloca i32, align 4
  store i32 %14, i32* %size.addr.spec_write.Clone24, align 4
  store i8* %15, i8** %buf.addr.spec_write.Clone25, align 4
  store i32 %16, i32* %fd.addr.spec_write.Clone26, align 4
  %17 = load i32, i32* @dbglvl, align 4
  %cmp.spec_write.Clone27 = icmp slt i32 4, %17
  br i1 %cmp.spec_write.Clone27, label %if.then.spec_write.Clone28, label %if.end.spec_write.Clone30

if.then.spec_write.Clone28:                       ; preds = %entry.spec_write.Clone23
  %18 = load i32, i32* %size.addr.spec_write.Clone24, align 4
  %19 = load i8*, i8** %buf.addr.spec_write.Clone25, align 4
  %20 = load i32, i32* %fd.addr.spec_write.Clone26, align 4
  %call.spec_write.Clone29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @"??_C@_0BK@GKFGHPHN@spec_write?3?5?$CFd?0?5?$CFx?0?5?$CFd?5?$DN?5?$AA@", i32 0, i32 0), i32 %20, i8* %19, i32 %18)
  br label %if.end.spec_write.Clone30

if.end.spec_write.Clone30:                        ; preds = %if.then.spec_write.Clone28, %entry.spec_write.Clone23
  %21 = load i32, i32* %fd.addr.spec_write.Clone26, align 4
  %cmp1.spec_write.Clone31 = icmp sgt i32 %21, 3
  br i1 %cmp1.spec_write.Clone31, label %if.then2.spec_write.Clone32, label %if.end5.spec_write.Clone36

if.then2.spec_write.Clone32:                      ; preds = %if.end.spec_write.Clone30
  %22 = load i32, i32* %fd.addr.spec_write.Clone26, align 4
  %call3.spec_write.Clone33 = call %struct._iobuf* @__iob_func()
  %arrayidx.spec_write.Clone34 = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.spec_write.Clone33, i32 2
  %call4.spec_write.Clone35 = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.spec_write.Clone34, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"??_C@_0CD@NANFEFEM@spec_write?3?5fd?$DN?$CFd?0?5?$DO?5MAX_SPEC_FD@", i32 0, i32 0), i32 %22)
  call void @exit(i32 1) #7
  unreachable

if.end5.spec_write.Clone36:                       ; preds = %if.end.spec_write.Clone30
  %23 = load i32, i32* %fd.addr.spec_write.Clone26, align 4
  %arrayidx6.spec_write.Clone37 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %23
  %buf7.spec_write.Clone38 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx6.spec_write.Clone37, i32 0, i32 3
  %24 = load i8*, i8** %buf7.spec_write.Clone38, align 4
  %25 = load i32, i32* %fd.addr.spec_write.Clone26, align 4
  %arrayidx8.spec_write.Clone39 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %25
  %pos.spec_write.Clone40 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx8.spec_write.Clone39, i32 0, i32 2
  %26 = load i32, i32* %pos.spec_write.Clone40, align 4
  %arrayidx9.spec_write.Clone41 = getelementptr inbounds i8, i8* %24, i32 %26
  %27 = load i8*, i8** %buf.addr.spec_write.Clone25, align 4
  %28 = load i32, i32* %size.addr.spec_write.Clone24, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %arrayidx9.spec_write.Clone41, i8* align 1 %27, i32 %28, i1 false)
  %29 = load i32, i32* %size.addr.spec_write.Clone24, align 4
  %30 = load i32, i32* %fd.addr.spec_write.Clone26, align 4
  %arrayidx10.spec_write.Clone42 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %30
  %len.spec_write.Clone43 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx10.spec_write.Clone42, i32 0, i32 1
  %31 = load i32, i32* %len.spec_write.Clone43, align 4
  %add.spec_write.Clone44 = add nsw i32 %31, %29
  store i32 %add.spec_write.Clone44, i32* %len.spec_write.Clone43, align 4
  %32 = load i32, i32* %size.addr.spec_write.Clone24, align 4
  %33 = load i32, i32* %fd.addr.spec_write.Clone26, align 4
  %arrayidx11.spec_write.Clone45 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %33
  %pos12.spec_write.Clone46 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx11.spec_write.Clone45, i32 0, i32 2
  %34 = load i32, i32* %pos12.spec_write.Clone46, align 4
  %add13.spec_write.Clone47 = add nsw i32 %34, %32
  store i32 %add13.spec_write.Clone47, i32* %pos12.spec_write.Clone46, align 4
  %35 = load i32, i32* @dbglvl, align 4
  %cmp14.spec_write.Clone48 = icmp slt i32 4, %35
  br i1 %cmp14.spec_write.Clone48, label %if.then15.spec_write.Clone49, label %if.end17.spec_write.Clone51

if.then15.spec_write.Clone49:                     ; preds = %if.end5.spec_write.Clone36
  %36 = load i32, i32* %size.addr.spec_write.Clone24, align 4
  %call16.spec_write.Clone50 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"??_C@_03PMGGPEJJ@?$CFd?6?$AA@", i32 0, i32 0), i32 %36)
  br label %if.end17.spec_write.Clone51

if.end17.spec_write.Clone51:                      ; preds = %if.then15.spec_write.Clone49, %if.end5.spec_write.Clone36
  %37 = load i32, i32* %size.addr.spec_write.Clone24, align 4
  store i32 %37, i32* %RetValuePtr52
  br label %while.cond.write_buf.Clone.Split

while.cond.write_buf.Clone.Split:                 ; preds = %if.end17.spec_write.Clone51
  %RetValue53 = load i32, i32* %RetValuePtr52
  store i32 %RetValue53, i32* %n.write_buf.Clone, align 4
  %38 = load i32, i32* %cnt.addr.write_buf.Clone, align 4
  %cmp.write_buf.Clone = icmp ne i32 %RetValue53, %38
  br i1 %cmp.write_buf.Clone, label %while.body.write_buf.Clone, label %while.end.write_buf.Clone

while.body.write_buf.Clone:                       ; preds = %while.cond.write_buf.Clone.Split
  %39 = load i32, i32* %n.write_buf.Clone, align 4
  %cmp1.write_buf.Clone = icmp eq i32 %39, -1
  br i1 %cmp1.write_buf.Clone, label %if.then.write_buf.Clone, label %if.end.write_buf.Clone

if.then.write_buf.Clone:                          ; preds = %while.body.write_buf.Clone
  call void @write_error()
  br label %if.end.write_buf.Clone

if.end.write_buf.Clone:                           ; preds = %if.then.write_buf.Clone, %while.body.write_buf.Clone
  %40 = load i32, i32* %n.write_buf.Clone, align 4
  %41 = load i32, i32* %cnt.addr.write_buf.Clone, align 4
  %sub.write_buf.Clone = sub i32 %41, %40
  store i32 %sub.write_buf.Clone, i32* %cnt.addr.write_buf.Clone, align 4
  %42 = load i8*, i8** %buf.addr.write_buf.Clone, align 4
  %43 = load i32, i32* %n.write_buf.Clone, align 4
  %add.ptr.write_buf.Clone = getelementptr inbounds i8, i8* %42, i32 %43
  store i8* %add.ptr.write_buf.Clone, i8** %buf.addr.write_buf.Clone, align 4
  br label %while.cond.write_buf.Clone

while.end.write_buf.Clone:                        ; preds = %while.cond.write_buf.Clone.Split
  br label %if.end.flush_outbuf.Clone5.Split

if.end.flush_outbuf.Clone5.Split:                 ; preds = %while.end.write_buf.Clone
  %44 = load i32, i32* @outcnt, align 4
  %45 = load i32, i32* @bytes_out, align 4
  %add.flush_outbuf.Clone6 = add i32 %45, %44
  store i32 %add.flush_outbuf.Clone6, i32* @bytes_out, align 4
  store i32 0, i32* @outcnt, align 4
  br label %return.flush_outbuf.Clone7

return.flush_outbuf.Clone7:                       ; preds = %if.end.flush_outbuf.Clone5.Split, %if.then.flush_outbuf.Clone4
  br label %if.then18.Clone.Split

if.then18.Clone.Split:                            ; preds = %return.flush_outbuf.Clone7
  br label %if.end.Clone

if.end.Clone:                                     ; preds = %if.then18.Clone.Split, %if.else.Clone
  %46 = load i16, i16* @bi_buf, align 2
  %conv19.Clone = zext i16 %46 to i32
  %shr20.Clone = ashr i32 %conv19.Clone, 8
  %conv21.Clone = trunc i32 %shr20.Clone to i8
  %47 = load i32, i32* @outcnt, align 4
  %inc22.Clone = add i32 %47, 1
  store i32 %inc22.Clone, i32* @outcnt, align 4
  %arrayidx23.Clone = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i32 0, i32 %47
  store i8 %conv21.Clone, i8* %arrayidx23.Clone, align 1
  %48 = load i32, i32* @outcnt, align 4
  %cmp24.Clone = icmp eq i32 %48, 16384
  br i1 %cmp24.Clone, label %if.then26.Clone, label %if.end27.Clone

if.then26.Clone:                                  ; preds = %if.end.Clone
  br label %entry.flush_outbuf.Clone

entry.flush_outbuf.Clone:                         ; preds = %if.then26.Clone
  %49 = load i32, i32* @outcnt, align 4
  %cmp.flush_outbuf.Clone = icmp eq i32 %49, 0
  br i1 %cmp.flush_outbuf.Clone, label %if.then.flush_outbuf.Clone, label %if.end.flush_outbuf.Clone

if.then.flush_outbuf.Clone:                       ; preds = %entry.flush_outbuf.Clone
  br label %return.flush_outbuf.Clone

if.end.flush_outbuf.Clone:                        ; preds = %entry.flush_outbuf.Clone
  %50 = load i32, i32* @outcnt, align 4
  %51 = load i32, i32* @ofd, align 4
  br label %entry.write_buf.Clone8

entry.write_buf.Clone8:                           ; preds = %if.end.flush_outbuf.Clone
  %cnt.addr.write_buf.Clone9 = alloca i32, align 4
  %buf.addr.write_buf.Clone10 = alloca i8*, align 4
  %fd.addr.write_buf.Clone11 = alloca i32, align 4
  %n.write_buf.Clone12 = alloca i32, align 4
  store i32 %50, i32* %cnt.addr.write_buf.Clone9, align 4
  store i8* getelementptr inbounds ([18432 x i8], [18432 x i8]* @outbuf, i32 0, i32 0), i8** %buf.addr.write_buf.Clone10, align 4
  store i32 %51, i32* %fd.addr.write_buf.Clone11, align 4
  br label %while.cond.write_buf.Clone13

while.cond.write_buf.Clone13:                     ; preds = %if.end.write_buf.Clone19, %entry.write_buf.Clone8
  %52 = load i32, i32* %cnt.addr.write_buf.Clone9, align 4
  %53 = load i8*, i8** %buf.addr.write_buf.Clone10, align 4
  %54 = load i32, i32* %fd.addr.write_buf.Clone11, align 4
  br label %entry.spec_write.Clone

entry.spec_write.Clone:                           ; preds = %while.cond.write_buf.Clone13
  %size.addr.spec_write.Clone = alloca i32, align 4
  %buf.addr.spec_write.Clone = alloca i8*, align 4
  %fd.addr.spec_write.Clone = alloca i32, align 4
  store i32 %52, i32* %size.addr.spec_write.Clone, align 4
  store i8* %53, i8** %buf.addr.spec_write.Clone, align 4
  store i32 %54, i32* %fd.addr.spec_write.Clone, align 4
  %55 = load i32, i32* @dbglvl, align 4
  %cmp.spec_write.Clone = icmp slt i32 4, %55
  br i1 %cmp.spec_write.Clone, label %if.then.spec_write.Clone, label %if.end.spec_write.Clone

if.then.spec_write.Clone:                         ; preds = %entry.spec_write.Clone
  %56 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %57 = load i8*, i8** %buf.addr.spec_write.Clone, align 4
  %58 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %call.spec_write.Clone = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @"??_C@_0BK@GKFGHPHN@spec_write?3?5?$CFd?0?5?$CFx?0?5?$CFd?5?$DN?5?$AA@", i32 0, i32 0), i32 %58, i8* %57, i32 %56)
  br label %if.end.spec_write.Clone

if.end.spec_write.Clone:                          ; preds = %if.then.spec_write.Clone, %entry.spec_write.Clone
  %59 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %cmp1.spec_write.Clone = icmp sgt i32 %59, 3
  br i1 %cmp1.spec_write.Clone, label %if.then2.spec_write.Clone, label %if.end5.spec_write.Clone

if.then2.spec_write.Clone:                        ; preds = %if.end.spec_write.Clone
  %60 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %call3.spec_write.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx.spec_write.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.spec_write.Clone, i32 2
  %call4.spec_write.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.spec_write.Clone, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"??_C@_0CD@NANFEFEM@spec_write?3?5fd?$DN?$CFd?0?5?$DO?5MAX_SPEC_FD@", i32 0, i32 0), i32 %60)
  call void @exit(i32 1) #7
  unreachable

if.end5.spec_write.Clone:                         ; preds = %if.end.spec_write.Clone
  %61 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx6.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %61
  %buf7.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx6.spec_write.Clone, i32 0, i32 3
  %62 = load i8*, i8** %buf7.spec_write.Clone, align 4
  %63 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx8.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %63
  %pos.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx8.spec_write.Clone, i32 0, i32 2
  %64 = load i32, i32* %pos.spec_write.Clone, align 4
  %arrayidx9.spec_write.Clone = getelementptr inbounds i8, i8* %62, i32 %64
  %65 = load i8*, i8** %buf.addr.spec_write.Clone, align 4
  %66 = load i32, i32* %size.addr.spec_write.Clone, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %arrayidx9.spec_write.Clone, i8* align 1 %65, i32 %66, i1 false)
  %67 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %68 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx10.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %68
  %len.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx10.spec_write.Clone, i32 0, i32 1
  %69 = load i32, i32* %len.spec_write.Clone, align 4
  %add.spec_write.Clone = add nsw i32 %69, %67
  store i32 %add.spec_write.Clone, i32* %len.spec_write.Clone, align 4
  %70 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %71 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx11.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %71
  %pos12.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx11.spec_write.Clone, i32 0, i32 2
  %72 = load i32, i32* %pos12.spec_write.Clone, align 4
  %add13.spec_write.Clone = add nsw i32 %72, %70
  store i32 %add13.spec_write.Clone, i32* %pos12.spec_write.Clone, align 4
  %73 = load i32, i32* @dbglvl, align 4
  %cmp14.spec_write.Clone = icmp slt i32 4, %73
  br i1 %cmp14.spec_write.Clone, label %if.then15.spec_write.Clone, label %if.end17.spec_write.Clone

if.then15.spec_write.Clone:                       ; preds = %if.end5.spec_write.Clone
  %74 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %call16.spec_write.Clone = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"??_C@_03PMGGPEJJ@?$CFd?6?$AA@", i32 0, i32 0), i32 %74)
  br label %if.end17.spec_write.Clone

if.end17.spec_write.Clone:                        ; preds = %if.then15.spec_write.Clone, %if.end5.spec_write.Clone
  %75 = load i32, i32* %size.addr.spec_write.Clone, align 4
  store i32 %75, i32* %RetValuePtr
  br label %while.cond.write_buf.Clone13.Split

while.cond.write_buf.Clone13.Split:               ; preds = %if.end17.spec_write.Clone
  %RetValue = load i32, i32* %RetValuePtr
  store i32 %RetValue, i32* %n.write_buf.Clone12, align 4
  %76 = load i32, i32* %cnt.addr.write_buf.Clone9, align 4
  %cmp.write_buf.Clone15 = icmp ne i32 %RetValue, %76
  br i1 %cmp.write_buf.Clone15, label %while.body.write_buf.Clone16, label %while.end.write_buf.Clone22

while.body.write_buf.Clone16:                     ; preds = %while.cond.write_buf.Clone13.Split
  %77 = load i32, i32* %n.write_buf.Clone12, align 4
  %cmp1.write_buf.Clone17 = icmp eq i32 %77, -1
  br i1 %cmp1.write_buf.Clone17, label %if.then.write_buf.Clone18, label %if.end.write_buf.Clone19

if.then.write_buf.Clone18:                        ; preds = %while.body.write_buf.Clone16
  call void @write_error()
  br label %if.end.write_buf.Clone19

if.end.write_buf.Clone19:                         ; preds = %if.then.write_buf.Clone18, %while.body.write_buf.Clone16
  %78 = load i32, i32* %n.write_buf.Clone12, align 4
  %79 = load i32, i32* %cnt.addr.write_buf.Clone9, align 4
  %sub.write_buf.Clone20 = sub i32 %79, %78
  store i32 %sub.write_buf.Clone20, i32* %cnt.addr.write_buf.Clone9, align 4
  %80 = load i8*, i8** %buf.addr.write_buf.Clone10, align 4
  %81 = load i32, i32* %n.write_buf.Clone12, align 4
  %add.ptr.write_buf.Clone21 = getelementptr inbounds i8, i8* %80, i32 %81
  store i8* %add.ptr.write_buf.Clone21, i8** %buf.addr.write_buf.Clone10, align 4
  br label %while.cond.write_buf.Clone13

while.end.write_buf.Clone22:                      ; preds = %while.cond.write_buf.Clone13.Split
  br label %if.end.flush_outbuf.Clone.Split

if.end.flush_outbuf.Clone.Split:                  ; preds = %while.end.write_buf.Clone22
  %82 = load i32, i32* @outcnt, align 4
  %83 = load i32, i32* @bytes_out, align 4
  %add.flush_outbuf.Clone = add i32 %83, %82
  store i32 %add.flush_outbuf.Clone, i32* @bytes_out, align 4
  store i32 0, i32* @outcnt, align 4
  br label %return.flush_outbuf.Clone

return.flush_outbuf.Clone:                        ; preds = %if.end.flush_outbuf.Clone.Split, %if.then.flush_outbuf.Clone
  br label %if.then26.Clone.Split

if.then26.Clone.Split:                            ; preds = %return.flush_outbuf.Clone
  br label %if.end27.Clone

if.end27.Clone:                                   ; preds = %if.then26.Clone.Split, %if.end.Clone
  br label %if.end28.Clone

if.end28.Clone:                                   ; preds = %if.end27.Clone, %if.then4.Clone
  %84 = load i32, i32* %value.addr.Clone, align 4
  %conv29.Clone = trunc i32 %84 to i16
  %conv30.Clone = zext i16 %conv29.Clone to i32
  %85 = load i32, i32* @bi_valid, align 4
  %sub31.Clone = sub i32 16, %85
  %shr32.Clone = ashr i32 %conv30.Clone, %sub31.Clone
  %conv33.Clone = trunc i32 %shr32.Clone to i16
  store i16 %conv33.Clone, i16* @bi_buf, align 2
  %86 = load i32, i32* %length.addr.Clone, align 4
  %sub34.Clone = sub i32 %86, 16
  %87 = load i32, i32* @bi_valid, align 4
  %add.Clone = add i32 %87, %sub34.Clone
  store i32 %add.Clone, i32* @bi_valid, align 4
  br label %OutFuncRetBB

OutFuncRetBB:                                     ; preds = %if.end28.Clone
  ret void
}

define void @if.else26.OutLineFunc() {
entry:
  %RetValuePtr = alloca i32, align 4
  br label %if.else26.Clone

if.else26.Clone:                                  ; preds = %entry
  %0 = load i32, i32* @bi_valid, align 4
  %cmp27.Clone = icmp sgt i32 %0, 0
  br i1 %cmp27.Clone, label %if.then29.Clone, label %if.end37.Clone

if.then29.Clone:                                  ; preds = %if.else26.Clone
  %1 = load i16, i16* @bi_buf, align 2
  %conv30.Clone = trunc i16 %1 to i8
  %2 = load i32, i32* @outcnt, align 4
  %inc31.Clone = add i32 %2, 1
  store i32 %inc31.Clone, i32* @outcnt, align 4
  %arrayidx32.Clone = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i32 0, i32 %2
  store i8 %conv30.Clone, i8* %arrayidx32.Clone, align 1
  %3 = load i32, i32* @outcnt, align 4
  %cmp33.Clone = icmp eq i32 %3, 16384
  br i1 %cmp33.Clone, label %if.then35.Clone, label %if.end36.Clone

if.then35.Clone:                                  ; preds = %if.then29.Clone
  br label %entry.flush_outbuf.Clone

entry.flush_outbuf.Clone:                         ; preds = %if.then35.Clone
  %4 = load i32, i32* @outcnt, align 4
  %cmp.flush_outbuf.Clone = icmp eq i32 %4, 0
  br i1 %cmp.flush_outbuf.Clone, label %if.then.flush_outbuf.Clone, label %if.end.flush_outbuf.Clone

if.then.flush_outbuf.Clone:                       ; preds = %entry.flush_outbuf.Clone
  br label %return.flush_outbuf.Clone

if.end.flush_outbuf.Clone:                        ; preds = %entry.flush_outbuf.Clone
  %5 = load i32, i32* @outcnt, align 4
  %6 = load i32, i32* @ofd, align 4
  br label %entry.write_buf.Clone

entry.write_buf.Clone:                            ; preds = %if.end.flush_outbuf.Clone
  %cnt.addr.write_buf.Clone = alloca i32, align 4
  %buf.addr.write_buf.Clone = alloca i8*, align 4
  %fd.addr.write_buf.Clone = alloca i32, align 4
  %n.write_buf.Clone = alloca i32, align 4
  store i32 %5, i32* %cnt.addr.write_buf.Clone, align 4
  store i8* getelementptr inbounds ([18432 x i8], [18432 x i8]* @outbuf, i32 0, i32 0), i8** %buf.addr.write_buf.Clone, align 4
  store i32 %6, i32* %fd.addr.write_buf.Clone, align 4
  br label %while.cond.write_buf.Clone

while.cond.write_buf.Clone:                       ; preds = %if.end.write_buf.Clone, %entry.write_buf.Clone
  %7 = load i32, i32* %cnt.addr.write_buf.Clone, align 4
  %8 = load i8*, i8** %buf.addr.write_buf.Clone, align 4
  %9 = load i32, i32* %fd.addr.write_buf.Clone, align 4
  br label %entry.spec_write.Clone

entry.spec_write.Clone:                           ; preds = %while.cond.write_buf.Clone
  %size.addr.spec_write.Clone = alloca i32, align 4
  %buf.addr.spec_write.Clone = alloca i8*, align 4
  %fd.addr.spec_write.Clone = alloca i32, align 4
  store i32 %7, i32* %size.addr.spec_write.Clone, align 4
  store i8* %8, i8** %buf.addr.spec_write.Clone, align 4
  store i32 %9, i32* %fd.addr.spec_write.Clone, align 4
  %10 = load i32, i32* @dbglvl, align 4
  %cmp.spec_write.Clone = icmp slt i32 4, %10
  br i1 %cmp.spec_write.Clone, label %if.then.spec_write.Clone, label %if.end.spec_write.Clone

if.then.spec_write.Clone:                         ; preds = %entry.spec_write.Clone
  %11 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %12 = load i8*, i8** %buf.addr.spec_write.Clone, align 4
  %13 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %call.spec_write.Clone = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @"??_C@_0BK@GKFGHPHN@spec_write?3?5?$CFd?0?5?$CFx?0?5?$CFd?5?$DN?5?$AA@", i32 0, i32 0), i32 %13, i8* %12, i32 %11)
  br label %if.end.spec_write.Clone

if.end.spec_write.Clone:                          ; preds = %if.then.spec_write.Clone, %entry.spec_write.Clone
  %14 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %cmp1.spec_write.Clone = icmp sgt i32 %14, 3
  br i1 %cmp1.spec_write.Clone, label %if.then2.spec_write.Clone, label %if.end5.spec_write.Clone

if.then2.spec_write.Clone:                        ; preds = %if.end.spec_write.Clone
  %15 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %call3.spec_write.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx.spec_write.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.spec_write.Clone, i32 2
  %call4.spec_write.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.spec_write.Clone, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"??_C@_0CD@NANFEFEM@spec_write?3?5fd?$DN?$CFd?0?5?$DO?5MAX_SPEC_FD@", i32 0, i32 0), i32 %15)
  call void @exit(i32 1) #7
  unreachable

if.end5.spec_write.Clone:                         ; preds = %if.end.spec_write.Clone
  %16 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx6.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %16
  %buf7.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx6.spec_write.Clone, i32 0, i32 3
  %17 = load i8*, i8** %buf7.spec_write.Clone, align 4
  %18 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx8.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %18
  %pos.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx8.spec_write.Clone, i32 0, i32 2
  %19 = load i32, i32* %pos.spec_write.Clone, align 4
  %arrayidx9.spec_write.Clone = getelementptr inbounds i8, i8* %17, i32 %19
  %20 = load i8*, i8** %buf.addr.spec_write.Clone, align 4
  %21 = load i32, i32* %size.addr.spec_write.Clone, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %arrayidx9.spec_write.Clone, i8* align 1 %20, i32 %21, i1 false)
  %22 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %23 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx10.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %23
  %len.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx10.spec_write.Clone, i32 0, i32 1
  %24 = load i32, i32* %len.spec_write.Clone, align 4
  %add.spec_write.Clone = add nsw i32 %24, %22
  store i32 %add.spec_write.Clone, i32* %len.spec_write.Clone, align 4
  %25 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %26 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx11.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %26
  %pos12.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx11.spec_write.Clone, i32 0, i32 2
  %27 = load i32, i32* %pos12.spec_write.Clone, align 4
  %add13.spec_write.Clone = add nsw i32 %27, %25
  store i32 %add13.spec_write.Clone, i32* %pos12.spec_write.Clone, align 4
  %28 = load i32, i32* @dbglvl, align 4
  %cmp14.spec_write.Clone = icmp slt i32 4, %28
  br i1 %cmp14.spec_write.Clone, label %if.then15.spec_write.Clone, label %if.end17.spec_write.Clone

if.then15.spec_write.Clone:                       ; preds = %if.end5.spec_write.Clone
  %29 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %call16.spec_write.Clone = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"??_C@_03PMGGPEJJ@?$CFd?6?$AA@", i32 0, i32 0), i32 %29)
  br label %if.end17.spec_write.Clone

if.end17.spec_write.Clone:                        ; preds = %if.then15.spec_write.Clone, %if.end5.spec_write.Clone
  %30 = load i32, i32* %size.addr.spec_write.Clone, align 4
  store i32 %30, i32* %RetValuePtr
  br label %while.cond.write_buf.Clone.Split

while.cond.write_buf.Clone.Split:                 ; preds = %if.end17.spec_write.Clone
  %RetValue = load i32, i32* %RetValuePtr
  store i32 %RetValue, i32* %n.write_buf.Clone, align 4
  %31 = load i32, i32* %cnt.addr.write_buf.Clone, align 4
  %cmp.write_buf.Clone = icmp ne i32 %RetValue, %31
  br i1 %cmp.write_buf.Clone, label %while.body.write_buf.Clone, label %while.end.write_buf.Clone

while.body.write_buf.Clone:                       ; preds = %while.cond.write_buf.Clone.Split
  %32 = load i32, i32* %n.write_buf.Clone, align 4
  %cmp1.write_buf.Clone = icmp eq i32 %32, -1
  br i1 %cmp1.write_buf.Clone, label %if.then.write_buf.Clone, label %if.end.write_buf.Clone

if.then.write_buf.Clone:                          ; preds = %while.body.write_buf.Clone
  call void @write_error()
  br label %if.end.write_buf.Clone

if.end.write_buf.Clone:                           ; preds = %if.then.write_buf.Clone, %while.body.write_buf.Clone
  %33 = load i32, i32* %n.write_buf.Clone, align 4
  %34 = load i32, i32* %cnt.addr.write_buf.Clone, align 4
  %sub.write_buf.Clone = sub i32 %34, %33
  store i32 %sub.write_buf.Clone, i32* %cnt.addr.write_buf.Clone, align 4
  %35 = load i8*, i8** %buf.addr.write_buf.Clone, align 4
  %36 = load i32, i32* %n.write_buf.Clone, align 4
  %add.ptr.write_buf.Clone = getelementptr inbounds i8, i8* %35, i32 %36
  store i8* %add.ptr.write_buf.Clone, i8** %buf.addr.write_buf.Clone, align 4
  br label %while.cond.write_buf.Clone

while.end.write_buf.Clone:                        ; preds = %while.cond.write_buf.Clone.Split
  br label %if.end.flush_outbuf.Clone.Split

if.end.flush_outbuf.Clone.Split:                  ; preds = %while.end.write_buf.Clone
  %37 = load i32, i32* @outcnt, align 4
  %38 = load i32, i32* @bytes_out, align 4
  %add.flush_outbuf.Clone = add i32 %38, %37
  store i32 %add.flush_outbuf.Clone, i32* @bytes_out, align 4
  store i32 0, i32* @outcnt, align 4
  br label %return.flush_outbuf.Clone

return.flush_outbuf.Clone:                        ; preds = %if.end.flush_outbuf.Clone.Split, %if.then.flush_outbuf.Clone
  br label %if.then35.Clone.Split

if.then35.Clone.Split:                            ; preds = %return.flush_outbuf.Clone
  br label %if.end36.Clone

if.end36.Clone:                                   ; preds = %if.then35.Clone.Split, %if.then29.Clone
  br label %if.end37.Clone

if.end37.Clone:                                   ; preds = %if.end36.Clone, %if.else26.Clone
  br label %OutFuncRetBB

OutFuncRetBB:                                     ; preds = %if.end37.Clone
  ret void
}

define void @while.body.OutLineFunc(i8** %OutFuncArg) {
entry:
  %OutFuncArg.addr = alloca i8**, align 4
  store i8** %OutFuncArg, i8*** %OutFuncArg.addr, align 4
  %buf.addr.Clone = load i8**, i8*** %OutFuncArg.addr, align 4
  %RetValuePtr = alloca i32, align 4
  br label %while.body.Clone

while.body.Clone:                                 ; preds = %entry
  %0 = load i8*, i8** %buf.addr.Clone, align 4
  %incdec.ptr.Clone = getelementptr inbounds i8, i8* %0, i32 1
  store i8* %incdec.ptr.Clone, i8** %buf.addr.Clone, align 4
  %1 = load i8, i8* %0, align 1
  %2 = load i32, i32* @outcnt, align 4
  %inc71.Clone = add i32 %2, 1
  store i32 %inc71.Clone, i32* @outcnt, align 4
  %arrayidx72.Clone = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i32 0, i32 %2
  store i8 %1, i8* %arrayidx72.Clone, align 1
  %3 = load i32, i32* @outcnt, align 4
  %cmp73.Clone = icmp eq i32 %3, 16384
  br i1 %cmp73.Clone, label %if.then75.Clone, label %if.end76.Clone

if.then75.Clone:                                  ; preds = %while.body.Clone
  br label %entry.flush_outbuf.Clone

entry.flush_outbuf.Clone:                         ; preds = %if.then75.Clone
  %4 = load i32, i32* @outcnt, align 4
  %cmp.flush_outbuf.Clone = icmp eq i32 %4, 0
  br i1 %cmp.flush_outbuf.Clone, label %if.then.flush_outbuf.Clone, label %if.end.flush_outbuf.Clone

if.then.flush_outbuf.Clone:                       ; preds = %entry.flush_outbuf.Clone
  br label %return.flush_outbuf.Clone

if.end.flush_outbuf.Clone:                        ; preds = %entry.flush_outbuf.Clone
  %5 = load i32, i32* @outcnt, align 4
  %6 = load i32, i32* @ofd, align 4
  br label %entry.write_buf.Clone

entry.write_buf.Clone:                            ; preds = %if.end.flush_outbuf.Clone
  %cnt.addr.write_buf.Clone = alloca i32, align 4
  %buf.addr.write_buf.Clone = alloca i8*, align 4
  %fd.addr.write_buf.Clone = alloca i32, align 4
  %n.write_buf.Clone = alloca i32, align 4
  store i32 %5, i32* %cnt.addr.write_buf.Clone, align 4
  store i8* getelementptr inbounds ([18432 x i8], [18432 x i8]* @outbuf, i32 0, i32 0), i8** %buf.addr.write_buf.Clone, align 4
  store i32 %6, i32* %fd.addr.write_buf.Clone, align 4
  br label %while.cond.write_buf.Clone

while.cond.write_buf.Clone:                       ; preds = %if.end.write_buf.Clone, %entry.write_buf.Clone
  %7 = load i32, i32* %cnt.addr.write_buf.Clone, align 4
  %8 = load i8*, i8** %buf.addr.write_buf.Clone, align 4
  %9 = load i32, i32* %fd.addr.write_buf.Clone, align 4
  br label %entry.spec_write.Clone

entry.spec_write.Clone:                           ; preds = %while.cond.write_buf.Clone
  %size.addr.spec_write.Clone = alloca i32, align 4
  %buf.addr.spec_write.Clone = alloca i8*, align 4
  %fd.addr.spec_write.Clone = alloca i32, align 4
  store i32 %7, i32* %size.addr.spec_write.Clone, align 4
  store i8* %8, i8** %buf.addr.spec_write.Clone, align 4
  store i32 %9, i32* %fd.addr.spec_write.Clone, align 4
  %10 = load i32, i32* @dbglvl, align 4
  %cmp.spec_write.Clone = icmp slt i32 4, %10
  br i1 %cmp.spec_write.Clone, label %if.then.spec_write.Clone, label %if.end.spec_write.Clone

if.then.spec_write.Clone:                         ; preds = %entry.spec_write.Clone
  %11 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %12 = load i8*, i8** %buf.addr.spec_write.Clone, align 4
  %13 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %call.spec_write.Clone = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @"??_C@_0BK@GKFGHPHN@spec_write?3?5?$CFd?0?5?$CFx?0?5?$CFd?5?$DN?5?$AA@", i32 0, i32 0), i32 %13, i8* %12, i32 %11)
  br label %if.end.spec_write.Clone

if.end.spec_write.Clone:                          ; preds = %if.then.spec_write.Clone, %entry.spec_write.Clone
  %14 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %cmp1.spec_write.Clone = icmp sgt i32 %14, 3
  br i1 %cmp1.spec_write.Clone, label %if.then2.spec_write.Clone, label %if.end5.spec_write.Clone

if.then2.spec_write.Clone:                        ; preds = %if.end.spec_write.Clone
  %15 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %call3.spec_write.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx.spec_write.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.spec_write.Clone, i32 2
  %call4.spec_write.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.spec_write.Clone, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"??_C@_0CD@NANFEFEM@spec_write?3?5fd?$DN?$CFd?0?5?$DO?5MAX_SPEC_FD@", i32 0, i32 0), i32 %15)
  call void @exit(i32 1) #7
  unreachable

if.end5.spec_write.Clone:                         ; preds = %if.end.spec_write.Clone
  %16 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx6.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %16
  %buf7.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx6.spec_write.Clone, i32 0, i32 3
  %17 = load i8*, i8** %buf7.spec_write.Clone, align 4
  %18 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx8.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %18
  %pos.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx8.spec_write.Clone, i32 0, i32 2
  %19 = load i32, i32* %pos.spec_write.Clone, align 4
  %arrayidx9.spec_write.Clone = getelementptr inbounds i8, i8* %17, i32 %19
  %20 = load i8*, i8** %buf.addr.spec_write.Clone, align 4
  %21 = load i32, i32* %size.addr.spec_write.Clone, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %arrayidx9.spec_write.Clone, i8* align 1 %20, i32 %21, i1 false)
  %22 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %23 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx10.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %23
  %len.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx10.spec_write.Clone, i32 0, i32 1
  %24 = load i32, i32* %len.spec_write.Clone, align 4
  %add.spec_write.Clone = add nsw i32 %24, %22
  store i32 %add.spec_write.Clone, i32* %len.spec_write.Clone, align 4
  %25 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %26 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx11.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %26
  %pos12.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx11.spec_write.Clone, i32 0, i32 2
  %27 = load i32, i32* %pos12.spec_write.Clone, align 4
  %add13.spec_write.Clone = add nsw i32 %27, %25
  store i32 %add13.spec_write.Clone, i32* %pos12.spec_write.Clone, align 4
  %28 = load i32, i32* @dbglvl, align 4
  %cmp14.spec_write.Clone = icmp slt i32 4, %28
  br i1 %cmp14.spec_write.Clone, label %if.then15.spec_write.Clone, label %if.end17.spec_write.Clone

if.then15.spec_write.Clone:                       ; preds = %if.end5.spec_write.Clone
  %29 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %call16.spec_write.Clone = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"??_C@_03PMGGPEJJ@?$CFd?6?$AA@", i32 0, i32 0), i32 %29)
  br label %if.end17.spec_write.Clone

if.end17.spec_write.Clone:                        ; preds = %if.then15.spec_write.Clone, %if.end5.spec_write.Clone
  %30 = load i32, i32* %size.addr.spec_write.Clone, align 4
  store i32 %30, i32* %RetValuePtr
  br label %while.cond.write_buf.Clone.Split

while.cond.write_buf.Clone.Split:                 ; preds = %if.end17.spec_write.Clone
  %RetValue = load i32, i32* %RetValuePtr
  store i32 %RetValue, i32* %n.write_buf.Clone, align 4
  %31 = load i32, i32* %cnt.addr.write_buf.Clone, align 4
  %cmp.write_buf.Clone = icmp ne i32 %RetValue, %31
  br i1 %cmp.write_buf.Clone, label %while.body.write_buf.Clone, label %while.end.write_buf.Clone

while.body.write_buf.Clone:                       ; preds = %while.cond.write_buf.Clone.Split
  %32 = load i32, i32* %n.write_buf.Clone, align 4
  %cmp1.write_buf.Clone = icmp eq i32 %32, -1
  br i1 %cmp1.write_buf.Clone, label %if.then.write_buf.Clone, label %if.end.write_buf.Clone

if.then.write_buf.Clone:                          ; preds = %while.body.write_buf.Clone
  call void @write_error()
  br label %if.end.write_buf.Clone

if.end.write_buf.Clone:                           ; preds = %if.then.write_buf.Clone, %while.body.write_buf.Clone
  %33 = load i32, i32* %n.write_buf.Clone, align 4
  %34 = load i32, i32* %cnt.addr.write_buf.Clone, align 4
  %sub.write_buf.Clone = sub i32 %34, %33
  store i32 %sub.write_buf.Clone, i32* %cnt.addr.write_buf.Clone, align 4
  %35 = load i8*, i8** %buf.addr.write_buf.Clone, align 4
  %36 = load i32, i32* %n.write_buf.Clone, align 4
  %add.ptr.write_buf.Clone = getelementptr inbounds i8, i8* %35, i32 %36
  store i8* %add.ptr.write_buf.Clone, i8** %buf.addr.write_buf.Clone, align 4
  br label %while.cond.write_buf.Clone

while.end.write_buf.Clone:                        ; preds = %while.cond.write_buf.Clone.Split
  br label %if.end.flush_outbuf.Clone.Split

if.end.flush_outbuf.Clone.Split:                  ; preds = %while.end.write_buf.Clone
  %37 = load i32, i32* @outcnt, align 4
  %38 = load i32, i32* @bytes_out, align 4
  %add.flush_outbuf.Clone = add i32 %38, %37
  store i32 %add.flush_outbuf.Clone, i32* @bytes_out, align 4
  store i32 0, i32* @outcnt, align 4
  br label %return.flush_outbuf.Clone

return.flush_outbuf.Clone:                        ; preds = %if.end.flush_outbuf.Clone.Split, %if.then.flush_outbuf.Clone
  br label %if.then75.Clone.Split

if.then75.Clone.Split:                            ; preds = %return.flush_outbuf.Clone
  br label %if.end76.Clone

if.end76.Clone:                                   ; preds = %if.then75.Clone.Split, %while.body.Clone
  br label %OutFuncRetBB

OutFuncRetBB:                                     ; preds = %if.end76.Clone
  %39 = getelementptr inbounds %Struct.RetValue.1, %Struct.RetValue.1* @Struct.RetValue.2, i32 0, i32 0
  store i8** %buf.addr.Clone, i8*** %39, align 4
  ret void
}

define void @if.else.OutLineFunc(i32* %OutFuncArg, i16** %OutFuncArg1) {
entry:
  %OutFuncArg.addr = alloca i32*, align 4
  store i32* %OutFuncArg, i32** %OutFuncArg.addr, align 4
  %pack_level.addr.Clone = load i32*, i32** %OutFuncArg.addr, align 4
  %OutFuncArg1.addr = alloca i16**, align 4
  store i16** %OutFuncArg1, i16*** %OutFuncArg1.addr, align 4
  %flags.addr.Clone = load i16**, i16*** %OutFuncArg1.addr, align 4
  br label %if.else.Clone

if.else.Clone:                                    ; preds = %entry
  %0 = load i32, i32* %pack_level.addr.Clone, align 4
  %cmp13.Clone = icmp eq i32 %0, 9
  br i1 %cmp13.Clone, label %if.then15.Clone, label %if.end19.Clone

if.then15.Clone:                                  ; preds = %if.else.Clone
  %1 = load i16*, i16** %flags.addr.Clone, align 4
  %2 = load i16, i16* %1, align 2
  %conv16.Clone = zext i16 %2 to i32
  %or17.Clone = or i32 %conv16.Clone, 2
  %conv18.Clone = trunc i32 %or17.Clone to i16
  store i16 %conv18.Clone, i16* %1, align 2
  br label %if.end19.Clone

if.end19.Clone:                                   ; preds = %if.then15.Clone, %if.else.Clone
  br label %OutFuncRetBB

OutFuncRetBB:                                     ; preds = %if.end19.Clone
  ret void
}

define void @for.cond13.OutLineFunc(i32* %OutFuncArg, i32* %OutFuncArg1, i32* %OutFuncArg2) {
entry:
  %OutFuncArg.addr = alloca i32*, align 4
  store i32* %OutFuncArg, i32** %OutFuncArg.addr, align 4
  %n.Clone = load i32*, i32** %OutFuncArg.addr, align 4
  %OutFuncArg1.addr = alloca i32*, align 4
  store i32* %OutFuncArg1, i32** %OutFuncArg1.addr, align 4
  %m.Clone = load i32*, i32** %OutFuncArg1.addr, align 4
  %OutFuncArg2.addr = alloca i32*, align 4
  store i32* %OutFuncArg2, i32** %OutFuncArg2.addr, align 4
  %more.Clone = load i32*, i32** %OutFuncArg2.addr, align 4
  br label %for.cond13.Clone

for.cond13.Clone:                                 ; preds = %entry, %for.inc28.Clone
  %0 = load i32, i32* %n.Clone, align 4
  %cmp14.Clone = icmp ult i32 %0, 32768
  br i1 %cmp14.Clone, label %for.body16.Clone, label %for.end30.Clone

for.body16.Clone:                                 ; preds = %for.cond13.Clone
  %1 = load i32, i32* %n.Clone, align 4
  %arrayidx17.Clone = getelementptr inbounds [0 x i16], [0 x i16]* bitcast ([65536 x i16]* @prev to [0 x i16]*), i32 0, i32 %1
  %2 = load i16, i16* %arrayidx17.Clone, align 2
  %conv18.Clone = zext i16 %2 to i32
  store i32 %conv18.Clone, i32* %m.Clone, align 4
  %3 = load i32, i32* %m.Clone, align 4
  %cmp19.Clone = icmp uge i32 %3, 32768
  br i1 %cmp19.Clone, label %cond.true21.Clone, label %cond.false23.Clone

cond.true21.Clone:                                ; preds = %for.body16.Clone
  %4 = load i32, i32* %m.Clone, align 4
  %sub22.Clone = sub i32 %4, 32768
  br label %cond.end24.Clone

cond.end24.Clone:                                 ; preds = %cond.false23.Clone, %cond.true21.Clone
  %cond25.Clone = phi i32 [ %sub22.Clone, %cond.true21.Clone ], [ 0, %cond.false23.Clone ]
  %conv26.Clone = trunc i32 %cond25.Clone to i16
  %5 = load i32, i32* %n.Clone, align 4
  %arrayidx27.Clone = getelementptr inbounds [0 x i16], [0 x i16]* bitcast ([65536 x i16]* @prev to [0 x i16]*), i32 0, i32 %5
  store i16 %conv26.Clone, i16* %arrayidx27.Clone, align 2
  br label %for.inc28.Clone

for.inc28.Clone:                                  ; preds = %cond.end24.Clone
  %6 = load i32, i32* %n.Clone, align 4
  %inc29.Clone = add i32 %6, 1
  store i32 %inc29.Clone, i32* %n.Clone, align 4
  br label %for.cond13.Clone

cond.false23.Clone:                               ; preds = %for.body16.Clone
  br label %cond.end24.Clone

for.end30.Clone:                                  ; preds = %for.cond13.Clone
  %7 = load i32, i32* %more.Clone, align 4
  %add.Clone = add i32 %7, 32768
  store i32 %add.Clone, i32* %more.Clone, align 4
  br label %OutFuncRetBB

OutFuncRetBB:                                     ; preds = %for.end30.Clone
  %8 = getelementptr inbounds %Struct.RetValue.3, %Struct.RetValue.3* @Struct.RetValue.4, i32 0, i32 0
  store i32* %n.Clone, i32** %8, align 4
  %9 = getelementptr inbounds %Struct.RetValue.3, %Struct.RetValue.3* @Struct.RetValue.4, i32 0, i32 1
  store i32* %m.Clone, i32** %9, align 4
  %10 = getelementptr inbounds %Struct.RetValue.3, %Struct.RetValue.3* @Struct.RetValue.4, i32 0, i32 2
  store i32* %more.Clone, i32** %10, align 4
  ret void
}

define void @while.body.OutLineFunc.6(i32* %OutFuncArg, i32* %OutFuncArg1, i32* %OutFuncArg2) {
entry:
  %OutFuncArg.addr = alloca i32*, align 4
  store i32* %OutFuncArg, i32** %OutFuncArg.addr, align 4
  %hash_head.Clone = load i32*, i32** %OutFuncArg.addr, align 4
  %OutFuncArg1.addr = alloca i32*, align 4
  store i32* %OutFuncArg1, i32** %OutFuncArg1.addr, align 4
  %match_length.Clone = load i32*, i32** %OutFuncArg1.addr, align 4
  %OutFuncArg2.addr = alloca i32*, align 4
  store i32* %OutFuncArg2, i32** %OutFuncArg2.addr, align 4
  %prev_match.Clone = load i32*, i32** %OutFuncArg2.addr, align 4
  %RetValuePtr = alloca i32, align 4
  br label %while.body.Clone

while.body.Clone:                                 ; preds = %entry
  %0 = load i32, i32* @ins_h, align 4
  %shl.Clone = shl i32 %0, 5
  %1 = load i32, i32* @strstart, align 4
  %add.Clone = add i32 %1, 3
  %sub.Clone = sub i32 %add.Clone, 1
  %arrayidx.Clone = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([65536 x i8]* @window to [0 x i8]*), i32 0, i32 %sub.Clone
  %2 = load i8, i8* %arrayidx.Clone, align 1
  %conv.Clone = zext i8 %2 to i32
  %xor.Clone = xor i32 %shl.Clone, %conv.Clone
  %and.Clone = and i32 %xor.Clone, 32767
  store i32 %and.Clone, i32* @ins_h, align 4
  %3 = load i32, i32* @ins_h, align 4
  %arrayidx2.Clone = getelementptr inbounds i16, i16* getelementptr inbounds ([65536 x i16], [65536 x i16]* @prev, i32 0, i32 32768), i32 %3
  %4 = load i16, i16* %arrayidx2.Clone, align 2
  %conv3.Clone = zext i16 %4 to i32
  store i32 %conv3.Clone, i32* %hash_head.Clone, align 4
  %conv4.Clone = trunc i32 %conv3.Clone to i16
  %5 = load i32, i32* @strstart, align 4
  %and5.Clone = and i32 %5, 32767
  %arrayidx6.Clone = getelementptr inbounds [0 x i16], [0 x i16]* bitcast ([65536 x i16]* @prev to [0 x i16]*), i32 0, i32 %and5.Clone
  store i16 %conv4.Clone, i16* %arrayidx6.Clone, align 2
  %6 = load i32, i32* @strstart, align 4
  %conv7.Clone = trunc i32 %6 to i16
  %7 = load i32, i32* @ins_h, align 4
  %arrayidx8.Clone = getelementptr inbounds i16, i16* getelementptr inbounds ([65536 x i16], [65536 x i16]* @prev, i32 0, i32 32768), i32 %7
  store i16 %conv7.Clone, i16* %arrayidx8.Clone, align 2
  %8 = load i32, i32* %match_length.Clone, align 4
  store i32 %8, i32* @prev_length, align 4
  %9 = load i32, i32* @match_start, align 4
  store i32 %9, i32* %prev_match.Clone, align 4
  store i32 2, i32* %match_length.Clone, align 4
  %10 = load i32, i32* %hash_head.Clone, align 4
  %cmp9.Clone = icmp ne i32 %10, 0
  br i1 %cmp9.Clone, label %land.lhs.true.Clone, label %if.end31.Clone

land.lhs.true.Clone:                              ; preds = %while.body.Clone
  %11 = load i32, i32* @prev_length, align 4
  %12 = load i32, i32* @max_lazy_match, align 4
  %cmp11.Clone = icmp ult i32 %11, %12
  br i1 %cmp11.Clone, label %land.lhs.true13.Clone, label %if.end31.Clone

land.lhs.true13.Clone:                            ; preds = %land.lhs.true.Clone
  %13 = load i32, i32* @strstart, align 4
  %14 = load i32, i32* %hash_head.Clone, align 4
  %sub14.Clone = sub i32 %13, %14
  %cmp15.Clone = icmp ule i32 %sub14.Clone, 32506
  br i1 %cmp15.Clone, label %if.then17.Clone, label %if.end31.Clone

if.then17.Clone:                                  ; preds = %land.lhs.true13.Clone
  %15 = load i32, i32* %hash_head.Clone, align 4
  br label %entry.longest_match.Clone

entry.longest_match.Clone:                        ; preds = %if.then17.Clone
  %cur_match.addr.longest_match.Clone = alloca i32, align 4
  %chain_length.longest_match.Clone = alloca i32, align 4
  %scan.longest_match.Clone = alloca i8*, align 4
  %match.longest_match.Clone = alloca i8*, align 4
  %len.longest_match.Clone = alloca i32, align 4
  %best_len.longest_match.Clone = alloca i32, align 4
  %limit.longest_match.Clone = alloca i32, align 4
  %strend.longest_match.Clone = alloca i8*, align 4
  %scan_end1.longest_match.Clone = alloca i8, align 1
  %scan_end.longest_match.Clone = alloca i8, align 1
  store i32 %15, i32* %cur_match.addr.longest_match.Clone, align 4
  %16 = load i32, i32* @max_chain_length, align 4
  store i32 %16, i32* %chain_length.longest_match.Clone, align 4
  %17 = load i32, i32* @strstart, align 4
  %add.ptr.longest_match.Clone = getelementptr inbounds i8, i8* getelementptr inbounds ([65536 x i8], [65536 x i8]* @window, i32 0, i32 0), i32 %17
  store i8* %add.ptr.longest_match.Clone, i8** %scan.longest_match.Clone, align 4
  %18 = load i32, i32* @prev_length, align 4
  store i32 %18, i32* %best_len.longest_match.Clone, align 4
  %19 = load i32, i32* @strstart, align 4
  %cmp.longest_match.Clone = icmp ugt i32 %19, 32506
  br i1 %cmp.longest_match.Clone, label %cond.true.longest_match.Clone, label %cond.false.longest_match.Clone

cond.true.longest_match.Clone:                    ; preds = %entry.longest_match.Clone
  %20 = load i32, i32* @strstart, align 4
  %sub.longest_match.Clone = sub i32 %20, 32506
  br label %cond.end.longest_match.Clone

cond.false.longest_match.Clone:                   ; preds = %entry.longest_match.Clone
  br label %cond.end.longest_match.Clone

cond.end.longest_match.Clone:                     ; preds = %cond.false.longest_match.Clone, %cond.true.longest_match.Clone
  %cond.longest_match.Clone = phi i32 [ %sub.longest_match.Clone, %cond.true.longest_match.Clone ], [ 0, %cond.false.longest_match.Clone ]
  store i32 %cond.longest_match.Clone, i32* %limit.longest_match.Clone, align 4
  %21 = load i32, i32* @strstart, align 4
  %add.ptr1.longest_match.Clone = getelementptr inbounds i8, i8* getelementptr inbounds ([65536 x i8], [65536 x i8]* @window, i32 0, i32 0), i32 %21
  %add.ptr2.longest_match.Clone = getelementptr inbounds i8, i8* %add.ptr1.longest_match.Clone, i32 258
  store i8* %add.ptr2.longest_match.Clone, i8** %strend.longest_match.Clone, align 4
  %22 = load i8*, i8** %scan.longest_match.Clone, align 4
  %23 = load i32, i32* %best_len.longest_match.Clone, align 4
  %sub3.longest_match.Clone = sub nsw i32 %23, 1
  %arrayidx.longest_match.Clone = getelementptr inbounds i8, i8* %22, i32 %sub3.longest_match.Clone
  %24 = load i8, i8* %arrayidx.longest_match.Clone, align 1
  store i8 %24, i8* %scan_end1.longest_match.Clone, align 1
  %25 = load i8*, i8** %scan.longest_match.Clone, align 4
  %26 = load i32, i32* %best_len.longest_match.Clone, align 4
  %arrayidx4.longest_match.Clone = getelementptr inbounds i8, i8* %25, i32 %26
  %27 = load i8, i8* %arrayidx4.longest_match.Clone, align 1
  store i8 %27, i8* %scan_end.longest_match.Clone, align 1
  %28 = load i32, i32* @prev_length, align 4
  %29 = load i32, i32* @good_match, align 4
  %cmp5.longest_match.Clone = icmp uge i32 %28, %29
  br i1 %cmp5.longest_match.Clone, label %if.then.longest_match.Clone, label %if.end.longest_match.Clone

if.then.longest_match.Clone:                      ; preds = %cond.end.longest_match.Clone
  %30 = load i32, i32* %chain_length.longest_match.Clone, align 4
  %shr.longest_match.Clone = lshr i32 %30, 2
  store i32 %shr.longest_match.Clone, i32* %chain_length.longest_match.Clone, align 4
  br label %if.end.longest_match.Clone

if.end.longest_match.Clone:                       ; preds = %if.then.longest_match.Clone, %cond.end.longest_match.Clone
  br label %do.body.longest_match.Clone

do.body.longest_match.Clone:                      ; preds = %land.end110.longest_match.Clone, %if.end.longest_match.Clone
  %31 = load i32, i32* %cur_match.addr.longest_match.Clone, align 4
  %add.ptr6.longest_match.Clone = getelementptr inbounds i8, i8* getelementptr inbounds ([65536 x i8], [65536 x i8]* @window, i32 0, i32 0), i32 %31
  store i8* %add.ptr6.longest_match.Clone, i8** %match.longest_match.Clone, align 4
  %32 = load i8*, i8** %match.longest_match.Clone, align 4
  %33 = load i32, i32* %best_len.longest_match.Clone, align 4
  %arrayidx7.longest_match.Clone = getelementptr inbounds i8, i8* %32, i32 %33
  %34 = load i8, i8* %arrayidx7.longest_match.Clone, align 1
  %conv.longest_match.Clone = zext i8 %34 to i32
  %35 = load i8, i8* %scan_end.longest_match.Clone, align 1
  %conv8.longest_match.Clone = zext i8 %35 to i32
  %cmp9.longest_match.Clone = icmp ne i32 %conv.longest_match.Clone, %conv8.longest_match.Clone
  br i1 %cmp9.longest_match.Clone, label %if.then28.longest_match.Clone, label %lor.lhs.false.longest_match.Clone

lor.lhs.false.longest_match.Clone:                ; preds = %do.body.longest_match.Clone
  %36 = load i8*, i8** %match.longest_match.Clone, align 4
  %37 = load i32, i32* %best_len.longest_match.Clone, align 4
  %sub11.longest_match.Clone = sub nsw i32 %37, 1
  %arrayidx12.longest_match.Clone = getelementptr inbounds i8, i8* %36, i32 %sub11.longest_match.Clone
  %38 = load i8, i8* %arrayidx12.longest_match.Clone, align 1
  %conv13.longest_match.Clone = zext i8 %38 to i32
  %39 = load i8, i8* %scan_end1.longest_match.Clone, align 1
  %conv14.longest_match.Clone = zext i8 %39 to i32
  %cmp15.longest_match.Clone = icmp ne i32 %conv13.longest_match.Clone, %conv14.longest_match.Clone
  br i1 %cmp15.longest_match.Clone, label %if.then28.longest_match.Clone, label %lor.lhs.false17.longest_match.Clone

lor.lhs.false17.longest_match.Clone:              ; preds = %lor.lhs.false.longest_match.Clone
  %40 = load i8*, i8** %match.longest_match.Clone, align 4
  %41 = load i8, i8* %40, align 1
  %conv18.longest_match.Clone = zext i8 %41 to i32
  %42 = load i8*, i8** %scan.longest_match.Clone, align 4
  %43 = load i8, i8* %42, align 1
  %conv19.longest_match.Clone = zext i8 %43 to i32
  %cmp20.longest_match.Clone = icmp ne i32 %conv18.longest_match.Clone, %conv19.longest_match.Clone
  br i1 %cmp20.longest_match.Clone, label %if.then28.longest_match.Clone, label %lor.lhs.false22.longest_match.Clone

lor.lhs.false22.longest_match.Clone:              ; preds = %lor.lhs.false17.longest_match.Clone
  %44 = load i8*, i8** %match.longest_match.Clone, align 4
  %incdec.ptr.longest_match.Clone = getelementptr inbounds i8, i8* %44, i32 1
  store i8* %incdec.ptr.longest_match.Clone, i8** %match.longest_match.Clone, align 4
  %45 = load i8, i8* %incdec.ptr.longest_match.Clone, align 1
  %conv23.longest_match.Clone = zext i8 %45 to i32
  %46 = load i8*, i8** %scan.longest_match.Clone, align 4
  %arrayidx24.longest_match.Clone = getelementptr inbounds i8, i8* %46, i32 1
  %47 = load i8, i8* %arrayidx24.longest_match.Clone, align 1
  %conv25.longest_match.Clone = zext i8 %47 to i32
  %cmp26.longest_match.Clone = icmp ne i32 %conv23.longest_match.Clone, %conv25.longest_match.Clone
  br i1 %cmp26.longest_match.Clone, label %if.then28.longest_match.Clone, label %if.end29.longest_match.Clone

if.then28.longest_match.Clone:                    ; preds = %lor.lhs.false22.longest_match.Clone, %lor.lhs.false17.longest_match.Clone, %lor.lhs.false.longest_match.Clone, %do.body.longest_match.Clone
  br label %do.cond102.longest_match.Clone

if.end29.longest_match.Clone:                     ; preds = %lor.lhs.false22.longest_match.Clone
  %48 = load i8*, i8** %scan.longest_match.Clone, align 4
  %add.ptr30.longest_match.Clone = getelementptr inbounds i8, i8* %48, i32 2
  store i8* %add.ptr30.longest_match.Clone, i8** %scan.longest_match.Clone, align 4
  %49 = load i8*, i8** %match.longest_match.Clone, align 4
  %incdec.ptr31.longest_match.Clone = getelementptr inbounds i8, i8* %49, i32 1
  store i8* %incdec.ptr31.longest_match.Clone, i8** %match.longest_match.Clone, align 4
  br label %do.body32.longest_match.Clone

do.body32.longest_match.Clone:                    ; preds = %land.end.longest_match.Clone, %if.end29.longest_match.Clone
  br label %do.cond.longest_match.Clone

do.cond.longest_match.Clone:                      ; preds = %do.body32.longest_match.Clone
  %50 = load i8*, i8** %scan.longest_match.Clone, align 4
  %incdec.ptr33.longest_match.Clone = getelementptr inbounds i8, i8* %50, i32 1
  store i8* %incdec.ptr33.longest_match.Clone, i8** %scan.longest_match.Clone, align 4
  %51 = load i8, i8* %incdec.ptr33.longest_match.Clone, align 1
  %conv34.longest_match.Clone = zext i8 %51 to i32
  %52 = load i8*, i8** %match.longest_match.Clone, align 4
  %incdec.ptr35.longest_match.Clone = getelementptr inbounds i8, i8* %52, i32 1
  store i8* %incdec.ptr35.longest_match.Clone, i8** %match.longest_match.Clone, align 4
  %53 = load i8, i8* %incdec.ptr35.longest_match.Clone, align 1
  %conv36.longest_match.Clone = zext i8 %53 to i32
  %cmp37.longest_match.Clone = icmp eq i32 %conv34.longest_match.Clone, %conv36.longest_match.Clone
  br i1 %cmp37.longest_match.Clone, label %land.lhs.true.longest_match.Clone, label %land.end.longest_match.Clone

land.lhs.true.longest_match.Clone:                ; preds = %do.cond.longest_match.Clone
  %54 = load i8*, i8** %scan.longest_match.Clone, align 4
  %incdec.ptr39.longest_match.Clone = getelementptr inbounds i8, i8* %54, i32 1
  store i8* %incdec.ptr39.longest_match.Clone, i8** %scan.longest_match.Clone, align 4
  %55 = load i8, i8* %incdec.ptr39.longest_match.Clone, align 1
  %conv40.longest_match.Clone = zext i8 %55 to i32
  %56 = load i8*, i8** %match.longest_match.Clone, align 4
  %incdec.ptr41.longest_match.Clone = getelementptr inbounds i8, i8* %56, i32 1
  store i8* %incdec.ptr41.longest_match.Clone, i8** %match.longest_match.Clone, align 4
  %57 = load i8, i8* %incdec.ptr41.longest_match.Clone, align 1
  %conv42.longest_match.Clone = zext i8 %57 to i32
  %cmp43.longest_match.Clone = icmp eq i32 %conv40.longest_match.Clone, %conv42.longest_match.Clone
  br i1 %cmp43.longest_match.Clone, label %land.lhs.true45.longest_match.Clone, label %land.end.longest_match.Clone

land.lhs.true45.longest_match.Clone:              ; preds = %land.lhs.true.longest_match.Clone
  %58 = load i8*, i8** %scan.longest_match.Clone, align 4
  %incdec.ptr46.longest_match.Clone = getelementptr inbounds i8, i8* %58, i32 1
  store i8* %incdec.ptr46.longest_match.Clone, i8** %scan.longest_match.Clone, align 4
  %59 = load i8, i8* %incdec.ptr46.longest_match.Clone, align 1
  %conv47.longest_match.Clone = zext i8 %59 to i32
  %60 = load i8*, i8** %match.longest_match.Clone, align 4
  %incdec.ptr48.longest_match.Clone = getelementptr inbounds i8, i8* %60, i32 1
  store i8* %incdec.ptr48.longest_match.Clone, i8** %match.longest_match.Clone, align 4
  %61 = load i8, i8* %incdec.ptr48.longest_match.Clone, align 1
  %conv49.longest_match.Clone = zext i8 %61 to i32
  %cmp50.longest_match.Clone = icmp eq i32 %conv47.longest_match.Clone, %conv49.longest_match.Clone
  br i1 %cmp50.longest_match.Clone, label %land.lhs.true52.longest_match.Clone, label %land.end.longest_match.Clone

land.lhs.true52.longest_match.Clone:              ; preds = %land.lhs.true45.longest_match.Clone
  %62 = load i8*, i8** %scan.longest_match.Clone, align 4
  %incdec.ptr53.longest_match.Clone = getelementptr inbounds i8, i8* %62, i32 1
  store i8* %incdec.ptr53.longest_match.Clone, i8** %scan.longest_match.Clone, align 4
  %63 = load i8, i8* %incdec.ptr53.longest_match.Clone, align 1
  %conv54.longest_match.Clone = zext i8 %63 to i32
  %64 = load i8*, i8** %match.longest_match.Clone, align 4
  %incdec.ptr55.longest_match.Clone = getelementptr inbounds i8, i8* %64, i32 1
  store i8* %incdec.ptr55.longest_match.Clone, i8** %match.longest_match.Clone, align 4
  %65 = load i8, i8* %incdec.ptr55.longest_match.Clone, align 1
  %conv56.longest_match.Clone = zext i8 %65 to i32
  %cmp57.longest_match.Clone = icmp eq i32 %conv54.longest_match.Clone, %conv56.longest_match.Clone
  br i1 %cmp57.longest_match.Clone, label %land.lhs.true59.longest_match.Clone, label %land.end.longest_match.Clone

land.lhs.true59.longest_match.Clone:              ; preds = %land.lhs.true52.longest_match.Clone
  %66 = load i8*, i8** %scan.longest_match.Clone, align 4
  %incdec.ptr60.longest_match.Clone = getelementptr inbounds i8, i8* %66, i32 1
  store i8* %incdec.ptr60.longest_match.Clone, i8** %scan.longest_match.Clone, align 4
  %67 = load i8, i8* %incdec.ptr60.longest_match.Clone, align 1
  %conv61.longest_match.Clone = zext i8 %67 to i32
  %68 = load i8*, i8** %match.longest_match.Clone, align 4
  %incdec.ptr62.longest_match.Clone = getelementptr inbounds i8, i8* %68, i32 1
  store i8* %incdec.ptr62.longest_match.Clone, i8** %match.longest_match.Clone, align 4
  %69 = load i8, i8* %incdec.ptr62.longest_match.Clone, align 1
  %conv63.longest_match.Clone = zext i8 %69 to i32
  %cmp64.longest_match.Clone = icmp eq i32 %conv61.longest_match.Clone, %conv63.longest_match.Clone
  br i1 %cmp64.longest_match.Clone, label %land.lhs.true66.longest_match.Clone, label %land.end.longest_match.Clone

land.lhs.true66.longest_match.Clone:              ; preds = %land.lhs.true59.longest_match.Clone
  %70 = load i8*, i8** %scan.longest_match.Clone, align 4
  %incdec.ptr67.longest_match.Clone = getelementptr inbounds i8, i8* %70, i32 1
  store i8* %incdec.ptr67.longest_match.Clone, i8** %scan.longest_match.Clone, align 4
  %71 = load i8, i8* %incdec.ptr67.longest_match.Clone, align 1
  %conv68.longest_match.Clone = zext i8 %71 to i32
  %72 = load i8*, i8** %match.longest_match.Clone, align 4
  %incdec.ptr69.longest_match.Clone = getelementptr inbounds i8, i8* %72, i32 1
  store i8* %incdec.ptr69.longest_match.Clone, i8** %match.longest_match.Clone, align 4
  %73 = load i8, i8* %incdec.ptr69.longest_match.Clone, align 1
  %conv70.longest_match.Clone = zext i8 %73 to i32
  %cmp71.longest_match.Clone = icmp eq i32 %conv68.longest_match.Clone, %conv70.longest_match.Clone
  br i1 %cmp71.longest_match.Clone, label %land.lhs.true73.longest_match.Clone, label %land.end.longest_match.Clone

land.lhs.true73.longest_match.Clone:              ; preds = %land.lhs.true66.longest_match.Clone
  %74 = load i8*, i8** %scan.longest_match.Clone, align 4
  %incdec.ptr74.longest_match.Clone = getelementptr inbounds i8, i8* %74, i32 1
  store i8* %incdec.ptr74.longest_match.Clone, i8** %scan.longest_match.Clone, align 4
  %75 = load i8, i8* %incdec.ptr74.longest_match.Clone, align 1
  %conv75.longest_match.Clone = zext i8 %75 to i32
  %76 = load i8*, i8** %match.longest_match.Clone, align 4
  %incdec.ptr76.longest_match.Clone = getelementptr inbounds i8, i8* %76, i32 1
  store i8* %incdec.ptr76.longest_match.Clone, i8** %match.longest_match.Clone, align 4
  %77 = load i8, i8* %incdec.ptr76.longest_match.Clone, align 1
  %conv77.longest_match.Clone = zext i8 %77 to i32
  %cmp78.longest_match.Clone = icmp eq i32 %conv75.longest_match.Clone, %conv77.longest_match.Clone
  br i1 %cmp78.longest_match.Clone, label %land.lhs.true80.longest_match.Clone, label %land.end.longest_match.Clone

land.lhs.true80.longest_match.Clone:              ; preds = %land.lhs.true73.longest_match.Clone
  %78 = load i8*, i8** %scan.longest_match.Clone, align 4
  %incdec.ptr81.longest_match.Clone = getelementptr inbounds i8, i8* %78, i32 1
  store i8* %incdec.ptr81.longest_match.Clone, i8** %scan.longest_match.Clone, align 4
  %79 = load i8, i8* %incdec.ptr81.longest_match.Clone, align 1
  %conv82.longest_match.Clone = zext i8 %79 to i32
  %80 = load i8*, i8** %match.longest_match.Clone, align 4
  %incdec.ptr83.longest_match.Clone = getelementptr inbounds i8, i8* %80, i32 1
  store i8* %incdec.ptr83.longest_match.Clone, i8** %match.longest_match.Clone, align 4
  %81 = load i8, i8* %incdec.ptr83.longest_match.Clone, align 1
  %conv84.longest_match.Clone = zext i8 %81 to i32
  %cmp85.longest_match.Clone = icmp eq i32 %conv82.longest_match.Clone, %conv84.longest_match.Clone
  br i1 %cmp85.longest_match.Clone, label %land.rhs.longest_match.Clone, label %land.end.longest_match.Clone

land.rhs.longest_match.Clone:                     ; preds = %land.lhs.true80.longest_match.Clone
  %82 = load i8*, i8** %scan.longest_match.Clone, align 4
  %83 = load i8*, i8** %strend.longest_match.Clone, align 4
  %cmp87.longest_match.Clone = icmp ult i8* %82, %83
  br label %land.end.longest_match.Clone

land.end.longest_match.Clone:                     ; preds = %land.rhs.longest_match.Clone, %land.lhs.true80.longest_match.Clone, %land.lhs.true73.longest_match.Clone, %land.lhs.true66.longest_match.Clone, %land.lhs.true59.longest_match.Clone, %land.lhs.true52.longest_match.Clone, %land.lhs.true45.longest_match.Clone, %land.lhs.true.longest_match.Clone, %do.cond.longest_match.Clone
  %84 = phi i1 [ false, %land.lhs.true80.longest_match.Clone ], [ false, %land.lhs.true73.longest_match.Clone ], [ false, %land.lhs.true66.longest_match.Clone ], [ false, %land.lhs.true59.longest_match.Clone ], [ false, %land.lhs.true52.longest_match.Clone ], [ false, %land.lhs.true45.longest_match.Clone ], [ false, %land.lhs.true.longest_match.Clone ], [ false, %do.cond.longest_match.Clone ], [ %cmp87.longest_match.Clone, %land.rhs.longest_match.Clone ]
  br i1 %84, label %do.body32.longest_match.Clone, label %do.end.longest_match.Clone

do.end.longest_match.Clone:                       ; preds = %land.end.longest_match.Clone
  %85 = load i8*, i8** %strend.longest_match.Clone, align 4
  %86 = load i8*, i8** %scan.longest_match.Clone, align 4
  %sub.ptr.lhs.cast.longest_match.Clone = ptrtoint i8* %85 to i32
  %sub.ptr.rhs.cast.longest_match.Clone = ptrtoint i8* %86 to i32
  %sub.ptr.sub.longest_match.Clone = sub i32 %sub.ptr.lhs.cast.longest_match.Clone, %sub.ptr.rhs.cast.longest_match.Clone
  %sub89.longest_match.Clone = sub nsw i32 258, %sub.ptr.sub.longest_match.Clone
  store i32 %sub89.longest_match.Clone, i32* %len.longest_match.Clone, align 4
  %87 = load i8*, i8** %strend.longest_match.Clone, align 4
  %add.ptr90.longest_match.Clone = getelementptr inbounds i8, i8* %87, i32 -258
  store i8* %add.ptr90.longest_match.Clone, i8** %scan.longest_match.Clone, align 4
  %88 = load i32, i32* %len.longest_match.Clone, align 4
  %89 = load i32, i32* %best_len.longest_match.Clone, align 4
  %cmp91.longest_match.Clone = icmp sgt i32 %88, %89
  br i1 %cmp91.longest_match.Clone, label %if.then93.longest_match.Clone, label %if.end101.longest_match.Clone

if.then93.longest_match.Clone:                    ; preds = %do.end.longest_match.Clone
  %90 = load i32, i32* %cur_match.addr.longest_match.Clone, align 4
  store i32 %90, i32* @match_start, align 4
  %91 = load i32, i32* %len.longest_match.Clone, align 4
  store i32 %91, i32* %best_len.longest_match.Clone, align 4
  %92 = load i32, i32* %len.longest_match.Clone, align 4
  %93 = load i32, i32* @nice_match, align 4
  %cmp94.longest_match.Clone = icmp sge i32 %92, %93
  br i1 %cmp94.longest_match.Clone, label %if.then96.longest_match.Clone, label %if.end97.longest_match.Clone

if.then96.longest_match.Clone:                    ; preds = %if.then93.longest_match.Clone
  br label %do.end111.longest_match.Clone

if.end97.longest_match.Clone:                     ; preds = %if.then93.longest_match.Clone
  %94 = load i8*, i8** %scan.longest_match.Clone, align 4
  %95 = load i32, i32* %best_len.longest_match.Clone, align 4
  %sub98.longest_match.Clone = sub nsw i32 %95, 1
  %arrayidx99.longest_match.Clone = getelementptr inbounds i8, i8* %94, i32 %sub98.longest_match.Clone
  %96 = load i8, i8* %arrayidx99.longest_match.Clone, align 1
  store i8 %96, i8* %scan_end1.longest_match.Clone, align 1
  %97 = load i8*, i8** %scan.longest_match.Clone, align 4
  %98 = load i32, i32* %best_len.longest_match.Clone, align 4
  %arrayidx100.longest_match.Clone = getelementptr inbounds i8, i8* %97, i32 %98
  %99 = load i8, i8* %arrayidx100.longest_match.Clone, align 1
  store i8 %99, i8* %scan_end.longest_match.Clone, align 1
  br label %if.end101.longest_match.Clone

if.end101.longest_match.Clone:                    ; preds = %if.end97.longest_match.Clone, %do.end.longest_match.Clone
  br label %do.cond102.longest_match.Clone

do.cond102.longest_match.Clone:                   ; preds = %if.end101.longest_match.Clone, %if.then28.longest_match.Clone
  %100 = load i32, i32* %cur_match.addr.longest_match.Clone, align 4
  %and.longest_match.Clone = and i32 %100, 32767
  %arrayidx103.longest_match.Clone = getelementptr inbounds [0 x i16], [0 x i16]* bitcast ([65536 x i16]* @prev to [0 x i16]*), i32 0, i32 %and.longest_match.Clone
  %101 = load i16, i16* %arrayidx103.longest_match.Clone, align 2
  %conv104.longest_match.Clone = zext i16 %101 to i32
  store i32 %conv104.longest_match.Clone, i32* %cur_match.addr.longest_match.Clone, align 4
  %102 = load i32, i32* %limit.longest_match.Clone, align 4
  %cmp105.longest_match.Clone = icmp ugt i32 %conv104.longest_match.Clone, %102
  br i1 %cmp105.longest_match.Clone, label %land.rhs107.longest_match.Clone, label %land.end110.longest_match.Clone

land.rhs107.longest_match.Clone:                  ; preds = %do.cond102.longest_match.Clone
  %103 = load i32, i32* %chain_length.longest_match.Clone, align 4
  %dec.longest_match.Clone = add i32 %103, -1
  store i32 %dec.longest_match.Clone, i32* %chain_length.longest_match.Clone, align 4
  %cmp108.longest_match.Clone = icmp ne i32 %dec.longest_match.Clone, 0
  br label %land.end110.longest_match.Clone

land.end110.longest_match.Clone:                  ; preds = %land.rhs107.longest_match.Clone, %do.cond102.longest_match.Clone
  %104 = phi i1 [ false, %do.cond102.longest_match.Clone ], [ %cmp108.longest_match.Clone, %land.rhs107.longest_match.Clone ]
  br i1 %104, label %do.body.longest_match.Clone, label %do.end111.longest_match.Clone

do.end111.longest_match.Clone:                    ; preds = %land.end110.longest_match.Clone, %if.then96.longest_match.Clone
  %105 = load i32, i32* %best_len.longest_match.Clone, align 4
  store i32 %105, i32* %RetValuePtr
  br label %if.then17.Clone.Split

if.then17.Clone.Split:                            ; preds = %do.end111.longest_match.Clone
  %RetValue = load i32, i32* %RetValuePtr
  store i32 %RetValue, i32* %match_length.Clone, align 4
  %106 = load i32, i32* %match_length.Clone, align 4
  %107 = load i32, i32* @lookahead, align 4
  %cmp19.Clone = icmp ugt i32 %106, %107
  br i1 %cmp19.Clone, label %if.then21.Clone, label %if.end22.Clone

if.then21.Clone:                                  ; preds = %if.then17.Clone.Split
  %108 = load i32, i32* @lookahead, align 4
  store i32 %108, i32* %match_length.Clone, align 4
  br label %if.end22.Clone

if.end22.Clone:                                   ; preds = %if.then21.Clone, %if.then17.Clone.Split
  %109 = load i32, i32* %match_length.Clone, align 4
  %cmp23.Clone = icmp eq i32 %109, 3
  br i1 %cmp23.Clone, label %land.lhs.true25.Clone, label %if.end30.Clone

land.lhs.true25.Clone:                            ; preds = %if.end22.Clone
  %110 = load i32, i32* @strstart, align 4
  %111 = load i32, i32* @match_start, align 4
  %sub26.Clone = sub i32 %110, %111
  %cmp27.Clone = icmp ugt i32 %sub26.Clone, 4096
  br i1 %cmp27.Clone, label %if.then29.Clone, label %if.end30.Clone

if.then29.Clone:                                  ; preds = %land.lhs.true25.Clone
  %112 = load i32, i32* %match_length.Clone, align 4
  %dec.Clone = add i32 %112, -1
  store i32 %dec.Clone, i32* %match_length.Clone, align 4
  br label %if.end30.Clone

if.end30.Clone:                                   ; preds = %if.then29.Clone, %land.lhs.true25.Clone, %if.end22.Clone
  br label %if.end31.Clone

if.end31.Clone:                                   ; preds = %if.end30.Clone, %land.lhs.true13.Clone, %land.lhs.true.Clone, %while.body.Clone
  br label %OutFuncRetBB

OutFuncRetBB:                                     ; preds = %if.end31.Clone
  %113 = getelementptr inbounds %Struct.RetValue.4, %Struct.RetValue.4* @Struct.RetValue.5, i32 0, i32 0
  store i32* %hash_head.Clone, i32** %113, align 4
  %114 = getelementptr inbounds %Struct.RetValue.4, %Struct.RetValue.4* @Struct.RetValue.5, i32 0, i32 1
  store i32* %match_length.Clone, i32** %114, align 4
  %115 = getelementptr inbounds %Struct.RetValue.4, %Struct.RetValue.4* @Struct.RetValue.5, i32 0, i32 2
  store i32* %prev_match.Clone, i32** %115, align 4
  ret void
}

define void @if.end61.OutLineFunc(i32* %OutFuncArg) {
entry:
  %OutFuncArg.addr = alloca i32*, align 4
  store i32* %OutFuncArg, i32** %OutFuncArg.addr, align 4
  %flush.Clone = load i32*, i32** %OutFuncArg.addr, align 4
  br label %if.end61.Clone

if.end61.Clone:                                   ; preds = %entry
  %0 = load i32, i32* %flush.Clone, align 4
  %tobool.Clone = icmp ne i32 %0, 0
  br i1 %tobool.Clone, label %if.then62.Clone, label %if.end68.Clone

if.then62.Clone:                                  ; preds = %if.end61.Clone
  %1 = load i32, i32* @strstart, align 4
  %2 = load i32, i32* @block_start, align 4
  %sub63.Clone = sub nsw i32 %1, %2
  %3 = load i32, i32* @block_start, align 4
  %cmp64.Clone = icmp sge i32 %3, 0
  br i1 %cmp64.Clone, label %cond.true.Clone, label %cond.false.Clone

cond.true.Clone:                                  ; preds = %if.then62.Clone
  %4 = load i32, i32* @block_start, align 4
  %arrayidx66.Clone = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([65536 x i8]* @window to [0 x i8]*), i32 0, i32 %4
  br label %cond.end.Clone

cond.end.Clone:                                   ; preds = %cond.false.Clone, %cond.true.Clone
  %cond.Clone = phi i8* [ %arrayidx66.Clone, %cond.true.Clone ], [ null, %cond.false.Clone ]
  %call67.Clone = call i32 @flush_block(i8* %cond.Clone, i32 %sub63.Clone, i32 0)
  %5 = load i32, i32* @strstart, align 4
  store i32 %5, i32* @block_start, align 4
  br label %if.end68.Clone

cond.false.Clone:                                 ; preds = %if.then62.Clone
  br label %cond.end.Clone

if.end68.Clone:                                   ; preds = %cond.end.Clone, %if.end61.Clone
  br label %OutFuncRetBB

OutFuncRetBB:                                     ; preds = %if.end68.Clone
  ret void
}

define void @if.then73.OutLineFunc(i32* %OutFuncArg) {
entry:
  %OutFuncArg.addr = alloca i32*, align 4
  store i32* %OutFuncArg, i32** %OutFuncArg.addr, align 4
  %retval.Clone = load i32*, i32** %OutFuncArg.addr, align 4
  br label %if.then73.Clone

if.then73.Clone:                                  ; preds = %entry
  %0 = load i32, i32* @first_nonopt, align 4
  %1 = load i32, i32* @last_nonopt, align 4
  %cmp74.Clone = icmp ne i32 %0, %1
  br i1 %cmp74.Clone, label %if.then76.Clone, label %if.end77.Clone

if.then76.Clone:                                  ; preds = %if.then73.Clone
  %2 = load i32, i32* @first_nonopt, align 4
  store i32 %2, i32* @optind, align 4
  br label %if.end77.Clone

if.end77.Clone:                                   ; preds = %if.then76.Clone, %if.then73.Clone
  store i32 -1, i32* %retval.Clone, align 4
  br label %OutFuncRetBB

OutFuncRetBB:                                     ; preds = %if.end77.Clone
  %3 = getelementptr inbounds %Struct.RetValue.6, %Struct.RetValue.6* @Struct.RetValue.8, i32 0, i32 0
  store i32* %retval.Clone, i32** %3, align 4
  ret void
}

define void @while.cond7.OutLineFunc(i8*** %OutFuncArg, i8*** %OutFuncArg1, i8** %OutFuncArg2, i8*** %OutFuncArg3) {
entry:
  %OutFuncArg.addr = alloca i8***, align 4
  store i8*** %OutFuncArg, i8**** %OutFuncArg.addr, align 4
  %first.Clone = load i8***, i8**** %OutFuncArg.addr, align 4
  %OutFuncArg1.addr = alloca i8***, align 4
  store i8*** %OutFuncArg1, i8**** %OutFuncArg1.addr, align 4
  %last.Clone = load i8***, i8**** %OutFuncArg1.addr, align 4
  %OutFuncArg2.addr = alloca i8**, align 4
  store i8** %OutFuncArg2, i8*** %OutFuncArg2.addr, align 4
  %temp.Clone = load i8**, i8*** %OutFuncArg2.addr, align 4
  %OutFuncArg3.addr = alloca i8***, align 4
  store i8*** %OutFuncArg3, i8**** %OutFuncArg3.addr, align 4
  %argv.addr.Clone = load i8***, i8**** %OutFuncArg3.addr, align 4
  br label %while.cond7.Clone

while.cond7.Clone:                                ; preds = %entry, %while.body9.Clone
  %0 = load i8**, i8*** %first.Clone, align 4
  %1 = load i8**, i8*** %last.Clone, align 4
  %cmp8.Clone = icmp ult i8** %0, %1
  br i1 %cmp8.Clone, label %while.body9.Clone, label %while.end12.Clone

while.body9.Clone:                                ; preds = %while.cond7.Clone
  %2 = load i8**, i8*** %first.Clone, align 4
  %3 = load i8*, i8** %2, align 4
  store i8* %3, i8** %temp.Clone, align 4
  %4 = load i8**, i8*** %last.Clone, align 4
  %5 = load i8*, i8** %4, align 4
  %6 = load i8**, i8*** %first.Clone, align 4
  store i8* %5, i8** %6, align 4
  %7 = load i8*, i8** %temp.Clone, align 4
  %8 = load i8**, i8*** %last.Clone, align 4
  store i8* %7, i8** %8, align 4
  %9 = load i8**, i8*** %first.Clone, align 4
  %incdec.ptr10.Clone = getelementptr inbounds i8*, i8** %9, i32 1
  store i8** %incdec.ptr10.Clone, i8*** %first.Clone, align 4
  %10 = load i8**, i8*** %last.Clone, align 4
  %incdec.ptr11.Clone = getelementptr inbounds i8*, i8** %10, i32 -1
  store i8** %incdec.ptr11.Clone, i8*** %last.Clone, align 4
  br label %while.cond7.Clone

while.end12.Clone:                                ; preds = %while.cond7.Clone
  %11 = load i8**, i8*** %argv.addr.Clone, align 4
  %12 = load i32, i32* @first_nonopt, align 4
  %arrayidx13.Clone = getelementptr inbounds i8*, i8** %11, i32 %12
  store i8** %arrayidx13.Clone, i8*** %first.Clone, align 4
  %13 = load i32, i32* @optind, align 4
  store i32 %13, i32* @last_nonopt, align 4
  %14 = load i8**, i8*** %argv.addr.Clone, align 4
  %15 = load i32, i32* @last_nonopt, align 4
  %sub14.Clone = sub nsw i32 %15, 1
  %arrayidx15.Clone = getelementptr inbounds i8*, i8** %14, i32 %sub14.Clone
  store i8** %arrayidx15.Clone, i8*** %last.Clone, align 4
  br label %OutFuncRetBB

OutFuncRetBB:                                     ; preds = %while.end12.Clone
  %16 = getelementptr inbounds %Struct.RetValue.7, %Struct.RetValue.7* @Struct.RetValue.9, i32 0, i32 0
  store i8*** %first.Clone, i8**** %16, align 4
  %17 = getelementptr inbounds %Struct.RetValue.7, %Struct.RetValue.7* @Struct.RetValue.9, i32 0, i32 1
  store i8*** %last.Clone, i8**** %17, align 4
  %18 = getelementptr inbounds %Struct.RetValue.7, %Struct.RetValue.7* @Struct.RetValue.9, i32 0, i32 2
  store i8** %temp.Clone, i8*** %18, align 4
  ret void
}

define void @if.else380.OutLineFunc() {
entry:
  br label %if.else380.Clone

if.else380.Clone:                                 ; preds = %entry
  %0 = load i32, i32* @force, align 4
  %tobool381.Clone = icmp ne i32 %0, 0
  br i1 %tobool381.Clone, label %land.lhs.true382.Clone, label %if.end387.Clone

land.lhs.true382.Clone:                           ; preds = %if.else380.Clone
  %1 = load i32, i32* @to_stdout, align 4
  %tobool383.Clone = icmp ne i32 %1, 0
  br i1 %tobool383.Clone, label %land.lhs.true384.Clone, label %if.end387.Clone

land.lhs.true384.Clone:                           ; preds = %land.lhs.true382.Clone
  %2 = load i32, i32* @list, align 4
  %tobool385.Clone = icmp ne i32 %2, 0
  br i1 %tobool385.Clone, label %if.end387.Clone, label %if.then386.Clone

if.then386.Clone:                                 ; preds = %land.lhs.true384.Clone
  store i32 0, i32* @method, align 4
  store i32 (...)* bitcast (i32 (i32, i32)* @copy to i32 (...)*), i32 (...)** @work, align 4
  store i32 0, i32* @inptr, align 4
  store i32 1, i32* @last_member, align 4
  br label %if.end387.Clone

if.end387.Clone:                                  ; preds = %if.then386.Clone, %land.lhs.true384.Clone, %land.lhs.true382.Clone, %if.else380.Clone
  br label %OutFuncRetBB

OutFuncRetBB:                                     ; preds = %if.end387.Clone
  ret void
}

define void @while.cond188.OutLineFunc(i32* %OutFuncArg, i32* %OutFuncArg1, i32* %OutFuncArg2, [17 x i32]* %OutFuncArg3, i32* %OutFuncArg4) {
entry:
  %OutFuncArg.addr = alloca i32*, align 4
  store i32* %OutFuncArg, i32** %OutFuncArg.addr, align 4
  %i.Clone = load i32*, i32** %OutFuncArg.addr, align 4
  %OutFuncArg1.addr = alloca i32*, align 4
  store i32* %OutFuncArg1, i32** %OutFuncArg1.addr, align 4
  %w.Clone = load i32*, i32** %OutFuncArg1.addr, align 4
  %OutFuncArg2.addr = alloca i32*, align 4
  store i32* %OutFuncArg2, i32** %OutFuncArg2.addr, align 4
  %h.Clone = load i32*, i32** %OutFuncArg2.addr, align 4
  %OutFuncArg3.addr = alloca [17 x i32]*, align 4
  store [17 x i32]* %OutFuncArg3, [17 x i32]** %OutFuncArg3.addr, align 4
  %x.Clone = load [17 x i32]*, [17 x i32]** %OutFuncArg3.addr, align 4
  %OutFuncArg4.addr = alloca i32*, align 4
  store i32* %OutFuncArg4, i32** %OutFuncArg4.addr, align 4
  %l.Clone = load i32*, i32** %OutFuncArg4.addr, align 4
  br label %while.cond188.Clone

while.cond188.Clone:                              ; preds = %entry, %while.body195.Clone
  %0 = load i32, i32* %i.Clone, align 4
  %1 = load i32, i32* %w.Clone, align 4
  %shl189.Clone = shl i32 1, %1
  %sub190.Clone = sub nsw i32 %shl189.Clone, 1
  %and191.Clone = and i32 %0, %sub190.Clone
  %2 = load i32, i32* %h.Clone, align 4
  %arrayidx192.Clone = getelementptr inbounds [17 x i32], [17 x i32]* %x.Clone, i32 0, i32 %2
  %3 = load i32, i32* %arrayidx192.Clone, align 4
  %cmp193.Clone = icmp ne i32 %and191.Clone, %3
  br i1 %cmp193.Clone, label %while.body195.Clone, label %while.end198.Clone

while.body195.Clone:                              ; preds = %while.cond188.Clone
  %4 = load i32, i32* %h.Clone, align 4
  %dec196.Clone = add nsw i32 %4, -1
  store i32 %dec196.Clone, i32* %h.Clone, align 4
  %5 = load i32, i32* %l.Clone, align 4
  %6 = load i32, i32* %w.Clone, align 4
  %sub197.Clone = sub nsw i32 %6, %5
  store i32 %sub197.Clone, i32* %w.Clone, align 4
  br label %while.cond188.Clone

while.end198.Clone:                               ; preds = %while.cond188.Clone
  br label %OutFuncRetBB

OutFuncRetBB:                                     ; preds = %while.end198.Clone
  %7 = getelementptr inbounds %Struct.RetValue.9, %Struct.RetValue.9* @Struct.RetValue.11, i32 0, i32 0
  store i32* %w.Clone, i32** %7, align 4
  %8 = getelementptr inbounds %Struct.RetValue.9, %Struct.RetValue.9* @Struct.RetValue.11, i32 0, i32 1
  store i32* %h.Clone, i32** %8, align 4
  ret void
}

define void @if.then60.OutLineFunc(%struct.huft** %OutFuncArg, i32* %OutFuncArg1) {
entry:
  %OutFuncArg.addr = alloca %struct.huft**, align 4
  store %struct.huft** %OutFuncArg, %struct.huft*** %OutFuncArg.addr, align 4
  %t.Clone = load %struct.huft**, %struct.huft*** %OutFuncArg.addr, align 4
  %OutFuncArg1.addr = alloca i32*, align 4
  store i32* %OutFuncArg1, i32** %OutFuncArg1.addr, align 4
  %w.Clone = load i32*, i32** %OutFuncArg1.addr, align 4
  %RetValuePtr = alloca i32, align 4
  %RetValuePtr2 = alloca i32, align 4
  br label %if.then60.Clone

if.then60.Clone:                                  ; preds = %entry
  %0 = load %struct.huft*, %struct.huft** %t.Clone, align 4
  %v61.Clone = getelementptr inbounds %struct.huft, %struct.huft* %0, i32 0, i32 2
  %n62.Clone = bitcast %union.anon* %v61.Clone to i16*
  %1 = load i16, i16* %n62.Clone, align 4
  %conv63.Clone = trunc i16 %1 to i8
  %2 = load i32, i32* %w.Clone, align 4
  %inc64.Clone = add i32 %2, 1
  store i32 %inc64.Clone, i32* %w.Clone, align 4
  %arrayidx65.Clone = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([65536 x i8]* @window to [0 x i8]*), i32 0, i32 %2
  store i8 %conv63.Clone, i8* %arrayidx65.Clone, align 1
  %3 = load i32, i32* %w.Clone, align 4
  %cmp66.Clone = icmp eq i32 %3, 32768
  br i1 %cmp66.Clone, label %if.then68.Clone, label %if.end69.Clone

if.then68.Clone:                                  ; preds = %if.then60.Clone
  %4 = load i32, i32* %w.Clone, align 4
  store i32 %4, i32* @outcnt, align 4
  br label %entry.flush_window.Clone

entry.flush_window.Clone:                         ; preds = %if.then68.Clone
  %5 = load i32, i32* @outcnt, align 4
  %cmp.flush_window.Clone = icmp eq i32 %5, 0
  br i1 %cmp.flush_window.Clone, label %if.then.flush_window.Clone, label %if.end.flush_window.Clone

if.then.flush_window.Clone:                       ; preds = %entry.flush_window.Clone
  br label %return.flush_window.Clone

if.end.flush_window.Clone:                        ; preds = %entry.flush_window.Clone
  %6 = load i32, i32* @outcnt, align 4
  br label %entry.updcrc.Clone

entry.updcrc.Clone:                               ; preds = %if.end.flush_window.Clone
  %n.addr.updcrc.Clone = alloca i32, align 4
  %s.addr.updcrc.Clone = alloca i8*, align 4
  %c.updcrc.Clone = alloca i32, align 4
  store i32 %6, i32* %n.addr.updcrc.Clone, align 4
  store i8* getelementptr inbounds ([65536 x i8], [65536 x i8]* @window, i32 0, i32 0), i8** %s.addr.updcrc.Clone, align 4
  %7 = load i8*, i8** %s.addr.updcrc.Clone, align 4
  %cmp.updcrc.Clone = icmp eq i8* %7, null
  br i1 %cmp.updcrc.Clone, label %if.then.updcrc.Clone, label %if.else.updcrc.Clone

if.then.updcrc.Clone:                             ; preds = %entry.updcrc.Clone
  store i32 -1, i32* %c.updcrc.Clone, align 4
  br label %if.end4.updcrc.Clone

if.else.updcrc.Clone:                             ; preds = %entry.updcrc.Clone
  %8 = load i32, i32* @updcrc.crc, align 4
  store i32 %8, i32* %c.updcrc.Clone, align 4
  %9 = load i32, i32* %n.addr.updcrc.Clone, align 4
  %tobool.updcrc.Clone = icmp ne i32 %9, 0
  br i1 %tobool.updcrc.Clone, label %if.then1.updcrc.Clone, label %if.end.updcrc.Clone

if.then1.updcrc.Clone:                            ; preds = %if.else.updcrc.Clone
  br label %do.body.updcrc.Clone

do.body.updcrc.Clone:                             ; preds = %do.cond.updcrc.Clone, %if.then1.updcrc.Clone
  %10 = load i32, i32* %c.updcrc.Clone, align 4
  %11 = load i8*, i8** %s.addr.updcrc.Clone, align 4
  %incdec.ptr.updcrc.Clone = getelementptr inbounds i8, i8* %11, i32 1
  store i8* %incdec.ptr.updcrc.Clone, i8** %s.addr.updcrc.Clone, align 4
  %12 = load i8, i8* %11, align 1
  %conv.updcrc.Clone = zext i8 %12 to i32
  %xor.updcrc.Clone = xor i32 %10, %conv.updcrc.Clone
  %and.updcrc.Clone = and i32 %xor.updcrc.Clone, 255
  %arrayidx.updcrc.Clone = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([256 x i32]* @crc_32_tab to [0 x i32]*), i32 0, i32 %and.updcrc.Clone
  %13 = load i32, i32* %arrayidx.updcrc.Clone, align 4
  %14 = load i32, i32* %c.updcrc.Clone, align 4
  %shr.updcrc.Clone = lshr i32 %14, 8
  %xor2.updcrc.Clone = xor i32 %13, %shr.updcrc.Clone
  store i32 %xor2.updcrc.Clone, i32* %c.updcrc.Clone, align 4
  br label %do.cond.updcrc.Clone

do.cond.updcrc.Clone:                             ; preds = %do.body.updcrc.Clone
  %15 = load i32, i32* %n.addr.updcrc.Clone, align 4
  %dec.updcrc.Clone = add i32 %15, -1
  store i32 %dec.updcrc.Clone, i32* %n.addr.updcrc.Clone, align 4
  %tobool3.updcrc.Clone = icmp ne i32 %dec.updcrc.Clone, 0
  br i1 %tobool3.updcrc.Clone, label %do.body.updcrc.Clone, label %do.end.updcrc.Clone

do.end.updcrc.Clone:                              ; preds = %do.cond.updcrc.Clone
  br label %if.end.updcrc.Clone

if.end.updcrc.Clone:                              ; preds = %do.end.updcrc.Clone, %if.else.updcrc.Clone
  br label %if.end4.updcrc.Clone

if.end4.updcrc.Clone:                             ; preds = %if.end.updcrc.Clone, %if.then.updcrc.Clone
  %16 = load i32, i32* %c.updcrc.Clone, align 4
  store i32 %16, i32* @updcrc.crc, align 4
  %17 = load i32, i32* %c.updcrc.Clone, align 4
  %xor5.updcrc.Clone = xor i32 %17, -1
  store i32 %xor5.updcrc.Clone, i32* %RetValuePtr
  br label %if.end.flush_window.Clone.Split

if.end.flush_window.Clone.Split:                  ; preds = %if.end4.updcrc.Clone
  %RetValue = load i32, i32* %RetValuePtr
  %18 = load i32, i32* @test, align 4
  %tobool.flush_window.Clone = icmp ne i32 %18, 0
  br i1 %tobool.flush_window.Clone, label %if.end2.flush_window.Clone, label %if.then1.flush_window.Clone

if.then1.flush_window.Clone:                      ; preds = %if.end.flush_window.Clone.Split
  %19 = load i32, i32* @outcnt, align 4
  %20 = load i32, i32* @ofd, align 4
  br label %entry.write_buf.Clone

entry.write_buf.Clone:                            ; preds = %if.then1.flush_window.Clone
  %cnt.addr.write_buf.Clone = alloca i32, align 4
  %buf.addr.write_buf.Clone = alloca i8*, align 4
  %fd.addr.write_buf.Clone = alloca i32, align 4
  %n.write_buf.Clone = alloca i32, align 4
  store i32 %19, i32* %cnt.addr.write_buf.Clone, align 4
  store i8* getelementptr inbounds ([65536 x i8], [65536 x i8]* @window, i32 0, i32 0), i8** %buf.addr.write_buf.Clone, align 4
  store i32 %20, i32* %fd.addr.write_buf.Clone, align 4
  br label %while.cond.write_buf.Clone

while.cond.write_buf.Clone:                       ; preds = %if.end.write_buf.Clone, %entry.write_buf.Clone
  %21 = load i32, i32* %cnt.addr.write_buf.Clone, align 4
  %22 = load i8*, i8** %buf.addr.write_buf.Clone, align 4
  %23 = load i32, i32* %fd.addr.write_buf.Clone, align 4
  br label %entry.spec_write.Clone

entry.spec_write.Clone:                           ; preds = %while.cond.write_buf.Clone
  %size.addr.spec_write.Clone = alloca i32, align 4
  %buf.addr.spec_write.Clone = alloca i8*, align 4
  %fd.addr.spec_write.Clone = alloca i32, align 4
  store i32 %21, i32* %size.addr.spec_write.Clone, align 4
  store i8* %22, i8** %buf.addr.spec_write.Clone, align 4
  store i32 %23, i32* %fd.addr.spec_write.Clone, align 4
  %24 = load i32, i32* @dbglvl, align 4
  %cmp.spec_write.Clone = icmp slt i32 4, %24
  br i1 %cmp.spec_write.Clone, label %if.then.spec_write.Clone, label %if.end.spec_write.Clone

if.then.spec_write.Clone:                         ; preds = %entry.spec_write.Clone
  %25 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %26 = load i8*, i8** %buf.addr.spec_write.Clone, align 4
  %27 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %call.spec_write.Clone = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @"??_C@_0BK@GKFGHPHN@spec_write?3?5?$CFd?0?5?$CFx?0?5?$CFd?5?$DN?5?$AA@", i32 0, i32 0), i32 %27, i8* %26, i32 %25)
  br label %if.end.spec_write.Clone

if.end.spec_write.Clone:                          ; preds = %if.then.spec_write.Clone, %entry.spec_write.Clone
  %28 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %cmp1.spec_write.Clone = icmp sgt i32 %28, 3
  br i1 %cmp1.spec_write.Clone, label %if.then2.spec_write.Clone, label %if.end5.spec_write.Clone

if.then2.spec_write.Clone:                        ; preds = %if.end.spec_write.Clone
  %29 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %call3.spec_write.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx.spec_write.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.spec_write.Clone, i32 2
  %call4.spec_write.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.spec_write.Clone, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"??_C@_0CD@NANFEFEM@spec_write?3?5fd?$DN?$CFd?0?5?$DO?5MAX_SPEC_FD@", i32 0, i32 0), i32 %29)
  call void @exit(i32 1) #7
  unreachable

if.end5.spec_write.Clone:                         ; preds = %if.end.spec_write.Clone
  %30 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx6.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %30
  %buf7.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx6.spec_write.Clone, i32 0, i32 3
  %31 = load i8*, i8** %buf7.spec_write.Clone, align 4
  %32 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx8.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %32
  %pos.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx8.spec_write.Clone, i32 0, i32 2
  %33 = load i32, i32* %pos.spec_write.Clone, align 4
  %arrayidx9.spec_write.Clone = getelementptr inbounds i8, i8* %31, i32 %33
  %34 = load i8*, i8** %buf.addr.spec_write.Clone, align 4
  %35 = load i32, i32* %size.addr.spec_write.Clone, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %arrayidx9.spec_write.Clone, i8* align 1 %34, i32 %35, i1 false)
  %36 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %37 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx10.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %37
  %len.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx10.spec_write.Clone, i32 0, i32 1
  %38 = load i32, i32* %len.spec_write.Clone, align 4
  %add.spec_write.Clone = add nsw i32 %38, %36
  store i32 %add.spec_write.Clone, i32* %len.spec_write.Clone, align 4
  %39 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %40 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx11.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %40
  %pos12.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx11.spec_write.Clone, i32 0, i32 2
  %41 = load i32, i32* %pos12.spec_write.Clone, align 4
  %add13.spec_write.Clone = add nsw i32 %41, %39
  store i32 %add13.spec_write.Clone, i32* %pos12.spec_write.Clone, align 4
  %42 = load i32, i32* @dbglvl, align 4
  %cmp14.spec_write.Clone = icmp slt i32 4, %42
  br i1 %cmp14.spec_write.Clone, label %if.then15.spec_write.Clone, label %if.end17.spec_write.Clone

if.then15.spec_write.Clone:                       ; preds = %if.end5.spec_write.Clone
  %43 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %call16.spec_write.Clone = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"??_C@_03PMGGPEJJ@?$CFd?6?$AA@", i32 0, i32 0), i32 %43)
  br label %if.end17.spec_write.Clone

if.end17.spec_write.Clone:                        ; preds = %if.then15.spec_write.Clone, %if.end5.spec_write.Clone
  %44 = load i32, i32* %size.addr.spec_write.Clone, align 4
  store i32 %44, i32* %RetValuePtr2
  br label %while.cond.write_buf.Clone.Split

while.cond.write_buf.Clone.Split:                 ; preds = %if.end17.spec_write.Clone
  %RetValue3 = load i32, i32* %RetValuePtr2
  store i32 %RetValue3, i32* %n.write_buf.Clone, align 4
  %45 = load i32, i32* %cnt.addr.write_buf.Clone, align 4
  %cmp.write_buf.Clone = icmp ne i32 %RetValue3, %45
  br i1 %cmp.write_buf.Clone, label %while.body.write_buf.Clone, label %while.end.write_buf.Clone

while.body.write_buf.Clone:                       ; preds = %while.cond.write_buf.Clone.Split
  %46 = load i32, i32* %n.write_buf.Clone, align 4
  %cmp1.write_buf.Clone = icmp eq i32 %46, -1
  br i1 %cmp1.write_buf.Clone, label %if.then.write_buf.Clone, label %if.end.write_buf.Clone

if.then.write_buf.Clone:                          ; preds = %while.body.write_buf.Clone
  call void @write_error()
  br label %if.end.write_buf.Clone

if.end.write_buf.Clone:                           ; preds = %if.then.write_buf.Clone, %while.body.write_buf.Clone
  %47 = load i32, i32* %n.write_buf.Clone, align 4
  %48 = load i32, i32* %cnt.addr.write_buf.Clone, align 4
  %sub.write_buf.Clone = sub i32 %48, %47
  store i32 %sub.write_buf.Clone, i32* %cnt.addr.write_buf.Clone, align 4
  %49 = load i8*, i8** %buf.addr.write_buf.Clone, align 4
  %50 = load i32, i32* %n.write_buf.Clone, align 4
  %add.ptr.write_buf.Clone = getelementptr inbounds i8, i8* %49, i32 %50
  store i8* %add.ptr.write_buf.Clone, i8** %buf.addr.write_buf.Clone, align 4
  br label %while.cond.write_buf.Clone

while.end.write_buf.Clone:                        ; preds = %while.cond.write_buf.Clone.Split
  br label %if.then1.flush_window.Clone.Split

if.then1.flush_window.Clone.Split:                ; preds = %while.end.write_buf.Clone
  br label %if.end2.flush_window.Clone

if.end2.flush_window.Clone:                       ; preds = %if.then1.flush_window.Clone.Split, %if.end.flush_window.Clone.Split
  %51 = load i32, i32* @outcnt, align 4
  %52 = load i32, i32* @bytes_out, align 4
  %add.flush_window.Clone = add i32 %52, %51
  store i32 %add.flush_window.Clone, i32* @bytes_out, align 4
  store i32 0, i32* @outcnt, align 4
  br label %return.flush_window.Clone

return.flush_window.Clone:                        ; preds = %if.end2.flush_window.Clone, %if.then.flush_window.Clone
  br label %if.then68.Clone.Split

if.then68.Clone.Split:                            ; preds = %return.flush_window.Clone
  store i32 0, i32* %w.Clone, align 4
  br label %if.end69.Clone

if.end69.Clone:                                   ; preds = %if.then68.Clone.Split, %if.then60.Clone
  br label %OutFuncRetBB

OutFuncRetBB:                                     ; preds = %if.end69.Clone
  %53 = getelementptr inbounds %Struct.RetValue.10, %Struct.RetValue.10* @Struct.RetValue.12, i32 0, i32 0
  store i32* %w.Clone, i32** %53, align 4
  ret void
}

define void @while.cond32.OutLineFunc(i32* %OutFuncArg, i32* %OutFuncArg1, i32* %OutFuncArg2, i32* %OutFuncArg3, i32* %OutFuncArg4) {
entry:
  %OutFuncArg.addr = alloca i32*, align 4
  store i32* %OutFuncArg, i32** %OutFuncArg.addr, align 4
  %n.Clone = load i32*, i32** %OutFuncArg.addr, align 4
  %OutFuncArg1.addr = alloca i32*, align 4
  store i32* %OutFuncArg1, i32** %OutFuncArg1.addr, align 4
  %k.Clone = load i32*, i32** %OutFuncArg1.addr, align 4
  %OutFuncArg2.addr = alloca i32*, align 4
  store i32* %OutFuncArg2, i32** %OutFuncArg2.addr, align 4
  %b.Clone = load i32*, i32** %OutFuncArg2.addr, align 4
  %OutFuncArg3.addr = alloca i32*, align 4
  store i32* %OutFuncArg3, i32** %OutFuncArg3.addr, align 4
  %w.Clone = load i32*, i32** %OutFuncArg3.addr, align 4
  %OutFuncArg4.addr = alloca i32*, align 4
  store i32* %OutFuncArg4, i32** %OutFuncArg4.addr, align 4
  %retval.Clone = load i32*, i32** %OutFuncArg4.addr, align 4
  %RetValuePtr = alloca i32, align 4
  %RetValuePtr5 = alloca i32, align 4
  %RetValuePtr7 = alloca i32, align 4
  br label %while.cond32.Clone

while.cond32.Clone:                               ; preds = %entry, %if.end60.Clone
  %0 = load i32, i32* %n.Clone, align 4
  %dec.Clone = add i32 %0, -1
  store i32 %dec.Clone, i32* %n.Clone, align 4
  %tobool.Clone = icmp ne i32 %0, 0
  br i1 %tobool.Clone, label %while.body33.Clone, label %while.end63.Clone

while.body33.Clone:                               ; preds = %while.cond32.Clone
  br label %while.cond34.Clone

while.cond34.Clone:                               ; preds = %cond.end46.Clone, %while.body33.Clone
  %1 = load i32, i32* %k.Clone, align 4
  %cmp35.Clone = icmp ult i32 %1, 8
  br i1 %cmp35.Clone, label %while.body37.Clone, label %while.end53.Clone

while.body37.Clone:                               ; preds = %while.cond34.Clone
  %2 = load i32, i32* @inptr, align 4
  %3 = load i32, i32* @insize, align 4
  %cmp38.Clone = icmp ult i32 %2, %3
  br i1 %cmp38.Clone, label %cond.true40.Clone, label %cond.false44.Clone

cond.true40.Clone:                                ; preds = %while.body37.Clone
  %4 = load i32, i32* @inptr, align 4
  %inc41.Clone = add i32 %4, 1
  store i32 %inc41.Clone, i32* @inptr, align 4
  %arrayidx42.Clone = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i32 0, i32 %4
  %5 = load i8, i8* %arrayidx42.Clone, align 1
  %conv43.Clone = zext i8 %5 to i32
  br label %cond.end46.Clone

cond.end46.Clone:                                 ; preds = %cond.false44.Clone.Split, %cond.true40.Clone
  %cond47.Clone = phi i32 [ %conv43.Clone, %cond.true40.Clone ], [ %RetValue, %cond.false44.Clone.Split ]
  %conv48.Clone = trunc i32 %cond47.Clone to i8
  %conv49.Clone = zext i8 %conv48.Clone to i32
  %6 = load i32, i32* %k.Clone, align 4
  %shl50.Clone = shl i32 %conv49.Clone, %6
  %7 = load i32, i32* %b.Clone, align 4
  %or51.Clone = or i32 %7, %shl50.Clone
  store i32 %or51.Clone, i32* %b.Clone, align 4
  %8 = load i32, i32* %k.Clone, align 4
  %add52.Clone = add i32 %8, 8
  store i32 %add52.Clone, i32* %k.Clone, align 4
  br label %while.cond34.Clone

while.end53.Clone:                                ; preds = %while.cond34.Clone
  %9 = load i32, i32* %b.Clone, align 4
  %conv54.Clone = trunc i32 %9 to i8
  %10 = load i32, i32* %w.Clone, align 4
  %inc55.Clone = add i32 %10, 1
  store i32 %inc55.Clone, i32* %w.Clone, align 4
  %arrayidx56.Clone = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([65536 x i8]* @window to [0 x i8]*), i32 0, i32 %10
  store i8 %conv54.Clone, i8* %arrayidx56.Clone, align 1
  %11 = load i32, i32* %w.Clone, align 4
  %cmp57.Clone = icmp eq i32 %11, 32768
  br i1 %cmp57.Clone, label %if.then59.Clone, label %if.end60.Clone

if.then59.Clone:                                  ; preds = %while.end53.Clone
  %12 = load i32, i32* %w.Clone, align 4
  store i32 %12, i32* @outcnt, align 4
  br label %entry.flush_window.Clone

entry.flush_window.Clone:                         ; preds = %if.then59.Clone
  %13 = load i32, i32* @outcnt, align 4
  %cmp.flush_window.Clone = icmp eq i32 %13, 0
  br i1 %cmp.flush_window.Clone, label %if.then.flush_window.Clone, label %if.end.flush_window.Clone

if.then.flush_window.Clone:                       ; preds = %entry.flush_window.Clone
  br label %return.flush_window.Clone

if.end.flush_window.Clone:                        ; preds = %entry.flush_window.Clone
  %14 = load i32, i32* @outcnt, align 4
  br label %entry.updcrc.Clone

entry.updcrc.Clone:                               ; preds = %if.end.flush_window.Clone
  %n.addr.updcrc.Clone = alloca i32, align 4
  %s.addr.updcrc.Clone = alloca i8*, align 4
  %c.updcrc.Clone = alloca i32, align 4
  store i32 %14, i32* %n.addr.updcrc.Clone, align 4
  store i8* getelementptr inbounds ([65536 x i8], [65536 x i8]* @window, i32 0, i32 0), i8** %s.addr.updcrc.Clone, align 4
  %15 = load i8*, i8** %s.addr.updcrc.Clone, align 4
  %cmp.updcrc.Clone = icmp eq i8* %15, null
  br i1 %cmp.updcrc.Clone, label %if.then.updcrc.Clone, label %if.else.updcrc.Clone

if.then.updcrc.Clone:                             ; preds = %entry.updcrc.Clone
  store i32 -1, i32* %c.updcrc.Clone, align 4
  br label %if.end4.updcrc.Clone

if.else.updcrc.Clone:                             ; preds = %entry.updcrc.Clone
  %16 = load i32, i32* @updcrc.crc, align 4
  store i32 %16, i32* %c.updcrc.Clone, align 4
  %17 = load i32, i32* %n.addr.updcrc.Clone, align 4
  %tobool.updcrc.Clone = icmp ne i32 %17, 0
  br i1 %tobool.updcrc.Clone, label %if.then1.updcrc.Clone, label %if.end.updcrc.Clone

if.then1.updcrc.Clone:                            ; preds = %if.else.updcrc.Clone
  br label %do.body.updcrc.Clone

do.body.updcrc.Clone:                             ; preds = %do.cond.updcrc.Clone, %if.then1.updcrc.Clone
  %18 = load i32, i32* %c.updcrc.Clone, align 4
  %19 = load i8*, i8** %s.addr.updcrc.Clone, align 4
  %incdec.ptr.updcrc.Clone = getelementptr inbounds i8, i8* %19, i32 1
  store i8* %incdec.ptr.updcrc.Clone, i8** %s.addr.updcrc.Clone, align 4
  %20 = load i8, i8* %19, align 1
  %conv.updcrc.Clone = zext i8 %20 to i32
  %xor.updcrc.Clone = xor i32 %18, %conv.updcrc.Clone
  %and.updcrc.Clone = and i32 %xor.updcrc.Clone, 255
  %arrayidx.updcrc.Clone = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([256 x i32]* @crc_32_tab to [0 x i32]*), i32 0, i32 %and.updcrc.Clone
  %21 = load i32, i32* %arrayidx.updcrc.Clone, align 4
  %22 = load i32, i32* %c.updcrc.Clone, align 4
  %shr.updcrc.Clone = lshr i32 %22, 8
  %xor2.updcrc.Clone = xor i32 %21, %shr.updcrc.Clone
  store i32 %xor2.updcrc.Clone, i32* %c.updcrc.Clone, align 4
  br label %do.cond.updcrc.Clone

do.cond.updcrc.Clone:                             ; preds = %do.body.updcrc.Clone
  %23 = load i32, i32* %n.addr.updcrc.Clone, align 4
  %dec.updcrc.Clone = add i32 %23, -1
  store i32 %dec.updcrc.Clone, i32* %n.addr.updcrc.Clone, align 4
  %tobool3.updcrc.Clone = icmp ne i32 %dec.updcrc.Clone, 0
  br i1 %tobool3.updcrc.Clone, label %do.body.updcrc.Clone, label %do.end.updcrc.Clone

do.end.updcrc.Clone:                              ; preds = %do.cond.updcrc.Clone
  br label %if.end.updcrc.Clone

if.end.updcrc.Clone:                              ; preds = %do.end.updcrc.Clone, %if.else.updcrc.Clone
  br label %if.end4.updcrc.Clone

if.end4.updcrc.Clone:                             ; preds = %if.end.updcrc.Clone, %if.then.updcrc.Clone
  %24 = load i32, i32* %c.updcrc.Clone, align 4
  store i32 %24, i32* @updcrc.crc, align 4
  %25 = load i32, i32* %c.updcrc.Clone, align 4
  %xor5.updcrc.Clone = xor i32 %25, -1
  store i32 %xor5.updcrc.Clone, i32* %RetValuePtr5
  br label %if.end.flush_window.Clone.Split

if.end.flush_window.Clone.Split:                  ; preds = %if.end4.updcrc.Clone
  %RetValue6 = load i32, i32* %RetValuePtr5
  %26 = load i32, i32* @test, align 4
  %tobool.flush_window.Clone = icmp ne i32 %26, 0
  br i1 %tobool.flush_window.Clone, label %if.end2.flush_window.Clone, label %if.then1.flush_window.Clone

if.then1.flush_window.Clone:                      ; preds = %if.end.flush_window.Clone.Split
  %27 = load i32, i32* @outcnt, align 4
  %28 = load i32, i32* @ofd, align 4
  br label %entry.write_buf.Clone

entry.write_buf.Clone:                            ; preds = %if.then1.flush_window.Clone
  %cnt.addr.write_buf.Clone = alloca i32, align 4
  %buf.addr.write_buf.Clone = alloca i8*, align 4
  %fd.addr.write_buf.Clone = alloca i32, align 4
  %n.write_buf.Clone = alloca i32, align 4
  store i32 %27, i32* %cnt.addr.write_buf.Clone, align 4
  store i8* getelementptr inbounds ([65536 x i8], [65536 x i8]* @window, i32 0, i32 0), i8** %buf.addr.write_buf.Clone, align 4
  store i32 %28, i32* %fd.addr.write_buf.Clone, align 4
  br label %while.cond.write_buf.Clone

while.cond.write_buf.Clone:                       ; preds = %if.end.write_buf.Clone, %entry.write_buf.Clone
  %29 = load i32, i32* %cnt.addr.write_buf.Clone, align 4
  %30 = load i8*, i8** %buf.addr.write_buf.Clone, align 4
  %31 = load i32, i32* %fd.addr.write_buf.Clone, align 4
  br label %entry.spec_write.Clone

entry.spec_write.Clone:                           ; preds = %while.cond.write_buf.Clone
  %size.addr.spec_write.Clone = alloca i32, align 4
  %buf.addr.spec_write.Clone = alloca i8*, align 4
  %fd.addr.spec_write.Clone = alloca i32, align 4
  store i32 %29, i32* %size.addr.spec_write.Clone, align 4
  store i8* %30, i8** %buf.addr.spec_write.Clone, align 4
  store i32 %31, i32* %fd.addr.spec_write.Clone, align 4
  %32 = load i32, i32* @dbglvl, align 4
  %cmp.spec_write.Clone = icmp slt i32 4, %32
  br i1 %cmp.spec_write.Clone, label %if.then.spec_write.Clone, label %if.end.spec_write.Clone

if.then.spec_write.Clone:                         ; preds = %entry.spec_write.Clone
  %33 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %34 = load i8*, i8** %buf.addr.spec_write.Clone, align 4
  %35 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %call.spec_write.Clone = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @"??_C@_0BK@GKFGHPHN@spec_write?3?5?$CFd?0?5?$CFx?0?5?$CFd?5?$DN?5?$AA@", i32 0, i32 0), i32 %35, i8* %34, i32 %33)
  br label %if.end.spec_write.Clone

if.end.spec_write.Clone:                          ; preds = %if.then.spec_write.Clone, %entry.spec_write.Clone
  %36 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %cmp1.spec_write.Clone = icmp sgt i32 %36, 3
  br i1 %cmp1.spec_write.Clone, label %if.then2.spec_write.Clone, label %if.end5.spec_write.Clone

if.then2.spec_write.Clone:                        ; preds = %if.end.spec_write.Clone
  %37 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %call3.spec_write.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx.spec_write.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.spec_write.Clone, i32 2
  %call4.spec_write.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.spec_write.Clone, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"??_C@_0CD@NANFEFEM@spec_write?3?5fd?$DN?$CFd?0?5?$DO?5MAX_SPEC_FD@", i32 0, i32 0), i32 %37)
  call void @exit(i32 1) #7
  unreachable

if.end5.spec_write.Clone:                         ; preds = %if.end.spec_write.Clone
  %38 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx6.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %38
  %buf7.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx6.spec_write.Clone, i32 0, i32 3
  %39 = load i8*, i8** %buf7.spec_write.Clone, align 4
  %40 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx8.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %40
  %pos.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx8.spec_write.Clone, i32 0, i32 2
  %41 = load i32, i32* %pos.spec_write.Clone, align 4
  %arrayidx9.spec_write.Clone = getelementptr inbounds i8, i8* %39, i32 %41
  %42 = load i8*, i8** %buf.addr.spec_write.Clone, align 4
  %43 = load i32, i32* %size.addr.spec_write.Clone, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %arrayidx9.spec_write.Clone, i8* align 1 %42, i32 %43, i1 false)
  %44 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %45 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx10.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %45
  %len.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx10.spec_write.Clone, i32 0, i32 1
  %46 = load i32, i32* %len.spec_write.Clone, align 4
  %add.spec_write.Clone = add nsw i32 %46, %44
  store i32 %add.spec_write.Clone, i32* %len.spec_write.Clone, align 4
  %47 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %48 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx11.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %48
  %pos12.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx11.spec_write.Clone, i32 0, i32 2
  %49 = load i32, i32* %pos12.spec_write.Clone, align 4
  %add13.spec_write.Clone = add nsw i32 %49, %47
  store i32 %add13.spec_write.Clone, i32* %pos12.spec_write.Clone, align 4
  %50 = load i32, i32* @dbglvl, align 4
  %cmp14.spec_write.Clone = icmp slt i32 4, %50
  br i1 %cmp14.spec_write.Clone, label %if.then15.spec_write.Clone, label %if.end17.spec_write.Clone

if.then15.spec_write.Clone:                       ; preds = %if.end5.spec_write.Clone
  %51 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %call16.spec_write.Clone = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"??_C@_03PMGGPEJJ@?$CFd?6?$AA@", i32 0, i32 0), i32 %51)
  br label %if.end17.spec_write.Clone

if.end17.spec_write.Clone:                        ; preds = %if.then15.spec_write.Clone, %if.end5.spec_write.Clone
  %52 = load i32, i32* %size.addr.spec_write.Clone, align 4
  store i32 %52, i32* %RetValuePtr7
  br label %while.cond.write_buf.Clone.Split

while.cond.write_buf.Clone.Split:                 ; preds = %if.end17.spec_write.Clone
  %RetValue8 = load i32, i32* %RetValuePtr7
  store i32 %RetValue8, i32* %n.write_buf.Clone, align 4
  %53 = load i32, i32* %cnt.addr.write_buf.Clone, align 4
  %cmp.write_buf.Clone = icmp ne i32 %RetValue8, %53
  br i1 %cmp.write_buf.Clone, label %while.body.write_buf.Clone, label %while.end.write_buf.Clone

while.body.write_buf.Clone:                       ; preds = %while.cond.write_buf.Clone.Split
  %54 = load i32, i32* %n.write_buf.Clone, align 4
  %cmp1.write_buf.Clone = icmp eq i32 %54, -1
  br i1 %cmp1.write_buf.Clone, label %if.then.write_buf.Clone, label %if.end.write_buf.Clone

if.then.write_buf.Clone:                          ; preds = %while.body.write_buf.Clone
  call void @write_error()
  br label %if.end.write_buf.Clone

if.end.write_buf.Clone:                           ; preds = %if.then.write_buf.Clone, %while.body.write_buf.Clone
  %55 = load i32, i32* %n.write_buf.Clone, align 4
  %56 = load i32, i32* %cnt.addr.write_buf.Clone, align 4
  %sub.write_buf.Clone = sub i32 %56, %55
  store i32 %sub.write_buf.Clone, i32* %cnt.addr.write_buf.Clone, align 4
  %57 = load i8*, i8** %buf.addr.write_buf.Clone, align 4
  %58 = load i32, i32* %n.write_buf.Clone, align 4
  %add.ptr.write_buf.Clone = getelementptr inbounds i8, i8* %57, i32 %58
  store i8* %add.ptr.write_buf.Clone, i8** %buf.addr.write_buf.Clone, align 4
  br label %while.cond.write_buf.Clone

while.end.write_buf.Clone:                        ; preds = %while.cond.write_buf.Clone.Split
  br label %if.then1.flush_window.Clone.Split

if.then1.flush_window.Clone.Split:                ; preds = %while.end.write_buf.Clone
  br label %if.end2.flush_window.Clone

if.end2.flush_window.Clone:                       ; preds = %if.then1.flush_window.Clone.Split, %if.end.flush_window.Clone.Split
  %59 = load i32, i32* @outcnt, align 4
  %60 = load i32, i32* @bytes_out, align 4
  %add.flush_window.Clone = add i32 %60, %59
  store i32 %add.flush_window.Clone, i32* @bytes_out, align 4
  store i32 0, i32* @outcnt, align 4
  br label %return.flush_window.Clone

return.flush_window.Clone:                        ; preds = %if.end2.flush_window.Clone, %if.then.flush_window.Clone
  br label %if.then59.Clone.Split

if.then59.Clone.Split:                            ; preds = %return.flush_window.Clone
  store i32 0, i32* %w.Clone, align 4
  br label %if.end60.Clone

if.end60.Clone:                                   ; preds = %if.then59.Clone.Split, %while.end53.Clone
  %61 = load i32, i32* %b.Clone, align 4
  %shr61.Clone = lshr i32 %61, 8
  store i32 %shr61.Clone, i32* %b.Clone, align 4
  %62 = load i32, i32* %k.Clone, align 4
  %sub62.Clone = sub i32 %62, 8
  store i32 %sub62.Clone, i32* %k.Clone, align 4
  br label %while.cond32.Clone

cond.false44.Clone:                               ; preds = %while.body37.Clone
  br label %entry.fill_inbuf.Clone

entry.fill_inbuf.Clone:                           ; preds = %cond.false44.Clone
  %retval.fill_inbuf.Clone = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone = alloca i32, align 4
  %len.fill_inbuf.Clone = alloca i32, align 4
  store i32 0, i32* %eof_ok.addr.fill_inbuf.Clone, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone, align 4
  br label %do.body.fill_inbuf.Clone

do.body.fill_inbuf.Clone:                         ; preds = %do.cond.fill_inbuf.Clone, %entry.fill_inbuf.Clone
  %63 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone = sub i32 32768, %63
  %64 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %64
  %65 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone = call i32 @spec_read(i32 %65, i8* %add.ptr.fill_inbuf.Clone, i32 %sub.fill_inbuf.Clone)
  store i32 %call1.fill_inbuf.Clone, i32* %len.fill_inbuf.Clone, align 4
  %66 = load i32, i32* %len.fill_inbuf.Clone, align 4
  %cmp.fill_inbuf.Clone = icmp eq i32 %66, 0
  br i1 %cmp.fill_inbuf.Clone, label %if.then.fill_inbuf.Clone, label %lor.lhs.false.fill_inbuf.Clone

lor.lhs.false.fill_inbuf.Clone:                   ; preds = %do.body.fill_inbuf.Clone
  %67 = load i32, i32* %len.fill_inbuf.Clone, align 4
  %cmp2.fill_inbuf.Clone = icmp eq i32 %67, -1
  br i1 %cmp2.fill_inbuf.Clone, label %if.then.fill_inbuf.Clone, label %if.end.fill_inbuf.Clone

if.then.fill_inbuf.Clone:                         ; preds = %lor.lhs.false.fill_inbuf.Clone, %do.body.fill_inbuf.Clone
  br label %do.end.fill_inbuf.Clone

if.end.fill_inbuf.Clone:                          ; preds = %lor.lhs.false.fill_inbuf.Clone
  %68 = load i32, i32* %len.fill_inbuf.Clone, align 4
  %69 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone = add i32 %69, %68
  store i32 %add.fill_inbuf.Clone, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone

do.cond.fill_inbuf.Clone:                         ; preds = %if.end.fill_inbuf.Clone
  %70 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone = icmp ult i32 %70, 32768
  br i1 %cmp3.fill_inbuf.Clone, label %do.body.fill_inbuf.Clone, label %do.end.fill_inbuf.Clone

do.end.fill_inbuf.Clone:                          ; preds = %do.cond.fill_inbuf.Clone, %if.then.fill_inbuf.Clone
  %71 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone = icmp eq i32 %71, 0
  br i1 %cmp4.fill_inbuf.Clone, label %if.then5.fill_inbuf.Clone, label %if.end8.fill_inbuf.Clone

if.then5.fill_inbuf.Clone:                        ; preds = %do.end.fill_inbuf.Clone
  %72 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone, align 4
  %tobool.fill_inbuf.Clone = icmp ne i32 %72, 0
  br i1 %tobool.fill_inbuf.Clone, label %if.then6.fill_inbuf.Clone, label %if.end7.fill_inbuf.Clone

if.then6.fill_inbuf.Clone:                        ; preds = %if.then5.fill_inbuf.Clone
  store i32 -1, i32* %retval.fill_inbuf.Clone, align 4
  br label %return.fill_inbuf.Clone

if.end7.fill_inbuf.Clone:                         ; preds = %if.then5.fill_inbuf.Clone
  br label %entry.read_error.Clone

entry.read_error.Clone:                           ; preds = %if.end7.fill_inbuf.Clone
  %73 = load i8*, i8** @progname, align 4
  %call.read_error.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone, i32 2
  %call1.read_error.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %73)
  %call2.read_error.Clone = call i32* @_errno()
  %74 = load i32, i32* %call2.read_error.Clone, align 4
  %cmp.read_error.Clone = icmp ne i32 %74, 0
  br i1 %cmp.read_error.Clone, label %if.then.read_error.Clone, label %if.else.read_error.Clone

if.then.read_error.Clone:                         ; preds = %entry.read_error.Clone
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone

if.else.read_error.Clone:                         ; preds = %entry.read_error.Clone
  %call3.read_error.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone, i32 2
  %call5.read_error.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone

if.end.read_error.Clone:                          ; preds = %if.else.read_error.Clone, %if.then.read_error.Clone
  br label %entry.abort_gzip.Clone

entry.abort_gzip.Clone:                           ; preds = %if.end.read_error.Clone
  %75 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone = icmp ne i32 %75, 0
  br i1 %tobool.abort_gzip.Clone, label %if.then.abort_gzip.Clone, label %if.end.abort_gzip.Clone

if.then.abort_gzip.Clone:                         ; preds = %entry.abort_gzip.Clone
  %76 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %76)
  %call1.abort_gzip.Clone = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone

if.end.abort_gzip.Clone:                          ; preds = %if.then.abort_gzip.Clone, %entry.abort_gzip.Clone
  br label %entry.do_exit.Clone

entry.do_exit.Clone:                              ; preds = %if.end.abort_gzip.Clone
  %exitcode.addr.do_exit.Clone = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone, align 4
  %77 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone = icmp ne i32 %77, 0
  br i1 %tobool.do_exit.Clone, label %if.then.do_exit.Clone, label %if.end.do_exit.Clone

if.then.do_exit.Clone:                            ; preds = %entry.do_exit.Clone
  %78 = load i32, i32* %exitcode.addr.do_exit.Clone, align 4
  call void @exit(i32 %78) #7
  unreachable

if.end.do_exit.Clone:                             ; preds = %entry.do_exit.Clone
  store i32 1, i32* @do_exit.in_exit, align 4
  %79 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone = icmp ne i8* %79, null
  br i1 %cmp.do_exit.Clone, label %if.then1.do_exit.Clone, label %if.end2.do_exit.Clone

if.then1.do_exit.Clone:                           ; preds = %if.end.do_exit.Clone
  %80 = load i8*, i8** @env, align 4
  call void @free(i8* %80) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone

if.end2.do_exit.Clone:                            ; preds = %if.then1.do_exit.Clone, %if.end.do_exit.Clone
  %81 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone = icmp ne i8** %81, null
  br i1 %cmp3.do_exit.Clone, label %if.then4.do_exit.Clone, label %if.end5.do_exit.Clone

if.then4.do_exit.Clone:                           ; preds = %if.end2.do_exit.Clone
  %82 = load i8**, i8*** @args, align 4
  %83 = bitcast i8** %82 to i8*
  call void @free(i8* %83) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone

if.end5.do_exit.Clone:                            ; preds = %if.then4.do_exit.Clone, %if.end2.do_exit.Clone
  %84 = load i32, i32* %exitcode.addr.do_exit.Clone, align 4
  call void @exit(i32 %84) #7
  unreachable

return.do_exit.Clone:                             ; No predecessors!
  br label %if.end.abort_gzip.Clone.Split

if.end.abort_gzip.Clone.Split:                    ; preds = %return.do_exit.Clone
  br label %if.end.read_error.Clone.Split

if.end.read_error.Clone.Split:                    ; preds = %if.end.abort_gzip.Clone.Split
  br label %if.end7.fill_inbuf.Clone.Split

if.end7.fill_inbuf.Clone.Split:                   ; preds = %if.end.read_error.Clone.Split
  br label %if.end8.fill_inbuf.Clone

if.end8.fill_inbuf.Clone:                         ; preds = %if.end7.fill_inbuf.Clone.Split, %do.end.fill_inbuf.Clone
  %85 = load i32, i32* @insize, align 4
  %86 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone = add i32 %86, %85
  store i32 %add9.fill_inbuf.Clone, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %87 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone = zext i8 %87 to i32
  store i32 %conv.fill_inbuf.Clone, i32* %retval.fill_inbuf.Clone, align 4
  br label %return.fill_inbuf.Clone

return.fill_inbuf.Clone:                          ; preds = %if.end8.fill_inbuf.Clone, %if.then6.fill_inbuf.Clone
  %88 = load i32, i32* %retval.fill_inbuf.Clone, align 4
  store i32 %88, i32* %RetValuePtr
  br label %cond.false44.Clone.Split

cond.false44.Clone.Split:                         ; preds = %return.fill_inbuf.Clone
  %RetValue = load i32, i32* %RetValuePtr
  br label %cond.end46.Clone

while.end63.Clone:                                ; preds = %while.cond32.Clone
  %89 = load i32, i32* %w.Clone, align 4
  store i32 %89, i32* @outcnt, align 4
  %90 = load i32, i32* %b.Clone, align 4
  store i32 %90, i32* @bb, align 4
  %91 = load i32, i32* %k.Clone, align 4
  store i32 %91, i32* @bk, align 4
  store i32 0, i32* %retval.Clone, align 4
  br label %OutFuncRetBB

OutFuncRetBB:                                     ; preds = %while.end63.Clone
  %92 = getelementptr inbounds %Struct.RetValue.11, %Struct.RetValue.11* @Struct.RetValue.13, i32 0, i32 0
  store i32* %n.Clone, i32** %92, align 4
  %93 = getelementptr inbounds %Struct.RetValue.11, %Struct.RetValue.11* @Struct.RetValue.13, i32 0, i32 1
  store i32* %k.Clone, i32** %93, align 4
  %94 = getelementptr inbounds %Struct.RetValue.11, %Struct.RetValue.11* @Struct.RetValue.13, i32 0, i32 2
  store i32* %b.Clone, i32** %94, align 4
  %95 = getelementptr inbounds %Struct.RetValue.11, %Struct.RetValue.11* @Struct.RetValue.13, i32 0, i32 3
  store i32* %w.Clone, i32** %95, align 4
  %96 = getelementptr inbounds %Struct.RetValue.11, %Struct.RetValue.11* @Struct.RetValue.13, i32 0, i32 4
  store i32* %retval.Clone, i32** %96, align 4
  ret void
}

define void @for.cond1.OutLineFunc(i32* %OutFuncArg, [288 x i32]* %OutFuncArg1) {
entry:
  %OutFuncArg.addr = alloca i32*, align 4
  store i32* %OutFuncArg, i32** %OutFuncArg.addr, align 4
  %i.Clone = load i32*, i32** %OutFuncArg.addr, align 4
  %OutFuncArg1.addr = alloca [288 x i32]*, align 4
  store [288 x i32]* %OutFuncArg1, [288 x i32]** %OutFuncArg1.addr, align 4
  %l.Clone = load [288 x i32]*, [288 x i32]** %OutFuncArg1.addr, align 4
  br label %for.cond1.Clone

for.cond1.Clone:                                  ; preds = %entry, %for.inc5.Clone
  %0 = load i32, i32* %i.Clone, align 4
  %cmp2.Clone = icmp slt i32 %0, 256
  br i1 %cmp2.Clone, label %for.body3.Clone, label %for.end7.Clone

for.body3.Clone:                                  ; preds = %for.cond1.Clone
  %1 = load i32, i32* %i.Clone, align 4
  %arrayidx4.Clone = getelementptr inbounds [288 x i32], [288 x i32]* %l.Clone, i32 0, i32 %1
  store i32 9, i32* %arrayidx4.Clone, align 4
  br label %for.inc5.Clone

for.inc5.Clone:                                   ; preds = %for.body3.Clone
  %2 = load i32, i32* %i.Clone, align 4
  %inc6.Clone = add nsw i32 %2, 1
  store i32 %inc6.Clone, i32* %i.Clone, align 4
  br label %for.cond1.Clone

for.end7.Clone:                                   ; preds = %for.cond1.Clone
  br label %OutFuncRetBB

OutFuncRetBB:                                     ; preds = %for.end7.Clone
  %3 = getelementptr inbounds %Struct.RetValue.12, %Struct.RetValue.12* @Struct.RetValue.14, i32 0, i32 0
  store i32* %i.Clone, i32** %3, align 4
  ret void
}

define void @if.then266.OutLineFunc(i32* %OutFuncArg, %struct.huft** %OutFuncArg1, i32* %OutFuncArg2) {
entry:
  %OutFuncArg.addr = alloca i32*, align 4
  store i32* %OutFuncArg, i32** %OutFuncArg.addr, align 4
  %i.Clone = load i32*, i32** %OutFuncArg.addr, align 4
  %OutFuncArg1.addr = alloca %struct.huft**, align 4
  store %struct.huft** %OutFuncArg1, %struct.huft*** %OutFuncArg1.addr, align 4
  %tl.Clone = load %struct.huft**, %struct.huft*** %OutFuncArg1.addr, align 4
  %OutFuncArg2.addr = alloca i32*, align 4
  store i32* %OutFuncArg2, i32** %OutFuncArg2.addr, align 4
  %retval.Clone = load i32*, i32** %OutFuncArg2.addr, align 4
  %RetValuePtr = alloca i32, align 4
  br label %if.then266.Clone

if.then266.Clone:                                 ; preds = %entry
  %0 = load i32, i32* %i.Clone, align 4
  %cmp267.Clone = icmp eq i32 %0, 1
  br i1 %cmp267.Clone, label %if.then269.Clone, label %if.end274.Clone

if.then269.Clone:                                 ; preds = %if.then266.Clone
  %call270.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx271.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call270.Clone, i32 2
  %call272.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx271.Clone, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @"??_C@_0BK@CLKHMJGM@?5incomplete?5literal?5tree?6?$AA@", i32 0, i32 0))
  %1 = load %struct.huft*, %struct.huft** %tl.Clone, align 4
  br label %entry.huft_free.Clone

entry.huft_free.Clone:                            ; preds = %if.then269.Clone
  %t.addr.huft_free.Clone = alloca %struct.huft*, align 4
  %p.huft_free.Clone = alloca %struct.huft*, align 4
  %q.huft_free.Clone = alloca %struct.huft*, align 4
  store %struct.huft* %1, %struct.huft** %t.addr.huft_free.Clone, align 4
  %2 = load %struct.huft*, %struct.huft** %t.addr.huft_free.Clone, align 4
  store %struct.huft* %2, %struct.huft** %p.huft_free.Clone, align 4
  br label %while.cond.huft_free.Clone

while.cond.huft_free.Clone:                       ; preds = %while.body.huft_free.Clone, %entry.huft_free.Clone
  %3 = load %struct.huft*, %struct.huft** %p.huft_free.Clone, align 4
  %cmp.huft_free.Clone = icmp ne %struct.huft* %3, null
  br i1 %cmp.huft_free.Clone, label %while.body.huft_free.Clone, label %while.end.huft_free.Clone

while.body.huft_free.Clone:                       ; preds = %while.cond.huft_free.Clone
  %4 = load %struct.huft*, %struct.huft** %p.huft_free.Clone, align 4
  %incdec.ptr.huft_free.Clone = getelementptr inbounds %struct.huft, %struct.huft* %4, i32 -1
  store %struct.huft* %incdec.ptr.huft_free.Clone, %struct.huft** %p.huft_free.Clone, align 4
  %v.huft_free.Clone = getelementptr inbounds %struct.huft, %struct.huft* %incdec.ptr.huft_free.Clone, i32 0, i32 2
  %t1.huft_free.Clone = bitcast %union.anon* %v.huft_free.Clone to %struct.huft**
  %5 = load %struct.huft*, %struct.huft** %t1.huft_free.Clone, align 4
  store %struct.huft* %5, %struct.huft** %q.huft_free.Clone, align 4
  %6 = load %struct.huft*, %struct.huft** %p.huft_free.Clone, align 4
  %7 = bitcast %struct.huft* %6 to i8*
  call void @free(i8* %7) #2
  %8 = load %struct.huft*, %struct.huft** %q.huft_free.Clone, align 4
  store %struct.huft* %8, %struct.huft** %p.huft_free.Clone, align 4
  br label %while.cond.huft_free.Clone

while.end.huft_free.Clone:                        ; preds = %while.cond.huft_free.Clone
  store i32 0, i32* %RetValuePtr
  br label %if.then269.Clone.Split

if.then269.Clone.Split:                           ; preds = %while.end.huft_free.Clone
  %RetValue = load i32, i32* %RetValuePtr
  br label %if.end274.Clone

if.end274.Clone:                                  ; preds = %if.then269.Clone.Split, %if.then266.Clone
  %9 = load i32, i32* %i.Clone, align 4
  store i32 %9, i32* %retval.Clone, align 4
  br label %OutFuncRetBB

OutFuncRetBB:                                     ; preds = %if.end274.Clone
  %10 = getelementptr inbounds %Struct.RetValue.13, %Struct.RetValue.13* @Struct.RetValue.15, i32 0, i32 0
  store i32* %retval.Clone, i32** %10, align 4
  ret void
}

define void @while.cond4.OutLineFunc(i32* %OutFuncArg, i32* %OutFuncArg1) {
entry:
  %OutFuncArg.addr = alloca i32*, align 4
  store i32* %OutFuncArg, i32** %OutFuncArg.addr, align 4
  %k.Clone = load i32*, i32** %OutFuncArg.addr, align 4
  %OutFuncArg1.addr = alloca i32*, align 4
  store i32* %OutFuncArg1, i32** %OutFuncArg1.addr, align 4
  %b.Clone = load i32*, i32** %OutFuncArg1.addr, align 4
  %RetValuePtr = alloca i32, align 4
  br label %while.cond4.Clone

while.cond4.Clone:                                ; preds = %entry, %cond.end16.Clone
  %0 = load i32, i32* %k.Clone, align 4
  %cmp5.Clone = icmp ult i32 %0, 2
  br i1 %cmp5.Clone, label %while.body7.Clone, label %while.end23.Clone

while.body7.Clone:                                ; preds = %while.cond4.Clone
  %1 = load i32, i32* @inptr, align 4
  %2 = load i32, i32* @insize, align 4
  %cmp8.Clone = icmp ult i32 %1, %2
  br i1 %cmp8.Clone, label %cond.true10.Clone, label %cond.false14.Clone

cond.true10.Clone:                                ; preds = %while.body7.Clone
  %3 = load i32, i32* @inptr, align 4
  %inc11.Clone = add i32 %3, 1
  store i32 %inc11.Clone, i32* @inptr, align 4
  %arrayidx12.Clone = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i32 0, i32 %3
  %4 = load i8, i8* %arrayidx12.Clone, align 1
  %conv13.Clone = zext i8 %4 to i32
  br label %cond.end16.Clone

cond.end16.Clone:                                 ; preds = %cond.false14.Clone.Split, %cond.true10.Clone
  %cond17.Clone = phi i32 [ %conv13.Clone, %cond.true10.Clone ], [ %RetValue, %cond.false14.Clone.Split ]
  %conv18.Clone = trunc i32 %cond17.Clone to i8
  %conv19.Clone = zext i8 %conv18.Clone to i32
  %5 = load i32, i32* %k.Clone, align 4
  %shl20.Clone = shl i32 %conv19.Clone, %5
  %6 = load i32, i32* %b.Clone, align 4
  %or21.Clone = or i32 %6, %shl20.Clone
  store i32 %or21.Clone, i32* %b.Clone, align 4
  %7 = load i32, i32* %k.Clone, align 4
  %add22.Clone = add i32 %7, 8
  store i32 %add22.Clone, i32* %k.Clone, align 4
  br label %while.cond4.Clone

cond.false14.Clone:                               ; preds = %while.body7.Clone
  br label %entry.fill_inbuf.Clone

entry.fill_inbuf.Clone:                           ; preds = %cond.false14.Clone
  %retval.fill_inbuf.Clone = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone = alloca i32, align 4
  %len.fill_inbuf.Clone = alloca i32, align 4
  store i32 0, i32* %eof_ok.addr.fill_inbuf.Clone, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone, align 4
  br label %do.body.fill_inbuf.Clone

do.body.fill_inbuf.Clone:                         ; preds = %do.cond.fill_inbuf.Clone, %entry.fill_inbuf.Clone
  %8 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone = sub i32 32768, %8
  %9 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %9
  %10 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone = call i32 @spec_read(i32 %10, i8* %add.ptr.fill_inbuf.Clone, i32 %sub.fill_inbuf.Clone)
  store i32 %call1.fill_inbuf.Clone, i32* %len.fill_inbuf.Clone, align 4
  %11 = load i32, i32* %len.fill_inbuf.Clone, align 4
  %cmp.fill_inbuf.Clone = icmp eq i32 %11, 0
  br i1 %cmp.fill_inbuf.Clone, label %if.then.fill_inbuf.Clone, label %lor.lhs.false.fill_inbuf.Clone

lor.lhs.false.fill_inbuf.Clone:                   ; preds = %do.body.fill_inbuf.Clone
  %12 = load i32, i32* %len.fill_inbuf.Clone, align 4
  %cmp2.fill_inbuf.Clone = icmp eq i32 %12, -1
  br i1 %cmp2.fill_inbuf.Clone, label %if.then.fill_inbuf.Clone, label %if.end.fill_inbuf.Clone

if.then.fill_inbuf.Clone:                         ; preds = %lor.lhs.false.fill_inbuf.Clone, %do.body.fill_inbuf.Clone
  br label %do.end.fill_inbuf.Clone

if.end.fill_inbuf.Clone:                          ; preds = %lor.lhs.false.fill_inbuf.Clone
  %13 = load i32, i32* %len.fill_inbuf.Clone, align 4
  %14 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone = add i32 %14, %13
  store i32 %add.fill_inbuf.Clone, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone

do.cond.fill_inbuf.Clone:                         ; preds = %if.end.fill_inbuf.Clone
  %15 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone = icmp ult i32 %15, 32768
  br i1 %cmp3.fill_inbuf.Clone, label %do.body.fill_inbuf.Clone, label %do.end.fill_inbuf.Clone

do.end.fill_inbuf.Clone:                          ; preds = %do.cond.fill_inbuf.Clone, %if.then.fill_inbuf.Clone
  %16 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone = icmp eq i32 %16, 0
  br i1 %cmp4.fill_inbuf.Clone, label %if.then5.fill_inbuf.Clone, label %if.end8.fill_inbuf.Clone

if.then5.fill_inbuf.Clone:                        ; preds = %do.end.fill_inbuf.Clone
  %17 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone, align 4
  %tobool.fill_inbuf.Clone = icmp ne i32 %17, 0
  br i1 %tobool.fill_inbuf.Clone, label %if.then6.fill_inbuf.Clone, label %if.end7.fill_inbuf.Clone

if.then6.fill_inbuf.Clone:                        ; preds = %if.then5.fill_inbuf.Clone
  store i32 -1, i32* %retval.fill_inbuf.Clone, align 4
  br label %return.fill_inbuf.Clone

if.end7.fill_inbuf.Clone:                         ; preds = %if.then5.fill_inbuf.Clone
  br label %entry.read_error.Clone

entry.read_error.Clone:                           ; preds = %if.end7.fill_inbuf.Clone
  %18 = load i8*, i8** @progname, align 4
  %call.read_error.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone, i32 2
  %call1.read_error.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %18)
  %call2.read_error.Clone = call i32* @_errno()
  %19 = load i32, i32* %call2.read_error.Clone, align 4
  %cmp.read_error.Clone = icmp ne i32 %19, 0
  br i1 %cmp.read_error.Clone, label %if.then.read_error.Clone, label %if.else.read_error.Clone

if.then.read_error.Clone:                         ; preds = %entry.read_error.Clone
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone

if.else.read_error.Clone:                         ; preds = %entry.read_error.Clone
  %call3.read_error.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone, i32 2
  %call5.read_error.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone

if.end.read_error.Clone:                          ; preds = %if.else.read_error.Clone, %if.then.read_error.Clone
  br label %entry.abort_gzip.Clone

entry.abort_gzip.Clone:                           ; preds = %if.end.read_error.Clone
  %20 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone = icmp ne i32 %20, 0
  br i1 %tobool.abort_gzip.Clone, label %if.then.abort_gzip.Clone, label %if.end.abort_gzip.Clone

if.then.abort_gzip.Clone:                         ; preds = %entry.abort_gzip.Clone
  %21 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %21)
  %call1.abort_gzip.Clone = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone

if.end.abort_gzip.Clone:                          ; preds = %if.then.abort_gzip.Clone, %entry.abort_gzip.Clone
  br label %entry.do_exit.Clone

entry.do_exit.Clone:                              ; preds = %if.end.abort_gzip.Clone
  %exitcode.addr.do_exit.Clone = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone, align 4
  %22 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone = icmp ne i32 %22, 0
  br i1 %tobool.do_exit.Clone, label %if.then.do_exit.Clone, label %if.end.do_exit.Clone

if.then.do_exit.Clone:                            ; preds = %entry.do_exit.Clone
  %23 = load i32, i32* %exitcode.addr.do_exit.Clone, align 4
  call void @exit(i32 %23) #7
  unreachable

if.end.do_exit.Clone:                             ; preds = %entry.do_exit.Clone
  store i32 1, i32* @do_exit.in_exit, align 4
  %24 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone = icmp ne i8* %24, null
  br i1 %cmp.do_exit.Clone, label %if.then1.do_exit.Clone, label %if.end2.do_exit.Clone

if.then1.do_exit.Clone:                           ; preds = %if.end.do_exit.Clone
  %25 = load i8*, i8** @env, align 4
  call void @free(i8* %25) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone

if.end2.do_exit.Clone:                            ; preds = %if.then1.do_exit.Clone, %if.end.do_exit.Clone
  %26 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone = icmp ne i8** %26, null
  br i1 %cmp3.do_exit.Clone, label %if.then4.do_exit.Clone, label %if.end5.do_exit.Clone

if.then4.do_exit.Clone:                           ; preds = %if.end2.do_exit.Clone
  %27 = load i8**, i8*** @args, align 4
  %28 = bitcast i8** %27 to i8*
  call void @free(i8* %28) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone

if.end5.do_exit.Clone:                            ; preds = %if.then4.do_exit.Clone, %if.end2.do_exit.Clone
  %29 = load i32, i32* %exitcode.addr.do_exit.Clone, align 4
  call void @exit(i32 %29) #7
  unreachable

return.do_exit.Clone:                             ; No predecessors!
  br label %if.end.abort_gzip.Clone.Split

if.end.abort_gzip.Clone.Split:                    ; preds = %return.do_exit.Clone
  br label %if.end.read_error.Clone.Split

if.end.read_error.Clone.Split:                    ; preds = %if.end.abort_gzip.Clone.Split
  br label %if.end7.fill_inbuf.Clone.Split

if.end7.fill_inbuf.Clone.Split:                   ; preds = %if.end.read_error.Clone.Split
  br label %if.end8.fill_inbuf.Clone

if.end8.fill_inbuf.Clone:                         ; preds = %if.end7.fill_inbuf.Clone.Split, %do.end.fill_inbuf.Clone
  %30 = load i32, i32* @insize, align 4
  %31 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone = add i32 %31, %30
  store i32 %add9.fill_inbuf.Clone, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %32 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone = zext i8 %32 to i32
  store i32 %conv.fill_inbuf.Clone, i32* %retval.fill_inbuf.Clone, align 4
  br label %return.fill_inbuf.Clone

return.fill_inbuf.Clone:                          ; preds = %if.end8.fill_inbuf.Clone, %if.then6.fill_inbuf.Clone
  %33 = load i32, i32* %retval.fill_inbuf.Clone, align 4
  store i32 %33, i32* %RetValuePtr
  br label %cond.false14.Clone.Split

cond.false14.Clone.Split:                         ; preds = %return.fill_inbuf.Clone
  %RetValue = load i32, i32* %RetValuePtr
  br label %cond.end16.Clone

while.end23.Clone:                                ; preds = %while.cond4.Clone
  br label %OutFuncRetBB

OutFuncRetBB:                                     ; preds = %while.end23.Clone
  %34 = getelementptr inbounds %Struct.RetValue.14, %Struct.RetValue.14* @Struct.RetValue.16, i32 0, i32 0
  store i32* %k.Clone, i32** %34, align 4
  %35 = getelementptr inbounds %Struct.RetValue.14, %Struct.RetValue.14* @Struct.RetValue.16, i32 0, i32 1
  store i32* %b.Clone, i32** %35, align 4
  ret void
}

define void @while.cond.OutLineFunc(i32* %OutFuncArg) {
entry:
  %OutFuncArg.addr = alloca i32*, align 4
  store i32* %OutFuncArg, i32** %OutFuncArg.addr, align 4
  %retval.Clone = load i32*, i32** %OutFuncArg.addr, align 4
  %RetValuePtr = alloca i32, align 4
  %RetValuePtr1 = alloca i32, align 4
  br label %while.cond.Clone

while.cond.Clone:                                 ; preds = %entry, %while.body.Clone
  %0 = load i32, i32* @bk, align 4
  %cmp4.Clone = icmp uge i32 %0, 8
  br i1 %cmp4.Clone, label %while.body.Clone, label %while.end.Clone

while.body.Clone:                                 ; preds = %while.cond.Clone
  %1 = load i32, i32* @bk, align 4
  %sub.Clone = sub i32 %1, 8
  store i32 %sub.Clone, i32* @bk, align 4
  %2 = load i32, i32* @inptr, align 4
  %dec.Clone = add i32 %2, -1
  store i32 %dec.Clone, i32* @inptr, align 4
  br label %while.cond.Clone

while.end.Clone:                                  ; preds = %while.cond.Clone
  %3 = load i32, i32* @outcnt, align 4
  store i32 %3, i32* @outcnt, align 4
  br label %entry.flush_window.Clone

entry.flush_window.Clone:                         ; preds = %while.end.Clone
  %4 = load i32, i32* @outcnt, align 4
  %cmp.flush_window.Clone = icmp eq i32 %4, 0
  br i1 %cmp.flush_window.Clone, label %if.then.flush_window.Clone, label %if.end.flush_window.Clone

if.then.flush_window.Clone:                       ; preds = %entry.flush_window.Clone
  br label %return.flush_window.Clone

if.end.flush_window.Clone:                        ; preds = %entry.flush_window.Clone
  %5 = load i32, i32* @outcnt, align 4
  br label %entry.updcrc.Clone

entry.updcrc.Clone:                               ; preds = %if.end.flush_window.Clone
  %n.addr.updcrc.Clone = alloca i32, align 4
  %s.addr.updcrc.Clone = alloca i8*, align 4
  %c.updcrc.Clone = alloca i32, align 4
  store i32 %5, i32* %n.addr.updcrc.Clone, align 4
  store i8* getelementptr inbounds ([65536 x i8], [65536 x i8]* @window, i32 0, i32 0), i8** %s.addr.updcrc.Clone, align 4
  %6 = load i8*, i8** %s.addr.updcrc.Clone, align 4
  %cmp.updcrc.Clone = icmp eq i8* %6, null
  br i1 %cmp.updcrc.Clone, label %if.then.updcrc.Clone, label %if.else.updcrc.Clone

if.then.updcrc.Clone:                             ; preds = %entry.updcrc.Clone
  store i32 -1, i32* %c.updcrc.Clone, align 4
  br label %if.end4.updcrc.Clone

if.else.updcrc.Clone:                             ; preds = %entry.updcrc.Clone
  %7 = load i32, i32* @updcrc.crc, align 4
  store i32 %7, i32* %c.updcrc.Clone, align 4
  %8 = load i32, i32* %n.addr.updcrc.Clone, align 4
  %tobool.updcrc.Clone = icmp ne i32 %8, 0
  br i1 %tobool.updcrc.Clone, label %if.then1.updcrc.Clone, label %if.end.updcrc.Clone

if.then1.updcrc.Clone:                            ; preds = %if.else.updcrc.Clone
  br label %do.body.updcrc.Clone

do.body.updcrc.Clone:                             ; preds = %do.cond.updcrc.Clone, %if.then1.updcrc.Clone
  %9 = load i32, i32* %c.updcrc.Clone, align 4
  %10 = load i8*, i8** %s.addr.updcrc.Clone, align 4
  %incdec.ptr.updcrc.Clone = getelementptr inbounds i8, i8* %10, i32 1
  store i8* %incdec.ptr.updcrc.Clone, i8** %s.addr.updcrc.Clone, align 4
  %11 = load i8, i8* %10, align 1
  %conv.updcrc.Clone = zext i8 %11 to i32
  %xor.updcrc.Clone = xor i32 %9, %conv.updcrc.Clone
  %and.updcrc.Clone = and i32 %xor.updcrc.Clone, 255
  %arrayidx.updcrc.Clone = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([256 x i32]* @crc_32_tab to [0 x i32]*), i32 0, i32 %and.updcrc.Clone
  %12 = load i32, i32* %arrayidx.updcrc.Clone, align 4
  %13 = load i32, i32* %c.updcrc.Clone, align 4
  %shr.updcrc.Clone = lshr i32 %13, 8
  %xor2.updcrc.Clone = xor i32 %12, %shr.updcrc.Clone
  store i32 %xor2.updcrc.Clone, i32* %c.updcrc.Clone, align 4
  br label %do.cond.updcrc.Clone

do.cond.updcrc.Clone:                             ; preds = %do.body.updcrc.Clone
  %14 = load i32, i32* %n.addr.updcrc.Clone, align 4
  %dec.updcrc.Clone = add i32 %14, -1
  store i32 %dec.updcrc.Clone, i32* %n.addr.updcrc.Clone, align 4
  %tobool3.updcrc.Clone = icmp ne i32 %dec.updcrc.Clone, 0
  br i1 %tobool3.updcrc.Clone, label %do.body.updcrc.Clone, label %do.end.updcrc.Clone

do.end.updcrc.Clone:                              ; preds = %do.cond.updcrc.Clone
  br label %if.end.updcrc.Clone

if.end.updcrc.Clone:                              ; preds = %do.end.updcrc.Clone, %if.else.updcrc.Clone
  br label %if.end4.updcrc.Clone

if.end4.updcrc.Clone:                             ; preds = %if.end.updcrc.Clone, %if.then.updcrc.Clone
  %15 = load i32, i32* %c.updcrc.Clone, align 4
  store i32 %15, i32* @updcrc.crc, align 4
  %16 = load i32, i32* %c.updcrc.Clone, align 4
  %xor5.updcrc.Clone = xor i32 %16, -1
  store i32 %xor5.updcrc.Clone, i32* %RetValuePtr
  br label %if.end.flush_window.Clone.Split

if.end.flush_window.Clone.Split:                  ; preds = %if.end4.updcrc.Clone
  %RetValue = load i32, i32* %RetValuePtr
  %17 = load i32, i32* @test, align 4
  %tobool.flush_window.Clone = icmp ne i32 %17, 0
  br i1 %tobool.flush_window.Clone, label %if.end2.flush_window.Clone, label %if.then1.flush_window.Clone

if.then1.flush_window.Clone:                      ; preds = %if.end.flush_window.Clone.Split
  %18 = load i32, i32* @outcnt, align 4
  %19 = load i32, i32* @ofd, align 4
  br label %entry.write_buf.Clone

entry.write_buf.Clone:                            ; preds = %if.then1.flush_window.Clone
  %cnt.addr.write_buf.Clone = alloca i32, align 4
  %buf.addr.write_buf.Clone = alloca i8*, align 4
  %fd.addr.write_buf.Clone = alloca i32, align 4
  %n.write_buf.Clone = alloca i32, align 4
  store i32 %18, i32* %cnt.addr.write_buf.Clone, align 4
  store i8* getelementptr inbounds ([65536 x i8], [65536 x i8]* @window, i32 0, i32 0), i8** %buf.addr.write_buf.Clone, align 4
  store i32 %19, i32* %fd.addr.write_buf.Clone, align 4
  br label %while.cond.write_buf.Clone

while.cond.write_buf.Clone:                       ; preds = %if.end.write_buf.Clone, %entry.write_buf.Clone
  %20 = load i32, i32* %cnt.addr.write_buf.Clone, align 4
  %21 = load i8*, i8** %buf.addr.write_buf.Clone, align 4
  %22 = load i32, i32* %fd.addr.write_buf.Clone, align 4
  br label %entry.spec_write.Clone

entry.spec_write.Clone:                           ; preds = %while.cond.write_buf.Clone
  %size.addr.spec_write.Clone = alloca i32, align 4
  %buf.addr.spec_write.Clone = alloca i8*, align 4
  %fd.addr.spec_write.Clone = alloca i32, align 4
  store i32 %20, i32* %size.addr.spec_write.Clone, align 4
  store i8* %21, i8** %buf.addr.spec_write.Clone, align 4
  store i32 %22, i32* %fd.addr.spec_write.Clone, align 4
  %23 = load i32, i32* @dbglvl, align 4
  %cmp.spec_write.Clone = icmp slt i32 4, %23
  br i1 %cmp.spec_write.Clone, label %if.then.spec_write.Clone, label %if.end.spec_write.Clone

if.then.spec_write.Clone:                         ; preds = %entry.spec_write.Clone
  %24 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %25 = load i8*, i8** %buf.addr.spec_write.Clone, align 4
  %26 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %call.spec_write.Clone = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @"??_C@_0BK@GKFGHPHN@spec_write?3?5?$CFd?0?5?$CFx?0?5?$CFd?5?$DN?5?$AA@", i32 0, i32 0), i32 %26, i8* %25, i32 %24)
  br label %if.end.spec_write.Clone

if.end.spec_write.Clone:                          ; preds = %if.then.spec_write.Clone, %entry.spec_write.Clone
  %27 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %cmp1.spec_write.Clone = icmp sgt i32 %27, 3
  br i1 %cmp1.spec_write.Clone, label %if.then2.spec_write.Clone, label %if.end5.spec_write.Clone

if.then2.spec_write.Clone:                        ; preds = %if.end.spec_write.Clone
  %28 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %call3.spec_write.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx.spec_write.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.spec_write.Clone, i32 2
  %call4.spec_write.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.spec_write.Clone, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"??_C@_0CD@NANFEFEM@spec_write?3?5fd?$DN?$CFd?0?5?$DO?5MAX_SPEC_FD@", i32 0, i32 0), i32 %28)
  call void @exit(i32 1) #7
  unreachable

if.end5.spec_write.Clone:                         ; preds = %if.end.spec_write.Clone
  %29 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx6.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %29
  %buf7.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx6.spec_write.Clone, i32 0, i32 3
  %30 = load i8*, i8** %buf7.spec_write.Clone, align 4
  %31 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx8.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %31
  %pos.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx8.spec_write.Clone, i32 0, i32 2
  %32 = load i32, i32* %pos.spec_write.Clone, align 4
  %arrayidx9.spec_write.Clone = getelementptr inbounds i8, i8* %30, i32 %32
  %33 = load i8*, i8** %buf.addr.spec_write.Clone, align 4
  %34 = load i32, i32* %size.addr.spec_write.Clone, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %arrayidx9.spec_write.Clone, i8* align 1 %33, i32 %34, i1 false)
  %35 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %36 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx10.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %36
  %len.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx10.spec_write.Clone, i32 0, i32 1
  %37 = load i32, i32* %len.spec_write.Clone, align 4
  %add.spec_write.Clone = add nsw i32 %37, %35
  store i32 %add.spec_write.Clone, i32* %len.spec_write.Clone, align 4
  %38 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %39 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx11.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %39
  %pos12.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx11.spec_write.Clone, i32 0, i32 2
  %40 = load i32, i32* %pos12.spec_write.Clone, align 4
  %add13.spec_write.Clone = add nsw i32 %40, %38
  store i32 %add13.spec_write.Clone, i32* %pos12.spec_write.Clone, align 4
  %41 = load i32, i32* @dbglvl, align 4
  %cmp14.spec_write.Clone = icmp slt i32 4, %41
  br i1 %cmp14.spec_write.Clone, label %if.then15.spec_write.Clone, label %if.end17.spec_write.Clone

if.then15.spec_write.Clone:                       ; preds = %if.end5.spec_write.Clone
  %42 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %call16.spec_write.Clone = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"??_C@_03PMGGPEJJ@?$CFd?6?$AA@", i32 0, i32 0), i32 %42)
  br label %if.end17.spec_write.Clone

if.end17.spec_write.Clone:                        ; preds = %if.then15.spec_write.Clone, %if.end5.spec_write.Clone
  %43 = load i32, i32* %size.addr.spec_write.Clone, align 4
  store i32 %43, i32* %RetValuePtr1
  br label %while.cond.write_buf.Clone.Split

while.cond.write_buf.Clone.Split:                 ; preds = %if.end17.spec_write.Clone
  %RetValue2 = load i32, i32* %RetValuePtr1
  store i32 %RetValue2, i32* %n.write_buf.Clone, align 4
  %44 = load i32, i32* %cnt.addr.write_buf.Clone, align 4
  %cmp.write_buf.Clone = icmp ne i32 %RetValue2, %44
  br i1 %cmp.write_buf.Clone, label %while.body.write_buf.Clone, label %while.end.write_buf.Clone

while.body.write_buf.Clone:                       ; preds = %while.cond.write_buf.Clone.Split
  %45 = load i32, i32* %n.write_buf.Clone, align 4
  %cmp1.write_buf.Clone = icmp eq i32 %45, -1
  br i1 %cmp1.write_buf.Clone, label %if.then.write_buf.Clone, label %if.end.write_buf.Clone

if.then.write_buf.Clone:                          ; preds = %while.body.write_buf.Clone
  call void @write_error()
  br label %if.end.write_buf.Clone

if.end.write_buf.Clone:                           ; preds = %if.then.write_buf.Clone, %while.body.write_buf.Clone
  %46 = load i32, i32* %n.write_buf.Clone, align 4
  %47 = load i32, i32* %cnt.addr.write_buf.Clone, align 4
  %sub.write_buf.Clone = sub i32 %47, %46
  store i32 %sub.write_buf.Clone, i32* %cnt.addr.write_buf.Clone, align 4
  %48 = load i8*, i8** %buf.addr.write_buf.Clone, align 4
  %49 = load i32, i32* %n.write_buf.Clone, align 4
  %add.ptr.write_buf.Clone = getelementptr inbounds i8, i8* %48, i32 %49
  store i8* %add.ptr.write_buf.Clone, i8** %buf.addr.write_buf.Clone, align 4
  br label %while.cond.write_buf.Clone

while.end.write_buf.Clone:                        ; preds = %while.cond.write_buf.Clone.Split
  br label %if.then1.flush_window.Clone.Split

if.then1.flush_window.Clone.Split:                ; preds = %while.end.write_buf.Clone
  br label %if.end2.flush_window.Clone

if.end2.flush_window.Clone:                       ; preds = %if.then1.flush_window.Clone.Split, %if.end.flush_window.Clone.Split
  %50 = load i32, i32* @outcnt, align 4
  %51 = load i32, i32* @bytes_out, align 4
  %add.flush_window.Clone = add i32 %51, %50
  store i32 %add.flush_window.Clone, i32* @bytes_out, align 4
  store i32 0, i32* @outcnt, align 4
  br label %return.flush_window.Clone

return.flush_window.Clone:                        ; preds = %if.end2.flush_window.Clone, %if.then.flush_window.Clone
  br label %while.end.Clone.Split

while.end.Clone.Split:                            ; preds = %return.flush_window.Clone
  store i32 0, i32* %retval.Clone, align 4
  br label %OutFuncRetBB

OutFuncRetBB:                                     ; preds = %while.end.Clone.Split
  %52 = getelementptr inbounds %Struct.RetValue.15, %Struct.RetValue.15* @Struct.RetValue.17, i32 0, i32 0
  store i32* %retval.Clone, i32** %52, align 4
  ret void
}

define void @for.cond14.OutLineFunc(i32* %OutFuncArg, i32* %OutFuncArg1, i32* %OutFuncArg2) {
entry:
  %OutFuncArg.addr = alloca i32*, align 4
  store i32* %OutFuncArg, i32** %OutFuncArg.addr, align 4
  %j.Clone = load i32*, i32** %OutFuncArg.addr, align 4
  %OutFuncArg1.addr = alloca i32*, align 4
  store i32* %OutFuncArg1, i32** %OutFuncArg1.addr, align 4
  %limit.Clone = load i32*, i32** %OutFuncArg1.addr, align 4
  %OutFuncArg2.addr = alloca i32*, align 4
  store i32* %OutFuncArg2, i32** %OutFuncArg2.addr, align 4
  %i.Clone = load i32*, i32** %OutFuncArg2.addr, align 4
  br label %for.cond14.Clone

for.cond14.Clone:                                 ; preds = %entry, %for.inc.Clone
  %0 = load i32, i32* %j.Clone, align 4
  %1 = load i32, i32* %limit.Clone, align 4
  %cmp15.Clone = icmp slt i32 %0, %1
  br i1 %cmp15.Clone, label %for.body16.Clone, label %for.end.Clone

for.body16.Clone:                                 ; preds = %for.cond14.Clone
  %2 = load i32, i32* %i.Clone, align 4
  %arrayidx17.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %2
  %buf18.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx17.Clone, i32 0, i32 3
  %3 = load i8*, i8** %buf18.Clone, align 4
  %4 = load i32, i32* %j.Clone, align 4
  %arrayidx19.Clone = getelementptr inbounds i8, i8* %3, i32 %4
  store i8 0, i8* %arrayidx19.Clone, align 1
  br label %for.inc.Clone

for.inc.Clone:                                    ; preds = %for.body16.Clone
  %5 = load i32, i32* %j.Clone, align 4
  %add20.Clone = add nsw i32 %5, 1024
  store i32 %add20.Clone, i32* %j.Clone, align 4
  br label %for.cond14.Clone

for.end.Clone:                                    ; preds = %for.cond14.Clone
  br label %OutFuncRetBB

OutFuncRetBB:                                     ; preds = %for.end.Clone
  %6 = getelementptr inbounds %Struct.RetValue.16, %Struct.RetValue.16* @Struct.RetValue.18, i32 0, i32 0
  store i32* %j.Clone, i32** %6, align 4
  ret void
}

define void @for.cond.OutLineFunc(i32* %OutFuncArg, i32* %OutFuncArg1, [32 x [131072 x i8]]* %OutFuncArg2) {
entry:
  %OutFuncArg.addr = alloca i32*, align 4
  store i32* %OutFuncArg, i32** %OutFuncArg.addr, align 4
  %i.Clone = load i32*, i32** %OutFuncArg.addr, align 4
  %OutFuncArg1.addr = alloca i32*, align 4
  store i32* %OutFuncArg1, i32** %OutFuncArg1.addr, align 4
  %j.Clone = load i32*, i32** %OutFuncArg1.addr, align 4
  %OutFuncArg2.addr = alloca [32 x [131072 x i8]]*, align 4
  store [32 x [131072 x i8]]* %OutFuncArg2, [32 x [131072 x i8]]** %OutFuncArg2.addr, align 4
  %random_text.Clone = load [32 x [131072 x i8]]*, [32 x [131072 x i8]]** %OutFuncArg2.addr, align 4
  %RetValuePtr = alloca double, align 4
  br label %for.cond.Clone

for.cond.Clone:                                   ; preds = %entry, %for.inc12.Clone
  %0 = load i32, i32* %i.Clone, align 4
  %cmp1.Clone = icmp slt i32 %0, 32
  br i1 %cmp1.Clone, label %for.body.Clone, label %for.end14.Clone

for.body.Clone:                                   ; preds = %for.cond.Clone
  %1 = load i32, i32* @dbglvl, align 4
  %cmp2.Clone = icmp slt i32 5, %1
  br i1 %cmp2.Clone, label %if.then3.Clone, label %if.end5.Clone

if.then3.Clone:                                   ; preds = %for.body.Clone
  %2 = load i32, i32* %i.Clone, align 4
  %call4.Clone = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @"??_C@_0BD@LLLPCEOC@Creating?5Chunk?5?$CFd?6?$AA@", i32 0, i32 0), i32 %2)
  br label %if.end5.Clone

if.end5.Clone:                                    ; preds = %if.then3.Clone, %for.body.Clone
  store i32 0, i32* %j.Clone, align 4
  br label %for.cond6.Clone

for.cond6.Clone:                                  ; preds = %for.inc.Clone, %if.end5.Clone
  %3 = load i32, i32* %j.Clone, align 4
  %cmp7.Clone = icmp slt i32 %3, 131072
  br i1 %cmp7.Clone, label %for.body8.Clone, label %for.end.Clone

for.body8.Clone:                                  ; preds = %for.cond6.Clone
  br label %entry.ran.Clone

entry.ran.Clone:                                  ; preds = %for.body8.Clone
  %lo.ran.Clone = alloca i32, align 4
  %hi.ran.Clone = alloca i32, align 4
  %test.ran.Clone = alloca i32, align 4
  %4 = load i32, i32* @seedi, align 4
  %div.ran.Clone = sdiv i32 %4, 127773
  store i32 %div.ran.Clone, i32* %hi.ran.Clone, align 4
  %5 = load i32, i32* @seedi, align 4
  %rem.ran.Clone = srem i32 %5, 127773
  store i32 %rem.ran.Clone, i32* %lo.ran.Clone, align 4
  %6 = load i32, i32* %lo.ran.Clone, align 4
  %mul.ran.Clone = mul nsw i32 16807, %6
  %7 = load i32, i32* %hi.ran.Clone, align 4
  %mul1.ran.Clone = mul nsw i32 2836, %7
  %sub.ran.Clone = sub nsw i32 %mul.ran.Clone, %mul1.ran.Clone
  store i32 %sub.ran.Clone, i32* %test.ran.Clone, align 4
  %8 = load i32, i32* %test.ran.Clone, align 4
  %cmp.ran.Clone = icmp sgt i32 %8, 0
  br i1 %cmp.ran.Clone, label %if.then.ran.Clone, label %if.else.ran.Clone

if.then.ran.Clone:                                ; preds = %entry.ran.Clone
  %9 = load i32, i32* %test.ran.Clone, align 4
  store i32 %9, i32* @seedi, align 4
  br label %if.end.ran.Clone

if.else.ran.Clone:                                ; preds = %entry.ran.Clone
  %10 = load i32, i32* %test.ran.Clone, align 4
  %add.ran.Clone = add nsw i32 %10, 2147483647
  store i32 %add.ran.Clone, i32* @seedi, align 4
  br label %if.end.ran.Clone

if.end.ran.Clone:                                 ; preds = %if.else.ran.Clone, %if.then.ran.Clone
  %11 = load i32, i32* @seedi, align 4
  %conv.ran.Clone = sitofp i32 %11 to float
  %div2.ran.Clone = fdiv float %conv.ran.Clone, 0x41E0000000000000
  %conv3.ran.Clone = fpext float %div2.ran.Clone to double
  store double %conv3.ran.Clone, double* %RetValuePtr
  br label %for.body8.Clone.Split

for.body8.Clone.Split:                            ; preds = %if.end.ran.Clone
  %RetValue = load double, double* %RetValuePtr
  %mul.Clone = fmul double %RetValue, 2.560000e+02
  %conv.Clone = fptosi double %mul.Clone to i32
  %conv10.Clone = trunc i32 %conv.Clone to i8
  %12 = load i32, i32* %i.Clone, align 4
  %arrayidx.Clone = getelementptr inbounds [32 x [131072 x i8]], [32 x [131072 x i8]]* %random_text.Clone, i32 0, i32 %12
  %13 = load i32, i32* %j.Clone, align 4
  %arrayidx11.Clone = getelementptr inbounds [131072 x i8], [131072 x i8]* %arrayidx.Clone, i32 0, i32 %13
  store i8 %conv10.Clone, i8* %arrayidx11.Clone, align 1
  br label %for.inc.Clone

for.inc.Clone:                                    ; preds = %for.body8.Clone.Split
  %14 = load i32, i32* %j.Clone, align 4
  %inc.Clone = add nsw i32 %14, 1
  store i32 %inc.Clone, i32* %j.Clone, align 4
  br label %for.cond6.Clone

for.end.Clone:                                    ; preds = %for.cond6.Clone
  br label %for.inc12.Clone

for.inc12.Clone:                                  ; preds = %for.end.Clone
  %15 = load i32, i32* %i.Clone, align 4
  %inc13.Clone = add nsw i32 %15, 1
  store i32 %inc13.Clone, i32* %i.Clone, align 4
  br label %for.cond.Clone

for.end14.Clone:                                  ; preds = %for.cond.Clone
  br label %OutFuncRetBB

OutFuncRetBB:                                     ; preds = %for.end14.Clone
  %16 = getelementptr inbounds %Struct.RetValue.17, %Struct.RetValue.17* @Struct.RetValue.19, i32 0, i32 0
  store i32* %i.Clone, i32** %16, align 4
  %17 = getelementptr inbounds %Struct.RetValue.17, %Struct.RetValue.17* @Struct.RetValue.19, i32 0, i32 1
  store i32* %j.Clone, i32** %17, align 4
  ret void
}

define void @if.end36.OutLineFunc(i32* %OutFuncArg, i32* %OutFuncArg1) {
entry:
  %OutFuncArg.addr = alloca i32*, align 4
  store i32* %OutFuncArg, i32** %OutFuncArg.addr, align 4
  %tmp.Clone = load i32*, i32** %OutFuncArg.addr, align 4
  %OutFuncArg1.addr = alloca i32*, align 4
  store i32* %OutFuncArg1, i32** %OutFuncArg1.addr, align 4
  %num.addr.Clone = load i32*, i32** %OutFuncArg1.addr, align 4
  br label %if.end36.Clone

if.end36.Clone:                                   ; preds = %entry
  %0 = load i32, i32* @dbglvl, align 4
  %cmp37.Clone = icmp slt i32 3, %0
  br i1 %cmp37.Clone, label %if.then38.Clone, label %if.end40.Clone

if.then38.Clone:                                  ; preds = %if.end36.Clone
  %1 = load i32, i32* %tmp.Clone, align 4
  %call39.Clone = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @"??_C@_0BG@MFFNAFHA@Duplicating?5?$CFd?5bytes?6?$AA@", i32 0, i32 0), i32 %1)
  br label %if.end40.Clone

if.end40.Clone:                                   ; preds = %if.then38.Clone, %if.end36.Clone
  %2 = load i32, i32* %num.addr.Clone, align 4
  %arrayidx41.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %2
  %buf42.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx41.Clone, i32 0, i32 3
  %3 = load i8*, i8** %buf42.Clone, align 4
  %4 = load i32, i32* %num.addr.Clone, align 4
  %arrayidx43.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %4
  %len44.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx43.Clone, i32 0, i32 1
  %5 = load i32, i32* %len44.Clone, align 4
  %add.ptr45.Clone = getelementptr inbounds i8, i8* %3, i32 %5
  %6 = load i32, i32* %num.addr.Clone, align 4
  %arrayidx46.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %6
  %buf47.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx46.Clone, i32 0, i32 3
  %7 = load i8*, i8** %buf47.Clone, align 4
  %8 = load i32, i32* %tmp.Clone, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %add.ptr45.Clone, i8* align 1 %7, i32 %8, i1 false)
  %9 = load i32, i32* %tmp.Clone, align 4
  %10 = load i32, i32* %num.addr.Clone, align 4
  %arrayidx48.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %10
  %len49.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx48.Clone, i32 0, i32 1
  %11 = load i32, i32* %len49.Clone, align 4
  %add50.Clone = add nsw i32 %11, %9
  store i32 %add50.Clone, i32* %len49.Clone, align 4
  br label %OutFuncRetBB

OutFuncRetBB:                                     ; preds = %if.end40.Clone
  ret void
}

define void @if.end14.OutLineFunc(i32* %OutFuncArg, i32* %OutFuncArg1, i32* %OutFuncArg2) {
entry:
  %OutFuncArg.addr = alloca i32*, align 4
  store i32* %OutFuncArg, i32** %OutFuncArg.addr, align 4
  %fd.addr.Clone = load i32*, i32** %OutFuncArg.addr, align 4
  %OutFuncArg1.addr = alloca i32*, align 4
  store i32* %OutFuncArg1, i32** %OutFuncArg1.addr, align 4
  %size.addr.Clone = load i32*, i32** %OutFuncArg1.addr, align 4
  %OutFuncArg2.addr = alloca i32*, align 4
  store i32* %OutFuncArg2, i32** %OutFuncArg2.addr, align 4
  %rc.Clone = load i32*, i32** %OutFuncArg2.addr, align 4
  br label %if.end14.Clone

if.end14.Clone:                                   ; preds = %entry
  %0 = load i32, i32* %fd.addr.Clone, align 4
  %arrayidx15.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %0
  %pos16.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx15.Clone, i32 0, i32 2
  %1 = load i32, i32* %pos16.Clone, align 4
  %2 = load i32, i32* %size.addr.Clone, align 4
  %add.Clone = add nsw i32 %1, %2
  %3 = load i32, i32* %fd.addr.Clone, align 4
  %arrayidx17.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %3
  %len18.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx17.Clone, i32 0, i32 1
  %4 = load i32, i32* %len18.Clone, align 4
  %cmp19.Clone = icmp sge i32 %add.Clone, %4
  br i1 %cmp19.Clone, label %if.then20.Clone, label %if.else.Clone

if.then20.Clone:                                  ; preds = %if.end14.Clone
  %5 = load i32, i32* %fd.addr.Clone, align 4
  %arrayidx21.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %5
  %len22.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx21.Clone, i32 0, i32 1
  %6 = load i32, i32* %len22.Clone, align 4
  %7 = load i32, i32* %fd.addr.Clone, align 4
  %arrayidx23.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %7
  %pos24.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx23.Clone, i32 0, i32 2
  %8 = load i32, i32* %pos24.Clone, align 4
  %sub.Clone = sub nsw i32 %6, %8
  store i32 %sub.Clone, i32* %rc.Clone, align 4
  br label %if.end25.Clone

if.else.Clone:                                    ; preds = %if.end14.Clone
  %9 = load i32, i32* %size.addr.Clone, align 4
  store i32 %9, i32* %rc.Clone, align 4
  br label %if.end25.Clone

if.end25.Clone:                                   ; preds = %if.else.Clone, %if.then20.Clone
  br label %OutFuncRetBB

OutFuncRetBB:                                     ; preds = %if.end25.Clone
  %10 = getelementptr inbounds %Struct.RetValue.19, %Struct.RetValue.19* @Struct.RetValue.21, i32 0, i32 0
  store i32* %rc.Clone, i32** %10, align 4
  ret void
}

define void @if.end14.OutLineFunc.23(i32* %OutFuncArg, i32* %OutFuncArg1, i32* %OutFuncArg2) {
entry:
  %OutFuncArg.addr = alloca i32*, align 4
  store i32* %OutFuncArg, i32** %OutFuncArg.addr, align 4
  %fd.addr.Clone = load i32*, i32** %OutFuncArg.addr, align 4
  %OutFuncArg1.addr = alloca i32*, align 4
  store i32* %OutFuncArg1, i32** %OutFuncArg1.addr, align 4
  %rc.Clone = load i32*, i32** %OutFuncArg1.addr, align 4
  %OutFuncArg2.addr = alloca i32*, align 4
  store i32* %OutFuncArg2, i32** %OutFuncArg2.addr, align 4
  %retval.Clone = load i32*, i32** %OutFuncArg2.addr, align 4
  br label %if.end14.Clone

if.end14.Clone:                                   ; preds = %entry
  %0 = load i32, i32* %fd.addr.Clone, align 4
  %arrayidx15.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %0
  %buf.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx15.Clone, i32 0, i32 3
  %1 = load i8*, i8** %buf.Clone, align 4
  %2 = load i32, i32* %fd.addr.Clone, align 4
  %arrayidx16.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %2
  %pos17.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx16.Clone, i32 0, i32 2
  %3 = load i32, i32* %pos17.Clone, align 4
  %inc.Clone = add nsw i32 %3, 1
  store i32 %inc.Clone, i32* %pos17.Clone, align 4
  %arrayidx18.Clone = getelementptr inbounds i8, i8* %1, i32 %3
  %4 = load i8, i8* %arrayidx18.Clone, align 1
  %conv.Clone = zext i8 %4 to i32
  store i32 %conv.Clone, i32* %rc.Clone, align 4
  %5 = load i32, i32* @dbglvl, align 4
  %cmp19.Clone = icmp slt i32 4, %5
  br i1 %cmp19.Clone, label %if.then21.Clone, label %if.end23.Clone

if.then21.Clone:                                  ; preds = %if.end14.Clone
  %6 = load i32, i32* %rc.Clone, align 4
  %call22.Clone = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"??_C@_03PMGGPEJJ@?$CFd?6?$AA@", i32 0, i32 0), i32 %6)
  br label %if.end23.Clone

if.end23.Clone:                                   ; preds = %if.then21.Clone, %if.end14.Clone
  %7 = load i32, i32* %rc.Clone, align 4
  store i32 %7, i32* %retval.Clone, align 4
  br label %OutFuncRetBB

OutFuncRetBB:                                     ; preds = %if.end23.Clone
  %8 = getelementptr inbounds %Struct.RetValue.20, %Struct.RetValue.20* @Struct.RetValue.22, i32 0, i32 0
  store i32* %rc.Clone, i32** %8, align 4
  %9 = getelementptr inbounds %Struct.RetValue.20, %Struct.RetValue.20* @Struct.RetValue.22, i32 0, i32 1
  store i32* %retval.Clone, i32** %9, align 4
  ret void
}

define void @for.cond43.OutLineFunc(i32* %OutFuncArg, i32* %OutFuncArg1, i32* %OutFuncArg2) {
entry:
  %OutFuncArg.addr = alloca i32*, align 4
  store i32* %OutFuncArg, i32** %OutFuncArg.addr, align 4
  %n.Clone = load i32*, i32** %OutFuncArg.addr, align 4
  %OutFuncArg1.addr = alloca i32*, align 4
  store i32* %OutFuncArg1, i32** %OutFuncArg1.addr, align 4
  %code.Clone = load i32*, i32** %OutFuncArg1.addr, align 4
  %OutFuncArg2.addr = alloca i32*, align 4
  store i32* %OutFuncArg2, i32** %OutFuncArg2.addr, align 4
  %dist.Clone = load i32*, i32** %OutFuncArg2.addr, align 4
  br label %for.cond43.Clone

for.cond43.Clone:                                 ; preds = %entry, %for.inc53.Clone
  %0 = load i32, i32* %n.Clone, align 4
  %1 = load i32, i32* %code.Clone, align 4
  %arrayidx44.Clone = getelementptr inbounds [30 x i32], [30 x i32]* @extra_dbits, i32 0, i32 %1
  %2 = load i32, i32* %arrayidx44.Clone, align 4
  %sub45.Clone = sub nsw i32 %2, 7
  %shl46.Clone = shl i32 1, %sub45.Clone
  %cmp47.Clone = icmp slt i32 %0, %shl46.Clone
  br i1 %cmp47.Clone, label %for.body49.Clone, label %for.end55.Clone

for.body49.Clone:                                 ; preds = %for.cond43.Clone
  %3 = load i32, i32* %code.Clone, align 4
  %conv50.Clone = trunc i32 %3 to i8
  %4 = load i32, i32* %dist.Clone, align 4
  %inc51.Clone = add nsw i32 %4, 1
  store i32 %inc51.Clone, i32* %dist.Clone, align 4
  %add.Clone = add nsw i32 256, %4
  %arrayidx52.Clone = getelementptr inbounds [512 x i8], [512 x i8]* @dist_code, i32 0, i32 %add.Clone
  store i8 %conv50.Clone, i8* %arrayidx52.Clone, align 1
  br label %for.inc53.Clone

for.inc53.Clone:                                  ; preds = %for.body49.Clone
  %5 = load i32, i32* %n.Clone, align 4
  %inc54.Clone = add nsw i32 %5, 1
  store i32 %inc54.Clone, i32* %n.Clone, align 4
  br label %for.cond43.Clone

for.end55.Clone:                                  ; preds = %for.cond43.Clone
  br label %OutFuncRetBB

OutFuncRetBB:                                     ; preds = %for.end55.Clone
  %6 = getelementptr inbounds %Struct.RetValue.21, %Struct.RetValue.21* @Struct.RetValue.24, i32 0, i32 0
  store i32* %n.Clone, i32** %6, align 4
  %7 = getelementptr inbounds %Struct.RetValue.21, %Struct.RetValue.21* @Struct.RetValue.24, i32 0, i32 1
  store i32* %dist.Clone, i32** %7, align 4
  ret void
}

define void @for.cond.OutLineFunc.26(i32* %OutFuncArg, i16* %OutFuncArg1, [16 x i16]* %OutFuncArg2, i32* %OutFuncArg3) {
entry:
  %OutFuncArg.addr = alloca i32*, align 4
  store i32* %OutFuncArg, i32** %OutFuncArg.addr, align 4
  %bits.Clone = load i32*, i32** %OutFuncArg.addr, align 4
  %OutFuncArg1.addr = alloca i16*, align 4
  store i16* %OutFuncArg1, i16** %OutFuncArg1.addr, align 4
  %code.Clone = load i16*, i16** %OutFuncArg1.addr, align 4
  %OutFuncArg2.addr = alloca [16 x i16]*, align 4
  store [16 x i16]* %OutFuncArg2, [16 x i16]** %OutFuncArg2.addr, align 4
  %next_code.Clone = load [16 x i16]*, [16 x i16]** %OutFuncArg2.addr, align 4
  %OutFuncArg3.addr = alloca i32*, align 4
  store i32* %OutFuncArg3, i32** %OutFuncArg3.addr, align 4
  %n.Clone = load i32*, i32** %OutFuncArg3.addr, align 4
  br label %for.cond.Clone

for.cond.Clone:                                   ; preds = %entry, %for.inc.Clone
  %0 = load i32, i32* %bits.Clone, align 4
  %cmp.Clone = icmp sle i32 %0, 15
  br i1 %cmp.Clone, label %for.body.Clone, label %for.end.Clone

for.body.Clone:                                   ; preds = %for.cond.Clone
  %1 = load i16, i16* %code.Clone, align 2
  %conv.Clone = zext i16 %1 to i32
  %2 = load i32, i32* %bits.Clone, align 4
  %sub.Clone = sub nsw i32 %2, 1
  %arrayidx.Clone = getelementptr inbounds [16 x i16], [16 x i16]* @bl_count, i32 0, i32 %sub.Clone
  %3 = load i16, i16* %arrayidx.Clone, align 2
  %conv1.Clone = zext i16 %3 to i32
  %add.Clone = add nsw i32 %conv.Clone, %conv1.Clone
  %shl.Clone = shl i32 %add.Clone, 1
  %conv2.Clone = trunc i32 %shl.Clone to i16
  store i16 %conv2.Clone, i16* %code.Clone, align 2
  %4 = load i32, i32* %bits.Clone, align 4
  %arrayidx3.Clone = getelementptr inbounds [16 x i16], [16 x i16]* %next_code.Clone, i32 0, i32 %4
  store i16 %conv2.Clone, i16* %arrayidx3.Clone, align 2
  br label %for.inc.Clone

for.inc.Clone:                                    ; preds = %for.body.Clone
  %5 = load i32, i32* %bits.Clone, align 4
  %inc.Clone = add nsw i32 %5, 1
  store i32 %inc.Clone, i32* %bits.Clone, align 4
  br label %for.cond.Clone

for.end.Clone:                                    ; preds = %for.cond.Clone
  store i32 0, i32* %n.Clone, align 4
  br label %OutFuncRetBB

OutFuncRetBB:                                     ; preds = %for.end.Clone
  %6 = getelementptr inbounds %Struct.RetValue.22, %Struct.RetValue.22* @Struct.RetValue.25, i32 0, i32 0
  store i32* %bits.Clone, i32** %6, align 4
  %7 = getelementptr inbounds %Struct.RetValue.22, %Struct.RetValue.22* @Struct.RetValue.25, i32 0, i32 1
  store i16* %code.Clone, i16** %7, align 4
  %8 = getelementptr inbounds %Struct.RetValue.22, %Struct.RetValue.22* @Struct.RetValue.25, i32 0, i32 2
  store i32* %n.Clone, i32** %8, align 4
  ret void
}

define void @for.cond.OutLineFunc.28(i32* %OutFuncArg) {
entry:
  %OutFuncArg.addr = alloca i32*, align 4
  store i32* %OutFuncArg, i32** %OutFuncArg.addr, align 4
  %n.Clone = load i32*, i32** %OutFuncArg.addr, align 4
  br label %for.cond.Clone

for.cond.Clone:                                   ; preds = %entry, %for.inc.Clone
  %0 = load i32, i32* %n.Clone, align 4
  %cmp.Clone = icmp slt i32 %0, 286
  br i1 %cmp.Clone, label %for.body.Clone, label %for.end.Clone

for.body.Clone:                                   ; preds = %for.cond.Clone
  %1 = load i32, i32* %n.Clone, align 4
  %arrayidx.Clone = getelementptr inbounds [573 x %struct.ct_data], [573 x %struct.ct_data]* @dyn_ltree, i32 0, i32 %1
  %fc.Clone = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx.Clone, i32 0, i32 0
  %freq.Clone = bitcast %union.anon.5* %fc.Clone to i16*
  store i16 0, i16* %freq.Clone, align 2
  br label %for.inc.Clone

for.inc.Clone:                                    ; preds = %for.body.Clone
  %2 = load i32, i32* %n.Clone, align 4
  %inc.Clone = add nsw i32 %2, 1
  store i32 %inc.Clone, i32* %n.Clone, align 4
  br label %for.cond.Clone

for.end.Clone:                                    ; preds = %for.cond.Clone
  store i32 0, i32* %n.Clone, align 4
  br label %OutFuncRetBB

OutFuncRetBB:                                     ; preds = %for.end.Clone
  %3 = getelementptr inbounds %Struct.RetValue.23, %Struct.RetValue.23* @Struct.RetValue.27, i32 0, i32 0
  store i32* %n.Clone, i32** %3, align 4
  ret void
}

define void @if.then17.OutLineFunc(i8** %OutFuncArg, i32* %OutFuncArg1) {
entry:
  %OutFuncArg.addr = alloca i8**, align 4
  store i8** %OutFuncArg, i8*** %OutFuncArg.addr, align 4
  %buf.addr.Clone = load i8**, i8*** %OutFuncArg.addr, align 4
  %OutFuncArg1.addr = alloca i32*, align 4
  store i32* %OutFuncArg1, i32** %OutFuncArg1.addr, align 4
  %stored_len.addr.Clone = load i32*, i32** %OutFuncArg1.addr, align 4
  br label %if.then17.Clone

if.then17.Clone:                                  ; preds = %entry
  %0 = load i8*, i8** %buf.addr.Clone, align 4
  %cmp18.Clone = icmp eq i8* %0, null
  br i1 %cmp18.Clone, label %if.then20.Clone, label %if.end21.Clone

if.then20.Clone:                                  ; preds = %if.then17.Clone
  br label %entry.error.Clone

entry.error.Clone:                                ; preds = %if.then20.Clone
  %m.addr.error.Clone = alloca i8*, align 4
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @"??_C@_0P@EKLMCEJK@block?5vanished?$AA@", i32 0, i32 0), i8** %m.addr.error.Clone, align 4
  %1 = load i8*, i8** %m.addr.error.Clone, align 4
  %2 = load i8*, i8** @progname, align 4
  %call.error.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx.error.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.error.Clone, i32 2
  %call1.error.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.error.Clone, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @"??_C@_0N@ODCEBLNH@?6?$CFs?3?5?$CFs?3?5?$CFs?6?$AA@", i32 0, i32 0), i8* %2, i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0), i8* %1)
  br label %entry.abort_gzip.Clone

entry.abort_gzip.Clone:                           ; preds = %entry.error.Clone
  %3 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone = icmp ne i32 %3, 0
  br i1 %tobool.abort_gzip.Clone, label %if.then.abort_gzip.Clone, label %if.end.abort_gzip.Clone

if.then.abort_gzip.Clone:                         ; preds = %entry.abort_gzip.Clone
  %4 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %4)
  %call1.abort_gzip.Clone = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone

if.end.abort_gzip.Clone:                          ; preds = %if.then.abort_gzip.Clone, %entry.abort_gzip.Clone
  br label %entry.do_exit.Clone

entry.do_exit.Clone:                              ; preds = %if.end.abort_gzip.Clone
  %exitcode.addr.do_exit.Clone = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone, align 4
  %5 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone = icmp ne i32 %5, 0
  br i1 %tobool.do_exit.Clone, label %if.then.do_exit.Clone, label %if.end.do_exit.Clone

if.then.do_exit.Clone:                            ; preds = %entry.do_exit.Clone
  %6 = load i32, i32* %exitcode.addr.do_exit.Clone, align 4
  call void @exit(i32 %6) #7
  unreachable

if.end.do_exit.Clone:                             ; preds = %entry.do_exit.Clone
  store i32 1, i32* @do_exit.in_exit, align 4
  %7 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone = icmp ne i8* %7, null
  br i1 %cmp.do_exit.Clone, label %if.then1.do_exit.Clone, label %if.end2.do_exit.Clone

if.then1.do_exit.Clone:                           ; preds = %if.end.do_exit.Clone
  %8 = load i8*, i8** @env, align 4
  call void @free(i8* %8) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone

if.end2.do_exit.Clone:                            ; preds = %if.then1.do_exit.Clone, %if.end.do_exit.Clone
  %9 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone = icmp ne i8** %9, null
  br i1 %cmp3.do_exit.Clone, label %if.then4.do_exit.Clone, label %if.end5.do_exit.Clone

if.then4.do_exit.Clone:                           ; preds = %if.end2.do_exit.Clone
  %10 = load i8**, i8*** @args, align 4
  %11 = bitcast i8** %10 to i8*
  call void @free(i8* %11) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone

if.end5.do_exit.Clone:                            ; preds = %if.then4.do_exit.Clone, %if.end2.do_exit.Clone
  %12 = load i32, i32* %exitcode.addr.do_exit.Clone, align 4
  call void @exit(i32 %12) #7
  unreachable

return.do_exit.Clone:                             ; No predecessors!
  br label %if.end.abort_gzip.Clone.Split

if.end.abort_gzip.Clone.Split:                    ; preds = %return.do_exit.Clone
  br label %entry.error.Clone.Split

entry.error.Clone.Split:                          ; preds = %if.end.abort_gzip.Clone.Split
  br label %if.then20.Clone.Split

if.then20.Clone.Split:                            ; preds = %entry.error.Clone.Split
  br label %if.end21.Clone

if.end21.Clone:                                   ; preds = %if.then20.Clone.Split, %if.then17.Clone
  %13 = load i32, i32* %stored_len.addr.Clone, align 4
  %14 = load i8*, i8** %buf.addr.Clone, align 4
  call void @copy_block(i8* %14, i32 %13, i32 0)
  %15 = load i32, i32* %stored_len.addr.Clone, align 4
  %shl.Clone = shl i32 %15, 3
  store i32 %shl.Clone, i32* @compressed_len, align 4
  %16 = load i32*, i32** @file_method, align 4
  store i32 0, i32* %16, align 4
  br label %OutFuncRetBB

OutFuncRetBB:                                     ; preds = %if.end21.Clone
  ret void
}

define void @while.cond12.OutLineFunc(i32* %OutFuncArg, i32* %OutFuncArg1) {
entry:
  %OutFuncArg.addr = alloca i32*, align 4
  store i32* %OutFuncArg, i32** %OutFuncArg.addr, align 4
  %n.Clone = load i32*, i32** %OutFuncArg.addr, align 4
  %OutFuncArg1.addr = alloca i32*, align 4
  store i32* %OutFuncArg1, i32** %OutFuncArg1.addr, align 4
  %bin_freq.Clone = load i32*, i32** %OutFuncArg1.addr, align 4
  br label %while.cond12.Clone

while.cond12.Clone:                               ; preds = %entry, %while.body15.Clone
  %0 = load i32, i32* %n.Clone, align 4
  %cmp13.Clone = icmp slt i32 %0, 256
  br i1 %cmp13.Clone, label %while.body15.Clone, label %while.end22.Clone

while.body15.Clone:                               ; preds = %while.cond12.Clone
  %1 = load i32, i32* %n.Clone, align 4
  %inc16.Clone = add nsw i32 %1, 1
  store i32 %inc16.Clone, i32* %n.Clone, align 4
  %arrayidx17.Clone = getelementptr inbounds [573 x %struct.ct_data], [573 x %struct.ct_data]* @dyn_ltree, i32 0, i32 %1
  %fc18.Clone = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx17.Clone, i32 0, i32 0
  %freq19.Clone = bitcast %union.anon.5* %fc18.Clone to i16*
  %2 = load i16, i16* %freq19.Clone, align 2
  %conv20.Clone = zext i16 %2 to i32
  %3 = load i32, i32* %bin_freq.Clone, align 4
  %add21.Clone = add i32 %3, %conv20.Clone
  store i32 %add21.Clone, i32* %bin_freq.Clone, align 4
  br label %while.cond12.Clone

while.end22.Clone:                                ; preds = %while.cond12.Clone
  br label %OutFuncRetBB

OutFuncRetBB:                                     ; preds = %while.end22.Clone
  %4 = getelementptr inbounds %Struct.RetValue.25, %Struct.RetValue.25* @Struct.RetValue.30, i32 0, i32 0
  store i32* %n.Clone, i32** %4, align 4
  %5 = getelementptr inbounds %Struct.RetValue.25, %Struct.RetValue.25* @Struct.RetValue.30, i32 0, i32 1
  store i32* %bin_freq.Clone, i32** %5, align 4
  ret void
}

define void @while.cond.OutLineFunc.32(i32* %OutFuncArg, i32* %OutFuncArg1, %struct.ct_data** %OutFuncArg2, %struct.ct_data** %OutFuncArg3, %struct.tree_desc** %OutFuncArg4, i32* %OutFuncArg5) {
entry:
  %OutFuncArg.addr = alloca i32*, align 4
  store i32* %OutFuncArg, i32** %OutFuncArg.addr, align 4
  %max_code.Clone = load i32*, i32** %OutFuncArg.addr, align 4
  %OutFuncArg1.addr = alloca i32*, align 4
  store i32* %OutFuncArg1, i32** %OutFuncArg1.addr, align 4
  %new.Clone = load i32*, i32** %OutFuncArg1.addr, align 4
  %OutFuncArg2.addr = alloca %struct.ct_data**, align 4
  store %struct.ct_data** %OutFuncArg2, %struct.ct_data*** %OutFuncArg2.addr, align 4
  %tree.Clone = load %struct.ct_data**, %struct.ct_data*** %OutFuncArg2.addr, align 4
  %OutFuncArg3.addr = alloca %struct.ct_data**, align 4
  store %struct.ct_data** %OutFuncArg3, %struct.ct_data*** %OutFuncArg3.addr, align 4
  %stree.Clone = load %struct.ct_data**, %struct.ct_data*** %OutFuncArg3.addr, align 4
  %OutFuncArg4.addr = alloca %struct.tree_desc**, align 4
  store %struct.tree_desc** %OutFuncArg4, %struct.tree_desc*** %OutFuncArg4.addr, align 4
  %desc.addr.Clone = load %struct.tree_desc**, %struct.tree_desc*** %OutFuncArg4.addr, align 4
  %OutFuncArg5.addr = alloca i32*, align 4
  store i32* %OutFuncArg5, i32** %OutFuncArg5.addr, align 4
  %n.Clone = load i32*, i32** %OutFuncArg5.addr, align 4
  br label %while.cond.Clone

while.cond.Clone:                                 ; preds = %entry, %if.end24.Clone
  %0 = load i32, i32* @heap_len, align 4
  %cmp8.Clone = icmp slt i32 %0, 2
  br i1 %cmp8.Clone, label %while.body.Clone, label %while.end.Clone

while.body.Clone:                                 ; preds = %while.cond.Clone
  %1 = load i32, i32* %max_code.Clone, align 4
  %cmp10.Clone = icmp slt i32 %1, 2
  br i1 %cmp10.Clone, label %cond.true.Clone, label %cond.false.Clone

cond.true.Clone:                                  ; preds = %while.body.Clone
  %2 = load i32, i32* %max_code.Clone, align 4
  %inc12.Clone = add nsw i32 %2, 1
  store i32 %inc12.Clone, i32* %max_code.Clone, align 4
  br label %cond.end.Clone

cond.end.Clone:                                   ; preds = %cond.false.Clone, %cond.true.Clone
  %cond.Clone = phi i32 [ %inc12.Clone, %cond.true.Clone ], [ 0, %cond.false.Clone ]
  %3 = load i32, i32* @heap_len, align 4
  %inc13.Clone = add nsw i32 %3, 1
  store i32 %inc13.Clone, i32* @heap_len, align 4
  %arrayidx14.Clone = getelementptr inbounds [573 x i32], [573 x i32]* @heap, i32 0, i32 %inc13.Clone
  store i32 %cond.Clone, i32* %arrayidx14.Clone, align 4
  store i32 %cond.Clone, i32* %new.Clone, align 4
  %4 = load %struct.ct_data*, %struct.ct_data** %tree.Clone, align 4
  %5 = load i32, i32* %new.Clone, align 4
  %arrayidx15.Clone = getelementptr inbounds %struct.ct_data, %struct.ct_data* %4, i32 %5
  %fc16.Clone = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx15.Clone, i32 0, i32 0
  %freq17.Clone = bitcast %union.anon.5* %fc16.Clone to i16*
  store i16 1, i16* %freq17.Clone, align 2
  %6 = load i32, i32* %new.Clone, align 4
  %arrayidx18.Clone = getelementptr inbounds [573 x i8], [573 x i8]* @depth, i32 0, i32 %6
  store i8 0, i8* %arrayidx18.Clone, align 1
  %7 = load i32, i32* @opt_len, align 4
  %dec.Clone = add i32 %7, -1
  store i32 %dec.Clone, i32* @opt_len, align 4
  %8 = load %struct.ct_data*, %struct.ct_data** %stree.Clone, align 4
  %tobool.Clone = icmp ne %struct.ct_data* %8, null
  br i1 %tobool.Clone, label %if.then19.Clone, label %if.end24.Clone

if.then19.Clone:                                  ; preds = %cond.end.Clone
  %9 = load %struct.ct_data*, %struct.ct_data** %stree.Clone, align 4
  %10 = load i32, i32* %new.Clone, align 4
  %arrayidx20.Clone = getelementptr inbounds %struct.ct_data, %struct.ct_data* %9, i32 %10
  %dl21.Clone = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx20.Clone, i32 0, i32 1
  %len22.Clone = bitcast %union.anon.5* %dl21.Clone to i16*
  %11 = load i16, i16* %len22.Clone, align 2
  %conv23.Clone = zext i16 %11 to i32
  %12 = load i32, i32* @static_len, align 4
  %sub.Clone = sub i32 %12, %conv23.Clone
  store i32 %sub.Clone, i32* @static_len, align 4
  br label %if.end24.Clone

if.end24.Clone:                                   ; preds = %if.then19.Clone, %cond.end.Clone
  br label %while.cond.Clone

cond.false.Clone:                                 ; preds = %while.body.Clone
  br label %cond.end.Clone

while.end.Clone:                                  ; preds = %while.cond.Clone
  %13 = load i32, i32* %max_code.Clone, align 4
  %14 = load %struct.tree_desc*, %struct.tree_desc** %desc.addr.Clone, align 4
  %max_code25.Clone = getelementptr inbounds %struct.tree_desc, %struct.tree_desc* %14, i32 0, i32 6
  store i32 %13, i32* %max_code25.Clone, align 4
  %15 = load i32, i32* @heap_len, align 4
  %div.Clone = sdiv i32 %15, 2
  store i32 %div.Clone, i32* %n.Clone, align 4
  br label %OutFuncRetBB

OutFuncRetBB:                                     ; preds = %while.end.Clone
  %16 = getelementptr inbounds %Struct.RetValue.26, %Struct.RetValue.26* @Struct.RetValue.31, i32 0, i32 0
  store i32* %max_code.Clone, i32** %16, align 4
  %17 = getelementptr inbounds %Struct.RetValue.26, %Struct.RetValue.26* @Struct.RetValue.31, i32 0, i32 1
  store i32* %new.Clone, i32** %17, align 4
  %18 = getelementptr inbounds %Struct.RetValue.26, %Struct.RetValue.26* @Struct.RetValue.31, i32 0, i32 2
  store i32* %n.Clone, i32** %18, align 4
  ret void
}

define void @if.else.OutLineFunc.34(i32* %OutFuncArg, i32* %OutFuncArg1, %struct.ct_data** %OutFuncArg2, i32* %OutFuncArg3) {
entry:
  %OutFuncArg.addr = alloca i32*, align 4
  store i32* %OutFuncArg, i32** %OutFuncArg.addr, align 4
  %lc.Clone = load i32*, i32** %OutFuncArg.addr, align 4
  %OutFuncArg1.addr = alloca i32*, align 4
  store i32* %OutFuncArg1, i32** %OutFuncArg1.addr, align 4
  %code.Clone = load i32*, i32** %OutFuncArg1.addr, align 4
  %OutFuncArg2.addr = alloca %struct.ct_data**, align 4
  store %struct.ct_data** %OutFuncArg2, %struct.ct_data*** %OutFuncArg2.addr, align 4
  %ltree.addr.Clone = load %struct.ct_data**, %struct.ct_data*** %OutFuncArg2.addr, align 4
  %OutFuncArg3.addr = alloca i32*, align 4
  store i32* %OutFuncArg3, i32** %OutFuncArg3.addr, align 4
  %extra.Clone = load i32*, i32** %OutFuncArg3.addr, align 4
  br label %if.else.Clone

if.else.Clone:                                    ; preds = %entry
  %0 = load i32, i32* %lc.Clone, align 4
  %arrayidx15.Clone = getelementptr inbounds [256 x i8], [256 x i8]* @length_code, i32 0, i32 %0
  %1 = load i8, i8* %arrayidx15.Clone, align 1
  %conv16.Clone = zext i8 %1 to i32
  store i32 %conv16.Clone, i32* %code.Clone, align 4
  %2 = load %struct.ct_data*, %struct.ct_data** %ltree.addr.Clone, align 4
  %3 = load i32, i32* %code.Clone, align 4
  %add.Clone = add i32 %3, 256
  %add17.Clone = add i32 %add.Clone, 1
  %arrayidx18.Clone = getelementptr inbounds %struct.ct_data, %struct.ct_data* %2, i32 %add17.Clone
  %dl19.Clone = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx18.Clone, i32 0, i32 1
  %len20.Clone = bitcast %union.anon.5* %dl19.Clone to i16*
  %4 = load i16, i16* %len20.Clone, align 2
  %conv21.Clone = zext i16 %4 to i32
  %5 = load %struct.ct_data*, %struct.ct_data** %ltree.addr.Clone, align 4
  %6 = load i32, i32* %code.Clone, align 4
  %add22.Clone = add i32 %6, 256
  %add23.Clone = add i32 %add22.Clone, 1
  %arrayidx24.Clone = getelementptr inbounds %struct.ct_data, %struct.ct_data* %5, i32 %add23.Clone
  %fc25.Clone = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx24.Clone, i32 0, i32 0
  %code26.Clone = bitcast %union.anon.5* %fc25.Clone to i16*
  %7 = load i16, i16* %code26.Clone, align 2
  %conv27.Clone = zext i16 %7 to i32
  call void @send_bits(i32 %conv27.Clone, i32 %conv21.Clone)
  %8 = load i32, i32* %code.Clone, align 4
  %arrayidx28.Clone = getelementptr inbounds [29 x i32], [29 x i32]* @extra_lbits, i32 0, i32 %8
  %9 = load i32, i32* %arrayidx28.Clone, align 4
  store i32 %9, i32* %extra.Clone, align 4
  %10 = load i32, i32* %extra.Clone, align 4
  %cmp29.Clone = icmp ne i32 %10, 0
  br i1 %cmp29.Clone, label %if.then31.Clone, label %if.end33.Clone

if.then31.Clone:                                  ; preds = %if.else.Clone
  %11 = load i32, i32* %code.Clone, align 4
  %arrayidx32.Clone = getelementptr inbounds [29 x i32], [29 x i32]* @base_length, i32 0, i32 %11
  %12 = load i32, i32* %arrayidx32.Clone, align 4
  %13 = load i32, i32* %lc.Clone, align 4
  %sub.Clone = sub nsw i32 %13, %12
  store i32 %sub.Clone, i32* %lc.Clone, align 4
  %14 = load i32, i32* %extra.Clone, align 4
  %15 = load i32, i32* %lc.Clone, align 4
  call void @send_bits(i32 %15, i32 %14)
  br label %if.end33.Clone

if.end33.Clone:                                   ; preds = %if.then31.Clone, %if.else.Clone
  br label %OutFuncRetBB

OutFuncRetBB:                                     ; preds = %if.end33.Clone
  %16 = getelementptr inbounds %Struct.RetValue.27, %Struct.RetValue.27* @Struct.RetValue.33, i32 0, i32 0
  store i32* %lc.Clone, i32** %16, align 4
  %17 = getelementptr inbounds %Struct.RetValue.27, %Struct.RetValue.27* @Struct.RetValue.33, i32 0, i32 1
  store i32* %code.Clone, i32** %17, align 4
  %18 = getelementptr inbounds %Struct.RetValue.27, %Struct.RetValue.27* @Struct.RetValue.33, i32 0, i32 2
  store i32* %extra.Clone, i32** %18, align 4
  ret void
}

define void @if.then27.OutLineFunc(i32* %OutFuncArg, i32* %OutFuncArg1, i32* %OutFuncArg2) {
entry:
  %OutFuncArg.addr = alloca i32*, align 4
  store i32* %OutFuncArg, i32** %OutFuncArg.addr, align 4
  %curlen.Clone = load i32*, i32** %OutFuncArg.addr, align 4
  %OutFuncArg1.addr = alloca i32*, align 4
  store i32* %OutFuncArg1, i32** %OutFuncArg1.addr, align 4
  %prevlen.Clone = load i32*, i32** %OutFuncArg1.addr, align 4
  %OutFuncArg2.addr = alloca i32*, align 4
  store i32* %OutFuncArg2, i32** %OutFuncArg2.addr, align 4
  %count.Clone = load i32*, i32** %OutFuncArg2.addr, align 4
  br label %if.then27.Clone

if.then27.Clone:                                  ; preds = %entry
  %0 = load i32, i32* %curlen.Clone, align 4
  %1 = load i32, i32* %prevlen.Clone, align 4
  %cmp28.Clone = icmp ne i32 %0, %1
  br i1 %cmp28.Clone, label %if.then30.Clone, label %if.end40.Clone

if.then30.Clone:                                  ; preds = %if.then27.Clone
  %2 = load i32, i32* %curlen.Clone, align 4
  %arrayidx31.Clone = getelementptr inbounds [39 x %struct.ct_data], [39 x %struct.ct_data]* @bl_tree, i32 0, i32 %2
  %dl32.Clone = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx31.Clone, i32 0, i32 1
  %len33.Clone = bitcast %union.anon.5* %dl32.Clone to i16*
  %3 = load i16, i16* %len33.Clone, align 2
  %conv34.Clone = zext i16 %3 to i32
  %4 = load i32, i32* %curlen.Clone, align 4
  %arrayidx35.Clone = getelementptr inbounds [39 x %struct.ct_data], [39 x %struct.ct_data]* @bl_tree, i32 0, i32 %4
  %fc36.Clone = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx35.Clone, i32 0, i32 0
  %code37.Clone = bitcast %union.anon.5* %fc36.Clone to i16*
  %5 = load i16, i16* %code37.Clone, align 2
  %conv38.Clone = zext i16 %5 to i32
  call void @send_bits(i32 %conv38.Clone, i32 %conv34.Clone)
  %6 = load i32, i32* %count.Clone, align 4
  %dec39.Clone = add nsw i32 %6, -1
  store i32 %dec39.Clone, i32* %count.Clone, align 4
  br label %if.end40.Clone

if.end40.Clone:                                   ; preds = %if.then30.Clone, %if.then27.Clone
  %7 = load i16, i16* getelementptr inbounds ([39 x %struct.ct_data], [39 x %struct.ct_data]* @bl_tree, i32 0, i32 16, i32 1, i32 0), align 2
  %conv41.Clone = zext i16 %7 to i32
  %8 = load i16, i16* getelementptr inbounds ([39 x %struct.ct_data], [39 x %struct.ct_data]* @bl_tree, i32 0, i32 16, i32 0, i32 0), align 2
  %conv42.Clone = zext i16 %8 to i32
  call void @send_bits(i32 %conv42.Clone, i32 %conv41.Clone)
  %9 = load i32, i32* %count.Clone, align 4
  %sub.Clone = sub nsw i32 %9, 3
  call void @send_bits(i32 %sub.Clone, i32 2)
  br label %OutFuncRetBB

OutFuncRetBB:                                     ; preds = %if.end40.Clone
  %10 = getelementptr inbounds %Struct.RetValue.28, %Struct.RetValue.28* @Struct.RetValue.35, i32 0, i32 0
  store i32* %count.Clone, i32** %10, align 4
  ret void
}

define void @if.then27.OutLineFunc.37(i32* %OutFuncArg, i32* %OutFuncArg1) {
entry:
  %OutFuncArg.addr = alloca i32*, align 4
  store i32* %OutFuncArg, i32** %OutFuncArg.addr, align 4
  %curlen.Clone = load i32*, i32** %OutFuncArg.addr, align 4
  %OutFuncArg1.addr = alloca i32*, align 4
  store i32* %OutFuncArg1, i32** %OutFuncArg1.addr, align 4
  %prevlen.Clone = load i32*, i32** %OutFuncArg1.addr, align 4
  br label %if.then27.Clone

if.then27.Clone:                                  ; preds = %entry
  %0 = load i32, i32* %curlen.Clone, align 4
  %1 = load i32, i32* %prevlen.Clone, align 4
  %cmp28.Clone = icmp ne i32 %0, %1
  br i1 %cmp28.Clone, label %if.then30.Clone, label %if.end35.Clone

if.then30.Clone:                                  ; preds = %if.then27.Clone
  %2 = load i32, i32* %curlen.Clone, align 4
  %arrayidx31.Clone = getelementptr inbounds [39 x %struct.ct_data], [39 x %struct.ct_data]* @bl_tree, i32 0, i32 %2
  %fc32.Clone = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx31.Clone, i32 0, i32 0
  %freq33.Clone = bitcast %union.anon.5* %fc32.Clone to i16*
  %3 = load i16, i16* %freq33.Clone, align 2
  %inc34.Clone = add i16 %3, 1
  store i16 %inc34.Clone, i16* %freq33.Clone, align 2
  br label %if.end35.Clone

if.end35.Clone:                                   ; preds = %if.then30.Clone, %if.then27.Clone
  %4 = load i16, i16* getelementptr inbounds ([39 x %struct.ct_data], [39 x %struct.ct_data]* @bl_tree, i32 0, i32 16, i32 0, i32 0), align 2
  %inc36.Clone = add i16 %4, 1
  store i16 %inc36.Clone, i16* getelementptr inbounds ([39 x %struct.ct_data], [39 x %struct.ct_data]* @bl_tree, i32 0, i32 16, i32 0, i32 0), align 2
  br label %OutFuncRetBB

OutFuncRetBB:                                     ; preds = %if.end35.Clone
  ret void
}

define void @while.body.OutLineFunc.39(i32* %OutFuncArg, %struct.ct_data** %OutFuncArg1) {
entry:
  %OutFuncArg.addr = alloca i32*, align 4
  store i32* %OutFuncArg, i32** %OutFuncArg.addr, align 4
  %j.Clone = load i32*, i32** %OutFuncArg.addr, align 4
  %OutFuncArg1.addr = alloca %struct.ct_data**, align 4
  store %struct.ct_data** %OutFuncArg1, %struct.ct_data*** %OutFuncArg1.addr, align 4
  %tree.addr.Clone = load %struct.ct_data**, %struct.ct_data*** %OutFuncArg1.addr, align 4
  br label %while.body.Clone

while.body.Clone:                                 ; preds = %entry
  %0 = load i32, i32* %j.Clone, align 4
  %1 = load i32, i32* @heap_len, align 4
  %cmp1.Clone = icmp slt i32 %0, %1
  br i1 %cmp1.Clone, label %land.lhs.true.Clone, label %if.end.Clone

land.lhs.true.Clone:                              ; preds = %while.body.Clone
  %2 = load %struct.ct_data*, %struct.ct_data** %tree.addr.Clone, align 4
  %3 = load i32, i32* %j.Clone, align 4
  %add.Clone = add nsw i32 %3, 1
  %arrayidx2.Clone = getelementptr inbounds [573 x i32], [573 x i32]* @heap, i32 0, i32 %add.Clone
  %4 = load i32, i32* %arrayidx2.Clone, align 4
  %arrayidx3.Clone = getelementptr inbounds %struct.ct_data, %struct.ct_data* %2, i32 %4
  %fc.Clone = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx3.Clone, i32 0, i32 0
  %freq.Clone = bitcast %union.anon.5* %fc.Clone to i16*
  %5 = load i16, i16* %freq.Clone, align 2
  %conv.Clone = zext i16 %5 to i32
  %6 = load %struct.ct_data*, %struct.ct_data** %tree.addr.Clone, align 4
  %7 = load i32, i32* %j.Clone, align 4
  %arrayidx4.Clone = getelementptr inbounds [573 x i32], [573 x i32]* @heap, i32 0, i32 %7
  %8 = load i32, i32* %arrayidx4.Clone, align 4
  %arrayidx5.Clone = getelementptr inbounds %struct.ct_data, %struct.ct_data* %6, i32 %8
  %fc6.Clone = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx5.Clone, i32 0, i32 0
  %freq7.Clone = bitcast %union.anon.5* %fc6.Clone to i16*
  %9 = load i16, i16* %freq7.Clone, align 2
  %conv8.Clone = zext i16 %9 to i32
  %cmp9.Clone = icmp slt i32 %conv.Clone, %conv8.Clone
  br i1 %cmp9.Clone, label %if.then.Clone, label %lor.lhs.false.Clone

lor.lhs.false.Clone:                              ; preds = %land.lhs.true.Clone
  %10 = load %struct.ct_data*, %struct.ct_data** %tree.addr.Clone, align 4
  %11 = load i32, i32* %j.Clone, align 4
  %add11.Clone = add nsw i32 %11, 1
  %arrayidx12.Clone = getelementptr inbounds [573 x i32], [573 x i32]* @heap, i32 0, i32 %add11.Clone
  %12 = load i32, i32* %arrayidx12.Clone, align 4
  %arrayidx13.Clone = getelementptr inbounds %struct.ct_data, %struct.ct_data* %10, i32 %12
  %fc14.Clone = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx13.Clone, i32 0, i32 0
  %freq15.Clone = bitcast %union.anon.5* %fc14.Clone to i16*
  %13 = load i16, i16* %freq15.Clone, align 2
  %conv16.Clone = zext i16 %13 to i32
  %14 = load %struct.ct_data*, %struct.ct_data** %tree.addr.Clone, align 4
  %15 = load i32, i32* %j.Clone, align 4
  %arrayidx17.Clone = getelementptr inbounds [573 x i32], [573 x i32]* @heap, i32 0, i32 %15
  %16 = load i32, i32* %arrayidx17.Clone, align 4
  %arrayidx18.Clone = getelementptr inbounds %struct.ct_data, %struct.ct_data* %14, i32 %16
  %fc19.Clone = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx18.Clone, i32 0, i32 0
  %freq20.Clone = bitcast %union.anon.5* %fc19.Clone to i16*
  %17 = load i16, i16* %freq20.Clone, align 2
  %conv21.Clone = zext i16 %17 to i32
  %cmp22.Clone = icmp eq i32 %conv16.Clone, %conv21.Clone
  br i1 %cmp22.Clone, label %land.lhs.true24.Clone, label %if.end.Clone

land.lhs.true24.Clone:                            ; preds = %lor.lhs.false.Clone
  %18 = load i32, i32* %j.Clone, align 4
  %add25.Clone = add nsw i32 %18, 1
  %arrayidx26.Clone = getelementptr inbounds [573 x i32], [573 x i32]* @heap, i32 0, i32 %add25.Clone
  %19 = load i32, i32* %arrayidx26.Clone, align 4
  %arrayidx27.Clone = getelementptr inbounds [573 x i8], [573 x i8]* @depth, i32 0, i32 %19
  %20 = load i8, i8* %arrayidx27.Clone, align 1
  %conv28.Clone = zext i8 %20 to i32
  %21 = load i32, i32* %j.Clone, align 4
  %arrayidx29.Clone = getelementptr inbounds [573 x i32], [573 x i32]* @heap, i32 0, i32 %21
  %22 = load i32, i32* %arrayidx29.Clone, align 4
  %arrayidx30.Clone = getelementptr inbounds [573 x i8], [573 x i8]* @depth, i32 0, i32 %22
  %23 = load i8, i8* %arrayidx30.Clone, align 1
  %conv31.Clone = zext i8 %23 to i32
  %cmp32.Clone = icmp sle i32 %conv28.Clone, %conv31.Clone
  br i1 %cmp32.Clone, label %if.then.Clone, label %if.end.Clone

if.then.Clone:                                    ; preds = %land.lhs.true24.Clone, %land.lhs.true.Clone
  %24 = load i32, i32* %j.Clone, align 4
  %inc.Clone = add nsw i32 %24, 1
  store i32 %inc.Clone, i32* %j.Clone, align 4
  br label %if.end.Clone

if.end.Clone:                                     ; preds = %if.then.Clone, %land.lhs.true24.Clone, %lor.lhs.false.Clone, %while.body.Clone
  br label %OutFuncRetBB

OutFuncRetBB:                                     ; preds = %if.end.Clone
  %25 = getelementptr inbounds %Struct.RetValue.30, %Struct.RetValue.30* @Struct.RetValue.38, i32 0, i32 0
  store i32* %j.Clone, i32** %25, align 4
  ret void
}

define void @while.cond77.OutLineFunc(i32* %OutFuncArg, i32* %OutFuncArg1, i32* %OutFuncArg2, i32* %OutFuncArg3, %struct.ct_data** %OutFuncArg4, i32* %OutFuncArg5) {
entry:
  %OutFuncArg.addr = alloca i32*, align 4
  store i32* %OutFuncArg, i32** %OutFuncArg.addr, align 4
  %n.Clone = load i32*, i32** %OutFuncArg.addr, align 4
  %OutFuncArg1.addr = alloca i32*, align 4
  store i32* %OutFuncArg1, i32** %OutFuncArg1.addr, align 4
  %h.Clone = load i32*, i32** %OutFuncArg1.addr, align 4
  %OutFuncArg2.addr = alloca i32*, align 4
  store i32* %OutFuncArg2, i32** %OutFuncArg2.addr, align 4
  %m.Clone = load i32*, i32** %OutFuncArg2.addr, align 4
  %OutFuncArg3.addr = alloca i32*, align 4
  store i32* %OutFuncArg3, i32** %OutFuncArg3.addr, align 4
  %max_code.Clone = load i32*, i32** %OutFuncArg3.addr, align 4
  %OutFuncArg4.addr = alloca %struct.ct_data**, align 4
  store %struct.ct_data** %OutFuncArg4, %struct.ct_data*** %OutFuncArg4.addr, align 4
  %tree.Clone = load %struct.ct_data**, %struct.ct_data*** %OutFuncArg4.addr, align 4
  %OutFuncArg5.addr = alloca i32*, align 4
  store i32* %OutFuncArg5, i32** %OutFuncArg5.addr, align 4
  %bits.Clone = load i32*, i32** %OutFuncArg5.addr, align 4
  br label %while.cond77.Clone

while.cond77.Clone:                               ; preds = %entry, %if.end109.Clone, %if.then85.Clone
  %0 = load i32, i32* %n.Clone, align 4
  %cmp78.Clone = icmp ne i32 %0, 0
  br i1 %cmp78.Clone, label %while.body80.Clone, label %while.end111.Clone

while.body80.Clone:                               ; preds = %while.cond77.Clone
  %1 = load i32, i32* %h.Clone, align 4
  %dec81.Clone = add nsw i32 %1, -1
  store i32 %dec81.Clone, i32* %h.Clone, align 4
  %arrayidx82.Clone = getelementptr inbounds [573 x i32], [573 x i32]* @heap, i32 0, i32 %dec81.Clone
  %2 = load i32, i32* %arrayidx82.Clone, align 4
  store i32 %2, i32* %m.Clone, align 4
  %3 = load i32, i32* %m.Clone, align 4
  %4 = load i32, i32* %max_code.Clone, align 4
  %cmp83.Clone = icmp sgt i32 %3, %4
  br i1 %cmp83.Clone, label %if.then85.Clone, label %if.end86.Clone

if.then85.Clone:                                  ; preds = %while.body80.Clone
  br label %while.cond77.Clone

if.end86.Clone:                                   ; preds = %while.body80.Clone
  %5 = load %struct.ct_data*, %struct.ct_data** %tree.Clone, align 4
  %6 = load i32, i32* %m.Clone, align 4
  %arrayidx87.Clone = getelementptr inbounds %struct.ct_data, %struct.ct_data* %5, i32 %6
  %dl88.Clone = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx87.Clone, i32 0, i32 1
  %len89.Clone = bitcast %union.anon.5* %dl88.Clone to i16*
  %7 = load i16, i16* %len89.Clone, align 2
  %conv90.Clone = zext i16 %7 to i32
  %8 = load i32, i32* %bits.Clone, align 4
  %cmp91.Clone = icmp ne i32 %conv90.Clone, %8
  br i1 %cmp91.Clone, label %if.then93.Clone, label %if.end109.Clone

if.then93.Clone:                                  ; preds = %if.end86.Clone
  %9 = load i32, i32* %bits.Clone, align 4
  %10 = load %struct.ct_data*, %struct.ct_data** %tree.Clone, align 4
  %11 = load i32, i32* %m.Clone, align 4
  %arrayidx94.Clone = getelementptr inbounds %struct.ct_data, %struct.ct_data* %10, i32 %11
  %dl95.Clone = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx94.Clone, i32 0, i32 1
  %len96.Clone = bitcast %union.anon.5* %dl95.Clone to i16*
  %12 = load i16, i16* %len96.Clone, align 2
  %conv97.Clone = zext i16 %12 to i32
  %sub98.Clone = sub nsw i32 %9, %conv97.Clone
  %13 = load %struct.ct_data*, %struct.ct_data** %tree.Clone, align 4
  %14 = load i32, i32* %m.Clone, align 4
  %arrayidx99.Clone = getelementptr inbounds %struct.ct_data, %struct.ct_data* %13, i32 %14
  %fc100.Clone = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx99.Clone, i32 0, i32 0
  %freq101.Clone = bitcast %union.anon.5* %fc100.Clone to i16*
  %15 = load i16, i16* %freq101.Clone, align 2
  %conv102.Clone = zext i16 %15 to i32
  %mul103.Clone = mul nsw i32 %sub98.Clone, %conv102.Clone
  %16 = load i32, i32* @opt_len, align 4
  %add104.Clone = add i32 %16, %mul103.Clone
  store i32 %add104.Clone, i32* @opt_len, align 4
  %17 = load i32, i32* %bits.Clone, align 4
  %conv105.Clone = trunc i32 %17 to i16
  %18 = load %struct.ct_data*, %struct.ct_data** %tree.Clone, align 4
  %19 = load i32, i32* %m.Clone, align 4
  %arrayidx106.Clone = getelementptr inbounds %struct.ct_data, %struct.ct_data* %18, i32 %19
  %dl107.Clone = getelementptr inbounds %struct.ct_data, %struct.ct_data* %arrayidx106.Clone, i32 0, i32 1
  %len108.Clone = bitcast %union.anon.5* %dl107.Clone to i16*
  store i16 %conv105.Clone, i16* %len108.Clone, align 2
  br label %if.end109.Clone

if.end109.Clone:                                  ; preds = %if.then93.Clone, %if.end86.Clone
  %20 = load i32, i32* %n.Clone, align 4
  %dec110.Clone = add nsw i32 %20, -1
  store i32 %dec110.Clone, i32* %n.Clone, align 4
  br label %while.cond77.Clone

while.end111.Clone:                               ; preds = %while.cond77.Clone
  br label %OutFuncRetBB

OutFuncRetBB:                                     ; preds = %while.end111.Clone
  %21 = getelementptr inbounds %Struct.RetValue.31, %Struct.RetValue.31* @Struct.RetValue.40, i32 0, i32 0
  store i32* %n.Clone, i32** %21, align 4
  %22 = getelementptr inbounds %Struct.RetValue.31, %Struct.RetValue.31* @Struct.RetValue.40, i32 0, i32 1
  store i32* %h.Clone, i32** %22, align 4
  %23 = getelementptr inbounds %Struct.RetValue.31, %Struct.RetValue.31* @Struct.RetValue.40, i32 0, i32 2
  store i32* %m.Clone, i32** %23, align 4
  ret void
}

define void @if.end.OutLineFunc() {
entry:
  br label %if.end.Clone

if.end.Clone:                                     ; preds = %entry
  %0 = load i8, i8* @flag_bit, align 1
  %conv28.Clone = zext i8 %0 to i32
  %shl.Clone = shl i32 %conv28.Clone, 1
  %conv29.Clone = trunc i32 %shl.Clone to i8
  store i8 %conv29.Clone, i8* @flag_bit, align 1
  %1 = load i32, i32* @last_lit, align 4
  %and.Clone = and i32 %1, 7
  %cmp30.Clone = icmp eq i32 %and.Clone, 0
  br i1 %cmp30.Clone, label %if.then32.Clone, label %if.end35.Clone

if.then32.Clone:                                  ; preds = %if.end.Clone
  %2 = load i8, i8* @flags, align 1
  %3 = load i32, i32* @last_flags, align 4
  %inc33.Clone = add i32 %3, 1
  store i32 %inc33.Clone, i32* @last_flags, align 4
  %arrayidx34.Clone = getelementptr inbounds [4096 x i8], [4096 x i8]* @flag_buf, i32 0, i32 %3
  store i8 %2, i8* %arrayidx34.Clone, align 1
  store i8 0, i8* @flags, align 1
  store i8 1, i8* @flag_bit, align 1
  br label %if.end35.Clone

if.end35.Clone:                                   ; preds = %if.then32.Clone, %if.end.Clone
  br label %OutFuncRetBB

OutFuncRetBB:                                     ; preds = %if.end35.Clone
  ret void
}

define void @if.end3.OutLineFunc(i32* %OutFuncArg, i32* %OutFuncArg1, i32* %OutFuncArg2) {
entry:
  %OutFuncArg.addr = alloca i32*, align 4
  store i32* %OutFuncArg, i32** %OutFuncArg.addr, align 4
  %j.Clone = load i32*, i32** %OutFuncArg.addr, align 4
  %OutFuncArg1.addr = alloca i32*, align 4
  store i32* %OutFuncArg1, i32** %OutFuncArg1.addr, align 4
  %mask.Clone = load i32*, i32** %OutFuncArg1.addr, align 4
  %OutFuncArg2.addr = alloca i32*, align 4
  store i32* %OutFuncArg2, i32** %OutFuncArg2.addr, align 4
  %retval.Clone = load i32*, i32** %OutFuncArg2.addr, align 4
  br label %if.end3.Clone

if.end3.Clone:                                    ; preds = %entry
  %0 = load i32, i32* @blocksize, align 4
  %dec.Clone = add i32 %0, -1
  store i32 %dec.Clone, i32* @blocksize, align 4
  %1 = load i16, i16* @bitbuf, align 2
  %conv.Clone = zext i16 %1 to i32
  %shr.Clone = ashr i32 %conv.Clone, 4
  %arrayidx.Clone = getelementptr inbounds [0 x i16], [0 x i16]* bitcast ([32768 x i16]* @d_buf to [0 x i16]*), i32 0, i32 %shr.Clone
  %2 = load i16, i16* %arrayidx.Clone, align 2
  %conv4.Clone = zext i16 %2 to i32
  store i32 %conv4.Clone, i32* %j.Clone, align 4
  %3 = load i32, i32* %j.Clone, align 4
  %cmp5.Clone = icmp uge i32 %3, 510
  br i1 %cmp5.Clone, label %if.then7.Clone, label %if.end18.Clone

if.then7.Clone:                                   ; preds = %if.end3.Clone
  store i32 8, i32* %mask.Clone, align 4
  br label %do.body.Clone

do.body.Clone:                                    ; preds = %do.cond.Clone, %if.then7.Clone
  %4 = load i16, i16* @bitbuf, align 2
  %conv8.Clone = zext i16 %4 to i32
  %5 = load i32, i32* %mask.Clone, align 4
  %and.Clone = and i32 %conv8.Clone, %5
  %tobool.Clone = icmp ne i32 %and.Clone, 0
  br i1 %tobool.Clone, label %if.then9.Clone, label %if.else.Clone

if.then9.Clone:                                   ; preds = %do.body.Clone
  %6 = load i32, i32* %j.Clone, align 4
  %arrayidx10.Clone = getelementptr inbounds i16, i16* getelementptr inbounds ([65536 x i16], [65536 x i16]* @prev, i32 0, i32 32768), i32 %6
  %7 = load i16, i16* %arrayidx10.Clone, align 2
  %conv11.Clone = zext i16 %7 to i32
  store i32 %conv11.Clone, i32* %j.Clone, align 4
  br label %if.end14.Clone

if.end14.Clone:                                   ; preds = %if.else.Clone, %if.then9.Clone
  %8 = load i32, i32* %mask.Clone, align 4
  %shr15.Clone = lshr i32 %8, 1
  store i32 %shr15.Clone, i32* %mask.Clone, align 4
  br label %do.cond.Clone

do.cond.Clone:                                    ; preds = %if.end14.Clone
  %9 = load i32, i32* %j.Clone, align 4
  %cmp16.Clone = icmp uge i32 %9, 510
  br i1 %cmp16.Clone, label %do.body.Clone, label %do.end.Clone

do.end.Clone:                                     ; preds = %do.cond.Clone
  br label %if.end18.Clone

if.else.Clone:                                    ; preds = %do.body.Clone
  %10 = load i32, i32* %j.Clone, align 4
  %arrayidx12.Clone = getelementptr inbounds [0 x i16], [0 x i16]* bitcast ([65536 x i16]* @prev to [0 x i16]*), i32 0, i32 %10
  %11 = load i16, i16* %arrayidx12.Clone, align 2
  %conv13.Clone = zext i16 %11 to i32
  store i32 %conv13.Clone, i32* %j.Clone, align 4
  br label %if.end14.Clone

if.end18.Clone:                                   ; preds = %do.end.Clone, %if.end3.Clone
  %12 = load i32, i32* %j.Clone, align 4
  %arrayidx19.Clone = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i32 0, i32 %12
  %13 = load i8, i8* %arrayidx19.Clone, align 1
  %conv20.Clone = zext i8 %13 to i32
  br label %entry.fillbuf.Clone

entry.fillbuf.Clone:                              ; preds = %if.end18.Clone
  %n.addr.fillbuf.Clone = alloca i32, align 4
  store i32 %conv20.Clone, i32* %n.addr.fillbuf.Clone, align 4
  %14 = load i32, i32* %n.addr.fillbuf.Clone, align 4
  %15 = load i16, i16* @bitbuf, align 2
  %conv.fillbuf.Clone = zext i16 %15 to i32
  %shl.fillbuf.Clone = shl i32 %conv.fillbuf.Clone, %14
  %conv1.fillbuf.Clone = trunc i32 %shl.fillbuf.Clone to i16
  store i16 %conv1.fillbuf.Clone, i16* @bitbuf, align 2
  %RetValuePtr.fillbuf.Clone = alloca i32, align 4
  br label %while.cond.fillbuf.Clone

while.cond.fillbuf.Clone:                         ; preds = %if.end.fillbuf.Clone, %entry.fillbuf.Clone
  %16 = load i32, i32* %n.addr.fillbuf.Clone, align 4
  %17 = load i32, i32* @bitcount, align 4
  %cmp.fillbuf.Clone = icmp sgt i32 %16, %17
  br i1 %cmp.fillbuf.Clone, label %while.body.fillbuf.Clone, label %while.end.fillbuf.Clone

while.body.fillbuf.Clone:                         ; preds = %while.cond.fillbuf.Clone
  %18 = load i32, i32* @subbitbuf, align 4
  %19 = load i32, i32* @bitcount, align 4
  %20 = load i32, i32* %n.addr.fillbuf.Clone, align 4
  %sub.fillbuf.Clone = sub nsw i32 %20, %19
  store i32 %sub.fillbuf.Clone, i32* %n.addr.fillbuf.Clone, align 4
  %shl3.fillbuf.Clone = shl i32 %18, %sub.fillbuf.Clone
  %21 = load i16, i16* @bitbuf, align 2
  %conv4.fillbuf.Clone = zext i16 %21 to i32
  %or.fillbuf.Clone = or i32 %conv4.fillbuf.Clone, %shl3.fillbuf.Clone
  %conv5.fillbuf.Clone = trunc i32 %or.fillbuf.Clone to i16
  store i16 %conv5.fillbuf.Clone, i16* @bitbuf, align 2
  %22 = load i32, i32* @inptr, align 4
  %23 = load i32, i32* @insize, align 4
  %cmp6.fillbuf.Clone = icmp ult i32 %22, %23
  br i1 %cmp6.fillbuf.Clone, label %cond.true.fillbuf.Clone, label %cond.false.fillbuf.Clone

cond.true.fillbuf.Clone:                          ; preds = %while.body.fillbuf.Clone
  %24 = load i32, i32* @inptr, align 4
  %inc.fillbuf.Clone = add i32 %24, 1
  store i32 %inc.fillbuf.Clone, i32* @inptr, align 4
  %arrayidx.fillbuf.Clone = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i32 0, i32 %24
  %25 = load i8, i8* %arrayidx.fillbuf.Clone, align 1
  %conv8.fillbuf.Clone = zext i8 %25 to i32
  br label %cond.end.fillbuf.Clone

cond.false.fillbuf.Clone:                         ; preds = %while.body.fillbuf.Clone
  br label %entry.fill_inbuf.Clone.fillbuf.Clone

entry.fill_inbuf.Clone.fillbuf.Clone:             ; preds = %cond.false.fillbuf.Clone
  %retval.fill_inbuf.Clone.fillbuf.Clone = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone.fillbuf.Clone = alloca i32, align 4
  %len.fill_inbuf.Clone.fillbuf.Clone = alloca i32, align 4
  store i32 1, i32* %eof_ok.addr.fill_inbuf.Clone.fillbuf.Clone, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone.fillbuf.Clone = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone.fillbuf.Clone, align 4
  br label %do.body.fill_inbuf.Clone.fillbuf.Clone

do.body.fill_inbuf.Clone.fillbuf.Clone:           ; preds = %do.cond.fill_inbuf.Clone.fillbuf.Clone, %entry.fill_inbuf.Clone.fillbuf.Clone
  %26 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone.fillbuf.Clone = sub i32 32768, %26
  %27 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone.fillbuf.Clone = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %27
  %28 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone.fillbuf.Clone = call i32 @spec_read(i32 %28, i8* %add.ptr.fill_inbuf.Clone.fillbuf.Clone, i32 %sub.fill_inbuf.Clone.fillbuf.Clone)
  store i32 %call1.fill_inbuf.Clone.fillbuf.Clone, i32* %len.fill_inbuf.Clone.fillbuf.Clone, align 4
  %29 = load i32, i32* %len.fill_inbuf.Clone.fillbuf.Clone, align 4
  %cmp.fill_inbuf.Clone.fillbuf.Clone = icmp eq i32 %29, 0
  br i1 %cmp.fill_inbuf.Clone.fillbuf.Clone, label %if.then.fill_inbuf.Clone.fillbuf.Clone, label %lor.lhs.false.fill_inbuf.Clone.fillbuf.Clone

lor.lhs.false.fill_inbuf.Clone.fillbuf.Clone:     ; preds = %do.body.fill_inbuf.Clone.fillbuf.Clone
  %30 = load i32, i32* %len.fill_inbuf.Clone.fillbuf.Clone, align 4
  %cmp2.fill_inbuf.Clone.fillbuf.Clone = icmp eq i32 %30, -1
  br i1 %cmp2.fill_inbuf.Clone.fillbuf.Clone, label %if.then.fill_inbuf.Clone.fillbuf.Clone, label %if.end.fill_inbuf.Clone.fillbuf.Clone

if.then.fill_inbuf.Clone.fillbuf.Clone:           ; preds = %lor.lhs.false.fill_inbuf.Clone.fillbuf.Clone, %do.body.fill_inbuf.Clone.fillbuf.Clone
  br label %do.end.fill_inbuf.Clone.fillbuf.Clone

if.end.fill_inbuf.Clone.fillbuf.Clone:            ; preds = %lor.lhs.false.fill_inbuf.Clone.fillbuf.Clone
  %31 = load i32, i32* %len.fill_inbuf.Clone.fillbuf.Clone, align 4
  %32 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone.fillbuf.Clone = add i32 %32, %31
  store i32 %add.fill_inbuf.Clone.fillbuf.Clone, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone.fillbuf.Clone

do.cond.fill_inbuf.Clone.fillbuf.Clone:           ; preds = %if.end.fill_inbuf.Clone.fillbuf.Clone
  %33 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone.fillbuf.Clone = icmp ult i32 %33, 32768
  br i1 %cmp3.fill_inbuf.Clone.fillbuf.Clone, label %do.body.fill_inbuf.Clone.fillbuf.Clone, label %do.end.fill_inbuf.Clone.fillbuf.Clone

do.end.fill_inbuf.Clone.fillbuf.Clone:            ; preds = %do.cond.fill_inbuf.Clone.fillbuf.Clone, %if.then.fill_inbuf.Clone.fillbuf.Clone
  %34 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone.fillbuf.Clone = icmp eq i32 %34, 0
  br i1 %cmp4.fill_inbuf.Clone.fillbuf.Clone, label %if.then5.fill_inbuf.Clone.fillbuf.Clone, label %if.end8.fill_inbuf.Clone.fillbuf.Clone

if.then5.fill_inbuf.Clone.fillbuf.Clone:          ; preds = %do.end.fill_inbuf.Clone.fillbuf.Clone
  %35 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone.fillbuf.Clone, align 4
  %tobool.fill_inbuf.Clone.fillbuf.Clone = icmp ne i32 %35, 0
  br i1 %tobool.fill_inbuf.Clone.fillbuf.Clone, label %if.then6.fill_inbuf.Clone.fillbuf.Clone, label %if.end7.fill_inbuf.Clone.fillbuf.Clone

if.then6.fill_inbuf.Clone.fillbuf.Clone:          ; preds = %if.then5.fill_inbuf.Clone.fillbuf.Clone
  store i32 -1, i32* %retval.fill_inbuf.Clone.fillbuf.Clone, align 4
  br label %return.fill_inbuf.Clone.fillbuf.Clone

if.end7.fill_inbuf.Clone.fillbuf.Clone:           ; preds = %if.then5.fill_inbuf.Clone.fillbuf.Clone
  br label %entry.read_error.Clone

entry.read_error.Clone:                           ; preds = %if.end7.fill_inbuf.Clone.fillbuf.Clone
  %36 = load i8*, i8** @progname, align 4
  %call.read_error.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone, i32 2
  %call1.read_error.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %36)
  %call2.read_error.Clone = call i32* @_errno()
  %37 = load i32, i32* %call2.read_error.Clone, align 4
  %cmp.read_error.Clone = icmp ne i32 %37, 0
  br i1 %cmp.read_error.Clone, label %if.then.read_error.Clone, label %if.else.read_error.Clone

if.then.read_error.Clone:                         ; preds = %entry.read_error.Clone
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone

if.else.read_error.Clone:                         ; preds = %entry.read_error.Clone
  %call3.read_error.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone, i32 2
  %call5.read_error.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone

if.end.read_error.Clone:                          ; preds = %if.else.read_error.Clone, %if.then.read_error.Clone
  br label %entry.abort_gzip.Clone

entry.abort_gzip.Clone:                           ; preds = %if.end.read_error.Clone
  %38 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone = icmp ne i32 %38, 0
  br i1 %tobool.abort_gzip.Clone, label %if.then.abort_gzip.Clone, label %if.end.abort_gzip.Clone

if.then.abort_gzip.Clone:                         ; preds = %entry.abort_gzip.Clone
  %39 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %39)
  %call1.abort_gzip.Clone = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone

if.end.abort_gzip.Clone:                          ; preds = %if.then.abort_gzip.Clone, %entry.abort_gzip.Clone
  br label %entry.do_exit.Clone

entry.do_exit.Clone:                              ; preds = %if.end.abort_gzip.Clone
  %exitcode.addr.do_exit.Clone = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone, align 4
  %40 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone = icmp ne i32 %40, 0
  br i1 %tobool.do_exit.Clone, label %if.then.do_exit.Clone, label %if.end.do_exit.Clone

if.then.do_exit.Clone:                            ; preds = %entry.do_exit.Clone
  %41 = load i32, i32* %exitcode.addr.do_exit.Clone, align 4
  call void @exit(i32 %41) #7
  unreachable

if.end.do_exit.Clone:                             ; preds = %entry.do_exit.Clone
  store i32 1, i32* @do_exit.in_exit, align 4
  %42 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone = icmp ne i8* %42, null
  br i1 %cmp.do_exit.Clone, label %if.then1.do_exit.Clone, label %if.end2.do_exit.Clone

if.then1.do_exit.Clone:                           ; preds = %if.end.do_exit.Clone
  %43 = load i8*, i8** @env, align 4
  call void @free(i8* %43) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone

if.end2.do_exit.Clone:                            ; preds = %if.then1.do_exit.Clone, %if.end.do_exit.Clone
  %44 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone = icmp ne i8** %44, null
  br i1 %cmp3.do_exit.Clone, label %if.then4.do_exit.Clone, label %if.end5.do_exit.Clone

if.then4.do_exit.Clone:                           ; preds = %if.end2.do_exit.Clone
  %45 = load i8**, i8*** @args, align 4
  %46 = bitcast i8** %45 to i8*
  call void @free(i8* %46) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone

if.end5.do_exit.Clone:                            ; preds = %if.then4.do_exit.Clone, %if.end2.do_exit.Clone
  %47 = load i32, i32* %exitcode.addr.do_exit.Clone, align 4
  call void @exit(i32 %47) #7
  unreachable

return.do_exit.Clone:                             ; No predecessors!
  br label %if.end.abort_gzip.Clone.Split

if.end.abort_gzip.Clone.Split:                    ; preds = %return.do_exit.Clone
  br label %if.end.read_error.Clone.Split

if.end.read_error.Clone.Split:                    ; preds = %if.end.abort_gzip.Clone.Split
  br label %if.end7.fill_inbuf.Clone.fillbuf.Clone.Split

if.end7.fill_inbuf.Clone.fillbuf.Clone.Split:     ; preds = %if.end.read_error.Clone.Split
  br label %if.end8.fill_inbuf.Clone.fillbuf.Clone

if.end8.fill_inbuf.Clone.fillbuf.Clone:           ; preds = %if.end7.fill_inbuf.Clone.fillbuf.Clone.Split, %do.end.fill_inbuf.Clone.fillbuf.Clone
  %48 = load i32, i32* @insize, align 4
  %49 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone.fillbuf.Clone = add i32 %49, %48
  store i32 %add9.fill_inbuf.Clone.fillbuf.Clone, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %50 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone.fillbuf.Clone = zext i8 %50 to i32
  store i32 %conv.fill_inbuf.Clone.fillbuf.Clone, i32* %retval.fill_inbuf.Clone.fillbuf.Clone, align 4
  br label %return.fill_inbuf.Clone.fillbuf.Clone

return.fill_inbuf.Clone.fillbuf.Clone:            ; preds = %if.end8.fill_inbuf.Clone.fillbuf.Clone, %if.then6.fill_inbuf.Clone.fillbuf.Clone
  %51 = load i32, i32* %retval.fill_inbuf.Clone.fillbuf.Clone, align 4
  store i32 %51, i32* %RetValuePtr.fillbuf.Clone
  br label %cond.false.Split.fillbuf.Clone

cond.false.Split.fillbuf.Clone:                   ; preds = %return.fill_inbuf.Clone.fillbuf.Clone
  %RetValue.fillbuf.Clone = load i32, i32* %RetValuePtr.fillbuf.Clone
  br label %cond.end.fillbuf.Clone

cond.end.fillbuf.Clone:                           ; preds = %cond.false.Split.fillbuf.Clone, %cond.true.fillbuf.Clone
  %cond.fillbuf.Clone = phi i32 [ %conv8.fillbuf.Clone, %cond.true.fillbuf.Clone ], [ %RetValue.fillbuf.Clone, %cond.false.Split.fillbuf.Clone ]
  store i32 %cond.fillbuf.Clone, i32* @subbitbuf, align 4
  %52 = load i32, i32* @subbitbuf, align 4
  %cmp9.fillbuf.Clone = icmp eq i32 %52, -1
  br i1 %cmp9.fillbuf.Clone, label %if.then.fillbuf.Clone, label %if.end.fillbuf.Clone

if.then.fillbuf.Clone:                            ; preds = %cond.end.fillbuf.Clone
  store i32 0, i32* @subbitbuf, align 4
  br label %if.end.fillbuf.Clone

if.end.fillbuf.Clone:                             ; preds = %if.then.fillbuf.Clone, %cond.end.fillbuf.Clone
  store i32 8, i32* @bitcount, align 4
  br label %while.cond.fillbuf.Clone

while.end.fillbuf.Clone:                          ; preds = %while.cond.fillbuf.Clone
  %53 = load i32, i32* @subbitbuf, align 4
  %54 = load i32, i32* %n.addr.fillbuf.Clone, align 4
  %55 = load i32, i32* @bitcount, align 4
  %sub11.fillbuf.Clone = sub nsw i32 %55, %54
  store i32 %sub11.fillbuf.Clone, i32* @bitcount, align 4
  %shr.fillbuf.Clone = lshr i32 %53, %sub11.fillbuf.Clone
  %56 = load i16, i16* @bitbuf, align 2
  %conv12.fillbuf.Clone = zext i16 %56 to i32
  %or13.fillbuf.Clone = or i32 %conv12.fillbuf.Clone, %shr.fillbuf.Clone
  %conv14.fillbuf.Clone = trunc i32 %or13.fillbuf.Clone to i16
  store i16 %conv14.fillbuf.Clone, i16* @bitbuf, align 2
  br label %if.end18.Clone.Split

if.end18.Clone.Split:                             ; preds = %while.end.fillbuf.Clone
  %57 = load i32, i32* %j.Clone, align 4
  store i32 %57, i32* %retval.Clone, align 4
  br label %OutFuncRetBB

OutFuncRetBB:                                     ; preds = %if.end18.Clone.Split
  %58 = getelementptr inbounds %Struct.RetValue.33, %Struct.RetValue.33* @Struct.RetValue.42, i32 0, i32 0
  store i32* %j.Clone, i32** %58, align 4
  %59 = getelementptr inbounds %Struct.RetValue.33, %Struct.RetValue.33* @Struct.RetValue.42, i32 0, i32 1
  store i32* %mask.Clone, i32** %59, align 4
  %60 = getelementptr inbounds %Struct.RetValue.33, %Struct.RetValue.33* @Struct.RetValue.42, i32 0, i32 2
  store i32* %retval.Clone, i32** %60, align 4
  ret void
}

define void @while.body.OutLineFunc.44(i32* %OutFuncArg, i32* %OutFuncArg1) {
entry:
  %OutFuncArg.addr = alloca i32*, align 4
  store i32* %OutFuncArg, i32** %OutFuncArg.addr, align 4
  %c.Clone = load i32*, i32** %OutFuncArg.addr, align 4
  %OutFuncArg1.addr = alloca i32*, align 4
  store i32* %OutFuncArg1, i32** %OutFuncArg1.addr, align 4
  %mask.Clone = load i32*, i32** %OutFuncArg1.addr, align 4
  br label %while.body.Clone

while.body.Clone:                                 ; preds = %entry
  %0 = load i16, i16* @bitbuf, align 2
  %conv12.Clone = zext i16 %0 to i32
  %shr.Clone = ashr i32 %conv12.Clone, 13
  store i32 %shr.Clone, i32* %c.Clone, align 4
  %1 = load i32, i32* %c.Clone, align 4
  %cmp13.Clone = icmp eq i32 %1, 7
  br i1 %cmp13.Clone, label %if.then15.Clone, label %if.end.Clone

if.then15.Clone:                                  ; preds = %while.body.Clone
  store i32 4096, i32* %mask.Clone, align 4
  br label %while.cond16.Clone

while.cond16.Clone:                               ; preds = %while.body18.Clone, %if.then15.Clone
  %2 = load i32, i32* %mask.Clone, align 4
  %3 = load i16, i16* @bitbuf, align 2
  %conv17.Clone = zext i16 %3 to i32
  %and.Clone = and i32 %2, %conv17.Clone
  %tobool.Clone = icmp ne i32 %and.Clone, 0
  br i1 %tobool.Clone, label %while.body18.Clone, label %while.end.Clone

while.body18.Clone:                               ; preds = %while.cond16.Clone
  %4 = load i32, i32* %mask.Clone, align 4
  %shr19.Clone = lshr i32 %4, 1
  store i32 %shr19.Clone, i32* %mask.Clone, align 4
  %5 = load i32, i32* %c.Clone, align 4
  %inc20.Clone = add nsw i32 %5, 1
  store i32 %inc20.Clone, i32* %c.Clone, align 4
  br label %while.cond16.Clone

while.end.Clone:                                  ; preds = %while.cond16.Clone
  br label %if.end.Clone

if.end.Clone:                                     ; preds = %while.end.Clone, %while.body.Clone
  br label %OutFuncRetBB

OutFuncRetBB:                                     ; preds = %if.end.Clone
  %6 = getelementptr inbounds %Struct.RetValue.34, %Struct.RetValue.34* @Struct.RetValue.43, i32 0, i32 0
  store i32* %c.Clone, i32** %6, align 4
  %7 = getelementptr inbounds %Struct.RetValue.34, %Struct.RetValue.34* @Struct.RetValue.43, i32 0, i32 1
  store i32* %mask.Clone, i32** %7, align 4
  ret void
}

define void @while.cond59.OutLineFunc(i32* %OutFuncArg) {
entry:
  %OutFuncArg.addr = alloca i32*, align 4
  store i32* %OutFuncArg, i32** %OutFuncArg.addr, align 4
  %i.Clone = load i32*, i32** %OutFuncArg.addr, align 4
  br label %while.cond59.Clone

while.cond59.Clone:                               ; preds = %entry, %while.body62.Clone
  %0 = load i32, i32* %i.Clone, align 4
  %cmp60.Clone = icmp slt i32 %0, 510
  br i1 %cmp60.Clone, label %while.body62.Clone, label %while.end65.Clone

while.body62.Clone:                               ; preds = %while.cond59.Clone
  %1 = load i32, i32* %i.Clone, align 4
  %inc63.Clone = add nsw i32 %1, 1
  store i32 %inc63.Clone, i32* %i.Clone, align 4
  %arrayidx64.Clone = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i32 0, i32 %1
  store i8 0, i8* %arrayidx64.Clone, align 1
  br label %while.cond59.Clone

while.end65.Clone:                                ; preds = %while.cond59.Clone
  call void @make_table(i32 510, i8* getelementptr inbounds ([18432 x i8], [18432 x i8]* @outbuf, i32 0, i32 0), i32 12, i16* getelementptr inbounds ([32768 x i16], [32768 x i16]* @d_buf, i32 0, i32 0))
  br label %OutFuncRetBB

OutFuncRetBB:                                     ; preds = %while.end65.Clone
  %2 = getelementptr inbounds %Struct.RetValue.35, %Struct.RetValue.35* @Struct.RetValue.45, i32 0, i32 0
  store i32* %i.Clone, i32** %2, align 4
  ret void
}

define void @for.cond11.OutLineFunc(i32* %OutFuncArg, [18 x i16]* %OutFuncArg1, [17 x i16]* %OutFuncArg2) {
entry:
  %OutFuncArg.addr = alloca i32*, align 4
  store i32* %OutFuncArg, i32** %OutFuncArg.addr, align 4
  %i.Clone = load i32*, i32** %OutFuncArg.addr, align 4
  %OutFuncArg1.addr = alloca [18 x i16]*, align 4
  store [18 x i16]* %OutFuncArg1, [18 x i16]** %OutFuncArg1.addr, align 4
  %start.Clone = load [18 x i16]*, [18 x i16]** %OutFuncArg1.addr, align 4
  %OutFuncArg2.addr = alloca [17 x i16]*, align 4
  store [17 x i16]* %OutFuncArg2, [17 x i16]** %OutFuncArg2.addr, align 4
  %count.Clone = load [17 x i16]*, [17 x i16]** %OutFuncArg2.addr, align 4
  br label %for.cond11.Clone

for.cond11.Clone:                                 ; preds = %entry, %for.inc20.Clone
  %0 = load i32, i32* %i.Clone, align 4
  %cmp12.Clone = icmp ule i32 %0, 16
  br i1 %cmp12.Clone, label %for.body13.Clone, label %for.end22.Clone

for.body13.Clone:                                 ; preds = %for.cond11.Clone
  %1 = load i32, i32* %i.Clone, align 4
  %arrayidx14.Clone = getelementptr inbounds [18 x i16], [18 x i16]* %start.Clone, i32 0, i32 %1
  %2 = load i16, i16* %arrayidx14.Clone, align 2
  %conv.Clone = zext i16 %2 to i32
  %3 = load i32, i32* %i.Clone, align 4
  %arrayidx15.Clone = getelementptr inbounds [17 x i16], [17 x i16]* %count.Clone, i32 0, i32 %3
  %4 = load i16, i16* %arrayidx15.Clone, align 2
  %conv16.Clone = zext i16 %4 to i32
  %5 = load i32, i32* %i.Clone, align 4
  %sub.Clone = sub i32 16, %5
  %shl.Clone = shl i32 %conv16.Clone, %sub.Clone
  %add.Clone = add nsw i32 %conv.Clone, %shl.Clone
  %conv17.Clone = trunc i32 %add.Clone to i16
  %6 = load i32, i32* %i.Clone, align 4
  %add18.Clone = add i32 %6, 1
  %arrayidx19.Clone = getelementptr inbounds [18 x i16], [18 x i16]* %start.Clone, i32 0, i32 %add18.Clone
  store i16 %conv17.Clone, i16* %arrayidx19.Clone, align 2
  br label %for.inc20.Clone

for.inc20.Clone:                                  ; preds = %for.body13.Clone
  %7 = load i32, i32* %i.Clone, align 4
  %inc21.Clone = add i32 %7, 1
  store i32 %inc21.Clone, i32* %i.Clone, align 4
  br label %for.cond11.Clone

for.end22.Clone:                                  ; preds = %for.cond11.Clone
  br label %OutFuncRetBB

OutFuncRetBB:                                     ; preds = %for.end22.Clone
  %8 = getelementptr inbounds %Struct.RetValue.36, %Struct.RetValue.36* @Struct.RetValue.46, i32 0, i32 0
  store i32* %i.Clone, i32** %8, align 4
  ret void
}

define void @if.end175.OutLineFunc(i32* %OutFuncArg, i32* %OutFuncArg1, i32* %OutFuncArg2, i8** %OutFuncArg3) {
entry:
  %OutFuncArg.addr = alloca i32*, align 4
  store i32* %OutFuncArg, i32** %OutFuncArg.addr, align 4
  %outpos.Clone = load i32*, i32** %OutFuncArg.addr, align 4
  %OutFuncArg1.addr = alloca i32*, align 4
  store i32* %OutFuncArg1, i32** %OutFuncArg1.addr, align 4
  %out.addr.Clone = load i32*, i32** %OutFuncArg1.addr, align 4
  %OutFuncArg2.addr = alloca i32*, align 4
  store i32* %OutFuncArg2, i32** %OutFuncArg2.addr, align 4
  %i158.Clone = load i32*, i32** %OutFuncArg2.addr, align 4
  %OutFuncArg3.addr = alloca i8**, align 4
  store i8** %OutFuncArg3, i8*** %OutFuncArg3.addr, align 4
  %stackp.Clone = load i8**, i8*** %OutFuncArg3.addr, align 4
  %RetValuePtr = alloca i32, align 4
  br label %if.end175.Clone

if.end175.Clone:                                  ; preds = %entry
  %0 = load i32, i32* %outpos.Clone, align 4
  %cmp176.Clone = icmp sge i32 %0, 16384
  br i1 %cmp176.Clone, label %if.then178.Clone, label %if.end183.Clone

if.then178.Clone:                                 ; preds = %if.end175.Clone
  %1 = load i32, i32* @test, align 4
  %tobool179.Clone = icmp ne i32 %1, 0
  br i1 %tobool179.Clone, label %if.end182.Clone, label %if.then180.Clone

if.then180.Clone:                                 ; preds = %if.then178.Clone
  %2 = load i32, i32* %outpos.Clone, align 4
  %3 = load i32, i32* %out.addr.Clone, align 4
  br label %entry.write_buf.Clone

entry.write_buf.Clone:                            ; preds = %if.then180.Clone
  %cnt.addr.write_buf.Clone = alloca i32, align 4
  %buf.addr.write_buf.Clone = alloca i8*, align 4
  %fd.addr.write_buf.Clone = alloca i32, align 4
  %n.write_buf.Clone = alloca i32, align 4
  store i32 %2, i32* %cnt.addr.write_buf.Clone, align 4
  store i8* getelementptr inbounds ([18432 x i8], [18432 x i8]* @outbuf, i32 0, i32 0), i8** %buf.addr.write_buf.Clone, align 4
  store i32 %3, i32* %fd.addr.write_buf.Clone, align 4
  br label %while.cond.write_buf.Clone

while.cond.write_buf.Clone:                       ; preds = %if.end.write_buf.Clone, %entry.write_buf.Clone
  %4 = load i32, i32* %cnt.addr.write_buf.Clone, align 4
  %5 = load i8*, i8** %buf.addr.write_buf.Clone, align 4
  %6 = load i32, i32* %fd.addr.write_buf.Clone, align 4
  br label %entry.spec_write.Clone

entry.spec_write.Clone:                           ; preds = %while.cond.write_buf.Clone
  %size.addr.spec_write.Clone = alloca i32, align 4
  %buf.addr.spec_write.Clone = alloca i8*, align 4
  %fd.addr.spec_write.Clone = alloca i32, align 4
  store i32 %4, i32* %size.addr.spec_write.Clone, align 4
  store i8* %5, i8** %buf.addr.spec_write.Clone, align 4
  store i32 %6, i32* %fd.addr.spec_write.Clone, align 4
  %7 = load i32, i32* @dbglvl, align 4
  %cmp.spec_write.Clone = icmp slt i32 4, %7
  br i1 %cmp.spec_write.Clone, label %if.then.spec_write.Clone, label %if.end.spec_write.Clone

if.then.spec_write.Clone:                         ; preds = %entry.spec_write.Clone
  %8 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %9 = load i8*, i8** %buf.addr.spec_write.Clone, align 4
  %10 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %call.spec_write.Clone = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @"??_C@_0BK@GKFGHPHN@spec_write?3?5?$CFd?0?5?$CFx?0?5?$CFd?5?$DN?5?$AA@", i32 0, i32 0), i32 %10, i8* %9, i32 %8)
  br label %if.end.spec_write.Clone

if.end.spec_write.Clone:                          ; preds = %if.then.spec_write.Clone, %entry.spec_write.Clone
  %11 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %cmp1.spec_write.Clone = icmp sgt i32 %11, 3
  br i1 %cmp1.spec_write.Clone, label %if.then2.spec_write.Clone, label %if.end5.spec_write.Clone

if.then2.spec_write.Clone:                        ; preds = %if.end.spec_write.Clone
  %12 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %call3.spec_write.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx.spec_write.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.spec_write.Clone, i32 2
  %call4.spec_write.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.spec_write.Clone, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"??_C@_0CD@NANFEFEM@spec_write?3?5fd?$DN?$CFd?0?5?$DO?5MAX_SPEC_FD@", i32 0, i32 0), i32 %12)
  call void @exit(i32 1) #7
  unreachable

if.end5.spec_write.Clone:                         ; preds = %if.end.spec_write.Clone
  %13 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx6.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %13
  %buf7.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx6.spec_write.Clone, i32 0, i32 3
  %14 = load i8*, i8** %buf7.spec_write.Clone, align 4
  %15 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx8.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %15
  %pos.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx8.spec_write.Clone, i32 0, i32 2
  %16 = load i32, i32* %pos.spec_write.Clone, align 4
  %arrayidx9.spec_write.Clone = getelementptr inbounds i8, i8* %14, i32 %16
  %17 = load i8*, i8** %buf.addr.spec_write.Clone, align 4
  %18 = load i32, i32* %size.addr.spec_write.Clone, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %arrayidx9.spec_write.Clone, i8* align 1 %17, i32 %18, i1 false)
  %19 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %20 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx10.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %20
  %len.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx10.spec_write.Clone, i32 0, i32 1
  %21 = load i32, i32* %len.spec_write.Clone, align 4
  %add.spec_write.Clone = add nsw i32 %21, %19
  store i32 %add.spec_write.Clone, i32* %len.spec_write.Clone, align 4
  %22 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %23 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx11.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %23
  %pos12.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx11.spec_write.Clone, i32 0, i32 2
  %24 = load i32, i32* %pos12.spec_write.Clone, align 4
  %add13.spec_write.Clone = add nsw i32 %24, %22
  store i32 %add13.spec_write.Clone, i32* %pos12.spec_write.Clone, align 4
  %25 = load i32, i32* @dbglvl, align 4
  %cmp14.spec_write.Clone = icmp slt i32 4, %25
  br i1 %cmp14.spec_write.Clone, label %if.then15.spec_write.Clone, label %if.end17.spec_write.Clone

if.then15.spec_write.Clone:                       ; preds = %if.end5.spec_write.Clone
  %26 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %call16.spec_write.Clone = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"??_C@_03PMGGPEJJ@?$CFd?6?$AA@", i32 0, i32 0), i32 %26)
  br label %if.end17.spec_write.Clone

if.end17.spec_write.Clone:                        ; preds = %if.then15.spec_write.Clone, %if.end5.spec_write.Clone
  %27 = load i32, i32* %size.addr.spec_write.Clone, align 4
  store i32 %27, i32* %RetValuePtr
  br label %while.cond.write_buf.Clone.Split

while.cond.write_buf.Clone.Split:                 ; preds = %if.end17.spec_write.Clone
  %RetValue = load i32, i32* %RetValuePtr
  store i32 %RetValue, i32* %n.write_buf.Clone, align 4
  %28 = load i32, i32* %cnt.addr.write_buf.Clone, align 4
  %cmp.write_buf.Clone = icmp ne i32 %RetValue, %28
  br i1 %cmp.write_buf.Clone, label %while.body.write_buf.Clone, label %while.end.write_buf.Clone

while.body.write_buf.Clone:                       ; preds = %while.cond.write_buf.Clone.Split
  %29 = load i32, i32* %n.write_buf.Clone, align 4
  %cmp1.write_buf.Clone = icmp eq i32 %29, -1
  br i1 %cmp1.write_buf.Clone, label %if.then.write_buf.Clone, label %if.end.write_buf.Clone

if.then.write_buf.Clone:                          ; preds = %while.body.write_buf.Clone
  call void @write_error()
  br label %if.end.write_buf.Clone

if.end.write_buf.Clone:                           ; preds = %if.then.write_buf.Clone, %while.body.write_buf.Clone
  %30 = load i32, i32* %n.write_buf.Clone, align 4
  %31 = load i32, i32* %cnt.addr.write_buf.Clone, align 4
  %sub.write_buf.Clone = sub i32 %31, %30
  store i32 %sub.write_buf.Clone, i32* %cnt.addr.write_buf.Clone, align 4
  %32 = load i8*, i8** %buf.addr.write_buf.Clone, align 4
  %33 = load i32, i32* %n.write_buf.Clone, align 4
  %add.ptr.write_buf.Clone = getelementptr inbounds i8, i8* %32, i32 %33
  store i8* %add.ptr.write_buf.Clone, i8** %buf.addr.write_buf.Clone, align 4
  br label %while.cond.write_buf.Clone

while.end.write_buf.Clone:                        ; preds = %while.cond.write_buf.Clone.Split
  br label %if.then180.Clone.Split

if.then180.Clone.Split:                           ; preds = %while.end.write_buf.Clone
  %34 = load i32, i32* %outpos.Clone, align 4
  %35 = load i32, i32* @bytes_out, align 4
  %add181.Clone = add i32 %35, %34
  store i32 %add181.Clone, i32* @bytes_out, align 4
  br label %if.end182.Clone

if.end182.Clone:                                  ; preds = %if.then180.Clone.Split, %if.then178.Clone
  store i32 0, i32* %outpos.Clone, align 4
  br label %if.end183.Clone

if.end183.Clone:                                  ; preds = %if.end182.Clone, %if.end175.Clone
  %36 = load i32, i32* %i158.Clone, align 4
  %37 = load i8*, i8** %stackp.Clone, align 4
  %add.ptr184.Clone = getelementptr inbounds i8, i8* %37, i32 %36
  store i8* %add.ptr184.Clone, i8** %stackp.Clone, align 4
  br label %OutFuncRetBB

OutFuncRetBB:                                     ; preds = %if.end183.Clone
  %38 = getelementptr inbounds %Struct.RetValue.37, %Struct.RetValue.37* @Struct.RetValue.47, i32 0, i32 0
  store i32* %outpos.Clone, i32** %38, align 4
  %39 = getelementptr inbounds %Struct.RetValue.37, %Struct.RetValue.37* @Struct.RetValue.47, i32 0, i32 1
  store i8** %stackp.Clone, i8*** %39, align 4
  ret void
}

define void @if.end44.OutLineFunc(i32* %OutFuncArg, i32* %OutFuncArg1) {
entry:
  %OutFuncArg.addr = alloca i32*, align 4
  store i32* %OutFuncArg, i32** %OutFuncArg.addr, align 4
  %peek.Clone = load i32*, i32** %OutFuncArg.addr, align 4
  %OutFuncArg1.addr = alloca i32*, align 4
  store i32* %OutFuncArg1, i32** %OutFuncArg1.addr, align 4
  %len.Clone = load i32*, i32** %OutFuncArg1.addr, align 4
  %RetValuePtr = alloca i32, align 4
  %RetValuePtr2 = alloca i32, align 4
  br label %if.end44.Clone

if.end44.Clone:                                   ; preds = %entry
  %0 = load i32, i32* %peek.Clone, align 4
  %1 = load i32, i32* %len.Clone, align 4
  %arrayidx45.Clone = getelementptr inbounds [26 x i32], [26 x i32]* @lit_base, i32 0, i32 %1
  %2 = load i32, i32* %arrayidx45.Clone, align 4
  %add46.Clone = add i32 %0, %2
  %arrayidx47.Clone = getelementptr inbounds [256 x i8], [256 x i8]* @literal, i32 0, i32 %add46.Clone
  %3 = load i8, i8* %arrayidx47.Clone, align 1
  %4 = load i32, i32* @outcnt, align 4
  %inc48.Clone = add i32 %4, 1
  store i32 %inc48.Clone, i32* @outcnt, align 4
  %arrayidx49.Clone = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([65536 x i8]* @window to [0 x i8]*), i32 0, i32 %4
  store i8 %3, i8* %arrayidx49.Clone, align 1
  %5 = load i32, i32* @outcnt, align 4
  %cmp50.Clone = icmp eq i32 %5, 32768
  br i1 %cmp50.Clone, label %if.then52.Clone, label %if.end53.Clone

if.then52.Clone:                                  ; preds = %if.end44.Clone
  br label %entry.flush_window.Clone

entry.flush_window.Clone:                         ; preds = %if.then52.Clone
  %6 = load i32, i32* @outcnt, align 4
  %cmp.flush_window.Clone = icmp eq i32 %6, 0
  br i1 %cmp.flush_window.Clone, label %if.then.flush_window.Clone, label %if.end.flush_window.Clone

if.then.flush_window.Clone:                       ; preds = %entry.flush_window.Clone
  br label %return.flush_window.Clone

if.end.flush_window.Clone:                        ; preds = %entry.flush_window.Clone
  %7 = load i32, i32* @outcnt, align 4
  br label %entry.updcrc.Clone

entry.updcrc.Clone:                               ; preds = %if.end.flush_window.Clone
  %n.addr.updcrc.Clone = alloca i32, align 4
  %s.addr.updcrc.Clone = alloca i8*, align 4
  %c.updcrc.Clone = alloca i32, align 4
  store i32 %7, i32* %n.addr.updcrc.Clone, align 4
  store i8* getelementptr inbounds ([65536 x i8], [65536 x i8]* @window, i32 0, i32 0), i8** %s.addr.updcrc.Clone, align 4
  %8 = load i8*, i8** %s.addr.updcrc.Clone, align 4
  %cmp.updcrc.Clone = icmp eq i8* %8, null
  br i1 %cmp.updcrc.Clone, label %if.then.updcrc.Clone, label %if.else.updcrc.Clone

if.then.updcrc.Clone:                             ; preds = %entry.updcrc.Clone
  store i32 -1, i32* %c.updcrc.Clone, align 4
  br label %if.end4.updcrc.Clone

if.else.updcrc.Clone:                             ; preds = %entry.updcrc.Clone
  %9 = load i32, i32* @updcrc.crc, align 4
  store i32 %9, i32* %c.updcrc.Clone, align 4
  %10 = load i32, i32* %n.addr.updcrc.Clone, align 4
  %tobool.updcrc.Clone = icmp ne i32 %10, 0
  br i1 %tobool.updcrc.Clone, label %if.then1.updcrc.Clone, label %if.end.updcrc.Clone

if.then1.updcrc.Clone:                            ; preds = %if.else.updcrc.Clone
  br label %do.body.updcrc.Clone

do.body.updcrc.Clone:                             ; preds = %do.cond.updcrc.Clone, %if.then1.updcrc.Clone
  %11 = load i32, i32* %c.updcrc.Clone, align 4
  %12 = load i8*, i8** %s.addr.updcrc.Clone, align 4
  %incdec.ptr.updcrc.Clone = getelementptr inbounds i8, i8* %12, i32 1
  store i8* %incdec.ptr.updcrc.Clone, i8** %s.addr.updcrc.Clone, align 4
  %13 = load i8, i8* %12, align 1
  %conv.updcrc.Clone = zext i8 %13 to i32
  %xor.updcrc.Clone = xor i32 %11, %conv.updcrc.Clone
  %and.updcrc.Clone = and i32 %xor.updcrc.Clone, 255
  %arrayidx.updcrc.Clone = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([256 x i32]* @crc_32_tab to [0 x i32]*), i32 0, i32 %and.updcrc.Clone
  %14 = load i32, i32* %arrayidx.updcrc.Clone, align 4
  %15 = load i32, i32* %c.updcrc.Clone, align 4
  %shr.updcrc.Clone = lshr i32 %15, 8
  %xor2.updcrc.Clone = xor i32 %14, %shr.updcrc.Clone
  store i32 %xor2.updcrc.Clone, i32* %c.updcrc.Clone, align 4
  br label %do.cond.updcrc.Clone

do.cond.updcrc.Clone:                             ; preds = %do.body.updcrc.Clone
  %16 = load i32, i32* %n.addr.updcrc.Clone, align 4
  %dec.updcrc.Clone = add i32 %16, -1
  store i32 %dec.updcrc.Clone, i32* %n.addr.updcrc.Clone, align 4
  %tobool3.updcrc.Clone = icmp ne i32 %dec.updcrc.Clone, 0
  br i1 %tobool3.updcrc.Clone, label %do.body.updcrc.Clone, label %do.end.updcrc.Clone

do.end.updcrc.Clone:                              ; preds = %do.cond.updcrc.Clone
  br label %if.end.updcrc.Clone

if.end.updcrc.Clone:                              ; preds = %do.end.updcrc.Clone, %if.else.updcrc.Clone
  br label %if.end4.updcrc.Clone

if.end4.updcrc.Clone:                             ; preds = %if.end.updcrc.Clone, %if.then.updcrc.Clone
  %17 = load i32, i32* %c.updcrc.Clone, align 4
  store i32 %17, i32* @updcrc.crc, align 4
  %18 = load i32, i32* %c.updcrc.Clone, align 4
  %xor5.updcrc.Clone = xor i32 %18, -1
  store i32 %xor5.updcrc.Clone, i32* %RetValuePtr
  br label %if.end.flush_window.Clone.Split

if.end.flush_window.Clone.Split:                  ; preds = %if.end4.updcrc.Clone
  %RetValue = load i32, i32* %RetValuePtr
  %19 = load i32, i32* @test, align 4
  %tobool.flush_window.Clone = icmp ne i32 %19, 0
  br i1 %tobool.flush_window.Clone, label %if.end2.flush_window.Clone, label %if.then1.flush_window.Clone

if.then1.flush_window.Clone:                      ; preds = %if.end.flush_window.Clone.Split
  %20 = load i32, i32* @outcnt, align 4
  %21 = load i32, i32* @ofd, align 4
  br label %entry.write_buf.Clone

entry.write_buf.Clone:                            ; preds = %if.then1.flush_window.Clone
  %cnt.addr.write_buf.Clone = alloca i32, align 4
  %buf.addr.write_buf.Clone = alloca i8*, align 4
  %fd.addr.write_buf.Clone = alloca i32, align 4
  %n.write_buf.Clone = alloca i32, align 4
  store i32 %20, i32* %cnt.addr.write_buf.Clone, align 4
  store i8* getelementptr inbounds ([65536 x i8], [65536 x i8]* @window, i32 0, i32 0), i8** %buf.addr.write_buf.Clone, align 4
  store i32 %21, i32* %fd.addr.write_buf.Clone, align 4
  br label %while.cond.write_buf.Clone

while.cond.write_buf.Clone:                       ; preds = %if.end.write_buf.Clone, %entry.write_buf.Clone
  %22 = load i32, i32* %cnt.addr.write_buf.Clone, align 4
  %23 = load i8*, i8** %buf.addr.write_buf.Clone, align 4
  %24 = load i32, i32* %fd.addr.write_buf.Clone, align 4
  br label %entry.spec_write.Clone

entry.spec_write.Clone:                           ; preds = %while.cond.write_buf.Clone
  %size.addr.spec_write.Clone = alloca i32, align 4
  %buf.addr.spec_write.Clone = alloca i8*, align 4
  %fd.addr.spec_write.Clone = alloca i32, align 4
  store i32 %22, i32* %size.addr.spec_write.Clone, align 4
  store i8* %23, i8** %buf.addr.spec_write.Clone, align 4
  store i32 %24, i32* %fd.addr.spec_write.Clone, align 4
  %25 = load i32, i32* @dbglvl, align 4
  %cmp.spec_write.Clone = icmp slt i32 4, %25
  br i1 %cmp.spec_write.Clone, label %if.then.spec_write.Clone, label %if.end.spec_write.Clone

if.then.spec_write.Clone:                         ; preds = %entry.spec_write.Clone
  %26 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %27 = load i8*, i8** %buf.addr.spec_write.Clone, align 4
  %28 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %call.spec_write.Clone = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @"??_C@_0BK@GKFGHPHN@spec_write?3?5?$CFd?0?5?$CFx?0?5?$CFd?5?$DN?5?$AA@", i32 0, i32 0), i32 %28, i8* %27, i32 %26)
  br label %if.end.spec_write.Clone

if.end.spec_write.Clone:                          ; preds = %if.then.spec_write.Clone, %entry.spec_write.Clone
  %29 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %cmp1.spec_write.Clone = icmp sgt i32 %29, 3
  br i1 %cmp1.spec_write.Clone, label %if.then2.spec_write.Clone, label %if.end5.spec_write.Clone

if.then2.spec_write.Clone:                        ; preds = %if.end.spec_write.Clone
  %30 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %call3.spec_write.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx.spec_write.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.spec_write.Clone, i32 2
  %call4.spec_write.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.spec_write.Clone, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"??_C@_0CD@NANFEFEM@spec_write?3?5fd?$DN?$CFd?0?5?$DO?5MAX_SPEC_FD@", i32 0, i32 0), i32 %30)
  call void @exit(i32 1) #7
  unreachable

if.end5.spec_write.Clone:                         ; preds = %if.end.spec_write.Clone
  %31 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx6.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %31
  %buf7.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx6.spec_write.Clone, i32 0, i32 3
  %32 = load i8*, i8** %buf7.spec_write.Clone, align 4
  %33 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx8.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %33
  %pos.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx8.spec_write.Clone, i32 0, i32 2
  %34 = load i32, i32* %pos.spec_write.Clone, align 4
  %arrayidx9.spec_write.Clone = getelementptr inbounds i8, i8* %32, i32 %34
  %35 = load i8*, i8** %buf.addr.spec_write.Clone, align 4
  %36 = load i32, i32* %size.addr.spec_write.Clone, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %arrayidx9.spec_write.Clone, i8* align 1 %35, i32 %36, i1 false)
  %37 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %38 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx10.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %38
  %len.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx10.spec_write.Clone, i32 0, i32 1
  %39 = load i32, i32* %len.spec_write.Clone, align 4
  %add.spec_write.Clone = add nsw i32 %39, %37
  store i32 %add.spec_write.Clone, i32* %len.spec_write.Clone, align 4
  %40 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %41 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx11.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %41
  %pos12.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx11.spec_write.Clone, i32 0, i32 2
  %42 = load i32, i32* %pos12.spec_write.Clone, align 4
  %add13.spec_write.Clone = add nsw i32 %42, %40
  store i32 %add13.spec_write.Clone, i32* %pos12.spec_write.Clone, align 4
  %43 = load i32, i32* @dbglvl, align 4
  %cmp14.spec_write.Clone = icmp slt i32 4, %43
  br i1 %cmp14.spec_write.Clone, label %if.then15.spec_write.Clone, label %if.end17.spec_write.Clone

if.then15.spec_write.Clone:                       ; preds = %if.end5.spec_write.Clone
  %44 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %call16.spec_write.Clone = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"??_C@_03PMGGPEJJ@?$CFd?6?$AA@", i32 0, i32 0), i32 %44)
  br label %if.end17.spec_write.Clone

if.end17.spec_write.Clone:                        ; preds = %if.then15.spec_write.Clone, %if.end5.spec_write.Clone
  %45 = load i32, i32* %size.addr.spec_write.Clone, align 4
  store i32 %45, i32* %RetValuePtr2
  br label %while.cond.write_buf.Clone.Split

while.cond.write_buf.Clone.Split:                 ; preds = %if.end17.spec_write.Clone
  %RetValue3 = load i32, i32* %RetValuePtr2
  store i32 %RetValue3, i32* %n.write_buf.Clone, align 4
  %46 = load i32, i32* %cnt.addr.write_buf.Clone, align 4
  %cmp.write_buf.Clone = icmp ne i32 %RetValue3, %46
  br i1 %cmp.write_buf.Clone, label %while.body.write_buf.Clone, label %while.end.write_buf.Clone

while.body.write_buf.Clone:                       ; preds = %while.cond.write_buf.Clone.Split
  %47 = load i32, i32* %n.write_buf.Clone, align 4
  %cmp1.write_buf.Clone = icmp eq i32 %47, -1
  br i1 %cmp1.write_buf.Clone, label %if.then.write_buf.Clone, label %if.end.write_buf.Clone

if.then.write_buf.Clone:                          ; preds = %while.body.write_buf.Clone
  call void @write_error()
  br label %if.end.write_buf.Clone

if.end.write_buf.Clone:                           ; preds = %if.then.write_buf.Clone, %while.body.write_buf.Clone
  %48 = load i32, i32* %n.write_buf.Clone, align 4
  %49 = load i32, i32* %cnt.addr.write_buf.Clone, align 4
  %sub.write_buf.Clone = sub i32 %49, %48
  store i32 %sub.write_buf.Clone, i32* %cnt.addr.write_buf.Clone, align 4
  %50 = load i8*, i8** %buf.addr.write_buf.Clone, align 4
  %51 = load i32, i32* %n.write_buf.Clone, align 4
  %add.ptr.write_buf.Clone = getelementptr inbounds i8, i8* %50, i32 %51
  store i8* %add.ptr.write_buf.Clone, i8** %buf.addr.write_buf.Clone, align 4
  br label %while.cond.write_buf.Clone

while.end.write_buf.Clone:                        ; preds = %while.cond.write_buf.Clone.Split
  br label %if.then1.flush_window.Clone.Split

if.then1.flush_window.Clone.Split:                ; preds = %while.end.write_buf.Clone
  br label %if.end2.flush_window.Clone

if.end2.flush_window.Clone:                       ; preds = %if.then1.flush_window.Clone.Split, %if.end.flush_window.Clone.Split
  %52 = load i32, i32* @outcnt, align 4
  %53 = load i32, i32* @bytes_out, align 4
  %add.flush_window.Clone = add i32 %53, %52
  store i32 %add.flush_window.Clone, i32* @bytes_out, align 4
  store i32 0, i32* @outcnt, align 4
  br label %return.flush_window.Clone

return.flush_window.Clone:                        ; preds = %if.end2.flush_window.Clone, %if.then.flush_window.Clone
  br label %if.then52.Clone.Split

if.then52.Clone.Split:                            ; preds = %return.flush_window.Clone
  br label %if.end53.Clone

if.end53.Clone:                                   ; preds = %if.then52.Clone.Split, %if.end44.Clone
  %54 = load i32, i32* %len.Clone, align 4
  %55 = load i32, i32* @valid, align 4
  %sub54.Clone = sub nsw i32 %55, %54
  store i32 %sub54.Clone, i32* @valid, align 4
  br label %OutFuncRetBB

OutFuncRetBB:                                     ; preds = %if.end53.Clone
  ret void
}

define void @for.end33.OutLineFunc(i32* %OutFuncArg, i32* %OutFuncArg1, i32* %OutFuncArg2) {
entry:
  %OutFuncArg.addr = alloca i32*, align 4
  store i32* %OutFuncArg, i32** %OutFuncArg.addr, align 4
  %n.Clone = load i32*, i32** %OutFuncArg.addr, align 4
  %OutFuncArg1.addr = alloca i32*, align 4
  store i32* %OutFuncArg1, i32** %OutFuncArg1.addr, align 4
  %base.Clone = load i32*, i32** %OutFuncArg1.addr, align 4
  %OutFuncArg2.addr = alloca i32*, align 4
  store i32* %OutFuncArg2, i32** %OutFuncArg2.addr, align 4
  %len.Clone = load i32*, i32** %OutFuncArg2.addr, align 4
  br label %for.end33.Clone

for.end33.Clone:                                  ; preds = %entry
  %0 = load i32, i32* %n.Clone, align 4
  %cmp34.Clone = icmp sgt i32 %0, 256
  br i1 %cmp34.Clone, label %if.then36.Clone, label %if.end37.Clone

if.then36.Clone:                                  ; preds = %for.end33.Clone
  br label %entry.error.Clone

entry.error.Clone:                                ; preds = %if.then36.Clone
  %m.addr.error.Clone = alloca i8*, align 4
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @"??_C@_0CA@LKKMCIIJ@too?5many?5leaves?5in?5Huffman?5tree?$AA@", i32 0, i32 0), i8** %m.addr.error.Clone, align 4
  %1 = load i8*, i8** %m.addr.error.Clone, align 4
  %2 = load i8*, i8** @progname, align 4
  %call.error.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx.error.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.error.Clone, i32 2
  %call1.error.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.error.Clone, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @"??_C@_0N@ODCEBLNH@?6?$CFs?3?5?$CFs?3?5?$CFs?6?$AA@", i32 0, i32 0), i8* %2, i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0), i8* %1)
  br label %entry.abort_gzip.Clone

entry.abort_gzip.Clone:                           ; preds = %entry.error.Clone
  %3 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone = icmp ne i32 %3, 0
  br i1 %tobool.abort_gzip.Clone, label %if.then.abort_gzip.Clone, label %if.end.abort_gzip.Clone

if.then.abort_gzip.Clone:                         ; preds = %entry.abort_gzip.Clone
  %4 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %4)
  %call1.abort_gzip.Clone = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone

if.end.abort_gzip.Clone:                          ; preds = %if.then.abort_gzip.Clone, %entry.abort_gzip.Clone
  br label %entry.do_exit.Clone

entry.do_exit.Clone:                              ; preds = %if.end.abort_gzip.Clone
  %exitcode.addr.do_exit.Clone = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone, align 4
  %5 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone = icmp ne i32 %5, 0
  br i1 %tobool.do_exit.Clone, label %if.then.do_exit.Clone, label %if.end.do_exit.Clone

if.then.do_exit.Clone:                            ; preds = %entry.do_exit.Clone
  %6 = load i32, i32* %exitcode.addr.do_exit.Clone, align 4
  call void @exit(i32 %6) #7
  unreachable

if.end.do_exit.Clone:                             ; preds = %entry.do_exit.Clone
  store i32 1, i32* @do_exit.in_exit, align 4
  %7 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone = icmp ne i8* %7, null
  br i1 %cmp.do_exit.Clone, label %if.then1.do_exit.Clone, label %if.end2.do_exit.Clone

if.then1.do_exit.Clone:                           ; preds = %if.end.do_exit.Clone
  %8 = load i8*, i8** @env, align 4
  call void @free(i8* %8) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone

if.end2.do_exit.Clone:                            ; preds = %if.then1.do_exit.Clone, %if.end.do_exit.Clone
  %9 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone = icmp ne i8** %9, null
  br i1 %cmp3.do_exit.Clone, label %if.then4.do_exit.Clone, label %if.end5.do_exit.Clone

if.then4.do_exit.Clone:                           ; preds = %if.end2.do_exit.Clone
  %10 = load i8**, i8*** @args, align 4
  %11 = bitcast i8** %10 to i8*
  call void @free(i8* %11) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone

if.end5.do_exit.Clone:                            ; preds = %if.then4.do_exit.Clone, %if.end2.do_exit.Clone
  %12 = load i32, i32* %exitcode.addr.do_exit.Clone, align 4
  call void @exit(i32 %12) #7
  unreachable

return.do_exit.Clone:                             ; No predecessors!
  br label %if.end.abort_gzip.Clone.Split

if.end.abort_gzip.Clone.Split:                    ; preds = %return.do_exit.Clone
  br label %entry.error.Clone.Split

entry.error.Clone.Split:                          ; preds = %if.end.abort_gzip.Clone.Split
  br label %if.then36.Clone.Split

if.then36.Clone.Split:                            ; preds = %entry.error.Clone.Split
  br label %if.end37.Clone

if.end37.Clone:                                   ; preds = %if.then36.Clone.Split, %for.end33.Clone
  %13 = load i32, i32* @max_len, align 4
  %arrayidx38.Clone = getelementptr inbounds [26 x i32], [26 x i32]* @leaves, i32 0, i32 %13
  %14 = load i32, i32* %arrayidx38.Clone, align 4
  %inc39.Clone = add nsw i32 %14, 1
  store i32 %inc39.Clone, i32* %arrayidx38.Clone, align 4
  store i32 0, i32* %base.Clone, align 4
  store i32 1, i32* %len.Clone, align 4
  br label %OutFuncRetBB

OutFuncRetBB:                                     ; preds = %if.end37.Clone
  %15 = getelementptr inbounds %Struct.RetValue.39, %Struct.RetValue.39* @Struct.RetValue.49, i32 0, i32 0
  store i32* %base.Clone, i32** %15, align 4
  %16 = getelementptr inbounds %Struct.RetValue.39, %Struct.RetValue.39* @Struct.RetValue.49, i32 0, i32 1
  store i32* %len.Clone, i32** %16, align 4
  ret void
}

define void @for.cond5.OutLineFunc(i32* %OutFuncArg, i32* %OutFuncArg1, i8** %OutFuncArg2) {
entry:
  %OutFuncArg.addr = alloca i32*, align 4
  store i32* %OutFuncArg, i32** %OutFuncArg.addr, align 4
  %len.Clone = load i32*, i32** %OutFuncArg.addr, align 4
  %OutFuncArg1.addr = alloca i32*, align 4
  store i32* %OutFuncArg1, i32** %OutFuncArg1.addr, align 4
  %prefixes.Clone = load i32*, i32** %OutFuncArg1.addr, align 4
  %OutFuncArg2.addr = alloca i8**, align 4
  store i8** %OutFuncArg2, i8*** %OutFuncArg2.addr, align 4
  %prefixp.Clone = load i8**, i8*** %OutFuncArg2.addr, align 4
  br label %for.cond5.Clone

for.cond5.Clone:                                  ; preds = %entry, %for.inc12.Clone
  %0 = load i32, i32* %len.Clone, align 4
  %1 = load i32, i32* @peek_bits, align 4
  %cmp6.Clone = icmp sle i32 %0, %1
  br i1 %cmp6.Clone, label %for.body7.Clone, label %for.end13.Clone

for.body7.Clone:                                  ; preds = %for.cond5.Clone
  %2 = load i32, i32* %len.Clone, align 4
  %arrayidx8.Clone = getelementptr inbounds [26 x i32], [26 x i32]* @leaves, i32 0, i32 %2
  %3 = load i32, i32* %arrayidx8.Clone, align 4
  %4 = load i32, i32* @peek_bits, align 4
  %5 = load i32, i32* %len.Clone, align 4
  %sub9.Clone = sub nsw i32 %4, %5
  %shl10.Clone = shl i32 %3, %sub9.Clone
  store i32 %shl10.Clone, i32* %prefixes.Clone, align 4
  br label %while.cond.Clone

while.cond.Clone:                                 ; preds = %while.body.Clone, %for.body7.Clone
  %6 = load i32, i32* %prefixes.Clone, align 4
  %dec11.Clone = add nsw i32 %6, -1
  store i32 %dec11.Clone, i32* %prefixes.Clone, align 4
  %tobool.Clone = icmp ne i32 %6, 0
  br i1 %tobool.Clone, label %while.body.Clone, label %while.end.Clone

while.body.Clone:                                 ; preds = %while.cond.Clone
  %7 = load i32, i32* %len.Clone, align 4
  %conv.Clone = trunc i32 %7 to i8
  %8 = load i8*, i8** %prefixp.Clone, align 4
  %incdec.ptr.Clone = getelementptr inbounds i8, i8* %8, i32 -1
  store i8* %incdec.ptr.Clone, i8** %prefixp.Clone, align 4
  store i8 %conv.Clone, i8* %incdec.ptr.Clone, align 1
  br label %while.cond.Clone

while.end.Clone:                                  ; preds = %while.cond.Clone
  br label %for.inc12.Clone

for.inc12.Clone:                                  ; preds = %while.end.Clone
  %9 = load i32, i32* %len.Clone, align 4
  %inc.Clone = add nsw i32 %9, 1
  store i32 %inc.Clone, i32* %len.Clone, align 4
  br label %for.cond5.Clone

for.end13.Clone:                                  ; preds = %for.cond5.Clone
  br label %OutFuncRetBB

OutFuncRetBB:                                     ; preds = %for.end13.Clone
  %10 = getelementptr inbounds %Struct.RetValue.40, %Struct.RetValue.40* @Struct.RetValue.50, i32 0, i32 0
  store i32* %len.Clone, i32** %10, align 4
  %11 = getelementptr inbounds %Struct.RetValue.40, %Struct.RetValue.40* @Struct.RetValue.50, i32 0, i32 1
  store i32* %prefixes.Clone, i32** %11, align 4
  %12 = getelementptr inbounds %Struct.RetValue.40, %Struct.RetValue.40* @Struct.RetValue.50, i32 0, i32 2
  store i8** %prefixp.Clone, i8*** %12, align 4
  ret void
}

define void @for.cond179.OutLineFunc(i32* %OutFuncArg, [16 x i8]* %OutFuncArg1, i32* %OutFuncArg2, i32* %OutFuncArg3) {
entry:
  %OutFuncArg.addr = alloca i32*, align 4
  store i32* %OutFuncArg, i32** %OutFuncArg.addr, align 4
  %n.Clone = load i32*, i32** %OutFuncArg.addr, align 4
  %OutFuncArg1.addr = alloca [16 x i8]*, align 4
  store [16 x i8]* %OutFuncArg1, [16 x i8]** %OutFuncArg1.addr, align 4
  %buf.Clone = load [16 x i8]*, [16 x i8]** %OutFuncArg1.addr, align 4
  %OutFuncArg2.addr = alloca i32*, align 4
  store i32* %OutFuncArg2, i32** %OutFuncArg2.addr, align 4
  %orig_crc.Clone = load i32*, i32** %OutFuncArg2.addr, align 4
  %OutFuncArg3.addr = alloca i32*, align 4
  store i32* %OutFuncArg3, i32** %OutFuncArg3.addr, align 4
  %orig_len.Clone = load i32*, i32** %OutFuncArg3.addr, align 4
  %RetValuePtr = alloca i32, align 4
  br label %for.cond179.Clone

for.cond179.Clone:                                ; preds = %entry, %for.inc195.Clone
  %0 = load i32, i32* %n.Clone, align 4
  %cmp180.Clone = icmp slt i32 %0, 16
  br i1 %cmp180.Clone, label %for.body182.Clone, label %for.end197.Clone

for.body182.Clone:                                ; preds = %for.cond179.Clone
  %1 = load i32, i32* @inptr, align 4
  %2 = load i32, i32* @insize, align 4
  %cmp183.Clone = icmp ult i32 %1, %2
  br i1 %cmp183.Clone, label %cond.true185.Clone, label %cond.false189.Clone

cond.true185.Clone:                               ; preds = %for.body182.Clone
  %3 = load i32, i32* @inptr, align 4
  %inc186.Clone = add i32 %3, 1
  store i32 %inc186.Clone, i32* @inptr, align 4
  %arrayidx187.Clone = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([32832 x i8]* @inbuf to [0 x i8]*), i32 0, i32 %3
  %4 = load i8, i8* %arrayidx187.Clone, align 1
  %conv188.Clone = zext i8 %4 to i32
  br label %cond.end191.Clone

cond.end191.Clone:                                ; preds = %cond.false189.Clone.Split, %cond.true185.Clone
  %cond192.Clone = phi i32 [ %conv188.Clone, %cond.true185.Clone ], [ %RetValue, %cond.false189.Clone.Split ]
  %conv193.Clone = trunc i32 %cond192.Clone to i8
  %5 = load i32, i32* %n.Clone, align 4
  %arrayidx194.Clone = getelementptr inbounds [16 x i8], [16 x i8]* %buf.Clone, i32 0, i32 %5
  store i8 %conv193.Clone, i8* %arrayidx194.Clone, align 1
  br label %for.inc195.Clone

for.inc195.Clone:                                 ; preds = %cond.end191.Clone
  %6 = load i32, i32* %n.Clone, align 4
  %inc196.Clone = add nsw i32 %6, 1
  store i32 %inc196.Clone, i32* %n.Clone, align 4
  br label %for.cond179.Clone

cond.false189.Clone:                              ; preds = %for.body182.Clone
  br label %entry.fill_inbuf.Clone

entry.fill_inbuf.Clone:                           ; preds = %cond.false189.Clone
  %retval.fill_inbuf.Clone = alloca i32, align 4
  %eof_ok.addr.fill_inbuf.Clone = alloca i32, align 4
  %len.fill_inbuf.Clone = alloca i32, align 4
  store i32 0, i32* %eof_ok.addr.fill_inbuf.Clone, align 4
  store i32 0, i32* @insize, align 4
  %call.fill_inbuf.Clone = call i32* @_errno()
  store i32 0, i32* %call.fill_inbuf.Clone, align 4
  br label %do.body.fill_inbuf.Clone

do.body.fill_inbuf.Clone:                         ; preds = %do.cond.fill_inbuf.Clone, %entry.fill_inbuf.Clone
  %7 = load i32, i32* @insize, align 4
  %sub.fill_inbuf.Clone = sub i32 32768, %7
  %8 = load i32, i32* @insize, align 4
  %add.ptr.fill_inbuf.Clone = getelementptr inbounds i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), i32 %8
  %9 = load i32, i32* @ifd, align 4
  %call1.fill_inbuf.Clone = call i32 @spec_read(i32 %9, i8* %add.ptr.fill_inbuf.Clone, i32 %sub.fill_inbuf.Clone)
  store i32 %call1.fill_inbuf.Clone, i32* %len.fill_inbuf.Clone, align 4
  %10 = load i32, i32* %len.fill_inbuf.Clone, align 4
  %cmp.fill_inbuf.Clone = icmp eq i32 %10, 0
  br i1 %cmp.fill_inbuf.Clone, label %if.then.fill_inbuf.Clone, label %lor.lhs.false.fill_inbuf.Clone

lor.lhs.false.fill_inbuf.Clone:                   ; preds = %do.body.fill_inbuf.Clone
  %11 = load i32, i32* %len.fill_inbuf.Clone, align 4
  %cmp2.fill_inbuf.Clone = icmp eq i32 %11, -1
  br i1 %cmp2.fill_inbuf.Clone, label %if.then.fill_inbuf.Clone, label %if.end.fill_inbuf.Clone

if.then.fill_inbuf.Clone:                         ; preds = %lor.lhs.false.fill_inbuf.Clone, %do.body.fill_inbuf.Clone
  br label %do.end.fill_inbuf.Clone

if.end.fill_inbuf.Clone:                          ; preds = %lor.lhs.false.fill_inbuf.Clone
  %12 = load i32, i32* %len.fill_inbuf.Clone, align 4
  %13 = load i32, i32* @insize, align 4
  %add.fill_inbuf.Clone = add i32 %13, %12
  store i32 %add.fill_inbuf.Clone, i32* @insize, align 4
  br label %do.cond.fill_inbuf.Clone

do.cond.fill_inbuf.Clone:                         ; preds = %if.end.fill_inbuf.Clone
  %14 = load i32, i32* @insize, align 4
  %cmp3.fill_inbuf.Clone = icmp ult i32 %14, 32768
  br i1 %cmp3.fill_inbuf.Clone, label %do.body.fill_inbuf.Clone, label %do.end.fill_inbuf.Clone

do.end.fill_inbuf.Clone:                          ; preds = %do.cond.fill_inbuf.Clone, %if.then.fill_inbuf.Clone
  %15 = load i32, i32* @insize, align 4
  %cmp4.fill_inbuf.Clone = icmp eq i32 %15, 0
  br i1 %cmp4.fill_inbuf.Clone, label %if.then5.fill_inbuf.Clone, label %if.end8.fill_inbuf.Clone

if.then5.fill_inbuf.Clone:                        ; preds = %do.end.fill_inbuf.Clone
  %16 = load i32, i32* %eof_ok.addr.fill_inbuf.Clone, align 4
  %tobool.fill_inbuf.Clone = icmp ne i32 %16, 0
  br i1 %tobool.fill_inbuf.Clone, label %if.then6.fill_inbuf.Clone, label %if.end7.fill_inbuf.Clone

if.then6.fill_inbuf.Clone:                        ; preds = %if.then5.fill_inbuf.Clone
  store i32 -1, i32* %retval.fill_inbuf.Clone, align 4
  br label %return.fill_inbuf.Clone

if.end7.fill_inbuf.Clone:                         ; preds = %if.then5.fill_inbuf.Clone
  br label %entry.read_error.Clone

entry.read_error.Clone:                           ; preds = %if.end7.fill_inbuf.Clone
  %17 = load i8*, i8** @progname, align 4
  %call.read_error.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx.read_error.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call.read_error.Clone, i32 2
  %call1.read_error.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.read_error.Clone, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"??_C@_05CDHFJGNI@?6?$CFs?3?5?$AA@", i32 0, i32 0), i8* %17)
  %call2.read_error.Clone = call i32* @_errno()
  %18 = load i32, i32* %call2.read_error.Clone, align 4
  %cmp.read_error.Clone = icmp ne i32 %18, 0
  br i1 %cmp.read_error.Clone, label %if.then.read_error.Clone, label %if.else.read_error.Clone

if.then.read_error.Clone:                         ; preds = %entry.read_error.Clone
  call void @perror(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone

if.else.read_error.Clone:                         ; preds = %entry.read_error.Clone
  %call3.read_error.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx4.read_error.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.read_error.Clone, i32 2
  %call5.read_error.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx4.read_error.Clone, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"??_C@_0BM@KHMAANKF@?$CFs?3?5unexpected?5end?5of?5file?6?$AA@", i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ifname, i32 0, i32 0))
  br label %if.end.read_error.Clone

if.end.read_error.Clone:                          ; preds = %if.else.read_error.Clone, %if.then.read_error.Clone
  br label %entry.abort_gzip.Clone

entry.abort_gzip.Clone:                           ; preds = %if.end.read_error.Clone
  %19 = load i32, i32* @remove_ofname, align 4
  %tobool.abort_gzip.Clone = icmp ne i32 %19, 0
  br i1 %tobool.abort_gzip.Clone, label %if.then.abort_gzip.Clone, label %if.end.abort_gzip.Clone

if.then.abort_gzip.Clone:                         ; preds = %entry.abort_gzip.Clone
  %20 = load i32, i32* @ofd, align 4
  %call.abort_gzip.Clone = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 %20)
  %call1.abort_gzip.Clone = call i32 @unlink(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @ofname, i32 0, i32 0))
  br label %if.end.abort_gzip.Clone

if.end.abort_gzip.Clone:                          ; preds = %if.then.abort_gzip.Clone, %entry.abort_gzip.Clone
  br label %entry.do_exit.Clone

entry.do_exit.Clone:                              ; preds = %if.end.abort_gzip.Clone
  %exitcode.addr.do_exit.Clone = alloca i32, align 4
  store i32 1, i32* %exitcode.addr.do_exit.Clone, align 4
  %21 = load i32, i32* @do_exit.in_exit, align 4
  %tobool.do_exit.Clone = icmp ne i32 %21, 0
  br i1 %tobool.do_exit.Clone, label %if.then.do_exit.Clone, label %if.end.do_exit.Clone

if.then.do_exit.Clone:                            ; preds = %entry.do_exit.Clone
  %22 = load i32, i32* %exitcode.addr.do_exit.Clone, align 4
  call void @exit(i32 %22) #7
  unreachable

if.end.do_exit.Clone:                             ; preds = %entry.do_exit.Clone
  store i32 1, i32* @do_exit.in_exit, align 4
  %23 = load i8*, i8** @env, align 4
  %cmp.do_exit.Clone = icmp ne i8* %23, null
  br i1 %cmp.do_exit.Clone, label %if.then1.do_exit.Clone, label %if.end2.do_exit.Clone

if.then1.do_exit.Clone:                           ; preds = %if.end.do_exit.Clone
  %24 = load i8*, i8** @env, align 4
  call void @free(i8* %24) #2
  store i8* null, i8** @env, align 4
  br label %if.end2.do_exit.Clone

if.end2.do_exit.Clone:                            ; preds = %if.then1.do_exit.Clone, %if.end.do_exit.Clone
  %25 = load i8**, i8*** @args, align 4
  %cmp3.do_exit.Clone = icmp ne i8** %25, null
  br i1 %cmp3.do_exit.Clone, label %if.then4.do_exit.Clone, label %if.end5.do_exit.Clone

if.then4.do_exit.Clone:                           ; preds = %if.end2.do_exit.Clone
  %26 = load i8**, i8*** @args, align 4
  %27 = bitcast i8** %26 to i8*
  call void @free(i8* %27) #2
  store i8** null, i8*** @args, align 4
  br label %if.end5.do_exit.Clone

if.end5.do_exit.Clone:                            ; preds = %if.then4.do_exit.Clone, %if.end2.do_exit.Clone
  %28 = load i32, i32* %exitcode.addr.do_exit.Clone, align 4
  call void @exit(i32 %28) #7
  unreachable

return.do_exit.Clone:                             ; No predecessors!
  br label %if.end.abort_gzip.Clone.Split

if.end.abort_gzip.Clone.Split:                    ; preds = %return.do_exit.Clone
  br label %if.end.read_error.Clone.Split

if.end.read_error.Clone.Split:                    ; preds = %if.end.abort_gzip.Clone.Split
  br label %if.end7.fill_inbuf.Clone.Split

if.end7.fill_inbuf.Clone.Split:                   ; preds = %if.end.read_error.Clone.Split
  br label %if.end8.fill_inbuf.Clone

if.end8.fill_inbuf.Clone:                         ; preds = %if.end7.fill_inbuf.Clone.Split, %do.end.fill_inbuf.Clone
  %29 = load i32, i32* @insize, align 4
  %30 = load i32, i32* @bytes_in, align 4
  %add9.fill_inbuf.Clone = add i32 %30, %29
  store i32 %add9.fill_inbuf.Clone, i32* @bytes_in, align 4
  store i32 1, i32* @inptr, align 4
  %31 = load i8, i8* getelementptr inbounds ([32832 x i8], [32832 x i8]* @inbuf, i32 0, i32 0), align 1
  %conv.fill_inbuf.Clone = zext i8 %31 to i32
  store i32 %conv.fill_inbuf.Clone, i32* %retval.fill_inbuf.Clone, align 4
  br label %return.fill_inbuf.Clone

return.fill_inbuf.Clone:                          ; preds = %if.end8.fill_inbuf.Clone, %if.then6.fill_inbuf.Clone
  %32 = load i32, i32* %retval.fill_inbuf.Clone, align 4
  store i32 %32, i32* %RetValuePtr
  br label %cond.false189.Clone.Split

cond.false189.Clone.Split:                        ; preds = %return.fill_inbuf.Clone
  %RetValue = load i32, i32* %RetValuePtr
  br label %cond.end191.Clone

for.end197.Clone:                                 ; preds = %for.cond179.Clone
  %arraydecay198.Clone = getelementptr inbounds [16 x i8], [16 x i8]* %buf.Clone, i32 0, i32 0
  %add.ptr199.Clone = getelementptr inbounds i8, i8* %arraydecay198.Clone, i32 4
  %arrayidx200.Clone = getelementptr inbounds i8, i8* %add.ptr199.Clone, i32 0
  %33 = load i8, i8* %arrayidx200.Clone, align 1
  %conv201.Clone = zext i8 %33 to i16
  %conv202.Clone = zext i16 %conv201.Clone to i32
  %arraydecay203.Clone = getelementptr inbounds [16 x i8], [16 x i8]* %buf.Clone, i32 0, i32 0
  %add.ptr204.Clone = getelementptr inbounds i8, i8* %arraydecay203.Clone, i32 4
  %arrayidx205.Clone = getelementptr inbounds i8, i8* %add.ptr204.Clone, i32 1
  %34 = load i8, i8* %arrayidx205.Clone, align 1
  %conv206.Clone = zext i8 %34 to i16
  %conv207.Clone = zext i16 %conv206.Clone to i32
  %shl208.Clone = shl i32 %conv207.Clone, 8
  %or209.Clone = or i32 %conv202.Clone, %shl208.Clone
  %arraydecay210.Clone = getelementptr inbounds [16 x i8], [16 x i8]* %buf.Clone, i32 0, i32 0
  %add.ptr211.Clone = getelementptr inbounds i8, i8* %arraydecay210.Clone, i32 4
  %add.ptr212.Clone = getelementptr inbounds i8, i8* %add.ptr211.Clone, i32 2
  %arrayidx213.Clone = getelementptr inbounds i8, i8* %add.ptr212.Clone, i32 0
  %35 = load i8, i8* %arrayidx213.Clone, align 1
  %conv214.Clone = zext i8 %35 to i16
  %conv215.Clone = zext i16 %conv214.Clone to i32
  %arraydecay216.Clone = getelementptr inbounds [16 x i8], [16 x i8]* %buf.Clone, i32 0, i32 0
  %add.ptr217.Clone = getelementptr inbounds i8, i8* %arraydecay216.Clone, i32 4
  %add.ptr218.Clone = getelementptr inbounds i8, i8* %add.ptr217.Clone, i32 2
  %arrayidx219.Clone = getelementptr inbounds i8, i8* %add.ptr218.Clone, i32 1
  %36 = load i8, i8* %arrayidx219.Clone, align 1
  %conv220.Clone = zext i8 %36 to i16
  %conv221.Clone = zext i16 %conv220.Clone to i32
  %shl222.Clone = shl i32 %conv221.Clone, 8
  %or223.Clone = or i32 %conv215.Clone, %shl222.Clone
  %shl224.Clone = shl i32 %or223.Clone, 16
  %or225.Clone = or i32 %or209.Clone, %shl224.Clone
  store i32 %or225.Clone, i32* %orig_crc.Clone, align 4
  %arraydecay226.Clone = getelementptr inbounds [16 x i8], [16 x i8]* %buf.Clone, i32 0, i32 0
  %add.ptr227.Clone = getelementptr inbounds i8, i8* %arraydecay226.Clone, i32 12
  %arrayidx228.Clone = getelementptr inbounds i8, i8* %add.ptr227.Clone, i32 0
  %37 = load i8, i8* %arrayidx228.Clone, align 1
  %conv229.Clone = zext i8 %37 to i16
  %conv230.Clone = zext i16 %conv229.Clone to i32
  %arraydecay231.Clone = getelementptr inbounds [16 x i8], [16 x i8]* %buf.Clone, i32 0, i32 0
  %add.ptr232.Clone = getelementptr inbounds i8, i8* %arraydecay231.Clone, i32 12
  %arrayidx233.Clone = getelementptr inbounds i8, i8* %add.ptr232.Clone, i32 1
  %38 = load i8, i8* %arrayidx233.Clone, align 1
  %conv234.Clone = zext i8 %38 to i16
  %conv235.Clone = zext i16 %conv234.Clone to i32
  %shl236.Clone = shl i32 %conv235.Clone, 8
  %or237.Clone = or i32 %conv230.Clone, %shl236.Clone
  %arraydecay238.Clone = getelementptr inbounds [16 x i8], [16 x i8]* %buf.Clone, i32 0, i32 0
  %add.ptr239.Clone = getelementptr inbounds i8, i8* %arraydecay238.Clone, i32 12
  %add.ptr240.Clone = getelementptr inbounds i8, i8* %add.ptr239.Clone, i32 2
  %arrayidx241.Clone = getelementptr inbounds i8, i8* %add.ptr240.Clone, i32 0
  %39 = load i8, i8* %arrayidx241.Clone, align 1
  %conv242.Clone = zext i8 %39 to i16
  %conv243.Clone = zext i16 %conv242.Clone to i32
  %arraydecay244.Clone = getelementptr inbounds [16 x i8], [16 x i8]* %buf.Clone, i32 0, i32 0
  %add.ptr245.Clone = getelementptr inbounds i8, i8* %arraydecay244.Clone, i32 12
  %add.ptr246.Clone = getelementptr inbounds i8, i8* %add.ptr245.Clone, i32 2
  %arrayidx247.Clone = getelementptr inbounds i8, i8* %add.ptr246.Clone, i32 1
  %40 = load i8, i8* %arrayidx247.Clone, align 1
  %conv248.Clone = zext i8 %40 to i16
  %conv249.Clone = zext i16 %conv248.Clone to i32
  %shl250.Clone = shl i32 %conv249.Clone, 8
  %or251.Clone = or i32 %conv243.Clone, %shl250.Clone
  %shl252.Clone = shl i32 %or251.Clone, 16
  %or253.Clone = or i32 %or237.Clone, %shl252.Clone
  store i32 %or253.Clone, i32* %orig_len.Clone, align 4
  br label %OutFuncRetBB

OutFuncRetBB:                                     ; preds = %for.end197.Clone
  %41 = getelementptr inbounds %Struct.RetValue.41, %Struct.RetValue.41* @Struct.RetValue.51, i32 0, i32 0
  store i32* %n.Clone, i32** %41, align 4
  %42 = getelementptr inbounds %Struct.RetValue.41, %Struct.RetValue.41* @Struct.RetValue.51, i32 0, i32 1
  store i32* %orig_crc.Clone, i32** %42, align 4
  %43 = getelementptr inbounds %Struct.RetValue.41, %Struct.RetValue.41* @Struct.RetValue.51, i32 0, i32 2
  store i32* %orig_len.Clone, i32** %43, align 4
  ret void
}

define void @if.end.OutLineFunc.53(i8** %OutFuncArg, i8** %OutFuncArg1) {
entry:
  %OutFuncArg.addr = alloca i8**, align 4
  store i8** %OutFuncArg, i8*** %OutFuncArg.addr, align 4
  %p.Clone = load i8**, i8*** %OutFuncArg.addr, align 4
  %OutFuncArg1.addr = alloca i8**, align 4
  store i8** %OutFuncArg1, i8*** %OutFuncArg1.addr, align 4
  %name.addr.Clone = load i8**, i8*** %OutFuncArg1.addr, align 4
  br label %if.end.Clone

if.end.Clone:                                     ; preds = %entry
  %0 = load i8*, i8** %p.Clone, align 4
  %1 = load i8*, i8** %name.addr.Clone, align 4
  %cmp1.Clone = icmp eq i8* %0, %1
  br i1 %cmp1.Clone, label %if.then2.Clone, label %if.end3.Clone

if.then2.Clone:                                   ; preds = %if.end.Clone
  %2 = load i8*, i8** %p.Clone, align 4
  %incdec.ptr.Clone = getelementptr inbounds i8, i8* %2, i32 1
  store i8* %incdec.ptr.Clone, i8** %p.Clone, align 4
  br label %if.end3.Clone

if.end3.Clone:                                    ; preds = %if.then2.Clone, %if.end.Clone
  br label %OutFuncRetBB

OutFuncRetBB:                                     ; preds = %if.end3.Clone
  %3 = getelementptr inbounds %Struct.RetValue.42, %Struct.RetValue.42* @Struct.RetValue.52, i32 0, i32 0
  store i8** %p.Clone, i8*** %3, align 4
  ret void
}

define void @while.cond.OutLineFunc.55(i8** %OutFuncArg) {
entry:
  %OutFuncArg.addr = alloca i8**, align 4
  store i8** %OutFuncArg, i8*** %OutFuncArg.addr, align 4
  %p.Clone = load i8**, i8*** %OutFuncArg.addr, align 4
  br label %while.cond.Clone

while.cond.Clone:                                 ; preds = %entry, %while.body.Clone
  %0 = load i8*, i8** %p.Clone, align 4
  %incdec.ptr38.Clone = getelementptr inbounds i8, i8* %0, i32 1
  store i8* %incdec.ptr38.Clone, i8** %p.Clone, align 4
  %1 = load i8, i8* %0, align 1
  %tobool39.Clone = icmp ne i8 %1, 0
  br i1 %tobool39.Clone, label %while.body.Clone, label %while.end.Clone

while.body.Clone:                                 ; preds = %while.cond.Clone
  br label %while.cond.Clone

while.end.Clone:                                  ; preds = %while.cond.Clone
  br label %OutFuncRetBB

OutFuncRetBB:                                     ; preds = %while.end.Clone
  %2 = getelementptr inbounds %Struct.RetValue.43, %Struct.RetValue.43* @Struct.RetValue.54, i32 0, i32 0
  store i8** %p.Clone, i8*** %2, align 4
  ret void
}

define void @if.else.OutLineFunc.57(i32* %OutFuncArg, i32* %OutFuncArg1, i32* %OutFuncArg2) {
entry:
  %OutFuncArg.addr = alloca i32*, align 4
  store i32* %OutFuncArg, i32** %OutFuncArg.addr, align 4
  %den.addr.Clone = load i32*, i32** %OutFuncArg.addr, align 4
  %OutFuncArg1.addr = alloca i32*, align 4
  store i32* %OutFuncArg1, i32** %OutFuncArg1.addr, align 4
  %num.addr.Clone = load i32*, i32** %OutFuncArg1.addr, align 4
  %OutFuncArg2.addr = alloca i32*, align 4
  store i32* %OutFuncArg2, i32** %OutFuncArg2.addr, align 4
  %ratio.Clone = load i32*, i32** %OutFuncArg2.addr, align 4
  br label %if.else.Clone

if.else.Clone:                                    ; preds = %entry
  %0 = load i32, i32* %den.addr.Clone, align 4
  %cmp1.Clone = icmp slt i32 %0, 2147483
  br i1 %cmp1.Clone, label %if.then2.Clone, label %if.else3.Clone

if.then2.Clone:                                   ; preds = %if.else.Clone
  %1 = load i32, i32* %num.addr.Clone, align 4
  %mul.Clone = mul nsw i32 1000, %1
  %2 = load i32, i32* %den.addr.Clone, align 4
  %div.Clone = sdiv i32 %mul.Clone, %2
  store i32 %div.Clone, i32* %ratio.Clone, align 4
  br label %if.end.Clone

if.else3.Clone:                                   ; preds = %if.else.Clone
  %3 = load i32, i32* %num.addr.Clone, align 4
  %4 = load i32, i32* %den.addr.Clone, align 4
  %div4.Clone = sdiv i32 %4, 1000
  %div5.Clone = sdiv i32 %3, %div4.Clone
  store i32 %div5.Clone, i32* %ratio.Clone, align 4
  br label %if.end.Clone

if.end.Clone:                                     ; preds = %if.else3.Clone, %if.then2.Clone
  br label %OutFuncRetBB

OutFuncRetBB:                                     ; preds = %if.end.Clone
  %5 = getelementptr inbounds %Struct.RetValue.44, %Struct.RetValue.44* @Struct.RetValue.56, i32 0, i32 0
  store i32* %ratio.Clone, i32** %5, align 4
  ret void
}

define void @if.end90.OutLineFunc(i32* %OutFuncArg, i16* %OutFuncArg1, i16* %OutFuncArg2) {
entry:
  %OutFuncArg.addr = alloca i32*, align 4
  store i32* %OutFuncArg, i32** %OutFuncArg.addr, align 4
  %out.addr.Clone = load i32*, i32** %OutFuncArg.addr, align 4
  %OutFuncArg1.addr = alloca i16*, align 4
  store i16* %OutFuncArg1, i16** %OutFuncArg1.addr, align 4
  %attr.Clone = load i16*, i16** %OutFuncArg1.addr, align 4
  %OutFuncArg2.addr = alloca i16*, align 4
  store i16* %OutFuncArg2, i16** %OutFuncArg2.addr, align 4
  %deflate_flags.Clone = load i16*, i16** %OutFuncArg2.addr, align 4
  %RetValuePtr = alloca i32, align 4
  br label %if.end90.Clone

if.end90.Clone:                                   ; preds = %entry
  %call.Clone = call i32 bitcast (i32 (i8*, i32)* @updcrc to i32 (i32, i32)*)(i32 0, i32 0)
  store i32 %call.Clone, i32* @crc, align 4
  %0 = load i32, i32* %out.addr.Clone, align 4
  call void @bi_init(i32 %0)
  call void @ct_init(i16* %attr.Clone, i32* @method)
  %1 = load i32, i32* @level, align 4
  call void @lm_init(i32 %1, i16* %deflate_flags.Clone)
  %2 = load i16, i16* %deflate_flags.Clone, align 2
  %conv91.Clone = trunc i16 %2 to i8
  %3 = load i32, i32* @outcnt, align 4
  %inc92.Clone = add i32 %3, 1
  store i32 %inc92.Clone, i32* @outcnt, align 4
  %arrayidx93.Clone = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([18432 x i8]* @outbuf to [0 x i8]*), i32 0, i32 %3
  store i8 %conv91.Clone, i8* %arrayidx93.Clone, align 1
  %4 = load i32, i32* @outcnt, align 4
  %cmp94.Clone = icmp eq i32 %4, 16384
  br i1 %cmp94.Clone, label %if.then96.Clone, label %if.end97.Clone

if.then96.Clone:                                  ; preds = %if.end90.Clone
  br label %entry.flush_outbuf.Clone

entry.flush_outbuf.Clone:                         ; preds = %if.then96.Clone
  %5 = load i32, i32* @outcnt, align 4
  %cmp.flush_outbuf.Clone = icmp eq i32 %5, 0
  br i1 %cmp.flush_outbuf.Clone, label %if.then.flush_outbuf.Clone, label %if.end.flush_outbuf.Clone

if.then.flush_outbuf.Clone:                       ; preds = %entry.flush_outbuf.Clone
  br label %return.flush_outbuf.Clone

if.end.flush_outbuf.Clone:                        ; preds = %entry.flush_outbuf.Clone
  %6 = load i32, i32* @outcnt, align 4
  %7 = load i32, i32* @ofd, align 4
  br label %entry.write_buf.Clone

entry.write_buf.Clone:                            ; preds = %if.end.flush_outbuf.Clone
  %cnt.addr.write_buf.Clone = alloca i32, align 4
  %buf.addr.write_buf.Clone = alloca i8*, align 4
  %fd.addr.write_buf.Clone = alloca i32, align 4
  %n.write_buf.Clone = alloca i32, align 4
  store i32 %6, i32* %cnt.addr.write_buf.Clone, align 4
  store i8* getelementptr inbounds ([18432 x i8], [18432 x i8]* @outbuf, i32 0, i32 0), i8** %buf.addr.write_buf.Clone, align 4
  store i32 %7, i32* %fd.addr.write_buf.Clone, align 4
  br label %while.cond.write_buf.Clone

while.cond.write_buf.Clone:                       ; preds = %if.end.write_buf.Clone, %entry.write_buf.Clone
  %8 = load i32, i32* %cnt.addr.write_buf.Clone, align 4
  %9 = load i8*, i8** %buf.addr.write_buf.Clone, align 4
  %10 = load i32, i32* %fd.addr.write_buf.Clone, align 4
  br label %entry.spec_write.Clone

entry.spec_write.Clone:                           ; preds = %while.cond.write_buf.Clone
  %size.addr.spec_write.Clone = alloca i32, align 4
  %buf.addr.spec_write.Clone = alloca i8*, align 4
  %fd.addr.spec_write.Clone = alloca i32, align 4
  store i32 %8, i32* %size.addr.spec_write.Clone, align 4
  store i8* %9, i8** %buf.addr.spec_write.Clone, align 4
  store i32 %10, i32* %fd.addr.spec_write.Clone, align 4
  %11 = load i32, i32* @dbglvl, align 4
  %cmp.spec_write.Clone = icmp slt i32 4, %11
  br i1 %cmp.spec_write.Clone, label %if.then.spec_write.Clone, label %if.end.spec_write.Clone

if.then.spec_write.Clone:                         ; preds = %entry.spec_write.Clone
  %12 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %13 = load i8*, i8** %buf.addr.spec_write.Clone, align 4
  %14 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %call.spec_write.Clone = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @"??_C@_0BK@GKFGHPHN@spec_write?3?5?$CFd?0?5?$CFx?0?5?$CFd?5?$DN?5?$AA@", i32 0, i32 0), i32 %14, i8* %13, i32 %12)
  br label %if.end.spec_write.Clone

if.end.spec_write.Clone:                          ; preds = %if.then.spec_write.Clone, %entry.spec_write.Clone
  %15 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %cmp1.spec_write.Clone = icmp sgt i32 %15, 3
  br i1 %cmp1.spec_write.Clone, label %if.then2.spec_write.Clone, label %if.end5.spec_write.Clone

if.then2.spec_write.Clone:                        ; preds = %if.end.spec_write.Clone
  %16 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %call3.spec_write.Clone = call %struct._iobuf* @__iob_func()
  %arrayidx.spec_write.Clone = getelementptr inbounds %struct._iobuf, %struct._iobuf* %call3.spec_write.Clone, i32 2
  %call4.spec_write.Clone = call i32 (%struct._iobuf*, i8*, ...) @fprintf(%struct._iobuf* %arrayidx.spec_write.Clone, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"??_C@_0CD@NANFEFEM@spec_write?3?5fd?$DN?$CFd?0?5?$DO?5MAX_SPEC_FD@", i32 0, i32 0), i32 %16)
  call void @exit(i32 1) #7
  unreachable

if.end5.spec_write.Clone:                         ; preds = %if.end.spec_write.Clone
  %17 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx6.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %17
  %buf7.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx6.spec_write.Clone, i32 0, i32 3
  %18 = load i8*, i8** %buf7.spec_write.Clone, align 4
  %19 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx8.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %19
  %pos.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx8.spec_write.Clone, i32 0, i32 2
  %20 = load i32, i32* %pos.spec_write.Clone, align 4
  %arrayidx9.spec_write.Clone = getelementptr inbounds i8, i8* %18, i32 %20
  %21 = load i8*, i8** %buf.addr.spec_write.Clone, align 4
  %22 = load i32, i32* %size.addr.spec_write.Clone, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %arrayidx9.spec_write.Clone, i8* align 1 %21, i32 %22, i1 false)
  %23 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %24 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx10.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %24
  %len.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx10.spec_write.Clone, i32 0, i32 1
  %25 = load i32, i32* %len.spec_write.Clone, align 4
  %add.spec_write.Clone = add nsw i32 %25, %23
  store i32 %add.spec_write.Clone, i32* %len.spec_write.Clone, align 4
  %26 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %27 = load i32, i32* %fd.addr.spec_write.Clone, align 4
  %arrayidx11.spec_write.Clone = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i32 0, i32 %27
  %pos12.spec_write.Clone = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx11.spec_write.Clone, i32 0, i32 2
  %28 = load i32, i32* %pos12.spec_write.Clone, align 4
  %add13.spec_write.Clone = add nsw i32 %28, %26
  store i32 %add13.spec_write.Clone, i32* %pos12.spec_write.Clone, align 4
  %29 = load i32, i32* @dbglvl, align 4
  %cmp14.spec_write.Clone = icmp slt i32 4, %29
  br i1 %cmp14.spec_write.Clone, label %if.then15.spec_write.Clone, label %if.end17.spec_write.Clone

if.then15.spec_write.Clone:                       ; preds = %if.end5.spec_write.Clone
  %30 = load i32, i32* %size.addr.spec_write.Clone, align 4
  %call16.spec_write.Clone = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"??_C@_03PMGGPEJJ@?$CFd?6?$AA@", i32 0, i32 0), i32 %30)
  br label %if.end17.spec_write.Clone

if.end17.spec_write.Clone:                        ; preds = %if.then15.spec_write.Clone, %if.end5.spec_write.Clone
  %31 = load i32, i32* %size.addr.spec_write.Clone, align 4
  store i32 %31, i32* %RetValuePtr
  br label %while.cond.write_buf.Clone.Split

while.cond.write_buf.Clone.Split:                 ; preds = %if.end17.spec_write.Clone
  %RetValue = load i32, i32* %RetValuePtr
  store i32 %RetValue, i32* %n.write_buf.Clone, align 4
  %32 = load i32, i32* %cnt.addr.write_buf.Clone, align 4
  %cmp.write_buf.Clone = icmp ne i32 %RetValue, %32
  br i1 %cmp.write_buf.Clone, label %while.body.write_buf.Clone, label %while.end.write_buf.Clone

while.body.write_buf.Clone:                       ; preds = %while.cond.write_buf.Clone.Split
  %33 = load i32, i32* %n.write_buf.Clone, align 4
  %cmp1.write_buf.Clone = icmp eq i32 %33, -1
  br i1 %cmp1.write_buf.Clone, label %if.then.write_buf.Clone, label %if.end.write_buf.Clone

if.then.write_buf.Clone:                          ; preds = %while.body.write_buf.Clone
  call void @write_error()
  br label %if.end.write_buf.Clone

if.end.write_buf.Clone:                           ; preds = %if.then.write_buf.Clone, %while.body.write_buf.Clone
  %34 = load i32, i32* %n.write_buf.Clone, align 4
  %35 = load i32, i32* %cnt.addr.write_buf.Clone, align 4
  %sub.write_buf.Clone = sub i32 %35, %34
  store i32 %sub.write_buf.Clone, i32* %cnt.addr.write_buf.Clone, align 4
  %36 = load i8*, i8** %buf.addr.write_buf.Clone, align 4
  %37 = load i32, i32* %n.write_buf.Clone, align 4
  %add.ptr.write_buf.Clone = getelementptr inbounds i8, i8* %36, i32 %37
  store i8* %add.ptr.write_buf.Clone, i8** %buf.addr.write_buf.Clone, align 4
  br label %while.cond.write_buf.Clone

while.end.write_buf.Clone:                        ; preds = %while.cond.write_buf.Clone.Split
  br label %if.end.flush_outbuf.Clone.Split

if.end.flush_outbuf.Clone.Split:                  ; preds = %while.end.write_buf.Clone
  %38 = load i32, i32* @outcnt, align 4
  %39 = load i32, i32* @bytes_out, align 4
  %add.flush_outbuf.Clone = add i32 %39, %38
  store i32 %add.flush_outbuf.Clone, i32* @bytes_out, align 4
  store i32 0, i32* @outcnt, align 4
  br label %return.flush_outbuf.Clone

return.flush_outbuf.Clone:                        ; preds = %if.end.flush_outbuf.Clone.Split, %if.then.flush_outbuf.Clone
  br label %if.then96.Clone.Split

if.then96.Clone.Split:                            ; preds = %return.flush_outbuf.Clone
  br label %if.end97.Clone

if.end97.Clone:                                   ; preds = %if.then96.Clone.Split, %if.end90.Clone
  br label %OutFuncRetBB

OutFuncRetBB:                                     ; preds = %if.end97.Clone
  ret void
}

attributes #0 = { noinline nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="pentium4" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noinline optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="pentium4" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="pentium4" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="pentium4" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="pentium4" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="pentium4" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn }
attributes #8 = { nounwind readonly }

!llvm.linker.options = !{!0, !1, !0, !1, !0, !1, !0, !1, !0, !1, !0, !1, !0, !1, !0, !1, !0, !1, !0, !1, !0, !1, !0, !1, !0, !1, !0, !1}
!llvm.ident = !{!2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2}
!llvm.module.flags = !{!3, !4}

!0 = !{!"/DEFAULTLIB:msvcrtd.lib"}
!1 = !{!"/DEFAULTLIB:oldnames.lib"}
!2 = !{!"Obfuscator-LLVM clang version 8.0.1 (tags/RELEASE_801/final) (based on Obfuscator-LLVM 8.0.1)"}
!3 = !{i32 1, !"NumRegisterParameters", i32 0}
!4 = !{i32 1, !"wchar_size", i32 2}
