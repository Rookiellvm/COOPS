; ModuleID = './input/rsa.bc'
source_filename = "llvm-link"
target datalayout = "e-m:x-p:32:32-i64:64-f80:32-n8:16:32-a:0:32-S32"
target triple = "i686-pc-windows-msvc16.0.0"

%Struct.RetValue = type <{ i32* }>
%Struct.RetValue.0 = type <{ i32*, i32*, i64* }>
%Struct.RetValue.1 = type <{ i32*, i32*, i32*, i32* }>
%Struct.RetValue.2 = type <{ i32*, i64*, i32*, i32*, i32*, i32* }>
%Struct.RetValue.3 = type <{ i32*, i32*, i32*, i32* }>
%Struct.RetValue.4 = type <{ i32* }>
%Struct.RetValue.5 = type <{ i32*, i8*, i32*, i32* }>
%Struct.RetValue.6 = type <{ i32* }>
%Struct.RetValue.7 = type <{ i32* }>
%struct.rsa_pk_t = type { i32, [256 x i8], [256 x i8] }
%struct.rsa_sk_t = type { i32, [256 x i8], [256 x i8], [256 x i8], [128 x i8], [128 x i8], [128 x i8], [128 x i8], [128 x i8] }
%struct._iobuf = type { i8*, i32, i8*, i32, i32, i32, i32, i8* }

$"??_C@_08GMFBNBBA@?$CFs?$FL?$CFd?$FN?3?5?$AA@" = comdat any

$"??_C@_04JFFKLGJF@?$CF02X?$AA@" = comdat any

$"??_C@_01EEMJAFIK@?6?$AA@" = comdat any

$"??_C@_02DKCKIIND@?$CFs?$AA@" = comdat any

$"??_C@_08OPCGNDGK@PK?$FL?$CFd?$FN?3?6?$AA@" = comdat any

$"??_C@_0M@NMEDBGMP@?5?5modulus?3?5?$AA@" = comdat any

$"??_C@_0N@JLCGLEPG@?5?5exponent?3?5?$AA@" = comdat any

$"??_C@_08NGKLOPKP@SK?$FL?$CFd?$FN?3?6?$AA@" = comdat any

$"??_C@_0BD@HINABDEP@?5?5public_exponet?3?5?$AA@" = comdat any

$"??_C@_0L@EMBGKBID@?5?5prime1?3?5?$AA@" = comdat any

$"??_C@_0L@FOKDAOGN@?5?5prime2?3?5?$AA@" = comdat any

$"??_C@_0BD@DBOOPOHL@?5?5primeExponent1?3?5?$AA@" = comdat any

$"??_C@_0BD@CDFLFBJF@?5?5primeExponent2?3?5?$AA@" = comdat any

$"??_C@_0BA@BHHMNKPP@?5?5coefficient?3?5?$AA@" = comdat any

$"??_C@_06OGPOEGBJ@sk?4prv?$AA@" = comdat any

$"??_C@_03GHMILMGE@DEC?$AA@" = comdat any

$"??_C@_08NBICHAHH@DEC?3?5?$CFs?6?$AA@" = comdat any

$"??_C@_0CA@BAIGFOPC@rsa_private_decrypt?0?5ret?3?5?$CF04X?6?$AA@" = comdat any

$"??_C@_01NOFIACDB@w?$AA@" = comdat any

$"??_C@_0BD@DOBJINJI@CAN?5NOT?5OPEN?5FILE?6?$AA@" = comdat any

$"??_C@_0O@OBPALAEI@hello?5world?$CB?6?$AA@" = comdat any

$"??_C@_0BO@PAABOMNB@rsa_generate_keys?0?5ret?3?5?$CF04X?6?$AA@" = comdat any

$"??_C@_03GGAHOJCI@MSG?$AA@" = comdat any

$"??_C@_06OIICAIJO@PK?5ENC?$AA@" = comdat any

$"??_C@_0BP@OKHOIEME@rsa_public_encrypt?0?5ret?3?5?$CF04X?6?$AA@" = comdat any

$"??_C@_06GNIDJKIH@SK?5DEC?$AA@" = comdat any

$"??_C@_06NJGKBCAD@SK?5ENC?$AA@" = comdat any

$"??_C@_0CA@NPBGPOJI@rsa_private_encrypt?0?5ret?3?5?$CF04X?6?$AA@" = comdat any

$"??_C@_06FMGLIABK@PK?5DEC?$AA@" = comdat any

$"??_C@_0BP@CFOOCEKO@rsa_public_decrypt?0?5ret?3?5?$CF04X?6?$AA@" = comdat any

$"??_C@_0M@NPEDOHBA@?$CFf?5seconds?6?$AA@" = comdat any

$"??_C@_01KDCPPGHE@r?$AA@" = comdat any

@key_m = dso_local global [256 x i8] c"\B8\9Bc\7F3\EE\AD\06\18\9F\F1]\9D\C7\B8\E9\ADM7%\1F0\A4\BE=\C7\12\E9j\84\BC\AB6m\E8\12>\12\DD\0D\C3q\1E\0E*\BDWs\D4\D7\CDH\A0d\F9X\07H\DAI\80\A8\93`\AEt\A2m\96xfJ\D5\A0A\AA\A1<\10q\D3.\89\8E\0A\AC\F0\04\16t\AD\BF\7FP\B7\1C\9D\84\9D|\DC\AB\03\AC\D7h\B6Y\8C\15H\BA\07\A7\90\89\A9v\E2x\B5\E6\19\E3\C5\CD\C0\A1)\22$\D5B\B9\E3]\F7b\00\8ByV\BF?\E3v.g\EB\C3v\F8\ADt\1E\93\93\B5/\917\91\E2\D2\90J\B0\EF%x|\9A\06\D6\D1\C3LI*\F7\12\80\16b\0B\D4\A2\96\9F\1E9\FA)\A2\D9\1A\0E\0DdS\82)\18\8AYW\B0\ED\AD\F0\8E\17Z\9C\B6\A0\C7\96\C8M\1Eq\B2\1Cl\F0\95\FC\E6\C7\90I\04\F2\01\A7\8A\C4J\D4\95\FF\15k\A04 \FE\86\BBp\CC\AC\A9\C1\A7", align 1
@key_e = dso_local global [3 x i8] c"\01\00\01", align 1
@key_pe = dso_local global [256 x i8] c"\B6\96ZN\91\DA\DB\9FO\F3\C2\12\C9\DF\A4p\DBK\A7\E3;z-7Lz\FD\A5\88\09Ib>/n}\BC\8F\83\BB\FD6\80w\9A\A63=\09\A3x\13\011]\BDGW3/\C7\E4\F3\FF\88\0D,*\1F\CDm\BFN\93v\DF\81!\9BR9\81\A9\E3\A7\83l\D1^4\815\0A\83\96\D8\E2\A3+\F17\80\9D\DD\F2 K[>F>\EC`m\C7s\A0\FDH\FA\03OW\04\05\BC\7Fl7=\95\8A\06:\91a\1F\B5\06\FA\06?\03\D3\87\C6\C4\B5\C4\B3\99\E0\18\8B1=\00Y\E8\F9\A25SHFP\BB\E0V\D7\DF\92\E6\95g\09\D2\E5\F8\DF\A6\AC\99\C6(\89\10\C4\AF\0B?\D3\E4<\85\E5\137\8C\F7\B3\AF\C0\C6-\18\D2h\E1\1Fj#\E2X\CE&gyd\12i\AA\9DR\9E\BFW\DB\DD\DD\04\FB\C6\B1\FE\08\01Mk\87\18'\F19\94\1A\CF\EB\E6\FE\07\C3\FB\84z\A1", align 1
@key_p1 = dso_local global [128 x i8] c"\ED\89\0B\DC\BER\DC\0D1\9C?2\999\F3\8EV]\CB\D1Kz;\F8\A7ex\E9\AE%3\9C\0BR\EFL\97\DC\BF\92A\DC@\F6\82q\09\8E\FB4\9F\E7\13B)g\F0\EE\01\1ACJ\F3\EE\87w\F7\F0\DE\94\05\93\ACY\ADi\17,\01\1C\0F\1A(\D93\E1\E5\94\80\AE\B5\B9^\F9n`\07\A6\84R\12 \09 ~\8D\F5\19\DAS\F2\02\BF\F4\B5\0C\C3!\08\FF.$\D1\07p\1D\C9\0B", align 1
@key_p2 = dso_local global [128 x i8] c"\C6\F5\11k\CB\0C\05+\13@Mi\91\94\1BQ\B5n\E8\17{DR\B2\9B\1C=\E7\80E\C7\15\C0-\BD\E6d\83:\B4\F3/\95W\A2\00F\AE\D5\CF\FB\88\F1\F8\8E\83#\DCw\C1\E6\83;Nu\00#}\19\0E\0A`\9A\CE\F1V\B1\C0\C5G\F2?c\A2Z~\E9\00\0F\1C8\E3\17\A5\DCE\C9|W\ABh\8CH\1Ba\F4_{\A2\9C>\C4t\EF\C0\86E\F8\14j\9D\B1\F9\825\CC\A3U", align 1
@key_e1 = dso_local global [128 x i8] c">\02\BA\13\0D\A8\AA\03\D3\C0\BB\8A\E5\0F\88\F2\CE\BF;\D7N\C2\01g\FF\A3p\F6h]\13\E5\17\DB\B5\D7$\0A \04\F9\A6\9BZ\FF`\AD##\97pk-\CE\E6\EAX\AEy\A16\92\19\AEZ\B5J\08\1A\C3?\D5vx\0E\DAQ\8FNV\D9\E6ue\86\B2\E1qlJ\AF\ECM\CC\061\91\AD\B9\FB\86\F9\D0\08(\A1\BC\AB\DC p\1C\A1\AA+\9D\C2O\1C\7F)\B7\B8\CE\1DI\D9S", align 1
@key_e2 = dso_local global [128 x i8] c"\C5\09\E6S\F4\06\96\83\BF\90\1AZ\A8\03\9F>\BF\C9\F3\EFut\07\D6\BD\09.A\BCf\DE\B1*\DF\E2GoZ\0B\E53F\F7\C7\8F8h\C84\16\C3\CD/\9E\F3<\EBb'\F4\8F\9F~7\C8e\F7\BF\A7\F5\A0\CFe\E1\F7_\DD\B0\C5p\E8x`\EBdfu\C9J-\B0%/\C1b\B2v\C6?i\11\A4\84\B1!\C4\CC_|~\F3&\CB\8C\BA\06\00\FB\9C\F4\AD\F2\99\E1\9B\F8k\F5", align 1
@key_c = dso_local global [128 x i8] c"\CC\C6\BA\E9\80(\80\C6\C6u\9A`\B5@\0C8\B5oS\CD\AD%\13:U\8F\E3\17vo\F1\C3H:^c\07\AC\D0\C4\B4\BE\8BN3\00\97;@L\80F\1E\96\854'u\D1\E5\18\E0\11\F4\04\DD}\ADb\F0\FE\FC\D2\011\1E\22?\EC\BD-F\D9\C3Y\D2L4\F2\94\B9Ln3\88a0\0FwPEb\B1>s\F0\A2\EE\A9;\FE\E4.\C9\9A\F3\FCcBB\DF\B5x3qa+f", align 1
@hex_array = dso_local global [256 x i8] c"_\AFG\E5k<\B4\C2\E6\8D\F5\B6\89\BD\22\91\14\5C\97\C3\93\9C\D2\06\1A\82d\C6\CB\C1\F6A\9A\BB\84\E2\82]t\85\00V\8A\951~\9D\B9d\AD\CD\D1\99\DAL\CF\D6\94V^\95\E6\99 \19#U\CC\E7\DDzWi\9B]\ECN\07\F2\AE\C3v\F3\9F\A9\E2V\C8\D8\97\C6D\F8\BE,\22\9D;\8A\8D\D7@\9F%\96;\D9\C3\EF!\DEL,*\0C\D1>\06F\C3\B6\08\0F\BB\11\D8\B6d\FC\A1(\AA;\0E\CC\1E\C4Y\C8\A3\D7\C1\9FE\B9\ADd\07|\DEa\CB\A7\0FT\B7w\93S\DB8q\0E\D4n\C5\1A\96\0F\8A\14b3\B9E\82\10\AB\EE\9Dc\D7+\0C\09\E8\99\10\1C\10\F2\EB\22H\B1\A2G\C3\A0\CFuMK\CE\0Eo;d\7FR\09\02\FA;\15\DAH\89\9A\BD\D9~\96\93\CE\95\ABIn\22\A6\05\CAu\19T\FA\BB\DEX\9C1x\FAj\F9\19}t\08_\0F\E6\EEx\0C", align 1
@"??_C@_08GMFBNBBA@?$CFs?$FL?$CFd?$FN?3?5?$AA@" = linkonce_odr dso_local unnamed_addr constant [9 x i8] c"%s[%d]: \00", comdat, align 1
@"??_C@_04JFFKLGJF@?$CF02X?$AA@" = linkonce_odr dso_local unnamed_addr constant [5 x i8] c"%02X\00", comdat, align 1
@"??_C@_01EEMJAFIK@?6?$AA@" = linkonce_odr dso_local unnamed_addr constant [2 x i8] c"\0A\00", comdat, align 1
@"??_C@_02DKCKIIND@?$CFs?$AA@" = linkonce_odr dso_local unnamed_addr constant [3 x i8] c"%s\00", comdat, align 1
@"??_C@_08OPCGNDGK@PK?$FL?$CFd?$FN?3?6?$AA@" = linkonce_odr dso_local unnamed_addr constant [9 x i8] c"PK[%d]:\0A\00", comdat, align 1
@"??_C@_0M@NMEDBGMP@?5?5modulus?3?5?$AA@" = linkonce_odr dso_local unnamed_addr constant [12 x i8] c"  modulus: \00", comdat, align 1
@"??_C@_0N@JLCGLEPG@?5?5exponent?3?5?$AA@" = linkonce_odr dso_local unnamed_addr constant [13 x i8] c"  exponent: \00", comdat, align 1
@"??_C@_08NGKLOPKP@SK?$FL?$CFd?$FN?3?6?$AA@" = linkonce_odr dso_local unnamed_addr constant [9 x i8] c"SK[%d]:\0A\00", comdat, align 1
@"??_C@_0BD@HINABDEP@?5?5public_exponet?3?5?$AA@" = linkonce_odr dso_local unnamed_addr constant [19 x i8] c"  public_exponet: \00", comdat, align 1
@"??_C@_0L@EMBGKBID@?5?5prime1?3?5?$AA@" = linkonce_odr dso_local unnamed_addr constant [11 x i8] c"  prime1: \00", comdat, align 1
@"??_C@_0L@FOKDAOGN@?5?5prime2?3?5?$AA@" = linkonce_odr dso_local unnamed_addr constant [11 x i8] c"  prime2: \00", comdat, align 1
@"??_C@_0BD@DBOOPOHL@?5?5primeExponent1?3?5?$AA@" = linkonce_odr dso_local unnamed_addr constant [19 x i8] c"  primeExponent1: \00", comdat, align 1
@"??_C@_0BD@CDFLFBJF@?5?5primeExponent2?3?5?$AA@" = linkonce_odr dso_local unnamed_addr constant [19 x i8] c"  primeExponent2: \00", comdat, align 1
@"??_C@_0BA@BHHMNKPP@?5?5coefficient?3?5?$AA@" = linkonce_odr dso_local unnamed_addr constant [16 x i8] c"  coefficient: \00", comdat, align 1
@"??_C@_06OGPOEGBJ@sk?4prv?$AA@" = linkonce_odr dso_local unnamed_addr constant [7 x i8] c"sk.prv\00", comdat, align 1
@"??_C@_03GHMILMGE@DEC?$AA@" = linkonce_odr dso_local unnamed_addr constant [4 x i8] c"DEC\00", comdat, align 1
@"??_C@_08NBICHAHH@DEC?3?5?$CFs?6?$AA@" = linkonce_odr dso_local unnamed_addr constant [9 x i8] c"DEC: %s\0A\00", comdat, align 1
@"??_C@_0CA@BAIGFOPC@rsa_private_decrypt?0?5ret?3?5?$CF04X?6?$AA@" = linkonce_odr dso_local unnamed_addr constant [32 x i8] c"rsa_private_decrypt, ret: %04X\0A\00", comdat, align 1
@"??_C@_01NOFIACDB@w?$AA@" = linkonce_odr dso_local unnamed_addr constant [2 x i8] c"w\00", comdat, align 1
@"??_C@_0BD@DOBJINJI@CAN?5NOT?5OPEN?5FILE?6?$AA@" = linkonce_odr dso_local unnamed_addr constant [19 x i8] c"CAN NOT OPEN FILE\0A\00", comdat, align 1
@"??_C@_0O@OBPALAEI@hello?5world?$CB?6?$AA@" = linkonce_odr dso_local unnamed_addr constant [14 x i8] c"hello world!\0A\00", comdat, align 1
@"??_C@_0BO@PAABOMNB@rsa_generate_keys?0?5ret?3?5?$CF04X?6?$AA@" = linkonce_odr dso_local unnamed_addr constant [30 x i8] c"rsa_generate_keys, ret: %04X\0A\00", comdat, align 1
@"??_C@_03GGAHOJCI@MSG?$AA@" = linkonce_odr dso_local unnamed_addr constant [4 x i8] c"MSG\00", comdat, align 1
@"??_C@_06OIICAIJO@PK?5ENC?$AA@" = linkonce_odr dso_local unnamed_addr constant [7 x i8] c"PK ENC\00", comdat, align 1
@"??_C@_0BP@OKHOIEME@rsa_public_encrypt?0?5ret?3?5?$CF04X?6?$AA@" = linkonce_odr dso_local unnamed_addr constant [31 x i8] c"rsa_public_encrypt, ret: %04X\0A\00", comdat, align 1
@"??_C@_06GNIDJKIH@SK?5DEC?$AA@" = linkonce_odr dso_local unnamed_addr constant [7 x i8] c"SK DEC\00", comdat, align 1
@"??_C@_06NJGKBCAD@SK?5ENC?$AA@" = linkonce_odr dso_local unnamed_addr constant [7 x i8] c"SK ENC\00", comdat, align 1
@"??_C@_0CA@NPBGPOJI@rsa_private_encrypt?0?5ret?3?5?$CF04X?6?$AA@" = linkonce_odr dso_local unnamed_addr constant [32 x i8] c"rsa_private_encrypt, ret: %04X\0A\00", comdat, align 1
@"??_C@_06FMGLIABK@PK?5DEC?$AA@" = linkonce_odr dso_local unnamed_addr constant [7 x i8] c"PK DEC\00", comdat, align 1
@"??_C@_0BP@CFOOCEKO@rsa_public_decrypt?0?5ret?3?5?$CF04X?6?$AA@" = linkonce_odr dso_local unnamed_addr constant [31 x i8] c"rsa_public_decrypt, ret: %04X\0A\00", comdat, align 1
@"??_C@_0M@NPEDOHBA@?$CFf?5seconds?6?$AA@" = linkonce_odr dso_local unnamed_addr constant [12 x i8] c"%f seconds\0A\00", comdat, align 1
@SMALL_PRIMES = dso_local constant [4 x i8] c"\03\05\07\0B", align 1
@"??_C@_01KDCPPGHE@r?$AA@" = linkonce_odr dso_local unnamed_addr constant [2 x i8] c"r\00", comdat, align 1
@Struct.RetValue = internal global %Struct.RetValue zeroinitializer
@Struct.RetValue.1 = internal global %Struct.RetValue.0 zeroinitializer
@Struct.RetValue.2 = internal global %Struct.RetValue.1 zeroinitializer
@Struct.RetValue.4 = internal global %Struct.RetValue.2 zeroinitializer
@Struct.RetValue.6 = internal global %Struct.RetValue.3 zeroinitializer
@Struct.RetValue.8 = internal global %Struct.RetValue.4 zeroinitializer
@Struct.RetValue.9 = internal global %Struct.RetValue.5 zeroinitializer
@Struct.RetValue.11 = internal global %Struct.RetValue.6 zeroinitializer
@Struct.RetValue.13 = internal global %Struct.RetValue.7 zeroinitializer

; Function Attrs: noinline nounwind optnone
define dso_local void @bn_decode(i32* %bn, i32 %digits, i8* %hexarr, i32 %size) #0 {
entry:
  %size.addr = alloca i32, align 4
  %hexarr.addr = alloca i8*, align 4
  %digits.addr = alloca i32, align 4
  %bn.addr = alloca i32*, align 4
  %t = alloca i32, align 4
  %j = alloca i32, align 4
  %i = alloca i32, align 4
  %u = alloca i32, align 4
  store i32 %size, i32* %size.addr, align 4
  store i8* %hexarr, i8** %hexarr.addr, align 4
  store i32 %digits, i32* %digits.addr, align 4
  store i32* %bn, i32** %bn.addr, align 4
  store i32 0, i32* %i, align 4
  %0 = load i32, i32* %size.addr, align 4
  %sub = sub i32 %0, 1
  store i32 %sub, i32* %j, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc9, %entry
  %1 = load i32, i32* %i, align 4
  %2 = load i32, i32* %digits.addr, align 4
  %cmp = icmp ult i32 %1, %2
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond
  %3 = load i32, i32* %j, align 4
  %cmp1 = icmp sge i32 %3, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %4 = phi i1 [ false, %for.cond ], [ %cmp1, %land.rhs ]
  br i1 %4, label %for.body, label %for.end10

for.body:                                         ; preds = %land.end
  store i32 0, i32* %t, align 4
  store i32 0, i32* %u, align 4
  br label %for.cond2

for.cond2:                                        ; preds = %for.inc, %for.body
  %5 = load i32, i32* %j, align 4
  %cmp3 = icmp sge i32 %5, 0
  br i1 %cmp3, label %land.rhs4, label %land.end6

land.rhs4:                                        ; preds = %for.cond2
  %6 = load i32, i32* %u, align 4
  %cmp5 = icmp ult i32 %6, 32
  br label %land.end6

land.end6:                                        ; preds = %land.rhs4, %for.cond2
  %7 = phi i1 [ false, %for.cond2 ], [ %cmp5, %land.rhs4 ]
  br i1 %7, label %for.body7, label %for.end

for.body7:                                        ; preds = %land.end6
  %8 = load i8*, i8** %hexarr.addr, align 4
  %9 = load i32, i32* %j, align 4
  %arrayidx = getelementptr inbounds i8, i8* %8, i32 %9
  %10 = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %10 to i32
  %11 = load i32, i32* %u, align 4
  %shl = shl i32 %conv, %11
  %12 = load i32, i32* %t, align 4
  %or = or i32 %12, %shl
  store i32 %or, i32* %t, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body7
  %13 = load i32, i32* %j, align 4
  %dec = add nsw i32 %13, -1
  store i32 %dec, i32* %j, align 4
  %14 = load i32, i32* %u, align 4
  %add = add i32 %14, 8
  store i32 %add, i32* %u, align 4
  br label %for.cond2

for.end:                                          ; preds = %land.end6
  %15 = load i32, i32* %t, align 4
  %16 = load i32*, i32** %bn.addr, align 4
  %17 = load i32, i32* %i, align 4
  %arrayidx8 = getelementptr inbounds i32, i32* %16, i32 %17
  store i32 %15, i32* %arrayidx8, align 4
  br label %for.inc9

for.inc9:                                         ; preds = %for.end
  %18 = load i32, i32* %i, align 4
  %inc = add i32 %18, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end10:                                        ; preds = %land.end
  br label %for.cond11

for.cond11:                                       ; preds = %for.inc16, %for.end10
  %19 = load i32, i32* %i, align 4
  %20 = load i32, i32* %digits.addr, align 4
  %cmp12 = icmp ult i32 %19, %20
  br i1 %cmp12, label %for.body14, label %for.end18

for.body14:                                       ; preds = %for.cond11
  %21 = load i32*, i32** %bn.addr, align 4
  %22 = load i32, i32* %i, align 4
  %arrayidx15 = getelementptr inbounds i32, i32* %21, i32 %22
  store i32 0, i32* %arrayidx15, align 4
  br label %for.inc16

for.inc16:                                        ; preds = %for.body14
  %23 = load i32, i32* %i, align 4
  %inc17 = add i32 %23, 1
  store i32 %inc17, i32* %i, align 4
  br label %for.cond11

for.end18:                                        ; preds = %for.cond11
  ret void
}

; Function Attrs: noinline nounwind optnone
define dso_local void @bn_assign(i32* %a, i32* %b, i32 %digits) #0 {
entry:
  %digits.addr = alloca i32, align 4
  %b.addr = alloca i32*, align 4
  %a.addr = alloca i32*, align 4
  %i = alloca i32, align 4
  store i32 %digits, i32* %digits.addr, align 4
  store i32* %b, i32** %b.addr, align 4
  store i32* %a, i32** %a.addr, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* %digits.addr, align 4
  %cmp = icmp ult i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i32*, i32** %b.addr, align 4
  %3 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds i32, i32* %2, i32 %3
  %4 = load i32, i32* %arrayidx, align 4
  %5 = load i32*, i32** %a.addr, align 4
  %6 = load i32, i32* %i, align 4
  %arrayidx1 = getelementptr inbounds i32, i32* %5, i32 %6
  store i32 %4, i32* %arrayidx1, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %i, align 4
  %inc = add i32 %7, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @bn_sub(i32* %a, i32* %b, i32* %c, i32 %digits) #0 {
entry:
  %digits.addr = alloca i32, align 4
  %c.addr = alloca i32*, align 4
  %b.addr = alloca i32*, align 4
  %a.addr = alloca i32*, align 4
  %ai = alloca i32, align 4
  %borrow = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %digits, i32* %digits.addr, align 4
  store i32* %c, i32** %c.addr, align 4
  store i32* %b, i32** %b.addr, align 4
  store i32* %a, i32** %a.addr, align 4
  store i32 0, i32* %borrow, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* %digits.addr, align 4
  %cmp = icmp ult i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i32*, i32** %b.addr, align 4
  %3 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds i32, i32* %2, i32 %3
  %4 = load i32, i32* %arrayidx, align 4
  %5 = load i32, i32* %borrow, align 4
  %sub = sub i32 %4, %5
  store i32 %sub, i32* %ai, align 4
  %6 = load i32, i32* %borrow, align 4
  %sub1 = sub i32 -1, %6
  %cmp2 = icmp ugt i32 %sub, %sub1
  br i1 %cmp2, label %if.then, label %if.else

if.then:                                          ; preds = %for.body
  %7 = load i32*, i32** %c.addr, align 4
  %8 = load i32, i32* %i, align 4
  %arrayidx3 = getelementptr inbounds i32, i32* %7, i32 %8
  %9 = load i32, i32* %arrayidx3, align 4
  %sub4 = sub i32 -1, %9
  store i32 %sub4, i32* %ai, align 4
  br label %if.end12

if.else:                                          ; preds = %for.body
  %10 = load i32*, i32** %c.addr, align 4
  %11 = load i32, i32* %i, align 4
  %arrayidx5 = getelementptr inbounds i32, i32* %10, i32 %11
  %12 = load i32, i32* %arrayidx5, align 4
  %13 = load i32, i32* %ai, align 4
  %sub6 = sub i32 %13, %12
  store i32 %sub6, i32* %ai, align 4
  %14 = load i32*, i32** %c.addr, align 4
  %15 = load i32, i32* %i, align 4
  %arrayidx7 = getelementptr inbounds i32, i32* %14, i32 %15
  %16 = load i32, i32* %arrayidx7, align 4
  %sub8 = sub i32 -1, %16
  %cmp9 = icmp ugt i32 %sub6, %sub8
  br i1 %cmp9, label %if.then10, label %if.else11

if.then10:                                        ; preds = %if.else
  store i32 1, i32* %borrow, align 4
  br label %if.end

if.else11:                                        ; preds = %if.else
  store i32 0, i32* %borrow, align 4
  br label %if.end

if.end:                                           ; preds = %if.else11, %if.then10
  br label %if.end12

if.end12:                                         ; preds = %if.end, %if.then
  %17 = load i32, i32* %ai, align 4
  %18 = load i32*, i32** %a.addr, align 4
  %19 = load i32, i32* %i, align 4
  %arrayidx13 = getelementptr inbounds i32, i32* %18, i32 %19
  store i32 %17, i32* %arrayidx13, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %20 = load i32, i32* %i, align 4
  %inc = add i32 %20, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %21 = load i32, i32* %borrow, align 4
  ret i32 %21
}

; Function Attrs: noinline nounwind optnone
define internal i32 @bn_add_digit_mul(i32* %a, i32* %b, i32 %c, i32* %d, i32 %digits) #0 {
entry:
  %retval = alloca i32, align 4
  %digits.addr = alloca i32, align 4
  %d.addr = alloca i32*, align 4
  %c.addr = alloca i32, align 4
  %b.addr = alloca i32*, align 4
  %a.addr = alloca i32*, align 4
  %result = alloca i64, align 8
  %carry = alloca i32, align 4
  %rh = alloca i32, align 4
  %rl = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %digits, i32* %digits.addr, align 4
  store i32* %d, i32** %d.addr, align 4
  store i32 %c, i32* %c.addr, align 4
  store i32* %b, i32** %b.addr, align 4
  store i32* %a, i32** %a.addr, align 4
  %0 = load i32, i32* %c.addr, align 4
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  store i32 0, i32* %carry, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %1 = load i32, i32* %i, align 4
  %2 = load i32, i32* %digits.addr, align 4
  %cmp1 = icmp ult i32 %1, %2
  br i1 %cmp1, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %c.addr, align 4
  %conv = zext i32 %3 to i64
  %4 = load i32*, i32** %d.addr, align 4
  %5 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds i32, i32* %4, i32 %5
  %6 = load i32, i32* %arrayidx, align 4
  %conv2 = zext i32 %6 to i64
  %mul = mul i64 %conv, %conv2
  store i64 %mul, i64* %result, align 8
  %7 = load i64, i64* %result, align 8
  %and = and i64 %7, 4294967295
  %conv3 = trunc i64 %and to i32
  store i32 %conv3, i32* %rl, align 4
  %8 = load i64, i64* %result, align 8
  %shr = lshr i64 %8, 32
  %and4 = and i64 %shr, 4294967295
  %conv5 = trunc i64 %and4 to i32
  store i32 %conv5, i32* %rh, align 4
  %9 = load i32*, i32** %b.addr, align 4
  %10 = load i32, i32* %i, align 4
  %arrayidx6 = getelementptr inbounds i32, i32* %9, i32 %10
  %11 = load i32, i32* %arrayidx6, align 4
  %12 = load i32, i32* %carry, align 4
  %add = add i32 %11, %12
  %13 = load i32*, i32** %a.addr, align 4
  %14 = load i32, i32* %i, align 4
  %arrayidx7 = getelementptr inbounds i32, i32* %13, i32 %14
  store i32 %add, i32* %arrayidx7, align 4
  %15 = load i32, i32* %carry, align 4
  %cmp8 = icmp ult i32 %add, %15
  br i1 %cmp8, label %if.then10, label %if.else

if.then10:                                        ; preds = %for.body
  store i32 1, i32* %carry, align 4
  br label %CallOutFuncBB

if.else:                                          ; preds = %for.body
  store i32 0, i32* %carry, align 4
  br label %CallOutFuncBB

CallOutFuncBB:                                    ; preds = %if.then10, %if.else
  call void @if.end11.OutLineFunc(i32* %rl, i32** %a.addr, i32* %i, i32* %carry, i32* %rh)
  %16 = getelementptr inbounds %Struct.RetValue, %Struct.RetValue* @Struct.RetValue, i32 0, i32 0
  %17 = load i32*, i32** %16, align 4
  %18 = load i32, i32* %17, align 4
  store i32 %18, i32* %carry
  br label %for.inc

for.inc:                                          ; preds = %CallOutFuncBB
  %19 = load i32, i32* %i, align 4
  %inc19 = add i32 %19, 1
  store i32 %inc19, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %20 = load i32, i32* %carry, align 4
  store i32 %20, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end, %if.then
  %21 = load i32, i32* %retval, align 4
  ret i32 %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1) #1

; Function Attrs: noinline optnone
define dso_local void @bn_div(i32* %a, i32* %b, i32* %c, i32 %cdigits, i32* %d, i32 %ddigits) #2 {
entry:
  %ddigits.addr = alloca i32, align 4
  %d.addr = alloca i32*, align 4
  %cdigits.addr = alloca i32, align 4
  %c.addr = alloca i32*, align 4
  %b.addr = alloca i32*, align 4
  %a.addr = alloca i32*, align 4
  %tmp = alloca i64, align 8
  %ai = alloca i32, align 4
  %t = alloca i32, align 4
  %cc = alloca [131 x i32], align 4
  %dd = alloca [65 x i32], align 4
  %i = alloca i32, align 4
  %dddigits = alloca i32, align 4
  %shift = alloca i32, align 4
  store i32 %ddigits, i32* %ddigits.addr, align 4
  store i32* %d, i32** %d.addr, align 4
  store i32 %cdigits, i32* %cdigits.addr, align 4
  store i32* %c, i32** %c.addr, align 4
  store i32* %b, i32** %b.addr, align 4
  store i32* %a, i32** %a.addr, align 4
  %0 = load i32, i32* %ddigits.addr, align 4
  %1 = load i32*, i32** %d.addr, align 4
  %RetValuePtr = alloca i32, align 4
  br label %entry.bn_digits.Clone

entry.bn_digits.Clone:                            ; preds = %entry
  %digits.addr.bn_digits.Clone = alloca i32, align 4
  %a.addr.bn_digits.Clone = alloca i32*, align 4
  %i.bn_digits.Clone = alloca i32, align 4
  store i32 %0, i32* %digits.addr.bn_digits.Clone, align 4
  store i32* %1, i32** %a.addr.bn_digits.Clone, align 4
  %2 = load i32, i32* %digits.addr.bn_digits.Clone, align 4
  %sub.bn_digits.Clone = sub i32 %2, 1
  store i32 %sub.bn_digits.Clone, i32* %i.bn_digits.Clone, align 4
  br label %for.cond.bn_digits.Clone

for.cond.bn_digits.Clone:                         ; preds = %for.inc.bn_digits.Clone, %entry.bn_digits.Clone
  %3 = load i32, i32* %i.bn_digits.Clone, align 4
  %cmp.bn_digits.Clone = icmp sge i32 %3, 0
  br i1 %cmp.bn_digits.Clone, label %for.body.bn_digits.Clone, label %for.end.bn_digits.Clone

for.body.bn_digits.Clone:                         ; preds = %for.cond.bn_digits.Clone
  %4 = load i32*, i32** %a.addr.bn_digits.Clone, align 4
  %5 = load i32, i32* %i.bn_digits.Clone, align 4
  %arrayidx.bn_digits.Clone = getelementptr inbounds i32, i32* %4, i32 %5
  %6 = load i32, i32* %arrayidx.bn_digits.Clone, align 4
  %tobool.bn_digits.Clone = icmp ne i32 %6, 0
  br i1 %tobool.bn_digits.Clone, label %if.then.bn_digits.Clone, label %if.end.bn_digits.Clone

if.then.bn_digits.Clone:                          ; preds = %for.body.bn_digits.Clone
  br label %for.end.bn_digits.Clone

if.end.bn_digits.Clone:                           ; preds = %for.body.bn_digits.Clone
  br label %for.inc.bn_digits.Clone

for.inc.bn_digits.Clone:                          ; preds = %if.end.bn_digits.Clone
  %7 = load i32, i32* %i.bn_digits.Clone, align 4
  %dec.bn_digits.Clone = add nsw i32 %7, -1
  store i32 %dec.bn_digits.Clone, i32* %i.bn_digits.Clone, align 4
  br label %for.cond.bn_digits.Clone

for.end.bn_digits.Clone:                          ; preds = %if.then.bn_digits.Clone, %for.cond.bn_digits.Clone
  %8 = load i32, i32* %i.bn_digits.Clone, align 4
  %add.bn_digits.Clone = add nsw i32 %8, 1
  store i32 %add.bn_digits.Clone, i32* %RetValuePtr
  br label %entry.Split

entry.Split:                                      ; preds = %for.end.bn_digits.Clone
  %RetValue = load i32, i32* %RetValuePtr
  store i32 %RetValue, i32* %dddigits, align 4
  %9 = load i32, i32* %dddigits, align 4
  %cmp = icmp eq i32 %9, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry.Split
  br label %return

if.end:                                           ; preds = %entry.Split
  %10 = load i32*, i32** %d.addr, align 4
  %11 = load i32, i32* %dddigits, align 4
  %sub = sub i32 %11, 1
  %arrayidx = getelementptr inbounds i32, i32* %10, i32 %sub
  %12 = load i32, i32* %arrayidx, align 4
  %call1 = call i32 @bn_digit_bits(i32 %12)
  %sub2 = sub i32 32, %call1
  store i32 %sub2, i32* %shift, align 4
  %13 = load i32, i32* %dddigits, align 4
  %arraydecay = getelementptr inbounds [131 x i32], [131 x i32]* %cc, i32 0, i32 0
  br label %entry.bn_assign_zero.Clone2

entry.bn_assign_zero.Clone2:                      ; preds = %if.end
  %digits.addr.bn_assign_zero.Clone3 = alloca i32, align 4
  %a.addr.bn_assign_zero.Clone4 = alloca i32*, align 4
  %i.bn_assign_zero.Clone5 = alloca i32, align 4
  store i32 %13, i32* %digits.addr.bn_assign_zero.Clone3, align 4
  store i32* %arraydecay, i32** %a.addr.bn_assign_zero.Clone4, align 4
  store i32 0, i32* %i.bn_assign_zero.Clone5, align 4
  br label %for.cond.bn_assign_zero.Clone6

for.cond.bn_assign_zero.Clone6:                   ; preds = %for.inc.bn_assign_zero.Clone10, %entry.bn_assign_zero.Clone2
  %14 = load i32, i32* %i.bn_assign_zero.Clone5, align 4
  %15 = load i32, i32* %digits.addr.bn_assign_zero.Clone3, align 4
  %cmp.bn_assign_zero.Clone7 = icmp ult i32 %14, %15
  br i1 %cmp.bn_assign_zero.Clone7, label %for.body.bn_assign_zero.Clone8, label %for.end.bn_assign_zero.Clone12

for.body.bn_assign_zero.Clone8:                   ; preds = %for.cond.bn_assign_zero.Clone6
  %16 = load i32*, i32** %a.addr.bn_assign_zero.Clone4, align 4
  %17 = load i32, i32* %i.bn_assign_zero.Clone5, align 4
  %arrayidx.bn_assign_zero.Clone9 = getelementptr inbounds i32, i32* %16, i32 %17
  store i32 0, i32* %arrayidx.bn_assign_zero.Clone9, align 4
  br label %for.inc.bn_assign_zero.Clone10

for.inc.bn_assign_zero.Clone10:                   ; preds = %for.body.bn_assign_zero.Clone8
  %18 = load i32, i32* %i.bn_assign_zero.Clone5, align 4
  %inc.bn_assign_zero.Clone11 = add i32 %18, 1
  store i32 %inc.bn_assign_zero.Clone11, i32* %i.bn_assign_zero.Clone5, align 4
  br label %for.cond.bn_assign_zero.Clone6

for.end.bn_assign_zero.Clone12:                   ; preds = %for.cond.bn_assign_zero.Clone6
  br label %if.end.Split1

if.end.Split1:                                    ; preds = %for.end.bn_assign_zero.Clone12
  %19 = load i32, i32* %cdigits.addr, align 4
  %20 = load i32, i32* %shift, align 4
  %21 = load i32*, i32** %c.addr, align 4
  %arraydecay3 = getelementptr inbounds [131 x i32], [131 x i32]* %cc, i32 0, i32 0
  %call4 = call i32 @bn_shift_l(i32* %arraydecay3, i32* %21, i32 %20, i32 %19)
  %22 = load i32, i32* %cdigits.addr, align 4
  %arrayidx5 = getelementptr inbounds [131 x i32], [131 x i32]* %cc, i32 0, i32 %22
  store i32 %call4, i32* %arrayidx5, align 4
  %23 = load i32, i32* %dddigits, align 4
  %24 = load i32, i32* %shift, align 4
  %25 = load i32*, i32** %d.addr, align 4
  %arraydecay6 = getelementptr inbounds [65 x i32], [65 x i32]* %dd, i32 0, i32 0
  %call7 = call i32 @bn_shift_l(i32* %arraydecay6, i32* %25, i32 %24, i32 %23)
  %26 = load i32, i32* %dddigits, align 4
  %sub8 = sub i32 %26, 1
  %arrayidx9 = getelementptr inbounds [65 x i32], [65 x i32]* %dd, i32 0, i32 %sub8
  %27 = load i32, i32* %arrayidx9, align 4
  store i32 %27, i32* %t, align 4
  %28 = load i32, i32* %cdigits.addr, align 4
  %29 = load i32*, i32** %a.addr, align 4
  br label %entry.bn_assign_zero.Clone

entry.bn_assign_zero.Clone:                       ; preds = %if.end.Split1
  %digits.addr.bn_assign_zero.Clone = alloca i32, align 4
  %a.addr.bn_assign_zero.Clone = alloca i32*, align 4
  %i.bn_assign_zero.Clone = alloca i32, align 4
  store i32 %28, i32* %digits.addr.bn_assign_zero.Clone, align 4
  store i32* %29, i32** %a.addr.bn_assign_zero.Clone, align 4
  store i32 0, i32* %i.bn_assign_zero.Clone, align 4
  br label %for.cond.bn_assign_zero.Clone

for.cond.bn_assign_zero.Clone:                    ; preds = %for.inc.bn_assign_zero.Clone, %entry.bn_assign_zero.Clone
  %30 = load i32, i32* %i.bn_assign_zero.Clone, align 4
  %31 = load i32, i32* %digits.addr.bn_assign_zero.Clone, align 4
  %cmp.bn_assign_zero.Clone = icmp ult i32 %30, %31
  br i1 %cmp.bn_assign_zero.Clone, label %for.body.bn_assign_zero.Clone, label %for.end.bn_assign_zero.Clone

for.body.bn_assign_zero.Clone:                    ; preds = %for.cond.bn_assign_zero.Clone
  %32 = load i32*, i32** %a.addr.bn_assign_zero.Clone, align 4
  %33 = load i32, i32* %i.bn_assign_zero.Clone, align 4
  %arrayidx.bn_assign_zero.Clone = getelementptr inbounds i32, i32* %32, i32 %33
  store i32 0, i32* %arrayidx.bn_assign_zero.Clone, align 4
  br label %for.inc.bn_assign_zero.Clone

for.inc.bn_assign_zero.Clone:                     ; preds = %for.body.bn_assign_zero.Clone
  %34 = load i32, i32* %i.bn_assign_zero.Clone, align 4
  %inc.bn_assign_zero.Clone = add i32 %34, 1
  store i32 %inc.bn_assign_zero.Clone, i32* %i.bn_assign_zero.Clone, align 4
  br label %for.cond.bn_assign_zero.Clone

for.end.bn_assign_zero.Clone:                     ; preds = %for.cond.bn_assign_zero.Clone
  br label %if.end.Split

if.end.Split:                                     ; preds = %for.end.bn_assign_zero.Clone
  %35 = load i32, i32* %cdigits.addr, align 4
  %36 = load i32, i32* %dddigits, align 4
  %sub10 = sub i32 %35, %36
  store i32 %sub10, i32* %i, align 4
  br label %CallOutFuncBB

CallOutFuncBB:                                    ; preds = %if.end.Split
  call void @for.cond.OutLineFunc(i32* %i, i32* %t, i32* %dddigits, [131 x i32]* %cc, i32* %ai, [65 x i32]* %dd, i32** %a.addr, i64* %tmp, i32* %ddigits.addr, i32** %b.addr, i32* %shift)
  %37 = getelementptr inbounds %Struct.RetValue.0, %Struct.RetValue.0* @Struct.RetValue.1, i32 0, i32 0
  %38 = load i32*, i32** %37, align 4
  %39 = load i32, i32* %38, align 4
  store i32 %39, i32* %i
  %40 = getelementptr inbounds %Struct.RetValue.0, %Struct.RetValue.0* @Struct.RetValue.1, i32 0, i32 1
  %41 = load i32*, i32** %40, align 4
  %42 = load i32, i32* %41, align 4
  store i32 %42, i32* %ai
  %43 = getelementptr inbounds %Struct.RetValue.0, %Struct.RetValue.0* @Struct.RetValue.1, i32 0, i32 2
  %44 = load i64*, i64** %43, align 4
  %45 = load i64, i64* %44, align 4
  store i64 %45, i64* %tmp
  br label %return

return:                                           ; preds = %CallOutFuncBB, %if.then
  ret void
}

; Function Attrs: noinline nounwind optnone
define internal i32 @bn_digit_bits(i32 %a) #0 {
entry:
  %a.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %cmp = icmp ult i32 %0, 32
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %a.addr, align 4
  %cmp1 = icmp eq i32 %1, 0
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %for.end

if.end:                                           ; preds = %for.body
  %2 = load i32, i32* %a.addr, align 4
  %shr = lshr i32 %2, 1
  store i32 %shr, i32* %a.addr, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %3 = load i32, i32* %i, align 4
  %inc = add i32 %3, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %if.then, %for.cond
  %4 = load i32, i32* %i, align 4
  ret i32 %4
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @bn_shift_l(i32* %a, i32* %b, i32 %c, i32 %digits) #0 {
entry:
  %retval = alloca i32, align 4
  %digits.addr = alloca i32, align 4
  %c.addr = alloca i32, align 4
  %b.addr = alloca i32*, align 4
  %a.addr = alloca i32*, align 4
  %bi = alloca i32, align 4
  %carry = alloca i32, align 4
  %i = alloca i32, align 4
  %t = alloca i32, align 4
  store i32 %digits, i32* %digits.addr, align 4
  store i32 %c, i32* %c.addr, align 4
  store i32* %b, i32** %b.addr, align 4
  store i32* %a, i32** %a.addr, align 4
  %0 = load i32, i32* %c.addr, align 4
  %cmp = icmp uge i32 %0, 32
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %c.addr, align 4
  %sub = sub i32 32, %1
  store i32 %sub, i32* %t, align 4
  store i32 0, i32* %carry, align 4
  store i32 0, i32* %i, align 4
  br label %CallOutFuncBB

CallOutFuncBB:                                    ; preds = %if.end
  call void @for.cond.OutLineFunc.3(i32* %i, i32* %digits.addr, i32** %b.addr, i32* %bi, i32* %c.addr, i32* %carry, i32** %a.addr, i32* %t, i32* %retval)
  %2 = getelementptr inbounds %Struct.RetValue.1, %Struct.RetValue.1* @Struct.RetValue.2, i32 0, i32 0
  %3 = load i32*, i32** %2, align 4
  %4 = load i32, i32* %3, align 4
  store i32 %4, i32* %i
  %5 = getelementptr inbounds %Struct.RetValue.1, %Struct.RetValue.1* @Struct.RetValue.2, i32 0, i32 1
  %6 = load i32*, i32** %5, align 4
  %7 = load i32, i32* %6, align 4
  store i32 %7, i32* %bi
  %8 = getelementptr inbounds %Struct.RetValue.1, %Struct.RetValue.1* @Struct.RetValue.2, i32 0, i32 2
  %9 = load i32*, i32** %8, align 4
  %10 = load i32, i32* %9, align 4
  store i32 %10, i32* %carry
  %11 = getelementptr inbounds %Struct.RetValue.1, %Struct.RetValue.1* @Struct.RetValue.2, i32 0, i32 3
  %12 = load i32*, i32** %11, align 4
  %13 = load i32, i32* %12, align 4
  store i32 %13, i32* %retval
  br label %return

return:                                           ; preds = %CallOutFuncBB, %if.then
  %14 = load i32, i32* %retval, align 4
  ret i32 %14
}

; Function Attrs: noinline nounwind optnone
define internal i32 @bn_sub_digit_mul(i32* %a, i32* %b, i32 %c, i32* %d, i32 %digits) #0 {
entry:
  %retval = alloca i32, align 4
  %digits.addr = alloca i32, align 4
  %d.addr = alloca i32*, align 4
  %c.addr = alloca i32, align 4
  %b.addr = alloca i32*, align 4
  %a.addr = alloca i32*, align 4
  %result = alloca i64, align 8
  %borrow = alloca i32, align 4
  %rh = alloca i32, align 4
  %rl = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %digits, i32* %digits.addr, align 4
  store i32* %d, i32** %d.addr, align 4
  store i32 %c, i32* %c.addr, align 4
  store i32* %b, i32** %b.addr, align 4
  store i32* %a, i32** %a.addr, align 4
  %0 = load i32, i32* %c.addr, align 4
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  store i32 0, i32* %borrow, align 4
  store i32 0, i32* %i, align 4
  br label %CallOutFuncBB

CallOutFuncBB:                                    ; preds = %if.end
  call void @for.cond.OutLineFunc.5(i32* %i, i32* %digits.addr, i32* %c.addr, i32** %d.addr, i64* %result, i32* %rl, i32* %rh, i32** %b.addr, i32* %borrow, i32** %a.addr, i32* %retval)
  %1 = getelementptr inbounds %Struct.RetValue.2, %Struct.RetValue.2* @Struct.RetValue.4, i32 0, i32 0
  %2 = load i32*, i32** %1, align 4
  %3 = load i32, i32* %2, align 4
  store i32 %3, i32* %i
  %4 = getelementptr inbounds %Struct.RetValue.2, %Struct.RetValue.2* @Struct.RetValue.4, i32 0, i32 1
  %5 = load i64*, i64** %4, align 4
  %6 = load i64, i64* %5, align 4
  store i64 %6, i64* %result
  %7 = getelementptr inbounds %Struct.RetValue.2, %Struct.RetValue.2* @Struct.RetValue.4, i32 0, i32 2
  %8 = load i32*, i32** %7, align 4
  %9 = load i32, i32* %8, align 4
  store i32 %9, i32* %rl
  %10 = getelementptr inbounds %Struct.RetValue.2, %Struct.RetValue.2* @Struct.RetValue.4, i32 0, i32 3
  %11 = load i32*, i32** %10, align 4
  %12 = load i32, i32* %11, align 4
  store i32 %12, i32* %rh
  %13 = getelementptr inbounds %Struct.RetValue.2, %Struct.RetValue.2* @Struct.RetValue.4, i32 0, i32 4
  %14 = load i32*, i32** %13, align 4
  %15 = load i32, i32* %14, align 4
  store i32 %15, i32* %borrow
  %16 = getelementptr inbounds %Struct.RetValue.2, %Struct.RetValue.2* @Struct.RetValue.4, i32 0, i32 5
  %17 = load i32*, i32** %16, align 4
  %18 = load i32, i32* %17, align 4
  store i32 %18, i32* %retval
  br label %return

return:                                           ; preds = %CallOutFuncBB, %if.then
  %19 = load i32, i32* %retval, align 4
  ret i32 %19
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @bn_shift_r(i32* %a, i32* %b, i32 %c, i32 %digits) #0 {
entry:
  %retval = alloca i32, align 4
  %digits.addr = alloca i32, align 4
  %c.addr = alloca i32, align 4
  %b.addr = alloca i32*, align 4
  %a.addr = alloca i32*, align 4
  %bi = alloca i32, align 4
  %carry = alloca i32, align 4
  %i = alloca i32, align 4
  %t = alloca i32, align 4
  store i32 %digits, i32* %digits.addr, align 4
  store i32 %c, i32* %c.addr, align 4
  store i32* %b, i32** %b.addr, align 4
  store i32* %a, i32** %a.addr, align 4
  %0 = load i32, i32* %c.addr, align 4
  %cmp = icmp uge i32 %0, 32
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %c.addr, align 4
  %sub = sub i32 32, %1
  store i32 %sub, i32* %t, align 4
  store i32 0, i32* %carry, align 4
  %2 = load i32, i32* %digits.addr, align 4
  %sub1 = sub i32 %2, 1
  store i32 %sub1, i32* %i, align 4
  br label %CallOutFuncBB

CallOutFuncBB:                                    ; preds = %if.end
  call void @for.cond.OutLineFunc.7(i32* %i, i32** %b.addr, i32* %bi, i32* %c.addr, i32* %carry, i32** %a.addr, i32* %t, i32* %retval)
  %3 = getelementptr inbounds %Struct.RetValue.3, %Struct.RetValue.3* @Struct.RetValue.6, i32 0, i32 0
  %4 = load i32*, i32** %3, align 4
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %i
  %6 = getelementptr inbounds %Struct.RetValue.3, %Struct.RetValue.3* @Struct.RetValue.6, i32 0, i32 1
  %7 = load i32*, i32** %6, align 4
  %8 = load i32, i32* %7, align 4
  store i32 %8, i32* %bi
  %9 = getelementptr inbounds %Struct.RetValue.3, %Struct.RetValue.3* @Struct.RetValue.6, i32 0, i32 2
  %10 = load i32*, i32** %9, align 4
  %11 = load i32, i32* %10, align 4
  store i32 %11, i32* %carry
  %12 = getelementptr inbounds %Struct.RetValue.3, %Struct.RetValue.3* @Struct.RetValue.6, i32 0, i32 3
  %13 = load i32*, i32** %12, align 4
  %14 = load i32, i32* %13, align 4
  store i32 %14, i32* %retval
  br label %return

return:                                           ; preds = %CallOutFuncBB, %if.then
  %15 = load i32, i32* %retval, align 4
  ret i32 %15
}

; Function Attrs: noinline optnone
define dso_local void @bn_mod_exp(i32* %a, i32* %b, i32* %c, i32 %cdigits, i32* %d, i32 %ddigits) #2 {
entry:
  %ddigits.addr = alloca i32, align 4
  %d.addr = alloca i32*, align 4
  %cdigits.addr = alloca i32, align 4
  %c.addr = alloca i32*, align 4
  %b.addr = alloca i32*, align 4
  %a.addr = alloca i32*, align 4
  %bpower = alloca [3 x [65 x i32]], align 4
  %ci = alloca i32, align 4
  %t = alloca [65 x i32], align 4
  %i = alloca i32, align 4
  %ci_bits = alloca i32, align 4
  %j = alloca i32, align 4
  %s = alloca i32, align 4
  store i32 %ddigits, i32* %ddigits.addr, align 4
  store i32* %d, i32** %d.addr, align 4
  store i32 %cdigits, i32* %cdigits.addr, align 4
  store i32* %c, i32** %c.addr, align 4
  store i32* %b, i32** %b.addr, align 4
  store i32* %a, i32** %a.addr, align 4
  %0 = load i32, i32* %ddigits.addr, align 4
  %1 = load i32*, i32** %b.addr, align 4
  %arrayidx = getelementptr inbounds [3 x [65 x i32]], [3 x [65 x i32]]* %bpower, i32 0, i32 0
  %arraydecay = getelementptr inbounds [65 x i32], [65 x i32]* %arrayidx, i32 0, i32 0
  call void @bn_assign(i32* %arraydecay, i32* %1, i32 %0)
  %2 = load i32, i32* %ddigits.addr, align 4
  %3 = load i32*, i32** %d.addr, align 4
  %4 = load i32*, i32** %b.addr, align 4
  %arrayidx1 = getelementptr inbounds [3 x [65 x i32]], [3 x [65 x i32]]* %bpower, i32 0, i32 0
  %arraydecay2 = getelementptr inbounds [65 x i32], [65 x i32]* %arrayidx1, i32 0, i32 0
  %arrayidx3 = getelementptr inbounds [3 x [65 x i32]], [3 x [65 x i32]]* %bpower, i32 0, i32 1
  %arraydecay4 = getelementptr inbounds [65 x i32], [65 x i32]* %arrayidx3, i32 0, i32 0
  br label %entry.bn_mod_mul.Clone67

entry.bn_mod_mul.Clone67:                         ; preds = %entry
  %digits.addr.bn_mod_mul.Clone68 = alloca i32, align 4
  %d.addr.bn_mod_mul.Clone69 = alloca i32*, align 4
  %c.addr.bn_mod_mul.Clone70 = alloca i32*, align 4
  %b.addr.bn_mod_mul.Clone71 = alloca i32*, align 4
  %a.addr.bn_mod_mul.Clone72 = alloca i32*, align 4
  %t.bn_mod_mul.Clone73 = alloca [130 x i32], align 4
  store i32 %2, i32* %digits.addr.bn_mod_mul.Clone68, align 4
  store i32* %3, i32** %d.addr.bn_mod_mul.Clone69, align 4
  store i32* %4, i32** %c.addr.bn_mod_mul.Clone70, align 4
  store i32* %arraydecay2, i32** %b.addr.bn_mod_mul.Clone71, align 4
  store i32* %arraydecay4, i32** %a.addr.bn_mod_mul.Clone72, align 4
  %5 = load i32, i32* %digits.addr.bn_mod_mul.Clone68, align 4
  %6 = load i32*, i32** %c.addr.bn_mod_mul.Clone70, align 4
  %7 = load i32*, i32** %b.addr.bn_mod_mul.Clone71, align 4
  %arraydecay.bn_mod_mul.Clone74 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mod_mul.Clone73, i32 0, i32 0
  br label %entry.bn_mul.Clone

entry.bn_mul.Clone:                               ; preds = %entry.bn_mod_mul.Clone67
  %digits.addr.bn_mul.Clone = alloca i32, align 4
  %c.addr.bn_mul.Clone = alloca i32*, align 4
  %b.addr.bn_mul.Clone = alloca i32*, align 4
  %a.addr.bn_mul.Clone = alloca i32*, align 4
  %t.bn_mul.Clone = alloca [130 x i32], align 4
  %bdigits.bn_mul.Clone = alloca i32, align 4
  %cdigits.bn_mul.Clone = alloca i32, align 4
  %i.bn_mul.Clone = alloca i32, align 4
  store i32 %5, i32* %digits.addr.bn_mul.Clone, align 4
  store i32* %6, i32** %c.addr.bn_mul.Clone, align 4
  store i32* %7, i32** %b.addr.bn_mul.Clone, align 4
  store i32* %arraydecay.bn_mod_mul.Clone74, i32** %a.addr.bn_mul.Clone, align 4
  %8 = load i32, i32* %digits.addr.bn_mul.Clone, align 4
  %mul.bn_mul.Clone = mul i32 2, %8
  %arraydecay.bn_mul.Clone = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone, i32 0, i32 0
  %RetValuePtr.bn_mul.Clone = alloca i32, align 4
  %RetValuePtr18.bn_mul.Clone = alloca i32, align 4
  br label %entry.bn_assign_zero.Clone.bn_mul.Clone

entry.bn_assign_zero.Clone.bn_mul.Clone:          ; preds = %entry.bn_mul.Clone
  %digits.addr.bn_assign_zero.Clone.bn_mul.Clone = alloca i32, align 4
  %a.addr.bn_assign_zero.Clone.bn_mul.Clone = alloca i32*, align 4
  %i.bn_assign_zero.Clone.bn_mul.Clone = alloca i32, align 4
  store i32 %mul.bn_mul.Clone, i32* %digits.addr.bn_assign_zero.Clone.bn_mul.Clone, align 4
  store i32* %arraydecay.bn_mul.Clone, i32** %a.addr.bn_assign_zero.Clone.bn_mul.Clone, align 4
  store i32 0, i32* %i.bn_assign_zero.Clone.bn_mul.Clone, align 4
  br label %for.cond.bn_assign_zero.Clone.bn_mul.Clone

for.cond.bn_assign_zero.Clone.bn_mul.Clone:       ; preds = %for.inc.bn_assign_zero.Clone.bn_mul.Clone, %entry.bn_assign_zero.Clone.bn_mul.Clone
  %9 = load i32, i32* %i.bn_assign_zero.Clone.bn_mul.Clone, align 4
  %10 = load i32, i32* %digits.addr.bn_assign_zero.Clone.bn_mul.Clone, align 4
  %cmp.bn_assign_zero.Clone.bn_mul.Clone = icmp ult i32 %9, %10
  br i1 %cmp.bn_assign_zero.Clone.bn_mul.Clone, label %for.body.bn_assign_zero.Clone.bn_mul.Clone, label %for.end.bn_assign_zero.Clone.bn_mul.Clone

for.body.bn_assign_zero.Clone.bn_mul.Clone:       ; preds = %for.cond.bn_assign_zero.Clone.bn_mul.Clone
  %11 = load i32*, i32** %a.addr.bn_assign_zero.Clone.bn_mul.Clone, align 4
  %12 = load i32, i32* %i.bn_assign_zero.Clone.bn_mul.Clone, align 4
  %arrayidx.bn_assign_zero.Clone.bn_mul.Clone = getelementptr inbounds i32, i32* %11, i32 %12
  store i32 0, i32* %arrayidx.bn_assign_zero.Clone.bn_mul.Clone, align 4
  br label %for.inc.bn_assign_zero.Clone.bn_mul.Clone

for.inc.bn_assign_zero.Clone.bn_mul.Clone:        ; preds = %for.body.bn_assign_zero.Clone.bn_mul.Clone
  %13 = load i32, i32* %i.bn_assign_zero.Clone.bn_mul.Clone, align 4
  %inc.bn_assign_zero.Clone.bn_mul.Clone = add i32 %13, 1
  store i32 %inc.bn_assign_zero.Clone.bn_mul.Clone, i32* %i.bn_assign_zero.Clone.bn_mul.Clone, align 4
  br label %for.cond.bn_assign_zero.Clone.bn_mul.Clone

for.end.bn_assign_zero.Clone.bn_mul.Clone:        ; preds = %for.cond.bn_assign_zero.Clone.bn_mul.Clone
  br label %entry.Split.bn_mul.Clone

entry.Split.bn_mul.Clone:                         ; preds = %for.end.bn_assign_zero.Clone.bn_mul.Clone
  %14 = load i32, i32* %digits.addr.bn_mul.Clone, align 4
  %15 = load i32*, i32** %b.addr.bn_mul.Clone, align 4
  br label %entry.bn_digits.Clone2.bn_mul.Clone

entry.bn_digits.Clone2.bn_mul.Clone:              ; preds = %entry.Split.bn_mul.Clone
  %digits.addr.bn_digits.Clone3.bn_mul.Clone = alloca i32, align 4
  %a.addr.bn_digits.Clone4.bn_mul.Clone = alloca i32*, align 4
  %i.bn_digits.Clone5.bn_mul.Clone = alloca i32, align 4
  store i32 %14, i32* %digits.addr.bn_digits.Clone3.bn_mul.Clone, align 4
  store i32* %15, i32** %a.addr.bn_digits.Clone4.bn_mul.Clone, align 4
  %16 = load i32, i32* %digits.addr.bn_digits.Clone3.bn_mul.Clone, align 4
  %sub.bn_digits.Clone6.bn_mul.Clone = sub i32 %16, 1
  store i32 %sub.bn_digits.Clone6.bn_mul.Clone, i32* %i.bn_digits.Clone5.bn_mul.Clone, align 4
  br label %for.cond.bn_digits.Clone7.bn_mul.Clone

for.cond.bn_digits.Clone7.bn_mul.Clone:           ; preds = %for.inc.bn_digits.Clone14.bn_mul.Clone, %entry.bn_digits.Clone2.bn_mul.Clone
  %17 = load i32, i32* %i.bn_digits.Clone5.bn_mul.Clone, align 4
  %cmp.bn_digits.Clone8.bn_mul.Clone = icmp sge i32 %17, 0
  br i1 %cmp.bn_digits.Clone8.bn_mul.Clone, label %for.body.bn_digits.Clone9.bn_mul.Clone, label %for.end.bn_digits.Clone16.bn_mul.Clone

for.body.bn_digits.Clone9.bn_mul.Clone:           ; preds = %for.cond.bn_digits.Clone7.bn_mul.Clone
  %18 = load i32*, i32** %a.addr.bn_digits.Clone4.bn_mul.Clone, align 4
  %19 = load i32, i32* %i.bn_digits.Clone5.bn_mul.Clone, align 4
  %arrayidx.bn_digits.Clone10.bn_mul.Clone = getelementptr inbounds i32, i32* %18, i32 %19
  %20 = load i32, i32* %arrayidx.bn_digits.Clone10.bn_mul.Clone, align 4
  %tobool.bn_digits.Clone11.bn_mul.Clone = icmp ne i32 %20, 0
  br i1 %tobool.bn_digits.Clone11.bn_mul.Clone, label %if.then.bn_digits.Clone12.bn_mul.Clone, label %if.end.bn_digits.Clone13.bn_mul.Clone

if.then.bn_digits.Clone12.bn_mul.Clone:           ; preds = %for.body.bn_digits.Clone9.bn_mul.Clone
  br label %for.end.bn_digits.Clone16.bn_mul.Clone

if.end.bn_digits.Clone13.bn_mul.Clone:            ; preds = %for.body.bn_digits.Clone9.bn_mul.Clone
  br label %for.inc.bn_digits.Clone14.bn_mul.Clone

for.inc.bn_digits.Clone14.bn_mul.Clone:           ; preds = %if.end.bn_digits.Clone13.bn_mul.Clone
  %21 = load i32, i32* %i.bn_digits.Clone5.bn_mul.Clone, align 4
  %dec.bn_digits.Clone15.bn_mul.Clone = add nsw i32 %21, -1
  store i32 %dec.bn_digits.Clone15.bn_mul.Clone, i32* %i.bn_digits.Clone5.bn_mul.Clone, align 4
  br label %for.cond.bn_digits.Clone7.bn_mul.Clone

for.end.bn_digits.Clone16.bn_mul.Clone:           ; preds = %if.then.bn_digits.Clone12.bn_mul.Clone, %for.cond.bn_digits.Clone7.bn_mul.Clone
  %22 = load i32, i32* %i.bn_digits.Clone5.bn_mul.Clone, align 4
  %add.bn_digits.Clone17.bn_mul.Clone = add nsw i32 %22, 1
  store i32 %add.bn_digits.Clone17.bn_mul.Clone, i32* %RetValuePtr18.bn_mul.Clone
  br label %entry.Split.Split1.bn_mul.Clone

entry.Split.Split1.bn_mul.Clone:                  ; preds = %for.end.bn_digits.Clone16.bn_mul.Clone
  %RetValue19.bn_mul.Clone = load i32, i32* %RetValuePtr18.bn_mul.Clone
  store i32 %RetValue19.bn_mul.Clone, i32* %bdigits.bn_mul.Clone, align 4
  %23 = load i32, i32* %digits.addr.bn_mul.Clone, align 4
  %24 = load i32*, i32** %c.addr.bn_mul.Clone, align 4
  br label %entry.bn_digits.Clone.bn_mul.Clone

entry.bn_digits.Clone.bn_mul.Clone:               ; preds = %entry.Split.Split1.bn_mul.Clone
  %digits.addr.bn_digits.Clone.bn_mul.Clone = alloca i32, align 4
  %a.addr.bn_digits.Clone.bn_mul.Clone = alloca i32*, align 4
  %i.bn_digits.Clone.bn_mul.Clone = alloca i32, align 4
  store i32 %23, i32* %digits.addr.bn_digits.Clone.bn_mul.Clone, align 4
  store i32* %24, i32** %a.addr.bn_digits.Clone.bn_mul.Clone, align 4
  %25 = load i32, i32* %digits.addr.bn_digits.Clone.bn_mul.Clone, align 4
  %sub.bn_digits.Clone.bn_mul.Clone = sub i32 %25, 1
  store i32 %sub.bn_digits.Clone.bn_mul.Clone, i32* %i.bn_digits.Clone.bn_mul.Clone, align 4
  br label %for.cond.bn_digits.Clone.bn_mul.Clone

for.cond.bn_digits.Clone.bn_mul.Clone:            ; preds = %for.inc.bn_digits.Clone.bn_mul.Clone, %entry.bn_digits.Clone.bn_mul.Clone
  %26 = load i32, i32* %i.bn_digits.Clone.bn_mul.Clone, align 4
  %cmp.bn_digits.Clone.bn_mul.Clone = icmp sge i32 %26, 0
  br i1 %cmp.bn_digits.Clone.bn_mul.Clone, label %for.body.bn_digits.Clone.bn_mul.Clone, label %for.end.bn_digits.Clone.bn_mul.Clone

for.body.bn_digits.Clone.bn_mul.Clone:            ; preds = %for.cond.bn_digits.Clone.bn_mul.Clone
  %27 = load i32*, i32** %a.addr.bn_digits.Clone.bn_mul.Clone, align 4
  %28 = load i32, i32* %i.bn_digits.Clone.bn_mul.Clone, align 4
  %arrayidx.bn_digits.Clone.bn_mul.Clone = getelementptr inbounds i32, i32* %27, i32 %28
  %29 = load i32, i32* %arrayidx.bn_digits.Clone.bn_mul.Clone, align 4
  %tobool.bn_digits.Clone.bn_mul.Clone = icmp ne i32 %29, 0
  br i1 %tobool.bn_digits.Clone.bn_mul.Clone, label %if.then.bn_digits.Clone.bn_mul.Clone, label %if.end.bn_digits.Clone.bn_mul.Clone

if.then.bn_digits.Clone.bn_mul.Clone:             ; preds = %for.body.bn_digits.Clone.bn_mul.Clone
  br label %for.end.bn_digits.Clone.bn_mul.Clone

if.end.bn_digits.Clone.bn_mul.Clone:              ; preds = %for.body.bn_digits.Clone.bn_mul.Clone
  br label %for.inc.bn_digits.Clone.bn_mul.Clone

for.inc.bn_digits.Clone.bn_mul.Clone:             ; preds = %if.end.bn_digits.Clone.bn_mul.Clone
  %30 = load i32, i32* %i.bn_digits.Clone.bn_mul.Clone, align 4
  %dec.bn_digits.Clone.bn_mul.Clone = add nsw i32 %30, -1
  store i32 %dec.bn_digits.Clone.bn_mul.Clone, i32* %i.bn_digits.Clone.bn_mul.Clone, align 4
  br label %for.cond.bn_digits.Clone.bn_mul.Clone

for.end.bn_digits.Clone.bn_mul.Clone:             ; preds = %if.then.bn_digits.Clone.bn_mul.Clone, %for.cond.bn_digits.Clone.bn_mul.Clone
  %31 = load i32, i32* %i.bn_digits.Clone.bn_mul.Clone, align 4
  %add.bn_digits.Clone.bn_mul.Clone = add nsw i32 %31, 1
  store i32 %add.bn_digits.Clone.bn_mul.Clone, i32* %RetValuePtr.bn_mul.Clone
  br label %entry.Split.Split.bn_mul.Clone

entry.Split.Split.bn_mul.Clone:                   ; preds = %for.end.bn_digits.Clone.bn_mul.Clone
  %RetValue.bn_mul.Clone = load i32, i32* %RetValuePtr.bn_mul.Clone
  store i32 %RetValue.bn_mul.Clone, i32* %cdigits.bn_mul.Clone, align 4
  store i32 0, i32* %i.bn_mul.Clone, align 4
  br label %for.cond.bn_mul.Clone

for.cond.bn_mul.Clone:                            ; preds = %for.inc.bn_mul.Clone, %entry.Split.Split.bn_mul.Clone
  %32 = load i32, i32* %i.bn_mul.Clone, align 4
  %33 = load i32, i32* %bdigits.bn_mul.Clone, align 4
  %cmp.bn_mul.Clone = icmp ult i32 %32, %33
  br i1 %cmp.bn_mul.Clone, label %for.body.bn_mul.Clone, label %for.end.bn_mul.Clone

for.body.bn_mul.Clone:                            ; preds = %for.cond.bn_mul.Clone
  %34 = load i32, i32* %cdigits.bn_mul.Clone, align 4
  %35 = load i32*, i32** %c.addr.bn_mul.Clone, align 4
  %36 = load i32*, i32** %b.addr.bn_mul.Clone, align 4
  %37 = load i32, i32* %i.bn_mul.Clone, align 4
  %arrayidx.bn_mul.Clone = getelementptr inbounds i32, i32* %36, i32 %37
  %38 = load i32, i32* %arrayidx.bn_mul.Clone, align 4
  %39 = load i32, i32* %i.bn_mul.Clone, align 4
  %arrayidx2.bn_mul.Clone = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone, i32 0, i32 %39
  %40 = load i32, i32* %i.bn_mul.Clone, align 4
  %arrayidx3.bn_mul.Clone = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone, i32 0, i32 %40
  %call4.bn_mul.Clone = call i32 @bn_add_digit_mul(i32* %arrayidx3.bn_mul.Clone, i32* %arrayidx2.bn_mul.Clone, i32 %38, i32* %35, i32 %34)
  %41 = load i32, i32* %i.bn_mul.Clone, align 4
  %42 = load i32, i32* %cdigits.bn_mul.Clone, align 4
  %add.bn_mul.Clone = add i32 %41, %42
  %arrayidx5.bn_mul.Clone = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone, i32 0, i32 %add.bn_mul.Clone
  %43 = load i32, i32* %arrayidx5.bn_mul.Clone, align 4
  %add6.bn_mul.Clone = add i32 %43, %call4.bn_mul.Clone
  store i32 %add6.bn_mul.Clone, i32* %arrayidx5.bn_mul.Clone, align 4
  br label %for.inc.bn_mul.Clone

for.inc.bn_mul.Clone:                             ; preds = %for.body.bn_mul.Clone
  %44 = load i32, i32* %i.bn_mul.Clone, align 4
  %inc.bn_mul.Clone = add i32 %44, 1
  store i32 %inc.bn_mul.Clone, i32* %i.bn_mul.Clone, align 4
  br label %for.cond.bn_mul.Clone

for.end.bn_mul.Clone:                             ; preds = %for.cond.bn_mul.Clone
  %45 = load i32, i32* %digits.addr.bn_mul.Clone, align 4
  %mul7.bn_mul.Clone = mul i32 2, %45
  %arraydecay8.bn_mul.Clone = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone, i32 0, i32 0
  %46 = load i32*, i32** %a.addr.bn_mul.Clone, align 4
  call void @bn_assign(i32* %46, i32* %arraydecay8.bn_mul.Clone, i32 %mul7.bn_mul.Clone)
  %arraydecay9.bn_mul.Clone = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone, i32 0, i32 0
  %47 = bitcast i32* %arraydecay9.bn_mul.Clone to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %47, i8 0, i32 520, i1 false)
  br label %entry.bn_mod_mul.Clone67.Split

entry.bn_mod_mul.Clone67.Split:                   ; preds = %for.end.bn_mul.Clone
  %48 = load i32, i32* %digits.addr.bn_mod_mul.Clone68, align 4
  %49 = load i32*, i32** %d.addr.bn_mod_mul.Clone69, align 4
  %50 = load i32, i32* %digits.addr.bn_mod_mul.Clone68, align 4
  %mul.bn_mod_mul.Clone75 = mul i32 2, %50
  %arraydecay1.bn_mod_mul.Clone76 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mod_mul.Clone73, i32 0, i32 0
  %51 = load i32*, i32** %a.addr.bn_mod_mul.Clone72, align 4
  br label %entry.bn_mod.Clone.bn_mod_mul.Clone77

entry.bn_mod.Clone.bn_mod_mul.Clone77:            ; preds = %entry.bn_mod_mul.Clone67.Split
  %cdigits.addr.bn_mod.Clone.bn_mod_mul.Clone78 = alloca i32, align 4
  %c.addr.bn_mod.Clone.bn_mod_mul.Clone79 = alloca i32*, align 4
  %bdigits.addr.bn_mod.Clone.bn_mod_mul.Clone80 = alloca i32, align 4
  %b.addr.bn_mod.Clone.bn_mod_mul.Clone81 = alloca i32*, align 4
  %a.addr.bn_mod.Clone.bn_mod_mul.Clone82 = alloca i32*, align 4
  %t.bn_mod.Clone.bn_mod_mul.Clone83 = alloca [130 x i32], align 4
  store i32 %48, i32* %cdigits.addr.bn_mod.Clone.bn_mod_mul.Clone78, align 4
  store i32* %49, i32** %c.addr.bn_mod.Clone.bn_mod_mul.Clone79, align 4
  store i32 %mul.bn_mod_mul.Clone75, i32* %bdigits.addr.bn_mod.Clone.bn_mod_mul.Clone80, align 4
  store i32* %arraydecay1.bn_mod_mul.Clone76, i32** %b.addr.bn_mod.Clone.bn_mod_mul.Clone81, align 4
  store i32* %51, i32** %a.addr.bn_mod.Clone.bn_mod_mul.Clone82, align 4
  %52 = bitcast [130 x i32]* %t.bn_mod.Clone.bn_mod_mul.Clone83 to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %52, i8 0, i32 520, i1 false)
  %53 = load i32, i32* %cdigits.addr.bn_mod.Clone.bn_mod_mul.Clone78, align 4
  %54 = load i32*, i32** %c.addr.bn_mod.Clone.bn_mod_mul.Clone79, align 4
  %55 = load i32, i32* %bdigits.addr.bn_mod.Clone.bn_mod_mul.Clone80, align 4
  %56 = load i32*, i32** %b.addr.bn_mod.Clone.bn_mod_mul.Clone81, align 4
  %57 = load i32*, i32** %a.addr.bn_mod.Clone.bn_mod_mul.Clone82, align 4
  %arraydecay.bn_mod.Clone.bn_mod_mul.Clone84 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mod.Clone.bn_mod_mul.Clone83, i32 0, i32 0
  call void @bn_div(i32* %arraydecay.bn_mod.Clone.bn_mod_mul.Clone84, i32* %57, i32* %56, i32 %55, i32* %54, i32 %53)
  %arraydecay1.bn_mod.Clone.bn_mod_mul.Clone85 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mod.Clone.bn_mod_mul.Clone83, i32 0, i32 0
  %58 = bitcast i32* %arraydecay1.bn_mod.Clone.bn_mod_mul.Clone85 to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %58, i8 0, i32 520, i1 false)
  br label %entry.Split.bn_mod_mul.Clone86

entry.Split.bn_mod_mul.Clone86:                   ; preds = %entry.bn_mod.Clone.bn_mod_mul.Clone77
  %arraydecay2.bn_mod_mul.Clone87 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mod_mul.Clone73, i32 0, i32 0
  %59 = bitcast i32* %arraydecay2.bn_mod_mul.Clone87 to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %59, i8 0, i32 520, i1 false)
  br label %entry.Split66

entry.Split66:                                    ; preds = %entry.Split.bn_mod_mul.Clone86
  %60 = load i32, i32* %ddigits.addr, align 4
  %61 = load i32*, i32** %d.addr, align 4
  %62 = load i32*, i32** %b.addr, align 4
  %arrayidx5 = getelementptr inbounds [3 x [65 x i32]], [3 x [65 x i32]]* %bpower, i32 0, i32 1
  %arraydecay6 = getelementptr inbounds [65 x i32], [65 x i32]* %arrayidx5, i32 0, i32 0
  %arrayidx7 = getelementptr inbounds [3 x [65 x i32]], [3 x [65 x i32]]* %bpower, i32 0, i32 2
  %arraydecay8 = getelementptr inbounds [65 x i32], [65 x i32]* %arrayidx7, i32 0, i32 0
  br label %entry.bn_mod_mul.Clone45

entry.bn_mod_mul.Clone45:                         ; preds = %entry.Split66
  %digits.addr.bn_mod_mul.Clone46 = alloca i32, align 4
  %d.addr.bn_mod_mul.Clone47 = alloca i32*, align 4
  %c.addr.bn_mod_mul.Clone48 = alloca i32*, align 4
  %b.addr.bn_mod_mul.Clone49 = alloca i32*, align 4
  %a.addr.bn_mod_mul.Clone50 = alloca i32*, align 4
  %t.bn_mod_mul.Clone51 = alloca [130 x i32], align 4
  store i32 %60, i32* %digits.addr.bn_mod_mul.Clone46, align 4
  store i32* %61, i32** %d.addr.bn_mod_mul.Clone47, align 4
  store i32* %62, i32** %c.addr.bn_mod_mul.Clone48, align 4
  store i32* %arraydecay6, i32** %b.addr.bn_mod_mul.Clone49, align 4
  store i32* %arraydecay8, i32** %a.addr.bn_mod_mul.Clone50, align 4
  %63 = load i32, i32* %digits.addr.bn_mod_mul.Clone46, align 4
  %64 = load i32*, i32** %c.addr.bn_mod_mul.Clone48, align 4
  %65 = load i32*, i32** %b.addr.bn_mod_mul.Clone49, align 4
  %arraydecay.bn_mod_mul.Clone52 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mod_mul.Clone51, i32 0, i32 0
  br label %entry.bn_mul.Clone88

entry.bn_mul.Clone88:                             ; preds = %entry.bn_mod_mul.Clone45
  %digits.addr.bn_mul.Clone89 = alloca i32, align 4
  %c.addr.bn_mul.Clone90 = alloca i32*, align 4
  %b.addr.bn_mul.Clone91 = alloca i32*, align 4
  %a.addr.bn_mul.Clone92 = alloca i32*, align 4
  %t.bn_mul.Clone93 = alloca [130 x i32], align 4
  %bdigits.bn_mul.Clone94 = alloca i32, align 4
  %cdigits.bn_mul.Clone95 = alloca i32, align 4
  %i.bn_mul.Clone96 = alloca i32, align 4
  store i32 %63, i32* %digits.addr.bn_mul.Clone89, align 4
  store i32* %64, i32** %c.addr.bn_mul.Clone90, align 4
  store i32* %65, i32** %b.addr.bn_mul.Clone91, align 4
  store i32* %arraydecay.bn_mod_mul.Clone52, i32** %a.addr.bn_mul.Clone92, align 4
  %66 = load i32, i32* %digits.addr.bn_mul.Clone89, align 4
  %mul.bn_mul.Clone97 = mul i32 2, %66
  %arraydecay.bn_mul.Clone98 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone93, i32 0, i32 0
  %RetValuePtr.bn_mul.Clone99 = alloca i32, align 4
  %RetValuePtr18.bn_mul.Clone100 = alloca i32, align 4
  br label %entry.bn_assign_zero.Clone.bn_mul.Clone101

entry.bn_assign_zero.Clone.bn_mul.Clone101:       ; preds = %entry.bn_mul.Clone88
  %digits.addr.bn_assign_zero.Clone.bn_mul.Clone102 = alloca i32, align 4
  %a.addr.bn_assign_zero.Clone.bn_mul.Clone103 = alloca i32*, align 4
  %i.bn_assign_zero.Clone.bn_mul.Clone104 = alloca i32, align 4
  store i32 %mul.bn_mul.Clone97, i32* %digits.addr.bn_assign_zero.Clone.bn_mul.Clone102, align 4
  store i32* %arraydecay.bn_mul.Clone98, i32** %a.addr.bn_assign_zero.Clone.bn_mul.Clone103, align 4
  store i32 0, i32* %i.bn_assign_zero.Clone.bn_mul.Clone104, align 4
  br label %for.cond.bn_assign_zero.Clone.bn_mul.Clone105

for.cond.bn_assign_zero.Clone.bn_mul.Clone105:    ; preds = %for.inc.bn_assign_zero.Clone.bn_mul.Clone109, %entry.bn_assign_zero.Clone.bn_mul.Clone101
  %67 = load i32, i32* %i.bn_assign_zero.Clone.bn_mul.Clone104, align 4
  %68 = load i32, i32* %digits.addr.bn_assign_zero.Clone.bn_mul.Clone102, align 4
  %cmp.bn_assign_zero.Clone.bn_mul.Clone106 = icmp ult i32 %67, %68
  br i1 %cmp.bn_assign_zero.Clone.bn_mul.Clone106, label %for.body.bn_assign_zero.Clone.bn_mul.Clone107, label %for.end.bn_assign_zero.Clone.bn_mul.Clone111

for.body.bn_assign_zero.Clone.bn_mul.Clone107:    ; preds = %for.cond.bn_assign_zero.Clone.bn_mul.Clone105
  %69 = load i32*, i32** %a.addr.bn_assign_zero.Clone.bn_mul.Clone103, align 4
  %70 = load i32, i32* %i.bn_assign_zero.Clone.bn_mul.Clone104, align 4
  %arrayidx.bn_assign_zero.Clone.bn_mul.Clone108 = getelementptr inbounds i32, i32* %69, i32 %70
  store i32 0, i32* %arrayidx.bn_assign_zero.Clone.bn_mul.Clone108, align 4
  br label %for.inc.bn_assign_zero.Clone.bn_mul.Clone109

for.inc.bn_assign_zero.Clone.bn_mul.Clone109:     ; preds = %for.body.bn_assign_zero.Clone.bn_mul.Clone107
  %71 = load i32, i32* %i.bn_assign_zero.Clone.bn_mul.Clone104, align 4
  %inc.bn_assign_zero.Clone.bn_mul.Clone110 = add i32 %71, 1
  store i32 %inc.bn_assign_zero.Clone.bn_mul.Clone110, i32* %i.bn_assign_zero.Clone.bn_mul.Clone104, align 4
  br label %for.cond.bn_assign_zero.Clone.bn_mul.Clone105

for.end.bn_assign_zero.Clone.bn_mul.Clone111:     ; preds = %for.cond.bn_assign_zero.Clone.bn_mul.Clone105
  br label %entry.Split.bn_mul.Clone112

entry.Split.bn_mul.Clone112:                      ; preds = %for.end.bn_assign_zero.Clone.bn_mul.Clone111
  %72 = load i32, i32* %digits.addr.bn_mul.Clone89, align 4
  %73 = load i32*, i32** %b.addr.bn_mul.Clone91, align 4
  br label %entry.bn_digits.Clone2.bn_mul.Clone113

entry.bn_digits.Clone2.bn_mul.Clone113:           ; preds = %entry.Split.bn_mul.Clone112
  %digits.addr.bn_digits.Clone3.bn_mul.Clone114 = alloca i32, align 4
  %a.addr.bn_digits.Clone4.bn_mul.Clone115 = alloca i32*, align 4
  %i.bn_digits.Clone5.bn_mul.Clone116 = alloca i32, align 4
  store i32 %72, i32* %digits.addr.bn_digits.Clone3.bn_mul.Clone114, align 4
  store i32* %73, i32** %a.addr.bn_digits.Clone4.bn_mul.Clone115, align 4
  %74 = load i32, i32* %digits.addr.bn_digits.Clone3.bn_mul.Clone114, align 4
  %sub.bn_digits.Clone6.bn_mul.Clone117 = sub i32 %74, 1
  store i32 %sub.bn_digits.Clone6.bn_mul.Clone117, i32* %i.bn_digits.Clone5.bn_mul.Clone116, align 4
  br label %for.cond.bn_digits.Clone7.bn_mul.Clone118

for.cond.bn_digits.Clone7.bn_mul.Clone118:        ; preds = %for.inc.bn_digits.Clone14.bn_mul.Clone125, %entry.bn_digits.Clone2.bn_mul.Clone113
  %75 = load i32, i32* %i.bn_digits.Clone5.bn_mul.Clone116, align 4
  %cmp.bn_digits.Clone8.bn_mul.Clone119 = icmp sge i32 %75, 0
  br i1 %cmp.bn_digits.Clone8.bn_mul.Clone119, label %for.body.bn_digits.Clone9.bn_mul.Clone120, label %for.end.bn_digits.Clone16.bn_mul.Clone127

for.body.bn_digits.Clone9.bn_mul.Clone120:        ; preds = %for.cond.bn_digits.Clone7.bn_mul.Clone118
  %76 = load i32*, i32** %a.addr.bn_digits.Clone4.bn_mul.Clone115, align 4
  %77 = load i32, i32* %i.bn_digits.Clone5.bn_mul.Clone116, align 4
  %arrayidx.bn_digits.Clone10.bn_mul.Clone121 = getelementptr inbounds i32, i32* %76, i32 %77
  %78 = load i32, i32* %arrayidx.bn_digits.Clone10.bn_mul.Clone121, align 4
  %tobool.bn_digits.Clone11.bn_mul.Clone122 = icmp ne i32 %78, 0
  br i1 %tobool.bn_digits.Clone11.bn_mul.Clone122, label %if.then.bn_digits.Clone12.bn_mul.Clone123, label %if.end.bn_digits.Clone13.bn_mul.Clone124

if.then.bn_digits.Clone12.bn_mul.Clone123:        ; preds = %for.body.bn_digits.Clone9.bn_mul.Clone120
  br label %for.end.bn_digits.Clone16.bn_mul.Clone127

if.end.bn_digits.Clone13.bn_mul.Clone124:         ; preds = %for.body.bn_digits.Clone9.bn_mul.Clone120
  br label %for.inc.bn_digits.Clone14.bn_mul.Clone125

for.inc.bn_digits.Clone14.bn_mul.Clone125:        ; preds = %if.end.bn_digits.Clone13.bn_mul.Clone124
  %79 = load i32, i32* %i.bn_digits.Clone5.bn_mul.Clone116, align 4
  %dec.bn_digits.Clone15.bn_mul.Clone126 = add nsw i32 %79, -1
  store i32 %dec.bn_digits.Clone15.bn_mul.Clone126, i32* %i.bn_digits.Clone5.bn_mul.Clone116, align 4
  br label %for.cond.bn_digits.Clone7.bn_mul.Clone118

for.end.bn_digits.Clone16.bn_mul.Clone127:        ; preds = %if.then.bn_digits.Clone12.bn_mul.Clone123, %for.cond.bn_digits.Clone7.bn_mul.Clone118
  %80 = load i32, i32* %i.bn_digits.Clone5.bn_mul.Clone116, align 4
  %add.bn_digits.Clone17.bn_mul.Clone128 = add nsw i32 %80, 1
  store i32 %add.bn_digits.Clone17.bn_mul.Clone128, i32* %RetValuePtr18.bn_mul.Clone100
  br label %entry.Split.Split1.bn_mul.Clone129

entry.Split.Split1.bn_mul.Clone129:               ; preds = %for.end.bn_digits.Clone16.bn_mul.Clone127
  %RetValue19.bn_mul.Clone130 = load i32, i32* %RetValuePtr18.bn_mul.Clone100
  store i32 %RetValue19.bn_mul.Clone130, i32* %bdigits.bn_mul.Clone94, align 4
  %81 = load i32, i32* %digits.addr.bn_mul.Clone89, align 4
  %82 = load i32*, i32** %c.addr.bn_mul.Clone90, align 4
  br label %entry.bn_digits.Clone.bn_mul.Clone131

entry.bn_digits.Clone.bn_mul.Clone131:            ; preds = %entry.Split.Split1.bn_mul.Clone129
  %digits.addr.bn_digits.Clone.bn_mul.Clone132 = alloca i32, align 4
  %a.addr.bn_digits.Clone.bn_mul.Clone133 = alloca i32*, align 4
  %i.bn_digits.Clone.bn_mul.Clone134 = alloca i32, align 4
  store i32 %81, i32* %digits.addr.bn_digits.Clone.bn_mul.Clone132, align 4
  store i32* %82, i32** %a.addr.bn_digits.Clone.bn_mul.Clone133, align 4
  %83 = load i32, i32* %digits.addr.bn_digits.Clone.bn_mul.Clone132, align 4
  %sub.bn_digits.Clone.bn_mul.Clone135 = sub i32 %83, 1
  store i32 %sub.bn_digits.Clone.bn_mul.Clone135, i32* %i.bn_digits.Clone.bn_mul.Clone134, align 4
  br label %for.cond.bn_digits.Clone.bn_mul.Clone136

for.cond.bn_digits.Clone.bn_mul.Clone136:         ; preds = %for.inc.bn_digits.Clone.bn_mul.Clone143, %entry.bn_digits.Clone.bn_mul.Clone131
  %84 = load i32, i32* %i.bn_digits.Clone.bn_mul.Clone134, align 4
  %cmp.bn_digits.Clone.bn_mul.Clone137 = icmp sge i32 %84, 0
  br i1 %cmp.bn_digits.Clone.bn_mul.Clone137, label %for.body.bn_digits.Clone.bn_mul.Clone138, label %for.end.bn_digits.Clone.bn_mul.Clone145

for.body.bn_digits.Clone.bn_mul.Clone138:         ; preds = %for.cond.bn_digits.Clone.bn_mul.Clone136
  %85 = load i32*, i32** %a.addr.bn_digits.Clone.bn_mul.Clone133, align 4
  %86 = load i32, i32* %i.bn_digits.Clone.bn_mul.Clone134, align 4
  %arrayidx.bn_digits.Clone.bn_mul.Clone139 = getelementptr inbounds i32, i32* %85, i32 %86
  %87 = load i32, i32* %arrayidx.bn_digits.Clone.bn_mul.Clone139, align 4
  %tobool.bn_digits.Clone.bn_mul.Clone140 = icmp ne i32 %87, 0
  br i1 %tobool.bn_digits.Clone.bn_mul.Clone140, label %if.then.bn_digits.Clone.bn_mul.Clone141, label %if.end.bn_digits.Clone.bn_mul.Clone142

if.then.bn_digits.Clone.bn_mul.Clone141:          ; preds = %for.body.bn_digits.Clone.bn_mul.Clone138
  br label %for.end.bn_digits.Clone.bn_mul.Clone145

if.end.bn_digits.Clone.bn_mul.Clone142:           ; preds = %for.body.bn_digits.Clone.bn_mul.Clone138
  br label %for.inc.bn_digits.Clone.bn_mul.Clone143

for.inc.bn_digits.Clone.bn_mul.Clone143:          ; preds = %if.end.bn_digits.Clone.bn_mul.Clone142
  %88 = load i32, i32* %i.bn_digits.Clone.bn_mul.Clone134, align 4
  %dec.bn_digits.Clone.bn_mul.Clone144 = add nsw i32 %88, -1
  store i32 %dec.bn_digits.Clone.bn_mul.Clone144, i32* %i.bn_digits.Clone.bn_mul.Clone134, align 4
  br label %for.cond.bn_digits.Clone.bn_mul.Clone136

for.end.bn_digits.Clone.bn_mul.Clone145:          ; preds = %if.then.bn_digits.Clone.bn_mul.Clone141, %for.cond.bn_digits.Clone.bn_mul.Clone136
  %89 = load i32, i32* %i.bn_digits.Clone.bn_mul.Clone134, align 4
  %add.bn_digits.Clone.bn_mul.Clone146 = add nsw i32 %89, 1
  store i32 %add.bn_digits.Clone.bn_mul.Clone146, i32* %RetValuePtr.bn_mul.Clone99
  br label %entry.Split.Split.bn_mul.Clone147

entry.Split.Split.bn_mul.Clone147:                ; preds = %for.end.bn_digits.Clone.bn_mul.Clone145
  %RetValue.bn_mul.Clone148 = load i32, i32* %RetValuePtr.bn_mul.Clone99
  store i32 %RetValue.bn_mul.Clone148, i32* %cdigits.bn_mul.Clone95, align 4
  store i32 0, i32* %i.bn_mul.Clone96, align 4
  br label %for.cond.bn_mul.Clone149

for.cond.bn_mul.Clone149:                         ; preds = %for.inc.bn_mul.Clone159, %entry.Split.Split.bn_mul.Clone147
  %90 = load i32, i32* %i.bn_mul.Clone96, align 4
  %91 = load i32, i32* %bdigits.bn_mul.Clone94, align 4
  %cmp.bn_mul.Clone150 = icmp ult i32 %90, %91
  br i1 %cmp.bn_mul.Clone150, label %for.body.bn_mul.Clone151, label %for.end.bn_mul.Clone161

for.body.bn_mul.Clone151:                         ; preds = %for.cond.bn_mul.Clone149
  %92 = load i32, i32* %cdigits.bn_mul.Clone95, align 4
  %93 = load i32*, i32** %c.addr.bn_mul.Clone90, align 4
  %94 = load i32*, i32** %b.addr.bn_mul.Clone91, align 4
  %95 = load i32, i32* %i.bn_mul.Clone96, align 4
  %arrayidx.bn_mul.Clone152 = getelementptr inbounds i32, i32* %94, i32 %95
  %96 = load i32, i32* %arrayidx.bn_mul.Clone152, align 4
  %97 = load i32, i32* %i.bn_mul.Clone96, align 4
  %arrayidx2.bn_mul.Clone153 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone93, i32 0, i32 %97
  %98 = load i32, i32* %i.bn_mul.Clone96, align 4
  %arrayidx3.bn_mul.Clone154 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone93, i32 0, i32 %98
  %call4.bn_mul.Clone155 = call i32 @bn_add_digit_mul(i32* %arrayidx3.bn_mul.Clone154, i32* %arrayidx2.bn_mul.Clone153, i32 %96, i32* %93, i32 %92)
  %99 = load i32, i32* %i.bn_mul.Clone96, align 4
  %100 = load i32, i32* %cdigits.bn_mul.Clone95, align 4
  %add.bn_mul.Clone156 = add i32 %99, %100
  %arrayidx5.bn_mul.Clone157 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone93, i32 0, i32 %add.bn_mul.Clone156
  %101 = load i32, i32* %arrayidx5.bn_mul.Clone157, align 4
  %add6.bn_mul.Clone158 = add i32 %101, %call4.bn_mul.Clone155
  store i32 %add6.bn_mul.Clone158, i32* %arrayidx5.bn_mul.Clone157, align 4
  br label %for.inc.bn_mul.Clone159

for.inc.bn_mul.Clone159:                          ; preds = %for.body.bn_mul.Clone151
  %102 = load i32, i32* %i.bn_mul.Clone96, align 4
  %inc.bn_mul.Clone160 = add i32 %102, 1
  store i32 %inc.bn_mul.Clone160, i32* %i.bn_mul.Clone96, align 4
  br label %for.cond.bn_mul.Clone149

for.end.bn_mul.Clone161:                          ; preds = %for.cond.bn_mul.Clone149
  %103 = load i32, i32* %digits.addr.bn_mul.Clone89, align 4
  %mul7.bn_mul.Clone162 = mul i32 2, %103
  %arraydecay8.bn_mul.Clone163 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone93, i32 0, i32 0
  %104 = load i32*, i32** %a.addr.bn_mul.Clone92, align 4
  call void @bn_assign(i32* %104, i32* %arraydecay8.bn_mul.Clone163, i32 %mul7.bn_mul.Clone162)
  %arraydecay9.bn_mul.Clone164 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone93, i32 0, i32 0
  %105 = bitcast i32* %arraydecay9.bn_mul.Clone164 to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %105, i8 0, i32 520, i1 false)
  br label %entry.bn_mod_mul.Clone45.Split

entry.bn_mod_mul.Clone45.Split:                   ; preds = %for.end.bn_mul.Clone161
  %106 = load i32, i32* %digits.addr.bn_mod_mul.Clone46, align 4
  %107 = load i32*, i32** %d.addr.bn_mod_mul.Clone47, align 4
  %108 = load i32, i32* %digits.addr.bn_mod_mul.Clone46, align 4
  %mul.bn_mod_mul.Clone53 = mul i32 2, %108
  %arraydecay1.bn_mod_mul.Clone54 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mod_mul.Clone51, i32 0, i32 0
  %109 = load i32*, i32** %a.addr.bn_mod_mul.Clone50, align 4
  br label %entry.bn_mod.Clone.bn_mod_mul.Clone55

entry.bn_mod.Clone.bn_mod_mul.Clone55:            ; preds = %entry.bn_mod_mul.Clone45.Split
  %cdigits.addr.bn_mod.Clone.bn_mod_mul.Clone56 = alloca i32, align 4
  %c.addr.bn_mod.Clone.bn_mod_mul.Clone57 = alloca i32*, align 4
  %bdigits.addr.bn_mod.Clone.bn_mod_mul.Clone58 = alloca i32, align 4
  %b.addr.bn_mod.Clone.bn_mod_mul.Clone59 = alloca i32*, align 4
  %a.addr.bn_mod.Clone.bn_mod_mul.Clone60 = alloca i32*, align 4
  %t.bn_mod.Clone.bn_mod_mul.Clone61 = alloca [130 x i32], align 4
  store i32 %106, i32* %cdigits.addr.bn_mod.Clone.bn_mod_mul.Clone56, align 4
  store i32* %107, i32** %c.addr.bn_mod.Clone.bn_mod_mul.Clone57, align 4
  store i32 %mul.bn_mod_mul.Clone53, i32* %bdigits.addr.bn_mod.Clone.bn_mod_mul.Clone58, align 4
  store i32* %arraydecay1.bn_mod_mul.Clone54, i32** %b.addr.bn_mod.Clone.bn_mod_mul.Clone59, align 4
  store i32* %109, i32** %a.addr.bn_mod.Clone.bn_mod_mul.Clone60, align 4
  %110 = bitcast [130 x i32]* %t.bn_mod.Clone.bn_mod_mul.Clone61 to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %110, i8 0, i32 520, i1 false)
  %111 = load i32, i32* %cdigits.addr.bn_mod.Clone.bn_mod_mul.Clone56, align 4
  %112 = load i32*, i32** %c.addr.bn_mod.Clone.bn_mod_mul.Clone57, align 4
  %113 = load i32, i32* %bdigits.addr.bn_mod.Clone.bn_mod_mul.Clone58, align 4
  %114 = load i32*, i32** %b.addr.bn_mod.Clone.bn_mod_mul.Clone59, align 4
  %115 = load i32*, i32** %a.addr.bn_mod.Clone.bn_mod_mul.Clone60, align 4
  %arraydecay.bn_mod.Clone.bn_mod_mul.Clone62 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mod.Clone.bn_mod_mul.Clone61, i32 0, i32 0
  call void @bn_div(i32* %arraydecay.bn_mod.Clone.bn_mod_mul.Clone62, i32* %115, i32* %114, i32 %113, i32* %112, i32 %111)
  %arraydecay1.bn_mod.Clone.bn_mod_mul.Clone63 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mod.Clone.bn_mod_mul.Clone61, i32 0, i32 0
  %116 = bitcast i32* %arraydecay1.bn_mod.Clone.bn_mod_mul.Clone63 to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %116, i8 0, i32 520, i1 false)
  br label %entry.Split.bn_mod_mul.Clone64

entry.Split.bn_mod_mul.Clone64:                   ; preds = %entry.bn_mod.Clone.bn_mod_mul.Clone55
  %arraydecay2.bn_mod_mul.Clone65 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mod_mul.Clone51, i32 0, i32 0
  %117 = bitcast i32* %arraydecay2.bn_mod_mul.Clone65 to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %117, i8 0, i32 520, i1 false)
  br label %entry.Split44

entry.Split44:                                    ; preds = %entry.Split.bn_mod_mul.Clone64
  %118 = load i32, i32* %ddigits.addr, align 4
  %arraydecay9 = getelementptr inbounds [65 x i32], [65 x i32]* %t, i32 0, i32 0
  %RetValuePtr = alloca i32, align 4
  br label %entry.bn_assign_zero.Clone

entry.bn_assign_zero.Clone:                       ; preds = %entry.Split44
  %digits.addr.bn_assign_zero.Clone = alloca i32, align 4
  %a.addr.bn_assign_zero.Clone = alloca i32*, align 4
  %i.bn_assign_zero.Clone = alloca i32, align 4
  store i32 %118, i32* %digits.addr.bn_assign_zero.Clone, align 4
  store i32* %arraydecay9, i32** %a.addr.bn_assign_zero.Clone, align 4
  store i32 0, i32* %i.bn_assign_zero.Clone, align 4
  br label %for.cond.bn_assign_zero.Clone

for.cond.bn_assign_zero.Clone:                    ; preds = %for.inc.bn_assign_zero.Clone, %entry.bn_assign_zero.Clone
  %119 = load i32, i32* %i.bn_assign_zero.Clone, align 4
  %120 = load i32, i32* %digits.addr.bn_assign_zero.Clone, align 4
  %cmp.bn_assign_zero.Clone = icmp ult i32 %119, %120
  br i1 %cmp.bn_assign_zero.Clone, label %for.body.bn_assign_zero.Clone, label %for.end.bn_assign_zero.Clone

for.body.bn_assign_zero.Clone:                    ; preds = %for.cond.bn_assign_zero.Clone
  %121 = load i32*, i32** %a.addr.bn_assign_zero.Clone, align 4
  %122 = load i32, i32* %i.bn_assign_zero.Clone, align 4
  %arrayidx.bn_assign_zero.Clone = getelementptr inbounds i32, i32* %121, i32 %122
  store i32 0, i32* %arrayidx.bn_assign_zero.Clone, align 4
  br label %for.inc.bn_assign_zero.Clone

for.inc.bn_assign_zero.Clone:                     ; preds = %for.body.bn_assign_zero.Clone
  %123 = load i32, i32* %i.bn_assign_zero.Clone, align 4
  %inc.bn_assign_zero.Clone = add i32 %123, 1
  store i32 %inc.bn_assign_zero.Clone, i32* %i.bn_assign_zero.Clone, align 4
  br label %for.cond.bn_assign_zero.Clone

for.end.bn_assign_zero.Clone:                     ; preds = %for.cond.bn_assign_zero.Clone
  br label %entry.Split

entry.Split:                                      ; preds = %for.end.bn_assign_zero.Clone
  %arrayidx10 = getelementptr inbounds [65 x i32], [65 x i32]* %t, i32 0, i32 0
  store i32 1, i32* %arrayidx10, align 4
  %124 = load i32, i32* %cdigits.addr, align 4
  %125 = load i32*, i32** %c.addr, align 4
  br label %entry.bn_digits.Clone

entry.bn_digits.Clone:                            ; preds = %entry.Split
  %digits.addr.bn_digits.Clone = alloca i32, align 4
  %a.addr.bn_digits.Clone = alloca i32*, align 4
  %i.bn_digits.Clone = alloca i32, align 4
  store i32 %124, i32* %digits.addr.bn_digits.Clone, align 4
  store i32* %125, i32** %a.addr.bn_digits.Clone, align 4
  %126 = load i32, i32* %digits.addr.bn_digits.Clone, align 4
  %sub.bn_digits.Clone = sub i32 %126, 1
  store i32 %sub.bn_digits.Clone, i32* %i.bn_digits.Clone, align 4
  br label %for.cond.bn_digits.Clone

for.cond.bn_digits.Clone:                         ; preds = %for.inc.bn_digits.Clone, %entry.bn_digits.Clone
  %127 = load i32, i32* %i.bn_digits.Clone, align 4
  %cmp.bn_digits.Clone = icmp sge i32 %127, 0
  br i1 %cmp.bn_digits.Clone, label %for.body.bn_digits.Clone, label %for.end.bn_digits.Clone

for.body.bn_digits.Clone:                         ; preds = %for.cond.bn_digits.Clone
  %128 = load i32*, i32** %a.addr.bn_digits.Clone, align 4
  %129 = load i32, i32* %i.bn_digits.Clone, align 4
  %arrayidx.bn_digits.Clone = getelementptr inbounds i32, i32* %128, i32 %129
  %130 = load i32, i32* %arrayidx.bn_digits.Clone, align 4
  %tobool.bn_digits.Clone = icmp ne i32 %130, 0
  br i1 %tobool.bn_digits.Clone, label %if.then.bn_digits.Clone, label %if.end.bn_digits.Clone

if.then.bn_digits.Clone:                          ; preds = %for.body.bn_digits.Clone
  br label %for.end.bn_digits.Clone

if.end.bn_digits.Clone:                           ; preds = %for.body.bn_digits.Clone
  br label %for.inc.bn_digits.Clone

for.inc.bn_digits.Clone:                          ; preds = %if.end.bn_digits.Clone
  %131 = load i32, i32* %i.bn_digits.Clone, align 4
  %dec.bn_digits.Clone = add nsw i32 %131, -1
  store i32 %dec.bn_digits.Clone, i32* %i.bn_digits.Clone, align 4
  br label %for.cond.bn_digits.Clone

for.end.bn_digits.Clone:                          ; preds = %if.then.bn_digits.Clone, %for.cond.bn_digits.Clone
  %132 = load i32, i32* %i.bn_digits.Clone, align 4
  %add.bn_digits.Clone = add nsw i32 %132, 1
  store i32 %add.bn_digits.Clone, i32* %RetValuePtr
  br label %entry.Split.Split

entry.Split.Split:                                ; preds = %for.end.bn_digits.Clone
  %RetValue = load i32, i32* %RetValuePtr
  store i32 %RetValue, i32* %cdigits.addr, align 4
  %133 = load i32, i32* %cdigits.addr, align 4
  %sub = sub i32 %133, 1
  store i32 %sub, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc35, %entry.Split.Split
  %134 = load i32, i32* %i, align 4
  %cmp = icmp sge i32 %134, 0
  br i1 %cmp, label %for.body, label %for.end36

for.body:                                         ; preds = %for.cond
  %135 = load i32*, i32** %c.addr, align 4
  %136 = load i32, i32* %i, align 4
  %arrayidx11 = getelementptr inbounds i32, i32* %135, i32 %136
  %137 = load i32, i32* %arrayidx11, align 4
  store i32 %137, i32* %ci, align 4
  store i32 32, i32* %ci_bits, align 4
  %138 = load i32, i32* %i, align 4
  %139 = load i32, i32* %cdigits.addr, align 4
  %sub12 = sub i32 %139, 1
  %cmp13 = icmp eq i32 %138, %sub12
  br i1 %cmp13, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then
  %140 = load i32, i32* %ci, align 4
  %shr = lshr i32 %140, 30
  %and = and i32 %shr, 3
  %tobool = icmp ne i32 %and, 0
  %lnot = xor i1 %tobool, true
  br i1 %lnot, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %141 = load i32, i32* %ci, align 4
  %shl = shl i32 %141, 2
  store i32 %shl, i32* %ci, align 4
  %142 = load i32, i32* %ci_bits, align 4
  %sub14 = sub i32 %142, 2
  store i32 %sub14, i32* %ci_bits, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %if.end

if.end:                                           ; preds = %while.end, %for.body
  store i32 0, i32* %j, align 4
  br label %for.cond15

for.cond15:                                       ; preds = %for.inc, %if.end
  %143 = load i32, i32* %j, align 4
  %144 = load i32, i32* %ci_bits, align 4
  %cmp16 = icmp ult i32 %143, %144
  br i1 %cmp16, label %for.body17, label %for.end

for.body17:                                       ; preds = %for.cond15
  %145 = load i32, i32* %ddigits.addr, align 4
  %146 = load i32*, i32** %d.addr, align 4
  %arraydecay18 = getelementptr inbounds [65 x i32], [65 x i32]* %t, i32 0, i32 0
  %arraydecay19 = getelementptr inbounds [65 x i32], [65 x i32]* %t, i32 0, i32 0
  %arraydecay20 = getelementptr inbounds [65 x i32], [65 x i32]* %t, i32 0, i32 0
  br label %entry.bn_mod_mul.Clone23

entry.bn_mod_mul.Clone23:                         ; preds = %for.body17
  %digits.addr.bn_mod_mul.Clone24 = alloca i32, align 4
  %d.addr.bn_mod_mul.Clone25 = alloca i32*, align 4
  %c.addr.bn_mod_mul.Clone26 = alloca i32*, align 4
  %b.addr.bn_mod_mul.Clone27 = alloca i32*, align 4
  %a.addr.bn_mod_mul.Clone28 = alloca i32*, align 4
  %t.bn_mod_mul.Clone29 = alloca [130 x i32], align 4
  store i32 %145, i32* %digits.addr.bn_mod_mul.Clone24, align 4
  store i32* %146, i32** %d.addr.bn_mod_mul.Clone25, align 4
  store i32* %arraydecay18, i32** %c.addr.bn_mod_mul.Clone26, align 4
  store i32* %arraydecay19, i32** %b.addr.bn_mod_mul.Clone27, align 4
  store i32* %arraydecay20, i32** %a.addr.bn_mod_mul.Clone28, align 4
  %147 = load i32, i32* %digits.addr.bn_mod_mul.Clone24, align 4
  %148 = load i32*, i32** %c.addr.bn_mod_mul.Clone26, align 4
  %149 = load i32*, i32** %b.addr.bn_mod_mul.Clone27, align 4
  %arraydecay.bn_mod_mul.Clone30 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mod_mul.Clone29, i32 0, i32 0
  br label %entry.bn_mul.Clone165

entry.bn_mul.Clone165:                            ; preds = %entry.bn_mod_mul.Clone23
  %digits.addr.bn_mul.Clone166 = alloca i32, align 4
  %c.addr.bn_mul.Clone167 = alloca i32*, align 4
  %b.addr.bn_mul.Clone168 = alloca i32*, align 4
  %a.addr.bn_mul.Clone169 = alloca i32*, align 4
  %t.bn_mul.Clone170 = alloca [130 x i32], align 4
  %bdigits.bn_mul.Clone171 = alloca i32, align 4
  %cdigits.bn_mul.Clone172 = alloca i32, align 4
  %i.bn_mul.Clone173 = alloca i32, align 4
  store i32 %147, i32* %digits.addr.bn_mul.Clone166, align 4
  store i32* %148, i32** %c.addr.bn_mul.Clone167, align 4
  store i32* %149, i32** %b.addr.bn_mul.Clone168, align 4
  store i32* %arraydecay.bn_mod_mul.Clone30, i32** %a.addr.bn_mul.Clone169, align 4
  %150 = load i32, i32* %digits.addr.bn_mul.Clone166, align 4
  %mul.bn_mul.Clone174 = mul i32 2, %150
  %arraydecay.bn_mul.Clone175 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone170, i32 0, i32 0
  %RetValuePtr.bn_mul.Clone176 = alloca i32, align 4
  %RetValuePtr18.bn_mul.Clone177 = alloca i32, align 4
  br label %entry.bn_assign_zero.Clone.bn_mul.Clone178

entry.bn_assign_zero.Clone.bn_mul.Clone178:       ; preds = %entry.bn_mul.Clone165
  %digits.addr.bn_assign_zero.Clone.bn_mul.Clone179 = alloca i32, align 4
  %a.addr.bn_assign_zero.Clone.bn_mul.Clone180 = alloca i32*, align 4
  %i.bn_assign_zero.Clone.bn_mul.Clone181 = alloca i32, align 4
  store i32 %mul.bn_mul.Clone174, i32* %digits.addr.bn_assign_zero.Clone.bn_mul.Clone179, align 4
  store i32* %arraydecay.bn_mul.Clone175, i32** %a.addr.bn_assign_zero.Clone.bn_mul.Clone180, align 4
  store i32 0, i32* %i.bn_assign_zero.Clone.bn_mul.Clone181, align 4
  br label %for.cond.bn_assign_zero.Clone.bn_mul.Clone182

for.cond.bn_assign_zero.Clone.bn_mul.Clone182:    ; preds = %for.inc.bn_assign_zero.Clone.bn_mul.Clone186, %entry.bn_assign_zero.Clone.bn_mul.Clone178
  %151 = load i32, i32* %i.bn_assign_zero.Clone.bn_mul.Clone181, align 4
  %152 = load i32, i32* %digits.addr.bn_assign_zero.Clone.bn_mul.Clone179, align 4
  %cmp.bn_assign_zero.Clone.bn_mul.Clone183 = icmp ult i32 %151, %152
  br i1 %cmp.bn_assign_zero.Clone.bn_mul.Clone183, label %for.body.bn_assign_zero.Clone.bn_mul.Clone184, label %for.end.bn_assign_zero.Clone.bn_mul.Clone188

for.body.bn_assign_zero.Clone.bn_mul.Clone184:    ; preds = %for.cond.bn_assign_zero.Clone.bn_mul.Clone182
  %153 = load i32*, i32** %a.addr.bn_assign_zero.Clone.bn_mul.Clone180, align 4
  %154 = load i32, i32* %i.bn_assign_zero.Clone.bn_mul.Clone181, align 4
  %arrayidx.bn_assign_zero.Clone.bn_mul.Clone185 = getelementptr inbounds i32, i32* %153, i32 %154
  store i32 0, i32* %arrayidx.bn_assign_zero.Clone.bn_mul.Clone185, align 4
  br label %for.inc.bn_assign_zero.Clone.bn_mul.Clone186

for.inc.bn_assign_zero.Clone.bn_mul.Clone186:     ; preds = %for.body.bn_assign_zero.Clone.bn_mul.Clone184
  %155 = load i32, i32* %i.bn_assign_zero.Clone.bn_mul.Clone181, align 4
  %inc.bn_assign_zero.Clone.bn_mul.Clone187 = add i32 %155, 1
  store i32 %inc.bn_assign_zero.Clone.bn_mul.Clone187, i32* %i.bn_assign_zero.Clone.bn_mul.Clone181, align 4
  br label %for.cond.bn_assign_zero.Clone.bn_mul.Clone182

for.end.bn_assign_zero.Clone.bn_mul.Clone188:     ; preds = %for.cond.bn_assign_zero.Clone.bn_mul.Clone182
  br label %entry.Split.bn_mul.Clone189

entry.Split.bn_mul.Clone189:                      ; preds = %for.end.bn_assign_zero.Clone.bn_mul.Clone188
  %156 = load i32, i32* %digits.addr.bn_mul.Clone166, align 4
  %157 = load i32*, i32** %b.addr.bn_mul.Clone168, align 4
  br label %entry.bn_digits.Clone2.bn_mul.Clone190

entry.bn_digits.Clone2.bn_mul.Clone190:           ; preds = %entry.Split.bn_mul.Clone189
  %digits.addr.bn_digits.Clone3.bn_mul.Clone191 = alloca i32, align 4
  %a.addr.bn_digits.Clone4.bn_mul.Clone192 = alloca i32*, align 4
  %i.bn_digits.Clone5.bn_mul.Clone193 = alloca i32, align 4
  store i32 %156, i32* %digits.addr.bn_digits.Clone3.bn_mul.Clone191, align 4
  store i32* %157, i32** %a.addr.bn_digits.Clone4.bn_mul.Clone192, align 4
  %158 = load i32, i32* %digits.addr.bn_digits.Clone3.bn_mul.Clone191, align 4
  %sub.bn_digits.Clone6.bn_mul.Clone194 = sub i32 %158, 1
  store i32 %sub.bn_digits.Clone6.bn_mul.Clone194, i32* %i.bn_digits.Clone5.bn_mul.Clone193, align 4
  br label %for.cond.bn_digits.Clone7.bn_mul.Clone195

for.cond.bn_digits.Clone7.bn_mul.Clone195:        ; preds = %for.inc.bn_digits.Clone14.bn_mul.Clone202, %entry.bn_digits.Clone2.bn_mul.Clone190
  %159 = load i32, i32* %i.bn_digits.Clone5.bn_mul.Clone193, align 4
  %cmp.bn_digits.Clone8.bn_mul.Clone196 = icmp sge i32 %159, 0
  br i1 %cmp.bn_digits.Clone8.bn_mul.Clone196, label %for.body.bn_digits.Clone9.bn_mul.Clone197, label %for.end.bn_digits.Clone16.bn_mul.Clone204

for.body.bn_digits.Clone9.bn_mul.Clone197:        ; preds = %for.cond.bn_digits.Clone7.bn_mul.Clone195
  %160 = load i32*, i32** %a.addr.bn_digits.Clone4.bn_mul.Clone192, align 4
  %161 = load i32, i32* %i.bn_digits.Clone5.bn_mul.Clone193, align 4
  %arrayidx.bn_digits.Clone10.bn_mul.Clone198 = getelementptr inbounds i32, i32* %160, i32 %161
  %162 = load i32, i32* %arrayidx.bn_digits.Clone10.bn_mul.Clone198, align 4
  %tobool.bn_digits.Clone11.bn_mul.Clone199 = icmp ne i32 %162, 0
  br i1 %tobool.bn_digits.Clone11.bn_mul.Clone199, label %if.then.bn_digits.Clone12.bn_mul.Clone200, label %if.end.bn_digits.Clone13.bn_mul.Clone201

if.then.bn_digits.Clone12.bn_mul.Clone200:        ; preds = %for.body.bn_digits.Clone9.bn_mul.Clone197
  br label %for.end.bn_digits.Clone16.bn_mul.Clone204

if.end.bn_digits.Clone13.bn_mul.Clone201:         ; preds = %for.body.bn_digits.Clone9.bn_mul.Clone197
  br label %for.inc.bn_digits.Clone14.bn_mul.Clone202

for.inc.bn_digits.Clone14.bn_mul.Clone202:        ; preds = %if.end.bn_digits.Clone13.bn_mul.Clone201
  %163 = load i32, i32* %i.bn_digits.Clone5.bn_mul.Clone193, align 4
  %dec.bn_digits.Clone15.bn_mul.Clone203 = add nsw i32 %163, -1
  store i32 %dec.bn_digits.Clone15.bn_mul.Clone203, i32* %i.bn_digits.Clone5.bn_mul.Clone193, align 4
  br label %for.cond.bn_digits.Clone7.bn_mul.Clone195

for.end.bn_digits.Clone16.bn_mul.Clone204:        ; preds = %if.then.bn_digits.Clone12.bn_mul.Clone200, %for.cond.bn_digits.Clone7.bn_mul.Clone195
  %164 = load i32, i32* %i.bn_digits.Clone5.bn_mul.Clone193, align 4
  %add.bn_digits.Clone17.bn_mul.Clone205 = add nsw i32 %164, 1
  store i32 %add.bn_digits.Clone17.bn_mul.Clone205, i32* %RetValuePtr18.bn_mul.Clone177
  br label %entry.Split.Split1.bn_mul.Clone206

entry.Split.Split1.bn_mul.Clone206:               ; preds = %for.end.bn_digits.Clone16.bn_mul.Clone204
  %RetValue19.bn_mul.Clone207 = load i32, i32* %RetValuePtr18.bn_mul.Clone177
  store i32 %RetValue19.bn_mul.Clone207, i32* %bdigits.bn_mul.Clone171, align 4
  %165 = load i32, i32* %digits.addr.bn_mul.Clone166, align 4
  %166 = load i32*, i32** %c.addr.bn_mul.Clone167, align 4
  br label %entry.bn_digits.Clone.bn_mul.Clone208

entry.bn_digits.Clone.bn_mul.Clone208:            ; preds = %entry.Split.Split1.bn_mul.Clone206
  %digits.addr.bn_digits.Clone.bn_mul.Clone209 = alloca i32, align 4
  %a.addr.bn_digits.Clone.bn_mul.Clone210 = alloca i32*, align 4
  %i.bn_digits.Clone.bn_mul.Clone211 = alloca i32, align 4
  store i32 %165, i32* %digits.addr.bn_digits.Clone.bn_mul.Clone209, align 4
  store i32* %166, i32** %a.addr.bn_digits.Clone.bn_mul.Clone210, align 4
  %167 = load i32, i32* %digits.addr.bn_digits.Clone.bn_mul.Clone209, align 4
  %sub.bn_digits.Clone.bn_mul.Clone212 = sub i32 %167, 1
  store i32 %sub.bn_digits.Clone.bn_mul.Clone212, i32* %i.bn_digits.Clone.bn_mul.Clone211, align 4
  br label %for.cond.bn_digits.Clone.bn_mul.Clone213

for.cond.bn_digits.Clone.bn_mul.Clone213:         ; preds = %for.inc.bn_digits.Clone.bn_mul.Clone220, %entry.bn_digits.Clone.bn_mul.Clone208
  %168 = load i32, i32* %i.bn_digits.Clone.bn_mul.Clone211, align 4
  %cmp.bn_digits.Clone.bn_mul.Clone214 = icmp sge i32 %168, 0
  br i1 %cmp.bn_digits.Clone.bn_mul.Clone214, label %for.body.bn_digits.Clone.bn_mul.Clone215, label %for.end.bn_digits.Clone.bn_mul.Clone222

for.body.bn_digits.Clone.bn_mul.Clone215:         ; preds = %for.cond.bn_digits.Clone.bn_mul.Clone213
  %169 = load i32*, i32** %a.addr.bn_digits.Clone.bn_mul.Clone210, align 4
  %170 = load i32, i32* %i.bn_digits.Clone.bn_mul.Clone211, align 4
  %arrayidx.bn_digits.Clone.bn_mul.Clone216 = getelementptr inbounds i32, i32* %169, i32 %170
  %171 = load i32, i32* %arrayidx.bn_digits.Clone.bn_mul.Clone216, align 4
  %tobool.bn_digits.Clone.bn_mul.Clone217 = icmp ne i32 %171, 0
  br i1 %tobool.bn_digits.Clone.bn_mul.Clone217, label %if.then.bn_digits.Clone.bn_mul.Clone218, label %if.end.bn_digits.Clone.bn_mul.Clone219

if.then.bn_digits.Clone.bn_mul.Clone218:          ; preds = %for.body.bn_digits.Clone.bn_mul.Clone215
  br label %for.end.bn_digits.Clone.bn_mul.Clone222

if.end.bn_digits.Clone.bn_mul.Clone219:           ; preds = %for.body.bn_digits.Clone.bn_mul.Clone215
  br label %for.inc.bn_digits.Clone.bn_mul.Clone220

for.inc.bn_digits.Clone.bn_mul.Clone220:          ; preds = %if.end.bn_digits.Clone.bn_mul.Clone219
  %172 = load i32, i32* %i.bn_digits.Clone.bn_mul.Clone211, align 4
  %dec.bn_digits.Clone.bn_mul.Clone221 = add nsw i32 %172, -1
  store i32 %dec.bn_digits.Clone.bn_mul.Clone221, i32* %i.bn_digits.Clone.bn_mul.Clone211, align 4
  br label %for.cond.bn_digits.Clone.bn_mul.Clone213

for.end.bn_digits.Clone.bn_mul.Clone222:          ; preds = %if.then.bn_digits.Clone.bn_mul.Clone218, %for.cond.bn_digits.Clone.bn_mul.Clone213
  %173 = load i32, i32* %i.bn_digits.Clone.bn_mul.Clone211, align 4
  %add.bn_digits.Clone.bn_mul.Clone223 = add nsw i32 %173, 1
  store i32 %add.bn_digits.Clone.bn_mul.Clone223, i32* %RetValuePtr.bn_mul.Clone176
  br label %entry.Split.Split.bn_mul.Clone224

entry.Split.Split.bn_mul.Clone224:                ; preds = %for.end.bn_digits.Clone.bn_mul.Clone222
  %RetValue.bn_mul.Clone225 = load i32, i32* %RetValuePtr.bn_mul.Clone176
  store i32 %RetValue.bn_mul.Clone225, i32* %cdigits.bn_mul.Clone172, align 4
  store i32 0, i32* %i.bn_mul.Clone173, align 4
  br label %for.cond.bn_mul.Clone226

for.cond.bn_mul.Clone226:                         ; preds = %for.inc.bn_mul.Clone236, %entry.Split.Split.bn_mul.Clone224
  %174 = load i32, i32* %i.bn_mul.Clone173, align 4
  %175 = load i32, i32* %bdigits.bn_mul.Clone171, align 4
  %cmp.bn_mul.Clone227 = icmp ult i32 %174, %175
  br i1 %cmp.bn_mul.Clone227, label %for.body.bn_mul.Clone228, label %for.end.bn_mul.Clone238

for.body.bn_mul.Clone228:                         ; preds = %for.cond.bn_mul.Clone226
  %176 = load i32, i32* %cdigits.bn_mul.Clone172, align 4
  %177 = load i32*, i32** %c.addr.bn_mul.Clone167, align 4
  %178 = load i32*, i32** %b.addr.bn_mul.Clone168, align 4
  %179 = load i32, i32* %i.bn_mul.Clone173, align 4
  %arrayidx.bn_mul.Clone229 = getelementptr inbounds i32, i32* %178, i32 %179
  %180 = load i32, i32* %arrayidx.bn_mul.Clone229, align 4
  %181 = load i32, i32* %i.bn_mul.Clone173, align 4
  %arrayidx2.bn_mul.Clone230 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone170, i32 0, i32 %181
  %182 = load i32, i32* %i.bn_mul.Clone173, align 4
  %arrayidx3.bn_mul.Clone231 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone170, i32 0, i32 %182
  %call4.bn_mul.Clone232 = call i32 @bn_add_digit_mul(i32* %arrayidx3.bn_mul.Clone231, i32* %arrayidx2.bn_mul.Clone230, i32 %180, i32* %177, i32 %176)
  %183 = load i32, i32* %i.bn_mul.Clone173, align 4
  %184 = load i32, i32* %cdigits.bn_mul.Clone172, align 4
  %add.bn_mul.Clone233 = add i32 %183, %184
  %arrayidx5.bn_mul.Clone234 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone170, i32 0, i32 %add.bn_mul.Clone233
  %185 = load i32, i32* %arrayidx5.bn_mul.Clone234, align 4
  %add6.bn_mul.Clone235 = add i32 %185, %call4.bn_mul.Clone232
  store i32 %add6.bn_mul.Clone235, i32* %arrayidx5.bn_mul.Clone234, align 4
  br label %for.inc.bn_mul.Clone236

for.inc.bn_mul.Clone236:                          ; preds = %for.body.bn_mul.Clone228
  %186 = load i32, i32* %i.bn_mul.Clone173, align 4
  %inc.bn_mul.Clone237 = add i32 %186, 1
  store i32 %inc.bn_mul.Clone237, i32* %i.bn_mul.Clone173, align 4
  br label %for.cond.bn_mul.Clone226

for.end.bn_mul.Clone238:                          ; preds = %for.cond.bn_mul.Clone226
  %187 = load i32, i32* %digits.addr.bn_mul.Clone166, align 4
  %mul7.bn_mul.Clone239 = mul i32 2, %187
  %arraydecay8.bn_mul.Clone240 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone170, i32 0, i32 0
  %188 = load i32*, i32** %a.addr.bn_mul.Clone169, align 4
  call void @bn_assign(i32* %188, i32* %arraydecay8.bn_mul.Clone240, i32 %mul7.bn_mul.Clone239)
  %arraydecay9.bn_mul.Clone241 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone170, i32 0, i32 0
  %189 = bitcast i32* %arraydecay9.bn_mul.Clone241 to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %189, i8 0, i32 520, i1 false)
  br label %entry.bn_mod_mul.Clone23.Split

entry.bn_mod_mul.Clone23.Split:                   ; preds = %for.end.bn_mul.Clone238
  %190 = load i32, i32* %digits.addr.bn_mod_mul.Clone24, align 4
  %191 = load i32*, i32** %d.addr.bn_mod_mul.Clone25, align 4
  %192 = load i32, i32* %digits.addr.bn_mod_mul.Clone24, align 4
  %mul.bn_mod_mul.Clone31 = mul i32 2, %192
  %arraydecay1.bn_mod_mul.Clone32 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mod_mul.Clone29, i32 0, i32 0
  %193 = load i32*, i32** %a.addr.bn_mod_mul.Clone28, align 4
  br label %entry.bn_mod.Clone.bn_mod_mul.Clone33

entry.bn_mod.Clone.bn_mod_mul.Clone33:            ; preds = %entry.bn_mod_mul.Clone23.Split
  %cdigits.addr.bn_mod.Clone.bn_mod_mul.Clone34 = alloca i32, align 4
  %c.addr.bn_mod.Clone.bn_mod_mul.Clone35 = alloca i32*, align 4
  %bdigits.addr.bn_mod.Clone.bn_mod_mul.Clone36 = alloca i32, align 4
  %b.addr.bn_mod.Clone.bn_mod_mul.Clone37 = alloca i32*, align 4
  %a.addr.bn_mod.Clone.bn_mod_mul.Clone38 = alloca i32*, align 4
  %t.bn_mod.Clone.bn_mod_mul.Clone39 = alloca [130 x i32], align 4
  store i32 %190, i32* %cdigits.addr.bn_mod.Clone.bn_mod_mul.Clone34, align 4
  store i32* %191, i32** %c.addr.bn_mod.Clone.bn_mod_mul.Clone35, align 4
  store i32 %mul.bn_mod_mul.Clone31, i32* %bdigits.addr.bn_mod.Clone.bn_mod_mul.Clone36, align 4
  store i32* %arraydecay1.bn_mod_mul.Clone32, i32** %b.addr.bn_mod.Clone.bn_mod_mul.Clone37, align 4
  store i32* %193, i32** %a.addr.bn_mod.Clone.bn_mod_mul.Clone38, align 4
  %194 = bitcast [130 x i32]* %t.bn_mod.Clone.bn_mod_mul.Clone39 to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %194, i8 0, i32 520, i1 false)
  %195 = load i32, i32* %cdigits.addr.bn_mod.Clone.bn_mod_mul.Clone34, align 4
  %196 = load i32*, i32** %c.addr.bn_mod.Clone.bn_mod_mul.Clone35, align 4
  %197 = load i32, i32* %bdigits.addr.bn_mod.Clone.bn_mod_mul.Clone36, align 4
  %198 = load i32*, i32** %b.addr.bn_mod.Clone.bn_mod_mul.Clone37, align 4
  %199 = load i32*, i32** %a.addr.bn_mod.Clone.bn_mod_mul.Clone38, align 4
  %arraydecay.bn_mod.Clone.bn_mod_mul.Clone40 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mod.Clone.bn_mod_mul.Clone39, i32 0, i32 0
  call void @bn_div(i32* %arraydecay.bn_mod.Clone.bn_mod_mul.Clone40, i32* %199, i32* %198, i32 %197, i32* %196, i32 %195)
  %arraydecay1.bn_mod.Clone.bn_mod_mul.Clone41 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mod.Clone.bn_mod_mul.Clone39, i32 0, i32 0
  %200 = bitcast i32* %arraydecay1.bn_mod.Clone.bn_mod_mul.Clone41 to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %200, i8 0, i32 520, i1 false)
  br label %entry.Split.bn_mod_mul.Clone42

entry.Split.bn_mod_mul.Clone42:                   ; preds = %entry.bn_mod.Clone.bn_mod_mul.Clone33
  %arraydecay2.bn_mod_mul.Clone43 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mod_mul.Clone29, i32 0, i32 0
  %201 = bitcast i32* %arraydecay2.bn_mod_mul.Clone43 to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %201, i8 0, i32 520, i1 false)
  br label %for.body17.Split22

for.body17.Split22:                               ; preds = %entry.Split.bn_mod_mul.Clone42
  %202 = load i32, i32* %ddigits.addr, align 4
  %203 = load i32*, i32** %d.addr, align 4
  %arraydecay21 = getelementptr inbounds [65 x i32], [65 x i32]* %t, i32 0, i32 0
  %arraydecay22 = getelementptr inbounds [65 x i32], [65 x i32]* %t, i32 0, i32 0
  %arraydecay23 = getelementptr inbounds [65 x i32], [65 x i32]* %t, i32 0, i32 0
  br label %entry.bn_mod_mul.Clone1

entry.bn_mod_mul.Clone1:                          ; preds = %for.body17.Split22
  %digits.addr.bn_mod_mul.Clone2 = alloca i32, align 4
  %d.addr.bn_mod_mul.Clone3 = alloca i32*, align 4
  %c.addr.bn_mod_mul.Clone4 = alloca i32*, align 4
  %b.addr.bn_mod_mul.Clone5 = alloca i32*, align 4
  %a.addr.bn_mod_mul.Clone6 = alloca i32*, align 4
  %t.bn_mod_mul.Clone7 = alloca [130 x i32], align 4
  store i32 %202, i32* %digits.addr.bn_mod_mul.Clone2, align 4
  store i32* %203, i32** %d.addr.bn_mod_mul.Clone3, align 4
  store i32* %arraydecay21, i32** %c.addr.bn_mod_mul.Clone4, align 4
  store i32* %arraydecay22, i32** %b.addr.bn_mod_mul.Clone5, align 4
  store i32* %arraydecay23, i32** %a.addr.bn_mod_mul.Clone6, align 4
  %204 = load i32, i32* %digits.addr.bn_mod_mul.Clone2, align 4
  %205 = load i32*, i32** %c.addr.bn_mod_mul.Clone4, align 4
  %206 = load i32*, i32** %b.addr.bn_mod_mul.Clone5, align 4
  %arraydecay.bn_mod_mul.Clone8 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mod_mul.Clone7, i32 0, i32 0
  br label %entry.bn_mul.Clone242

entry.bn_mul.Clone242:                            ; preds = %entry.bn_mod_mul.Clone1
  %digits.addr.bn_mul.Clone243 = alloca i32, align 4
  %c.addr.bn_mul.Clone244 = alloca i32*, align 4
  %b.addr.bn_mul.Clone245 = alloca i32*, align 4
  %a.addr.bn_mul.Clone246 = alloca i32*, align 4
  %t.bn_mul.Clone247 = alloca [130 x i32], align 4
  %bdigits.bn_mul.Clone248 = alloca i32, align 4
  %cdigits.bn_mul.Clone249 = alloca i32, align 4
  %i.bn_mul.Clone250 = alloca i32, align 4
  store i32 %204, i32* %digits.addr.bn_mul.Clone243, align 4
  store i32* %205, i32** %c.addr.bn_mul.Clone244, align 4
  store i32* %206, i32** %b.addr.bn_mul.Clone245, align 4
  store i32* %arraydecay.bn_mod_mul.Clone8, i32** %a.addr.bn_mul.Clone246, align 4
  %207 = load i32, i32* %digits.addr.bn_mul.Clone243, align 4
  %mul.bn_mul.Clone251 = mul i32 2, %207
  %arraydecay.bn_mul.Clone252 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone247, i32 0, i32 0
  %RetValuePtr.bn_mul.Clone253 = alloca i32, align 4
  %RetValuePtr18.bn_mul.Clone254 = alloca i32, align 4
  br label %entry.bn_assign_zero.Clone.bn_mul.Clone255

entry.bn_assign_zero.Clone.bn_mul.Clone255:       ; preds = %entry.bn_mul.Clone242
  %digits.addr.bn_assign_zero.Clone.bn_mul.Clone256 = alloca i32, align 4
  %a.addr.bn_assign_zero.Clone.bn_mul.Clone257 = alloca i32*, align 4
  %i.bn_assign_zero.Clone.bn_mul.Clone258 = alloca i32, align 4
  store i32 %mul.bn_mul.Clone251, i32* %digits.addr.bn_assign_zero.Clone.bn_mul.Clone256, align 4
  store i32* %arraydecay.bn_mul.Clone252, i32** %a.addr.bn_assign_zero.Clone.bn_mul.Clone257, align 4
  store i32 0, i32* %i.bn_assign_zero.Clone.bn_mul.Clone258, align 4
  br label %for.cond.bn_assign_zero.Clone.bn_mul.Clone259

for.cond.bn_assign_zero.Clone.bn_mul.Clone259:    ; preds = %for.inc.bn_assign_zero.Clone.bn_mul.Clone263, %entry.bn_assign_zero.Clone.bn_mul.Clone255
  %208 = load i32, i32* %i.bn_assign_zero.Clone.bn_mul.Clone258, align 4
  %209 = load i32, i32* %digits.addr.bn_assign_zero.Clone.bn_mul.Clone256, align 4
  %cmp.bn_assign_zero.Clone.bn_mul.Clone260 = icmp ult i32 %208, %209
  br i1 %cmp.bn_assign_zero.Clone.bn_mul.Clone260, label %for.body.bn_assign_zero.Clone.bn_mul.Clone261, label %for.end.bn_assign_zero.Clone.bn_mul.Clone265

for.body.bn_assign_zero.Clone.bn_mul.Clone261:    ; preds = %for.cond.bn_assign_zero.Clone.bn_mul.Clone259
  %210 = load i32*, i32** %a.addr.bn_assign_zero.Clone.bn_mul.Clone257, align 4
  %211 = load i32, i32* %i.bn_assign_zero.Clone.bn_mul.Clone258, align 4
  %arrayidx.bn_assign_zero.Clone.bn_mul.Clone262 = getelementptr inbounds i32, i32* %210, i32 %211
  store i32 0, i32* %arrayidx.bn_assign_zero.Clone.bn_mul.Clone262, align 4
  br label %for.inc.bn_assign_zero.Clone.bn_mul.Clone263

for.inc.bn_assign_zero.Clone.bn_mul.Clone263:     ; preds = %for.body.bn_assign_zero.Clone.bn_mul.Clone261
  %212 = load i32, i32* %i.bn_assign_zero.Clone.bn_mul.Clone258, align 4
  %inc.bn_assign_zero.Clone.bn_mul.Clone264 = add i32 %212, 1
  store i32 %inc.bn_assign_zero.Clone.bn_mul.Clone264, i32* %i.bn_assign_zero.Clone.bn_mul.Clone258, align 4
  br label %for.cond.bn_assign_zero.Clone.bn_mul.Clone259

for.end.bn_assign_zero.Clone.bn_mul.Clone265:     ; preds = %for.cond.bn_assign_zero.Clone.bn_mul.Clone259
  br label %entry.Split.bn_mul.Clone266

entry.Split.bn_mul.Clone266:                      ; preds = %for.end.bn_assign_zero.Clone.bn_mul.Clone265
  %213 = load i32, i32* %digits.addr.bn_mul.Clone243, align 4
  %214 = load i32*, i32** %b.addr.bn_mul.Clone245, align 4
  br label %entry.bn_digits.Clone2.bn_mul.Clone267

entry.bn_digits.Clone2.bn_mul.Clone267:           ; preds = %entry.Split.bn_mul.Clone266
  %digits.addr.bn_digits.Clone3.bn_mul.Clone268 = alloca i32, align 4
  %a.addr.bn_digits.Clone4.bn_mul.Clone269 = alloca i32*, align 4
  %i.bn_digits.Clone5.bn_mul.Clone270 = alloca i32, align 4
  store i32 %213, i32* %digits.addr.bn_digits.Clone3.bn_mul.Clone268, align 4
  store i32* %214, i32** %a.addr.bn_digits.Clone4.bn_mul.Clone269, align 4
  %215 = load i32, i32* %digits.addr.bn_digits.Clone3.bn_mul.Clone268, align 4
  %sub.bn_digits.Clone6.bn_mul.Clone271 = sub i32 %215, 1
  store i32 %sub.bn_digits.Clone6.bn_mul.Clone271, i32* %i.bn_digits.Clone5.bn_mul.Clone270, align 4
  br label %for.cond.bn_digits.Clone7.bn_mul.Clone272

for.cond.bn_digits.Clone7.bn_mul.Clone272:        ; preds = %for.inc.bn_digits.Clone14.bn_mul.Clone279, %entry.bn_digits.Clone2.bn_mul.Clone267
  %216 = load i32, i32* %i.bn_digits.Clone5.bn_mul.Clone270, align 4
  %cmp.bn_digits.Clone8.bn_mul.Clone273 = icmp sge i32 %216, 0
  br i1 %cmp.bn_digits.Clone8.bn_mul.Clone273, label %for.body.bn_digits.Clone9.bn_mul.Clone274, label %for.end.bn_digits.Clone16.bn_mul.Clone281

for.body.bn_digits.Clone9.bn_mul.Clone274:        ; preds = %for.cond.bn_digits.Clone7.bn_mul.Clone272
  %217 = load i32*, i32** %a.addr.bn_digits.Clone4.bn_mul.Clone269, align 4
  %218 = load i32, i32* %i.bn_digits.Clone5.bn_mul.Clone270, align 4
  %arrayidx.bn_digits.Clone10.bn_mul.Clone275 = getelementptr inbounds i32, i32* %217, i32 %218
  %219 = load i32, i32* %arrayidx.bn_digits.Clone10.bn_mul.Clone275, align 4
  %tobool.bn_digits.Clone11.bn_mul.Clone276 = icmp ne i32 %219, 0
  br i1 %tobool.bn_digits.Clone11.bn_mul.Clone276, label %if.then.bn_digits.Clone12.bn_mul.Clone277, label %if.end.bn_digits.Clone13.bn_mul.Clone278

if.then.bn_digits.Clone12.bn_mul.Clone277:        ; preds = %for.body.bn_digits.Clone9.bn_mul.Clone274
  br label %for.end.bn_digits.Clone16.bn_mul.Clone281

if.end.bn_digits.Clone13.bn_mul.Clone278:         ; preds = %for.body.bn_digits.Clone9.bn_mul.Clone274
  br label %for.inc.bn_digits.Clone14.bn_mul.Clone279

for.inc.bn_digits.Clone14.bn_mul.Clone279:        ; preds = %if.end.bn_digits.Clone13.bn_mul.Clone278
  %220 = load i32, i32* %i.bn_digits.Clone5.bn_mul.Clone270, align 4
  %dec.bn_digits.Clone15.bn_mul.Clone280 = add nsw i32 %220, -1
  store i32 %dec.bn_digits.Clone15.bn_mul.Clone280, i32* %i.bn_digits.Clone5.bn_mul.Clone270, align 4
  br label %for.cond.bn_digits.Clone7.bn_mul.Clone272

for.end.bn_digits.Clone16.bn_mul.Clone281:        ; preds = %if.then.bn_digits.Clone12.bn_mul.Clone277, %for.cond.bn_digits.Clone7.bn_mul.Clone272
  %221 = load i32, i32* %i.bn_digits.Clone5.bn_mul.Clone270, align 4
  %add.bn_digits.Clone17.bn_mul.Clone282 = add nsw i32 %221, 1
  store i32 %add.bn_digits.Clone17.bn_mul.Clone282, i32* %RetValuePtr18.bn_mul.Clone254
  br label %entry.Split.Split1.bn_mul.Clone283

entry.Split.Split1.bn_mul.Clone283:               ; preds = %for.end.bn_digits.Clone16.bn_mul.Clone281
  %RetValue19.bn_mul.Clone284 = load i32, i32* %RetValuePtr18.bn_mul.Clone254
  store i32 %RetValue19.bn_mul.Clone284, i32* %bdigits.bn_mul.Clone248, align 4
  %222 = load i32, i32* %digits.addr.bn_mul.Clone243, align 4
  %223 = load i32*, i32** %c.addr.bn_mul.Clone244, align 4
  br label %entry.bn_digits.Clone.bn_mul.Clone285

entry.bn_digits.Clone.bn_mul.Clone285:            ; preds = %entry.Split.Split1.bn_mul.Clone283
  %digits.addr.bn_digits.Clone.bn_mul.Clone286 = alloca i32, align 4
  %a.addr.bn_digits.Clone.bn_mul.Clone287 = alloca i32*, align 4
  %i.bn_digits.Clone.bn_mul.Clone288 = alloca i32, align 4
  store i32 %222, i32* %digits.addr.bn_digits.Clone.bn_mul.Clone286, align 4
  store i32* %223, i32** %a.addr.bn_digits.Clone.bn_mul.Clone287, align 4
  %224 = load i32, i32* %digits.addr.bn_digits.Clone.bn_mul.Clone286, align 4
  %sub.bn_digits.Clone.bn_mul.Clone289 = sub i32 %224, 1
  store i32 %sub.bn_digits.Clone.bn_mul.Clone289, i32* %i.bn_digits.Clone.bn_mul.Clone288, align 4
  br label %for.cond.bn_digits.Clone.bn_mul.Clone290

for.cond.bn_digits.Clone.bn_mul.Clone290:         ; preds = %for.inc.bn_digits.Clone.bn_mul.Clone297, %entry.bn_digits.Clone.bn_mul.Clone285
  %225 = load i32, i32* %i.bn_digits.Clone.bn_mul.Clone288, align 4
  %cmp.bn_digits.Clone.bn_mul.Clone291 = icmp sge i32 %225, 0
  br i1 %cmp.bn_digits.Clone.bn_mul.Clone291, label %for.body.bn_digits.Clone.bn_mul.Clone292, label %for.end.bn_digits.Clone.bn_mul.Clone299

for.body.bn_digits.Clone.bn_mul.Clone292:         ; preds = %for.cond.bn_digits.Clone.bn_mul.Clone290
  %226 = load i32*, i32** %a.addr.bn_digits.Clone.bn_mul.Clone287, align 4
  %227 = load i32, i32* %i.bn_digits.Clone.bn_mul.Clone288, align 4
  %arrayidx.bn_digits.Clone.bn_mul.Clone293 = getelementptr inbounds i32, i32* %226, i32 %227
  %228 = load i32, i32* %arrayidx.bn_digits.Clone.bn_mul.Clone293, align 4
  %tobool.bn_digits.Clone.bn_mul.Clone294 = icmp ne i32 %228, 0
  br i1 %tobool.bn_digits.Clone.bn_mul.Clone294, label %if.then.bn_digits.Clone.bn_mul.Clone295, label %if.end.bn_digits.Clone.bn_mul.Clone296

if.then.bn_digits.Clone.bn_mul.Clone295:          ; preds = %for.body.bn_digits.Clone.bn_mul.Clone292
  br label %for.end.bn_digits.Clone.bn_mul.Clone299

if.end.bn_digits.Clone.bn_mul.Clone296:           ; preds = %for.body.bn_digits.Clone.bn_mul.Clone292
  br label %for.inc.bn_digits.Clone.bn_mul.Clone297

for.inc.bn_digits.Clone.bn_mul.Clone297:          ; preds = %if.end.bn_digits.Clone.bn_mul.Clone296
  %229 = load i32, i32* %i.bn_digits.Clone.bn_mul.Clone288, align 4
  %dec.bn_digits.Clone.bn_mul.Clone298 = add nsw i32 %229, -1
  store i32 %dec.bn_digits.Clone.bn_mul.Clone298, i32* %i.bn_digits.Clone.bn_mul.Clone288, align 4
  br label %for.cond.bn_digits.Clone.bn_mul.Clone290

for.end.bn_digits.Clone.bn_mul.Clone299:          ; preds = %if.then.bn_digits.Clone.bn_mul.Clone295, %for.cond.bn_digits.Clone.bn_mul.Clone290
  %230 = load i32, i32* %i.bn_digits.Clone.bn_mul.Clone288, align 4
  %add.bn_digits.Clone.bn_mul.Clone300 = add nsw i32 %230, 1
  store i32 %add.bn_digits.Clone.bn_mul.Clone300, i32* %RetValuePtr.bn_mul.Clone253
  br label %entry.Split.Split.bn_mul.Clone301

entry.Split.Split.bn_mul.Clone301:                ; preds = %for.end.bn_digits.Clone.bn_mul.Clone299
  %RetValue.bn_mul.Clone302 = load i32, i32* %RetValuePtr.bn_mul.Clone253
  store i32 %RetValue.bn_mul.Clone302, i32* %cdigits.bn_mul.Clone249, align 4
  store i32 0, i32* %i.bn_mul.Clone250, align 4
  br label %for.cond.bn_mul.Clone303

for.cond.bn_mul.Clone303:                         ; preds = %for.inc.bn_mul.Clone313, %entry.Split.Split.bn_mul.Clone301
  %231 = load i32, i32* %i.bn_mul.Clone250, align 4
  %232 = load i32, i32* %bdigits.bn_mul.Clone248, align 4
  %cmp.bn_mul.Clone304 = icmp ult i32 %231, %232
  br i1 %cmp.bn_mul.Clone304, label %for.body.bn_mul.Clone305, label %for.end.bn_mul.Clone315

for.body.bn_mul.Clone305:                         ; preds = %for.cond.bn_mul.Clone303
  %233 = load i32, i32* %cdigits.bn_mul.Clone249, align 4
  %234 = load i32*, i32** %c.addr.bn_mul.Clone244, align 4
  %235 = load i32*, i32** %b.addr.bn_mul.Clone245, align 4
  %236 = load i32, i32* %i.bn_mul.Clone250, align 4
  %arrayidx.bn_mul.Clone306 = getelementptr inbounds i32, i32* %235, i32 %236
  %237 = load i32, i32* %arrayidx.bn_mul.Clone306, align 4
  %238 = load i32, i32* %i.bn_mul.Clone250, align 4
  %arrayidx2.bn_mul.Clone307 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone247, i32 0, i32 %238
  %239 = load i32, i32* %i.bn_mul.Clone250, align 4
  %arrayidx3.bn_mul.Clone308 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone247, i32 0, i32 %239
  %call4.bn_mul.Clone309 = call i32 @bn_add_digit_mul(i32* %arrayidx3.bn_mul.Clone308, i32* %arrayidx2.bn_mul.Clone307, i32 %237, i32* %234, i32 %233)
  %240 = load i32, i32* %i.bn_mul.Clone250, align 4
  %241 = load i32, i32* %cdigits.bn_mul.Clone249, align 4
  %add.bn_mul.Clone310 = add i32 %240, %241
  %arrayidx5.bn_mul.Clone311 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone247, i32 0, i32 %add.bn_mul.Clone310
  %242 = load i32, i32* %arrayidx5.bn_mul.Clone311, align 4
  %add6.bn_mul.Clone312 = add i32 %242, %call4.bn_mul.Clone309
  store i32 %add6.bn_mul.Clone312, i32* %arrayidx5.bn_mul.Clone311, align 4
  br label %for.inc.bn_mul.Clone313

for.inc.bn_mul.Clone313:                          ; preds = %for.body.bn_mul.Clone305
  %243 = load i32, i32* %i.bn_mul.Clone250, align 4
  %inc.bn_mul.Clone314 = add i32 %243, 1
  store i32 %inc.bn_mul.Clone314, i32* %i.bn_mul.Clone250, align 4
  br label %for.cond.bn_mul.Clone303

for.end.bn_mul.Clone315:                          ; preds = %for.cond.bn_mul.Clone303
  %244 = load i32, i32* %digits.addr.bn_mul.Clone243, align 4
  %mul7.bn_mul.Clone316 = mul i32 2, %244
  %arraydecay8.bn_mul.Clone317 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone247, i32 0, i32 0
  %245 = load i32*, i32** %a.addr.bn_mul.Clone246, align 4
  call void @bn_assign(i32* %245, i32* %arraydecay8.bn_mul.Clone317, i32 %mul7.bn_mul.Clone316)
  %arraydecay9.bn_mul.Clone318 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone247, i32 0, i32 0
  %246 = bitcast i32* %arraydecay9.bn_mul.Clone318 to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %246, i8 0, i32 520, i1 false)
  br label %entry.bn_mod_mul.Clone1.Split

entry.bn_mod_mul.Clone1.Split:                    ; preds = %for.end.bn_mul.Clone315
  %247 = load i32, i32* %digits.addr.bn_mod_mul.Clone2, align 4
  %248 = load i32*, i32** %d.addr.bn_mod_mul.Clone3, align 4
  %249 = load i32, i32* %digits.addr.bn_mod_mul.Clone2, align 4
  %mul.bn_mod_mul.Clone9 = mul i32 2, %249
  %arraydecay1.bn_mod_mul.Clone10 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mod_mul.Clone7, i32 0, i32 0
  %250 = load i32*, i32** %a.addr.bn_mod_mul.Clone6, align 4
  br label %entry.bn_mod.Clone.bn_mod_mul.Clone11

entry.bn_mod.Clone.bn_mod_mul.Clone11:            ; preds = %entry.bn_mod_mul.Clone1.Split
  %cdigits.addr.bn_mod.Clone.bn_mod_mul.Clone12 = alloca i32, align 4
  %c.addr.bn_mod.Clone.bn_mod_mul.Clone13 = alloca i32*, align 4
  %bdigits.addr.bn_mod.Clone.bn_mod_mul.Clone14 = alloca i32, align 4
  %b.addr.bn_mod.Clone.bn_mod_mul.Clone15 = alloca i32*, align 4
  %a.addr.bn_mod.Clone.bn_mod_mul.Clone16 = alloca i32*, align 4
  %t.bn_mod.Clone.bn_mod_mul.Clone17 = alloca [130 x i32], align 4
  store i32 %247, i32* %cdigits.addr.bn_mod.Clone.bn_mod_mul.Clone12, align 4
  store i32* %248, i32** %c.addr.bn_mod.Clone.bn_mod_mul.Clone13, align 4
  store i32 %mul.bn_mod_mul.Clone9, i32* %bdigits.addr.bn_mod.Clone.bn_mod_mul.Clone14, align 4
  store i32* %arraydecay1.bn_mod_mul.Clone10, i32** %b.addr.bn_mod.Clone.bn_mod_mul.Clone15, align 4
  store i32* %250, i32** %a.addr.bn_mod.Clone.bn_mod_mul.Clone16, align 4
  %251 = bitcast [130 x i32]* %t.bn_mod.Clone.bn_mod_mul.Clone17 to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %251, i8 0, i32 520, i1 false)
  %252 = load i32, i32* %cdigits.addr.bn_mod.Clone.bn_mod_mul.Clone12, align 4
  %253 = load i32*, i32** %c.addr.bn_mod.Clone.bn_mod_mul.Clone13, align 4
  %254 = load i32, i32* %bdigits.addr.bn_mod.Clone.bn_mod_mul.Clone14, align 4
  %255 = load i32*, i32** %b.addr.bn_mod.Clone.bn_mod_mul.Clone15, align 4
  %256 = load i32*, i32** %a.addr.bn_mod.Clone.bn_mod_mul.Clone16, align 4
  %arraydecay.bn_mod.Clone.bn_mod_mul.Clone18 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mod.Clone.bn_mod_mul.Clone17, i32 0, i32 0
  call void @bn_div(i32* %arraydecay.bn_mod.Clone.bn_mod_mul.Clone18, i32* %256, i32* %255, i32 %254, i32* %253, i32 %252)
  %arraydecay1.bn_mod.Clone.bn_mod_mul.Clone19 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mod.Clone.bn_mod_mul.Clone17, i32 0, i32 0
  %257 = bitcast i32* %arraydecay1.bn_mod.Clone.bn_mod_mul.Clone19 to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %257, i8 0, i32 520, i1 false)
  br label %entry.Split.bn_mod_mul.Clone20

entry.Split.bn_mod_mul.Clone20:                   ; preds = %entry.bn_mod.Clone.bn_mod_mul.Clone11
  %arraydecay2.bn_mod_mul.Clone21 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mod_mul.Clone7, i32 0, i32 0
  %258 = bitcast i32* %arraydecay2.bn_mod_mul.Clone21 to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %258, i8 0, i32 520, i1 false)
  br label %for.body17.Split

for.body17.Split:                                 ; preds = %entry.Split.bn_mod_mul.Clone20
  %259 = load i32, i32* %ci, align 4
  %shr24 = lshr i32 %259, 30
  %and25 = and i32 %shr24, 3
  store i32 %and25, i32* %s, align 4
  %cmp26 = icmp ne i32 %and25, 0
  br i1 %cmp26, label %if.then27, label %if.end33

if.then27:                                        ; preds = %for.body17.Split
  %260 = load i32, i32* %ddigits.addr, align 4
  %261 = load i32*, i32** %d.addr, align 4
  %262 = load i32, i32* %s, align 4
  %sub28 = sub i32 %262, 1
  %arrayidx29 = getelementptr inbounds [3 x [65 x i32]], [3 x [65 x i32]]* %bpower, i32 0, i32 %sub28
  %arraydecay30 = getelementptr inbounds [65 x i32], [65 x i32]* %arrayidx29, i32 0, i32 0
  %arraydecay31 = getelementptr inbounds [65 x i32], [65 x i32]* %t, i32 0, i32 0
  %arraydecay32 = getelementptr inbounds [65 x i32], [65 x i32]* %t, i32 0, i32 0
  br label %entry.bn_mod_mul.Clone

entry.bn_mod_mul.Clone:                           ; preds = %if.then27
  %digits.addr.bn_mod_mul.Clone = alloca i32, align 4
  %d.addr.bn_mod_mul.Clone = alloca i32*, align 4
  %c.addr.bn_mod_mul.Clone = alloca i32*, align 4
  %b.addr.bn_mod_mul.Clone = alloca i32*, align 4
  %a.addr.bn_mod_mul.Clone = alloca i32*, align 4
  %t.bn_mod_mul.Clone = alloca [130 x i32], align 4
  store i32 %260, i32* %digits.addr.bn_mod_mul.Clone, align 4
  store i32* %261, i32** %d.addr.bn_mod_mul.Clone, align 4
  store i32* %arraydecay30, i32** %c.addr.bn_mod_mul.Clone, align 4
  store i32* %arraydecay31, i32** %b.addr.bn_mod_mul.Clone, align 4
  store i32* %arraydecay32, i32** %a.addr.bn_mod_mul.Clone, align 4
  %263 = load i32, i32* %digits.addr.bn_mod_mul.Clone, align 4
  %264 = load i32*, i32** %c.addr.bn_mod_mul.Clone, align 4
  %265 = load i32*, i32** %b.addr.bn_mod_mul.Clone, align 4
  %arraydecay.bn_mod_mul.Clone = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mod_mul.Clone, i32 0, i32 0
  br label %entry.bn_mul.Clone319

entry.bn_mul.Clone319:                            ; preds = %entry.bn_mod_mul.Clone
  %digits.addr.bn_mul.Clone320 = alloca i32, align 4
  %c.addr.bn_mul.Clone321 = alloca i32*, align 4
  %b.addr.bn_mul.Clone322 = alloca i32*, align 4
  %a.addr.bn_mul.Clone323 = alloca i32*, align 4
  %t.bn_mul.Clone324 = alloca [130 x i32], align 4
  %bdigits.bn_mul.Clone325 = alloca i32, align 4
  %cdigits.bn_mul.Clone326 = alloca i32, align 4
  %i.bn_mul.Clone327 = alloca i32, align 4
  store i32 %263, i32* %digits.addr.bn_mul.Clone320, align 4
  store i32* %264, i32** %c.addr.bn_mul.Clone321, align 4
  store i32* %265, i32** %b.addr.bn_mul.Clone322, align 4
  store i32* %arraydecay.bn_mod_mul.Clone, i32** %a.addr.bn_mul.Clone323, align 4
  %266 = load i32, i32* %digits.addr.bn_mul.Clone320, align 4
  %mul.bn_mul.Clone328 = mul i32 2, %266
  %arraydecay.bn_mul.Clone329 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone324, i32 0, i32 0
  %RetValuePtr.bn_mul.Clone330 = alloca i32, align 4
  %RetValuePtr18.bn_mul.Clone331 = alloca i32, align 4
  br label %entry.bn_assign_zero.Clone.bn_mul.Clone332

entry.bn_assign_zero.Clone.bn_mul.Clone332:       ; preds = %entry.bn_mul.Clone319
  %digits.addr.bn_assign_zero.Clone.bn_mul.Clone333 = alloca i32, align 4
  %a.addr.bn_assign_zero.Clone.bn_mul.Clone334 = alloca i32*, align 4
  %i.bn_assign_zero.Clone.bn_mul.Clone335 = alloca i32, align 4
  store i32 %mul.bn_mul.Clone328, i32* %digits.addr.bn_assign_zero.Clone.bn_mul.Clone333, align 4
  store i32* %arraydecay.bn_mul.Clone329, i32** %a.addr.bn_assign_zero.Clone.bn_mul.Clone334, align 4
  store i32 0, i32* %i.bn_assign_zero.Clone.bn_mul.Clone335, align 4
  br label %for.cond.bn_assign_zero.Clone.bn_mul.Clone336

for.cond.bn_assign_zero.Clone.bn_mul.Clone336:    ; preds = %for.inc.bn_assign_zero.Clone.bn_mul.Clone340, %entry.bn_assign_zero.Clone.bn_mul.Clone332
  %267 = load i32, i32* %i.bn_assign_zero.Clone.bn_mul.Clone335, align 4
  %268 = load i32, i32* %digits.addr.bn_assign_zero.Clone.bn_mul.Clone333, align 4
  %cmp.bn_assign_zero.Clone.bn_mul.Clone337 = icmp ult i32 %267, %268
  br i1 %cmp.bn_assign_zero.Clone.bn_mul.Clone337, label %for.body.bn_assign_zero.Clone.bn_mul.Clone338, label %for.end.bn_assign_zero.Clone.bn_mul.Clone342

for.body.bn_assign_zero.Clone.bn_mul.Clone338:    ; preds = %for.cond.bn_assign_zero.Clone.bn_mul.Clone336
  %269 = load i32*, i32** %a.addr.bn_assign_zero.Clone.bn_mul.Clone334, align 4
  %270 = load i32, i32* %i.bn_assign_zero.Clone.bn_mul.Clone335, align 4
  %arrayidx.bn_assign_zero.Clone.bn_mul.Clone339 = getelementptr inbounds i32, i32* %269, i32 %270
  store i32 0, i32* %arrayidx.bn_assign_zero.Clone.bn_mul.Clone339, align 4
  br label %for.inc.bn_assign_zero.Clone.bn_mul.Clone340

for.inc.bn_assign_zero.Clone.bn_mul.Clone340:     ; preds = %for.body.bn_assign_zero.Clone.bn_mul.Clone338
  %271 = load i32, i32* %i.bn_assign_zero.Clone.bn_mul.Clone335, align 4
  %inc.bn_assign_zero.Clone.bn_mul.Clone341 = add i32 %271, 1
  store i32 %inc.bn_assign_zero.Clone.bn_mul.Clone341, i32* %i.bn_assign_zero.Clone.bn_mul.Clone335, align 4
  br label %for.cond.bn_assign_zero.Clone.bn_mul.Clone336

for.end.bn_assign_zero.Clone.bn_mul.Clone342:     ; preds = %for.cond.bn_assign_zero.Clone.bn_mul.Clone336
  br label %entry.Split.bn_mul.Clone343

entry.Split.bn_mul.Clone343:                      ; preds = %for.end.bn_assign_zero.Clone.bn_mul.Clone342
  %272 = load i32, i32* %digits.addr.bn_mul.Clone320, align 4
  %273 = load i32*, i32** %b.addr.bn_mul.Clone322, align 4
  br label %entry.bn_digits.Clone2.bn_mul.Clone344

entry.bn_digits.Clone2.bn_mul.Clone344:           ; preds = %entry.Split.bn_mul.Clone343
  %digits.addr.bn_digits.Clone3.bn_mul.Clone345 = alloca i32, align 4
  %a.addr.bn_digits.Clone4.bn_mul.Clone346 = alloca i32*, align 4
  %i.bn_digits.Clone5.bn_mul.Clone347 = alloca i32, align 4
  store i32 %272, i32* %digits.addr.bn_digits.Clone3.bn_mul.Clone345, align 4
  store i32* %273, i32** %a.addr.bn_digits.Clone4.bn_mul.Clone346, align 4
  %274 = load i32, i32* %digits.addr.bn_digits.Clone3.bn_mul.Clone345, align 4
  %sub.bn_digits.Clone6.bn_mul.Clone348 = sub i32 %274, 1
  store i32 %sub.bn_digits.Clone6.bn_mul.Clone348, i32* %i.bn_digits.Clone5.bn_mul.Clone347, align 4
  br label %for.cond.bn_digits.Clone7.bn_mul.Clone349

for.cond.bn_digits.Clone7.bn_mul.Clone349:        ; preds = %for.inc.bn_digits.Clone14.bn_mul.Clone356, %entry.bn_digits.Clone2.bn_mul.Clone344
  %275 = load i32, i32* %i.bn_digits.Clone5.bn_mul.Clone347, align 4
  %cmp.bn_digits.Clone8.bn_mul.Clone350 = icmp sge i32 %275, 0
  br i1 %cmp.bn_digits.Clone8.bn_mul.Clone350, label %for.body.bn_digits.Clone9.bn_mul.Clone351, label %for.end.bn_digits.Clone16.bn_mul.Clone358

for.body.bn_digits.Clone9.bn_mul.Clone351:        ; preds = %for.cond.bn_digits.Clone7.bn_mul.Clone349
  %276 = load i32*, i32** %a.addr.bn_digits.Clone4.bn_mul.Clone346, align 4
  %277 = load i32, i32* %i.bn_digits.Clone5.bn_mul.Clone347, align 4
  %arrayidx.bn_digits.Clone10.bn_mul.Clone352 = getelementptr inbounds i32, i32* %276, i32 %277
  %278 = load i32, i32* %arrayidx.bn_digits.Clone10.bn_mul.Clone352, align 4
  %tobool.bn_digits.Clone11.bn_mul.Clone353 = icmp ne i32 %278, 0
  br i1 %tobool.bn_digits.Clone11.bn_mul.Clone353, label %if.then.bn_digits.Clone12.bn_mul.Clone354, label %if.end.bn_digits.Clone13.bn_mul.Clone355

if.then.bn_digits.Clone12.bn_mul.Clone354:        ; preds = %for.body.bn_digits.Clone9.bn_mul.Clone351
  br label %for.end.bn_digits.Clone16.bn_mul.Clone358

if.end.bn_digits.Clone13.bn_mul.Clone355:         ; preds = %for.body.bn_digits.Clone9.bn_mul.Clone351
  br label %for.inc.bn_digits.Clone14.bn_mul.Clone356

for.inc.bn_digits.Clone14.bn_mul.Clone356:        ; preds = %if.end.bn_digits.Clone13.bn_mul.Clone355
  %279 = load i32, i32* %i.bn_digits.Clone5.bn_mul.Clone347, align 4
  %dec.bn_digits.Clone15.bn_mul.Clone357 = add nsw i32 %279, -1
  store i32 %dec.bn_digits.Clone15.bn_mul.Clone357, i32* %i.bn_digits.Clone5.bn_mul.Clone347, align 4
  br label %for.cond.bn_digits.Clone7.bn_mul.Clone349

for.end.bn_digits.Clone16.bn_mul.Clone358:        ; preds = %if.then.bn_digits.Clone12.bn_mul.Clone354, %for.cond.bn_digits.Clone7.bn_mul.Clone349
  %280 = load i32, i32* %i.bn_digits.Clone5.bn_mul.Clone347, align 4
  %add.bn_digits.Clone17.bn_mul.Clone359 = add nsw i32 %280, 1
  store i32 %add.bn_digits.Clone17.bn_mul.Clone359, i32* %RetValuePtr18.bn_mul.Clone331
  br label %entry.Split.Split1.bn_mul.Clone360

entry.Split.Split1.bn_mul.Clone360:               ; preds = %for.end.bn_digits.Clone16.bn_mul.Clone358
  %RetValue19.bn_mul.Clone361 = load i32, i32* %RetValuePtr18.bn_mul.Clone331
  store i32 %RetValue19.bn_mul.Clone361, i32* %bdigits.bn_mul.Clone325, align 4
  %281 = load i32, i32* %digits.addr.bn_mul.Clone320, align 4
  %282 = load i32*, i32** %c.addr.bn_mul.Clone321, align 4
  br label %entry.bn_digits.Clone.bn_mul.Clone362

entry.bn_digits.Clone.bn_mul.Clone362:            ; preds = %entry.Split.Split1.bn_mul.Clone360
  %digits.addr.bn_digits.Clone.bn_mul.Clone363 = alloca i32, align 4
  %a.addr.bn_digits.Clone.bn_mul.Clone364 = alloca i32*, align 4
  %i.bn_digits.Clone.bn_mul.Clone365 = alloca i32, align 4
  store i32 %281, i32* %digits.addr.bn_digits.Clone.bn_mul.Clone363, align 4
  store i32* %282, i32** %a.addr.bn_digits.Clone.bn_mul.Clone364, align 4
  %283 = load i32, i32* %digits.addr.bn_digits.Clone.bn_mul.Clone363, align 4
  %sub.bn_digits.Clone.bn_mul.Clone366 = sub i32 %283, 1
  store i32 %sub.bn_digits.Clone.bn_mul.Clone366, i32* %i.bn_digits.Clone.bn_mul.Clone365, align 4
  br label %for.cond.bn_digits.Clone.bn_mul.Clone367

for.cond.bn_digits.Clone.bn_mul.Clone367:         ; preds = %for.inc.bn_digits.Clone.bn_mul.Clone374, %entry.bn_digits.Clone.bn_mul.Clone362
  %284 = load i32, i32* %i.bn_digits.Clone.bn_mul.Clone365, align 4
  %cmp.bn_digits.Clone.bn_mul.Clone368 = icmp sge i32 %284, 0
  br i1 %cmp.bn_digits.Clone.bn_mul.Clone368, label %for.body.bn_digits.Clone.bn_mul.Clone369, label %for.end.bn_digits.Clone.bn_mul.Clone376

for.body.bn_digits.Clone.bn_mul.Clone369:         ; preds = %for.cond.bn_digits.Clone.bn_mul.Clone367
  %285 = load i32*, i32** %a.addr.bn_digits.Clone.bn_mul.Clone364, align 4
  %286 = load i32, i32* %i.bn_digits.Clone.bn_mul.Clone365, align 4
  %arrayidx.bn_digits.Clone.bn_mul.Clone370 = getelementptr inbounds i32, i32* %285, i32 %286
  %287 = load i32, i32* %arrayidx.bn_digits.Clone.bn_mul.Clone370, align 4
  %tobool.bn_digits.Clone.bn_mul.Clone371 = icmp ne i32 %287, 0
  br i1 %tobool.bn_digits.Clone.bn_mul.Clone371, label %if.then.bn_digits.Clone.bn_mul.Clone372, label %if.end.bn_digits.Clone.bn_mul.Clone373

if.then.bn_digits.Clone.bn_mul.Clone372:          ; preds = %for.body.bn_digits.Clone.bn_mul.Clone369
  br label %for.end.bn_digits.Clone.bn_mul.Clone376

if.end.bn_digits.Clone.bn_mul.Clone373:           ; preds = %for.body.bn_digits.Clone.bn_mul.Clone369
  br label %for.inc.bn_digits.Clone.bn_mul.Clone374

for.inc.bn_digits.Clone.bn_mul.Clone374:          ; preds = %if.end.bn_digits.Clone.bn_mul.Clone373
  %288 = load i32, i32* %i.bn_digits.Clone.bn_mul.Clone365, align 4
  %dec.bn_digits.Clone.bn_mul.Clone375 = add nsw i32 %288, -1
  store i32 %dec.bn_digits.Clone.bn_mul.Clone375, i32* %i.bn_digits.Clone.bn_mul.Clone365, align 4
  br label %for.cond.bn_digits.Clone.bn_mul.Clone367

for.end.bn_digits.Clone.bn_mul.Clone376:          ; preds = %if.then.bn_digits.Clone.bn_mul.Clone372, %for.cond.bn_digits.Clone.bn_mul.Clone367
  %289 = load i32, i32* %i.bn_digits.Clone.bn_mul.Clone365, align 4
  %add.bn_digits.Clone.bn_mul.Clone377 = add nsw i32 %289, 1
  store i32 %add.bn_digits.Clone.bn_mul.Clone377, i32* %RetValuePtr.bn_mul.Clone330
  br label %entry.Split.Split.bn_mul.Clone378

entry.Split.Split.bn_mul.Clone378:                ; preds = %for.end.bn_digits.Clone.bn_mul.Clone376
  %RetValue.bn_mul.Clone379 = load i32, i32* %RetValuePtr.bn_mul.Clone330
  store i32 %RetValue.bn_mul.Clone379, i32* %cdigits.bn_mul.Clone326, align 4
  store i32 0, i32* %i.bn_mul.Clone327, align 4
  br label %for.cond.bn_mul.Clone380

for.cond.bn_mul.Clone380:                         ; preds = %for.inc.bn_mul.Clone390, %entry.Split.Split.bn_mul.Clone378
  %290 = load i32, i32* %i.bn_mul.Clone327, align 4
  %291 = load i32, i32* %bdigits.bn_mul.Clone325, align 4
  %cmp.bn_mul.Clone381 = icmp ult i32 %290, %291
  br i1 %cmp.bn_mul.Clone381, label %for.body.bn_mul.Clone382, label %for.end.bn_mul.Clone392

for.body.bn_mul.Clone382:                         ; preds = %for.cond.bn_mul.Clone380
  %292 = load i32, i32* %cdigits.bn_mul.Clone326, align 4
  %293 = load i32*, i32** %c.addr.bn_mul.Clone321, align 4
  %294 = load i32*, i32** %b.addr.bn_mul.Clone322, align 4
  %295 = load i32, i32* %i.bn_mul.Clone327, align 4
  %arrayidx.bn_mul.Clone383 = getelementptr inbounds i32, i32* %294, i32 %295
  %296 = load i32, i32* %arrayidx.bn_mul.Clone383, align 4
  %297 = load i32, i32* %i.bn_mul.Clone327, align 4
  %arrayidx2.bn_mul.Clone384 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone324, i32 0, i32 %297
  %298 = load i32, i32* %i.bn_mul.Clone327, align 4
  %arrayidx3.bn_mul.Clone385 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone324, i32 0, i32 %298
  %call4.bn_mul.Clone386 = call i32 @bn_add_digit_mul(i32* %arrayidx3.bn_mul.Clone385, i32* %arrayidx2.bn_mul.Clone384, i32 %296, i32* %293, i32 %292)
  %299 = load i32, i32* %i.bn_mul.Clone327, align 4
  %300 = load i32, i32* %cdigits.bn_mul.Clone326, align 4
  %add.bn_mul.Clone387 = add i32 %299, %300
  %arrayidx5.bn_mul.Clone388 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone324, i32 0, i32 %add.bn_mul.Clone387
  %301 = load i32, i32* %arrayidx5.bn_mul.Clone388, align 4
  %add6.bn_mul.Clone389 = add i32 %301, %call4.bn_mul.Clone386
  store i32 %add6.bn_mul.Clone389, i32* %arrayidx5.bn_mul.Clone388, align 4
  br label %for.inc.bn_mul.Clone390

for.inc.bn_mul.Clone390:                          ; preds = %for.body.bn_mul.Clone382
  %302 = load i32, i32* %i.bn_mul.Clone327, align 4
  %inc.bn_mul.Clone391 = add i32 %302, 1
  store i32 %inc.bn_mul.Clone391, i32* %i.bn_mul.Clone327, align 4
  br label %for.cond.bn_mul.Clone380

for.end.bn_mul.Clone392:                          ; preds = %for.cond.bn_mul.Clone380
  %303 = load i32, i32* %digits.addr.bn_mul.Clone320, align 4
  %mul7.bn_mul.Clone393 = mul i32 2, %303
  %arraydecay8.bn_mul.Clone394 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone324, i32 0, i32 0
  %304 = load i32*, i32** %a.addr.bn_mul.Clone323, align 4
  call void @bn_assign(i32* %304, i32* %arraydecay8.bn_mul.Clone394, i32 %mul7.bn_mul.Clone393)
  %arraydecay9.bn_mul.Clone395 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone324, i32 0, i32 0
  %305 = bitcast i32* %arraydecay9.bn_mul.Clone395 to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %305, i8 0, i32 520, i1 false)
  br label %entry.bn_mod_mul.Clone.Split

entry.bn_mod_mul.Clone.Split:                     ; preds = %for.end.bn_mul.Clone392
  %306 = load i32, i32* %digits.addr.bn_mod_mul.Clone, align 4
  %307 = load i32*, i32** %d.addr.bn_mod_mul.Clone, align 4
  %308 = load i32, i32* %digits.addr.bn_mod_mul.Clone, align 4
  %mul.bn_mod_mul.Clone = mul i32 2, %308
  %arraydecay1.bn_mod_mul.Clone = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mod_mul.Clone, i32 0, i32 0
  %309 = load i32*, i32** %a.addr.bn_mod_mul.Clone, align 4
  br label %entry.bn_mod.Clone.bn_mod_mul.Clone

entry.bn_mod.Clone.bn_mod_mul.Clone:              ; preds = %entry.bn_mod_mul.Clone.Split
  %cdigits.addr.bn_mod.Clone.bn_mod_mul.Clone = alloca i32, align 4
  %c.addr.bn_mod.Clone.bn_mod_mul.Clone = alloca i32*, align 4
  %bdigits.addr.bn_mod.Clone.bn_mod_mul.Clone = alloca i32, align 4
  %b.addr.bn_mod.Clone.bn_mod_mul.Clone = alloca i32*, align 4
  %a.addr.bn_mod.Clone.bn_mod_mul.Clone = alloca i32*, align 4
  %t.bn_mod.Clone.bn_mod_mul.Clone = alloca [130 x i32], align 4
  store i32 %306, i32* %cdigits.addr.bn_mod.Clone.bn_mod_mul.Clone, align 4
  store i32* %307, i32** %c.addr.bn_mod.Clone.bn_mod_mul.Clone, align 4
  store i32 %mul.bn_mod_mul.Clone, i32* %bdigits.addr.bn_mod.Clone.bn_mod_mul.Clone, align 4
  store i32* %arraydecay1.bn_mod_mul.Clone, i32** %b.addr.bn_mod.Clone.bn_mod_mul.Clone, align 4
  store i32* %309, i32** %a.addr.bn_mod.Clone.bn_mod_mul.Clone, align 4
  %310 = bitcast [130 x i32]* %t.bn_mod.Clone.bn_mod_mul.Clone to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %310, i8 0, i32 520, i1 false)
  %311 = load i32, i32* %cdigits.addr.bn_mod.Clone.bn_mod_mul.Clone, align 4
  %312 = load i32*, i32** %c.addr.bn_mod.Clone.bn_mod_mul.Clone, align 4
  %313 = load i32, i32* %bdigits.addr.bn_mod.Clone.bn_mod_mul.Clone, align 4
  %314 = load i32*, i32** %b.addr.bn_mod.Clone.bn_mod_mul.Clone, align 4
  %315 = load i32*, i32** %a.addr.bn_mod.Clone.bn_mod_mul.Clone, align 4
  %arraydecay.bn_mod.Clone.bn_mod_mul.Clone = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mod.Clone.bn_mod_mul.Clone, i32 0, i32 0
  call void @bn_div(i32* %arraydecay.bn_mod.Clone.bn_mod_mul.Clone, i32* %315, i32* %314, i32 %313, i32* %312, i32 %311)
  %arraydecay1.bn_mod.Clone.bn_mod_mul.Clone = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mod.Clone.bn_mod_mul.Clone, i32 0, i32 0
  %316 = bitcast i32* %arraydecay1.bn_mod.Clone.bn_mod_mul.Clone to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %316, i8 0, i32 520, i1 false)
  br label %entry.Split.bn_mod_mul.Clone

entry.Split.bn_mod_mul.Clone:                     ; preds = %entry.bn_mod.Clone.bn_mod_mul.Clone
  %arraydecay2.bn_mod_mul.Clone = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mod_mul.Clone, i32 0, i32 0
  %317 = bitcast i32* %arraydecay2.bn_mod_mul.Clone to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %317, i8 0, i32 520, i1 false)
  br label %if.then27.Split

if.then27.Split:                                  ; preds = %entry.Split.bn_mod_mul.Clone
  br label %if.end33

if.end33:                                         ; preds = %if.then27.Split, %for.body17.Split
  %318 = load i32, i32* %ci, align 4
  %shl34 = shl i32 %318, 2
  store i32 %shl34, i32* %ci, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.end33
  %319 = load i32, i32* %j, align 4
  %add = add i32 %319, 2
  store i32 %add, i32* %j, align 4
  br label %for.cond15

for.end:                                          ; preds = %for.cond15
  br label %for.inc35

for.inc35:                                        ; preds = %for.end
  %320 = load i32, i32* %i, align 4
  %dec = add nsw i32 %320, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond

for.end36:                                        ; preds = %for.cond
  %321 = load i32, i32* %ddigits.addr, align 4
  %arraydecay37 = getelementptr inbounds [65 x i32], [65 x i32]* %t, i32 0, i32 0
  %322 = load i32*, i32** %a.addr, align 4
  call void @bn_assign(i32* %322, i32* %arraydecay37, i32 %321)
  %arraydecay38 = getelementptr inbounds [3 x [65 x i32]], [3 x [65 x i32]]* %bpower, i32 0, i32 0
  %323 = bitcast [65 x i32]* %arraydecay38 to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %323, i8 0, i32 780, i1 false)
  %arraydecay39 = getelementptr inbounds [65 x i32], [65 x i32]* %t, i32 0, i32 0
  %324 = bitcast i32* %arraydecay39 to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %324, i8 0, i32 260, i1 false)
  ret void
}

; Function Attrs: noinline optnone
define dso_local void @bn_gcd(i32* %a, i32* %b, i32* %c, i32 %digits) #2 {
entry:
  %digits.addr = alloca i32, align 4
  %c.addr = alloca i32*, align 4
  %b.addr = alloca i32*, align 4
  %a.addr = alloca i32*, align 4
  %t = alloca [65 x i32], align 4
  %u = alloca [65 x i32], align 4
  %v = alloca [65 x i32], align 4
  store i32 %digits, i32* %digits.addr, align 4
  store i32* %c, i32** %c.addr, align 4
  store i32* %b, i32** %b.addr, align 4
  store i32* %a, i32** %a.addr, align 4
  %0 = load i32, i32* %digits.addr, align 4
  %1 = load i32*, i32** %b.addr, align 4
  %arraydecay = getelementptr inbounds [65 x i32], [65 x i32]* %u, i32 0, i32 0
  call void @bn_assign(i32* %arraydecay, i32* %1, i32 %0)
  %2 = load i32, i32* %digits.addr, align 4
  %3 = load i32*, i32** %c.addr, align 4
  %arraydecay1 = getelementptr inbounds [65 x i32], [65 x i32]* %v, i32 0, i32 0
  call void @bn_assign(i32* %arraydecay1, i32* %3, i32 %2)
  %RetValuePtr = alloca i32, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body.Split, %entry
  %4 = load i32, i32* %digits.addr, align 4
  %arraydecay2 = getelementptr inbounds [65 x i32], [65 x i32]* %v, i32 0, i32 0
  br label %entry.bn_is_zero.Clone

entry.bn_is_zero.Clone:                           ; preds = %while.cond
  %retval.bn_is_zero.Clone = alloca i32, align 4
  %digits.addr.bn_is_zero.Clone = alloca i32, align 4
  %a.addr.bn_is_zero.Clone = alloca i32*, align 4
  %i.bn_is_zero.Clone = alloca i32, align 4
  store i32 %4, i32* %digits.addr.bn_is_zero.Clone, align 4
  store i32* %arraydecay2, i32** %a.addr.bn_is_zero.Clone, align 4
  store i32 0, i32* %i.bn_is_zero.Clone, align 4
  br label %for.cond.bn_is_zero.Clone

for.cond.bn_is_zero.Clone:                        ; preds = %for.inc.bn_is_zero.Clone, %entry.bn_is_zero.Clone
  %5 = load i32, i32* %i.bn_is_zero.Clone, align 4
  %6 = load i32, i32* %digits.addr.bn_is_zero.Clone, align 4
  %cmp.bn_is_zero.Clone = icmp ult i32 %5, %6
  br i1 %cmp.bn_is_zero.Clone, label %for.body.bn_is_zero.Clone, label %for.end.bn_is_zero.Clone

for.body.bn_is_zero.Clone:                        ; preds = %for.cond.bn_is_zero.Clone
  %7 = load i32*, i32** %a.addr.bn_is_zero.Clone, align 4
  %8 = load i32, i32* %i.bn_is_zero.Clone, align 4
  %arrayidx.bn_is_zero.Clone = getelementptr inbounds i32, i32* %7, i32 %8
  %9 = load i32, i32* %arrayidx.bn_is_zero.Clone, align 4
  %tobool.bn_is_zero.Clone = icmp ne i32 %9, 0
  br i1 %tobool.bn_is_zero.Clone, label %if.then.bn_is_zero.Clone, label %if.end.bn_is_zero.Clone

if.then.bn_is_zero.Clone:                         ; preds = %for.body.bn_is_zero.Clone
  store i32 0, i32* %retval.bn_is_zero.Clone, align 4
  br label %return.bn_is_zero.Clone

if.end.bn_is_zero.Clone:                          ; preds = %for.body.bn_is_zero.Clone
  br label %for.inc.bn_is_zero.Clone

for.inc.bn_is_zero.Clone:                         ; preds = %if.end.bn_is_zero.Clone
  %10 = load i32, i32* %i.bn_is_zero.Clone, align 4
  %inc.bn_is_zero.Clone = add i32 %10, 1
  store i32 %inc.bn_is_zero.Clone, i32* %i.bn_is_zero.Clone, align 4
  br label %for.cond.bn_is_zero.Clone

for.end.bn_is_zero.Clone:                         ; preds = %for.cond.bn_is_zero.Clone
  store i32 1, i32* %retval.bn_is_zero.Clone, align 4
  br label %return.bn_is_zero.Clone

return.bn_is_zero.Clone:                          ; preds = %for.end.bn_is_zero.Clone, %if.then.bn_is_zero.Clone
  %11 = load i32, i32* %retval.bn_is_zero.Clone, align 4
  store i32 %11, i32* %RetValuePtr
  br label %while.cond.Split

while.cond.Split:                                 ; preds = %return.bn_is_zero.Clone
  %RetValue = load i32, i32* %RetValuePtr
  %tobool = icmp ne i32 %RetValue, 0
  %lnot = xor i1 %tobool, true
  br i1 %lnot, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond.Split
  %12 = load i32, i32* %digits.addr, align 4
  %arraydecay3 = getelementptr inbounds [65 x i32], [65 x i32]* %v, i32 0, i32 0
  %13 = load i32, i32* %digits.addr, align 4
  %arraydecay4 = getelementptr inbounds [65 x i32], [65 x i32]* %u, i32 0, i32 0
  %arraydecay5 = getelementptr inbounds [65 x i32], [65 x i32]* %t, i32 0, i32 0
  br label %entry.bn_mod.Clone

entry.bn_mod.Clone:                               ; preds = %while.body
  %cdigits.addr.bn_mod.Clone = alloca i32, align 4
  %c.addr.bn_mod.Clone = alloca i32*, align 4
  %bdigits.addr.bn_mod.Clone = alloca i32, align 4
  %b.addr.bn_mod.Clone = alloca i32*, align 4
  %a.addr.bn_mod.Clone = alloca i32*, align 4
  %t.bn_mod.Clone = alloca [130 x i32], align 4
  store i32 %12, i32* %cdigits.addr.bn_mod.Clone, align 4
  store i32* %arraydecay3, i32** %c.addr.bn_mod.Clone, align 4
  store i32 %13, i32* %bdigits.addr.bn_mod.Clone, align 4
  store i32* %arraydecay4, i32** %b.addr.bn_mod.Clone, align 4
  store i32* %arraydecay5, i32** %a.addr.bn_mod.Clone, align 4
  %14 = bitcast [130 x i32]* %t.bn_mod.Clone to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %14, i8 0, i32 520, i1 false)
  %15 = load i32, i32* %cdigits.addr.bn_mod.Clone, align 4
  %16 = load i32*, i32** %c.addr.bn_mod.Clone, align 4
  %17 = load i32, i32* %bdigits.addr.bn_mod.Clone, align 4
  %18 = load i32*, i32** %b.addr.bn_mod.Clone, align 4
  %19 = load i32*, i32** %a.addr.bn_mod.Clone, align 4
  %arraydecay.bn_mod.Clone = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mod.Clone, i32 0, i32 0
  call void @bn_div(i32* %arraydecay.bn_mod.Clone, i32* %19, i32* %18, i32 %17, i32* %16, i32 %15)
  %arraydecay1.bn_mod.Clone = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mod.Clone, i32 0, i32 0
  %20 = bitcast i32* %arraydecay1.bn_mod.Clone to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %20, i8 0, i32 520, i1 false)
  br label %while.body.Split

while.body.Split:                                 ; preds = %entry.bn_mod.Clone
  %21 = load i32, i32* %digits.addr, align 4
  %arraydecay6 = getelementptr inbounds [65 x i32], [65 x i32]* %v, i32 0, i32 0
  %arraydecay7 = getelementptr inbounds [65 x i32], [65 x i32]* %u, i32 0, i32 0
  call void @bn_assign(i32* %arraydecay7, i32* %arraydecay6, i32 %21)
  %22 = load i32, i32* %digits.addr, align 4
  %arraydecay8 = getelementptr inbounds [65 x i32], [65 x i32]* %t, i32 0, i32 0
  %arraydecay9 = getelementptr inbounds [65 x i32], [65 x i32]* %v, i32 0, i32 0
  call void @bn_assign(i32* %arraydecay9, i32* %arraydecay8, i32 %22)
  br label %while.cond

while.end:                                        ; preds = %while.cond.Split
  %23 = load i32, i32* %digits.addr, align 4
  %arraydecay10 = getelementptr inbounds [65 x i32], [65 x i32]* %u, i32 0, i32 0
  %24 = load i32*, i32** %a.addr, align 4
  call void @bn_assign(i32* %24, i32* %arraydecay10, i32 %23)
  %arraydecay11 = getelementptr inbounds [65 x i32], [65 x i32]* %t, i32 0, i32 0
  %25 = bitcast i32* %arraydecay11 to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %25, i8 0, i32 260, i1 false)
  %arraydecay12 = getelementptr inbounds [65 x i32], [65 x i32]* %u, i32 0, i32 0
  %26 = bitcast i32* %arraydecay12 to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %26, i8 0, i32 260, i1 false)
  %arraydecay13 = getelementptr inbounds [65 x i32], [65 x i32]* %v, i32 0, i32 0
  %27 = bitcast i32* %arraydecay13 to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %27, i8 0, i32 260, i1 false)
  ret void
}

; Function Attrs: noinline optnone
define dso_local i32 @bn_bits(i32* %a, i32 %digits) #2 {
entry:
  %retval = alloca i32, align 4
  %digits.addr = alloca i32, align 4
  %a.addr = alloca i32*, align 4
  store i32 %digits, i32* %digits.addr, align 4
  store i32* %a, i32** %a.addr, align 4
  %0 = load i32, i32* %digits.addr, align 4
  %1 = load i32*, i32** %a.addr, align 4
  %RetValuePtr = alloca i32, align 4
  br label %entry.bn_digits.Clone

entry.bn_digits.Clone:                            ; preds = %entry
  %digits.addr.bn_digits.Clone = alloca i32, align 4
  %a.addr.bn_digits.Clone = alloca i32*, align 4
  %i.bn_digits.Clone = alloca i32, align 4
  store i32 %0, i32* %digits.addr.bn_digits.Clone, align 4
  store i32* %1, i32** %a.addr.bn_digits.Clone, align 4
  %2 = load i32, i32* %digits.addr.bn_digits.Clone, align 4
  %sub.bn_digits.Clone = sub i32 %2, 1
  store i32 %sub.bn_digits.Clone, i32* %i.bn_digits.Clone, align 4
  br label %for.cond.bn_digits.Clone

for.cond.bn_digits.Clone:                         ; preds = %for.inc.bn_digits.Clone, %entry.bn_digits.Clone
  %3 = load i32, i32* %i.bn_digits.Clone, align 4
  %cmp.bn_digits.Clone = icmp sge i32 %3, 0
  br i1 %cmp.bn_digits.Clone, label %for.body.bn_digits.Clone, label %for.end.bn_digits.Clone

for.body.bn_digits.Clone:                         ; preds = %for.cond.bn_digits.Clone
  %4 = load i32*, i32** %a.addr.bn_digits.Clone, align 4
  %5 = load i32, i32* %i.bn_digits.Clone, align 4
  %arrayidx.bn_digits.Clone = getelementptr inbounds i32, i32* %4, i32 %5
  %6 = load i32, i32* %arrayidx.bn_digits.Clone, align 4
  %tobool.bn_digits.Clone = icmp ne i32 %6, 0
  br i1 %tobool.bn_digits.Clone, label %if.then.bn_digits.Clone, label %if.end.bn_digits.Clone

if.then.bn_digits.Clone:                          ; preds = %for.body.bn_digits.Clone
  br label %for.end.bn_digits.Clone

if.end.bn_digits.Clone:                           ; preds = %for.body.bn_digits.Clone
  br label %for.inc.bn_digits.Clone

for.inc.bn_digits.Clone:                          ; preds = %if.end.bn_digits.Clone
  %7 = load i32, i32* %i.bn_digits.Clone, align 4
  %dec.bn_digits.Clone = add nsw i32 %7, -1
  store i32 %dec.bn_digits.Clone, i32* %i.bn_digits.Clone, align 4
  br label %for.cond.bn_digits.Clone

for.end.bn_digits.Clone:                          ; preds = %if.then.bn_digits.Clone, %for.cond.bn_digits.Clone
  %8 = load i32, i32* %i.bn_digits.Clone, align 4
  %add.bn_digits.Clone = add nsw i32 %8, 1
  store i32 %add.bn_digits.Clone, i32* %RetValuePtr
  br label %entry.Split

entry.Split:                                      ; preds = %for.end.bn_digits.Clone
  %RetValue = load i32, i32* %RetValuePtr
  store i32 %RetValue, i32* %digits.addr, align 4
  %cmp = icmp eq i32 %RetValue, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry.Split
  store i32 0, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry.Split
  %9 = load i32, i32* %digits.addr, align 4
  %sub = sub i32 %9, 1
  %mul = mul i32 %sub, 32
  %10 = load i32*, i32** %a.addr, align 4
  %11 = load i32, i32* %digits.addr, align 4
  %sub1 = sub i32 %11, 1
  %arrayidx = getelementptr inbounds i32, i32* %10, i32 %sub1
  %12 = load i32, i32* %arrayidx, align 4
  %call2 = call i32 @bn_digit_bits(i32 %12)
  %add = add i32 %mul, %call2
  store i32 %add, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end, %if.then
  %13 = load i32, i32* %retval, align 4
  ret i32 %13
}

; Function Attrs: noinline optnone
define dso_local void @print_bn(i8* %TAG, i32* %bn, i32 %bn_size) #2 {
entry:
  %bn_size.addr = alloca i32, align 4
  %bn.addr = alloca i32*, align 4
  %TAG.addr = alloca i8*, align 4
  %buf = alloca [512 x i8], align 1
  %i = alloca i32, align 4
  store i32 %bn_size, i32* %bn_size.addr, align 4
  store i32* %bn, i32** %bn.addr, align 4
  store i8* %TAG, i8** %TAG.addr, align 4
  %arraydecay = getelementptr inbounds [512 x i8], [512 x i8]* %buf, i32 0, i32 0
  call void @llvm.memset.p0i8.i32(i8* align 1 %arraydecay, i8 0, i32 512, i1 false)
  %0 = load i32, i32* %bn_size.addr, align 4
  %1 = load i32*, i32** %bn.addr, align 4
  %arraydecay1 = getelementptr inbounds [512 x i8], [512 x i8]* %buf, i32 0, i32 0
  br label %entry.bn_encode.Clone

entry.bn_encode.Clone:                            ; preds = %entry
  %digits.addr.bn_encode.Clone = alloca i32, align 4
  %bn.addr.bn_encode.Clone = alloca i32*, align 4
  %size.addr.bn_encode.Clone = alloca i32, align 4
  %hexarr.addr.bn_encode.Clone = alloca i8*, align 4
  %t.bn_encode.Clone = alloca i32, align 4
  %j.bn_encode.Clone = alloca i32, align 4
  %i.bn_encode.Clone = alloca i32, align 4
  %u.bn_encode.Clone = alloca i32, align 4
  store i32 %0, i32* %digits.addr.bn_encode.Clone, align 4
  store i32* %1, i32** %bn.addr.bn_encode.Clone, align 4
  store i32 512, i32* %size.addr.bn_encode.Clone, align 4
  store i8* %arraydecay1, i8** %hexarr.addr.bn_encode.Clone, align 4
  store i32 0, i32* %i.bn_encode.Clone, align 4
  %2 = load i32, i32* %size.addr.bn_encode.Clone, align 4
  %sub.bn_encode.Clone = sub i32 %2, 1
  store i32 %sub.bn_encode.Clone, i32* %j.bn_encode.Clone, align 4
  br label %for.cond.bn_encode.Clone

for.cond.bn_encode.Clone:                         ; preds = %for.inc9.bn_encode.Clone, %entry.bn_encode.Clone
  %3 = load i32, i32* %i.bn_encode.Clone, align 4
  %4 = load i32, i32* %digits.addr.bn_encode.Clone, align 4
  %cmp.bn_encode.Clone = icmp ult i32 %3, %4
  br i1 %cmp.bn_encode.Clone, label %land.rhs.bn_encode.Clone, label %land.end.bn_encode.Clone

land.rhs.bn_encode.Clone:                         ; preds = %for.cond.bn_encode.Clone
  %5 = load i32, i32* %j.bn_encode.Clone, align 4
  %cmp1.bn_encode.Clone = icmp sge i32 %5, 0
  br label %land.end.bn_encode.Clone

land.end.bn_encode.Clone:                         ; preds = %land.rhs.bn_encode.Clone, %for.cond.bn_encode.Clone
  %6 = phi i1 [ false, %for.cond.bn_encode.Clone ], [ %cmp1.bn_encode.Clone, %land.rhs.bn_encode.Clone ]
  br i1 %6, label %for.body.bn_encode.Clone, label %for.end10.bn_encode.Clone

for.body.bn_encode.Clone:                         ; preds = %land.end.bn_encode.Clone
  %7 = load i32*, i32** %bn.addr.bn_encode.Clone, align 4
  %8 = load i32, i32* %i.bn_encode.Clone, align 4
  %arrayidx.bn_encode.Clone = getelementptr inbounds i32, i32* %7, i32 %8
  %9 = load i32, i32* %arrayidx.bn_encode.Clone, align 4
  store i32 %9, i32* %t.bn_encode.Clone, align 4
  store i32 0, i32* %u.bn_encode.Clone, align 4
  br label %for.cond2.bn_encode.Clone

for.cond2.bn_encode.Clone:                        ; preds = %for.inc.bn_encode.Clone, %for.body.bn_encode.Clone
  %10 = load i32, i32* %j.bn_encode.Clone, align 4
  %cmp3.bn_encode.Clone = icmp sge i32 %10, 0
  br i1 %cmp3.bn_encode.Clone, label %land.rhs4.bn_encode.Clone, label %land.end6.bn_encode.Clone

land.rhs4.bn_encode.Clone:                        ; preds = %for.cond2.bn_encode.Clone
  %11 = load i32, i32* %u.bn_encode.Clone, align 4
  %cmp5.bn_encode.Clone = icmp ult i32 %11, 32
  br label %land.end6.bn_encode.Clone

land.end6.bn_encode.Clone:                        ; preds = %land.rhs4.bn_encode.Clone, %for.cond2.bn_encode.Clone
  %12 = phi i1 [ false, %for.cond2.bn_encode.Clone ], [ %cmp5.bn_encode.Clone, %land.rhs4.bn_encode.Clone ]
  br i1 %12, label %for.body7.bn_encode.Clone, label %for.end.bn_encode.Clone

for.body7.bn_encode.Clone:                        ; preds = %land.end6.bn_encode.Clone
  %13 = load i32, i32* %t.bn_encode.Clone, align 4
  %14 = load i32, i32* %u.bn_encode.Clone, align 4
  %shr.bn_encode.Clone = lshr i32 %13, %14
  %conv.bn_encode.Clone = trunc i32 %shr.bn_encode.Clone to i8
  %15 = load i8*, i8** %hexarr.addr.bn_encode.Clone, align 4
  %16 = load i32, i32* %j.bn_encode.Clone, align 4
  %arrayidx8.bn_encode.Clone = getelementptr inbounds i8, i8* %15, i32 %16
  store i8 %conv.bn_encode.Clone, i8* %arrayidx8.bn_encode.Clone, align 1
  br label %for.inc.bn_encode.Clone

for.inc.bn_encode.Clone:                          ; preds = %for.body7.bn_encode.Clone
  %17 = load i32, i32* %j.bn_encode.Clone, align 4
  %dec.bn_encode.Clone = add nsw i32 %17, -1
  store i32 %dec.bn_encode.Clone, i32* %j.bn_encode.Clone, align 4
  %18 = load i32, i32* %u.bn_encode.Clone, align 4
  %add.bn_encode.Clone = add i32 %18, 8
  store i32 %add.bn_encode.Clone, i32* %u.bn_encode.Clone, align 4
  br label %for.cond2.bn_encode.Clone

for.end.bn_encode.Clone:                          ; preds = %land.end6.bn_encode.Clone
  br label %for.inc9.bn_encode.Clone

for.inc9.bn_encode.Clone:                         ; preds = %for.end.bn_encode.Clone
  %19 = load i32, i32* %i.bn_encode.Clone, align 4
  %inc.bn_encode.Clone = add i32 %19, 1
  store i32 %inc.bn_encode.Clone, i32* %i.bn_encode.Clone, align 4
  br label %for.cond.bn_encode.Clone

for.end10.bn_encode.Clone:                        ; preds = %land.end.bn_encode.Clone
  br label %for.cond11.bn_encode.Clone

for.cond11.bn_encode.Clone:                       ; preds = %for.inc16.bn_encode.Clone, %for.end10.bn_encode.Clone
  %20 = load i32, i32* %j.bn_encode.Clone, align 4
  %cmp12.bn_encode.Clone = icmp sge i32 %20, 0
  br i1 %cmp12.bn_encode.Clone, label %for.body14.bn_encode.Clone, label %for.end18.bn_encode.Clone

for.body14.bn_encode.Clone:                       ; preds = %for.cond11.bn_encode.Clone
  %21 = load i8*, i8** %hexarr.addr.bn_encode.Clone, align 4
  %22 = load i32, i32* %j.bn_encode.Clone, align 4
  %arrayidx15.bn_encode.Clone = getelementptr inbounds i8, i8* %21, i32 %22
  store i8 0, i8* %arrayidx15.bn_encode.Clone, align 1
  br label %for.inc16.bn_encode.Clone

for.inc16.bn_encode.Clone:                        ; preds = %for.body14.bn_encode.Clone
  %23 = load i32, i32* %j.bn_encode.Clone, align 4
  %dec17.bn_encode.Clone = add nsw i32 %23, -1
  store i32 %dec17.bn_encode.Clone, i32* %j.bn_encode.Clone, align 4
  br label %for.cond11.bn_encode.Clone

for.end18.bn_encode.Clone:                        ; preds = %for.cond11.bn_encode.Clone
  br label %entry.Split

entry.Split:                                      ; preds = %for.end18.bn_encode.Clone
  %24 = load i32, i32* %bn_size.addr, align 4
  %25 = load i8*, i8** %TAG.addr, align 4
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @"??_C@_08GMFBNBBA@?$CFs?$FL?$CFd?$FN?3?5?$AA@", i32 0, i32 0), i8* %25, i32 %24)
  store i32 0, i32* %i, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry.Split
  %26 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [512 x i8], [512 x i8]* %buf, i32 0, i32 %26
  %27 = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %27 to i32
  %cmp = icmp eq i32 %conv, 0
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %28 = load i32, i32* %i, align 4
  %inc = add nsw i32 %28, 1
  store i32 %inc, i32* %i, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %while.end
  %29 = load i32, i32* %i, align 4
  %cmp3 = icmp slt i32 %29, 512
  br i1 %cmp3, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %30 = load i32, i32* %i, align 4
  %arrayidx5 = getelementptr inbounds [512 x i8], [512 x i8]* %buf, i32 0, i32 %30
  %31 = load i8, i8* %arrayidx5, align 1
  %conv6 = zext i8 %31 to i32
  %call7 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"??_C@_04JFFKLGJF@?$CF02X?$AA@", i32 0, i32 0), i32 %conv6)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %32 = load i32, i32* %i, align 4
  %inc8 = add nsw i32 %32, 1
  store i32 %inc8, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"??_C@_01EEMJAFIK@?6?$AA@", i32 0, i32 0))
  ret void
}

declare dllimport i32 @printf(i8*, ...) #3

; Function Attrs: noinline optnone
define dso_local void @print_bn_arr(i8* %TAG, i8* %array, i32 %len) #2 {
entry:
  %len.addr = alloca i32, align 4
  %array.addr = alloca i8*, align 4
  %TAG.addr = alloca i8*, align 4
  %i = alloca i32, align 4
  store i32 %len, i32* %len.addr, align 4
  store i8* %array, i8** %array.addr, align 4
  store i8* %TAG, i8** %TAG.addr, align 4
  store i32 0, i32* %i, align 4
  %0 = load i8*, i8** %TAG.addr, align 4
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @"??_C@_02DKCKIIND@?$CFs?$AA@", i32 0, i32 0), i8* %0)
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %1 = load i8*, i8** %array.addr, align 4
  %2 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds i8, i8* %1, i32 %2
  %3 = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %3 to i32
  %cmp = icmp eq i32 %conv, 0
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load i32, i32* %i, align 4
  %inc = add nsw i32 %4, 1
  store i32 %inc, i32* %i, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %while.end
  %5 = load i32, i32* %i, align 4
  %6 = load i32, i32* %len.addr, align 4
  %cmp2 = icmp slt i32 %5, %6
  br i1 %cmp2, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %7 = load i8*, i8** %array.addr, align 4
  %8 = load i32, i32* %i, align 4
  %arrayidx4 = getelementptr inbounds i8, i8* %7, i32 %8
  %9 = load i8, i8* %arrayidx4, align 1
  %conv5 = zext i8 %9 to i32
  %call6 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"??_C@_04JFFKLGJF@?$CF02X?$AA@", i32 0, i32 0), i32 %conv5)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %10 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %10, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"??_C@_01EEMJAFIK@?6?$AA@", i32 0, i32 0))
  ret void
}

; Function Attrs: noinline optnone
define dso_local void @print_array(i8* %TAG, i8* %array, i32 %len) #2 {
entry:
  %len.addr = alloca i32, align 4
  %array.addr = alloca i8*, align 4
  %TAG.addr = alloca i8*, align 4
  %i = alloca i32, align 4
  store i32 %len, i32* %len.addr, align 4
  store i8* %array, i8** %array.addr, align 4
  store i8* %TAG, i8** %TAG.addr, align 4
  %0 = load i32, i32* %len.addr, align 4
  %1 = load i8*, i8** %TAG.addr, align 4
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @"??_C@_08GMFBNBBA@?$CFs?$FL?$CFd?$FN?3?5?$AA@", i32 0, i32 0), i8* %1, i32 %0)
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4
  %3 = load i32, i32* %len.addr, align 4
  %cmp = icmp slt i32 %2, %3
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load i8*, i8** %array.addr, align 4
  %5 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds i8, i8* %4, i32 %5
  %6 = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %6 to i32
  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"??_C@_04JFFKLGJF@?$CF02X?$AA@", i32 0, i32 0), i32 %conv)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %i, align 4
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"??_C@_01EEMJAFIK@?6?$AA@", i32 0, i32 0))
  ret void
}

; Function Attrs: noinline optnone
define dso_local i32 @timetest() #2 {
entry:
  %call = call i32 @test1()
  %call1 = call i32 @test2()
  %call2 = call i32 @test3()
  ret i32 0
}

; Function Attrs: noinline optnone
define internal i32 @test1() #2 {
entry:
  %retval = alloca i32, align 4
  %ret = alloca i32, align 4
  %pk = alloca %struct.rsa_pk_t, align 4
  %sk = alloca %struct.rsa_sk_t, align 4
  %output = alloca [256 x i8], align 1
  %input = alloca [256 x i8], align 1
  %msg = alloca [256 x i8], align 1
  %outputLen = alloca i32, align 4
  %inputLen = alloca i32, align 4
  %msg_len = alloca i32, align 4
  %0 = bitcast [256 x i8]* %input to i8*
  call void @llvm.memset.p0i8.i32(i8* align 1 %0, i8 0, i32 256, i1 false)
  %1 = bitcast i8* %0 to [256 x i8]*
  %2 = getelementptr inbounds [256 x i8], [256 x i8]* %1, i32 0, i32 0
  store i8 116, i8* %2, align 1
  %3 = getelementptr inbounds [256 x i8], [256 x i8]* %1, i32 0, i32 1
  store i8 101, i8* %3, align 1
  %4 = getelementptr inbounds [256 x i8], [256 x i8]* %1, i32 0, i32 2
  store i8 115, i8* %4, align 1
  %5 = getelementptr inbounds [256 x i8], [256 x i8]* %1, i32 0, i32 3
  store i8 116, i8* %5, align 1
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @"??_C@_0O@OBPALAEI@hello?5world?$CB?6?$AA@", i32 0, i32 0))
  %call1 = call i32 @rsa_generate_keys(%struct.rsa_pk_t* %pk, %struct.rsa_sk_t* %sk, i32 512)
  store i32 %call1, i32* %ret, align 4
  %6 = load i32, i32* %ret, align 4
  %cmp = icmp eq i32 %6, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  br label %entry.print_pk.Clone

entry.print_pk.Clone:                             ; preds = %if.then
  %pk.addr.print_pk.Clone = alloca %struct.rsa_pk_t*, align 4
  store %struct.rsa_pk_t* %pk, %struct.rsa_pk_t** %pk.addr.print_pk.Clone, align 4
  %7 = load %struct.rsa_pk_t*, %struct.rsa_pk_t** %pk.addr.print_pk.Clone, align 4
  %bits.print_pk.Clone = getelementptr inbounds %struct.rsa_pk_t, %struct.rsa_pk_t* %7, i32 0, i32 0
  %8 = load i32, i32* %bits.print_pk.Clone, align 4
  %call.print_pk.Clone = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @"??_C@_08OPCGNDGK@PK?$FL?$CFd?$FN?3?6?$AA@", i32 0, i32 0), i32 %8)
  %9 = load %struct.rsa_pk_t*, %struct.rsa_pk_t** %pk.addr.print_pk.Clone, align 4
  %modulus.print_pk.Clone = getelementptr inbounds %struct.rsa_pk_t, %struct.rsa_pk_t* %9, i32 0, i32 1
  %arraydecay.print_pk.Clone = getelementptr inbounds [256 x i8], [256 x i8]* %modulus.print_pk.Clone, i32 0, i32 0
  call void @print_bn_arr(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @"??_C@_0M@NMEDBGMP@?5?5modulus?3?5?$AA@", i32 0, i32 0), i8* %arraydecay.print_pk.Clone, i32 256)
  %10 = load %struct.rsa_pk_t*, %struct.rsa_pk_t** %pk.addr.print_pk.Clone, align 4
  %exponent.print_pk.Clone = getelementptr inbounds %struct.rsa_pk_t, %struct.rsa_pk_t* %10, i32 0, i32 2
  %arraydecay1.print_pk.Clone = getelementptr inbounds [256 x i8], [256 x i8]* %exponent.print_pk.Clone, i32 0, i32 0
  call void @print_bn_arr(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @"??_C@_0N@JLCGLEPG@?5?5exponent?3?5?$AA@", i32 0, i32 0), i8* %arraydecay1.print_pk.Clone, i32 256)
  br label %if.then.Split

if.then.Split:                                    ; preds = %entry.print_pk.Clone
  %call2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"??_C@_01EEMJAFIK@?6?$AA@", i32 0, i32 0))
  br label %entry.print_sk.Clone

entry.print_sk.Clone:                             ; preds = %if.then.Split
  %sk.addr.print_sk.Clone = alloca %struct.rsa_sk_t*, align 4
  store %struct.rsa_sk_t* %sk, %struct.rsa_sk_t** %sk.addr.print_sk.Clone, align 4
  %11 = load %struct.rsa_sk_t*, %struct.rsa_sk_t** %sk.addr.print_sk.Clone, align 4
  %bits.print_sk.Clone = getelementptr inbounds %struct.rsa_sk_t, %struct.rsa_sk_t* %11, i32 0, i32 0
  %12 = load i32, i32* %bits.print_sk.Clone, align 4
  %call.print_sk.Clone = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @"??_C@_08NGKLOPKP@SK?$FL?$CFd?$FN?3?6?$AA@", i32 0, i32 0), i32 %12)
  %13 = load %struct.rsa_sk_t*, %struct.rsa_sk_t** %sk.addr.print_sk.Clone, align 4
  %modulus.print_sk.Clone = getelementptr inbounds %struct.rsa_sk_t, %struct.rsa_sk_t* %13, i32 0, i32 1
  %arraydecay.print_sk.Clone = getelementptr inbounds [256 x i8], [256 x i8]* %modulus.print_sk.Clone, i32 0, i32 0
  call void @print_bn_arr(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @"??_C@_0M@NMEDBGMP@?5?5modulus?3?5?$AA@", i32 0, i32 0), i8* %arraydecay.print_sk.Clone, i32 256)
  %14 = load %struct.rsa_sk_t*, %struct.rsa_sk_t** %sk.addr.print_sk.Clone, align 4
  %public_exponet.print_sk.Clone = getelementptr inbounds %struct.rsa_sk_t, %struct.rsa_sk_t* %14, i32 0, i32 2
  %arraydecay1.print_sk.Clone = getelementptr inbounds [256 x i8], [256 x i8]* %public_exponet.print_sk.Clone, i32 0, i32 0
  call void @print_bn_arr(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @"??_C@_0BD@HINABDEP@?5?5public_exponet?3?5?$AA@", i32 0, i32 0), i8* %arraydecay1.print_sk.Clone, i32 256)
  %15 = load %struct.rsa_sk_t*, %struct.rsa_sk_t** %sk.addr.print_sk.Clone, align 4
  %exponent.print_sk.Clone = getelementptr inbounds %struct.rsa_sk_t, %struct.rsa_sk_t* %15, i32 0, i32 3
  %arraydecay2.print_sk.Clone = getelementptr inbounds [256 x i8], [256 x i8]* %exponent.print_sk.Clone, i32 0, i32 0
  call void @print_bn_arr(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @"??_C@_0N@JLCGLEPG@?5?5exponent?3?5?$AA@", i32 0, i32 0), i8* %arraydecay2.print_sk.Clone, i32 256)
  %16 = load %struct.rsa_sk_t*, %struct.rsa_sk_t** %sk.addr.print_sk.Clone, align 4
  %prime1.print_sk.Clone = getelementptr inbounds %struct.rsa_sk_t, %struct.rsa_sk_t* %16, i32 0, i32 4
  %arraydecay3.print_sk.Clone = getelementptr inbounds [128 x i8], [128 x i8]* %prime1.print_sk.Clone, i32 0, i32 0
  call void @print_bn_arr(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"??_C@_0L@EMBGKBID@?5?5prime1?3?5?$AA@", i32 0, i32 0), i8* %arraydecay3.print_sk.Clone, i32 128)
  %17 = load %struct.rsa_sk_t*, %struct.rsa_sk_t** %sk.addr.print_sk.Clone, align 4
  %prime2.print_sk.Clone = getelementptr inbounds %struct.rsa_sk_t, %struct.rsa_sk_t* %17, i32 0, i32 5
  %arraydecay4.print_sk.Clone = getelementptr inbounds [128 x i8], [128 x i8]* %prime2.print_sk.Clone, i32 0, i32 0
  call void @print_bn_arr(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"??_C@_0L@FOKDAOGN@?5?5prime2?3?5?$AA@", i32 0, i32 0), i8* %arraydecay4.print_sk.Clone, i32 128)
  %18 = load %struct.rsa_sk_t*, %struct.rsa_sk_t** %sk.addr.print_sk.Clone, align 4
  %prime_exponent1.print_sk.Clone = getelementptr inbounds %struct.rsa_sk_t, %struct.rsa_sk_t* %18, i32 0, i32 6
  %arraydecay5.print_sk.Clone = getelementptr inbounds [128 x i8], [128 x i8]* %prime_exponent1.print_sk.Clone, i32 0, i32 0
  call void @print_bn_arr(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @"??_C@_0BD@DBOOPOHL@?5?5primeExponent1?3?5?$AA@", i32 0, i32 0), i8* %arraydecay5.print_sk.Clone, i32 128)
  %19 = load %struct.rsa_sk_t*, %struct.rsa_sk_t** %sk.addr.print_sk.Clone, align 4
  %prime_exponent2.print_sk.Clone = getelementptr inbounds %struct.rsa_sk_t, %struct.rsa_sk_t* %19, i32 0, i32 7
  %arraydecay6.print_sk.Clone = getelementptr inbounds [128 x i8], [128 x i8]* %prime_exponent2.print_sk.Clone, i32 0, i32 0
  call void @print_bn_arr(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @"??_C@_0BD@CDFLFBJF@?5?5primeExponent2?3?5?$AA@", i32 0, i32 0), i8* %arraydecay6.print_sk.Clone, i32 128)
  %20 = load %struct.rsa_sk_t*, %struct.rsa_sk_t** %sk.addr.print_sk.Clone, align 4
  %coefficient.print_sk.Clone = getelementptr inbounds %struct.rsa_sk_t, %struct.rsa_sk_t* %20, i32 0, i32 8
  %arraydecay7.print_sk.Clone = getelementptr inbounds [128 x i8], [128 x i8]* %coefficient.print_sk.Clone, i32 0, i32 0
  call void @print_bn_arr(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @"??_C@_0BA@BHHMNKPP@?5?5coefficient?3?5?$AA@", i32 0, i32 0), i8* %arraydecay7.print_sk.Clone, i32 128)
  br label %if.then.Split.Split

if.then.Split.Split:                              ; preds = %entry.print_sk.Clone
  br label %if.end

if.else:                                          ; preds = %entry
  %21 = load i32, i32* %ret, align 4
  %call3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @"??_C@_0BO@PAABOMNB@rsa_generate_keys?0?5ret?3?5?$CF04X?6?$AA@", i32 0, i32 0), i32 %21)
  store i32 -1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %if.then.Split.Split
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %input, i32 0, i32 0
  %call4 = call i32 @strlen(i8* %arraydecay)
  store i32 %call4, i32* %inputLen, align 4
  %22 = load i32, i32* %inputLen, align 4
  %arraydecay5 = getelementptr inbounds [256 x i8], [256 x i8]* %input, i32 0, i32 0
  call void @print_array(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"??_C@_03GGAHOJCI@MSG?$AA@", i32 0, i32 0), i8* %arraydecay5, i32 %22)
  %23 = load i32, i32* %inputLen, align 4
  %arraydecay6 = getelementptr inbounds [256 x i8], [256 x i8]* %input, i32 0, i32 0
  %arraydecay7 = getelementptr inbounds [256 x i8], [256 x i8]* %output, i32 0, i32 0
  %call8 = call i32 @rsa_public_encrypt(i8* %arraydecay7, i32* %outputLen, i8* %arraydecay6, i32 %23, %struct.rsa_pk_t* %pk)
  store i32 %call8, i32* %ret, align 4
  %24 = load i32, i32* %ret, align 4
  %cmp9 = icmp eq i32 %24, 0
  br i1 %cmp9, label %if.then10, label %if.else12

if.then10:                                        ; preds = %if.end
  %25 = load i32, i32* %outputLen, align 4
  %arraydecay11 = getelementptr inbounds [256 x i8], [256 x i8]* %output, i32 0, i32 0
  call void @print_array(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @"??_C@_06OIICAIJO@PK?5ENC?$AA@", i32 0, i32 0), i8* %arraydecay11, i32 %25)
  br label %if.end14

if.else12:                                        ; preds = %if.end
  %26 = load i32, i32* %ret, align 4
  %call13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @"??_C@_0BP@OKHOIEME@rsa_public_encrypt?0?5ret?3?5?$CF04X?6?$AA@", i32 0, i32 0), i32 %26)
  store i32 -1, i32* %retval, align 4
  br label %return

if.end14:                                         ; preds = %if.then10
  %27 = load i32, i32* %outputLen, align 4
  %arraydecay15 = getelementptr inbounds [256 x i8], [256 x i8]* %output, i32 0, i32 0
  %arraydecay16 = getelementptr inbounds [256 x i8], [256 x i8]* %msg, i32 0, i32 0
  %call17 = call i32 @rsa_private_decrypt(i8* %arraydecay16, i32* %msg_len, i8* %arraydecay15, i32 %27, %struct.rsa_sk_t* %sk)
  store i32 %call17, i32* %ret, align 4
  %28 = load i32, i32* %ret, align 4
  %cmp18 = icmp eq i32 %28, 0
  br i1 %cmp18, label %if.then19, label %if.else23

if.then19:                                        ; preds = %if.end14
  %29 = load i32, i32* %msg_len, align 4
  %arraydecay20 = getelementptr inbounds [256 x i8], [256 x i8]* %msg, i32 0, i32 0
  call void @print_array(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @"??_C@_06GNIDJKIH@SK?5DEC?$AA@", i32 0, i32 0), i8* %arraydecay20, i32 %29)
  %arraydecay21 = getelementptr inbounds [256 x i8], [256 x i8]* %msg, i32 0, i32 0
  %call22 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @"??_C@_08NBICHAHH@DEC?3?5?$CFs?6?$AA@", i32 0, i32 0), i8* %arraydecay21)
  br label %if.end25

if.else23:                                        ; preds = %if.end14
  %30 = load i32, i32* %ret, align 4
  %call24 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @"??_C@_0CA@BAIGFOPC@rsa_private_decrypt?0?5ret?3?5?$CF04X?6?$AA@", i32 0, i32 0), i32 %30)
  store i32 -1, i32* %retval, align 4
  br label %return

if.end25:                                         ; preds = %if.then19
  %31 = load i32, i32* %inputLen, align 4
  %arraydecay26 = getelementptr inbounds [256 x i8], [256 x i8]* %input, i32 0, i32 0
  %arraydecay27 = getelementptr inbounds [256 x i8], [256 x i8]* %output, i32 0, i32 0
  %call28 = call i32 @rsa_private_encrypt(i8* %arraydecay27, i32* %outputLen, i8* %arraydecay26, i32 %31, %struct.rsa_sk_t* %sk)
  store i32 %call28, i32* %ret, align 4
  %32 = load i32, i32* %ret, align 4
  %cmp29 = icmp eq i32 %32, 0
  br i1 %cmp29, label %if.then30, label %if.else32

if.then30:                                        ; preds = %if.end25
  %33 = load i32, i32* %outputLen, align 4
  %arraydecay31 = getelementptr inbounds [256 x i8], [256 x i8]* %output, i32 0, i32 0
  call void @print_array(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @"??_C@_06NJGKBCAD@SK?5ENC?$AA@", i32 0, i32 0), i8* %arraydecay31, i32 %33)
  br label %if.end34

if.else32:                                        ; preds = %if.end25
  %34 = load i32, i32* %ret, align 4
  %call33 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @"??_C@_0CA@NPBGPOJI@rsa_private_encrypt?0?5ret?3?5?$CF04X?6?$AA@", i32 0, i32 0), i32 %34)
  store i32 -1, i32* %retval, align 4
  br label %return

if.end34:                                         ; preds = %if.then30
  %35 = load i32, i32* %outputLen, align 4
  %arraydecay35 = getelementptr inbounds [256 x i8], [256 x i8]* %output, i32 0, i32 0
  %arraydecay36 = getelementptr inbounds [256 x i8], [256 x i8]* %msg, i32 0, i32 0
  %call37 = call i32 @rsa_public_decrypt(i8* %arraydecay36, i32* %msg_len, i8* %arraydecay35, i32 %35, %struct.rsa_pk_t* %pk)
  store i32 %call37, i32* %ret, align 4
  %36 = load i32, i32* %ret, align 4
  %cmp38 = icmp eq i32 %36, 0
  br i1 %cmp38, label %if.then39, label %if.else43

if.then39:                                        ; preds = %if.end34
  %37 = load i32, i32* %msg_len, align 4
  %arraydecay40 = getelementptr inbounds [256 x i8], [256 x i8]* %msg, i32 0, i32 0
  call void @print_array(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @"??_C@_06FMGLIABK@PK?5DEC?$AA@", i32 0, i32 0), i8* %arraydecay40, i32 %37)
  %arraydecay41 = getelementptr inbounds [256 x i8], [256 x i8]* %msg, i32 0, i32 0
  %call42 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @"??_C@_08NBICHAHH@DEC?3?5?$CFs?6?$AA@", i32 0, i32 0), i8* %arraydecay41)
  br label %if.end45

if.else43:                                        ; preds = %if.end34
  %38 = load i32, i32* %ret, align 4
  %call44 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @"??_C@_0BP@CFOOCEKO@rsa_public_decrypt?0?5ret?3?5?$CF04X?6?$AA@", i32 0, i32 0), i32 %38)
  store i32 -1, i32* %retval, align 4
  br label %return

if.end45:                                         ; preds = %if.then39
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end45, %if.else43, %if.else32, %if.else23, %if.else12, %if.else
  %39 = load i32, i32* %retval, align 4
  ret i32 %39
}

; Function Attrs: noinline optnone
define internal i32 @test2() #2 {
entry:
  %retval = alloca i32, align 4
  %ret = alloca i32, align 4
  %pk = alloca %struct.rsa_pk_t, align 4
  %sk = alloca %struct.rsa_sk_t, align 4
  %msg = alloca [256 x i8], align 1
  %msg_len = alloca i32, align 4
  %0 = bitcast %struct.rsa_pk_t* %pk to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %0, i8 0, i32 516, i1 false)
  %1 = bitcast %struct.rsa_sk_t* %sk to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %1, i8 0, i32 1412, i1 false)
  %2 = bitcast [256 x i8]* %msg to i8*
  call void @llvm.memset.p0i8.i32(i8* align 1 %2, i8 0, i32 256, i1 false)
  %bits = getelementptr inbounds %struct.rsa_pk_t, %struct.rsa_pk_t* %pk, i32 0, i32 0
  store i32 2048, i32* %bits, align 4
  %modulus = getelementptr inbounds %struct.rsa_pk_t, %struct.rsa_pk_t* %pk, i32 0, i32 1
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* %modulus, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %arrayidx, i8* align 1 getelementptr inbounds ([256 x i8], [256 x i8]* @key_m, i32 0, i32 0), i32 256, i1 false)
  %exponent = getelementptr inbounds %struct.rsa_pk_t, %struct.rsa_pk_t* %pk, i32 0, i32 2
  %arrayidx1 = getelementptr inbounds [256 x i8], [256 x i8]* %exponent, i32 0, i32 253
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %arrayidx1, i8* align 1 getelementptr inbounds ([3 x i8], [3 x i8]* @key_e, i32 0, i32 0), i32 3, i1 false)
  %bits2 = getelementptr inbounds %struct.rsa_sk_t, %struct.rsa_sk_t* %sk, i32 0, i32 0
  store i32 2048, i32* %bits2, align 4
  %modulus3 = getelementptr inbounds %struct.rsa_sk_t, %struct.rsa_sk_t* %sk, i32 0, i32 1
  %arrayidx4 = getelementptr inbounds [256 x i8], [256 x i8]* %modulus3, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %arrayidx4, i8* align 1 getelementptr inbounds ([256 x i8], [256 x i8]* @key_m, i32 0, i32 0), i32 256, i1 false)
  %public_exponet = getelementptr inbounds %struct.rsa_sk_t, %struct.rsa_sk_t* %sk, i32 0, i32 2
  %arrayidx5 = getelementptr inbounds [256 x i8], [256 x i8]* %public_exponet, i32 0, i32 253
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %arrayidx5, i8* align 1 getelementptr inbounds ([3 x i8], [3 x i8]* @key_e, i32 0, i32 0), i32 3, i1 false)
  %exponent6 = getelementptr inbounds %struct.rsa_sk_t, %struct.rsa_sk_t* %sk, i32 0, i32 3
  %arrayidx7 = getelementptr inbounds [256 x i8], [256 x i8]* %exponent6, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %arrayidx7, i8* align 1 getelementptr inbounds ([256 x i8], [256 x i8]* @key_pe, i32 0, i32 0), i32 256, i1 false)
  %prime1 = getelementptr inbounds %struct.rsa_sk_t, %struct.rsa_sk_t* %sk, i32 0, i32 4
  %arrayidx8 = getelementptr inbounds [128 x i8], [128 x i8]* %prime1, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %arrayidx8, i8* align 1 getelementptr inbounds ([128 x i8], [128 x i8]* @key_p1, i32 0, i32 0), i32 128, i1 false)
  %prime2 = getelementptr inbounds %struct.rsa_sk_t, %struct.rsa_sk_t* %sk, i32 0, i32 5
  %arrayidx9 = getelementptr inbounds [128 x i8], [128 x i8]* %prime2, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %arrayidx9, i8* align 1 getelementptr inbounds ([128 x i8], [128 x i8]* @key_p2, i32 0, i32 0), i32 128, i1 false)
  %prime_exponent1 = getelementptr inbounds %struct.rsa_sk_t, %struct.rsa_sk_t* %sk, i32 0, i32 6
  %arrayidx10 = getelementptr inbounds [128 x i8], [128 x i8]* %prime_exponent1, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %arrayidx10, i8* align 1 getelementptr inbounds ([128 x i8], [128 x i8]* @key_e1, i32 0, i32 0), i32 128, i1 false)
  %prime_exponent2 = getelementptr inbounds %struct.rsa_sk_t, %struct.rsa_sk_t* %sk, i32 0, i32 7
  %arrayidx11 = getelementptr inbounds [128 x i8], [128 x i8]* %prime_exponent2, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %arrayidx11, i8* align 1 getelementptr inbounds ([128 x i8], [128 x i8]* @key_e2, i32 0, i32 0), i32 128, i1 false)
  %coefficient = getelementptr inbounds %struct.rsa_sk_t, %struct.rsa_sk_t* %sk, i32 0, i32 8
  %arrayidx12 = getelementptr inbounds [128 x i8], [128 x i8]* %coefficient, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %arrayidx12, i8* align 1 getelementptr inbounds ([128 x i8], [128 x i8]* @key_c, i32 0, i32 0), i32 128, i1 false)
  br label %entry.print_pk.Clone

entry.print_pk.Clone:                             ; preds = %entry
  %pk.addr.print_pk.Clone = alloca %struct.rsa_pk_t*, align 4
  store %struct.rsa_pk_t* %pk, %struct.rsa_pk_t** %pk.addr.print_pk.Clone, align 4
  %3 = load %struct.rsa_pk_t*, %struct.rsa_pk_t** %pk.addr.print_pk.Clone, align 4
  %bits.print_pk.Clone = getelementptr inbounds %struct.rsa_pk_t, %struct.rsa_pk_t* %3, i32 0, i32 0
  %4 = load i32, i32* %bits.print_pk.Clone, align 4
  %call.print_pk.Clone = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @"??_C@_08OPCGNDGK@PK?$FL?$CFd?$FN?3?6?$AA@", i32 0, i32 0), i32 %4)
  %5 = load %struct.rsa_pk_t*, %struct.rsa_pk_t** %pk.addr.print_pk.Clone, align 4
  %modulus.print_pk.Clone = getelementptr inbounds %struct.rsa_pk_t, %struct.rsa_pk_t* %5, i32 0, i32 1
  %arraydecay.print_pk.Clone = getelementptr inbounds [256 x i8], [256 x i8]* %modulus.print_pk.Clone, i32 0, i32 0
  call void @print_bn_arr(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @"??_C@_0M@NMEDBGMP@?5?5modulus?3?5?$AA@", i32 0, i32 0), i8* %arraydecay.print_pk.Clone, i32 256)
  %6 = load %struct.rsa_pk_t*, %struct.rsa_pk_t** %pk.addr.print_pk.Clone, align 4
  %exponent.print_pk.Clone = getelementptr inbounds %struct.rsa_pk_t, %struct.rsa_pk_t* %6, i32 0, i32 2
  %arraydecay1.print_pk.Clone = getelementptr inbounds [256 x i8], [256 x i8]* %exponent.print_pk.Clone, i32 0, i32 0
  call void @print_bn_arr(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @"??_C@_0N@JLCGLEPG@?5?5exponent?3?5?$AA@", i32 0, i32 0), i8* %arraydecay1.print_pk.Clone, i32 256)
  br label %entry.Split

entry.Split:                                      ; preds = %entry.print_pk.Clone
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"??_C@_01EEMJAFIK@?6?$AA@", i32 0, i32 0))
  br label %entry.print_sk.Clone

entry.print_sk.Clone:                             ; preds = %entry.Split
  %sk.addr.print_sk.Clone = alloca %struct.rsa_sk_t*, align 4
  store %struct.rsa_sk_t* %sk, %struct.rsa_sk_t** %sk.addr.print_sk.Clone, align 4
  %7 = load %struct.rsa_sk_t*, %struct.rsa_sk_t** %sk.addr.print_sk.Clone, align 4
  %bits.print_sk.Clone = getelementptr inbounds %struct.rsa_sk_t, %struct.rsa_sk_t* %7, i32 0, i32 0
  %8 = load i32, i32* %bits.print_sk.Clone, align 4
  %call.print_sk.Clone = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @"??_C@_08NGKLOPKP@SK?$FL?$CFd?$FN?3?6?$AA@", i32 0, i32 0), i32 %8)
  %9 = load %struct.rsa_sk_t*, %struct.rsa_sk_t** %sk.addr.print_sk.Clone, align 4
  %modulus.print_sk.Clone = getelementptr inbounds %struct.rsa_sk_t, %struct.rsa_sk_t* %9, i32 0, i32 1
  %arraydecay.print_sk.Clone = getelementptr inbounds [256 x i8], [256 x i8]* %modulus.print_sk.Clone, i32 0, i32 0
  call void @print_bn_arr(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @"??_C@_0M@NMEDBGMP@?5?5modulus?3?5?$AA@", i32 0, i32 0), i8* %arraydecay.print_sk.Clone, i32 256)
  %10 = load %struct.rsa_sk_t*, %struct.rsa_sk_t** %sk.addr.print_sk.Clone, align 4
  %public_exponet.print_sk.Clone = getelementptr inbounds %struct.rsa_sk_t, %struct.rsa_sk_t* %10, i32 0, i32 2
  %arraydecay1.print_sk.Clone = getelementptr inbounds [256 x i8], [256 x i8]* %public_exponet.print_sk.Clone, i32 0, i32 0
  call void @print_bn_arr(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @"??_C@_0BD@HINABDEP@?5?5public_exponet?3?5?$AA@", i32 0, i32 0), i8* %arraydecay1.print_sk.Clone, i32 256)
  %11 = load %struct.rsa_sk_t*, %struct.rsa_sk_t** %sk.addr.print_sk.Clone, align 4
  %exponent.print_sk.Clone = getelementptr inbounds %struct.rsa_sk_t, %struct.rsa_sk_t* %11, i32 0, i32 3
  %arraydecay2.print_sk.Clone = getelementptr inbounds [256 x i8], [256 x i8]* %exponent.print_sk.Clone, i32 0, i32 0
  call void @print_bn_arr(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @"??_C@_0N@JLCGLEPG@?5?5exponent?3?5?$AA@", i32 0, i32 0), i8* %arraydecay2.print_sk.Clone, i32 256)
  %12 = load %struct.rsa_sk_t*, %struct.rsa_sk_t** %sk.addr.print_sk.Clone, align 4
  %prime1.print_sk.Clone = getelementptr inbounds %struct.rsa_sk_t, %struct.rsa_sk_t* %12, i32 0, i32 4
  %arraydecay3.print_sk.Clone = getelementptr inbounds [128 x i8], [128 x i8]* %prime1.print_sk.Clone, i32 0, i32 0
  call void @print_bn_arr(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"??_C@_0L@EMBGKBID@?5?5prime1?3?5?$AA@", i32 0, i32 0), i8* %arraydecay3.print_sk.Clone, i32 128)
  %13 = load %struct.rsa_sk_t*, %struct.rsa_sk_t** %sk.addr.print_sk.Clone, align 4
  %prime2.print_sk.Clone = getelementptr inbounds %struct.rsa_sk_t, %struct.rsa_sk_t* %13, i32 0, i32 5
  %arraydecay4.print_sk.Clone = getelementptr inbounds [128 x i8], [128 x i8]* %prime2.print_sk.Clone, i32 0, i32 0
  call void @print_bn_arr(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"??_C@_0L@FOKDAOGN@?5?5prime2?3?5?$AA@", i32 0, i32 0), i8* %arraydecay4.print_sk.Clone, i32 128)
  %14 = load %struct.rsa_sk_t*, %struct.rsa_sk_t** %sk.addr.print_sk.Clone, align 4
  %prime_exponent1.print_sk.Clone = getelementptr inbounds %struct.rsa_sk_t, %struct.rsa_sk_t* %14, i32 0, i32 6
  %arraydecay5.print_sk.Clone = getelementptr inbounds [128 x i8], [128 x i8]* %prime_exponent1.print_sk.Clone, i32 0, i32 0
  call void @print_bn_arr(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @"??_C@_0BD@DBOOPOHL@?5?5primeExponent1?3?5?$AA@", i32 0, i32 0), i8* %arraydecay5.print_sk.Clone, i32 128)
  %15 = load %struct.rsa_sk_t*, %struct.rsa_sk_t** %sk.addr.print_sk.Clone, align 4
  %prime_exponent2.print_sk.Clone = getelementptr inbounds %struct.rsa_sk_t, %struct.rsa_sk_t* %15, i32 0, i32 7
  %arraydecay6.print_sk.Clone = getelementptr inbounds [128 x i8], [128 x i8]* %prime_exponent2.print_sk.Clone, i32 0, i32 0
  call void @print_bn_arr(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @"??_C@_0BD@CDFLFBJF@?5?5primeExponent2?3?5?$AA@", i32 0, i32 0), i8* %arraydecay6.print_sk.Clone, i32 128)
  %16 = load %struct.rsa_sk_t*, %struct.rsa_sk_t** %sk.addr.print_sk.Clone, align 4
  %coefficient.print_sk.Clone = getelementptr inbounds %struct.rsa_sk_t, %struct.rsa_sk_t* %16, i32 0, i32 8
  %arraydecay7.print_sk.Clone = getelementptr inbounds [128 x i8], [128 x i8]* %coefficient.print_sk.Clone, i32 0, i32 0
  call void @print_bn_arr(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @"??_C@_0BA@BHHMNKPP@?5?5coefficient?3?5?$AA@", i32 0, i32 0), i8* %arraydecay7.print_sk.Clone, i32 128)
  br label %entry.Split.Split

entry.Split.Split:                                ; preds = %entry.print_sk.Clone
  call void @write_sk(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @"??_C@_06OGPOEGBJ@sk?4prv?$AA@", i32 0, i32 0), %struct.rsa_sk_t* %sk)
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %msg, i32 0, i32 0
  %call13 = call i32 @rsa_private_decrypt(i8* %arraydecay, i32* %msg_len, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @hex_array, i32 0, i32 0), i32 256, %struct.rsa_sk_t* %sk)
  store i32 %call13, i32* %ret, align 4
  %17 = load i32, i32* %ret, align 4
  %cmp = icmp eq i32 %17, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry.Split.Split
  %18 = load i32, i32* %msg_len, align 4
  %arraydecay14 = getelementptr inbounds [256 x i8], [256 x i8]* %msg, i32 0, i32 0
  call void @print_array(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"??_C@_03GHMILMGE@DEC?$AA@", i32 0, i32 0), i8* %arraydecay14, i32 %18)
  %arraydecay15 = getelementptr inbounds [256 x i8], [256 x i8]* %msg, i32 0, i32 0
  %call16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @"??_C@_08NBICHAHH@DEC?3?5?$CFs?6?$AA@", i32 0, i32 0), i8* %arraydecay15)
  br label %if.end

if.else:                                          ; preds = %entry.Split.Split
  %19 = load i32, i32* %ret, align 4
  %call17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @"??_C@_0CA@BAIGFOPC@rsa_private_decrypt?0?5ret?3?5?$CF04X?6?$AA@", i32 0, i32 0), i32 %19)
  store i32 -1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %if.then
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end, %if.else
  %20 = load i32, i32* %retval, align 4
  ret i32 %20
}

; Function Attrs: noinline optnone
define internal i32 @test3() #2 {
entry:
  %retval = alloca i32, align 4
  %sk = alloca %struct.rsa_sk_t, align 4
  %msg = alloca [256 x i8], align 1
  %msg_len = alloca i32, align 4
  %ret = alloca i32, align 4
  %0 = bitcast [256 x i8]* %msg to i8*
  call void @llvm.memset.p0i8.i32(i8* align 1 %0, i8 0, i32 256, i1 false)
  %call = call i32 @rsa_get_sk_from_file(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @"??_C@_06OGPOEGBJ@sk?4prv?$AA@", i32 0, i32 0), %struct.rsa_sk_t* %sk)
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %msg, i32 0, i32 0
  %call1 = call i32 @rsa_private_decrypt(i8* %arraydecay, i32* %msg_len, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @hex_array, i32 0, i32 0), i32 256, %struct.rsa_sk_t* %sk)
  store i32 %call1, i32* %ret, align 4
  %1 = load i32, i32* %ret, align 4
  %cmp = icmp eq i32 %1, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %msg_len, align 4
  %arraydecay2 = getelementptr inbounds [256 x i8], [256 x i8]* %msg, i32 0, i32 0
  call void @print_array(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"??_C@_03GHMILMGE@DEC?$AA@", i32 0, i32 0), i8* %arraydecay2, i32 %2)
  %arraydecay3 = getelementptr inbounds [256 x i8], [256 x i8]* %msg, i32 0, i32 0
  %call4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @"??_C@_08NBICHAHH@DEC?3?5?$CFs?6?$AA@", i32 0, i32 0), i8* %arraydecay3)
  br label %if.end

if.else:                                          ; preds = %entry
  %3 = load i32, i32* %ret, align 4
  %call5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @"??_C@_0CA@BAIGFOPC@rsa_private_decrypt?0?5ret?3?5?$CF04X?6?$AA@", i32 0, i32 0), i32 %3)
  store i32 -1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %if.then
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end, %if.else
  %4 = load i32, i32* %retval, align 4
  ret i32 %4
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* nocapture writeonly, i8* nocapture readonly, i32, i1) #1

; Function Attrs: noinline optnone
define internal void @write_sk(i8* %file, %struct.rsa_sk_t* %sk) #2 {
entry:
  %sk.addr = alloca %struct.rsa_sk_t*, align 4
  %file.addr = alloca i8*, align 4
  %fp = alloca %struct._iobuf*, align 4
  store %struct.rsa_sk_t* %sk, %struct.rsa_sk_t** %sk.addr, align 4
  store i8* %file, i8** %file.addr, align 4
  %0 = load i8*, i8** %file.addr, align 4
  %call = call %struct._iobuf* @fopen(i8* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"??_C@_01NOFIACDB@w?$AA@", i32 0, i32 0))
  store %struct._iobuf* %call, %struct._iobuf** %fp, align 4
  %1 = load %struct._iobuf*, %struct._iobuf** %fp, align 4
  %cmp = icmp eq %struct._iobuf* %1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @"??_C@_0BD@DOBJINJI@CAN?5NOT?5OPEN?5FILE?6?$AA@", i32 0, i32 0))
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct._iobuf*, %struct._iobuf** %fp, align 4
  %3 = load %struct.rsa_sk_t*, %struct.rsa_sk_t** %sk.addr, align 4
  %4 = bitcast %struct.rsa_sk_t* %3 to i8*
  %call2 = call i32 @fwrite(i8* %4, i32 1, i32 1412, %struct._iobuf* %2)
  %5 = load %struct._iobuf*, %struct._iobuf** %fp, align 4
  %call3 = call i32 @fclose(%struct._iobuf* %5)
  br label %return

return:                                           ; preds = %if.end, %if.then
  ret void
}

declare dllimport %struct._iobuf* @fopen(i8*, i8*) #3

declare dllimport i32 @fwrite(i8*, i32, i32, %struct._iobuf*) #3

declare dllimport i32 @fclose(%struct._iobuf*) #3

declare dso_local i32 @strlen(i8*) #3

; Function Attrs: noinline optnone
define dso_local i32 @main() #2 {
entry:
  %retval = alloca i32, align 4
  %start = alloca i32, align 4
  %finish = alloca i32, align 4
  %duration = alloca double, align 8
  %i = alloca i32, align 4
  store i32 0, i32* %retval, align 4
  %call = call i32 @clock()
  store i32 %call, i32* %start, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %0, 10
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %call1 = call i32 @timetest()
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %1 = load i32, i32* %i, align 4
  %inc = add nsw i32 %1, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call2 = call i32 @clock()
  store i32 %call2, i32* %finish, align 4
  %2 = load i32, i32* %finish, align 4
  %3 = load i32, i32* %start, align 4
  %sub = sub nsw i32 %2, %3
  %conv = sitofp i32 %sub to double
  %div = fdiv double %conv, 1.000000e+03
  store double %div, double* %duration, align 8
  %4 = load double, double* %duration, align 8
  %call3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @"??_C@_0M@NPEDOHBA@?$CFf?5seconds?6?$AA@", i32 0, i32 0), double %4)
  %5 = load i32, i32* %retval, align 4
  ret i32 %5
}

declare dllimport i32 @clock() #3

; Function Attrs: noinline optnone
define dso_local void @initialize_rand() #2 {
entry:
  %call = call i64 @time(i64* null)
  %conv = trunc i64 %call to i32
  call void @srand(i32 %conv)
  ret void
}

; Function Attrs: noinline optnone
define internal i64 @time(i64* %_Time) #2 {
entry:
  %_Time.addr = alloca i64*, align 4
  store i64* %_Time, i64** %_Time.addr, align 4
  %0 = load i64*, i64** %_Time.addr, align 4
  %call = call i64 @_time64(i64* %0)
  ret i64 %call
}

declare dllimport void @srand(i32) #3

declare dllimport i64 @_time64(i64*) #3

; Function Attrs: noinline optnone
define dso_local void @generate_rand(i8* %block, i32 %block_len) #2 {
entry:
  %block_len.addr = alloca i32, align 4
  %block.addr = alloca i8*, align 4
  %i = alloca i32, align 4
  store i32 %block_len, i32* %block_len.addr, align 4
  store i8* %block, i8** %block.addr, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* %block_len.addr, align 4
  %cmp = icmp ult i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %call = call i32 @rand()
  %conv = trunc i32 %call to i8
  %2 = load i8*, i8** %block.addr, align 4
  %3 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds i8, i8* %2, i32 %3
  store i8 %conv, i8* %arrayidx, align 1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %4 = load i32, i32* %i, align 4
  %inc = add i32 %4, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

declare dllimport i32 @rand() #3

; Function Attrs: noinline optnone
define dso_local i32 @generate_prime(i32* %a, i32* %lower, i32* %upper, i32* %d, i32 %digits) #2 {
entry:
  %retval = alloca i32, align 4
  %digits.addr = alloca i32, align 4
  %d.addr = alloca i32*, align 4
  %upper.addr = alloca i32*, align 4
  %lower.addr = alloca i32*, align 4
  %a.addr = alloca i32*, align 4
  %block = alloca [260 x i8], align 1
  %t = alloca [65 x i32], align 4
  %u = alloca [65 x i32], align 4
  store i32 %digits, i32* %digits.addr, align 4
  store i32* %d, i32** %d.addr, align 4
  store i32* %upper, i32** %upper.addr, align 4
  store i32* %lower, i32** %lower.addr, align 4
  store i32* %a, i32** %a.addr, align 4
  %0 = load i32, i32* %digits.addr, align 4
  %mul = mul i32 %0, 4
  %arraydecay = getelementptr inbounds [260 x i8], [260 x i8]* %block, i32 0, i32 0
  call void @generate_rand(i8* %arraydecay, i32 %mul)
  %1 = load i32, i32* %digits.addr, align 4
  %mul1 = mul i32 %1, 4
  %arraydecay2 = getelementptr inbounds [260 x i8], [260 x i8]* %block, i32 0, i32 0
  %2 = load i32, i32* %digits.addr, align 4
  %3 = load i32*, i32** %a.addr, align 4
  call void @bn_decode(i32* %3, i32 %2, i8* %arraydecay2, i32 %mul1)
  %4 = load i32, i32* %digits.addr, align 4
  %5 = load i32*, i32** %lower.addr, align 4
  %6 = load i32*, i32** %upper.addr, align 4
  %arraydecay3 = getelementptr inbounds [65 x i32], [65 x i32]* %t, i32 0, i32 0
  %call = call i32 @bn_sub(i32* %arraydecay3, i32* %6, i32* %5, i32 %4)
  %7 = load i32, i32* %digits.addr, align 4
  %arraydecay4 = getelementptr inbounds [65 x i32], [65 x i32]* %u, i32 0, i32 0
  %RetValuePtr = alloca i32, align 4
  %RetValuePtr30 = alloca i32, align 4
  %RetValuePtr61 = alloca i32, align 4
  %RetValuePtr93 = alloca i32, align 4
  %RetValuePtr125 = alloca i32, align 4
  %RetValuePtr127 = alloca i32, align 4
  %RetValuePtr153 = alloca i32, align 4
  %RetValuePtr179 = alloca i32, align 4
  br label %entry.bn_assign_zero.Clone

entry.bn_assign_zero.Clone:                       ; preds = %entry
  %digits.addr.bn_assign_zero.Clone = alloca i32, align 4
  %a.addr.bn_assign_zero.Clone = alloca i32*, align 4
  %i.bn_assign_zero.Clone = alloca i32, align 4
  store i32 %7, i32* %digits.addr.bn_assign_zero.Clone, align 4
  store i32* %arraydecay4, i32** %a.addr.bn_assign_zero.Clone, align 4
  store i32 0, i32* %i.bn_assign_zero.Clone, align 4
  br label %for.cond.bn_assign_zero.Clone

for.cond.bn_assign_zero.Clone:                    ; preds = %for.inc.bn_assign_zero.Clone, %entry.bn_assign_zero.Clone
  %8 = load i32, i32* %i.bn_assign_zero.Clone, align 4
  %9 = load i32, i32* %digits.addr.bn_assign_zero.Clone, align 4
  %cmp.bn_assign_zero.Clone = icmp ult i32 %8, %9
  br i1 %cmp.bn_assign_zero.Clone, label %for.body.bn_assign_zero.Clone, label %for.end.bn_assign_zero.Clone

for.body.bn_assign_zero.Clone:                    ; preds = %for.cond.bn_assign_zero.Clone
  %10 = load i32*, i32** %a.addr.bn_assign_zero.Clone, align 4
  %11 = load i32, i32* %i.bn_assign_zero.Clone, align 4
  %arrayidx.bn_assign_zero.Clone = getelementptr inbounds i32, i32* %10, i32 %11
  store i32 0, i32* %arrayidx.bn_assign_zero.Clone, align 4
  br label %for.inc.bn_assign_zero.Clone

for.inc.bn_assign_zero.Clone:                     ; preds = %for.body.bn_assign_zero.Clone
  %12 = load i32, i32* %i.bn_assign_zero.Clone, align 4
  %inc.bn_assign_zero.Clone = add i32 %12, 1
  store i32 %inc.bn_assign_zero.Clone, i32* %i.bn_assign_zero.Clone, align 4
  br label %for.cond.bn_assign_zero.Clone

for.end.bn_assign_zero.Clone:                     ; preds = %for.cond.bn_assign_zero.Clone
  br label %entry.Split

entry.Split:                                      ; preds = %for.end.bn_assign_zero.Clone
  %arrayidx = getelementptr inbounds [65 x i32], [65 x i32]* %u, i32 0, i32 0
  store i32 1, i32* %arrayidx, align 4
  %13 = load i32, i32* %digits.addr, align 4
  %arraydecay5 = getelementptr inbounds [65 x i32], [65 x i32]* %u, i32 0, i32 0
  %arraydecay6 = getelementptr inbounds [65 x i32], [65 x i32]* %t, i32 0, i32 0
  %arraydecay7 = getelementptr inbounds [65 x i32], [65 x i32]* %t, i32 0, i32 0
  br label %entry.bn_add.Clone96

entry.bn_add.Clone96:                             ; preds = %entry.Split
  %digits.addr.bn_add.Clone97 = alloca i32, align 4
  %c.addr.bn_add.Clone98 = alloca i32*, align 4
  %b.addr.bn_add.Clone99 = alloca i32*, align 4
  %a.addr.bn_add.Clone100 = alloca i32*, align 4
  %ai.bn_add.Clone101 = alloca i32, align 4
  %carry.bn_add.Clone102 = alloca i32, align 4
  %i.bn_add.Clone103 = alloca i32, align 4
  store i32 %13, i32* %digits.addr.bn_add.Clone97, align 4
  store i32* %arraydecay5, i32** %c.addr.bn_add.Clone98, align 4
  store i32* %arraydecay6, i32** %b.addr.bn_add.Clone99, align 4
  store i32* %arraydecay7, i32** %a.addr.bn_add.Clone100, align 4
  store i32 0, i32* %carry.bn_add.Clone102, align 4
  store i32 0, i32* %i.bn_add.Clone103, align 4
  br label %for.cond.bn_add.Clone104

for.cond.bn_add.Clone104:                         ; preds = %for.inc.bn_add.Clone122, %entry.bn_add.Clone96
  %14 = load i32, i32* %i.bn_add.Clone103, align 4
  %15 = load i32, i32* %digits.addr.bn_add.Clone97, align 4
  %cmp.bn_add.Clone105 = icmp ult i32 %14, %15
  br i1 %cmp.bn_add.Clone105, label %for.body.bn_add.Clone106, label %for.end.bn_add.Clone124

for.body.bn_add.Clone106:                         ; preds = %for.cond.bn_add.Clone104
  %16 = load i32*, i32** %b.addr.bn_add.Clone99, align 4
  %17 = load i32, i32* %i.bn_add.Clone103, align 4
  %arrayidx.bn_add.Clone107 = getelementptr inbounds i32, i32* %16, i32 %17
  %18 = load i32, i32* %arrayidx.bn_add.Clone107, align 4
  %19 = load i32, i32* %carry.bn_add.Clone102, align 4
  %add.bn_add.Clone108 = add i32 %18, %19
  store i32 %add.bn_add.Clone108, i32* %ai.bn_add.Clone101, align 4
  %20 = load i32, i32* %carry.bn_add.Clone102, align 4
  %cmp1.bn_add.Clone109 = icmp ult i32 %add.bn_add.Clone108, %20
  br i1 %cmp1.bn_add.Clone109, label %if.then.bn_add.Clone110, label %if.else.bn_add.Clone112

if.then.bn_add.Clone110:                          ; preds = %for.body.bn_add.Clone106
  %21 = load i32*, i32** %c.addr.bn_add.Clone98, align 4
  %22 = load i32, i32* %i.bn_add.Clone103, align 4
  %arrayidx2.bn_add.Clone111 = getelementptr inbounds i32, i32* %21, i32 %22
  %23 = load i32, i32* %arrayidx2.bn_add.Clone111, align 4
  store i32 %23, i32* %ai.bn_add.Clone101, align 4
  br label %if.end9.bn_add.Clone120

if.else.bn_add.Clone112:                          ; preds = %for.body.bn_add.Clone106
  %24 = load i32*, i32** %c.addr.bn_add.Clone98, align 4
  %25 = load i32, i32* %i.bn_add.Clone103, align 4
  %arrayidx3.bn_add.Clone113 = getelementptr inbounds i32, i32* %24, i32 %25
  %26 = load i32, i32* %arrayidx3.bn_add.Clone113, align 4
  %27 = load i32, i32* %ai.bn_add.Clone101, align 4
  %add4.bn_add.Clone114 = add i32 %27, %26
  store i32 %add4.bn_add.Clone114, i32* %ai.bn_add.Clone101, align 4
  %28 = load i32*, i32** %c.addr.bn_add.Clone98, align 4
  %29 = load i32, i32* %i.bn_add.Clone103, align 4
  %arrayidx5.bn_add.Clone115 = getelementptr inbounds i32, i32* %28, i32 %29
  %30 = load i32, i32* %arrayidx5.bn_add.Clone115, align 4
  %cmp6.bn_add.Clone116 = icmp ult i32 %add4.bn_add.Clone114, %30
  br i1 %cmp6.bn_add.Clone116, label %if.then7.bn_add.Clone117, label %if.else8.bn_add.Clone118

if.then7.bn_add.Clone117:                         ; preds = %if.else.bn_add.Clone112
  store i32 1, i32* %carry.bn_add.Clone102, align 4
  br label %if.end.bn_add.Clone119

if.else8.bn_add.Clone118:                         ; preds = %if.else.bn_add.Clone112
  store i32 0, i32* %carry.bn_add.Clone102, align 4
  br label %if.end.bn_add.Clone119

if.end.bn_add.Clone119:                           ; preds = %if.else8.bn_add.Clone118, %if.then7.bn_add.Clone117
  br label %if.end9.bn_add.Clone120

if.end9.bn_add.Clone120:                          ; preds = %if.end.bn_add.Clone119, %if.then.bn_add.Clone110
  %31 = load i32, i32* %ai.bn_add.Clone101, align 4
  %32 = load i32*, i32** %a.addr.bn_add.Clone100, align 4
  %33 = load i32, i32* %i.bn_add.Clone103, align 4
  %arrayidx10.bn_add.Clone121 = getelementptr inbounds i32, i32* %32, i32 %33
  store i32 %31, i32* %arrayidx10.bn_add.Clone121, align 4
  br label %for.inc.bn_add.Clone122

for.inc.bn_add.Clone122:                          ; preds = %if.end9.bn_add.Clone120
  %34 = load i32, i32* %i.bn_add.Clone103, align 4
  %inc.bn_add.Clone123 = add i32 %34, 1
  store i32 %inc.bn_add.Clone123, i32* %i.bn_add.Clone103, align 4
  br label %for.cond.bn_add.Clone104

for.end.bn_add.Clone124:                          ; preds = %for.cond.bn_add.Clone104
  %35 = load i32, i32* %carry.bn_add.Clone102, align 4
  store i32 %35, i32* %RetValuePtr125
  br label %entry.Split.Split95

entry.Split.Split95:                              ; preds = %for.end.bn_add.Clone124
  %RetValue126 = load i32, i32* %RetValuePtr125
  %36 = load i32, i32* %digits.addr, align 4
  %arraydecay9 = getelementptr inbounds [65 x i32], [65 x i32]* %t, i32 0, i32 0
  %37 = load i32, i32* %digits.addr, align 4
  %38 = load i32*, i32** %a.addr, align 4
  %39 = load i32*, i32** %a.addr, align 4
  br label %entry.bn_mod.Clone181

entry.bn_mod.Clone181:                            ; preds = %entry.Split.Split95
  %cdigits.addr.bn_mod.Clone182 = alloca i32, align 4
  %c.addr.bn_mod.Clone183 = alloca i32*, align 4
  %bdigits.addr.bn_mod.Clone184 = alloca i32, align 4
  %b.addr.bn_mod.Clone185 = alloca i32*, align 4
  %a.addr.bn_mod.Clone186 = alloca i32*, align 4
  %t.bn_mod.Clone187 = alloca [130 x i32], align 4
  store i32 %36, i32* %cdigits.addr.bn_mod.Clone182, align 4
  store i32* %arraydecay9, i32** %c.addr.bn_mod.Clone183, align 4
  store i32 %37, i32* %bdigits.addr.bn_mod.Clone184, align 4
  store i32* %38, i32** %b.addr.bn_mod.Clone185, align 4
  store i32* %39, i32** %a.addr.bn_mod.Clone186, align 4
  %40 = bitcast [130 x i32]* %t.bn_mod.Clone187 to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %40, i8 0, i32 520, i1 false)
  %41 = load i32, i32* %cdigits.addr.bn_mod.Clone182, align 4
  %42 = load i32*, i32** %c.addr.bn_mod.Clone183, align 4
  %43 = load i32, i32* %bdigits.addr.bn_mod.Clone184, align 4
  %44 = load i32*, i32** %b.addr.bn_mod.Clone185, align 4
  %45 = load i32*, i32** %a.addr.bn_mod.Clone186, align 4
  %arraydecay.bn_mod.Clone188 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mod.Clone187, i32 0, i32 0
  call void @bn_div(i32* %arraydecay.bn_mod.Clone188, i32* %45, i32* %44, i32 %43, i32* %42, i32 %41)
  %arraydecay1.bn_mod.Clone189 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mod.Clone187, i32 0, i32 0
  %46 = bitcast i32* %arraydecay1.bn_mod.Clone189 to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %46, i8 0, i32 520, i1 false)
  br label %entry.Split.Split95.Split

entry.Split.Split95.Split:                        ; preds = %entry.bn_mod.Clone181
  %47 = load i32, i32* %digits.addr, align 4
  %48 = load i32*, i32** %lower.addr, align 4
  %49 = load i32*, i32** %a.addr, align 4
  %50 = load i32*, i32** %a.addr, align 4
  br label %entry.bn_add.Clone64

entry.bn_add.Clone64:                             ; preds = %entry.Split.Split95.Split
  %digits.addr.bn_add.Clone65 = alloca i32, align 4
  %c.addr.bn_add.Clone66 = alloca i32*, align 4
  %b.addr.bn_add.Clone67 = alloca i32*, align 4
  %a.addr.bn_add.Clone68 = alloca i32*, align 4
  %ai.bn_add.Clone69 = alloca i32, align 4
  %carry.bn_add.Clone70 = alloca i32, align 4
  %i.bn_add.Clone71 = alloca i32, align 4
  store i32 %47, i32* %digits.addr.bn_add.Clone65, align 4
  store i32* %48, i32** %c.addr.bn_add.Clone66, align 4
  store i32* %49, i32** %b.addr.bn_add.Clone67, align 4
  store i32* %50, i32** %a.addr.bn_add.Clone68, align 4
  store i32 0, i32* %carry.bn_add.Clone70, align 4
  store i32 0, i32* %i.bn_add.Clone71, align 4
  br label %for.cond.bn_add.Clone72

for.cond.bn_add.Clone72:                          ; preds = %for.inc.bn_add.Clone90, %entry.bn_add.Clone64
  %51 = load i32, i32* %i.bn_add.Clone71, align 4
  %52 = load i32, i32* %digits.addr.bn_add.Clone65, align 4
  %cmp.bn_add.Clone73 = icmp ult i32 %51, %52
  br i1 %cmp.bn_add.Clone73, label %for.body.bn_add.Clone74, label %for.end.bn_add.Clone92

for.body.bn_add.Clone74:                          ; preds = %for.cond.bn_add.Clone72
  %53 = load i32*, i32** %b.addr.bn_add.Clone67, align 4
  %54 = load i32, i32* %i.bn_add.Clone71, align 4
  %arrayidx.bn_add.Clone75 = getelementptr inbounds i32, i32* %53, i32 %54
  %55 = load i32, i32* %arrayidx.bn_add.Clone75, align 4
  %56 = load i32, i32* %carry.bn_add.Clone70, align 4
  %add.bn_add.Clone76 = add i32 %55, %56
  store i32 %add.bn_add.Clone76, i32* %ai.bn_add.Clone69, align 4
  %57 = load i32, i32* %carry.bn_add.Clone70, align 4
  %cmp1.bn_add.Clone77 = icmp ult i32 %add.bn_add.Clone76, %57
  br i1 %cmp1.bn_add.Clone77, label %if.then.bn_add.Clone78, label %if.else.bn_add.Clone80

if.then.bn_add.Clone78:                           ; preds = %for.body.bn_add.Clone74
  %58 = load i32*, i32** %c.addr.bn_add.Clone66, align 4
  %59 = load i32, i32* %i.bn_add.Clone71, align 4
  %arrayidx2.bn_add.Clone79 = getelementptr inbounds i32, i32* %58, i32 %59
  %60 = load i32, i32* %arrayidx2.bn_add.Clone79, align 4
  store i32 %60, i32* %ai.bn_add.Clone69, align 4
  br label %if.end9.bn_add.Clone88

if.else.bn_add.Clone80:                           ; preds = %for.body.bn_add.Clone74
  %61 = load i32*, i32** %c.addr.bn_add.Clone66, align 4
  %62 = load i32, i32* %i.bn_add.Clone71, align 4
  %arrayidx3.bn_add.Clone81 = getelementptr inbounds i32, i32* %61, i32 %62
  %63 = load i32, i32* %arrayidx3.bn_add.Clone81, align 4
  %64 = load i32, i32* %ai.bn_add.Clone69, align 4
  %add4.bn_add.Clone82 = add i32 %64, %63
  store i32 %add4.bn_add.Clone82, i32* %ai.bn_add.Clone69, align 4
  %65 = load i32*, i32** %c.addr.bn_add.Clone66, align 4
  %66 = load i32, i32* %i.bn_add.Clone71, align 4
  %arrayidx5.bn_add.Clone83 = getelementptr inbounds i32, i32* %65, i32 %66
  %67 = load i32, i32* %arrayidx5.bn_add.Clone83, align 4
  %cmp6.bn_add.Clone84 = icmp ult i32 %add4.bn_add.Clone82, %67
  br i1 %cmp6.bn_add.Clone84, label %if.then7.bn_add.Clone85, label %if.else8.bn_add.Clone86

if.then7.bn_add.Clone85:                          ; preds = %if.else.bn_add.Clone80
  store i32 1, i32* %carry.bn_add.Clone70, align 4
  br label %if.end.bn_add.Clone87

if.else8.bn_add.Clone86:                          ; preds = %if.else.bn_add.Clone80
  store i32 0, i32* %carry.bn_add.Clone70, align 4
  br label %if.end.bn_add.Clone87

if.end.bn_add.Clone87:                            ; preds = %if.else8.bn_add.Clone86, %if.then7.bn_add.Clone85
  br label %if.end9.bn_add.Clone88

if.end9.bn_add.Clone88:                           ; preds = %if.end.bn_add.Clone87, %if.then.bn_add.Clone78
  %68 = load i32, i32* %ai.bn_add.Clone69, align 4
  %69 = load i32*, i32** %a.addr.bn_add.Clone68, align 4
  %70 = load i32, i32* %i.bn_add.Clone71, align 4
  %arrayidx10.bn_add.Clone89 = getelementptr inbounds i32, i32* %69, i32 %70
  store i32 %68, i32* %arrayidx10.bn_add.Clone89, align 4
  br label %for.inc.bn_add.Clone90

for.inc.bn_add.Clone90:                           ; preds = %if.end9.bn_add.Clone88
  %71 = load i32, i32* %i.bn_add.Clone71, align 4
  %inc.bn_add.Clone91 = add i32 %71, 1
  store i32 %inc.bn_add.Clone91, i32* %i.bn_add.Clone71, align 4
  br label %for.cond.bn_add.Clone72

for.end.bn_add.Clone92:                           ; preds = %for.cond.bn_add.Clone72
  %72 = load i32, i32* %carry.bn_add.Clone70, align 4
  store i32 %72, i32* %RetValuePtr93
  br label %entry.Split.Split63

entry.Split.Split63:                              ; preds = %for.end.bn_add.Clone92
  %RetValue94 = load i32, i32* %RetValuePtr93
  %73 = load i32, i32* %digits.addr, align 4
  %74 = load i32*, i32** %d.addr, align 4
  %75 = load i32, i32* %digits.addr, align 4
  %76 = load i32*, i32** %a.addr, align 4
  %arraydecay11 = getelementptr inbounds [65 x i32], [65 x i32]* %t, i32 0, i32 0
  br label %entry.bn_mod.Clone

entry.bn_mod.Clone:                               ; preds = %entry.Split.Split63
  %cdigits.addr.bn_mod.Clone = alloca i32, align 4
  %c.addr.bn_mod.Clone = alloca i32*, align 4
  %bdigits.addr.bn_mod.Clone = alloca i32, align 4
  %b.addr.bn_mod.Clone = alloca i32*, align 4
  %a.addr.bn_mod.Clone = alloca i32*, align 4
  %t.bn_mod.Clone = alloca [130 x i32], align 4
  store i32 %73, i32* %cdigits.addr.bn_mod.Clone, align 4
  store i32* %74, i32** %c.addr.bn_mod.Clone, align 4
  store i32 %75, i32* %bdigits.addr.bn_mod.Clone, align 4
  store i32* %76, i32** %b.addr.bn_mod.Clone, align 4
  store i32* %arraydecay11, i32** %a.addr.bn_mod.Clone, align 4
  %77 = bitcast [130 x i32]* %t.bn_mod.Clone to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %77, i8 0, i32 520, i1 false)
  %78 = load i32, i32* %cdigits.addr.bn_mod.Clone, align 4
  %79 = load i32*, i32** %c.addr.bn_mod.Clone, align 4
  %80 = load i32, i32* %bdigits.addr.bn_mod.Clone, align 4
  %81 = load i32*, i32** %b.addr.bn_mod.Clone, align 4
  %82 = load i32*, i32** %a.addr.bn_mod.Clone, align 4
  %arraydecay.bn_mod.Clone = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mod.Clone, i32 0, i32 0
  call void @bn_div(i32* %arraydecay.bn_mod.Clone, i32* %82, i32* %81, i32 %80, i32* %79, i32 %78)
  %arraydecay1.bn_mod.Clone = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mod.Clone, i32 0, i32 0
  %83 = bitcast i32* %arraydecay1.bn_mod.Clone to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %83, i8 0, i32 520, i1 false)
  br label %entry.Split.Split63.Split

entry.Split.Split63.Split:                        ; preds = %entry.bn_mod.Clone
  %84 = load i32, i32* %digits.addr, align 4
  %arraydecay12 = getelementptr inbounds [65 x i32], [65 x i32]* %t, i32 0, i32 0
  %85 = load i32*, i32** %a.addr, align 4
  %86 = load i32*, i32** %a.addr, align 4
  %call13 = call i32 @bn_sub(i32* %86, i32* %85, i32* %arraydecay12, i32 %84)
  %87 = load i32, i32* %digits.addr, align 4
  %arraydecay14 = getelementptr inbounds [65 x i32], [65 x i32]* %u, i32 0, i32 0
  %88 = load i32*, i32** %a.addr, align 4
  %89 = load i32*, i32** %a.addr, align 4
  br label %entry.bn_add.Clone32

entry.bn_add.Clone32:                             ; preds = %entry.Split.Split63.Split
  %digits.addr.bn_add.Clone33 = alloca i32, align 4
  %c.addr.bn_add.Clone34 = alloca i32*, align 4
  %b.addr.bn_add.Clone35 = alloca i32*, align 4
  %a.addr.bn_add.Clone36 = alloca i32*, align 4
  %ai.bn_add.Clone37 = alloca i32, align 4
  %carry.bn_add.Clone38 = alloca i32, align 4
  %i.bn_add.Clone39 = alloca i32, align 4
  store i32 %87, i32* %digits.addr.bn_add.Clone33, align 4
  store i32* %arraydecay14, i32** %c.addr.bn_add.Clone34, align 4
  store i32* %88, i32** %b.addr.bn_add.Clone35, align 4
  store i32* %89, i32** %a.addr.bn_add.Clone36, align 4
  store i32 0, i32* %carry.bn_add.Clone38, align 4
  store i32 0, i32* %i.bn_add.Clone39, align 4
  br label %for.cond.bn_add.Clone40

for.cond.bn_add.Clone40:                          ; preds = %for.inc.bn_add.Clone58, %entry.bn_add.Clone32
  %90 = load i32, i32* %i.bn_add.Clone39, align 4
  %91 = load i32, i32* %digits.addr.bn_add.Clone33, align 4
  %cmp.bn_add.Clone41 = icmp ult i32 %90, %91
  br i1 %cmp.bn_add.Clone41, label %for.body.bn_add.Clone42, label %for.end.bn_add.Clone60

for.body.bn_add.Clone42:                          ; preds = %for.cond.bn_add.Clone40
  %92 = load i32*, i32** %b.addr.bn_add.Clone35, align 4
  %93 = load i32, i32* %i.bn_add.Clone39, align 4
  %arrayidx.bn_add.Clone43 = getelementptr inbounds i32, i32* %92, i32 %93
  %94 = load i32, i32* %arrayidx.bn_add.Clone43, align 4
  %95 = load i32, i32* %carry.bn_add.Clone38, align 4
  %add.bn_add.Clone44 = add i32 %94, %95
  store i32 %add.bn_add.Clone44, i32* %ai.bn_add.Clone37, align 4
  %96 = load i32, i32* %carry.bn_add.Clone38, align 4
  %cmp1.bn_add.Clone45 = icmp ult i32 %add.bn_add.Clone44, %96
  br i1 %cmp1.bn_add.Clone45, label %if.then.bn_add.Clone46, label %if.else.bn_add.Clone48

if.then.bn_add.Clone46:                           ; preds = %for.body.bn_add.Clone42
  %97 = load i32*, i32** %c.addr.bn_add.Clone34, align 4
  %98 = load i32, i32* %i.bn_add.Clone39, align 4
  %arrayidx2.bn_add.Clone47 = getelementptr inbounds i32, i32* %97, i32 %98
  %99 = load i32, i32* %arrayidx2.bn_add.Clone47, align 4
  store i32 %99, i32* %ai.bn_add.Clone37, align 4
  br label %if.end9.bn_add.Clone56

if.else.bn_add.Clone48:                           ; preds = %for.body.bn_add.Clone42
  %100 = load i32*, i32** %c.addr.bn_add.Clone34, align 4
  %101 = load i32, i32* %i.bn_add.Clone39, align 4
  %arrayidx3.bn_add.Clone49 = getelementptr inbounds i32, i32* %100, i32 %101
  %102 = load i32, i32* %arrayidx3.bn_add.Clone49, align 4
  %103 = load i32, i32* %ai.bn_add.Clone37, align 4
  %add4.bn_add.Clone50 = add i32 %103, %102
  store i32 %add4.bn_add.Clone50, i32* %ai.bn_add.Clone37, align 4
  %104 = load i32*, i32** %c.addr.bn_add.Clone34, align 4
  %105 = load i32, i32* %i.bn_add.Clone39, align 4
  %arrayidx5.bn_add.Clone51 = getelementptr inbounds i32, i32* %104, i32 %105
  %106 = load i32, i32* %arrayidx5.bn_add.Clone51, align 4
  %cmp6.bn_add.Clone52 = icmp ult i32 %add4.bn_add.Clone50, %106
  br i1 %cmp6.bn_add.Clone52, label %if.then7.bn_add.Clone53, label %if.else8.bn_add.Clone54

if.then7.bn_add.Clone53:                          ; preds = %if.else.bn_add.Clone48
  store i32 1, i32* %carry.bn_add.Clone38, align 4
  br label %if.end.bn_add.Clone55

if.else8.bn_add.Clone54:                          ; preds = %if.else.bn_add.Clone48
  store i32 0, i32* %carry.bn_add.Clone38, align 4
  br label %if.end.bn_add.Clone55

if.end.bn_add.Clone55:                            ; preds = %if.else8.bn_add.Clone54, %if.then7.bn_add.Clone53
  br label %if.end9.bn_add.Clone56

if.end9.bn_add.Clone56:                           ; preds = %if.end.bn_add.Clone55, %if.then.bn_add.Clone46
  %107 = load i32, i32* %ai.bn_add.Clone37, align 4
  %108 = load i32*, i32** %a.addr.bn_add.Clone36, align 4
  %109 = load i32, i32* %i.bn_add.Clone39, align 4
  %arrayidx10.bn_add.Clone57 = getelementptr inbounds i32, i32* %108, i32 %109
  store i32 %107, i32* %arrayidx10.bn_add.Clone57, align 4
  br label %for.inc.bn_add.Clone58

for.inc.bn_add.Clone58:                           ; preds = %if.end9.bn_add.Clone56
  %110 = load i32, i32* %i.bn_add.Clone39, align 4
  %inc.bn_add.Clone59 = add i32 %110, 1
  store i32 %inc.bn_add.Clone59, i32* %i.bn_add.Clone39, align 4
  br label %for.cond.bn_add.Clone40

for.end.bn_add.Clone60:                           ; preds = %for.cond.bn_add.Clone40
  %111 = load i32, i32* %carry.bn_add.Clone38, align 4
  store i32 %111, i32* %RetValuePtr61
  br label %entry.Split.Split

entry.Split.Split:                                ; preds = %for.end.bn_add.Clone60
  %RetValue62 = load i32, i32* %RetValuePtr61
  %112 = load i32, i32* %digits.addr, align 4
  %113 = load i32*, i32** %lower.addr, align 4
  %114 = load i32*, i32** %a.addr, align 4
  br label %entry.bn_cmp.Clone155

entry.bn_cmp.Clone155:                            ; preds = %entry.Split.Split
  %retval.bn_cmp.Clone156 = alloca i32, align 4
  %digits.addr.bn_cmp.Clone157 = alloca i32, align 4
  %b.addr.bn_cmp.Clone158 = alloca i32*, align 4
  %a.addr.bn_cmp.Clone159 = alloca i32*, align 4
  %i.bn_cmp.Clone160 = alloca i32, align 4
  store i32 %112, i32* %digits.addr.bn_cmp.Clone157, align 4
  store i32* %113, i32** %b.addr.bn_cmp.Clone158, align 4
  store i32* %114, i32** %a.addr.bn_cmp.Clone159, align 4
  %115 = load i32, i32* %digits.addr.bn_cmp.Clone157, align 4
  %sub.bn_cmp.Clone161 = sub i32 %115, 1
  store i32 %sub.bn_cmp.Clone161, i32* %i.bn_cmp.Clone160, align 4
  br label %for.cond.bn_cmp.Clone162

for.cond.bn_cmp.Clone162:                         ; preds = %for.inc.bn_cmp.Clone175, %entry.bn_cmp.Clone155
  %116 = load i32, i32* %i.bn_cmp.Clone160, align 4
  %cmp.bn_cmp.Clone163 = icmp sge i32 %116, 0
  br i1 %cmp.bn_cmp.Clone163, label %for.body.bn_cmp.Clone164, label %for.end.bn_cmp.Clone177

for.body.bn_cmp.Clone164:                         ; preds = %for.cond.bn_cmp.Clone162
  %117 = load i32*, i32** %a.addr.bn_cmp.Clone159, align 4
  %118 = load i32, i32* %i.bn_cmp.Clone160, align 4
  %arrayidx.bn_cmp.Clone165 = getelementptr inbounds i32, i32* %117, i32 %118
  %119 = load i32, i32* %arrayidx.bn_cmp.Clone165, align 4
  %120 = load i32*, i32** %b.addr.bn_cmp.Clone158, align 4
  %121 = load i32, i32* %i.bn_cmp.Clone160, align 4
  %arrayidx1.bn_cmp.Clone166 = getelementptr inbounds i32, i32* %120, i32 %121
  %122 = load i32, i32* %arrayidx1.bn_cmp.Clone166, align 4
  %cmp2.bn_cmp.Clone167 = icmp ugt i32 %119, %122
  br i1 %cmp2.bn_cmp.Clone167, label %if.then.bn_cmp.Clone168, label %if.end.bn_cmp.Clone169

if.then.bn_cmp.Clone168:                          ; preds = %for.body.bn_cmp.Clone164
  store i32 1, i32* %retval.bn_cmp.Clone156, align 4
  br label %return.bn_cmp.Clone178

if.end.bn_cmp.Clone169:                           ; preds = %for.body.bn_cmp.Clone164
  %123 = load i32*, i32** %a.addr.bn_cmp.Clone159, align 4
  %124 = load i32, i32* %i.bn_cmp.Clone160, align 4
  %arrayidx3.bn_cmp.Clone170 = getelementptr inbounds i32, i32* %123, i32 %124
  %125 = load i32, i32* %arrayidx3.bn_cmp.Clone170, align 4
  %126 = load i32*, i32** %b.addr.bn_cmp.Clone158, align 4
  %127 = load i32, i32* %i.bn_cmp.Clone160, align 4
  %arrayidx4.bn_cmp.Clone171 = getelementptr inbounds i32, i32* %126, i32 %127
  %128 = load i32, i32* %arrayidx4.bn_cmp.Clone171, align 4
  %cmp5.bn_cmp.Clone172 = icmp ult i32 %125, %128
  br i1 %cmp5.bn_cmp.Clone172, label %if.then6.bn_cmp.Clone173, label %if.end7.bn_cmp.Clone174

if.then6.bn_cmp.Clone173:                         ; preds = %if.end.bn_cmp.Clone169
  store i32 -1, i32* %retval.bn_cmp.Clone156, align 4
  br label %return.bn_cmp.Clone178

if.end7.bn_cmp.Clone174:                          ; preds = %if.end.bn_cmp.Clone169
  br label %for.inc.bn_cmp.Clone175

for.inc.bn_cmp.Clone175:                          ; preds = %if.end7.bn_cmp.Clone174
  %129 = load i32, i32* %i.bn_cmp.Clone160, align 4
  %dec.bn_cmp.Clone176 = add nsw i32 %129, -1
  store i32 %dec.bn_cmp.Clone176, i32* %i.bn_cmp.Clone160, align 4
  br label %for.cond.bn_cmp.Clone162

for.end.bn_cmp.Clone177:                          ; preds = %for.cond.bn_cmp.Clone162
  store i32 0, i32* %retval.bn_cmp.Clone156, align 4
  br label %return.bn_cmp.Clone178

return.bn_cmp.Clone178:                           ; preds = %for.end.bn_cmp.Clone177, %if.then6.bn_cmp.Clone173, %if.then.bn_cmp.Clone168
  %130 = load i32, i32* %retval.bn_cmp.Clone156, align 4
  store i32 %130, i32* %RetValuePtr179
  br label %entry.Split.Split.Split

entry.Split.Split.Split:                          ; preds = %return.bn_cmp.Clone178
  %RetValue180 = load i32, i32* %RetValuePtr179
  %cmp = icmp slt i32 %RetValue180, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry.Split.Split.Split
  %131 = load i32, i32* %digits.addr, align 4
  %132 = load i32*, i32** %d.addr, align 4
  %133 = load i32*, i32** %a.addr, align 4
  %134 = load i32*, i32** %a.addr, align 4
  br label %entry.bn_add.Clone1

entry.bn_add.Clone1:                              ; preds = %if.then
  %digits.addr.bn_add.Clone2 = alloca i32, align 4
  %c.addr.bn_add.Clone3 = alloca i32*, align 4
  %b.addr.bn_add.Clone4 = alloca i32*, align 4
  %a.addr.bn_add.Clone5 = alloca i32*, align 4
  %ai.bn_add.Clone6 = alloca i32, align 4
  %carry.bn_add.Clone7 = alloca i32, align 4
  %i.bn_add.Clone8 = alloca i32, align 4
  store i32 %131, i32* %digits.addr.bn_add.Clone2, align 4
  store i32* %132, i32** %c.addr.bn_add.Clone3, align 4
  store i32* %133, i32** %b.addr.bn_add.Clone4, align 4
  store i32* %134, i32** %a.addr.bn_add.Clone5, align 4
  store i32 0, i32* %carry.bn_add.Clone7, align 4
  store i32 0, i32* %i.bn_add.Clone8, align 4
  br label %for.cond.bn_add.Clone9

for.cond.bn_add.Clone9:                           ; preds = %for.inc.bn_add.Clone27, %entry.bn_add.Clone1
  %135 = load i32, i32* %i.bn_add.Clone8, align 4
  %136 = load i32, i32* %digits.addr.bn_add.Clone2, align 4
  %cmp.bn_add.Clone10 = icmp ult i32 %135, %136
  br i1 %cmp.bn_add.Clone10, label %for.body.bn_add.Clone11, label %for.end.bn_add.Clone29

for.body.bn_add.Clone11:                          ; preds = %for.cond.bn_add.Clone9
  %137 = load i32*, i32** %b.addr.bn_add.Clone4, align 4
  %138 = load i32, i32* %i.bn_add.Clone8, align 4
  %arrayidx.bn_add.Clone12 = getelementptr inbounds i32, i32* %137, i32 %138
  %139 = load i32, i32* %arrayidx.bn_add.Clone12, align 4
  %140 = load i32, i32* %carry.bn_add.Clone7, align 4
  %add.bn_add.Clone13 = add i32 %139, %140
  store i32 %add.bn_add.Clone13, i32* %ai.bn_add.Clone6, align 4
  %141 = load i32, i32* %carry.bn_add.Clone7, align 4
  %cmp1.bn_add.Clone14 = icmp ult i32 %add.bn_add.Clone13, %141
  br i1 %cmp1.bn_add.Clone14, label %if.then.bn_add.Clone15, label %if.else.bn_add.Clone17

if.then.bn_add.Clone15:                           ; preds = %for.body.bn_add.Clone11
  %142 = load i32*, i32** %c.addr.bn_add.Clone3, align 4
  %143 = load i32, i32* %i.bn_add.Clone8, align 4
  %arrayidx2.bn_add.Clone16 = getelementptr inbounds i32, i32* %142, i32 %143
  %144 = load i32, i32* %arrayidx2.bn_add.Clone16, align 4
  store i32 %144, i32* %ai.bn_add.Clone6, align 4
  br label %if.end9.bn_add.Clone25

if.else.bn_add.Clone17:                           ; preds = %for.body.bn_add.Clone11
  %145 = load i32*, i32** %c.addr.bn_add.Clone3, align 4
  %146 = load i32, i32* %i.bn_add.Clone8, align 4
  %arrayidx3.bn_add.Clone18 = getelementptr inbounds i32, i32* %145, i32 %146
  %147 = load i32, i32* %arrayidx3.bn_add.Clone18, align 4
  %148 = load i32, i32* %ai.bn_add.Clone6, align 4
  %add4.bn_add.Clone19 = add i32 %148, %147
  store i32 %add4.bn_add.Clone19, i32* %ai.bn_add.Clone6, align 4
  %149 = load i32*, i32** %c.addr.bn_add.Clone3, align 4
  %150 = load i32, i32* %i.bn_add.Clone8, align 4
  %arrayidx5.bn_add.Clone20 = getelementptr inbounds i32, i32* %149, i32 %150
  %151 = load i32, i32* %arrayidx5.bn_add.Clone20, align 4
  %cmp6.bn_add.Clone21 = icmp ult i32 %add4.bn_add.Clone19, %151
  br i1 %cmp6.bn_add.Clone21, label %if.then7.bn_add.Clone22, label %if.else8.bn_add.Clone23

if.then7.bn_add.Clone22:                          ; preds = %if.else.bn_add.Clone17
  store i32 1, i32* %carry.bn_add.Clone7, align 4
  br label %if.end.bn_add.Clone24

if.else8.bn_add.Clone23:                          ; preds = %if.else.bn_add.Clone17
  store i32 0, i32* %carry.bn_add.Clone7, align 4
  br label %if.end.bn_add.Clone24

if.end.bn_add.Clone24:                            ; preds = %if.else8.bn_add.Clone23, %if.then7.bn_add.Clone22
  br label %if.end9.bn_add.Clone25

if.end9.bn_add.Clone25:                           ; preds = %if.end.bn_add.Clone24, %if.then.bn_add.Clone15
  %152 = load i32, i32* %ai.bn_add.Clone6, align 4
  %153 = load i32*, i32** %a.addr.bn_add.Clone5, align 4
  %154 = load i32, i32* %i.bn_add.Clone8, align 4
  %arrayidx10.bn_add.Clone26 = getelementptr inbounds i32, i32* %153, i32 %154
  store i32 %152, i32* %arrayidx10.bn_add.Clone26, align 4
  br label %for.inc.bn_add.Clone27

for.inc.bn_add.Clone27:                           ; preds = %if.end9.bn_add.Clone25
  %155 = load i32, i32* %i.bn_add.Clone8, align 4
  %inc.bn_add.Clone28 = add i32 %155, 1
  store i32 %inc.bn_add.Clone28, i32* %i.bn_add.Clone8, align 4
  br label %for.cond.bn_add.Clone9

for.end.bn_add.Clone29:                           ; preds = %for.cond.bn_add.Clone9
  %156 = load i32, i32* %carry.bn_add.Clone7, align 4
  store i32 %156, i32* %RetValuePtr30
  br label %if.then.Split

if.then.Split:                                    ; preds = %for.end.bn_add.Clone29
  %RetValue31 = load i32, i32* %RetValuePtr30
  br label %if.end

if.end:                                           ; preds = %if.then.Split, %entry.Split.Split.Split
  %157 = load i32, i32* %digits.addr, align 4
  %158 = load i32*, i32** %upper.addr, align 4
  %159 = load i32*, i32** %a.addr, align 4
  br label %entry.bn_cmp.Clone129

entry.bn_cmp.Clone129:                            ; preds = %if.end
  %retval.bn_cmp.Clone130 = alloca i32, align 4
  %digits.addr.bn_cmp.Clone131 = alloca i32, align 4
  %b.addr.bn_cmp.Clone132 = alloca i32*, align 4
  %a.addr.bn_cmp.Clone133 = alloca i32*, align 4
  %i.bn_cmp.Clone134 = alloca i32, align 4
  store i32 %157, i32* %digits.addr.bn_cmp.Clone131, align 4
  store i32* %158, i32** %b.addr.bn_cmp.Clone132, align 4
  store i32* %159, i32** %a.addr.bn_cmp.Clone133, align 4
  %160 = load i32, i32* %digits.addr.bn_cmp.Clone131, align 4
  %sub.bn_cmp.Clone135 = sub i32 %160, 1
  store i32 %sub.bn_cmp.Clone135, i32* %i.bn_cmp.Clone134, align 4
  br label %for.cond.bn_cmp.Clone136

for.cond.bn_cmp.Clone136:                         ; preds = %for.inc.bn_cmp.Clone149, %entry.bn_cmp.Clone129
  %161 = load i32, i32* %i.bn_cmp.Clone134, align 4
  %cmp.bn_cmp.Clone137 = icmp sge i32 %161, 0
  br i1 %cmp.bn_cmp.Clone137, label %for.body.bn_cmp.Clone138, label %for.end.bn_cmp.Clone151

for.body.bn_cmp.Clone138:                         ; preds = %for.cond.bn_cmp.Clone136
  %162 = load i32*, i32** %a.addr.bn_cmp.Clone133, align 4
  %163 = load i32, i32* %i.bn_cmp.Clone134, align 4
  %arrayidx.bn_cmp.Clone139 = getelementptr inbounds i32, i32* %162, i32 %163
  %164 = load i32, i32* %arrayidx.bn_cmp.Clone139, align 4
  %165 = load i32*, i32** %b.addr.bn_cmp.Clone132, align 4
  %166 = load i32, i32* %i.bn_cmp.Clone134, align 4
  %arrayidx1.bn_cmp.Clone140 = getelementptr inbounds i32, i32* %165, i32 %166
  %167 = load i32, i32* %arrayidx1.bn_cmp.Clone140, align 4
  %cmp2.bn_cmp.Clone141 = icmp ugt i32 %164, %167
  br i1 %cmp2.bn_cmp.Clone141, label %if.then.bn_cmp.Clone142, label %if.end.bn_cmp.Clone143

if.then.bn_cmp.Clone142:                          ; preds = %for.body.bn_cmp.Clone138
  store i32 1, i32* %retval.bn_cmp.Clone130, align 4
  br label %return.bn_cmp.Clone152

if.end.bn_cmp.Clone143:                           ; preds = %for.body.bn_cmp.Clone138
  %168 = load i32*, i32** %a.addr.bn_cmp.Clone133, align 4
  %169 = load i32, i32* %i.bn_cmp.Clone134, align 4
  %arrayidx3.bn_cmp.Clone144 = getelementptr inbounds i32, i32* %168, i32 %169
  %170 = load i32, i32* %arrayidx3.bn_cmp.Clone144, align 4
  %171 = load i32*, i32** %b.addr.bn_cmp.Clone132, align 4
  %172 = load i32, i32* %i.bn_cmp.Clone134, align 4
  %arrayidx4.bn_cmp.Clone145 = getelementptr inbounds i32, i32* %171, i32 %172
  %173 = load i32, i32* %arrayidx4.bn_cmp.Clone145, align 4
  %cmp5.bn_cmp.Clone146 = icmp ult i32 %170, %173
  br i1 %cmp5.bn_cmp.Clone146, label %if.then6.bn_cmp.Clone147, label %if.end7.bn_cmp.Clone148

if.then6.bn_cmp.Clone147:                         ; preds = %if.end.bn_cmp.Clone143
  store i32 -1, i32* %retval.bn_cmp.Clone130, align 4
  br label %return.bn_cmp.Clone152

if.end7.bn_cmp.Clone148:                          ; preds = %if.end.bn_cmp.Clone143
  br label %for.inc.bn_cmp.Clone149

for.inc.bn_cmp.Clone149:                          ; preds = %if.end7.bn_cmp.Clone148
  %174 = load i32, i32* %i.bn_cmp.Clone134, align 4
  %dec.bn_cmp.Clone150 = add nsw i32 %174, -1
  store i32 %dec.bn_cmp.Clone150, i32* %i.bn_cmp.Clone134, align 4
  br label %for.cond.bn_cmp.Clone136

for.end.bn_cmp.Clone151:                          ; preds = %for.cond.bn_cmp.Clone136
  store i32 0, i32* %retval.bn_cmp.Clone130, align 4
  br label %return.bn_cmp.Clone152

return.bn_cmp.Clone152:                           ; preds = %for.end.bn_cmp.Clone151, %if.then6.bn_cmp.Clone147, %if.then.bn_cmp.Clone142
  %175 = load i32, i32* %retval.bn_cmp.Clone130, align 4
  store i32 %175, i32* %RetValuePtr153
  br label %if.end.Split

if.end.Split:                                     ; preds = %return.bn_cmp.Clone152
  %RetValue154 = load i32, i32* %RetValuePtr153
  %cmp19 = icmp sgt i32 %RetValue154, 0
  br i1 %cmp19, label %if.then20, label %if.end22

if.then20:                                        ; preds = %if.end.Split
  %176 = load i32, i32* %digits.addr, align 4
  %177 = load i32*, i32** %d.addr, align 4
  %178 = load i32*, i32** %a.addr, align 4
  %179 = load i32*, i32** %a.addr, align 4
  %call21 = call i32 @bn_sub(i32* %179, i32* %178, i32* %177, i32 %176)
  br label %if.end22

if.end22:                                         ; preds = %if.then20, %if.end.Split
  %180 = load i32, i32* %digits.addr, align 4
  %181 = load i32*, i32** %upper.addr, align 4
  %arraydecay23 = getelementptr inbounds [65 x i32], [65 x i32]* %t, i32 0, i32 0
  call void @bn_assign(i32* %arraydecay23, i32* %181, i32 %180)
  %182 = load i32, i32* %digits.addr, align 4
  %183 = load i32*, i32** %d.addr, align 4
  %arraydecay24 = getelementptr inbounds [65 x i32], [65 x i32]* %t, i32 0, i32 0
  %arraydecay25 = getelementptr inbounds [65 x i32], [65 x i32]* %t, i32 0, i32 0
  %call26 = call i32 @bn_sub(i32* %arraydecay25, i32* %arraydecay24, i32* %183, i32 %182)
  br label %while.cond

while.cond:                                       ; preds = %if.end32.Split, %if.end22
  %184 = load i32, i32* %digits.addr, align 4
  %185 = load i32*, i32** %a.addr, align 4
  %call27 = call i32 @probable_prime(i32* %185, i32 %184)
  %tobool = icmp ne i32 %call27, 0
  %lnot = xor i1 %tobool, true
  br i1 %lnot, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %186 = load i32, i32* %digits.addr, align 4
  %arraydecay28 = getelementptr inbounds [65 x i32], [65 x i32]* %t, i32 0, i32 0
  %187 = load i32*, i32** %a.addr, align 4
  br label %entry.bn_cmp.Clone

entry.bn_cmp.Clone:                               ; preds = %while.body
  %retval.bn_cmp.Clone = alloca i32, align 4
  %digits.addr.bn_cmp.Clone = alloca i32, align 4
  %b.addr.bn_cmp.Clone = alloca i32*, align 4
  %a.addr.bn_cmp.Clone = alloca i32*, align 4
  %i.bn_cmp.Clone = alloca i32, align 4
  store i32 %186, i32* %digits.addr.bn_cmp.Clone, align 4
  store i32* %arraydecay28, i32** %b.addr.bn_cmp.Clone, align 4
  store i32* %187, i32** %a.addr.bn_cmp.Clone, align 4
  %188 = load i32, i32* %digits.addr.bn_cmp.Clone, align 4
  %sub.bn_cmp.Clone = sub i32 %188, 1
  store i32 %sub.bn_cmp.Clone, i32* %i.bn_cmp.Clone, align 4
  br label %for.cond.bn_cmp.Clone

for.cond.bn_cmp.Clone:                            ; preds = %for.inc.bn_cmp.Clone, %entry.bn_cmp.Clone
  %189 = load i32, i32* %i.bn_cmp.Clone, align 4
  %cmp.bn_cmp.Clone = icmp sge i32 %189, 0
  br i1 %cmp.bn_cmp.Clone, label %for.body.bn_cmp.Clone, label %for.end.bn_cmp.Clone

for.body.bn_cmp.Clone:                            ; preds = %for.cond.bn_cmp.Clone
  %190 = load i32*, i32** %a.addr.bn_cmp.Clone, align 4
  %191 = load i32, i32* %i.bn_cmp.Clone, align 4
  %arrayidx.bn_cmp.Clone = getelementptr inbounds i32, i32* %190, i32 %191
  %192 = load i32, i32* %arrayidx.bn_cmp.Clone, align 4
  %193 = load i32*, i32** %b.addr.bn_cmp.Clone, align 4
  %194 = load i32, i32* %i.bn_cmp.Clone, align 4
  %arrayidx1.bn_cmp.Clone = getelementptr inbounds i32, i32* %193, i32 %194
  %195 = load i32, i32* %arrayidx1.bn_cmp.Clone, align 4
  %cmp2.bn_cmp.Clone = icmp ugt i32 %192, %195
  br i1 %cmp2.bn_cmp.Clone, label %if.then.bn_cmp.Clone, label %if.end.bn_cmp.Clone

if.then.bn_cmp.Clone:                             ; preds = %for.body.bn_cmp.Clone
  store i32 1, i32* %retval.bn_cmp.Clone, align 4
  br label %return.bn_cmp.Clone

if.end.bn_cmp.Clone:                              ; preds = %for.body.bn_cmp.Clone
  %196 = load i32*, i32** %a.addr.bn_cmp.Clone, align 4
  %197 = load i32, i32* %i.bn_cmp.Clone, align 4
  %arrayidx3.bn_cmp.Clone = getelementptr inbounds i32, i32* %196, i32 %197
  %198 = load i32, i32* %arrayidx3.bn_cmp.Clone, align 4
  %199 = load i32*, i32** %b.addr.bn_cmp.Clone, align 4
  %200 = load i32, i32* %i.bn_cmp.Clone, align 4
  %arrayidx4.bn_cmp.Clone = getelementptr inbounds i32, i32* %199, i32 %200
  %201 = load i32, i32* %arrayidx4.bn_cmp.Clone, align 4
  %cmp5.bn_cmp.Clone = icmp ult i32 %198, %201
  br i1 %cmp5.bn_cmp.Clone, label %if.then6.bn_cmp.Clone, label %if.end7.bn_cmp.Clone

if.then6.bn_cmp.Clone:                            ; preds = %if.end.bn_cmp.Clone
  store i32 -1, i32* %retval.bn_cmp.Clone, align 4
  br label %return.bn_cmp.Clone

if.end7.bn_cmp.Clone:                             ; preds = %if.end.bn_cmp.Clone
  br label %for.inc.bn_cmp.Clone

for.inc.bn_cmp.Clone:                             ; preds = %if.end7.bn_cmp.Clone
  %202 = load i32, i32* %i.bn_cmp.Clone, align 4
  %dec.bn_cmp.Clone = add nsw i32 %202, -1
  store i32 %dec.bn_cmp.Clone, i32* %i.bn_cmp.Clone, align 4
  br label %for.cond.bn_cmp.Clone

for.end.bn_cmp.Clone:                             ; preds = %for.cond.bn_cmp.Clone
  store i32 0, i32* %retval.bn_cmp.Clone, align 4
  br label %return.bn_cmp.Clone

return.bn_cmp.Clone:                              ; preds = %for.end.bn_cmp.Clone, %if.then6.bn_cmp.Clone, %if.then.bn_cmp.Clone
  %203 = load i32, i32* %retval.bn_cmp.Clone, align 4
  store i32 %203, i32* %RetValuePtr127
  br label %while.body.Split

while.body.Split:                                 ; preds = %return.bn_cmp.Clone
  %RetValue128 = load i32, i32* %RetValuePtr127
  %cmp30 = icmp sgt i32 %RetValue128, 0
  br i1 %cmp30, label %if.then31, label %if.end32

if.then31:                                        ; preds = %while.body.Split
  store i32 4097, i32* %retval, align 4
  br label %return

if.end32:                                         ; preds = %while.body.Split
  %204 = load i32, i32* %digits.addr, align 4
  %205 = load i32*, i32** %d.addr, align 4
  %206 = load i32*, i32** %a.addr, align 4
  %207 = load i32*, i32** %a.addr, align 4
  br label %entry.bn_add.Clone

entry.bn_add.Clone:                               ; preds = %if.end32
  %digits.addr.bn_add.Clone = alloca i32, align 4
  %c.addr.bn_add.Clone = alloca i32*, align 4
  %b.addr.bn_add.Clone = alloca i32*, align 4
  %a.addr.bn_add.Clone = alloca i32*, align 4
  %ai.bn_add.Clone = alloca i32, align 4
  %carry.bn_add.Clone = alloca i32, align 4
  %i.bn_add.Clone = alloca i32, align 4
  store i32 %204, i32* %digits.addr.bn_add.Clone, align 4
  store i32* %205, i32** %c.addr.bn_add.Clone, align 4
  store i32* %206, i32** %b.addr.bn_add.Clone, align 4
  store i32* %207, i32** %a.addr.bn_add.Clone, align 4
  store i32 0, i32* %carry.bn_add.Clone, align 4
  store i32 0, i32* %i.bn_add.Clone, align 4
  br label %for.cond.bn_add.Clone

for.cond.bn_add.Clone:                            ; preds = %for.inc.bn_add.Clone, %entry.bn_add.Clone
  %208 = load i32, i32* %i.bn_add.Clone, align 4
  %209 = load i32, i32* %digits.addr.bn_add.Clone, align 4
  %cmp.bn_add.Clone = icmp ult i32 %208, %209
  br i1 %cmp.bn_add.Clone, label %for.body.bn_add.Clone, label %for.end.bn_add.Clone

for.body.bn_add.Clone:                            ; preds = %for.cond.bn_add.Clone
  %210 = load i32*, i32** %b.addr.bn_add.Clone, align 4
  %211 = load i32, i32* %i.bn_add.Clone, align 4
  %arrayidx.bn_add.Clone = getelementptr inbounds i32, i32* %210, i32 %211
  %212 = load i32, i32* %arrayidx.bn_add.Clone, align 4
  %213 = load i32, i32* %carry.bn_add.Clone, align 4
  %add.bn_add.Clone = add i32 %212, %213
  store i32 %add.bn_add.Clone, i32* %ai.bn_add.Clone, align 4
  %214 = load i32, i32* %carry.bn_add.Clone, align 4
  %cmp1.bn_add.Clone = icmp ult i32 %add.bn_add.Clone, %214
  br i1 %cmp1.bn_add.Clone, label %if.then.bn_add.Clone, label %if.else.bn_add.Clone

if.then.bn_add.Clone:                             ; preds = %for.body.bn_add.Clone
  %215 = load i32*, i32** %c.addr.bn_add.Clone, align 4
  %216 = load i32, i32* %i.bn_add.Clone, align 4
  %arrayidx2.bn_add.Clone = getelementptr inbounds i32, i32* %215, i32 %216
  %217 = load i32, i32* %arrayidx2.bn_add.Clone, align 4
  store i32 %217, i32* %ai.bn_add.Clone, align 4
  br label %if.end9.bn_add.Clone

if.else.bn_add.Clone:                             ; preds = %for.body.bn_add.Clone
  %218 = load i32*, i32** %c.addr.bn_add.Clone, align 4
  %219 = load i32, i32* %i.bn_add.Clone, align 4
  %arrayidx3.bn_add.Clone = getelementptr inbounds i32, i32* %218, i32 %219
  %220 = load i32, i32* %arrayidx3.bn_add.Clone, align 4
  %221 = load i32, i32* %ai.bn_add.Clone, align 4
  %add4.bn_add.Clone = add i32 %221, %220
  store i32 %add4.bn_add.Clone, i32* %ai.bn_add.Clone, align 4
  %222 = load i32*, i32** %c.addr.bn_add.Clone, align 4
  %223 = load i32, i32* %i.bn_add.Clone, align 4
  %arrayidx5.bn_add.Clone = getelementptr inbounds i32, i32* %222, i32 %223
  %224 = load i32, i32* %arrayidx5.bn_add.Clone, align 4
  %cmp6.bn_add.Clone = icmp ult i32 %add4.bn_add.Clone, %224
  br i1 %cmp6.bn_add.Clone, label %if.then7.bn_add.Clone, label %if.else8.bn_add.Clone

if.then7.bn_add.Clone:                            ; preds = %if.else.bn_add.Clone
  store i32 1, i32* %carry.bn_add.Clone, align 4
  br label %if.end.bn_add.Clone

if.else8.bn_add.Clone:                            ; preds = %if.else.bn_add.Clone
  store i32 0, i32* %carry.bn_add.Clone, align 4
  br label %if.end.bn_add.Clone

if.end.bn_add.Clone:                              ; preds = %if.else8.bn_add.Clone, %if.then7.bn_add.Clone
  br label %if.end9.bn_add.Clone

if.end9.bn_add.Clone:                             ; preds = %if.end.bn_add.Clone, %if.then.bn_add.Clone
  %225 = load i32, i32* %ai.bn_add.Clone, align 4
  %226 = load i32*, i32** %a.addr.bn_add.Clone, align 4
  %227 = load i32, i32* %i.bn_add.Clone, align 4
  %arrayidx10.bn_add.Clone = getelementptr inbounds i32, i32* %226, i32 %227
  store i32 %225, i32* %arrayidx10.bn_add.Clone, align 4
  br label %for.inc.bn_add.Clone

for.inc.bn_add.Clone:                             ; preds = %if.end9.bn_add.Clone
  %228 = load i32, i32* %i.bn_add.Clone, align 4
  %inc.bn_add.Clone = add i32 %228, 1
  store i32 %inc.bn_add.Clone, i32* %i.bn_add.Clone, align 4
  br label %for.cond.bn_add.Clone

for.end.bn_add.Clone:                             ; preds = %for.cond.bn_add.Clone
  %229 = load i32, i32* %carry.bn_add.Clone, align 4
  store i32 %229, i32* %RetValuePtr
  br label %if.end32.Split

if.end32.Split:                                   ; preds = %for.end.bn_add.Clone
  %RetValue = load i32, i32* %RetValuePtr
  br label %while.cond

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %while.end, %if.then31
  %230 = load i32, i32* %retval, align 4
  ret i32 %230
}

; Function Attrs: noinline optnone
define internal i32 @probable_prime(i32* %a, i32 %digits) #2 {
entry:
  %digits.addr = alloca i32, align 4
  %a.addr = alloca i32*, align 4
  store i32 %digits, i32* %digits.addr, align 4
  store i32* %a, i32** %a.addr, align 4
  %0 = load i32, i32* %digits.addr, align 4
  %1 = load i32*, i32** %a.addr, align 4
  %call = call i32 @small_factor(i32* %1, i32 %0)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %entry
  %2 = load i32, i32* %digits.addr, align 4
  %3 = load i32*, i32** %a.addr, align 4
  %call1 = call i32 @fermat_test(i32* %3, i32 %2)
  %tobool2 = icmp ne i32 %call1, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %tobool2, %land.rhs ]
  %land.ext = zext i1 %4 to i32
  ret i32 %land.ext
}

; Function Attrs: noinline optnone
define internal i32 @small_factor(i32* %a, i32 %digits) #2 {
entry:
  %digits.addr = alloca i32, align 4
  %a.addr = alloca i32*, align 4
  %status = alloca i32, align 4
  %t = alloca [1 x i32], align 4
  %i = alloca i32, align 4
  store i32 %digits, i32* %digits.addr, align 4
  store i32* %a, i32** %a.addr, align 4
  store i32 0, i32* %status, align 4
  store i32 0, i32* %i, align 4
  %RetValuePtr = alloca i32, align 4
  %RetValuePtr1 = alloca i32, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %cmp = icmp ult i32 %0, 4
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %arraydecay = getelementptr inbounds [1 x i32], [1 x i32]* %t, i32 0, i32 0
  br label %entry.bn_assign_zero.Clone

entry.bn_assign_zero.Clone:                       ; preds = %for.body
  %digits.addr.bn_assign_zero.Clone = alloca i32, align 4
  %a.addr.bn_assign_zero.Clone = alloca i32*, align 4
  %i.bn_assign_zero.Clone = alloca i32, align 4
  store i32 1, i32* %digits.addr.bn_assign_zero.Clone, align 4
  store i32* %arraydecay, i32** %a.addr.bn_assign_zero.Clone, align 4
  store i32 0, i32* %i.bn_assign_zero.Clone, align 4
  br label %for.cond.bn_assign_zero.Clone

for.cond.bn_assign_zero.Clone:                    ; preds = %for.inc.bn_assign_zero.Clone, %entry.bn_assign_zero.Clone
  %1 = load i32, i32* %i.bn_assign_zero.Clone, align 4
  %2 = load i32, i32* %digits.addr.bn_assign_zero.Clone, align 4
  %cmp.bn_assign_zero.Clone = icmp ult i32 %1, %2
  br i1 %cmp.bn_assign_zero.Clone, label %for.body.bn_assign_zero.Clone, label %for.end.bn_assign_zero.Clone

for.body.bn_assign_zero.Clone:                    ; preds = %for.cond.bn_assign_zero.Clone
  %3 = load i32*, i32** %a.addr.bn_assign_zero.Clone, align 4
  %4 = load i32, i32* %i.bn_assign_zero.Clone, align 4
  %arrayidx.bn_assign_zero.Clone = getelementptr inbounds i32, i32* %3, i32 %4
  store i32 0, i32* %arrayidx.bn_assign_zero.Clone, align 4
  br label %for.inc.bn_assign_zero.Clone

for.inc.bn_assign_zero.Clone:                     ; preds = %for.body.bn_assign_zero.Clone
  %5 = load i32, i32* %i.bn_assign_zero.Clone, align 4
  %inc.bn_assign_zero.Clone = add i32 %5, 1
  store i32 %inc.bn_assign_zero.Clone, i32* %i.bn_assign_zero.Clone, align 4
  br label %for.cond.bn_assign_zero.Clone

for.end.bn_assign_zero.Clone:                     ; preds = %for.cond.bn_assign_zero.Clone
  br label %for.body.Split

for.body.Split:                                   ; preds = %for.end.bn_assign_zero.Clone
  %6 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [4 x i8], [4 x i8]* @SMALL_PRIMES, i32 0, i32 %6
  %7 = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %7 to i32
  %arrayidx1 = getelementptr inbounds [1 x i32], [1 x i32]* %t, i32 0, i32 0
  store i32 %conv, i32* %arrayidx1, align 4
  %8 = load i32, i32* %digits.addr, align 4
  %cmp2 = icmp eq i32 %8, 1
  br i1 %cmp2, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %for.body.Split
  %arraydecay4 = getelementptr inbounds [1 x i32], [1 x i32]* %t, i32 0, i32 0
  %9 = load i32*, i32** %a.addr, align 4
  br label %entry.bn_cmp.Clone

entry.bn_cmp.Clone:                               ; preds = %land.lhs.true
  %retval.bn_cmp.Clone = alloca i32, align 4
  %digits.addr.bn_cmp.Clone = alloca i32, align 4
  %b.addr.bn_cmp.Clone = alloca i32*, align 4
  %a.addr.bn_cmp.Clone = alloca i32*, align 4
  %i.bn_cmp.Clone = alloca i32, align 4
  store i32 1, i32* %digits.addr.bn_cmp.Clone, align 4
  store i32* %arraydecay4, i32** %b.addr.bn_cmp.Clone, align 4
  store i32* %9, i32** %a.addr.bn_cmp.Clone, align 4
  %10 = load i32, i32* %digits.addr.bn_cmp.Clone, align 4
  %sub.bn_cmp.Clone = sub i32 %10, 1
  store i32 %sub.bn_cmp.Clone, i32* %i.bn_cmp.Clone, align 4
  br label %for.cond.bn_cmp.Clone

for.cond.bn_cmp.Clone:                            ; preds = %for.inc.bn_cmp.Clone, %entry.bn_cmp.Clone
  %11 = load i32, i32* %i.bn_cmp.Clone, align 4
  %cmp.bn_cmp.Clone = icmp sge i32 %11, 0
  br i1 %cmp.bn_cmp.Clone, label %for.body.bn_cmp.Clone, label %for.end.bn_cmp.Clone

for.body.bn_cmp.Clone:                            ; preds = %for.cond.bn_cmp.Clone
  %12 = load i32*, i32** %a.addr.bn_cmp.Clone, align 4
  %13 = load i32, i32* %i.bn_cmp.Clone, align 4
  %arrayidx.bn_cmp.Clone = getelementptr inbounds i32, i32* %12, i32 %13
  %14 = load i32, i32* %arrayidx.bn_cmp.Clone, align 4
  %15 = load i32*, i32** %b.addr.bn_cmp.Clone, align 4
  %16 = load i32, i32* %i.bn_cmp.Clone, align 4
  %arrayidx1.bn_cmp.Clone = getelementptr inbounds i32, i32* %15, i32 %16
  %17 = load i32, i32* %arrayidx1.bn_cmp.Clone, align 4
  %cmp2.bn_cmp.Clone = icmp ugt i32 %14, %17
  br i1 %cmp2.bn_cmp.Clone, label %if.then.bn_cmp.Clone, label %if.end.bn_cmp.Clone

if.then.bn_cmp.Clone:                             ; preds = %for.body.bn_cmp.Clone
  store i32 1, i32* %retval.bn_cmp.Clone, align 4
  br label %return.bn_cmp.Clone

if.end.bn_cmp.Clone:                              ; preds = %for.body.bn_cmp.Clone
  %18 = load i32*, i32** %a.addr.bn_cmp.Clone, align 4
  %19 = load i32, i32* %i.bn_cmp.Clone, align 4
  %arrayidx3.bn_cmp.Clone = getelementptr inbounds i32, i32* %18, i32 %19
  %20 = load i32, i32* %arrayidx3.bn_cmp.Clone, align 4
  %21 = load i32*, i32** %b.addr.bn_cmp.Clone, align 4
  %22 = load i32, i32* %i.bn_cmp.Clone, align 4
  %arrayidx4.bn_cmp.Clone = getelementptr inbounds i32, i32* %21, i32 %22
  %23 = load i32, i32* %arrayidx4.bn_cmp.Clone, align 4
  %cmp5.bn_cmp.Clone = icmp ult i32 %20, %23
  br i1 %cmp5.bn_cmp.Clone, label %if.then6.bn_cmp.Clone, label %if.end7.bn_cmp.Clone

if.then6.bn_cmp.Clone:                            ; preds = %if.end.bn_cmp.Clone
  store i32 -1, i32* %retval.bn_cmp.Clone, align 4
  br label %return.bn_cmp.Clone

if.end7.bn_cmp.Clone:                             ; preds = %if.end.bn_cmp.Clone
  br label %for.inc.bn_cmp.Clone

for.inc.bn_cmp.Clone:                             ; preds = %if.end7.bn_cmp.Clone
  %24 = load i32, i32* %i.bn_cmp.Clone, align 4
  %dec.bn_cmp.Clone = add nsw i32 %24, -1
  store i32 %dec.bn_cmp.Clone, i32* %i.bn_cmp.Clone, align 4
  br label %for.cond.bn_cmp.Clone

for.end.bn_cmp.Clone:                             ; preds = %for.cond.bn_cmp.Clone
  store i32 0, i32* %retval.bn_cmp.Clone, align 4
  br label %return.bn_cmp.Clone

return.bn_cmp.Clone:                              ; preds = %for.end.bn_cmp.Clone, %if.then6.bn_cmp.Clone, %if.then.bn_cmp.Clone
  %25 = load i32, i32* %retval.bn_cmp.Clone, align 4
  store i32 %25, i32* %RetValuePtr
  br label %land.lhs.true.Split

land.lhs.true.Split:                              ; preds = %return.bn_cmp.Clone
  %RetValue = load i32, i32* %RetValuePtr
  %tobool = icmp ne i32 %RetValue, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true.Split
  br label %for.end

if.end:                                           ; preds = %land.lhs.true.Split, %for.body.Split
  %arraydecay5 = getelementptr inbounds [1 x i32], [1 x i32]* %t, i32 0, i32 0
  %26 = load i32, i32* %digits.addr, align 4
  %27 = load i32*, i32** %a.addr, align 4
  %arraydecay6 = getelementptr inbounds [1 x i32], [1 x i32]* %t, i32 0, i32 0
  br label %entry.bn_mod.Clone

entry.bn_mod.Clone:                               ; preds = %if.end
  %cdigits.addr.bn_mod.Clone = alloca i32, align 4
  %c.addr.bn_mod.Clone = alloca i32*, align 4
  %bdigits.addr.bn_mod.Clone = alloca i32, align 4
  %b.addr.bn_mod.Clone = alloca i32*, align 4
  %a.addr.bn_mod.Clone = alloca i32*, align 4
  %t.bn_mod.Clone = alloca [130 x i32], align 4
  store i32 1, i32* %cdigits.addr.bn_mod.Clone, align 4
  store i32* %arraydecay5, i32** %c.addr.bn_mod.Clone, align 4
  store i32 %26, i32* %bdigits.addr.bn_mod.Clone, align 4
  store i32* %27, i32** %b.addr.bn_mod.Clone, align 4
  store i32* %arraydecay6, i32** %a.addr.bn_mod.Clone, align 4
  %28 = bitcast [130 x i32]* %t.bn_mod.Clone to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %28, i8 0, i32 520, i1 false)
  %29 = load i32, i32* %cdigits.addr.bn_mod.Clone, align 4
  %30 = load i32*, i32** %c.addr.bn_mod.Clone, align 4
  %31 = load i32, i32* %bdigits.addr.bn_mod.Clone, align 4
  %32 = load i32*, i32** %b.addr.bn_mod.Clone, align 4
  %33 = load i32*, i32** %a.addr.bn_mod.Clone, align 4
  %arraydecay.bn_mod.Clone = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mod.Clone, i32 0, i32 0
  call void @bn_div(i32* %arraydecay.bn_mod.Clone, i32* %33, i32* %32, i32 %31, i32* %30, i32 %29)
  %arraydecay1.bn_mod.Clone = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mod.Clone, i32 0, i32 0
  %34 = bitcast i32* %arraydecay1.bn_mod.Clone to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %34, i8 0, i32 520, i1 false)
  br label %if.end.Split

if.end.Split:                                     ; preds = %entry.bn_mod.Clone
  %arraydecay7 = getelementptr inbounds [1 x i32], [1 x i32]* %t, i32 0, i32 0
  br label %entry.bn_is_zero.Clone

entry.bn_is_zero.Clone:                           ; preds = %if.end.Split
  %retval.bn_is_zero.Clone = alloca i32, align 4
  %digits.addr.bn_is_zero.Clone = alloca i32, align 4
  %a.addr.bn_is_zero.Clone = alloca i32*, align 4
  %i.bn_is_zero.Clone = alloca i32, align 4
  store i32 1, i32* %digits.addr.bn_is_zero.Clone, align 4
  store i32* %arraydecay7, i32** %a.addr.bn_is_zero.Clone, align 4
  store i32 0, i32* %i.bn_is_zero.Clone, align 4
  br label %for.cond.bn_is_zero.Clone

for.cond.bn_is_zero.Clone:                        ; preds = %for.inc.bn_is_zero.Clone, %entry.bn_is_zero.Clone
  %35 = load i32, i32* %i.bn_is_zero.Clone, align 4
  %36 = load i32, i32* %digits.addr.bn_is_zero.Clone, align 4
  %cmp.bn_is_zero.Clone = icmp ult i32 %35, %36
  br i1 %cmp.bn_is_zero.Clone, label %for.body.bn_is_zero.Clone, label %for.end.bn_is_zero.Clone

for.body.bn_is_zero.Clone:                        ; preds = %for.cond.bn_is_zero.Clone
  %37 = load i32*, i32** %a.addr.bn_is_zero.Clone, align 4
  %38 = load i32, i32* %i.bn_is_zero.Clone, align 4
  %arrayidx.bn_is_zero.Clone = getelementptr inbounds i32, i32* %37, i32 %38
  %39 = load i32, i32* %arrayidx.bn_is_zero.Clone, align 4
  %tobool.bn_is_zero.Clone = icmp ne i32 %39, 0
  br i1 %tobool.bn_is_zero.Clone, label %if.then.bn_is_zero.Clone, label %if.end.bn_is_zero.Clone

if.then.bn_is_zero.Clone:                         ; preds = %for.body.bn_is_zero.Clone
  store i32 0, i32* %retval.bn_is_zero.Clone, align 4
  br label %return.bn_is_zero.Clone

if.end.bn_is_zero.Clone:                          ; preds = %for.body.bn_is_zero.Clone
  br label %for.inc.bn_is_zero.Clone

for.inc.bn_is_zero.Clone:                         ; preds = %if.end.bn_is_zero.Clone
  %40 = load i32, i32* %i.bn_is_zero.Clone, align 4
  %inc.bn_is_zero.Clone = add i32 %40, 1
  store i32 %inc.bn_is_zero.Clone, i32* %i.bn_is_zero.Clone, align 4
  br label %for.cond.bn_is_zero.Clone

for.end.bn_is_zero.Clone:                         ; preds = %for.cond.bn_is_zero.Clone
  store i32 1, i32* %retval.bn_is_zero.Clone, align 4
  br label %return.bn_is_zero.Clone

return.bn_is_zero.Clone:                          ; preds = %for.end.bn_is_zero.Clone, %if.then.bn_is_zero.Clone
  %41 = load i32, i32* %retval.bn_is_zero.Clone, align 4
  store i32 %41, i32* %RetValuePtr1
  br label %if.end.Split.Split

if.end.Split.Split:                               ; preds = %return.bn_is_zero.Clone
  %RetValue2 = load i32, i32* %RetValuePtr1
  %tobool9 = icmp ne i32 %RetValue2, 0
  br i1 %tobool9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.end.Split.Split
  store i32 1, i32* %status, align 4
  br label %for.end

if.end11:                                         ; preds = %if.end.Split.Split
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %42 = load i32, i32* %i, align 4
  %inc = add i32 %42, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %if.then10, %if.then, %for.cond
  store i32 0, i32* %i, align 4
  %arraydecay12 = getelementptr inbounds [1 x i32], [1 x i32]* %t, i32 0, i32 0
  %43 = bitcast i32* %arraydecay12 to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %43, i8 0, i32 4, i1 false)
  %44 = load i32, i32* %status, align 4
  ret i32 %44
}

; Function Attrs: noinline optnone
define internal i32 @fermat_test(i32* %a, i32 %digits) #2 {
entry:
  %digits.addr = alloca i32, align 4
  %a.addr = alloca i32*, align 4
  %status = alloca i32, align 4
  %t = alloca [65 x i32], align 4
  %u = alloca [65 x i32], align 4
  store i32 %digits, i32* %digits.addr, align 4
  store i32* %a, i32** %a.addr, align 4
  %0 = load i32, i32* %digits.addr, align 4
  %arraydecay = getelementptr inbounds [65 x i32], [65 x i32]* %t, i32 0, i32 0
  %RetValuePtr = alloca i32, align 4
  br label %entry.bn_assign_zero.Clone

entry.bn_assign_zero.Clone:                       ; preds = %entry
  %digits.addr.bn_assign_zero.Clone = alloca i32, align 4
  %a.addr.bn_assign_zero.Clone = alloca i32*, align 4
  %i.bn_assign_zero.Clone = alloca i32, align 4
  store i32 %0, i32* %digits.addr.bn_assign_zero.Clone, align 4
  store i32* %arraydecay, i32** %a.addr.bn_assign_zero.Clone, align 4
  store i32 0, i32* %i.bn_assign_zero.Clone, align 4
  br label %for.cond.bn_assign_zero.Clone

for.cond.bn_assign_zero.Clone:                    ; preds = %for.inc.bn_assign_zero.Clone, %entry.bn_assign_zero.Clone
  %1 = load i32, i32* %i.bn_assign_zero.Clone, align 4
  %2 = load i32, i32* %digits.addr.bn_assign_zero.Clone, align 4
  %cmp.bn_assign_zero.Clone = icmp ult i32 %1, %2
  br i1 %cmp.bn_assign_zero.Clone, label %for.body.bn_assign_zero.Clone, label %for.end.bn_assign_zero.Clone

for.body.bn_assign_zero.Clone:                    ; preds = %for.cond.bn_assign_zero.Clone
  %3 = load i32*, i32** %a.addr.bn_assign_zero.Clone, align 4
  %4 = load i32, i32* %i.bn_assign_zero.Clone, align 4
  %arrayidx.bn_assign_zero.Clone = getelementptr inbounds i32, i32* %3, i32 %4
  store i32 0, i32* %arrayidx.bn_assign_zero.Clone, align 4
  br label %for.inc.bn_assign_zero.Clone

for.inc.bn_assign_zero.Clone:                     ; preds = %for.body.bn_assign_zero.Clone
  %5 = load i32, i32* %i.bn_assign_zero.Clone, align 4
  %inc.bn_assign_zero.Clone = add i32 %5, 1
  store i32 %inc.bn_assign_zero.Clone, i32* %i.bn_assign_zero.Clone, align 4
  br label %for.cond.bn_assign_zero.Clone

for.end.bn_assign_zero.Clone:                     ; preds = %for.cond.bn_assign_zero.Clone
  br label %entry.Split

entry.Split:                                      ; preds = %for.end.bn_assign_zero.Clone
  %arrayidx = getelementptr inbounds [65 x i32], [65 x i32]* %t, i32 0, i32 0
  store i32 2, i32* %arrayidx, align 4
  %6 = load i32, i32* %digits.addr, align 4
  %7 = load i32*, i32** %a.addr, align 4
  %8 = load i32, i32* %digits.addr, align 4
  %9 = load i32*, i32** %a.addr, align 4
  %arraydecay1 = getelementptr inbounds [65 x i32], [65 x i32]* %t, i32 0, i32 0
  %arraydecay2 = getelementptr inbounds [65 x i32], [65 x i32]* %u, i32 0, i32 0
  call void @bn_mod_exp(i32* %arraydecay2, i32* %arraydecay1, i32* %9, i32 %8, i32* %7, i32 %6)
  %10 = load i32, i32* %digits.addr, align 4
  %arraydecay3 = getelementptr inbounds [65 x i32], [65 x i32]* %u, i32 0, i32 0
  %arraydecay4 = getelementptr inbounds [65 x i32], [65 x i32]* %t, i32 0, i32 0
  br label %entry.bn_cmp.Clone

entry.bn_cmp.Clone:                               ; preds = %entry.Split
  %retval.bn_cmp.Clone = alloca i32, align 4
  %digits.addr.bn_cmp.Clone = alloca i32, align 4
  %b.addr.bn_cmp.Clone = alloca i32*, align 4
  %a.addr.bn_cmp.Clone = alloca i32*, align 4
  %i.bn_cmp.Clone = alloca i32, align 4
  store i32 %10, i32* %digits.addr.bn_cmp.Clone, align 4
  store i32* %arraydecay3, i32** %b.addr.bn_cmp.Clone, align 4
  store i32* %arraydecay4, i32** %a.addr.bn_cmp.Clone, align 4
  %11 = load i32, i32* %digits.addr.bn_cmp.Clone, align 4
  %sub.bn_cmp.Clone = sub i32 %11, 1
  store i32 %sub.bn_cmp.Clone, i32* %i.bn_cmp.Clone, align 4
  br label %for.cond.bn_cmp.Clone

for.cond.bn_cmp.Clone:                            ; preds = %for.inc.bn_cmp.Clone, %entry.bn_cmp.Clone
  %12 = load i32, i32* %i.bn_cmp.Clone, align 4
  %cmp.bn_cmp.Clone = icmp sge i32 %12, 0
  br i1 %cmp.bn_cmp.Clone, label %for.body.bn_cmp.Clone, label %for.end.bn_cmp.Clone

for.body.bn_cmp.Clone:                            ; preds = %for.cond.bn_cmp.Clone
  %13 = load i32*, i32** %a.addr.bn_cmp.Clone, align 4
  %14 = load i32, i32* %i.bn_cmp.Clone, align 4
  %arrayidx.bn_cmp.Clone = getelementptr inbounds i32, i32* %13, i32 %14
  %15 = load i32, i32* %arrayidx.bn_cmp.Clone, align 4
  %16 = load i32*, i32** %b.addr.bn_cmp.Clone, align 4
  %17 = load i32, i32* %i.bn_cmp.Clone, align 4
  %arrayidx1.bn_cmp.Clone = getelementptr inbounds i32, i32* %16, i32 %17
  %18 = load i32, i32* %arrayidx1.bn_cmp.Clone, align 4
  %cmp2.bn_cmp.Clone = icmp ugt i32 %15, %18
  br i1 %cmp2.bn_cmp.Clone, label %if.then.bn_cmp.Clone, label %if.end.bn_cmp.Clone

if.then.bn_cmp.Clone:                             ; preds = %for.body.bn_cmp.Clone
  store i32 1, i32* %retval.bn_cmp.Clone, align 4
  br label %return.bn_cmp.Clone

if.end.bn_cmp.Clone:                              ; preds = %for.body.bn_cmp.Clone
  %19 = load i32*, i32** %a.addr.bn_cmp.Clone, align 4
  %20 = load i32, i32* %i.bn_cmp.Clone, align 4
  %arrayidx3.bn_cmp.Clone = getelementptr inbounds i32, i32* %19, i32 %20
  %21 = load i32, i32* %arrayidx3.bn_cmp.Clone, align 4
  %22 = load i32*, i32** %b.addr.bn_cmp.Clone, align 4
  %23 = load i32, i32* %i.bn_cmp.Clone, align 4
  %arrayidx4.bn_cmp.Clone = getelementptr inbounds i32, i32* %22, i32 %23
  %24 = load i32, i32* %arrayidx4.bn_cmp.Clone, align 4
  %cmp5.bn_cmp.Clone = icmp ult i32 %21, %24
  br i1 %cmp5.bn_cmp.Clone, label %if.then6.bn_cmp.Clone, label %if.end7.bn_cmp.Clone

if.then6.bn_cmp.Clone:                            ; preds = %if.end.bn_cmp.Clone
  store i32 -1, i32* %retval.bn_cmp.Clone, align 4
  br label %return.bn_cmp.Clone

if.end7.bn_cmp.Clone:                             ; preds = %if.end.bn_cmp.Clone
  br label %for.inc.bn_cmp.Clone

for.inc.bn_cmp.Clone:                             ; preds = %if.end7.bn_cmp.Clone
  %25 = load i32, i32* %i.bn_cmp.Clone, align 4
  %dec.bn_cmp.Clone = add nsw i32 %25, -1
  store i32 %dec.bn_cmp.Clone, i32* %i.bn_cmp.Clone, align 4
  br label %for.cond.bn_cmp.Clone

for.end.bn_cmp.Clone:                             ; preds = %for.cond.bn_cmp.Clone
  store i32 0, i32* %retval.bn_cmp.Clone, align 4
  br label %return.bn_cmp.Clone

return.bn_cmp.Clone:                              ; preds = %for.end.bn_cmp.Clone, %if.then6.bn_cmp.Clone, %if.then.bn_cmp.Clone
  %26 = load i32, i32* %retval.bn_cmp.Clone, align 4
  store i32 %26, i32* %RetValuePtr
  br label %entry.Split.Split

entry.Split.Split:                                ; preds = %return.bn_cmp.Clone
  %RetValue = load i32, i32* %RetValuePtr
  %tobool = icmp ne i32 %RetValue, 0
  %lnot = xor i1 %tobool, true
  %lnot.ext = zext i1 %lnot to i32
  store i32 %lnot.ext, i32* %status, align 4
  %arraydecay5 = getelementptr inbounds [65 x i32], [65 x i32]* %u, i32 0, i32 0
  %27 = bitcast i32* %arraydecay5 to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %27, i8 0, i32 260, i1 false)
  %28 = load i32, i32* %status, align 4
  ret i32 %28
}

; Function Attrs: noinline optnone
define dso_local i32 @rsa_get_sk_from_file(i8* %file, %struct.rsa_sk_t* %sk) #2 {
entry:
  %retval = alloca i32, align 4
  %sk.addr = alloca %struct.rsa_sk_t*, align 4
  %file.addr = alloca i8*, align 4
  %fp = alloca %struct._iobuf*, align 4
  store %struct.rsa_sk_t* %sk, %struct.rsa_sk_t** %sk.addr, align 4
  store i8* %file, i8** %file.addr, align 4
  %0 = load i8*, i8** %file.addr, align 4
  %call = call %struct._iobuf* @fopen(i8* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"??_C@_01KDCPPGHE@r?$AA@", i32 0, i32 0))
  store %struct._iobuf* %call, %struct._iobuf** %fp, align 4
  %1 = load %struct._iobuf*, %struct._iobuf** %fp, align 4
  %cmp = icmp eq %struct._iobuf* %1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct._iobuf*, %struct._iobuf** %fp, align 4
  %3 = load %struct.rsa_sk_t*, %struct.rsa_sk_t** %sk.addr, align 4
  %4 = bitcast %struct.rsa_sk_t* %3 to i8*
  %call1 = call i32 @fread(i8* %4, i32 1, i32 1412, %struct._iobuf* %2)
  %5 = load %struct._iobuf*, %struct._iobuf** %fp, align 4
  %call2 = call i32 @fclose(%struct._iobuf* %5)
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval, align 4
  ret i32 %6
}

declare dllimport i32 @fread(i8*, i32, i32, %struct._iobuf*) #3

; Function Attrs: noinline optnone
define dso_local i32 @rsa_generate_keys(%struct.rsa_pk_t* %pk, %struct.rsa_sk_t* %sk, i32 %key_bits) #2 {
entry:
  %retval = alloca i32, align 4
  %key_bits.addr = alloca i32, align 4
  %sk.addr = alloca %struct.rsa_sk_t*, align 4
  %pk.addr = alloca %struct.rsa_pk_t*, align 4
  %status = alloca i32, align 4
  %ndigits = alloca i32, align 4
  %pbits = alloca i32, align 4
  %pdigits = alloca i32, align 4
  %qbits = alloca i32, align 4
  %n = alloca [65 x i32], align 4
  %d = alloca [65 x i32], align 4
  %e = alloca [65 x i32], align 4
  %p = alloca [65 x i32], align 4
  %q = alloca [65 x i32], align 4
  %dp = alloca [65 x i32], align 4
  %dq = alloca [65 x i32], align 4
  %phi_n = alloca [65 x i32], align 4
  %q_inv = alloca [65 x i32], align 4
  %p_minus1 = alloca [65 x i32], align 4
  %q_minus1 = alloca [65 x i32], align 4
  %t = alloca [65 x i32], align 4
  %u = alloca [65 x i32], align 4
  %v = alloca [65 x i32], align 4
  store i32 %key_bits, i32* %key_bits.addr, align 4
  store %struct.rsa_sk_t* %sk, %struct.rsa_sk_t** %sk.addr, align 4
  store %struct.rsa_pk_t* %pk, %struct.rsa_pk_t** %pk.addr, align 4
  %0 = load i32, i32* %key_bits.addr, align 4
  %cmp = icmp ult i32 %0, 508
  %RetValuePtr = alloca i32, align 4
  %RetValuePtr78 = alloca i32, align 4
  %RetValuePtr109 = alloca i32, align 4
  %RetValuePtr140 = alloca i32, align 4
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %key_bits.addr, align 4
  %cmp1 = icmp ugt i32 %1, 2048
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 4098, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %2 = load i32, i32* %key_bits.addr, align 4
  %add = add i32 %2, 32
  %sub = sub i32 %add, 1
  %div = udiv i32 %sub, 32
  store i32 %div, i32* %ndigits, align 4
  %3 = load i32, i32* %ndigits, align 4
  %add2 = add i32 %3, 1
  %div3 = udiv i32 %add2, 2
  store i32 %div3, i32* %pdigits, align 4
  %4 = load i32, i32* %key_bits.addr, align 4
  %add4 = add i32 %4, 1
  %div5 = udiv i32 %add4, 2
  store i32 %div5, i32* %pbits, align 4
  %5 = load i32, i32* %key_bits.addr, align 4
  %6 = load i32, i32* %pbits, align 4
  %sub6 = sub i32 %5, %6
  store i32 %sub6, i32* %qbits, align 4
  call void @initialize_rand()
  %7 = load i32, i32* %ndigits, align 4
  %arraydecay = getelementptr inbounds [65 x i32], [65 x i32]* %e, i32 0, i32 0
  br label %entry.bn_assign_zero.Clone37

entry.bn_assign_zero.Clone37:                     ; preds = %if.end
  %digits.addr.bn_assign_zero.Clone38 = alloca i32, align 4
  %a.addr.bn_assign_zero.Clone39 = alloca i32*, align 4
  %i.bn_assign_zero.Clone40 = alloca i32, align 4
  store i32 %7, i32* %digits.addr.bn_assign_zero.Clone38, align 4
  store i32* %arraydecay, i32** %a.addr.bn_assign_zero.Clone39, align 4
  store i32 0, i32* %i.bn_assign_zero.Clone40, align 4
  br label %for.cond.bn_assign_zero.Clone41

for.cond.bn_assign_zero.Clone41:                  ; preds = %for.inc.bn_assign_zero.Clone45, %entry.bn_assign_zero.Clone37
  %8 = load i32, i32* %i.bn_assign_zero.Clone40, align 4
  %9 = load i32, i32* %digits.addr.bn_assign_zero.Clone38, align 4
  %cmp.bn_assign_zero.Clone42 = icmp ult i32 %8, %9
  br i1 %cmp.bn_assign_zero.Clone42, label %for.body.bn_assign_zero.Clone43, label %for.end.bn_assign_zero.Clone47

for.body.bn_assign_zero.Clone43:                  ; preds = %for.cond.bn_assign_zero.Clone41
  %10 = load i32*, i32** %a.addr.bn_assign_zero.Clone39, align 4
  %11 = load i32, i32* %i.bn_assign_zero.Clone40, align 4
  %arrayidx.bn_assign_zero.Clone44 = getelementptr inbounds i32, i32* %10, i32 %11
  store i32 0, i32* %arrayidx.bn_assign_zero.Clone44, align 4
  br label %for.inc.bn_assign_zero.Clone45

for.inc.bn_assign_zero.Clone45:                   ; preds = %for.body.bn_assign_zero.Clone43
  %12 = load i32, i32* %i.bn_assign_zero.Clone40, align 4
  %inc.bn_assign_zero.Clone46 = add i32 %12, 1
  store i32 %inc.bn_assign_zero.Clone46, i32* %i.bn_assign_zero.Clone40, align 4
  br label %for.cond.bn_assign_zero.Clone41

for.end.bn_assign_zero.Clone47:                   ; preds = %for.cond.bn_assign_zero.Clone41
  br label %if.end.Split36

if.end.Split36:                                   ; preds = %for.end.bn_assign_zero.Clone47
  %arrayidx = getelementptr inbounds [65 x i32], [65 x i32]* %e, i32 0, i32 0
  store i32 65537, i32* %arrayidx, align 4
  %13 = load i32, i32* %pdigits, align 4
  %14 = load i32, i32* %pbits, align 4
  %sub7 = sub i32 %14, 1
  %arraydecay8 = getelementptr inbounds [65 x i32], [65 x i32]* %t, i32 0, i32 0
  br label %entry.bn_assign_2exp.Clone196

entry.bn_assign_2exp.Clone196:                    ; preds = %if.end.Split36
  %digits.addr.bn_assign_2exp.Clone197 = alloca i32, align 4
  %b.addr.bn_assign_2exp.Clone198 = alloca i32, align 4
  %a.addr.bn_assign_2exp.Clone199 = alloca i32*, align 4
  store i32 %13, i32* %digits.addr.bn_assign_2exp.Clone197, align 4
  store i32 %sub7, i32* %b.addr.bn_assign_2exp.Clone198, align 4
  store i32* %arraydecay8, i32** %a.addr.bn_assign_2exp.Clone199, align 4
  %15 = load i32, i32* %digits.addr.bn_assign_2exp.Clone197, align 4
  %16 = load i32*, i32** %a.addr.bn_assign_2exp.Clone199, align 4
  br label %entry.bn_assign_zero.Clone.bn_assign_2exp.Clone200

entry.bn_assign_zero.Clone.bn_assign_2exp.Clone200: ; preds = %entry.bn_assign_2exp.Clone196
  %digits.addr.bn_assign_zero.Clone.bn_assign_2exp.Clone201 = alloca i32, align 4
  %a.addr.bn_assign_zero.Clone.bn_assign_2exp.Clone202 = alloca i32*, align 4
  %i.bn_assign_zero.Clone.bn_assign_2exp.Clone203 = alloca i32, align 4
  store i32 %15, i32* %digits.addr.bn_assign_zero.Clone.bn_assign_2exp.Clone201, align 4
  store i32* %16, i32** %a.addr.bn_assign_zero.Clone.bn_assign_2exp.Clone202, align 4
  store i32 0, i32* %i.bn_assign_zero.Clone.bn_assign_2exp.Clone203, align 4
  br label %for.cond.bn_assign_zero.Clone.bn_assign_2exp.Clone204

for.cond.bn_assign_zero.Clone.bn_assign_2exp.Clone204: ; preds = %for.inc.bn_assign_zero.Clone.bn_assign_2exp.Clone208, %entry.bn_assign_zero.Clone.bn_assign_2exp.Clone200
  %17 = load i32, i32* %i.bn_assign_zero.Clone.bn_assign_2exp.Clone203, align 4
  %18 = load i32, i32* %digits.addr.bn_assign_zero.Clone.bn_assign_2exp.Clone201, align 4
  %cmp.bn_assign_zero.Clone.bn_assign_2exp.Clone205 = icmp ult i32 %17, %18
  br i1 %cmp.bn_assign_zero.Clone.bn_assign_2exp.Clone205, label %for.body.bn_assign_zero.Clone.bn_assign_2exp.Clone206, label %for.end.bn_assign_zero.Clone.bn_assign_2exp.Clone210

for.body.bn_assign_zero.Clone.bn_assign_2exp.Clone206: ; preds = %for.cond.bn_assign_zero.Clone.bn_assign_2exp.Clone204
  %19 = load i32*, i32** %a.addr.bn_assign_zero.Clone.bn_assign_2exp.Clone202, align 4
  %20 = load i32, i32* %i.bn_assign_zero.Clone.bn_assign_2exp.Clone203, align 4
  %arrayidx.bn_assign_zero.Clone.bn_assign_2exp.Clone207 = getelementptr inbounds i32, i32* %19, i32 %20
  store i32 0, i32* %arrayidx.bn_assign_zero.Clone.bn_assign_2exp.Clone207, align 4
  br label %for.inc.bn_assign_zero.Clone.bn_assign_2exp.Clone208

for.inc.bn_assign_zero.Clone.bn_assign_2exp.Clone208: ; preds = %for.body.bn_assign_zero.Clone.bn_assign_2exp.Clone206
  %21 = load i32, i32* %i.bn_assign_zero.Clone.bn_assign_2exp.Clone203, align 4
  %inc.bn_assign_zero.Clone.bn_assign_2exp.Clone209 = add i32 %21, 1
  store i32 %inc.bn_assign_zero.Clone.bn_assign_2exp.Clone209, i32* %i.bn_assign_zero.Clone.bn_assign_2exp.Clone203, align 4
  br label %for.cond.bn_assign_zero.Clone.bn_assign_2exp.Clone204

for.end.bn_assign_zero.Clone.bn_assign_2exp.Clone210: ; preds = %for.cond.bn_assign_zero.Clone.bn_assign_2exp.Clone204
  br label %entry.Split.bn_assign_2exp.Clone211

entry.Split.bn_assign_2exp.Clone211:              ; preds = %for.end.bn_assign_zero.Clone.bn_assign_2exp.Clone210
  %22 = load i32, i32* %b.addr.bn_assign_2exp.Clone198, align 4
  %23 = load i32, i32* %digits.addr.bn_assign_2exp.Clone197, align 4
  %mul.bn_assign_2exp.Clone212 = mul i32 %23, 32
  %cmp.bn_assign_2exp.Clone213 = icmp uge i32 %22, %mul.bn_assign_2exp.Clone212
  br i1 %cmp.bn_assign_2exp.Clone213, label %if.then.bn_assign_2exp.Clone214, label %if.end.bn_assign_2exp.Clone215

if.then.bn_assign_2exp.Clone214:                  ; preds = %entry.Split.bn_assign_2exp.Clone211
  br label %return.bn_assign_2exp.Clone220

if.end.bn_assign_2exp.Clone215:                   ; preds = %entry.Split.bn_assign_2exp.Clone211
  %24 = load i32, i32* %b.addr.bn_assign_2exp.Clone198, align 4
  %rem.bn_assign_2exp.Clone216 = urem i32 %24, 32
  %shl.bn_assign_2exp.Clone217 = shl i32 1, %rem.bn_assign_2exp.Clone216
  %25 = load i32*, i32** %a.addr.bn_assign_2exp.Clone199, align 4
  %26 = load i32, i32* %b.addr.bn_assign_2exp.Clone198, align 4
  %div.bn_assign_2exp.Clone218 = udiv i32 %26, 32
  %arrayidx.bn_assign_2exp.Clone219 = getelementptr inbounds i32, i32* %25, i32 %div.bn_assign_2exp.Clone218
  store i32 %shl.bn_assign_2exp.Clone217, i32* %arrayidx.bn_assign_2exp.Clone219, align 4
  br label %return.bn_assign_2exp.Clone220

return.bn_assign_2exp.Clone220:                   ; preds = %if.end.bn_assign_2exp.Clone215, %if.then.bn_assign_2exp.Clone214
  br label %if.end.Split36.Split195

if.end.Split36.Split195:                          ; preds = %return.bn_assign_2exp.Clone220
  %27 = load i32, i32* %pdigits, align 4
  %28 = load i32, i32* %pbits, align 4
  %sub9 = sub i32 %28, 2
  %arraydecay10 = getelementptr inbounds [65 x i32], [65 x i32]* %u, i32 0, i32 0
  br label %entry.bn_assign_2exp.Clone170

entry.bn_assign_2exp.Clone170:                    ; preds = %if.end.Split36.Split195
  %digits.addr.bn_assign_2exp.Clone171 = alloca i32, align 4
  %b.addr.bn_assign_2exp.Clone172 = alloca i32, align 4
  %a.addr.bn_assign_2exp.Clone173 = alloca i32*, align 4
  store i32 %27, i32* %digits.addr.bn_assign_2exp.Clone171, align 4
  store i32 %sub9, i32* %b.addr.bn_assign_2exp.Clone172, align 4
  store i32* %arraydecay10, i32** %a.addr.bn_assign_2exp.Clone173, align 4
  %29 = load i32, i32* %digits.addr.bn_assign_2exp.Clone171, align 4
  %30 = load i32*, i32** %a.addr.bn_assign_2exp.Clone173, align 4
  br label %entry.bn_assign_zero.Clone.bn_assign_2exp.Clone174

entry.bn_assign_zero.Clone.bn_assign_2exp.Clone174: ; preds = %entry.bn_assign_2exp.Clone170
  %digits.addr.bn_assign_zero.Clone.bn_assign_2exp.Clone175 = alloca i32, align 4
  %a.addr.bn_assign_zero.Clone.bn_assign_2exp.Clone176 = alloca i32*, align 4
  %i.bn_assign_zero.Clone.bn_assign_2exp.Clone177 = alloca i32, align 4
  store i32 %29, i32* %digits.addr.bn_assign_zero.Clone.bn_assign_2exp.Clone175, align 4
  store i32* %30, i32** %a.addr.bn_assign_zero.Clone.bn_assign_2exp.Clone176, align 4
  store i32 0, i32* %i.bn_assign_zero.Clone.bn_assign_2exp.Clone177, align 4
  br label %for.cond.bn_assign_zero.Clone.bn_assign_2exp.Clone178

for.cond.bn_assign_zero.Clone.bn_assign_2exp.Clone178: ; preds = %for.inc.bn_assign_zero.Clone.bn_assign_2exp.Clone182, %entry.bn_assign_zero.Clone.bn_assign_2exp.Clone174
  %31 = load i32, i32* %i.bn_assign_zero.Clone.bn_assign_2exp.Clone177, align 4
  %32 = load i32, i32* %digits.addr.bn_assign_zero.Clone.bn_assign_2exp.Clone175, align 4
  %cmp.bn_assign_zero.Clone.bn_assign_2exp.Clone179 = icmp ult i32 %31, %32
  br i1 %cmp.bn_assign_zero.Clone.bn_assign_2exp.Clone179, label %for.body.bn_assign_zero.Clone.bn_assign_2exp.Clone180, label %for.end.bn_assign_zero.Clone.bn_assign_2exp.Clone184

for.body.bn_assign_zero.Clone.bn_assign_2exp.Clone180: ; preds = %for.cond.bn_assign_zero.Clone.bn_assign_2exp.Clone178
  %33 = load i32*, i32** %a.addr.bn_assign_zero.Clone.bn_assign_2exp.Clone176, align 4
  %34 = load i32, i32* %i.bn_assign_zero.Clone.bn_assign_2exp.Clone177, align 4
  %arrayidx.bn_assign_zero.Clone.bn_assign_2exp.Clone181 = getelementptr inbounds i32, i32* %33, i32 %34
  store i32 0, i32* %arrayidx.bn_assign_zero.Clone.bn_assign_2exp.Clone181, align 4
  br label %for.inc.bn_assign_zero.Clone.bn_assign_2exp.Clone182

for.inc.bn_assign_zero.Clone.bn_assign_2exp.Clone182: ; preds = %for.body.bn_assign_zero.Clone.bn_assign_2exp.Clone180
  %35 = load i32, i32* %i.bn_assign_zero.Clone.bn_assign_2exp.Clone177, align 4
  %inc.bn_assign_zero.Clone.bn_assign_2exp.Clone183 = add i32 %35, 1
  store i32 %inc.bn_assign_zero.Clone.bn_assign_2exp.Clone183, i32* %i.bn_assign_zero.Clone.bn_assign_2exp.Clone177, align 4
  br label %for.cond.bn_assign_zero.Clone.bn_assign_2exp.Clone178

for.end.bn_assign_zero.Clone.bn_assign_2exp.Clone184: ; preds = %for.cond.bn_assign_zero.Clone.bn_assign_2exp.Clone178
  br label %entry.Split.bn_assign_2exp.Clone185

entry.Split.bn_assign_2exp.Clone185:              ; preds = %for.end.bn_assign_zero.Clone.bn_assign_2exp.Clone184
  %36 = load i32, i32* %b.addr.bn_assign_2exp.Clone172, align 4
  %37 = load i32, i32* %digits.addr.bn_assign_2exp.Clone171, align 4
  %mul.bn_assign_2exp.Clone186 = mul i32 %37, 32
  %cmp.bn_assign_2exp.Clone187 = icmp uge i32 %36, %mul.bn_assign_2exp.Clone186
  br i1 %cmp.bn_assign_2exp.Clone187, label %if.then.bn_assign_2exp.Clone188, label %if.end.bn_assign_2exp.Clone189

if.then.bn_assign_2exp.Clone188:                  ; preds = %entry.Split.bn_assign_2exp.Clone185
  br label %return.bn_assign_2exp.Clone194

if.end.bn_assign_2exp.Clone189:                   ; preds = %entry.Split.bn_assign_2exp.Clone185
  %38 = load i32, i32* %b.addr.bn_assign_2exp.Clone172, align 4
  %rem.bn_assign_2exp.Clone190 = urem i32 %38, 32
  %shl.bn_assign_2exp.Clone191 = shl i32 1, %rem.bn_assign_2exp.Clone190
  %39 = load i32*, i32** %a.addr.bn_assign_2exp.Clone173, align 4
  %40 = load i32, i32* %b.addr.bn_assign_2exp.Clone172, align 4
  %div.bn_assign_2exp.Clone192 = udiv i32 %40, 32
  %arrayidx.bn_assign_2exp.Clone193 = getelementptr inbounds i32, i32* %39, i32 %div.bn_assign_2exp.Clone192
  store i32 %shl.bn_assign_2exp.Clone191, i32* %arrayidx.bn_assign_2exp.Clone193, align 4
  br label %return.bn_assign_2exp.Clone194

return.bn_assign_2exp.Clone194:                   ; preds = %if.end.bn_assign_2exp.Clone189, %if.then.bn_assign_2exp.Clone188
  br label %if.end.Split36.Split169

if.end.Split36.Split169:                          ; preds = %return.bn_assign_2exp.Clone194
  %41 = load i32, i32* %pdigits, align 4
  %arraydecay11 = getelementptr inbounds [65 x i32], [65 x i32]* %u, i32 0, i32 0
  %arraydecay12 = getelementptr inbounds [65 x i32], [65 x i32]* %t, i32 0, i32 0
  %arraydecay13 = getelementptr inbounds [65 x i32], [65 x i32]* %t, i32 0, i32 0
  br label %entry.bn_add.Clone111

entry.bn_add.Clone111:                            ; preds = %if.end.Split36.Split169
  %digits.addr.bn_add.Clone112 = alloca i32, align 4
  %c.addr.bn_add.Clone113 = alloca i32*, align 4
  %b.addr.bn_add.Clone114 = alloca i32*, align 4
  %a.addr.bn_add.Clone115 = alloca i32*, align 4
  %ai.bn_add.Clone116 = alloca i32, align 4
  %carry.bn_add.Clone117 = alloca i32, align 4
  %i.bn_add.Clone118 = alloca i32, align 4
  store i32 %41, i32* %digits.addr.bn_add.Clone112, align 4
  store i32* %arraydecay11, i32** %c.addr.bn_add.Clone113, align 4
  store i32* %arraydecay12, i32** %b.addr.bn_add.Clone114, align 4
  store i32* %arraydecay13, i32** %a.addr.bn_add.Clone115, align 4
  store i32 0, i32* %carry.bn_add.Clone117, align 4
  store i32 0, i32* %i.bn_add.Clone118, align 4
  br label %for.cond.bn_add.Clone119

for.cond.bn_add.Clone119:                         ; preds = %for.inc.bn_add.Clone137, %entry.bn_add.Clone111
  %42 = load i32, i32* %i.bn_add.Clone118, align 4
  %43 = load i32, i32* %digits.addr.bn_add.Clone112, align 4
  %cmp.bn_add.Clone120 = icmp ult i32 %42, %43
  br i1 %cmp.bn_add.Clone120, label %for.body.bn_add.Clone121, label %for.end.bn_add.Clone139

for.body.bn_add.Clone121:                         ; preds = %for.cond.bn_add.Clone119
  %44 = load i32*, i32** %b.addr.bn_add.Clone114, align 4
  %45 = load i32, i32* %i.bn_add.Clone118, align 4
  %arrayidx.bn_add.Clone122 = getelementptr inbounds i32, i32* %44, i32 %45
  %46 = load i32, i32* %arrayidx.bn_add.Clone122, align 4
  %47 = load i32, i32* %carry.bn_add.Clone117, align 4
  %add.bn_add.Clone123 = add i32 %46, %47
  store i32 %add.bn_add.Clone123, i32* %ai.bn_add.Clone116, align 4
  %48 = load i32, i32* %carry.bn_add.Clone117, align 4
  %cmp1.bn_add.Clone124 = icmp ult i32 %add.bn_add.Clone123, %48
  br i1 %cmp1.bn_add.Clone124, label %if.then.bn_add.Clone125, label %if.else.bn_add.Clone127

if.then.bn_add.Clone125:                          ; preds = %for.body.bn_add.Clone121
  %49 = load i32*, i32** %c.addr.bn_add.Clone113, align 4
  %50 = load i32, i32* %i.bn_add.Clone118, align 4
  %arrayidx2.bn_add.Clone126 = getelementptr inbounds i32, i32* %49, i32 %50
  %51 = load i32, i32* %arrayidx2.bn_add.Clone126, align 4
  store i32 %51, i32* %ai.bn_add.Clone116, align 4
  br label %if.end9.bn_add.Clone135

if.else.bn_add.Clone127:                          ; preds = %for.body.bn_add.Clone121
  %52 = load i32*, i32** %c.addr.bn_add.Clone113, align 4
  %53 = load i32, i32* %i.bn_add.Clone118, align 4
  %arrayidx3.bn_add.Clone128 = getelementptr inbounds i32, i32* %52, i32 %53
  %54 = load i32, i32* %arrayidx3.bn_add.Clone128, align 4
  %55 = load i32, i32* %ai.bn_add.Clone116, align 4
  %add4.bn_add.Clone129 = add i32 %55, %54
  store i32 %add4.bn_add.Clone129, i32* %ai.bn_add.Clone116, align 4
  %56 = load i32*, i32** %c.addr.bn_add.Clone113, align 4
  %57 = load i32, i32* %i.bn_add.Clone118, align 4
  %arrayidx5.bn_add.Clone130 = getelementptr inbounds i32, i32* %56, i32 %57
  %58 = load i32, i32* %arrayidx5.bn_add.Clone130, align 4
  %cmp6.bn_add.Clone131 = icmp ult i32 %add4.bn_add.Clone129, %58
  br i1 %cmp6.bn_add.Clone131, label %if.then7.bn_add.Clone132, label %if.else8.bn_add.Clone133

if.then7.bn_add.Clone132:                         ; preds = %if.else.bn_add.Clone127
  store i32 1, i32* %carry.bn_add.Clone117, align 4
  br label %if.end.bn_add.Clone134

if.else8.bn_add.Clone133:                         ; preds = %if.else.bn_add.Clone127
  store i32 0, i32* %carry.bn_add.Clone117, align 4
  br label %if.end.bn_add.Clone134

if.end.bn_add.Clone134:                           ; preds = %if.else8.bn_add.Clone133, %if.then7.bn_add.Clone132
  br label %if.end9.bn_add.Clone135

if.end9.bn_add.Clone135:                          ; preds = %if.end.bn_add.Clone134, %if.then.bn_add.Clone125
  %59 = load i32, i32* %ai.bn_add.Clone116, align 4
  %60 = load i32*, i32** %a.addr.bn_add.Clone115, align 4
  %61 = load i32, i32* %i.bn_add.Clone118, align 4
  %arrayidx10.bn_add.Clone136 = getelementptr inbounds i32, i32* %60, i32 %61
  store i32 %59, i32* %arrayidx10.bn_add.Clone136, align 4
  br label %for.inc.bn_add.Clone137

for.inc.bn_add.Clone137:                          ; preds = %if.end9.bn_add.Clone135
  %62 = load i32, i32* %i.bn_add.Clone118, align 4
  %inc.bn_add.Clone138 = add i32 %62, 1
  store i32 %inc.bn_add.Clone138, i32* %i.bn_add.Clone118, align 4
  br label %for.cond.bn_add.Clone119

for.end.bn_add.Clone139:                          ; preds = %for.cond.bn_add.Clone119
  %63 = load i32, i32* %carry.bn_add.Clone117, align 4
  store i32 %63, i32* %RetValuePtr140
  br label %if.end.Split36.Split

if.end.Split36.Split:                             ; preds = %for.end.bn_add.Clone139
  %RetValue141 = load i32, i32* %RetValuePtr140
  %64 = load i32, i32* %pdigits, align 4
  %arraydecay14 = getelementptr inbounds [65 x i32], [65 x i32]* %v, i32 0, i32 0
  br label %entry.bn_assign_zero.Clone25

entry.bn_assign_zero.Clone25:                     ; preds = %if.end.Split36.Split
  %digits.addr.bn_assign_zero.Clone26 = alloca i32, align 4
  %a.addr.bn_assign_zero.Clone27 = alloca i32*, align 4
  %i.bn_assign_zero.Clone28 = alloca i32, align 4
  store i32 %64, i32* %digits.addr.bn_assign_zero.Clone26, align 4
  store i32* %arraydecay14, i32** %a.addr.bn_assign_zero.Clone27, align 4
  store i32 0, i32* %i.bn_assign_zero.Clone28, align 4
  br label %for.cond.bn_assign_zero.Clone29

for.cond.bn_assign_zero.Clone29:                  ; preds = %for.inc.bn_assign_zero.Clone33, %entry.bn_assign_zero.Clone25
  %65 = load i32, i32* %i.bn_assign_zero.Clone28, align 4
  %66 = load i32, i32* %digits.addr.bn_assign_zero.Clone26, align 4
  %cmp.bn_assign_zero.Clone30 = icmp ult i32 %65, %66
  br i1 %cmp.bn_assign_zero.Clone30, label %for.body.bn_assign_zero.Clone31, label %for.end.bn_assign_zero.Clone35

for.body.bn_assign_zero.Clone31:                  ; preds = %for.cond.bn_assign_zero.Clone29
  %67 = load i32*, i32** %a.addr.bn_assign_zero.Clone27, align 4
  %68 = load i32, i32* %i.bn_assign_zero.Clone28, align 4
  %arrayidx.bn_assign_zero.Clone32 = getelementptr inbounds i32, i32* %67, i32 %68
  store i32 0, i32* %arrayidx.bn_assign_zero.Clone32, align 4
  br label %for.inc.bn_assign_zero.Clone33

for.inc.bn_assign_zero.Clone33:                   ; preds = %for.body.bn_assign_zero.Clone31
  %69 = load i32, i32* %i.bn_assign_zero.Clone28, align 4
  %inc.bn_assign_zero.Clone34 = add i32 %69, 1
  store i32 %inc.bn_assign_zero.Clone34, i32* %i.bn_assign_zero.Clone28, align 4
  br label %for.cond.bn_assign_zero.Clone29

for.end.bn_assign_zero.Clone35:                   ; preds = %for.cond.bn_assign_zero.Clone29
  br label %if.end.Split24

if.end.Split24:                                   ; preds = %for.end.bn_assign_zero.Clone35
  %arrayidx15 = getelementptr inbounds [65 x i32], [65 x i32]* %v, i32 0, i32 0
  store i32 1, i32* %arrayidx15, align 4
  %70 = load i32, i32* %pdigits, align 4
  %arraydecay16 = getelementptr inbounds [65 x i32], [65 x i32]* %v, i32 0, i32 0
  %arraydecay17 = getelementptr inbounds [65 x i32], [65 x i32]* %t, i32 0, i32 0
  %arraydecay18 = getelementptr inbounds [65 x i32], [65 x i32]* %v, i32 0, i32 0
  %call19 = call i32 @bn_sub(i32* %arraydecay18, i32* %arraydecay17, i32* %arraydecay16, i32 %70)
  %71 = load i32, i32* %pdigits, align 4
  %arraydecay20 = getelementptr inbounds [65 x i32], [65 x i32]* %v, i32 0, i32 0
  %arraydecay21 = getelementptr inbounds [65 x i32], [65 x i32]* %u, i32 0, i32 0
  %arraydecay22 = getelementptr inbounds [65 x i32], [65 x i32]* %u, i32 0, i32 0
  br label %entry.bn_add.Clone80

entry.bn_add.Clone80:                             ; preds = %if.end.Split24
  %digits.addr.bn_add.Clone81 = alloca i32, align 4
  %c.addr.bn_add.Clone82 = alloca i32*, align 4
  %b.addr.bn_add.Clone83 = alloca i32*, align 4
  %a.addr.bn_add.Clone84 = alloca i32*, align 4
  %ai.bn_add.Clone85 = alloca i32, align 4
  %carry.bn_add.Clone86 = alloca i32, align 4
  %i.bn_add.Clone87 = alloca i32, align 4
  store i32 %71, i32* %digits.addr.bn_add.Clone81, align 4
  store i32* %arraydecay20, i32** %c.addr.bn_add.Clone82, align 4
  store i32* %arraydecay21, i32** %b.addr.bn_add.Clone83, align 4
  store i32* %arraydecay22, i32** %a.addr.bn_add.Clone84, align 4
  store i32 0, i32* %carry.bn_add.Clone86, align 4
  store i32 0, i32* %i.bn_add.Clone87, align 4
  br label %for.cond.bn_add.Clone88

for.cond.bn_add.Clone88:                          ; preds = %for.inc.bn_add.Clone106, %entry.bn_add.Clone80
  %72 = load i32, i32* %i.bn_add.Clone87, align 4
  %73 = load i32, i32* %digits.addr.bn_add.Clone81, align 4
  %cmp.bn_add.Clone89 = icmp ult i32 %72, %73
  br i1 %cmp.bn_add.Clone89, label %for.body.bn_add.Clone90, label %for.end.bn_add.Clone108

for.body.bn_add.Clone90:                          ; preds = %for.cond.bn_add.Clone88
  %74 = load i32*, i32** %b.addr.bn_add.Clone83, align 4
  %75 = load i32, i32* %i.bn_add.Clone87, align 4
  %arrayidx.bn_add.Clone91 = getelementptr inbounds i32, i32* %74, i32 %75
  %76 = load i32, i32* %arrayidx.bn_add.Clone91, align 4
  %77 = load i32, i32* %carry.bn_add.Clone86, align 4
  %add.bn_add.Clone92 = add i32 %76, %77
  store i32 %add.bn_add.Clone92, i32* %ai.bn_add.Clone85, align 4
  %78 = load i32, i32* %carry.bn_add.Clone86, align 4
  %cmp1.bn_add.Clone93 = icmp ult i32 %add.bn_add.Clone92, %78
  br i1 %cmp1.bn_add.Clone93, label %if.then.bn_add.Clone94, label %if.else.bn_add.Clone96

if.then.bn_add.Clone94:                           ; preds = %for.body.bn_add.Clone90
  %79 = load i32*, i32** %c.addr.bn_add.Clone82, align 4
  %80 = load i32, i32* %i.bn_add.Clone87, align 4
  %arrayidx2.bn_add.Clone95 = getelementptr inbounds i32, i32* %79, i32 %80
  %81 = load i32, i32* %arrayidx2.bn_add.Clone95, align 4
  store i32 %81, i32* %ai.bn_add.Clone85, align 4
  br label %if.end9.bn_add.Clone104

if.else.bn_add.Clone96:                           ; preds = %for.body.bn_add.Clone90
  %82 = load i32*, i32** %c.addr.bn_add.Clone82, align 4
  %83 = load i32, i32* %i.bn_add.Clone87, align 4
  %arrayidx3.bn_add.Clone97 = getelementptr inbounds i32, i32* %82, i32 %83
  %84 = load i32, i32* %arrayidx3.bn_add.Clone97, align 4
  %85 = load i32, i32* %ai.bn_add.Clone85, align 4
  %add4.bn_add.Clone98 = add i32 %85, %84
  store i32 %add4.bn_add.Clone98, i32* %ai.bn_add.Clone85, align 4
  %86 = load i32*, i32** %c.addr.bn_add.Clone82, align 4
  %87 = load i32, i32* %i.bn_add.Clone87, align 4
  %arrayidx5.bn_add.Clone99 = getelementptr inbounds i32, i32* %86, i32 %87
  %88 = load i32, i32* %arrayidx5.bn_add.Clone99, align 4
  %cmp6.bn_add.Clone100 = icmp ult i32 %add4.bn_add.Clone98, %88
  br i1 %cmp6.bn_add.Clone100, label %if.then7.bn_add.Clone101, label %if.else8.bn_add.Clone102

if.then7.bn_add.Clone101:                         ; preds = %if.else.bn_add.Clone96
  store i32 1, i32* %carry.bn_add.Clone86, align 4
  br label %if.end.bn_add.Clone103

if.else8.bn_add.Clone102:                         ; preds = %if.else.bn_add.Clone96
  store i32 0, i32* %carry.bn_add.Clone86, align 4
  br label %if.end.bn_add.Clone103

if.end.bn_add.Clone103:                           ; preds = %if.else8.bn_add.Clone102, %if.then7.bn_add.Clone101
  br label %if.end9.bn_add.Clone104

if.end9.bn_add.Clone104:                          ; preds = %if.end.bn_add.Clone103, %if.then.bn_add.Clone94
  %89 = load i32, i32* %ai.bn_add.Clone85, align 4
  %90 = load i32*, i32** %a.addr.bn_add.Clone84, align 4
  %91 = load i32, i32* %i.bn_add.Clone87, align 4
  %arrayidx10.bn_add.Clone105 = getelementptr inbounds i32, i32* %90, i32 %91
  store i32 %89, i32* %arrayidx10.bn_add.Clone105, align 4
  br label %for.inc.bn_add.Clone106

for.inc.bn_add.Clone106:                          ; preds = %if.end9.bn_add.Clone104
  %92 = load i32, i32* %i.bn_add.Clone87, align 4
  %inc.bn_add.Clone107 = add i32 %92, 1
  store i32 %inc.bn_add.Clone107, i32* %i.bn_add.Clone87, align 4
  br label %for.cond.bn_add.Clone88

for.end.bn_add.Clone108:                          ; preds = %for.cond.bn_add.Clone88
  %93 = load i32, i32* %carry.bn_add.Clone86, align 4
  store i32 %93, i32* %RetValuePtr109
  br label %if.end.Split24.Split

if.end.Split24.Split:                             ; preds = %for.end.bn_add.Clone108
  %RetValue110 = load i32, i32* %RetValuePtr109
  %94 = load i32, i32* %pdigits, align 4
  %arraydecay24 = getelementptr inbounds [65 x i32], [65 x i32]* %v, i32 0, i32 0
  br label %entry.bn_assign_zero.Clone13

entry.bn_assign_zero.Clone13:                     ; preds = %if.end.Split24.Split
  %digits.addr.bn_assign_zero.Clone14 = alloca i32, align 4
  %a.addr.bn_assign_zero.Clone15 = alloca i32*, align 4
  %i.bn_assign_zero.Clone16 = alloca i32, align 4
  store i32 %94, i32* %digits.addr.bn_assign_zero.Clone14, align 4
  store i32* %arraydecay24, i32** %a.addr.bn_assign_zero.Clone15, align 4
  store i32 0, i32* %i.bn_assign_zero.Clone16, align 4
  br label %for.cond.bn_assign_zero.Clone17

for.cond.bn_assign_zero.Clone17:                  ; preds = %for.inc.bn_assign_zero.Clone21, %entry.bn_assign_zero.Clone13
  %95 = load i32, i32* %i.bn_assign_zero.Clone16, align 4
  %96 = load i32, i32* %digits.addr.bn_assign_zero.Clone14, align 4
  %cmp.bn_assign_zero.Clone18 = icmp ult i32 %95, %96
  br i1 %cmp.bn_assign_zero.Clone18, label %for.body.bn_assign_zero.Clone19, label %for.end.bn_assign_zero.Clone23

for.body.bn_assign_zero.Clone19:                  ; preds = %for.cond.bn_assign_zero.Clone17
  %97 = load i32*, i32** %a.addr.bn_assign_zero.Clone15, align 4
  %98 = load i32, i32* %i.bn_assign_zero.Clone16, align 4
  %arrayidx.bn_assign_zero.Clone20 = getelementptr inbounds i32, i32* %97, i32 %98
  store i32 0, i32* %arrayidx.bn_assign_zero.Clone20, align 4
  br label %for.inc.bn_assign_zero.Clone21

for.inc.bn_assign_zero.Clone21:                   ; preds = %for.body.bn_assign_zero.Clone19
  %99 = load i32, i32* %i.bn_assign_zero.Clone16, align 4
  %inc.bn_assign_zero.Clone22 = add i32 %99, 1
  store i32 %inc.bn_assign_zero.Clone22, i32* %i.bn_assign_zero.Clone16, align 4
  br label %for.cond.bn_assign_zero.Clone17

for.end.bn_assign_zero.Clone23:                   ; preds = %for.cond.bn_assign_zero.Clone17
  br label %if.end.Split

if.end.Split:                                     ; preds = %for.end.bn_assign_zero.Clone23
  %arrayidx25 = getelementptr inbounds [65 x i32], [65 x i32]* %v, i32 0, i32 0
  store i32 2, i32* %arrayidx25, align 4
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.end.Split
  %100 = load i32, i32* %pdigits, align 4
  %arraydecay26 = getelementptr inbounds [65 x i32], [65 x i32]* %v, i32 0, i32 0
  %arraydecay27 = getelementptr inbounds [65 x i32], [65 x i32]* %u, i32 0, i32 0
  %arraydecay28 = getelementptr inbounds [65 x i32], [65 x i32]* %t, i32 0, i32 0
  %arraydecay29 = getelementptr inbounds [65 x i32], [65 x i32]* %p, i32 0, i32 0
  %call30 = call i32 @generate_prime(i32* %arraydecay29, i32* %arraydecay28, i32* %arraydecay27, i32* %arraydecay26, i32 %100)
  store i32 %call30, i32* %status, align 4
  %101 = load i32, i32* %status, align 4
  %cmp31 = icmp ne i32 %101, 0
  br i1 %cmp31, label %if.then32, label %if.end33

if.then32:                                        ; preds = %do.body
  %102 = load i32, i32* %status, align 4
  store i32 %102, i32* %retval, align 4
  br label %return

if.end33:                                         ; preds = %do.body
  br label %do.cond

do.cond:                                          ; preds = %if.end33
  %arraydecay34 = getelementptr inbounds [65 x i32], [65 x i32]* %e, i32 0, i32 0
  %103 = load i32, i32* %pdigits, align 4
  %arraydecay35 = getelementptr inbounds [65 x i32], [65 x i32]* %p, i32 0, i32 0
  %call36 = call i32 @rsa_filter(i32* %arraydecay35, i32 %103, i32* %arraydecay34, i32 1)
  %tobool = icmp ne i32 %call36, 0
  %lnot = xor i1 %tobool, true
  br i1 %lnot, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  %104 = load i32, i32* %pdigits, align 4
  %105 = load i32, i32* %qbits, align 4
  %sub37 = sub i32 %105, 1
  %arraydecay38 = getelementptr inbounds [65 x i32], [65 x i32]* %t, i32 0, i32 0
  br label %entry.bn_assign_2exp.Clone144

entry.bn_assign_2exp.Clone144:                    ; preds = %do.end
  %digits.addr.bn_assign_2exp.Clone145 = alloca i32, align 4
  %b.addr.bn_assign_2exp.Clone146 = alloca i32, align 4
  %a.addr.bn_assign_2exp.Clone147 = alloca i32*, align 4
  store i32 %104, i32* %digits.addr.bn_assign_2exp.Clone145, align 4
  store i32 %sub37, i32* %b.addr.bn_assign_2exp.Clone146, align 4
  store i32* %arraydecay38, i32** %a.addr.bn_assign_2exp.Clone147, align 4
  %106 = load i32, i32* %digits.addr.bn_assign_2exp.Clone145, align 4
  %107 = load i32*, i32** %a.addr.bn_assign_2exp.Clone147, align 4
  br label %entry.bn_assign_zero.Clone.bn_assign_2exp.Clone148

entry.bn_assign_zero.Clone.bn_assign_2exp.Clone148: ; preds = %entry.bn_assign_2exp.Clone144
  %digits.addr.bn_assign_zero.Clone.bn_assign_2exp.Clone149 = alloca i32, align 4
  %a.addr.bn_assign_zero.Clone.bn_assign_2exp.Clone150 = alloca i32*, align 4
  %i.bn_assign_zero.Clone.bn_assign_2exp.Clone151 = alloca i32, align 4
  store i32 %106, i32* %digits.addr.bn_assign_zero.Clone.bn_assign_2exp.Clone149, align 4
  store i32* %107, i32** %a.addr.bn_assign_zero.Clone.bn_assign_2exp.Clone150, align 4
  store i32 0, i32* %i.bn_assign_zero.Clone.bn_assign_2exp.Clone151, align 4
  br label %for.cond.bn_assign_zero.Clone.bn_assign_2exp.Clone152

for.cond.bn_assign_zero.Clone.bn_assign_2exp.Clone152: ; preds = %for.inc.bn_assign_zero.Clone.bn_assign_2exp.Clone156, %entry.bn_assign_zero.Clone.bn_assign_2exp.Clone148
  %108 = load i32, i32* %i.bn_assign_zero.Clone.bn_assign_2exp.Clone151, align 4
  %109 = load i32, i32* %digits.addr.bn_assign_zero.Clone.bn_assign_2exp.Clone149, align 4
  %cmp.bn_assign_zero.Clone.bn_assign_2exp.Clone153 = icmp ult i32 %108, %109
  br i1 %cmp.bn_assign_zero.Clone.bn_assign_2exp.Clone153, label %for.body.bn_assign_zero.Clone.bn_assign_2exp.Clone154, label %for.end.bn_assign_zero.Clone.bn_assign_2exp.Clone158

for.body.bn_assign_zero.Clone.bn_assign_2exp.Clone154: ; preds = %for.cond.bn_assign_zero.Clone.bn_assign_2exp.Clone152
  %110 = load i32*, i32** %a.addr.bn_assign_zero.Clone.bn_assign_2exp.Clone150, align 4
  %111 = load i32, i32* %i.bn_assign_zero.Clone.bn_assign_2exp.Clone151, align 4
  %arrayidx.bn_assign_zero.Clone.bn_assign_2exp.Clone155 = getelementptr inbounds i32, i32* %110, i32 %111
  store i32 0, i32* %arrayidx.bn_assign_zero.Clone.bn_assign_2exp.Clone155, align 4
  br label %for.inc.bn_assign_zero.Clone.bn_assign_2exp.Clone156

for.inc.bn_assign_zero.Clone.bn_assign_2exp.Clone156: ; preds = %for.body.bn_assign_zero.Clone.bn_assign_2exp.Clone154
  %112 = load i32, i32* %i.bn_assign_zero.Clone.bn_assign_2exp.Clone151, align 4
  %inc.bn_assign_zero.Clone.bn_assign_2exp.Clone157 = add i32 %112, 1
  store i32 %inc.bn_assign_zero.Clone.bn_assign_2exp.Clone157, i32* %i.bn_assign_zero.Clone.bn_assign_2exp.Clone151, align 4
  br label %for.cond.bn_assign_zero.Clone.bn_assign_2exp.Clone152

for.end.bn_assign_zero.Clone.bn_assign_2exp.Clone158: ; preds = %for.cond.bn_assign_zero.Clone.bn_assign_2exp.Clone152
  br label %entry.Split.bn_assign_2exp.Clone159

entry.Split.bn_assign_2exp.Clone159:              ; preds = %for.end.bn_assign_zero.Clone.bn_assign_2exp.Clone158
  %113 = load i32, i32* %b.addr.bn_assign_2exp.Clone146, align 4
  %114 = load i32, i32* %digits.addr.bn_assign_2exp.Clone145, align 4
  %mul.bn_assign_2exp.Clone160 = mul i32 %114, 32
  %cmp.bn_assign_2exp.Clone161 = icmp uge i32 %113, %mul.bn_assign_2exp.Clone160
  br i1 %cmp.bn_assign_2exp.Clone161, label %if.then.bn_assign_2exp.Clone162, label %if.end.bn_assign_2exp.Clone163

if.then.bn_assign_2exp.Clone162:                  ; preds = %entry.Split.bn_assign_2exp.Clone159
  br label %return.bn_assign_2exp.Clone168

if.end.bn_assign_2exp.Clone163:                   ; preds = %entry.Split.bn_assign_2exp.Clone159
  %115 = load i32, i32* %b.addr.bn_assign_2exp.Clone146, align 4
  %rem.bn_assign_2exp.Clone164 = urem i32 %115, 32
  %shl.bn_assign_2exp.Clone165 = shl i32 1, %rem.bn_assign_2exp.Clone164
  %116 = load i32*, i32** %a.addr.bn_assign_2exp.Clone147, align 4
  %117 = load i32, i32* %b.addr.bn_assign_2exp.Clone146, align 4
  %div.bn_assign_2exp.Clone166 = udiv i32 %117, 32
  %arrayidx.bn_assign_2exp.Clone167 = getelementptr inbounds i32, i32* %116, i32 %div.bn_assign_2exp.Clone166
  store i32 %shl.bn_assign_2exp.Clone165, i32* %arrayidx.bn_assign_2exp.Clone167, align 4
  br label %return.bn_assign_2exp.Clone168

return.bn_assign_2exp.Clone168:                   ; preds = %if.end.bn_assign_2exp.Clone163, %if.then.bn_assign_2exp.Clone162
  br label %do.end.Split143

do.end.Split143:                                  ; preds = %return.bn_assign_2exp.Clone168
  %118 = load i32, i32* %pdigits, align 4
  %119 = load i32, i32* %qbits, align 4
  %sub39 = sub i32 %119, 2
  %arraydecay40 = getelementptr inbounds [65 x i32], [65 x i32]* %u, i32 0, i32 0
  br label %entry.bn_assign_2exp.Clone

entry.bn_assign_2exp.Clone:                       ; preds = %do.end.Split143
  %digits.addr.bn_assign_2exp.Clone = alloca i32, align 4
  %b.addr.bn_assign_2exp.Clone = alloca i32, align 4
  %a.addr.bn_assign_2exp.Clone = alloca i32*, align 4
  store i32 %118, i32* %digits.addr.bn_assign_2exp.Clone, align 4
  store i32 %sub39, i32* %b.addr.bn_assign_2exp.Clone, align 4
  store i32* %arraydecay40, i32** %a.addr.bn_assign_2exp.Clone, align 4
  %120 = load i32, i32* %digits.addr.bn_assign_2exp.Clone, align 4
  %121 = load i32*, i32** %a.addr.bn_assign_2exp.Clone, align 4
  br label %entry.bn_assign_zero.Clone.bn_assign_2exp.Clone

entry.bn_assign_zero.Clone.bn_assign_2exp.Clone:  ; preds = %entry.bn_assign_2exp.Clone
  %digits.addr.bn_assign_zero.Clone.bn_assign_2exp.Clone = alloca i32, align 4
  %a.addr.bn_assign_zero.Clone.bn_assign_2exp.Clone = alloca i32*, align 4
  %i.bn_assign_zero.Clone.bn_assign_2exp.Clone = alloca i32, align 4
  store i32 %120, i32* %digits.addr.bn_assign_zero.Clone.bn_assign_2exp.Clone, align 4
  store i32* %121, i32** %a.addr.bn_assign_zero.Clone.bn_assign_2exp.Clone, align 4
  store i32 0, i32* %i.bn_assign_zero.Clone.bn_assign_2exp.Clone, align 4
  br label %for.cond.bn_assign_zero.Clone.bn_assign_2exp.Clone

for.cond.bn_assign_zero.Clone.bn_assign_2exp.Clone: ; preds = %for.inc.bn_assign_zero.Clone.bn_assign_2exp.Clone, %entry.bn_assign_zero.Clone.bn_assign_2exp.Clone
  %122 = load i32, i32* %i.bn_assign_zero.Clone.bn_assign_2exp.Clone, align 4
  %123 = load i32, i32* %digits.addr.bn_assign_zero.Clone.bn_assign_2exp.Clone, align 4
  %cmp.bn_assign_zero.Clone.bn_assign_2exp.Clone = icmp ult i32 %122, %123
  br i1 %cmp.bn_assign_zero.Clone.bn_assign_2exp.Clone, label %for.body.bn_assign_zero.Clone.bn_assign_2exp.Clone, label %for.end.bn_assign_zero.Clone.bn_assign_2exp.Clone

for.body.bn_assign_zero.Clone.bn_assign_2exp.Clone: ; preds = %for.cond.bn_assign_zero.Clone.bn_assign_2exp.Clone
  %124 = load i32*, i32** %a.addr.bn_assign_zero.Clone.bn_assign_2exp.Clone, align 4
  %125 = load i32, i32* %i.bn_assign_zero.Clone.bn_assign_2exp.Clone, align 4
  %arrayidx.bn_assign_zero.Clone.bn_assign_2exp.Clone = getelementptr inbounds i32, i32* %124, i32 %125
  store i32 0, i32* %arrayidx.bn_assign_zero.Clone.bn_assign_2exp.Clone, align 4
  br label %for.inc.bn_assign_zero.Clone.bn_assign_2exp.Clone

for.inc.bn_assign_zero.Clone.bn_assign_2exp.Clone: ; preds = %for.body.bn_assign_zero.Clone.bn_assign_2exp.Clone
  %126 = load i32, i32* %i.bn_assign_zero.Clone.bn_assign_2exp.Clone, align 4
  %inc.bn_assign_zero.Clone.bn_assign_2exp.Clone = add i32 %126, 1
  store i32 %inc.bn_assign_zero.Clone.bn_assign_2exp.Clone, i32* %i.bn_assign_zero.Clone.bn_assign_2exp.Clone, align 4
  br label %for.cond.bn_assign_zero.Clone.bn_assign_2exp.Clone

for.end.bn_assign_zero.Clone.bn_assign_2exp.Clone: ; preds = %for.cond.bn_assign_zero.Clone.bn_assign_2exp.Clone
  br label %entry.Split.bn_assign_2exp.Clone

entry.Split.bn_assign_2exp.Clone:                 ; preds = %for.end.bn_assign_zero.Clone.bn_assign_2exp.Clone
  %127 = load i32, i32* %b.addr.bn_assign_2exp.Clone, align 4
  %128 = load i32, i32* %digits.addr.bn_assign_2exp.Clone, align 4
  %mul.bn_assign_2exp.Clone = mul i32 %128, 32
  %cmp.bn_assign_2exp.Clone = icmp uge i32 %127, %mul.bn_assign_2exp.Clone
  br i1 %cmp.bn_assign_2exp.Clone, label %if.then.bn_assign_2exp.Clone, label %if.end.bn_assign_2exp.Clone

if.then.bn_assign_2exp.Clone:                     ; preds = %entry.Split.bn_assign_2exp.Clone
  br label %return.bn_assign_2exp.Clone

if.end.bn_assign_2exp.Clone:                      ; preds = %entry.Split.bn_assign_2exp.Clone
  %129 = load i32, i32* %b.addr.bn_assign_2exp.Clone, align 4
  %rem.bn_assign_2exp.Clone = urem i32 %129, 32
  %shl.bn_assign_2exp.Clone = shl i32 1, %rem.bn_assign_2exp.Clone
  %130 = load i32*, i32** %a.addr.bn_assign_2exp.Clone, align 4
  %131 = load i32, i32* %b.addr.bn_assign_2exp.Clone, align 4
  %div.bn_assign_2exp.Clone = udiv i32 %131, 32
  %arrayidx.bn_assign_2exp.Clone = getelementptr inbounds i32, i32* %130, i32 %div.bn_assign_2exp.Clone
  store i32 %shl.bn_assign_2exp.Clone, i32* %arrayidx.bn_assign_2exp.Clone, align 4
  br label %return.bn_assign_2exp.Clone

return.bn_assign_2exp.Clone:                      ; preds = %if.end.bn_assign_2exp.Clone, %if.then.bn_assign_2exp.Clone
  br label %do.end.Split142

do.end.Split142:                                  ; preds = %return.bn_assign_2exp.Clone
  %132 = load i32, i32* %pdigits, align 4
  %arraydecay41 = getelementptr inbounds [65 x i32], [65 x i32]* %u, i32 0, i32 0
  %arraydecay42 = getelementptr inbounds [65 x i32], [65 x i32]* %t, i32 0, i32 0
  %arraydecay43 = getelementptr inbounds [65 x i32], [65 x i32]* %t, i32 0, i32 0
  br label %entry.bn_add.Clone49

entry.bn_add.Clone49:                             ; preds = %do.end.Split142
  %digits.addr.bn_add.Clone50 = alloca i32, align 4
  %c.addr.bn_add.Clone51 = alloca i32*, align 4
  %b.addr.bn_add.Clone52 = alloca i32*, align 4
  %a.addr.bn_add.Clone53 = alloca i32*, align 4
  %ai.bn_add.Clone54 = alloca i32, align 4
  %carry.bn_add.Clone55 = alloca i32, align 4
  %i.bn_add.Clone56 = alloca i32, align 4
  store i32 %132, i32* %digits.addr.bn_add.Clone50, align 4
  store i32* %arraydecay41, i32** %c.addr.bn_add.Clone51, align 4
  store i32* %arraydecay42, i32** %b.addr.bn_add.Clone52, align 4
  store i32* %arraydecay43, i32** %a.addr.bn_add.Clone53, align 4
  store i32 0, i32* %carry.bn_add.Clone55, align 4
  store i32 0, i32* %i.bn_add.Clone56, align 4
  br label %for.cond.bn_add.Clone57

for.cond.bn_add.Clone57:                          ; preds = %for.inc.bn_add.Clone75, %entry.bn_add.Clone49
  %133 = load i32, i32* %i.bn_add.Clone56, align 4
  %134 = load i32, i32* %digits.addr.bn_add.Clone50, align 4
  %cmp.bn_add.Clone58 = icmp ult i32 %133, %134
  br i1 %cmp.bn_add.Clone58, label %for.body.bn_add.Clone59, label %for.end.bn_add.Clone77

for.body.bn_add.Clone59:                          ; preds = %for.cond.bn_add.Clone57
  %135 = load i32*, i32** %b.addr.bn_add.Clone52, align 4
  %136 = load i32, i32* %i.bn_add.Clone56, align 4
  %arrayidx.bn_add.Clone60 = getelementptr inbounds i32, i32* %135, i32 %136
  %137 = load i32, i32* %arrayidx.bn_add.Clone60, align 4
  %138 = load i32, i32* %carry.bn_add.Clone55, align 4
  %add.bn_add.Clone61 = add i32 %137, %138
  store i32 %add.bn_add.Clone61, i32* %ai.bn_add.Clone54, align 4
  %139 = load i32, i32* %carry.bn_add.Clone55, align 4
  %cmp1.bn_add.Clone62 = icmp ult i32 %add.bn_add.Clone61, %139
  br i1 %cmp1.bn_add.Clone62, label %if.then.bn_add.Clone63, label %if.else.bn_add.Clone65

if.then.bn_add.Clone63:                           ; preds = %for.body.bn_add.Clone59
  %140 = load i32*, i32** %c.addr.bn_add.Clone51, align 4
  %141 = load i32, i32* %i.bn_add.Clone56, align 4
  %arrayidx2.bn_add.Clone64 = getelementptr inbounds i32, i32* %140, i32 %141
  %142 = load i32, i32* %arrayidx2.bn_add.Clone64, align 4
  store i32 %142, i32* %ai.bn_add.Clone54, align 4
  br label %if.end9.bn_add.Clone73

if.else.bn_add.Clone65:                           ; preds = %for.body.bn_add.Clone59
  %143 = load i32*, i32** %c.addr.bn_add.Clone51, align 4
  %144 = load i32, i32* %i.bn_add.Clone56, align 4
  %arrayidx3.bn_add.Clone66 = getelementptr inbounds i32, i32* %143, i32 %144
  %145 = load i32, i32* %arrayidx3.bn_add.Clone66, align 4
  %146 = load i32, i32* %ai.bn_add.Clone54, align 4
  %add4.bn_add.Clone67 = add i32 %146, %145
  store i32 %add4.bn_add.Clone67, i32* %ai.bn_add.Clone54, align 4
  %147 = load i32*, i32** %c.addr.bn_add.Clone51, align 4
  %148 = load i32, i32* %i.bn_add.Clone56, align 4
  %arrayidx5.bn_add.Clone68 = getelementptr inbounds i32, i32* %147, i32 %148
  %149 = load i32, i32* %arrayidx5.bn_add.Clone68, align 4
  %cmp6.bn_add.Clone69 = icmp ult i32 %add4.bn_add.Clone67, %149
  br i1 %cmp6.bn_add.Clone69, label %if.then7.bn_add.Clone70, label %if.else8.bn_add.Clone71

if.then7.bn_add.Clone70:                          ; preds = %if.else.bn_add.Clone65
  store i32 1, i32* %carry.bn_add.Clone55, align 4
  br label %if.end.bn_add.Clone72

if.else8.bn_add.Clone71:                          ; preds = %if.else.bn_add.Clone65
  store i32 0, i32* %carry.bn_add.Clone55, align 4
  br label %if.end.bn_add.Clone72

if.end.bn_add.Clone72:                            ; preds = %if.else8.bn_add.Clone71, %if.then7.bn_add.Clone70
  br label %if.end9.bn_add.Clone73

if.end9.bn_add.Clone73:                           ; preds = %if.end.bn_add.Clone72, %if.then.bn_add.Clone63
  %150 = load i32, i32* %ai.bn_add.Clone54, align 4
  %151 = load i32*, i32** %a.addr.bn_add.Clone53, align 4
  %152 = load i32, i32* %i.bn_add.Clone56, align 4
  %arrayidx10.bn_add.Clone74 = getelementptr inbounds i32, i32* %151, i32 %152
  store i32 %150, i32* %arrayidx10.bn_add.Clone74, align 4
  br label %for.inc.bn_add.Clone75

for.inc.bn_add.Clone75:                           ; preds = %if.end9.bn_add.Clone73
  %153 = load i32, i32* %i.bn_add.Clone56, align 4
  %inc.bn_add.Clone76 = add i32 %153, 1
  store i32 %inc.bn_add.Clone76, i32* %i.bn_add.Clone56, align 4
  br label %for.cond.bn_add.Clone57

for.end.bn_add.Clone77:                           ; preds = %for.cond.bn_add.Clone57
  %154 = load i32, i32* %carry.bn_add.Clone55, align 4
  store i32 %154, i32* %RetValuePtr78
  br label %do.end.Split48

do.end.Split48:                                   ; preds = %for.end.bn_add.Clone77
  %RetValue79 = load i32, i32* %RetValuePtr78
  %155 = load i32, i32* %pdigits, align 4
  %arraydecay45 = getelementptr inbounds [65 x i32], [65 x i32]* %v, i32 0, i32 0
  br label %entry.bn_assign_zero.Clone2

entry.bn_assign_zero.Clone2:                      ; preds = %do.end.Split48
  %digits.addr.bn_assign_zero.Clone3 = alloca i32, align 4
  %a.addr.bn_assign_zero.Clone4 = alloca i32*, align 4
  %i.bn_assign_zero.Clone5 = alloca i32, align 4
  store i32 %155, i32* %digits.addr.bn_assign_zero.Clone3, align 4
  store i32* %arraydecay45, i32** %a.addr.bn_assign_zero.Clone4, align 4
  store i32 0, i32* %i.bn_assign_zero.Clone5, align 4
  br label %for.cond.bn_assign_zero.Clone6

for.cond.bn_assign_zero.Clone6:                   ; preds = %for.inc.bn_assign_zero.Clone10, %entry.bn_assign_zero.Clone2
  %156 = load i32, i32* %i.bn_assign_zero.Clone5, align 4
  %157 = load i32, i32* %digits.addr.bn_assign_zero.Clone3, align 4
  %cmp.bn_assign_zero.Clone7 = icmp ult i32 %156, %157
  br i1 %cmp.bn_assign_zero.Clone7, label %for.body.bn_assign_zero.Clone8, label %for.end.bn_assign_zero.Clone12

for.body.bn_assign_zero.Clone8:                   ; preds = %for.cond.bn_assign_zero.Clone6
  %158 = load i32*, i32** %a.addr.bn_assign_zero.Clone4, align 4
  %159 = load i32, i32* %i.bn_assign_zero.Clone5, align 4
  %arrayidx.bn_assign_zero.Clone9 = getelementptr inbounds i32, i32* %158, i32 %159
  store i32 0, i32* %arrayidx.bn_assign_zero.Clone9, align 4
  br label %for.inc.bn_assign_zero.Clone10

for.inc.bn_assign_zero.Clone10:                   ; preds = %for.body.bn_assign_zero.Clone8
  %160 = load i32, i32* %i.bn_assign_zero.Clone5, align 4
  %inc.bn_assign_zero.Clone11 = add i32 %160, 1
  store i32 %inc.bn_assign_zero.Clone11, i32* %i.bn_assign_zero.Clone5, align 4
  br label %for.cond.bn_assign_zero.Clone6

for.end.bn_assign_zero.Clone12:                   ; preds = %for.cond.bn_assign_zero.Clone6
  br label %do.end.Split1

do.end.Split1:                                    ; preds = %for.end.bn_assign_zero.Clone12
  %arrayidx46 = getelementptr inbounds [65 x i32], [65 x i32]* %v, i32 0, i32 0
  store i32 1, i32* %arrayidx46, align 4
  %161 = load i32, i32* %pdigits, align 4
  %arraydecay47 = getelementptr inbounds [65 x i32], [65 x i32]* %v, i32 0, i32 0
  %arraydecay48 = getelementptr inbounds [65 x i32], [65 x i32]* %t, i32 0, i32 0
  %arraydecay49 = getelementptr inbounds [65 x i32], [65 x i32]* %v, i32 0, i32 0
  %call50 = call i32 @bn_sub(i32* %arraydecay49, i32* %arraydecay48, i32* %arraydecay47, i32 %161)
  %162 = load i32, i32* %pdigits, align 4
  %arraydecay51 = getelementptr inbounds [65 x i32], [65 x i32]* %v, i32 0, i32 0
  %arraydecay52 = getelementptr inbounds [65 x i32], [65 x i32]* %u, i32 0, i32 0
  %arraydecay53 = getelementptr inbounds [65 x i32], [65 x i32]* %u, i32 0, i32 0
  br label %entry.bn_add.Clone

entry.bn_add.Clone:                               ; preds = %do.end.Split1
  %digits.addr.bn_add.Clone = alloca i32, align 4
  %c.addr.bn_add.Clone = alloca i32*, align 4
  %b.addr.bn_add.Clone = alloca i32*, align 4
  %a.addr.bn_add.Clone = alloca i32*, align 4
  %ai.bn_add.Clone = alloca i32, align 4
  %carry.bn_add.Clone = alloca i32, align 4
  %i.bn_add.Clone = alloca i32, align 4
  store i32 %162, i32* %digits.addr.bn_add.Clone, align 4
  store i32* %arraydecay51, i32** %c.addr.bn_add.Clone, align 4
  store i32* %arraydecay52, i32** %b.addr.bn_add.Clone, align 4
  store i32* %arraydecay53, i32** %a.addr.bn_add.Clone, align 4
  store i32 0, i32* %carry.bn_add.Clone, align 4
  store i32 0, i32* %i.bn_add.Clone, align 4
  br label %for.cond.bn_add.Clone

for.cond.bn_add.Clone:                            ; preds = %for.inc.bn_add.Clone, %entry.bn_add.Clone
  %163 = load i32, i32* %i.bn_add.Clone, align 4
  %164 = load i32, i32* %digits.addr.bn_add.Clone, align 4
  %cmp.bn_add.Clone = icmp ult i32 %163, %164
  br i1 %cmp.bn_add.Clone, label %for.body.bn_add.Clone, label %for.end.bn_add.Clone

for.body.bn_add.Clone:                            ; preds = %for.cond.bn_add.Clone
  %165 = load i32*, i32** %b.addr.bn_add.Clone, align 4
  %166 = load i32, i32* %i.bn_add.Clone, align 4
  %arrayidx.bn_add.Clone = getelementptr inbounds i32, i32* %165, i32 %166
  %167 = load i32, i32* %arrayidx.bn_add.Clone, align 4
  %168 = load i32, i32* %carry.bn_add.Clone, align 4
  %add.bn_add.Clone = add i32 %167, %168
  store i32 %add.bn_add.Clone, i32* %ai.bn_add.Clone, align 4
  %169 = load i32, i32* %carry.bn_add.Clone, align 4
  %cmp1.bn_add.Clone = icmp ult i32 %add.bn_add.Clone, %169
  br i1 %cmp1.bn_add.Clone, label %if.then.bn_add.Clone, label %if.else.bn_add.Clone

if.then.bn_add.Clone:                             ; preds = %for.body.bn_add.Clone
  %170 = load i32*, i32** %c.addr.bn_add.Clone, align 4
  %171 = load i32, i32* %i.bn_add.Clone, align 4
  %arrayidx2.bn_add.Clone = getelementptr inbounds i32, i32* %170, i32 %171
  %172 = load i32, i32* %arrayidx2.bn_add.Clone, align 4
  store i32 %172, i32* %ai.bn_add.Clone, align 4
  br label %if.end9.bn_add.Clone

if.else.bn_add.Clone:                             ; preds = %for.body.bn_add.Clone
  %173 = load i32*, i32** %c.addr.bn_add.Clone, align 4
  %174 = load i32, i32* %i.bn_add.Clone, align 4
  %arrayidx3.bn_add.Clone = getelementptr inbounds i32, i32* %173, i32 %174
  %175 = load i32, i32* %arrayidx3.bn_add.Clone, align 4
  %176 = load i32, i32* %ai.bn_add.Clone, align 4
  %add4.bn_add.Clone = add i32 %176, %175
  store i32 %add4.bn_add.Clone, i32* %ai.bn_add.Clone, align 4
  %177 = load i32*, i32** %c.addr.bn_add.Clone, align 4
  %178 = load i32, i32* %i.bn_add.Clone, align 4
  %arrayidx5.bn_add.Clone = getelementptr inbounds i32, i32* %177, i32 %178
  %179 = load i32, i32* %arrayidx5.bn_add.Clone, align 4
  %cmp6.bn_add.Clone = icmp ult i32 %add4.bn_add.Clone, %179
  br i1 %cmp6.bn_add.Clone, label %if.then7.bn_add.Clone, label %if.else8.bn_add.Clone

if.then7.bn_add.Clone:                            ; preds = %if.else.bn_add.Clone
  store i32 1, i32* %carry.bn_add.Clone, align 4
  br label %if.end.bn_add.Clone

if.else8.bn_add.Clone:                            ; preds = %if.else.bn_add.Clone
  store i32 0, i32* %carry.bn_add.Clone, align 4
  br label %if.end.bn_add.Clone

if.end.bn_add.Clone:                              ; preds = %if.else8.bn_add.Clone, %if.then7.bn_add.Clone
  br label %if.end9.bn_add.Clone

if.end9.bn_add.Clone:                             ; preds = %if.end.bn_add.Clone, %if.then.bn_add.Clone
  %180 = load i32, i32* %ai.bn_add.Clone, align 4
  %181 = load i32*, i32** %a.addr.bn_add.Clone, align 4
  %182 = load i32, i32* %i.bn_add.Clone, align 4
  %arrayidx10.bn_add.Clone = getelementptr inbounds i32, i32* %181, i32 %182
  store i32 %180, i32* %arrayidx10.bn_add.Clone, align 4
  br label %for.inc.bn_add.Clone

for.inc.bn_add.Clone:                             ; preds = %if.end9.bn_add.Clone
  %183 = load i32, i32* %i.bn_add.Clone, align 4
  %inc.bn_add.Clone = add i32 %183, 1
  store i32 %inc.bn_add.Clone, i32* %i.bn_add.Clone, align 4
  br label %for.cond.bn_add.Clone

for.end.bn_add.Clone:                             ; preds = %for.cond.bn_add.Clone
  %184 = load i32, i32* %carry.bn_add.Clone, align 4
  store i32 %184, i32* %RetValuePtr
  br label %do.end.Split1.Split

do.end.Split1.Split:                              ; preds = %for.end.bn_add.Clone
  %RetValue = load i32, i32* %RetValuePtr
  %185 = load i32, i32* %pdigits, align 4
  %arraydecay55 = getelementptr inbounds [65 x i32], [65 x i32]* %v, i32 0, i32 0
  br label %entry.bn_assign_zero.Clone

entry.bn_assign_zero.Clone:                       ; preds = %do.end.Split1.Split
  %digits.addr.bn_assign_zero.Clone = alloca i32, align 4
  %a.addr.bn_assign_zero.Clone = alloca i32*, align 4
  %i.bn_assign_zero.Clone = alloca i32, align 4
  store i32 %185, i32* %digits.addr.bn_assign_zero.Clone, align 4
  store i32* %arraydecay55, i32** %a.addr.bn_assign_zero.Clone, align 4
  store i32 0, i32* %i.bn_assign_zero.Clone, align 4
  br label %for.cond.bn_assign_zero.Clone

for.cond.bn_assign_zero.Clone:                    ; preds = %for.inc.bn_assign_zero.Clone, %entry.bn_assign_zero.Clone
  %186 = load i32, i32* %i.bn_assign_zero.Clone, align 4
  %187 = load i32, i32* %digits.addr.bn_assign_zero.Clone, align 4
  %cmp.bn_assign_zero.Clone = icmp ult i32 %186, %187
  br i1 %cmp.bn_assign_zero.Clone, label %for.body.bn_assign_zero.Clone, label %for.end.bn_assign_zero.Clone

for.body.bn_assign_zero.Clone:                    ; preds = %for.cond.bn_assign_zero.Clone
  %188 = load i32*, i32** %a.addr.bn_assign_zero.Clone, align 4
  %189 = load i32, i32* %i.bn_assign_zero.Clone, align 4
  %arrayidx.bn_assign_zero.Clone = getelementptr inbounds i32, i32* %188, i32 %189
  store i32 0, i32* %arrayidx.bn_assign_zero.Clone, align 4
  br label %for.inc.bn_assign_zero.Clone

for.inc.bn_assign_zero.Clone:                     ; preds = %for.body.bn_assign_zero.Clone
  %190 = load i32, i32* %i.bn_assign_zero.Clone, align 4
  %inc.bn_assign_zero.Clone = add i32 %190, 1
  store i32 %inc.bn_assign_zero.Clone, i32* %i.bn_assign_zero.Clone, align 4
  br label %for.cond.bn_assign_zero.Clone

for.end.bn_assign_zero.Clone:                     ; preds = %for.cond.bn_assign_zero.Clone
  br label %do.end.Split

do.end.Split:                                     ; preds = %for.end.bn_assign_zero.Clone
  %arrayidx56 = getelementptr inbounds [65 x i32], [65 x i32]* %v, i32 0, i32 0
  store i32 2, i32* %arrayidx56, align 4
  br label %do.body57

do.body57:                                        ; preds = %do.cond66, %do.end.Split
  %191 = load i32, i32* %pdigits, align 4
  %arraydecay58 = getelementptr inbounds [65 x i32], [65 x i32]* %v, i32 0, i32 0
  %arraydecay59 = getelementptr inbounds [65 x i32], [65 x i32]* %u, i32 0, i32 0
  %arraydecay60 = getelementptr inbounds [65 x i32], [65 x i32]* %t, i32 0, i32 0
  %arraydecay61 = getelementptr inbounds [65 x i32], [65 x i32]* %q, i32 0, i32 0
  %call62 = call i32 @generate_prime(i32* %arraydecay61, i32* %arraydecay60, i32* %arraydecay59, i32* %arraydecay58, i32 %191)
  store i32 %call62, i32* %status, align 4
  %192 = load i32, i32* %status, align 4
  %cmp63 = icmp ne i32 %192, 0
  br i1 %cmp63, label %if.then64, label %if.end65

if.then64:                                        ; preds = %do.body57
  %193 = load i32, i32* %status, align 4
  store i32 %193, i32* %retval, align 4
  br label %return

if.end65:                                         ; preds = %do.body57
  br label %do.cond66

do.cond66:                                        ; preds = %if.end65
  %arraydecay67 = getelementptr inbounds [65 x i32], [65 x i32]* %e, i32 0, i32 0
  %194 = load i32, i32* %pdigits, align 4
  %arraydecay68 = getelementptr inbounds [65 x i32], [65 x i32]* %q, i32 0, i32 0
  %call69 = call i32 @rsa_filter(i32* %arraydecay68, i32 %194, i32* %arraydecay67, i32 1)
  %tobool70 = icmp ne i32 %call69, 0
  %lnot71 = xor i1 %tobool70, true
  br i1 %lnot71, label %do.body57, label %CallOutFuncBB

CallOutFuncBB:                                    ; preds = %do.cond66
  call void @do.end72.OutLineFunc(i32* %pdigits, [65 x i32]* %q, [65 x i32]* %p, [65 x i32]* %t, [65 x i32]* %n, [65 x i32]* %q_inv, [65 x i32]* %p_minus1, [65 x i32]* %q_minus1, [65 x i32]* %phi_n, i32* %ndigits, [65 x i32]* %e, [65 x i32]* %d, [65 x i32]* %dp, [65 x i32]* %dq, i32* %key_bits.addr, %struct.rsa_sk_t** %sk.addr, %struct.rsa_pk_t** %pk.addr, i32* %retval)
  %195 = getelementptr inbounds %Struct.RetValue.4, %Struct.RetValue.4* @Struct.RetValue.8, i32 0, i32 0
  %196 = load i32*, i32** %195, align 4
  %197 = load i32, i32* %196, align 4
  store i32 %197, i32* %retval
  br label %return

return:                                           ; preds = %CallOutFuncBB, %if.then64, %if.then32, %if.then
  %198 = load i32, i32* %retval, align 4
  ret i32 %198
}

; Function Attrs: noinline optnone
define internal i32 @rsa_filter(i32* %a, i32 %adigits, i32* %b, i32 %bdigits) #2 {
entry:
  %bdigits.addr = alloca i32, align 4
  %b.addr = alloca i32*, align 4
  %adigits.addr = alloca i32, align 4
  %a.addr = alloca i32*, align 4
  %status = alloca i32, align 4
  %a_minus1 = alloca [65 x i32], align 4
  %t = alloca [65 x i32], align 4
  store i32 %bdigits, i32* %bdigits.addr, align 4
  store i32* %b, i32** %b.addr, align 4
  store i32 %adigits, i32* %adigits.addr, align 4
  store i32* %a, i32** %a.addr, align 4
  %0 = load i32, i32* %adigits.addr, align 4
  %arraydecay = getelementptr inbounds [65 x i32], [65 x i32]* %t, i32 0, i32 0
  br label %entry.bn_assign_zero.Clone

entry.bn_assign_zero.Clone:                       ; preds = %entry
  %digits.addr.bn_assign_zero.Clone = alloca i32, align 4
  %a.addr.bn_assign_zero.Clone = alloca i32*, align 4
  %i.bn_assign_zero.Clone = alloca i32, align 4
  store i32 %0, i32* %digits.addr.bn_assign_zero.Clone, align 4
  store i32* %arraydecay, i32** %a.addr.bn_assign_zero.Clone, align 4
  store i32 0, i32* %i.bn_assign_zero.Clone, align 4
  br label %for.cond.bn_assign_zero.Clone

for.cond.bn_assign_zero.Clone:                    ; preds = %for.inc.bn_assign_zero.Clone, %entry.bn_assign_zero.Clone
  %1 = load i32, i32* %i.bn_assign_zero.Clone, align 4
  %2 = load i32, i32* %digits.addr.bn_assign_zero.Clone, align 4
  %cmp.bn_assign_zero.Clone = icmp ult i32 %1, %2
  br i1 %cmp.bn_assign_zero.Clone, label %for.body.bn_assign_zero.Clone, label %for.end.bn_assign_zero.Clone

for.body.bn_assign_zero.Clone:                    ; preds = %for.cond.bn_assign_zero.Clone
  %3 = load i32*, i32** %a.addr.bn_assign_zero.Clone, align 4
  %4 = load i32, i32* %i.bn_assign_zero.Clone, align 4
  %arrayidx.bn_assign_zero.Clone = getelementptr inbounds i32, i32* %3, i32 %4
  store i32 0, i32* %arrayidx.bn_assign_zero.Clone, align 4
  br label %for.inc.bn_assign_zero.Clone

for.inc.bn_assign_zero.Clone:                     ; preds = %for.body.bn_assign_zero.Clone
  %5 = load i32, i32* %i.bn_assign_zero.Clone, align 4
  %inc.bn_assign_zero.Clone = add i32 %5, 1
  store i32 %inc.bn_assign_zero.Clone, i32* %i.bn_assign_zero.Clone, align 4
  br label %for.cond.bn_assign_zero.Clone

for.end.bn_assign_zero.Clone:                     ; preds = %for.cond.bn_assign_zero.Clone
  br label %entry.Split

entry.Split:                                      ; preds = %for.end.bn_assign_zero.Clone
  %arrayidx = getelementptr inbounds [65 x i32], [65 x i32]* %t, i32 0, i32 0
  store i32 1, i32* %arrayidx, align 4
  %6 = load i32, i32* %adigits.addr, align 4
  %arraydecay1 = getelementptr inbounds [65 x i32], [65 x i32]* %t, i32 0, i32 0
  %7 = load i32*, i32** %a.addr, align 4
  %arraydecay2 = getelementptr inbounds [65 x i32], [65 x i32]* %a_minus1, i32 0, i32 0
  %call = call i32 @bn_sub(i32* %arraydecay2, i32* %7, i32* %arraydecay1, i32 %6)
  %8 = load i32, i32* %bdigits.addr, align 4
  %9 = load i32*, i32** %b.addr, align 4
  %10 = load i32, i32* %adigits.addr, align 4
  %arraydecay3 = getelementptr inbounds [65 x i32], [65 x i32]* %a_minus1, i32 0, i32 0
  %call4 = call i32 @relatively_prime(i32* %arraydecay3, i32 %10, i32* %9, i32 %8)
  store i32 %call4, i32* %status, align 4
  %arraydecay5 = getelementptr inbounds [65 x i32], [65 x i32]* %a_minus1, i32 0, i32 0
  %11 = bitcast i32* %arraydecay5 to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %11, i8 0, i32 260, i1 false)
  %12 = load i32, i32* %status, align 4
  ret i32 %12
}

; Function Attrs: noinline optnone
define internal i32 @relatively_prime(i32* %a, i32 %adigits, i32* %b, i32 %bdigits) #2 {
entry:
  %bdigits.addr = alloca i32, align 4
  %b.addr = alloca i32*, align 4
  %adigits.addr = alloca i32, align 4
  %a.addr = alloca i32*, align 4
  %status = alloca i32, align 4
  %t = alloca [65 x i32], align 4
  %u = alloca [65 x i32], align 4
  store i32 %bdigits, i32* %bdigits.addr, align 4
  store i32* %b, i32** %b.addr, align 4
  store i32 %adigits, i32* %adigits.addr, align 4
  store i32* %a, i32** %a.addr, align 4
  %0 = load i32, i32* %adigits.addr, align 4
  %arraydecay = getelementptr inbounds [65 x i32], [65 x i32]* %t, i32 0, i32 0
  %RetValuePtr = alloca i32, align 4
  br label %entry.bn_assign_zero.Clone2

entry.bn_assign_zero.Clone2:                      ; preds = %entry
  %digits.addr.bn_assign_zero.Clone3 = alloca i32, align 4
  %a.addr.bn_assign_zero.Clone4 = alloca i32*, align 4
  %i.bn_assign_zero.Clone5 = alloca i32, align 4
  store i32 %0, i32* %digits.addr.bn_assign_zero.Clone3, align 4
  store i32* %arraydecay, i32** %a.addr.bn_assign_zero.Clone4, align 4
  store i32 0, i32* %i.bn_assign_zero.Clone5, align 4
  br label %for.cond.bn_assign_zero.Clone6

for.cond.bn_assign_zero.Clone6:                   ; preds = %for.inc.bn_assign_zero.Clone10, %entry.bn_assign_zero.Clone2
  %1 = load i32, i32* %i.bn_assign_zero.Clone5, align 4
  %2 = load i32, i32* %digits.addr.bn_assign_zero.Clone3, align 4
  %cmp.bn_assign_zero.Clone7 = icmp ult i32 %1, %2
  br i1 %cmp.bn_assign_zero.Clone7, label %for.body.bn_assign_zero.Clone8, label %for.end.bn_assign_zero.Clone12

for.body.bn_assign_zero.Clone8:                   ; preds = %for.cond.bn_assign_zero.Clone6
  %3 = load i32*, i32** %a.addr.bn_assign_zero.Clone4, align 4
  %4 = load i32, i32* %i.bn_assign_zero.Clone5, align 4
  %arrayidx.bn_assign_zero.Clone9 = getelementptr inbounds i32, i32* %3, i32 %4
  store i32 0, i32* %arrayidx.bn_assign_zero.Clone9, align 4
  br label %for.inc.bn_assign_zero.Clone10

for.inc.bn_assign_zero.Clone10:                   ; preds = %for.body.bn_assign_zero.Clone8
  %5 = load i32, i32* %i.bn_assign_zero.Clone5, align 4
  %inc.bn_assign_zero.Clone11 = add i32 %5, 1
  store i32 %inc.bn_assign_zero.Clone11, i32* %i.bn_assign_zero.Clone5, align 4
  br label %for.cond.bn_assign_zero.Clone6

for.end.bn_assign_zero.Clone12:                   ; preds = %for.cond.bn_assign_zero.Clone6
  br label %entry.Split1

entry.Split1:                                     ; preds = %for.end.bn_assign_zero.Clone12
  %6 = load i32, i32* %bdigits.addr, align 4
  %7 = load i32*, i32** %b.addr, align 4
  %arraydecay1 = getelementptr inbounds [65 x i32], [65 x i32]* %t, i32 0, i32 0
  call void @bn_assign(i32* %arraydecay1, i32* %7, i32 %6)
  %8 = load i32, i32* %adigits.addr, align 4
  %arraydecay2 = getelementptr inbounds [65 x i32], [65 x i32]* %t, i32 0, i32 0
  %9 = load i32*, i32** %a.addr, align 4
  %arraydecay3 = getelementptr inbounds [65 x i32], [65 x i32]* %t, i32 0, i32 0
  call void @bn_gcd(i32* %arraydecay3, i32* %9, i32* %arraydecay2, i32 %8)
  %10 = load i32, i32* %adigits.addr, align 4
  %arraydecay4 = getelementptr inbounds [65 x i32], [65 x i32]* %u, i32 0, i32 0
  br label %entry.bn_assign_zero.Clone

entry.bn_assign_zero.Clone:                       ; preds = %entry.Split1
  %digits.addr.bn_assign_zero.Clone = alloca i32, align 4
  %a.addr.bn_assign_zero.Clone = alloca i32*, align 4
  %i.bn_assign_zero.Clone = alloca i32, align 4
  store i32 %10, i32* %digits.addr.bn_assign_zero.Clone, align 4
  store i32* %arraydecay4, i32** %a.addr.bn_assign_zero.Clone, align 4
  store i32 0, i32* %i.bn_assign_zero.Clone, align 4
  br label %for.cond.bn_assign_zero.Clone

for.cond.bn_assign_zero.Clone:                    ; preds = %for.inc.bn_assign_zero.Clone, %entry.bn_assign_zero.Clone
  %11 = load i32, i32* %i.bn_assign_zero.Clone, align 4
  %12 = load i32, i32* %digits.addr.bn_assign_zero.Clone, align 4
  %cmp.bn_assign_zero.Clone = icmp ult i32 %11, %12
  br i1 %cmp.bn_assign_zero.Clone, label %for.body.bn_assign_zero.Clone, label %for.end.bn_assign_zero.Clone

for.body.bn_assign_zero.Clone:                    ; preds = %for.cond.bn_assign_zero.Clone
  %13 = load i32*, i32** %a.addr.bn_assign_zero.Clone, align 4
  %14 = load i32, i32* %i.bn_assign_zero.Clone, align 4
  %arrayidx.bn_assign_zero.Clone = getelementptr inbounds i32, i32* %13, i32 %14
  store i32 0, i32* %arrayidx.bn_assign_zero.Clone, align 4
  br label %for.inc.bn_assign_zero.Clone

for.inc.bn_assign_zero.Clone:                     ; preds = %for.body.bn_assign_zero.Clone
  %15 = load i32, i32* %i.bn_assign_zero.Clone, align 4
  %inc.bn_assign_zero.Clone = add i32 %15, 1
  store i32 %inc.bn_assign_zero.Clone, i32* %i.bn_assign_zero.Clone, align 4
  br label %for.cond.bn_assign_zero.Clone

for.end.bn_assign_zero.Clone:                     ; preds = %for.cond.bn_assign_zero.Clone
  br label %entry.Split

entry.Split:                                      ; preds = %for.end.bn_assign_zero.Clone
  %arrayidx = getelementptr inbounds [65 x i32], [65 x i32]* %u, i32 0, i32 0
  store i32 1, i32* %arrayidx, align 4
  %16 = load i32, i32* %adigits.addr, align 4
  %arraydecay5 = getelementptr inbounds [65 x i32], [65 x i32]* %u, i32 0, i32 0
  %arraydecay6 = getelementptr inbounds [65 x i32], [65 x i32]* %t, i32 0, i32 0
  br label %entry.bn_cmp.Clone

entry.bn_cmp.Clone:                               ; preds = %entry.Split
  %retval.bn_cmp.Clone = alloca i32, align 4
  %digits.addr.bn_cmp.Clone = alloca i32, align 4
  %b.addr.bn_cmp.Clone = alloca i32*, align 4
  %a.addr.bn_cmp.Clone = alloca i32*, align 4
  %i.bn_cmp.Clone = alloca i32, align 4
  store i32 %16, i32* %digits.addr.bn_cmp.Clone, align 4
  store i32* %arraydecay5, i32** %b.addr.bn_cmp.Clone, align 4
  store i32* %arraydecay6, i32** %a.addr.bn_cmp.Clone, align 4
  %17 = load i32, i32* %digits.addr.bn_cmp.Clone, align 4
  %sub.bn_cmp.Clone = sub i32 %17, 1
  store i32 %sub.bn_cmp.Clone, i32* %i.bn_cmp.Clone, align 4
  br label %for.cond.bn_cmp.Clone

for.cond.bn_cmp.Clone:                            ; preds = %for.inc.bn_cmp.Clone, %entry.bn_cmp.Clone
  %18 = load i32, i32* %i.bn_cmp.Clone, align 4
  %cmp.bn_cmp.Clone = icmp sge i32 %18, 0
  br i1 %cmp.bn_cmp.Clone, label %for.body.bn_cmp.Clone, label %for.end.bn_cmp.Clone

for.body.bn_cmp.Clone:                            ; preds = %for.cond.bn_cmp.Clone
  %19 = load i32*, i32** %a.addr.bn_cmp.Clone, align 4
  %20 = load i32, i32* %i.bn_cmp.Clone, align 4
  %arrayidx.bn_cmp.Clone = getelementptr inbounds i32, i32* %19, i32 %20
  %21 = load i32, i32* %arrayidx.bn_cmp.Clone, align 4
  %22 = load i32*, i32** %b.addr.bn_cmp.Clone, align 4
  %23 = load i32, i32* %i.bn_cmp.Clone, align 4
  %arrayidx1.bn_cmp.Clone = getelementptr inbounds i32, i32* %22, i32 %23
  %24 = load i32, i32* %arrayidx1.bn_cmp.Clone, align 4
  %cmp2.bn_cmp.Clone = icmp ugt i32 %21, %24
  br i1 %cmp2.bn_cmp.Clone, label %if.then.bn_cmp.Clone, label %if.end.bn_cmp.Clone

if.then.bn_cmp.Clone:                             ; preds = %for.body.bn_cmp.Clone
  store i32 1, i32* %retval.bn_cmp.Clone, align 4
  br label %return.bn_cmp.Clone

if.end.bn_cmp.Clone:                              ; preds = %for.body.bn_cmp.Clone
  %25 = load i32*, i32** %a.addr.bn_cmp.Clone, align 4
  %26 = load i32, i32* %i.bn_cmp.Clone, align 4
  %arrayidx3.bn_cmp.Clone = getelementptr inbounds i32, i32* %25, i32 %26
  %27 = load i32, i32* %arrayidx3.bn_cmp.Clone, align 4
  %28 = load i32*, i32** %b.addr.bn_cmp.Clone, align 4
  %29 = load i32, i32* %i.bn_cmp.Clone, align 4
  %arrayidx4.bn_cmp.Clone = getelementptr inbounds i32, i32* %28, i32 %29
  %30 = load i32, i32* %arrayidx4.bn_cmp.Clone, align 4
  %cmp5.bn_cmp.Clone = icmp ult i32 %27, %30
  br i1 %cmp5.bn_cmp.Clone, label %if.then6.bn_cmp.Clone, label %if.end7.bn_cmp.Clone

if.then6.bn_cmp.Clone:                            ; preds = %if.end.bn_cmp.Clone
  store i32 -1, i32* %retval.bn_cmp.Clone, align 4
  br label %return.bn_cmp.Clone

if.end7.bn_cmp.Clone:                             ; preds = %if.end.bn_cmp.Clone
  br label %for.inc.bn_cmp.Clone

for.inc.bn_cmp.Clone:                             ; preds = %if.end7.bn_cmp.Clone
  %31 = load i32, i32* %i.bn_cmp.Clone, align 4
  %dec.bn_cmp.Clone = add nsw i32 %31, -1
  store i32 %dec.bn_cmp.Clone, i32* %i.bn_cmp.Clone, align 4
  br label %for.cond.bn_cmp.Clone

for.end.bn_cmp.Clone:                             ; preds = %for.cond.bn_cmp.Clone
  store i32 0, i32* %retval.bn_cmp.Clone, align 4
  br label %return.bn_cmp.Clone

return.bn_cmp.Clone:                              ; preds = %for.end.bn_cmp.Clone, %if.then6.bn_cmp.Clone, %if.then.bn_cmp.Clone
  %32 = load i32, i32* %retval.bn_cmp.Clone, align 4
  store i32 %32, i32* %RetValuePtr
  br label %entry.Split.Split

entry.Split.Split:                                ; preds = %return.bn_cmp.Clone
  %RetValue = load i32, i32* %RetValuePtr
  %tobool = icmp ne i32 %RetValue, 0
  %lnot = xor i1 %tobool, true
  %lnot.ext = zext i1 %lnot to i32
  store i32 %lnot.ext, i32* %status, align 4
  %arraydecay7 = getelementptr inbounds [65 x i32], [65 x i32]* %t, i32 0, i32 0
  %33 = bitcast i32* %arraydecay7 to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %33, i8 0, i32 260, i1 false)
  %34 = load i32, i32* %status, align 4
  ret i32 %34
}

; Function Attrs: noinline optnone
define dso_local i32 @rsa_public_encrypt(i8* %out, i32* %out_len, i8* %in, i32 %in_len, %struct.rsa_pk_t* %pk) #2 {
entry:
  %retval = alloca i32, align 4
  %pk.addr = alloca %struct.rsa_pk_t*, align 4
  %in_len.addr = alloca i32, align 4
  %in.addr = alloca i8*, align 4
  %out_len.addr = alloca i32*, align 4
  %out.addr = alloca i8*, align 4
  %status = alloca i32, align 4
  %byte = alloca i8, align 1
  %pkcs_block = alloca [256 x i8], align 1
  %i = alloca i32, align 4
  %modulus_len = alloca i32, align 4
  store %struct.rsa_pk_t* %pk, %struct.rsa_pk_t** %pk.addr, align 4
  store i32 %in_len, i32* %in_len.addr, align 4
  store i8* %in, i8** %in.addr, align 4
  store i32* %out_len, i32** %out_len.addr, align 4
  store i8* %out, i8** %out.addr, align 4
  %0 = load %struct.rsa_pk_t*, %struct.rsa_pk_t** %pk.addr, align 4
  %bits = getelementptr inbounds %struct.rsa_pk_t, %struct.rsa_pk_t* %0, i32 0, i32 0
  %1 = load i32, i32* %bits, align 4
  %add = add i32 %1, 7
  %div = udiv i32 %add, 8
  store i32 %div, i32* %modulus_len, align 4
  %2 = load i32, i32* %in_len.addr, align 4
  %add1 = add i32 %2, 11
  %3 = load i32, i32* %modulus_len, align 4
  %cmp = icmp ugt i32 %add1, %3
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 4098, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* %pkcs_block, i32 0, i32 0
  store i8 0, i8* %arrayidx, align 1
  %arrayidx2 = getelementptr inbounds [256 x i8], [256 x i8]* %pkcs_block, i32 0, i32 1
  store i8 2, i8* %arrayidx2, align 1
  store i32 2, i32* %i, align 4
  br label %CallOutFuncBB

CallOutFuncBB:                                    ; preds = %if.end
  call void @for.cond.OutLineFunc.10(i32* %i, i32* %modulus_len, i32* %in_len.addr, i8* %byte, [256 x i8]* %pkcs_block, i8** %in.addr, %struct.rsa_pk_t** %pk.addr, i32** %out_len.addr, i8** %out.addr, i32* %status, i32* %retval)
  %4 = getelementptr inbounds %Struct.RetValue.5, %Struct.RetValue.5* @Struct.RetValue.9, i32 0, i32 0
  %5 = load i32*, i32** %4, align 4
  %6 = load i32, i32* %5, align 4
  store i32 %6, i32* %i
  %7 = getelementptr inbounds %Struct.RetValue.5, %Struct.RetValue.5* @Struct.RetValue.9, i32 0, i32 1
  %8 = load i8*, i8** %7, align 4
  %9 = load i8, i8* %8, align 4
  store i8 %9, i8* %byte
  %10 = getelementptr inbounds %Struct.RetValue.5, %Struct.RetValue.5* @Struct.RetValue.9, i32 0, i32 2
  %11 = load i32*, i32** %10, align 4
  %12 = load i32, i32* %11, align 4
  store i32 %12, i32* %status
  %13 = getelementptr inbounds %Struct.RetValue.5, %Struct.RetValue.5* @Struct.RetValue.9, i32 0, i32 3
  %14 = load i32*, i32** %13, align 4
  %15 = load i32, i32* %14, align 4
  store i32 %15, i32* %retval
  br label %return

return:                                           ; preds = %CallOutFuncBB, %if.then
  %16 = load i32, i32* %retval, align 4
  ret i32 %16
}

; Function Attrs: noinline optnone
define internal i32 @public_block_operation(i8* %out, i32* %out_len, i8* %in, i32 %in_len, %struct.rsa_pk_t* %pk) #2 {
entry:
  %retval = alloca i32, align 4
  %pk.addr = alloca %struct.rsa_pk_t*, align 4
  %in_len.addr = alloca i32, align 4
  %in.addr = alloca i8*, align 4
  %out_len.addr = alloca i32*, align 4
  %out.addr = alloca i8*, align 4
  %edigits = alloca i32, align 4
  %ndigits = alloca i32, align 4
  %c = alloca [65 x i32], align 4
  %e = alloca [65 x i32], align 4
  %m = alloca [65 x i32], align 4
  %n = alloca [65 x i32], align 4
  store %struct.rsa_pk_t* %pk, %struct.rsa_pk_t** %pk.addr, align 4
  store i32 %in_len, i32* %in_len.addr, align 4
  store i8* %in, i8** %in.addr, align 4
  store i32* %out_len, i32** %out_len.addr, align 4
  store i8* %out, i8** %out.addr, align 4
  %0 = load i32, i32* %in_len.addr, align 4
  %1 = load i8*, i8** %in.addr, align 4
  %arraydecay = getelementptr inbounds [65 x i32], [65 x i32]* %m, i32 0, i32 0
  call void @bn_decode(i32* %arraydecay, i32 65, i8* %1, i32 %0)
  %2 = load %struct.rsa_pk_t*, %struct.rsa_pk_t** %pk.addr, align 4
  %modulus = getelementptr inbounds %struct.rsa_pk_t, %struct.rsa_pk_t* %2, i32 0, i32 1
  %arraydecay1 = getelementptr inbounds [256 x i8], [256 x i8]* %modulus, i32 0, i32 0
  %arraydecay2 = getelementptr inbounds [65 x i32], [65 x i32]* %n, i32 0, i32 0
  call void @bn_decode(i32* %arraydecay2, i32 65, i8* %arraydecay1, i32 256)
  %3 = load %struct.rsa_pk_t*, %struct.rsa_pk_t** %pk.addr, align 4
  %exponent = getelementptr inbounds %struct.rsa_pk_t, %struct.rsa_pk_t* %3, i32 0, i32 2
  %arraydecay3 = getelementptr inbounds [256 x i8], [256 x i8]* %exponent, i32 0, i32 0
  %arraydecay4 = getelementptr inbounds [65 x i32], [65 x i32]* %e, i32 0, i32 0
  call void @bn_decode(i32* %arraydecay4, i32 65, i8* %arraydecay3, i32 256)
  %arraydecay5 = getelementptr inbounds [65 x i32], [65 x i32]* %n, i32 0, i32 0
  %RetValuePtr21 = alloca i32, align 4
  br label %entry.bn_digits.Clone5

entry.bn_digits.Clone5:                           ; preds = %entry
  %digits.addr.bn_digits.Clone6 = alloca i32, align 4
  %a.addr.bn_digits.Clone7 = alloca i32*, align 4
  %i.bn_digits.Clone8 = alloca i32, align 4
  store i32 65, i32* %digits.addr.bn_digits.Clone6, align 4
  store i32* %arraydecay5, i32** %a.addr.bn_digits.Clone7, align 4
  %4 = load i32, i32* %digits.addr.bn_digits.Clone6, align 4
  %sub.bn_digits.Clone9 = sub i32 %4, 1
  store i32 %sub.bn_digits.Clone9, i32* %i.bn_digits.Clone8, align 4
  br label %for.cond.bn_digits.Clone10

for.cond.bn_digits.Clone10:                       ; preds = %for.inc.bn_digits.Clone17, %entry.bn_digits.Clone5
  %5 = load i32, i32* %i.bn_digits.Clone8, align 4
  %cmp.bn_digits.Clone11 = icmp sge i32 %5, 0
  br i1 %cmp.bn_digits.Clone11, label %for.body.bn_digits.Clone12, label %for.end.bn_digits.Clone19

for.body.bn_digits.Clone12:                       ; preds = %for.cond.bn_digits.Clone10
  %6 = load i32*, i32** %a.addr.bn_digits.Clone7, align 4
  %7 = load i32, i32* %i.bn_digits.Clone8, align 4
  %arrayidx.bn_digits.Clone13 = getelementptr inbounds i32, i32* %6, i32 %7
  %8 = load i32, i32* %arrayidx.bn_digits.Clone13, align 4
  %tobool.bn_digits.Clone14 = icmp ne i32 %8, 0
  br i1 %tobool.bn_digits.Clone14, label %if.then.bn_digits.Clone15, label %if.end.bn_digits.Clone16

if.then.bn_digits.Clone15:                        ; preds = %for.body.bn_digits.Clone12
  br label %for.end.bn_digits.Clone19

if.end.bn_digits.Clone16:                         ; preds = %for.body.bn_digits.Clone12
  br label %for.inc.bn_digits.Clone17

for.inc.bn_digits.Clone17:                        ; preds = %if.end.bn_digits.Clone16
  %9 = load i32, i32* %i.bn_digits.Clone8, align 4
  %dec.bn_digits.Clone18 = add nsw i32 %9, -1
  store i32 %dec.bn_digits.Clone18, i32* %i.bn_digits.Clone8, align 4
  br label %for.cond.bn_digits.Clone10

for.end.bn_digits.Clone19:                        ; preds = %if.then.bn_digits.Clone15, %for.cond.bn_digits.Clone10
  %10 = load i32, i32* %i.bn_digits.Clone8, align 4
  %add.bn_digits.Clone20 = add nsw i32 %10, 1
  store i32 %add.bn_digits.Clone20, i32* %RetValuePtr21
  br label %entry.Split4

entry.Split4:                                     ; preds = %for.end.bn_digits.Clone19
  %RetValue22 = load i32, i32* %RetValuePtr21
  store i32 %RetValue22, i32* %ndigits, align 4
  %arraydecay6 = getelementptr inbounds [65 x i32], [65 x i32]* %e, i32 0, i32 0
  %RetValuePtr2 = alloca i32, align 4
  br label %entry.bn_digits.Clone

entry.bn_digits.Clone:                            ; preds = %entry.Split4
  %digits.addr.bn_digits.Clone = alloca i32, align 4
  %a.addr.bn_digits.Clone = alloca i32*, align 4
  %i.bn_digits.Clone = alloca i32, align 4
  store i32 65, i32* %digits.addr.bn_digits.Clone, align 4
  store i32* %arraydecay6, i32** %a.addr.bn_digits.Clone, align 4
  %11 = load i32, i32* %digits.addr.bn_digits.Clone, align 4
  %sub.bn_digits.Clone = sub i32 %11, 1
  store i32 %sub.bn_digits.Clone, i32* %i.bn_digits.Clone, align 4
  br label %for.cond.bn_digits.Clone

for.cond.bn_digits.Clone:                         ; preds = %for.inc.bn_digits.Clone, %entry.bn_digits.Clone
  %12 = load i32, i32* %i.bn_digits.Clone, align 4
  %cmp.bn_digits.Clone = icmp sge i32 %12, 0
  br i1 %cmp.bn_digits.Clone, label %for.body.bn_digits.Clone, label %for.end.bn_digits.Clone

for.body.bn_digits.Clone:                         ; preds = %for.cond.bn_digits.Clone
  %13 = load i32*, i32** %a.addr.bn_digits.Clone, align 4
  %14 = load i32, i32* %i.bn_digits.Clone, align 4
  %arrayidx.bn_digits.Clone = getelementptr inbounds i32, i32* %13, i32 %14
  %15 = load i32, i32* %arrayidx.bn_digits.Clone, align 4
  %tobool.bn_digits.Clone = icmp ne i32 %15, 0
  br i1 %tobool.bn_digits.Clone, label %if.then.bn_digits.Clone, label %if.end.bn_digits.Clone

if.then.bn_digits.Clone:                          ; preds = %for.body.bn_digits.Clone
  br label %for.end.bn_digits.Clone

if.end.bn_digits.Clone:                           ; preds = %for.body.bn_digits.Clone
  br label %for.inc.bn_digits.Clone

for.inc.bn_digits.Clone:                          ; preds = %if.end.bn_digits.Clone
  %16 = load i32, i32* %i.bn_digits.Clone, align 4
  %dec.bn_digits.Clone = add nsw i32 %16, -1
  store i32 %dec.bn_digits.Clone, i32* %i.bn_digits.Clone, align 4
  br label %for.cond.bn_digits.Clone

for.end.bn_digits.Clone:                          ; preds = %if.then.bn_digits.Clone, %for.cond.bn_digits.Clone
  %17 = load i32, i32* %i.bn_digits.Clone, align 4
  %add.bn_digits.Clone = add nsw i32 %17, 1
  store i32 %add.bn_digits.Clone, i32* %RetValuePtr2
  br label %entry.Split1

entry.Split1:                                     ; preds = %for.end.bn_digits.Clone
  %RetValue3 = load i32, i32* %RetValuePtr2
  store i32 %RetValue3, i32* %edigits, align 4
  %18 = load i32, i32* %ndigits, align 4
  %arraydecay8 = getelementptr inbounds [65 x i32], [65 x i32]* %n, i32 0, i32 0
  %arraydecay9 = getelementptr inbounds [65 x i32], [65 x i32]* %m, i32 0, i32 0
  %RetValuePtr = alloca i32, align 4
  br label %entry.bn_cmp.Clone

entry.bn_cmp.Clone:                               ; preds = %entry.Split1
  %retval.bn_cmp.Clone = alloca i32, align 4
  %digits.addr.bn_cmp.Clone = alloca i32, align 4
  %b.addr.bn_cmp.Clone = alloca i32*, align 4
  %a.addr.bn_cmp.Clone = alloca i32*, align 4
  %i.bn_cmp.Clone = alloca i32, align 4
  store i32 %18, i32* %digits.addr.bn_cmp.Clone, align 4
  store i32* %arraydecay8, i32** %b.addr.bn_cmp.Clone, align 4
  store i32* %arraydecay9, i32** %a.addr.bn_cmp.Clone, align 4
  %19 = load i32, i32* %digits.addr.bn_cmp.Clone, align 4
  %sub.bn_cmp.Clone = sub i32 %19, 1
  store i32 %sub.bn_cmp.Clone, i32* %i.bn_cmp.Clone, align 4
  br label %for.cond.bn_cmp.Clone

for.cond.bn_cmp.Clone:                            ; preds = %for.inc.bn_cmp.Clone, %entry.bn_cmp.Clone
  %20 = load i32, i32* %i.bn_cmp.Clone, align 4
  %cmp.bn_cmp.Clone = icmp sge i32 %20, 0
  br i1 %cmp.bn_cmp.Clone, label %for.body.bn_cmp.Clone, label %for.end.bn_cmp.Clone

for.body.bn_cmp.Clone:                            ; preds = %for.cond.bn_cmp.Clone
  %21 = load i32*, i32** %a.addr.bn_cmp.Clone, align 4
  %22 = load i32, i32* %i.bn_cmp.Clone, align 4
  %arrayidx.bn_cmp.Clone = getelementptr inbounds i32, i32* %21, i32 %22
  %23 = load i32, i32* %arrayidx.bn_cmp.Clone, align 4
  %24 = load i32*, i32** %b.addr.bn_cmp.Clone, align 4
  %25 = load i32, i32* %i.bn_cmp.Clone, align 4
  %arrayidx1.bn_cmp.Clone = getelementptr inbounds i32, i32* %24, i32 %25
  %26 = load i32, i32* %arrayidx1.bn_cmp.Clone, align 4
  %cmp2.bn_cmp.Clone = icmp ugt i32 %23, %26
  br i1 %cmp2.bn_cmp.Clone, label %if.then.bn_cmp.Clone, label %if.end.bn_cmp.Clone

if.then.bn_cmp.Clone:                             ; preds = %for.body.bn_cmp.Clone
  store i32 1, i32* %retval.bn_cmp.Clone, align 4
  br label %return.bn_cmp.Clone

if.end.bn_cmp.Clone:                              ; preds = %for.body.bn_cmp.Clone
  %27 = load i32*, i32** %a.addr.bn_cmp.Clone, align 4
  %28 = load i32, i32* %i.bn_cmp.Clone, align 4
  %arrayidx3.bn_cmp.Clone = getelementptr inbounds i32, i32* %27, i32 %28
  %29 = load i32, i32* %arrayidx3.bn_cmp.Clone, align 4
  %30 = load i32*, i32** %b.addr.bn_cmp.Clone, align 4
  %31 = load i32, i32* %i.bn_cmp.Clone, align 4
  %arrayidx4.bn_cmp.Clone = getelementptr inbounds i32, i32* %30, i32 %31
  %32 = load i32, i32* %arrayidx4.bn_cmp.Clone, align 4
  %cmp5.bn_cmp.Clone = icmp ult i32 %29, %32
  br i1 %cmp5.bn_cmp.Clone, label %if.then6.bn_cmp.Clone, label %if.end7.bn_cmp.Clone

if.then6.bn_cmp.Clone:                            ; preds = %if.end.bn_cmp.Clone
  store i32 -1, i32* %retval.bn_cmp.Clone, align 4
  br label %return.bn_cmp.Clone

if.end7.bn_cmp.Clone:                             ; preds = %if.end.bn_cmp.Clone
  br label %for.inc.bn_cmp.Clone

for.inc.bn_cmp.Clone:                             ; preds = %if.end7.bn_cmp.Clone
  %33 = load i32, i32* %i.bn_cmp.Clone, align 4
  %dec.bn_cmp.Clone = add nsw i32 %33, -1
  store i32 %dec.bn_cmp.Clone, i32* %i.bn_cmp.Clone, align 4
  br label %for.cond.bn_cmp.Clone

for.end.bn_cmp.Clone:                             ; preds = %for.cond.bn_cmp.Clone
  store i32 0, i32* %retval.bn_cmp.Clone, align 4
  br label %return.bn_cmp.Clone

return.bn_cmp.Clone:                              ; preds = %for.end.bn_cmp.Clone, %if.then6.bn_cmp.Clone, %if.then.bn_cmp.Clone
  %34 = load i32, i32* %retval.bn_cmp.Clone, align 4
  store i32 %34, i32* %RetValuePtr
  br label %entry.Split

entry.Split:                                      ; preds = %return.bn_cmp.Clone
  %RetValue = load i32, i32* %RetValuePtr
  %cmp = icmp sge i32 %RetValue, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry.Split
  store i32 4097, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry.Split
  %35 = load i32, i32* %ndigits, align 4
  %arraydecay11 = getelementptr inbounds [65 x i32], [65 x i32]* %n, i32 0, i32 0
  %36 = load i32, i32* %edigits, align 4
  %arraydecay12 = getelementptr inbounds [65 x i32], [65 x i32]* %e, i32 0, i32 0
  %arraydecay13 = getelementptr inbounds [65 x i32], [65 x i32]* %m, i32 0, i32 0
  %arraydecay14 = getelementptr inbounds [65 x i32], [65 x i32]* %c, i32 0, i32 0
  call void @bn_mod_exp(i32* %arraydecay14, i32* %arraydecay13, i32* %arraydecay12, i32 %36, i32* %arraydecay11, i32 %35)
  %37 = load %struct.rsa_pk_t*, %struct.rsa_pk_t** %pk.addr, align 4
  %bits = getelementptr inbounds %struct.rsa_pk_t, %struct.rsa_pk_t* %37, i32 0, i32 0
  %38 = load i32, i32* %bits, align 4
  %add = add i32 %38, 7
  %div = udiv i32 %add, 8
  %39 = load i32*, i32** %out_len.addr, align 4
  store i32 %div, i32* %39, align 4
  %40 = load i32, i32* %ndigits, align 4
  %arraydecay15 = getelementptr inbounds [65 x i32], [65 x i32]* %c, i32 0, i32 0
  %41 = load i32*, i32** %out_len.addr, align 4
  %42 = load i32, i32* %41, align 4
  %43 = load i8*, i8** %out.addr, align 4
  br label %entry.bn_encode.Clone

entry.bn_encode.Clone:                            ; preds = %if.end
  %digits.addr.bn_encode.Clone = alloca i32, align 4
  %bn.addr.bn_encode.Clone = alloca i32*, align 4
  %size.addr.bn_encode.Clone = alloca i32, align 4
  %hexarr.addr.bn_encode.Clone = alloca i8*, align 4
  %t.bn_encode.Clone = alloca i32, align 4
  %j.bn_encode.Clone = alloca i32, align 4
  %i.bn_encode.Clone = alloca i32, align 4
  %u.bn_encode.Clone = alloca i32, align 4
  store i32 %40, i32* %digits.addr.bn_encode.Clone, align 4
  store i32* %arraydecay15, i32** %bn.addr.bn_encode.Clone, align 4
  store i32 %42, i32* %size.addr.bn_encode.Clone, align 4
  store i8* %43, i8** %hexarr.addr.bn_encode.Clone, align 4
  store i32 0, i32* %i.bn_encode.Clone, align 4
  %44 = load i32, i32* %size.addr.bn_encode.Clone, align 4
  %sub.bn_encode.Clone = sub i32 %44, 1
  store i32 %sub.bn_encode.Clone, i32* %j.bn_encode.Clone, align 4
  br label %for.cond.bn_encode.Clone

for.cond.bn_encode.Clone:                         ; preds = %for.inc9.bn_encode.Clone, %entry.bn_encode.Clone
  %45 = load i32, i32* %i.bn_encode.Clone, align 4
  %46 = load i32, i32* %digits.addr.bn_encode.Clone, align 4
  %cmp.bn_encode.Clone = icmp ult i32 %45, %46
  br i1 %cmp.bn_encode.Clone, label %land.rhs.bn_encode.Clone, label %land.end.bn_encode.Clone

land.rhs.bn_encode.Clone:                         ; preds = %for.cond.bn_encode.Clone
  %47 = load i32, i32* %j.bn_encode.Clone, align 4
  %cmp1.bn_encode.Clone = icmp sge i32 %47, 0
  br label %land.end.bn_encode.Clone

land.end.bn_encode.Clone:                         ; preds = %land.rhs.bn_encode.Clone, %for.cond.bn_encode.Clone
  %48 = phi i1 [ false, %for.cond.bn_encode.Clone ], [ %cmp1.bn_encode.Clone, %land.rhs.bn_encode.Clone ]
  br i1 %48, label %for.body.bn_encode.Clone, label %for.end10.bn_encode.Clone

for.body.bn_encode.Clone:                         ; preds = %land.end.bn_encode.Clone
  %49 = load i32*, i32** %bn.addr.bn_encode.Clone, align 4
  %50 = load i32, i32* %i.bn_encode.Clone, align 4
  %arrayidx.bn_encode.Clone = getelementptr inbounds i32, i32* %49, i32 %50
  %51 = load i32, i32* %arrayidx.bn_encode.Clone, align 4
  store i32 %51, i32* %t.bn_encode.Clone, align 4
  store i32 0, i32* %u.bn_encode.Clone, align 4
  br label %for.cond2.bn_encode.Clone

for.cond2.bn_encode.Clone:                        ; preds = %for.inc.bn_encode.Clone, %for.body.bn_encode.Clone
  %52 = load i32, i32* %j.bn_encode.Clone, align 4
  %cmp3.bn_encode.Clone = icmp sge i32 %52, 0
  br i1 %cmp3.bn_encode.Clone, label %land.rhs4.bn_encode.Clone, label %land.end6.bn_encode.Clone

land.rhs4.bn_encode.Clone:                        ; preds = %for.cond2.bn_encode.Clone
  %53 = load i32, i32* %u.bn_encode.Clone, align 4
  %cmp5.bn_encode.Clone = icmp ult i32 %53, 32
  br label %land.end6.bn_encode.Clone

land.end6.bn_encode.Clone:                        ; preds = %land.rhs4.bn_encode.Clone, %for.cond2.bn_encode.Clone
  %54 = phi i1 [ false, %for.cond2.bn_encode.Clone ], [ %cmp5.bn_encode.Clone, %land.rhs4.bn_encode.Clone ]
  br i1 %54, label %for.body7.bn_encode.Clone, label %for.end.bn_encode.Clone

for.body7.bn_encode.Clone:                        ; preds = %land.end6.bn_encode.Clone
  %55 = load i32, i32* %t.bn_encode.Clone, align 4
  %56 = load i32, i32* %u.bn_encode.Clone, align 4
  %shr.bn_encode.Clone = lshr i32 %55, %56
  %conv.bn_encode.Clone = trunc i32 %shr.bn_encode.Clone to i8
  %57 = load i8*, i8** %hexarr.addr.bn_encode.Clone, align 4
  %58 = load i32, i32* %j.bn_encode.Clone, align 4
  %arrayidx8.bn_encode.Clone = getelementptr inbounds i8, i8* %57, i32 %58
  store i8 %conv.bn_encode.Clone, i8* %arrayidx8.bn_encode.Clone, align 1
  br label %for.inc.bn_encode.Clone

for.inc.bn_encode.Clone:                          ; preds = %for.body7.bn_encode.Clone
  %59 = load i32, i32* %j.bn_encode.Clone, align 4
  %dec.bn_encode.Clone = add nsw i32 %59, -1
  store i32 %dec.bn_encode.Clone, i32* %j.bn_encode.Clone, align 4
  %60 = load i32, i32* %u.bn_encode.Clone, align 4
  %add.bn_encode.Clone = add i32 %60, 8
  store i32 %add.bn_encode.Clone, i32* %u.bn_encode.Clone, align 4
  br label %for.cond2.bn_encode.Clone

for.end.bn_encode.Clone:                          ; preds = %land.end6.bn_encode.Clone
  br label %for.inc9.bn_encode.Clone

for.inc9.bn_encode.Clone:                         ; preds = %for.end.bn_encode.Clone
  %61 = load i32, i32* %i.bn_encode.Clone, align 4
  %inc.bn_encode.Clone = add i32 %61, 1
  store i32 %inc.bn_encode.Clone, i32* %i.bn_encode.Clone, align 4
  br label %for.cond.bn_encode.Clone

for.end10.bn_encode.Clone:                        ; preds = %land.end.bn_encode.Clone
  br label %for.cond11.bn_encode.Clone

for.cond11.bn_encode.Clone:                       ; preds = %for.inc16.bn_encode.Clone, %for.end10.bn_encode.Clone
  %62 = load i32, i32* %j.bn_encode.Clone, align 4
  %cmp12.bn_encode.Clone = icmp sge i32 %62, 0
  br i1 %cmp12.bn_encode.Clone, label %for.body14.bn_encode.Clone, label %for.end18.bn_encode.Clone

for.body14.bn_encode.Clone:                       ; preds = %for.cond11.bn_encode.Clone
  %63 = load i8*, i8** %hexarr.addr.bn_encode.Clone, align 4
  %64 = load i32, i32* %j.bn_encode.Clone, align 4
  %arrayidx15.bn_encode.Clone = getelementptr inbounds i8, i8* %63, i32 %64
  store i8 0, i8* %arrayidx15.bn_encode.Clone, align 1
  br label %for.inc16.bn_encode.Clone

for.inc16.bn_encode.Clone:                        ; preds = %for.body14.bn_encode.Clone
  %65 = load i32, i32* %j.bn_encode.Clone, align 4
  %dec17.bn_encode.Clone = add nsw i32 %65, -1
  store i32 %dec17.bn_encode.Clone, i32* %j.bn_encode.Clone, align 4
  br label %for.cond11.bn_encode.Clone

for.end18.bn_encode.Clone:                        ; preds = %for.cond11.bn_encode.Clone
  br label %if.end.Split

if.end.Split:                                     ; preds = %for.end18.bn_encode.Clone
  %arraydecay16 = getelementptr inbounds [65 x i32], [65 x i32]* %c, i32 0, i32 0
  %66 = bitcast i32* %arraydecay16 to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %66, i8 0, i32 260, i1 false)
  %arraydecay17 = getelementptr inbounds [65 x i32], [65 x i32]* %m, i32 0, i32 0
  %67 = bitcast i32* %arraydecay17 to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %67, i8 0, i32 260, i1 false)
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end.Split, %if.then
  %68 = load i32, i32* %retval, align 4
  ret i32 %68
}

; Function Attrs: noinline optnone
define dso_local i32 @rsa_public_decrypt(i8* %out, i32* %out_len, i8* %in, i32 %in_len, %struct.rsa_pk_t* %pk) #2 {
entry:
  %retval = alloca i32, align 4
  %pk.addr = alloca %struct.rsa_pk_t*, align 4
  %in_len.addr = alloca i32, align 4
  %in.addr = alloca i8*, align 4
  %out_len.addr = alloca i32*, align 4
  %out.addr = alloca i8*, align 4
  %status = alloca i32, align 4
  %pkcs_block = alloca [256 x i8], align 1
  %i = alloca i32, align 4
  %modulus_len = alloca i32, align 4
  %pkcs_block_len = alloca i32, align 4
  store %struct.rsa_pk_t* %pk, %struct.rsa_pk_t** %pk.addr, align 4
  store i32 %in_len, i32* %in_len.addr, align 4
  store i8* %in, i8** %in.addr, align 4
  store i32* %out_len, i32** %out_len.addr, align 4
  store i8* %out, i8** %out.addr, align 4
  %0 = load %struct.rsa_pk_t*, %struct.rsa_pk_t** %pk.addr, align 4
  %bits = getelementptr inbounds %struct.rsa_pk_t, %struct.rsa_pk_t* %0, i32 0, i32 0
  %1 = load i32, i32* %bits, align 4
  %add = add i32 %1, 7
  %div = udiv i32 %add, 8
  store i32 %div, i32* %modulus_len, align 4
  %2 = load i32, i32* %in_len.addr, align 4
  %3 = load i32, i32* %modulus_len, align 4
  %cmp = icmp ugt i32 %2, %3
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 4098, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %4 = load %struct.rsa_pk_t*, %struct.rsa_pk_t** %pk.addr, align 4
  %5 = load i32, i32* %in_len.addr, align 4
  %6 = load i8*, i8** %in.addr, align 4
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %pkcs_block, i32 0, i32 0
  %call = call i32 @public_block_operation(i8* %arraydecay, i32* %pkcs_block_len, i8* %6, i32 %5, %struct.rsa_pk_t* %4)
  store i32 %call, i32* %status, align 4
  %7 = load i32, i32* %status, align 4
  %cmp1 = icmp ne i32 %7, 0
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  %8 = load i32, i32* %status, align 4
  store i32 %8, i32* %retval, align 4
  br label %return

if.end3:                                          ; preds = %if.end
  %9 = load i32, i32* %pkcs_block_len, align 4
  %10 = load i32, i32* %modulus_len, align 4
  %cmp4 = icmp ne i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end3
  store i32 4098, i32* %retval, align 4
  br label %return

if.end6:                                          ; preds = %if.end3
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* %pkcs_block, i32 0, i32 0
  %11 = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %11 to i32
  %cmp7 = icmp ne i32 %conv, 0
  br i1 %cmp7, label %if.then13, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end6
  %arrayidx9 = getelementptr inbounds [256 x i8], [256 x i8]* %pkcs_block, i32 0, i32 1
  %12 = load i8, i8* %arrayidx9, align 1
  %conv10 = zext i8 %12 to i32
  %cmp11 = icmp ne i32 %conv10, 1
  br i1 %cmp11, label %if.then13, label %if.end14

if.then13:                                        ; preds = %lor.lhs.false, %if.end6
  store i32 4097, i32* %retval, align 4
  br label %return

if.end14:                                         ; preds = %lor.lhs.false
  store i32 2, i32* %i, align 4
  br label %CallOutFuncBB

CallOutFuncBB:                                    ; preds = %if.end14
  call void @for.cond.OutLineFunc.12(i32* %i, i32* %modulus_len, [256 x i8]* %pkcs_block)
  %13 = getelementptr inbounds %Struct.RetValue.6, %Struct.RetValue.6* @Struct.RetValue.11, i32 0, i32 0
  %14 = load i32*, i32** %13, align 4
  %15 = load i32, i32* %14, align 4
  store i32 %15, i32* %i
  br label %new

new:                                              ; preds = %CallOutFuncBB
  %16 = load i32, i32* %i, align 4
  %inc23 = add i32 %16, 1
  store i32 %inc23, i32* %i, align 4
  %arrayidx24 = getelementptr inbounds [256 x i8], [256 x i8]* %pkcs_block, i32 0, i32 %16
  %17 = load i8, i8* %arrayidx24, align 1
  %conv25 = zext i8 %17 to i32
  %cmp26 = icmp ne i32 %conv25, 0
  br i1 %cmp26, label %if.then28, label %if.end29

if.then28:                                        ; preds = %new
  store i32 4097, i32* %retval, align 4
  br label %return

if.end29:                                         ; preds = %new
  %18 = load i32, i32* %modulus_len, align 4
  %19 = load i32, i32* %i, align 4
  %sub30 = sub i32 %18, %19
  %20 = load i32*, i32** %out_len.addr, align 4
  store i32 %sub30, i32* %20, align 4
  %21 = load i32*, i32** %out_len.addr, align 4
  %22 = load i32, i32* %21, align 4
  %add31 = add i32 %22, 11
  %23 = load i32, i32* %modulus_len, align 4
  %cmp32 = icmp ugt i32 %add31, %23
  br i1 %cmp32, label %if.then34, label %if.end35

if.then34:                                        ; preds = %if.end29
  store i32 4097, i32* %retval, align 4
  br label %return

if.end35:                                         ; preds = %if.end29
  %24 = load i8*, i8** %out.addr, align 4
  %25 = load i32, i32* %i, align 4
  %arrayidx36 = getelementptr inbounds [256 x i8], [256 x i8]* %pkcs_block, i32 0, i32 %25
  %26 = load i32*, i32** %out_len.addr, align 4
  %27 = load i32, i32* %26, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %24, i8* align 1 %arrayidx36, i32 %27, i1 false)
  %arraydecay37 = getelementptr inbounds [256 x i8], [256 x i8]* %pkcs_block, i32 0, i32 0
  call void @llvm.memset.p0i8.i32(i8* align 1 %arraydecay37, i8 0, i32 256, i1 false)
  %28 = load i32, i32* %status, align 4
  store i32 %28, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end35, %if.then34, %if.then28, %if.then13, %if.then5, %if.then2, %if.then
  %29 = load i32, i32* %retval, align 4
  ret i32 %29
}

; Function Attrs: noinline optnone
define dso_local i32 @rsa_private_encrypt(i8* %out, i32* %out_len, i8* %in, i32 %in_len, %struct.rsa_sk_t* %sk) #2 {
entry:
  %retval = alloca i32, align 4
  %sk.addr = alloca %struct.rsa_sk_t*, align 4
  %in_len.addr = alloca i32, align 4
  %in.addr = alloca i8*, align 4
  %out_len.addr = alloca i32*, align 4
  %out.addr = alloca i8*, align 4
  %status = alloca i32, align 4
  %pkcs_block = alloca [256 x i8], align 1
  %i = alloca i32, align 4
  %modulus_len = alloca i32, align 4
  store %struct.rsa_sk_t* %sk, %struct.rsa_sk_t** %sk.addr, align 4
  store i32 %in_len, i32* %in_len.addr, align 4
  store i8* %in, i8** %in.addr, align 4
  store i32* %out_len, i32** %out_len.addr, align 4
  store i8* %out, i8** %out.addr, align 4
  %0 = load %struct.rsa_sk_t*, %struct.rsa_sk_t** %sk.addr, align 4
  %bits = getelementptr inbounds %struct.rsa_sk_t, %struct.rsa_sk_t* %0, i32 0, i32 0
  %1 = load i32, i32* %bits, align 4
  %add = add i32 %1, 7
  %div = udiv i32 %add, 8
  store i32 %div, i32* %modulus_len, align 4
  %2 = load i32, i32* %in_len.addr, align 4
  %add1 = add i32 %2, 11
  %3 = load i32, i32* %modulus_len, align 4
  %cmp = icmp ugt i32 %add1, %3
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 4098, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* %pkcs_block, i32 0, i32 0
  store i8 0, i8* %arrayidx, align 1
  %arrayidx2 = getelementptr inbounds [256 x i8], [256 x i8]* %pkcs_block, i32 0, i32 1
  store i8 1, i8* %arrayidx2, align 1
  store i32 2, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load i32, i32* %i, align 4
  %5 = load i32, i32* %modulus_len, align 4
  %6 = load i32, i32* %in_len.addr, align 4
  %sub = sub i32 %5, %6
  %sub3 = sub i32 %sub, 1
  %cmp4 = icmp ult i32 %4, %sub3
  br i1 %cmp4, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %7 = load i32, i32* %i, align 4
  %arrayidx5 = getelementptr inbounds [256 x i8], [256 x i8]* %pkcs_block, i32 0, i32 %7
  store i8 -1, i8* %arrayidx5, align 1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4
  %inc = add i32 %8, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %9 = load i32, i32* %i, align 4
  %inc6 = add i32 %9, 1
  store i32 %inc6, i32* %i, align 4
  %arrayidx7 = getelementptr inbounds [256 x i8], [256 x i8]* %pkcs_block, i32 0, i32 %9
  store i8 0, i8* %arrayidx7, align 1
  %10 = load i32, i32* %i, align 4
  %arrayidx8 = getelementptr inbounds [256 x i8], [256 x i8]* %pkcs_block, i32 0, i32 %10
  %11 = load i8*, i8** %in.addr, align 4
  %12 = load i32, i32* %in_len.addr, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %arrayidx8, i8* align 1 %11, i32 %12, i1 false)
  %13 = load %struct.rsa_sk_t*, %struct.rsa_sk_t** %sk.addr, align 4
  %14 = load i32, i32* %modulus_len, align 4
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %pkcs_block, i32 0, i32 0
  %15 = load i32*, i32** %out_len.addr, align 4
  %16 = load i8*, i8** %out.addr, align 4
  %call = call i32 @private_block_operation(i8* %16, i32* %15, i8* %arraydecay, i32 %14, %struct.rsa_sk_t* %13)
  store i32 %call, i32* %status, align 4
  %arraydecay9 = getelementptr inbounds [256 x i8], [256 x i8]* %pkcs_block, i32 0, i32 0
  call void @llvm.memset.p0i8.i32(i8* align 1 %arraydecay9, i8 0, i32 256, i1 false)
  %17 = load i32, i32* %status, align 4
  store i32 %17, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end, %if.then
  %18 = load i32, i32* %retval, align 4
  ret i32 %18
}

; Function Attrs: noinline optnone
define internal i32 @private_block_operation(i8* %out, i32* %out_len, i8* %in, i32 %in_len, %struct.rsa_sk_t* %sk) #2 {
entry:
  %retval = alloca i32, align 4
  %sk.addr = alloca %struct.rsa_sk_t*, align 4
  %in_len.addr = alloca i32, align 4
  %in.addr = alloca i8*, align 4
  %out_len.addr = alloca i32*, align 4
  %out.addr = alloca i8*, align 4
  %cdigits = alloca i32, align 4
  %ndigits = alloca i32, align 4
  %pdigits = alloca i32, align 4
  %c = alloca [65 x i32], align 4
  %cp = alloca [65 x i32], align 4
  %cq = alloca [65 x i32], align 4
  %dp = alloca [65 x i32], align 4
  %dq = alloca [65 x i32], align 4
  %mp = alloca [65 x i32], align 4
  %mq = alloca [65 x i32], align 4
  %n = alloca [65 x i32], align 4
  %p = alloca [65 x i32], align 4
  %q = alloca [65 x i32], align 4
  %q_inv = alloca [65 x i32], align 4
  %t = alloca [65 x i32], align 4
  store %struct.rsa_sk_t* %sk, %struct.rsa_sk_t** %sk.addr, align 4
  store i32 %in_len, i32* %in_len.addr, align 4
  store i8* %in, i8** %in.addr, align 4
  store i32* %out_len, i32** %out_len.addr, align 4
  store i8* %out, i8** %out.addr, align 4
  %0 = load i32, i32* %in_len.addr, align 4
  %1 = load i8*, i8** %in.addr, align 4
  %arraydecay = getelementptr inbounds [65 x i32], [65 x i32]* %c, i32 0, i32 0
  call void @bn_decode(i32* %arraydecay, i32 65, i8* %1, i32 %0)
  %2 = load %struct.rsa_sk_t*, %struct.rsa_sk_t** %sk.addr, align 4
  %modulus = getelementptr inbounds %struct.rsa_sk_t, %struct.rsa_sk_t* %2, i32 0, i32 1
  %arraydecay1 = getelementptr inbounds [256 x i8], [256 x i8]* %modulus, i32 0, i32 0
  %arraydecay2 = getelementptr inbounds [65 x i32], [65 x i32]* %n, i32 0, i32 0
  call void @bn_decode(i32* %arraydecay2, i32 65, i8* %arraydecay1, i32 256)
  %3 = load %struct.rsa_sk_t*, %struct.rsa_sk_t** %sk.addr, align 4
  %prime1 = getelementptr inbounds %struct.rsa_sk_t, %struct.rsa_sk_t* %3, i32 0, i32 4
  %arraydecay3 = getelementptr inbounds [128 x i8], [128 x i8]* %prime1, i32 0, i32 0
  %arraydecay4 = getelementptr inbounds [65 x i32], [65 x i32]* %p, i32 0, i32 0
  call void @bn_decode(i32* %arraydecay4, i32 65, i8* %arraydecay3, i32 128)
  %4 = load %struct.rsa_sk_t*, %struct.rsa_sk_t** %sk.addr, align 4
  %prime2 = getelementptr inbounds %struct.rsa_sk_t, %struct.rsa_sk_t* %4, i32 0, i32 5
  %arraydecay5 = getelementptr inbounds [128 x i8], [128 x i8]* %prime2, i32 0, i32 0
  %arraydecay6 = getelementptr inbounds [65 x i32], [65 x i32]* %q, i32 0, i32 0
  call void @bn_decode(i32* %arraydecay6, i32 65, i8* %arraydecay5, i32 128)
  %5 = load %struct.rsa_sk_t*, %struct.rsa_sk_t** %sk.addr, align 4
  %prime_exponent1 = getelementptr inbounds %struct.rsa_sk_t, %struct.rsa_sk_t* %5, i32 0, i32 6
  %arraydecay7 = getelementptr inbounds [128 x i8], [128 x i8]* %prime_exponent1, i32 0, i32 0
  %arraydecay8 = getelementptr inbounds [65 x i32], [65 x i32]* %dp, i32 0, i32 0
  call void @bn_decode(i32* %arraydecay8, i32 65, i8* %arraydecay7, i32 128)
  %6 = load %struct.rsa_sk_t*, %struct.rsa_sk_t** %sk.addr, align 4
  %prime_exponent2 = getelementptr inbounds %struct.rsa_sk_t, %struct.rsa_sk_t* %6, i32 0, i32 7
  %arraydecay9 = getelementptr inbounds [128 x i8], [128 x i8]* %prime_exponent2, i32 0, i32 0
  %arraydecay10 = getelementptr inbounds [65 x i32], [65 x i32]* %dq, i32 0, i32 0
  call void @bn_decode(i32* %arraydecay10, i32 65, i8* %arraydecay9, i32 128)
  %7 = load %struct.rsa_sk_t*, %struct.rsa_sk_t** %sk.addr, align 4
  %coefficient = getelementptr inbounds %struct.rsa_sk_t, %struct.rsa_sk_t* %7, i32 0, i32 8
  %arraydecay11 = getelementptr inbounds [128 x i8], [128 x i8]* %coefficient, i32 0, i32 0
  %arraydecay12 = getelementptr inbounds [65 x i32], [65 x i32]* %q_inv, i32 0, i32 0
  call void @bn_decode(i32* %arraydecay12, i32 65, i8* %arraydecay11, i32 128)
  %arraydecay13 = getelementptr inbounds [65 x i32], [65 x i32]* %c, i32 0, i32 0
  %RetValuePtr68 = alloca i32, align 4
  br label %entry.bn_digits.Clone52

entry.bn_digits.Clone52:                          ; preds = %entry
  %digits.addr.bn_digits.Clone53 = alloca i32, align 4
  %a.addr.bn_digits.Clone54 = alloca i32*, align 4
  %i.bn_digits.Clone55 = alloca i32, align 4
  store i32 65, i32* %digits.addr.bn_digits.Clone53, align 4
  store i32* %arraydecay13, i32** %a.addr.bn_digits.Clone54, align 4
  %8 = load i32, i32* %digits.addr.bn_digits.Clone53, align 4
  %sub.bn_digits.Clone56 = sub i32 %8, 1
  store i32 %sub.bn_digits.Clone56, i32* %i.bn_digits.Clone55, align 4
  br label %for.cond.bn_digits.Clone57

for.cond.bn_digits.Clone57:                       ; preds = %for.inc.bn_digits.Clone64, %entry.bn_digits.Clone52
  %9 = load i32, i32* %i.bn_digits.Clone55, align 4
  %cmp.bn_digits.Clone58 = icmp sge i32 %9, 0
  br i1 %cmp.bn_digits.Clone58, label %for.body.bn_digits.Clone59, label %for.end.bn_digits.Clone66

for.body.bn_digits.Clone59:                       ; preds = %for.cond.bn_digits.Clone57
  %10 = load i32*, i32** %a.addr.bn_digits.Clone54, align 4
  %11 = load i32, i32* %i.bn_digits.Clone55, align 4
  %arrayidx.bn_digits.Clone60 = getelementptr inbounds i32, i32* %10, i32 %11
  %12 = load i32, i32* %arrayidx.bn_digits.Clone60, align 4
  %tobool.bn_digits.Clone61 = icmp ne i32 %12, 0
  br i1 %tobool.bn_digits.Clone61, label %if.then.bn_digits.Clone62, label %if.end.bn_digits.Clone63

if.then.bn_digits.Clone62:                        ; preds = %for.body.bn_digits.Clone59
  br label %for.end.bn_digits.Clone66

if.end.bn_digits.Clone63:                         ; preds = %for.body.bn_digits.Clone59
  br label %for.inc.bn_digits.Clone64

for.inc.bn_digits.Clone64:                        ; preds = %if.end.bn_digits.Clone63
  %13 = load i32, i32* %i.bn_digits.Clone55, align 4
  %dec.bn_digits.Clone65 = add nsw i32 %13, -1
  store i32 %dec.bn_digits.Clone65, i32* %i.bn_digits.Clone55, align 4
  br label %for.cond.bn_digits.Clone57

for.end.bn_digits.Clone66:                        ; preds = %if.then.bn_digits.Clone62, %for.cond.bn_digits.Clone57
  %14 = load i32, i32* %i.bn_digits.Clone55, align 4
  %add.bn_digits.Clone67 = add nsw i32 %14, 1
  store i32 %add.bn_digits.Clone67, i32* %RetValuePtr68
  br label %entry.Split51

entry.Split51:                                    ; preds = %for.end.bn_digits.Clone66
  %RetValue69 = load i32, i32* %RetValuePtr68
  store i32 %RetValue69, i32* %cdigits, align 4
  %arraydecay14 = getelementptr inbounds [65 x i32], [65 x i32]* %n, i32 0, i32 0
  %RetValuePtr49 = alloca i32, align 4
  br label %entry.bn_digits.Clone33

entry.bn_digits.Clone33:                          ; preds = %entry.Split51
  %digits.addr.bn_digits.Clone34 = alloca i32, align 4
  %a.addr.bn_digits.Clone35 = alloca i32*, align 4
  %i.bn_digits.Clone36 = alloca i32, align 4
  store i32 65, i32* %digits.addr.bn_digits.Clone34, align 4
  store i32* %arraydecay14, i32** %a.addr.bn_digits.Clone35, align 4
  %15 = load i32, i32* %digits.addr.bn_digits.Clone34, align 4
  %sub.bn_digits.Clone37 = sub i32 %15, 1
  store i32 %sub.bn_digits.Clone37, i32* %i.bn_digits.Clone36, align 4
  br label %for.cond.bn_digits.Clone38

for.cond.bn_digits.Clone38:                       ; preds = %for.inc.bn_digits.Clone45, %entry.bn_digits.Clone33
  %16 = load i32, i32* %i.bn_digits.Clone36, align 4
  %cmp.bn_digits.Clone39 = icmp sge i32 %16, 0
  br i1 %cmp.bn_digits.Clone39, label %for.body.bn_digits.Clone40, label %for.end.bn_digits.Clone47

for.body.bn_digits.Clone40:                       ; preds = %for.cond.bn_digits.Clone38
  %17 = load i32*, i32** %a.addr.bn_digits.Clone35, align 4
  %18 = load i32, i32* %i.bn_digits.Clone36, align 4
  %arrayidx.bn_digits.Clone41 = getelementptr inbounds i32, i32* %17, i32 %18
  %19 = load i32, i32* %arrayidx.bn_digits.Clone41, align 4
  %tobool.bn_digits.Clone42 = icmp ne i32 %19, 0
  br i1 %tobool.bn_digits.Clone42, label %if.then.bn_digits.Clone43, label %if.end.bn_digits.Clone44

if.then.bn_digits.Clone43:                        ; preds = %for.body.bn_digits.Clone40
  br label %for.end.bn_digits.Clone47

if.end.bn_digits.Clone44:                         ; preds = %for.body.bn_digits.Clone40
  br label %for.inc.bn_digits.Clone45

for.inc.bn_digits.Clone45:                        ; preds = %if.end.bn_digits.Clone44
  %20 = load i32, i32* %i.bn_digits.Clone36, align 4
  %dec.bn_digits.Clone46 = add nsw i32 %20, -1
  store i32 %dec.bn_digits.Clone46, i32* %i.bn_digits.Clone36, align 4
  br label %for.cond.bn_digits.Clone38

for.end.bn_digits.Clone47:                        ; preds = %if.then.bn_digits.Clone43, %for.cond.bn_digits.Clone38
  %21 = load i32, i32* %i.bn_digits.Clone36, align 4
  %add.bn_digits.Clone48 = add nsw i32 %21, 1
  store i32 %add.bn_digits.Clone48, i32* %RetValuePtr49
  br label %entry.Split32

entry.Split32:                                    ; preds = %for.end.bn_digits.Clone47
  %RetValue50 = load i32, i32* %RetValuePtr49
  store i32 %RetValue50, i32* %ndigits, align 4
  %arraydecay16 = getelementptr inbounds [65 x i32], [65 x i32]* %p, i32 0, i32 0
  %RetValuePtr30 = alloca i32, align 4
  br label %entry.bn_digits.Clone

entry.bn_digits.Clone:                            ; preds = %entry.Split32
  %digits.addr.bn_digits.Clone = alloca i32, align 4
  %a.addr.bn_digits.Clone = alloca i32*, align 4
  %i.bn_digits.Clone = alloca i32, align 4
  store i32 65, i32* %digits.addr.bn_digits.Clone, align 4
  store i32* %arraydecay16, i32** %a.addr.bn_digits.Clone, align 4
  %22 = load i32, i32* %digits.addr.bn_digits.Clone, align 4
  %sub.bn_digits.Clone = sub i32 %22, 1
  store i32 %sub.bn_digits.Clone, i32* %i.bn_digits.Clone, align 4
  br label %for.cond.bn_digits.Clone

for.cond.bn_digits.Clone:                         ; preds = %for.inc.bn_digits.Clone, %entry.bn_digits.Clone
  %23 = load i32, i32* %i.bn_digits.Clone, align 4
  %cmp.bn_digits.Clone = icmp sge i32 %23, 0
  br i1 %cmp.bn_digits.Clone, label %for.body.bn_digits.Clone, label %for.end.bn_digits.Clone

for.body.bn_digits.Clone:                         ; preds = %for.cond.bn_digits.Clone
  %24 = load i32*, i32** %a.addr.bn_digits.Clone, align 4
  %25 = load i32, i32* %i.bn_digits.Clone, align 4
  %arrayidx.bn_digits.Clone = getelementptr inbounds i32, i32* %24, i32 %25
  %26 = load i32, i32* %arrayidx.bn_digits.Clone, align 4
  %tobool.bn_digits.Clone = icmp ne i32 %26, 0
  br i1 %tobool.bn_digits.Clone, label %if.then.bn_digits.Clone, label %if.end.bn_digits.Clone

if.then.bn_digits.Clone:                          ; preds = %for.body.bn_digits.Clone
  br label %for.end.bn_digits.Clone

if.end.bn_digits.Clone:                           ; preds = %for.body.bn_digits.Clone
  br label %for.inc.bn_digits.Clone

for.inc.bn_digits.Clone:                          ; preds = %if.end.bn_digits.Clone
  %27 = load i32, i32* %i.bn_digits.Clone, align 4
  %dec.bn_digits.Clone = add nsw i32 %27, -1
  store i32 %dec.bn_digits.Clone, i32* %i.bn_digits.Clone, align 4
  br label %for.cond.bn_digits.Clone

for.end.bn_digits.Clone:                          ; preds = %if.then.bn_digits.Clone, %for.cond.bn_digits.Clone
  %28 = load i32, i32* %i.bn_digits.Clone, align 4
  %add.bn_digits.Clone = add nsw i32 %28, 1
  store i32 %add.bn_digits.Clone, i32* %RetValuePtr30
  br label %entry.Split29

entry.Split29:                                    ; preds = %for.end.bn_digits.Clone
  %RetValue31 = load i32, i32* %RetValuePtr30
  store i32 %RetValue31, i32* %pdigits, align 4
  %29 = load i32, i32* %ndigits, align 4
  %arraydecay18 = getelementptr inbounds [65 x i32], [65 x i32]* %n, i32 0, i32 0
  %arraydecay19 = getelementptr inbounds [65 x i32], [65 x i32]* %c, i32 0, i32 0
  %RetValuePtr27 = alloca i32, align 4
  br label %entry.bn_cmp.Clone3

entry.bn_cmp.Clone3:                              ; preds = %entry.Split29
  %retval.bn_cmp.Clone4 = alloca i32, align 4
  %digits.addr.bn_cmp.Clone5 = alloca i32, align 4
  %b.addr.bn_cmp.Clone6 = alloca i32*, align 4
  %a.addr.bn_cmp.Clone7 = alloca i32*, align 4
  %i.bn_cmp.Clone8 = alloca i32, align 4
  store i32 %29, i32* %digits.addr.bn_cmp.Clone5, align 4
  store i32* %arraydecay18, i32** %b.addr.bn_cmp.Clone6, align 4
  store i32* %arraydecay19, i32** %a.addr.bn_cmp.Clone7, align 4
  %30 = load i32, i32* %digits.addr.bn_cmp.Clone5, align 4
  %sub.bn_cmp.Clone9 = sub i32 %30, 1
  store i32 %sub.bn_cmp.Clone9, i32* %i.bn_cmp.Clone8, align 4
  br label %for.cond.bn_cmp.Clone10

for.cond.bn_cmp.Clone10:                          ; preds = %for.inc.bn_cmp.Clone23, %entry.bn_cmp.Clone3
  %31 = load i32, i32* %i.bn_cmp.Clone8, align 4
  %cmp.bn_cmp.Clone11 = icmp sge i32 %31, 0
  br i1 %cmp.bn_cmp.Clone11, label %for.body.bn_cmp.Clone12, label %for.end.bn_cmp.Clone25

for.body.bn_cmp.Clone12:                          ; preds = %for.cond.bn_cmp.Clone10
  %32 = load i32*, i32** %a.addr.bn_cmp.Clone7, align 4
  %33 = load i32, i32* %i.bn_cmp.Clone8, align 4
  %arrayidx.bn_cmp.Clone13 = getelementptr inbounds i32, i32* %32, i32 %33
  %34 = load i32, i32* %arrayidx.bn_cmp.Clone13, align 4
  %35 = load i32*, i32** %b.addr.bn_cmp.Clone6, align 4
  %36 = load i32, i32* %i.bn_cmp.Clone8, align 4
  %arrayidx1.bn_cmp.Clone14 = getelementptr inbounds i32, i32* %35, i32 %36
  %37 = load i32, i32* %arrayidx1.bn_cmp.Clone14, align 4
  %cmp2.bn_cmp.Clone15 = icmp ugt i32 %34, %37
  br i1 %cmp2.bn_cmp.Clone15, label %if.then.bn_cmp.Clone16, label %if.end.bn_cmp.Clone17

if.then.bn_cmp.Clone16:                           ; preds = %for.body.bn_cmp.Clone12
  store i32 1, i32* %retval.bn_cmp.Clone4, align 4
  br label %return.bn_cmp.Clone26

if.end.bn_cmp.Clone17:                            ; preds = %for.body.bn_cmp.Clone12
  %38 = load i32*, i32** %a.addr.bn_cmp.Clone7, align 4
  %39 = load i32, i32* %i.bn_cmp.Clone8, align 4
  %arrayidx3.bn_cmp.Clone18 = getelementptr inbounds i32, i32* %38, i32 %39
  %40 = load i32, i32* %arrayidx3.bn_cmp.Clone18, align 4
  %41 = load i32*, i32** %b.addr.bn_cmp.Clone6, align 4
  %42 = load i32, i32* %i.bn_cmp.Clone8, align 4
  %arrayidx4.bn_cmp.Clone19 = getelementptr inbounds i32, i32* %41, i32 %42
  %43 = load i32, i32* %arrayidx4.bn_cmp.Clone19, align 4
  %cmp5.bn_cmp.Clone20 = icmp ult i32 %40, %43
  br i1 %cmp5.bn_cmp.Clone20, label %if.then6.bn_cmp.Clone21, label %if.end7.bn_cmp.Clone22

if.then6.bn_cmp.Clone21:                          ; preds = %if.end.bn_cmp.Clone17
  store i32 -1, i32* %retval.bn_cmp.Clone4, align 4
  br label %return.bn_cmp.Clone26

if.end7.bn_cmp.Clone22:                           ; preds = %if.end.bn_cmp.Clone17
  br label %for.inc.bn_cmp.Clone23

for.inc.bn_cmp.Clone23:                           ; preds = %if.end7.bn_cmp.Clone22
  %44 = load i32, i32* %i.bn_cmp.Clone8, align 4
  %dec.bn_cmp.Clone24 = add nsw i32 %44, -1
  store i32 %dec.bn_cmp.Clone24, i32* %i.bn_cmp.Clone8, align 4
  br label %for.cond.bn_cmp.Clone10

for.end.bn_cmp.Clone25:                           ; preds = %for.cond.bn_cmp.Clone10
  store i32 0, i32* %retval.bn_cmp.Clone4, align 4
  br label %return.bn_cmp.Clone26

return.bn_cmp.Clone26:                            ; preds = %for.end.bn_cmp.Clone25, %if.then6.bn_cmp.Clone21, %if.then.bn_cmp.Clone16
  %45 = load i32, i32* %retval.bn_cmp.Clone4, align 4
  store i32 %45, i32* %RetValuePtr27
  br label %entry.Split

entry.Split:                                      ; preds = %return.bn_cmp.Clone26
  %RetValue28 = load i32, i32* %RetValuePtr27
  %cmp = icmp sge i32 %RetValue28, 0
  %RetValuePtr = alloca i32, align 4
  %RetValuePtr1 = alloca i32, align 4
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry.Split
  store i32 4097, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry.Split
  %46 = load i32, i32* %pdigits, align 4
  %arraydecay21 = getelementptr inbounds [65 x i32], [65 x i32]* %p, i32 0, i32 0
  %47 = load i32, i32* %cdigits, align 4
  %arraydecay22 = getelementptr inbounds [65 x i32], [65 x i32]* %c, i32 0, i32 0
  %arraydecay23 = getelementptr inbounds [65 x i32], [65 x i32]* %cp, i32 0, i32 0
  br label %entry.bn_mod.Clone72

entry.bn_mod.Clone72:                             ; preds = %if.end
  %cdigits.addr.bn_mod.Clone73 = alloca i32, align 4
  %c.addr.bn_mod.Clone74 = alloca i32*, align 4
  %bdigits.addr.bn_mod.Clone75 = alloca i32, align 4
  %b.addr.bn_mod.Clone76 = alloca i32*, align 4
  %a.addr.bn_mod.Clone77 = alloca i32*, align 4
  %t.bn_mod.Clone78 = alloca [130 x i32], align 4
  store i32 %46, i32* %cdigits.addr.bn_mod.Clone73, align 4
  store i32* %arraydecay21, i32** %c.addr.bn_mod.Clone74, align 4
  store i32 %47, i32* %bdigits.addr.bn_mod.Clone75, align 4
  store i32* %arraydecay22, i32** %b.addr.bn_mod.Clone76, align 4
  store i32* %arraydecay23, i32** %a.addr.bn_mod.Clone77, align 4
  %48 = bitcast [130 x i32]* %t.bn_mod.Clone78 to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %48, i8 0, i32 520, i1 false)
  %49 = load i32, i32* %cdigits.addr.bn_mod.Clone73, align 4
  %50 = load i32*, i32** %c.addr.bn_mod.Clone74, align 4
  %51 = load i32, i32* %bdigits.addr.bn_mod.Clone75, align 4
  %52 = load i32*, i32** %b.addr.bn_mod.Clone76, align 4
  %53 = load i32*, i32** %a.addr.bn_mod.Clone77, align 4
  %arraydecay.bn_mod.Clone79 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mod.Clone78, i32 0, i32 0
  call void @bn_div(i32* %arraydecay.bn_mod.Clone79, i32* %53, i32* %52, i32 %51, i32* %50, i32 %49)
  %arraydecay1.bn_mod.Clone80 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mod.Clone78, i32 0, i32 0
  %54 = bitcast i32* %arraydecay1.bn_mod.Clone80 to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %54, i8 0, i32 520, i1 false)
  br label %if.end.Split71

if.end.Split71:                                   ; preds = %entry.bn_mod.Clone72
  %55 = load i32, i32* %pdigits, align 4
  %arraydecay24 = getelementptr inbounds [65 x i32], [65 x i32]* %q, i32 0, i32 0
  %56 = load i32, i32* %cdigits, align 4
  %arraydecay25 = getelementptr inbounds [65 x i32], [65 x i32]* %c, i32 0, i32 0
  %arraydecay26 = getelementptr inbounds [65 x i32], [65 x i32]* %cq, i32 0, i32 0
  br label %entry.bn_mod.Clone

entry.bn_mod.Clone:                               ; preds = %if.end.Split71
  %cdigits.addr.bn_mod.Clone = alloca i32, align 4
  %c.addr.bn_mod.Clone = alloca i32*, align 4
  %bdigits.addr.bn_mod.Clone = alloca i32, align 4
  %b.addr.bn_mod.Clone = alloca i32*, align 4
  %a.addr.bn_mod.Clone = alloca i32*, align 4
  %t.bn_mod.Clone = alloca [130 x i32], align 4
  store i32 %55, i32* %cdigits.addr.bn_mod.Clone, align 4
  store i32* %arraydecay24, i32** %c.addr.bn_mod.Clone, align 4
  store i32 %56, i32* %bdigits.addr.bn_mod.Clone, align 4
  store i32* %arraydecay25, i32** %b.addr.bn_mod.Clone, align 4
  store i32* %arraydecay26, i32** %a.addr.bn_mod.Clone, align 4
  %57 = bitcast [130 x i32]* %t.bn_mod.Clone to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %57, i8 0, i32 520, i1 false)
  %58 = load i32, i32* %cdigits.addr.bn_mod.Clone, align 4
  %59 = load i32*, i32** %c.addr.bn_mod.Clone, align 4
  %60 = load i32, i32* %bdigits.addr.bn_mod.Clone, align 4
  %61 = load i32*, i32** %b.addr.bn_mod.Clone, align 4
  %62 = load i32*, i32** %a.addr.bn_mod.Clone, align 4
  %arraydecay.bn_mod.Clone = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mod.Clone, i32 0, i32 0
  call void @bn_div(i32* %arraydecay.bn_mod.Clone, i32* %62, i32* %61, i32 %60, i32* %59, i32 %58)
  %arraydecay1.bn_mod.Clone = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mod.Clone, i32 0, i32 0
  %63 = bitcast i32* %arraydecay1.bn_mod.Clone to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %63, i8 0, i32 520, i1 false)
  br label %if.end.Split70

if.end.Split70:                                   ; preds = %entry.bn_mod.Clone
  %64 = load i32, i32* %pdigits, align 4
  %arraydecay27 = getelementptr inbounds [65 x i32], [65 x i32]* %p, i32 0, i32 0
  %65 = load i32, i32* %pdigits, align 4
  %arraydecay28 = getelementptr inbounds [65 x i32], [65 x i32]* %dp, i32 0, i32 0
  %arraydecay29 = getelementptr inbounds [65 x i32], [65 x i32]* %cp, i32 0, i32 0
  %arraydecay30 = getelementptr inbounds [65 x i32], [65 x i32]* %mp, i32 0, i32 0
  call void @bn_mod_exp(i32* %arraydecay30, i32* %arraydecay29, i32* %arraydecay28, i32 %65, i32* %arraydecay27, i32 %64)
  %66 = load i32, i32* %ndigits, align 4
  %arraydecay31 = getelementptr inbounds [65 x i32], [65 x i32]* %mq, i32 0, i32 0
  br label %entry.bn_assign_zero.Clone

entry.bn_assign_zero.Clone:                       ; preds = %if.end.Split70
  %digits.addr.bn_assign_zero.Clone = alloca i32, align 4
  %a.addr.bn_assign_zero.Clone = alloca i32*, align 4
  %i.bn_assign_zero.Clone = alloca i32, align 4
  store i32 %66, i32* %digits.addr.bn_assign_zero.Clone, align 4
  store i32* %arraydecay31, i32** %a.addr.bn_assign_zero.Clone, align 4
  store i32 0, i32* %i.bn_assign_zero.Clone, align 4
  br label %for.cond.bn_assign_zero.Clone

for.cond.bn_assign_zero.Clone:                    ; preds = %for.inc.bn_assign_zero.Clone, %entry.bn_assign_zero.Clone
  %67 = load i32, i32* %i.bn_assign_zero.Clone, align 4
  %68 = load i32, i32* %digits.addr.bn_assign_zero.Clone, align 4
  %cmp.bn_assign_zero.Clone = icmp ult i32 %67, %68
  br i1 %cmp.bn_assign_zero.Clone, label %for.body.bn_assign_zero.Clone, label %for.end.bn_assign_zero.Clone

for.body.bn_assign_zero.Clone:                    ; preds = %for.cond.bn_assign_zero.Clone
  %69 = load i32*, i32** %a.addr.bn_assign_zero.Clone, align 4
  %70 = load i32, i32* %i.bn_assign_zero.Clone, align 4
  %arrayidx.bn_assign_zero.Clone = getelementptr inbounds i32, i32* %69, i32 %70
  store i32 0, i32* %arrayidx.bn_assign_zero.Clone, align 4
  br label %for.inc.bn_assign_zero.Clone

for.inc.bn_assign_zero.Clone:                     ; preds = %for.body.bn_assign_zero.Clone
  %71 = load i32, i32* %i.bn_assign_zero.Clone, align 4
  %inc.bn_assign_zero.Clone = add i32 %71, 1
  store i32 %inc.bn_assign_zero.Clone, i32* %i.bn_assign_zero.Clone, align 4
  br label %for.cond.bn_assign_zero.Clone

for.end.bn_assign_zero.Clone:                     ; preds = %for.cond.bn_assign_zero.Clone
  br label %if.end.Split

if.end.Split:                                     ; preds = %for.end.bn_assign_zero.Clone
  %72 = load i32, i32* %pdigits, align 4
  %arraydecay32 = getelementptr inbounds [65 x i32], [65 x i32]* %q, i32 0, i32 0
  %73 = load i32, i32* %pdigits, align 4
  %arraydecay33 = getelementptr inbounds [65 x i32], [65 x i32]* %dq, i32 0, i32 0
  %arraydecay34 = getelementptr inbounds [65 x i32], [65 x i32]* %cq, i32 0, i32 0
  %arraydecay35 = getelementptr inbounds [65 x i32], [65 x i32]* %mq, i32 0, i32 0
  call void @bn_mod_exp(i32* %arraydecay35, i32* %arraydecay34, i32* %arraydecay33, i32 %73, i32* %arraydecay32, i32 %72)
  %74 = load i32, i32* %pdigits, align 4
  %arraydecay36 = getelementptr inbounds [65 x i32], [65 x i32]* %mq, i32 0, i32 0
  %arraydecay37 = getelementptr inbounds [65 x i32], [65 x i32]* %mp, i32 0, i32 0
  br label %entry.bn_cmp.Clone

entry.bn_cmp.Clone:                               ; preds = %if.end.Split
  %retval.bn_cmp.Clone = alloca i32, align 4
  %digits.addr.bn_cmp.Clone = alloca i32, align 4
  %b.addr.bn_cmp.Clone = alloca i32*, align 4
  %a.addr.bn_cmp.Clone = alloca i32*, align 4
  %i.bn_cmp.Clone = alloca i32, align 4
  store i32 %74, i32* %digits.addr.bn_cmp.Clone, align 4
  store i32* %arraydecay36, i32** %b.addr.bn_cmp.Clone, align 4
  store i32* %arraydecay37, i32** %a.addr.bn_cmp.Clone, align 4
  %75 = load i32, i32* %digits.addr.bn_cmp.Clone, align 4
  %sub.bn_cmp.Clone = sub i32 %75, 1
  store i32 %sub.bn_cmp.Clone, i32* %i.bn_cmp.Clone, align 4
  br label %for.cond.bn_cmp.Clone

for.cond.bn_cmp.Clone:                            ; preds = %for.inc.bn_cmp.Clone, %entry.bn_cmp.Clone
  %76 = load i32, i32* %i.bn_cmp.Clone, align 4
  %cmp.bn_cmp.Clone = icmp sge i32 %76, 0
  br i1 %cmp.bn_cmp.Clone, label %for.body.bn_cmp.Clone, label %for.end.bn_cmp.Clone

for.body.bn_cmp.Clone:                            ; preds = %for.cond.bn_cmp.Clone
  %77 = load i32*, i32** %a.addr.bn_cmp.Clone, align 4
  %78 = load i32, i32* %i.bn_cmp.Clone, align 4
  %arrayidx.bn_cmp.Clone = getelementptr inbounds i32, i32* %77, i32 %78
  %79 = load i32, i32* %arrayidx.bn_cmp.Clone, align 4
  %80 = load i32*, i32** %b.addr.bn_cmp.Clone, align 4
  %81 = load i32, i32* %i.bn_cmp.Clone, align 4
  %arrayidx1.bn_cmp.Clone = getelementptr inbounds i32, i32* %80, i32 %81
  %82 = load i32, i32* %arrayidx1.bn_cmp.Clone, align 4
  %cmp2.bn_cmp.Clone = icmp ugt i32 %79, %82
  br i1 %cmp2.bn_cmp.Clone, label %if.then.bn_cmp.Clone, label %if.end.bn_cmp.Clone

if.then.bn_cmp.Clone:                             ; preds = %for.body.bn_cmp.Clone
  store i32 1, i32* %retval.bn_cmp.Clone, align 4
  br label %return.bn_cmp.Clone

if.end.bn_cmp.Clone:                              ; preds = %for.body.bn_cmp.Clone
  %83 = load i32*, i32** %a.addr.bn_cmp.Clone, align 4
  %84 = load i32, i32* %i.bn_cmp.Clone, align 4
  %arrayidx3.bn_cmp.Clone = getelementptr inbounds i32, i32* %83, i32 %84
  %85 = load i32, i32* %arrayidx3.bn_cmp.Clone, align 4
  %86 = load i32*, i32** %b.addr.bn_cmp.Clone, align 4
  %87 = load i32, i32* %i.bn_cmp.Clone, align 4
  %arrayidx4.bn_cmp.Clone = getelementptr inbounds i32, i32* %86, i32 %87
  %88 = load i32, i32* %arrayidx4.bn_cmp.Clone, align 4
  %cmp5.bn_cmp.Clone = icmp ult i32 %85, %88
  br i1 %cmp5.bn_cmp.Clone, label %if.then6.bn_cmp.Clone, label %if.end7.bn_cmp.Clone

if.then6.bn_cmp.Clone:                            ; preds = %if.end.bn_cmp.Clone
  store i32 -1, i32* %retval.bn_cmp.Clone, align 4
  br label %return.bn_cmp.Clone

if.end7.bn_cmp.Clone:                             ; preds = %if.end.bn_cmp.Clone
  br label %for.inc.bn_cmp.Clone

for.inc.bn_cmp.Clone:                             ; preds = %if.end7.bn_cmp.Clone
  %89 = load i32, i32* %i.bn_cmp.Clone, align 4
  %dec.bn_cmp.Clone = add nsw i32 %89, -1
  store i32 %dec.bn_cmp.Clone, i32* %i.bn_cmp.Clone, align 4
  br label %for.cond.bn_cmp.Clone

for.end.bn_cmp.Clone:                             ; preds = %for.cond.bn_cmp.Clone
  store i32 0, i32* %retval.bn_cmp.Clone, align 4
  br label %return.bn_cmp.Clone

return.bn_cmp.Clone:                              ; preds = %for.end.bn_cmp.Clone, %if.then6.bn_cmp.Clone, %if.then.bn_cmp.Clone
  %90 = load i32, i32* %retval.bn_cmp.Clone, align 4
  store i32 %90, i32* %RetValuePtr1
  br label %if.end.Split.Split

if.end.Split.Split:                               ; preds = %return.bn_cmp.Clone
  %RetValue2 = load i32, i32* %RetValuePtr1
  %cmp39 = icmp sge i32 %RetValue2, 0
  br i1 %cmp39, label %if.then40, label %if.else

if.then40:                                        ; preds = %if.end.Split.Split
  %91 = load i32, i32* %pdigits, align 4
  %arraydecay41 = getelementptr inbounds [65 x i32], [65 x i32]* %mq, i32 0, i32 0
  %arraydecay42 = getelementptr inbounds [65 x i32], [65 x i32]* %mp, i32 0, i32 0
  %arraydecay43 = getelementptr inbounds [65 x i32], [65 x i32]* %t, i32 0, i32 0
  %call44 = call i32 @bn_sub(i32* %arraydecay43, i32* %arraydecay42, i32* %arraydecay41, i32 %91)
  br label %if.end53

if.else:                                          ; preds = %if.end.Split.Split
  %92 = load i32, i32* %pdigits, align 4
  %arraydecay45 = getelementptr inbounds [65 x i32], [65 x i32]* %mp, i32 0, i32 0
  %arraydecay46 = getelementptr inbounds [65 x i32], [65 x i32]* %mq, i32 0, i32 0
  %arraydecay47 = getelementptr inbounds [65 x i32], [65 x i32]* %t, i32 0, i32 0
  %call48 = call i32 @bn_sub(i32* %arraydecay47, i32* %arraydecay46, i32* %arraydecay45, i32 %92)
  %93 = load i32, i32* %pdigits, align 4
  %arraydecay49 = getelementptr inbounds [65 x i32], [65 x i32]* %t, i32 0, i32 0
  %arraydecay50 = getelementptr inbounds [65 x i32], [65 x i32]* %p, i32 0, i32 0
  %arraydecay51 = getelementptr inbounds [65 x i32], [65 x i32]* %t, i32 0, i32 0
  %call52 = call i32 @bn_sub(i32* %arraydecay51, i32* %arraydecay50, i32* %arraydecay49, i32 %93)
  br label %if.end53

if.end53:                                         ; preds = %if.else, %if.then40
  %94 = load i32, i32* %pdigits, align 4
  %arraydecay54 = getelementptr inbounds [65 x i32], [65 x i32]* %p, i32 0, i32 0
  %arraydecay55 = getelementptr inbounds [65 x i32], [65 x i32]* %q_inv, i32 0, i32 0
  %arraydecay56 = getelementptr inbounds [65 x i32], [65 x i32]* %t, i32 0, i32 0
  %arraydecay57 = getelementptr inbounds [65 x i32], [65 x i32]* %t, i32 0, i32 0
  br label %entry.bn_mod_mul.Clone

entry.bn_mod_mul.Clone:                           ; preds = %if.end53
  %digits.addr.bn_mod_mul.Clone = alloca i32, align 4
  %d.addr.bn_mod_mul.Clone = alloca i32*, align 4
  %c.addr.bn_mod_mul.Clone = alloca i32*, align 4
  %b.addr.bn_mod_mul.Clone = alloca i32*, align 4
  %a.addr.bn_mod_mul.Clone = alloca i32*, align 4
  %t.bn_mod_mul.Clone = alloca [130 x i32], align 4
  store i32 %94, i32* %digits.addr.bn_mod_mul.Clone, align 4
  store i32* %arraydecay54, i32** %d.addr.bn_mod_mul.Clone, align 4
  store i32* %arraydecay55, i32** %c.addr.bn_mod_mul.Clone, align 4
  store i32* %arraydecay56, i32** %b.addr.bn_mod_mul.Clone, align 4
  store i32* %arraydecay57, i32** %a.addr.bn_mod_mul.Clone, align 4
  %95 = load i32, i32* %digits.addr.bn_mod_mul.Clone, align 4
  %96 = load i32*, i32** %c.addr.bn_mod_mul.Clone, align 4
  %97 = load i32*, i32** %b.addr.bn_mod_mul.Clone, align 4
  %arraydecay.bn_mod_mul.Clone = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mod_mul.Clone, i32 0, i32 0
  br label %entry.bn_mul.Clone

entry.bn_mul.Clone:                               ; preds = %entry.bn_mod_mul.Clone
  %digits.addr.bn_mul.Clone = alloca i32, align 4
  %c.addr.bn_mul.Clone = alloca i32*, align 4
  %b.addr.bn_mul.Clone = alloca i32*, align 4
  %a.addr.bn_mul.Clone = alloca i32*, align 4
  %t.bn_mul.Clone = alloca [130 x i32], align 4
  %bdigits.bn_mul.Clone = alloca i32, align 4
  %cdigits.bn_mul.Clone = alloca i32, align 4
  %i.bn_mul.Clone = alloca i32, align 4
  store i32 %95, i32* %digits.addr.bn_mul.Clone, align 4
  store i32* %96, i32** %c.addr.bn_mul.Clone, align 4
  store i32* %97, i32** %b.addr.bn_mul.Clone, align 4
  store i32* %arraydecay.bn_mod_mul.Clone, i32** %a.addr.bn_mul.Clone, align 4
  %98 = load i32, i32* %digits.addr.bn_mul.Clone, align 4
  %mul.bn_mul.Clone = mul i32 2, %98
  %arraydecay.bn_mul.Clone = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone, i32 0, i32 0
  %RetValuePtr.bn_mul.Clone = alloca i32, align 4
  %RetValuePtr18.bn_mul.Clone = alloca i32, align 4
  br label %entry.bn_assign_zero.Clone.bn_mul.Clone

entry.bn_assign_zero.Clone.bn_mul.Clone:          ; preds = %entry.bn_mul.Clone
  %digits.addr.bn_assign_zero.Clone.bn_mul.Clone = alloca i32, align 4
  %a.addr.bn_assign_zero.Clone.bn_mul.Clone = alloca i32*, align 4
  %i.bn_assign_zero.Clone.bn_mul.Clone = alloca i32, align 4
  store i32 %mul.bn_mul.Clone, i32* %digits.addr.bn_assign_zero.Clone.bn_mul.Clone, align 4
  store i32* %arraydecay.bn_mul.Clone, i32** %a.addr.bn_assign_zero.Clone.bn_mul.Clone, align 4
  store i32 0, i32* %i.bn_assign_zero.Clone.bn_mul.Clone, align 4
  br label %for.cond.bn_assign_zero.Clone.bn_mul.Clone

for.cond.bn_assign_zero.Clone.bn_mul.Clone:       ; preds = %for.inc.bn_assign_zero.Clone.bn_mul.Clone, %entry.bn_assign_zero.Clone.bn_mul.Clone
  %99 = load i32, i32* %i.bn_assign_zero.Clone.bn_mul.Clone, align 4
  %100 = load i32, i32* %digits.addr.bn_assign_zero.Clone.bn_mul.Clone, align 4
  %cmp.bn_assign_zero.Clone.bn_mul.Clone = icmp ult i32 %99, %100
  br i1 %cmp.bn_assign_zero.Clone.bn_mul.Clone, label %for.body.bn_assign_zero.Clone.bn_mul.Clone, label %for.end.bn_assign_zero.Clone.bn_mul.Clone

for.body.bn_assign_zero.Clone.bn_mul.Clone:       ; preds = %for.cond.bn_assign_zero.Clone.bn_mul.Clone
  %101 = load i32*, i32** %a.addr.bn_assign_zero.Clone.bn_mul.Clone, align 4
  %102 = load i32, i32* %i.bn_assign_zero.Clone.bn_mul.Clone, align 4
  %arrayidx.bn_assign_zero.Clone.bn_mul.Clone = getelementptr inbounds i32, i32* %101, i32 %102
  store i32 0, i32* %arrayidx.bn_assign_zero.Clone.bn_mul.Clone, align 4
  br label %for.inc.bn_assign_zero.Clone.bn_mul.Clone

for.inc.bn_assign_zero.Clone.bn_mul.Clone:        ; preds = %for.body.bn_assign_zero.Clone.bn_mul.Clone
  %103 = load i32, i32* %i.bn_assign_zero.Clone.bn_mul.Clone, align 4
  %inc.bn_assign_zero.Clone.bn_mul.Clone = add i32 %103, 1
  store i32 %inc.bn_assign_zero.Clone.bn_mul.Clone, i32* %i.bn_assign_zero.Clone.bn_mul.Clone, align 4
  br label %for.cond.bn_assign_zero.Clone.bn_mul.Clone

for.end.bn_assign_zero.Clone.bn_mul.Clone:        ; preds = %for.cond.bn_assign_zero.Clone.bn_mul.Clone
  br label %entry.Split.bn_mul.Clone

entry.Split.bn_mul.Clone:                         ; preds = %for.end.bn_assign_zero.Clone.bn_mul.Clone
  %104 = load i32, i32* %digits.addr.bn_mul.Clone, align 4
  %105 = load i32*, i32** %b.addr.bn_mul.Clone, align 4
  br label %entry.bn_digits.Clone2.bn_mul.Clone

entry.bn_digits.Clone2.bn_mul.Clone:              ; preds = %entry.Split.bn_mul.Clone
  %digits.addr.bn_digits.Clone3.bn_mul.Clone = alloca i32, align 4
  %a.addr.bn_digits.Clone4.bn_mul.Clone = alloca i32*, align 4
  %i.bn_digits.Clone5.bn_mul.Clone = alloca i32, align 4
  store i32 %104, i32* %digits.addr.bn_digits.Clone3.bn_mul.Clone, align 4
  store i32* %105, i32** %a.addr.bn_digits.Clone4.bn_mul.Clone, align 4
  %106 = load i32, i32* %digits.addr.bn_digits.Clone3.bn_mul.Clone, align 4
  %sub.bn_digits.Clone6.bn_mul.Clone = sub i32 %106, 1
  store i32 %sub.bn_digits.Clone6.bn_mul.Clone, i32* %i.bn_digits.Clone5.bn_mul.Clone, align 4
  br label %for.cond.bn_digits.Clone7.bn_mul.Clone

for.cond.bn_digits.Clone7.bn_mul.Clone:           ; preds = %for.inc.bn_digits.Clone14.bn_mul.Clone, %entry.bn_digits.Clone2.bn_mul.Clone
  %107 = load i32, i32* %i.bn_digits.Clone5.bn_mul.Clone, align 4
  %cmp.bn_digits.Clone8.bn_mul.Clone = icmp sge i32 %107, 0
  br i1 %cmp.bn_digits.Clone8.bn_mul.Clone, label %for.body.bn_digits.Clone9.bn_mul.Clone, label %for.end.bn_digits.Clone16.bn_mul.Clone

for.body.bn_digits.Clone9.bn_mul.Clone:           ; preds = %for.cond.bn_digits.Clone7.bn_mul.Clone
  %108 = load i32*, i32** %a.addr.bn_digits.Clone4.bn_mul.Clone, align 4
  %109 = load i32, i32* %i.bn_digits.Clone5.bn_mul.Clone, align 4
  %arrayidx.bn_digits.Clone10.bn_mul.Clone = getelementptr inbounds i32, i32* %108, i32 %109
  %110 = load i32, i32* %arrayidx.bn_digits.Clone10.bn_mul.Clone, align 4
  %tobool.bn_digits.Clone11.bn_mul.Clone = icmp ne i32 %110, 0
  br i1 %tobool.bn_digits.Clone11.bn_mul.Clone, label %if.then.bn_digits.Clone12.bn_mul.Clone, label %if.end.bn_digits.Clone13.bn_mul.Clone

if.then.bn_digits.Clone12.bn_mul.Clone:           ; preds = %for.body.bn_digits.Clone9.bn_mul.Clone
  br label %for.end.bn_digits.Clone16.bn_mul.Clone

if.end.bn_digits.Clone13.bn_mul.Clone:            ; preds = %for.body.bn_digits.Clone9.bn_mul.Clone
  br label %for.inc.bn_digits.Clone14.bn_mul.Clone

for.inc.bn_digits.Clone14.bn_mul.Clone:           ; preds = %if.end.bn_digits.Clone13.bn_mul.Clone
  %111 = load i32, i32* %i.bn_digits.Clone5.bn_mul.Clone, align 4
  %dec.bn_digits.Clone15.bn_mul.Clone = add nsw i32 %111, -1
  store i32 %dec.bn_digits.Clone15.bn_mul.Clone, i32* %i.bn_digits.Clone5.bn_mul.Clone, align 4
  br label %for.cond.bn_digits.Clone7.bn_mul.Clone

for.end.bn_digits.Clone16.bn_mul.Clone:           ; preds = %if.then.bn_digits.Clone12.bn_mul.Clone, %for.cond.bn_digits.Clone7.bn_mul.Clone
  %112 = load i32, i32* %i.bn_digits.Clone5.bn_mul.Clone, align 4
  %add.bn_digits.Clone17.bn_mul.Clone = add nsw i32 %112, 1
  store i32 %add.bn_digits.Clone17.bn_mul.Clone, i32* %RetValuePtr18.bn_mul.Clone
  br label %entry.Split.Split1.bn_mul.Clone

entry.Split.Split1.bn_mul.Clone:                  ; preds = %for.end.bn_digits.Clone16.bn_mul.Clone
  %RetValue19.bn_mul.Clone = load i32, i32* %RetValuePtr18.bn_mul.Clone
  store i32 %RetValue19.bn_mul.Clone, i32* %bdigits.bn_mul.Clone, align 4
  %113 = load i32, i32* %digits.addr.bn_mul.Clone, align 4
  %114 = load i32*, i32** %c.addr.bn_mul.Clone, align 4
  br label %entry.bn_digits.Clone.bn_mul.Clone

entry.bn_digits.Clone.bn_mul.Clone:               ; preds = %entry.Split.Split1.bn_mul.Clone
  %digits.addr.bn_digits.Clone.bn_mul.Clone = alloca i32, align 4
  %a.addr.bn_digits.Clone.bn_mul.Clone = alloca i32*, align 4
  %i.bn_digits.Clone.bn_mul.Clone = alloca i32, align 4
  store i32 %113, i32* %digits.addr.bn_digits.Clone.bn_mul.Clone, align 4
  store i32* %114, i32** %a.addr.bn_digits.Clone.bn_mul.Clone, align 4
  %115 = load i32, i32* %digits.addr.bn_digits.Clone.bn_mul.Clone, align 4
  %sub.bn_digits.Clone.bn_mul.Clone = sub i32 %115, 1
  store i32 %sub.bn_digits.Clone.bn_mul.Clone, i32* %i.bn_digits.Clone.bn_mul.Clone, align 4
  br label %for.cond.bn_digits.Clone.bn_mul.Clone

for.cond.bn_digits.Clone.bn_mul.Clone:            ; preds = %for.inc.bn_digits.Clone.bn_mul.Clone, %entry.bn_digits.Clone.bn_mul.Clone
  %116 = load i32, i32* %i.bn_digits.Clone.bn_mul.Clone, align 4
  %cmp.bn_digits.Clone.bn_mul.Clone = icmp sge i32 %116, 0
  br i1 %cmp.bn_digits.Clone.bn_mul.Clone, label %for.body.bn_digits.Clone.bn_mul.Clone, label %for.end.bn_digits.Clone.bn_mul.Clone

for.body.bn_digits.Clone.bn_mul.Clone:            ; preds = %for.cond.bn_digits.Clone.bn_mul.Clone
  %117 = load i32*, i32** %a.addr.bn_digits.Clone.bn_mul.Clone, align 4
  %118 = load i32, i32* %i.bn_digits.Clone.bn_mul.Clone, align 4
  %arrayidx.bn_digits.Clone.bn_mul.Clone = getelementptr inbounds i32, i32* %117, i32 %118
  %119 = load i32, i32* %arrayidx.bn_digits.Clone.bn_mul.Clone, align 4
  %tobool.bn_digits.Clone.bn_mul.Clone = icmp ne i32 %119, 0
  br i1 %tobool.bn_digits.Clone.bn_mul.Clone, label %if.then.bn_digits.Clone.bn_mul.Clone, label %if.end.bn_digits.Clone.bn_mul.Clone

if.then.bn_digits.Clone.bn_mul.Clone:             ; preds = %for.body.bn_digits.Clone.bn_mul.Clone
  br label %for.end.bn_digits.Clone.bn_mul.Clone

if.end.bn_digits.Clone.bn_mul.Clone:              ; preds = %for.body.bn_digits.Clone.bn_mul.Clone
  br label %for.inc.bn_digits.Clone.bn_mul.Clone

for.inc.bn_digits.Clone.bn_mul.Clone:             ; preds = %if.end.bn_digits.Clone.bn_mul.Clone
  %120 = load i32, i32* %i.bn_digits.Clone.bn_mul.Clone, align 4
  %dec.bn_digits.Clone.bn_mul.Clone = add nsw i32 %120, -1
  store i32 %dec.bn_digits.Clone.bn_mul.Clone, i32* %i.bn_digits.Clone.bn_mul.Clone, align 4
  br label %for.cond.bn_digits.Clone.bn_mul.Clone

for.end.bn_digits.Clone.bn_mul.Clone:             ; preds = %if.then.bn_digits.Clone.bn_mul.Clone, %for.cond.bn_digits.Clone.bn_mul.Clone
  %121 = load i32, i32* %i.bn_digits.Clone.bn_mul.Clone, align 4
  %add.bn_digits.Clone.bn_mul.Clone = add nsw i32 %121, 1
  store i32 %add.bn_digits.Clone.bn_mul.Clone, i32* %RetValuePtr.bn_mul.Clone
  br label %entry.Split.Split.bn_mul.Clone

entry.Split.Split.bn_mul.Clone:                   ; preds = %for.end.bn_digits.Clone.bn_mul.Clone
  %RetValue.bn_mul.Clone = load i32, i32* %RetValuePtr.bn_mul.Clone
  store i32 %RetValue.bn_mul.Clone, i32* %cdigits.bn_mul.Clone, align 4
  store i32 0, i32* %i.bn_mul.Clone, align 4
  br label %for.cond.bn_mul.Clone

for.cond.bn_mul.Clone:                            ; preds = %for.inc.bn_mul.Clone, %entry.Split.Split.bn_mul.Clone
  %122 = load i32, i32* %i.bn_mul.Clone, align 4
  %123 = load i32, i32* %bdigits.bn_mul.Clone, align 4
  %cmp.bn_mul.Clone = icmp ult i32 %122, %123
  br i1 %cmp.bn_mul.Clone, label %for.body.bn_mul.Clone, label %for.end.bn_mul.Clone

for.body.bn_mul.Clone:                            ; preds = %for.cond.bn_mul.Clone
  %124 = load i32, i32* %cdigits.bn_mul.Clone, align 4
  %125 = load i32*, i32** %c.addr.bn_mul.Clone, align 4
  %126 = load i32*, i32** %b.addr.bn_mul.Clone, align 4
  %127 = load i32, i32* %i.bn_mul.Clone, align 4
  %arrayidx.bn_mul.Clone = getelementptr inbounds i32, i32* %126, i32 %127
  %128 = load i32, i32* %arrayidx.bn_mul.Clone, align 4
  %129 = load i32, i32* %i.bn_mul.Clone, align 4
  %arrayidx2.bn_mul.Clone = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone, i32 0, i32 %129
  %130 = load i32, i32* %i.bn_mul.Clone, align 4
  %arrayidx3.bn_mul.Clone = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone, i32 0, i32 %130
  %call4.bn_mul.Clone = call i32 @bn_add_digit_mul(i32* %arrayidx3.bn_mul.Clone, i32* %arrayidx2.bn_mul.Clone, i32 %128, i32* %125, i32 %124)
  %131 = load i32, i32* %i.bn_mul.Clone, align 4
  %132 = load i32, i32* %cdigits.bn_mul.Clone, align 4
  %add.bn_mul.Clone = add i32 %131, %132
  %arrayidx5.bn_mul.Clone = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone, i32 0, i32 %add.bn_mul.Clone
  %133 = load i32, i32* %arrayidx5.bn_mul.Clone, align 4
  %add6.bn_mul.Clone = add i32 %133, %call4.bn_mul.Clone
  store i32 %add6.bn_mul.Clone, i32* %arrayidx5.bn_mul.Clone, align 4
  br label %for.inc.bn_mul.Clone

for.inc.bn_mul.Clone:                             ; preds = %for.body.bn_mul.Clone
  %134 = load i32, i32* %i.bn_mul.Clone, align 4
  %inc.bn_mul.Clone = add i32 %134, 1
  store i32 %inc.bn_mul.Clone, i32* %i.bn_mul.Clone, align 4
  br label %for.cond.bn_mul.Clone

for.end.bn_mul.Clone:                             ; preds = %for.cond.bn_mul.Clone
  %135 = load i32, i32* %digits.addr.bn_mul.Clone, align 4
  %mul7.bn_mul.Clone = mul i32 2, %135
  %arraydecay8.bn_mul.Clone = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone, i32 0, i32 0
  %136 = load i32*, i32** %a.addr.bn_mul.Clone, align 4
  call void @bn_assign(i32* %136, i32* %arraydecay8.bn_mul.Clone, i32 %mul7.bn_mul.Clone)
  %arraydecay9.bn_mul.Clone = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone, i32 0, i32 0
  %137 = bitcast i32* %arraydecay9.bn_mul.Clone to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %137, i8 0, i32 520, i1 false)
  br label %entry.bn_mod_mul.Clone.Split

entry.bn_mod_mul.Clone.Split:                     ; preds = %for.end.bn_mul.Clone
  %138 = load i32, i32* %digits.addr.bn_mod_mul.Clone, align 4
  %139 = load i32*, i32** %d.addr.bn_mod_mul.Clone, align 4
  %140 = load i32, i32* %digits.addr.bn_mod_mul.Clone, align 4
  %mul.bn_mod_mul.Clone = mul i32 2, %140
  %arraydecay1.bn_mod_mul.Clone = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mod_mul.Clone, i32 0, i32 0
  %141 = load i32*, i32** %a.addr.bn_mod_mul.Clone, align 4
  br label %entry.bn_mod.Clone.bn_mod_mul.Clone

entry.bn_mod.Clone.bn_mod_mul.Clone:              ; preds = %entry.bn_mod_mul.Clone.Split
  %cdigits.addr.bn_mod.Clone.bn_mod_mul.Clone = alloca i32, align 4
  %c.addr.bn_mod.Clone.bn_mod_mul.Clone = alloca i32*, align 4
  %bdigits.addr.bn_mod.Clone.bn_mod_mul.Clone = alloca i32, align 4
  %b.addr.bn_mod.Clone.bn_mod_mul.Clone = alloca i32*, align 4
  %a.addr.bn_mod.Clone.bn_mod_mul.Clone = alloca i32*, align 4
  %t.bn_mod.Clone.bn_mod_mul.Clone = alloca [130 x i32], align 4
  store i32 %138, i32* %cdigits.addr.bn_mod.Clone.bn_mod_mul.Clone, align 4
  store i32* %139, i32** %c.addr.bn_mod.Clone.bn_mod_mul.Clone, align 4
  store i32 %mul.bn_mod_mul.Clone, i32* %bdigits.addr.bn_mod.Clone.bn_mod_mul.Clone, align 4
  store i32* %arraydecay1.bn_mod_mul.Clone, i32** %b.addr.bn_mod.Clone.bn_mod_mul.Clone, align 4
  store i32* %141, i32** %a.addr.bn_mod.Clone.bn_mod_mul.Clone, align 4
  %142 = bitcast [130 x i32]* %t.bn_mod.Clone.bn_mod_mul.Clone to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %142, i8 0, i32 520, i1 false)
  %143 = load i32, i32* %cdigits.addr.bn_mod.Clone.bn_mod_mul.Clone, align 4
  %144 = load i32*, i32** %c.addr.bn_mod.Clone.bn_mod_mul.Clone, align 4
  %145 = load i32, i32* %bdigits.addr.bn_mod.Clone.bn_mod_mul.Clone, align 4
  %146 = load i32*, i32** %b.addr.bn_mod.Clone.bn_mod_mul.Clone, align 4
  %147 = load i32*, i32** %a.addr.bn_mod.Clone.bn_mod_mul.Clone, align 4
  %arraydecay.bn_mod.Clone.bn_mod_mul.Clone = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mod.Clone.bn_mod_mul.Clone, i32 0, i32 0
  call void @bn_div(i32* %arraydecay.bn_mod.Clone.bn_mod_mul.Clone, i32* %147, i32* %146, i32 %145, i32* %144, i32 %143)
  %arraydecay1.bn_mod.Clone.bn_mod_mul.Clone = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mod.Clone.bn_mod_mul.Clone, i32 0, i32 0
  %148 = bitcast i32* %arraydecay1.bn_mod.Clone.bn_mod_mul.Clone to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %148, i8 0, i32 520, i1 false)
  br label %entry.Split.bn_mod_mul.Clone

entry.Split.bn_mod_mul.Clone:                     ; preds = %entry.bn_mod.Clone.bn_mod_mul.Clone
  %arraydecay2.bn_mod_mul.Clone = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mod_mul.Clone, i32 0, i32 0
  %149 = bitcast i32* %arraydecay2.bn_mod_mul.Clone to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %149, i8 0, i32 520, i1 false)
  br label %if.end53.Split81

if.end53.Split81:                                 ; preds = %entry.Split.bn_mod_mul.Clone
  %150 = load i32, i32* %pdigits, align 4
  %arraydecay58 = getelementptr inbounds [65 x i32], [65 x i32]* %q, i32 0, i32 0
  %arraydecay59 = getelementptr inbounds [65 x i32], [65 x i32]* %t, i32 0, i32 0
  %arraydecay60 = getelementptr inbounds [65 x i32], [65 x i32]* %t, i32 0, i32 0
  br label %entry.bn_mul.Clone82

entry.bn_mul.Clone82:                             ; preds = %if.end53.Split81
  %digits.addr.bn_mul.Clone83 = alloca i32, align 4
  %c.addr.bn_mul.Clone84 = alloca i32*, align 4
  %b.addr.bn_mul.Clone85 = alloca i32*, align 4
  %a.addr.bn_mul.Clone86 = alloca i32*, align 4
  %t.bn_mul.Clone87 = alloca [130 x i32], align 4
  %bdigits.bn_mul.Clone88 = alloca i32, align 4
  %cdigits.bn_mul.Clone89 = alloca i32, align 4
  %i.bn_mul.Clone90 = alloca i32, align 4
  store i32 %150, i32* %digits.addr.bn_mul.Clone83, align 4
  store i32* %arraydecay58, i32** %c.addr.bn_mul.Clone84, align 4
  store i32* %arraydecay59, i32** %b.addr.bn_mul.Clone85, align 4
  store i32* %arraydecay60, i32** %a.addr.bn_mul.Clone86, align 4
  %151 = load i32, i32* %digits.addr.bn_mul.Clone83, align 4
  %mul.bn_mul.Clone91 = mul i32 2, %151
  %arraydecay.bn_mul.Clone92 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone87, i32 0, i32 0
  %RetValuePtr.bn_mul.Clone93 = alloca i32, align 4
  %RetValuePtr18.bn_mul.Clone94 = alloca i32, align 4
  br label %entry.bn_assign_zero.Clone.bn_mul.Clone95

entry.bn_assign_zero.Clone.bn_mul.Clone95:        ; preds = %entry.bn_mul.Clone82
  %digits.addr.bn_assign_zero.Clone.bn_mul.Clone96 = alloca i32, align 4
  %a.addr.bn_assign_zero.Clone.bn_mul.Clone97 = alloca i32*, align 4
  %i.bn_assign_zero.Clone.bn_mul.Clone98 = alloca i32, align 4
  store i32 %mul.bn_mul.Clone91, i32* %digits.addr.bn_assign_zero.Clone.bn_mul.Clone96, align 4
  store i32* %arraydecay.bn_mul.Clone92, i32** %a.addr.bn_assign_zero.Clone.bn_mul.Clone97, align 4
  store i32 0, i32* %i.bn_assign_zero.Clone.bn_mul.Clone98, align 4
  br label %for.cond.bn_assign_zero.Clone.bn_mul.Clone99

for.cond.bn_assign_zero.Clone.bn_mul.Clone99:     ; preds = %for.inc.bn_assign_zero.Clone.bn_mul.Clone103, %entry.bn_assign_zero.Clone.bn_mul.Clone95
  %152 = load i32, i32* %i.bn_assign_zero.Clone.bn_mul.Clone98, align 4
  %153 = load i32, i32* %digits.addr.bn_assign_zero.Clone.bn_mul.Clone96, align 4
  %cmp.bn_assign_zero.Clone.bn_mul.Clone100 = icmp ult i32 %152, %153
  br i1 %cmp.bn_assign_zero.Clone.bn_mul.Clone100, label %for.body.bn_assign_zero.Clone.bn_mul.Clone101, label %for.end.bn_assign_zero.Clone.bn_mul.Clone105

for.body.bn_assign_zero.Clone.bn_mul.Clone101:    ; preds = %for.cond.bn_assign_zero.Clone.bn_mul.Clone99
  %154 = load i32*, i32** %a.addr.bn_assign_zero.Clone.bn_mul.Clone97, align 4
  %155 = load i32, i32* %i.bn_assign_zero.Clone.bn_mul.Clone98, align 4
  %arrayidx.bn_assign_zero.Clone.bn_mul.Clone102 = getelementptr inbounds i32, i32* %154, i32 %155
  store i32 0, i32* %arrayidx.bn_assign_zero.Clone.bn_mul.Clone102, align 4
  br label %for.inc.bn_assign_zero.Clone.bn_mul.Clone103

for.inc.bn_assign_zero.Clone.bn_mul.Clone103:     ; preds = %for.body.bn_assign_zero.Clone.bn_mul.Clone101
  %156 = load i32, i32* %i.bn_assign_zero.Clone.bn_mul.Clone98, align 4
  %inc.bn_assign_zero.Clone.bn_mul.Clone104 = add i32 %156, 1
  store i32 %inc.bn_assign_zero.Clone.bn_mul.Clone104, i32* %i.bn_assign_zero.Clone.bn_mul.Clone98, align 4
  br label %for.cond.bn_assign_zero.Clone.bn_mul.Clone99

for.end.bn_assign_zero.Clone.bn_mul.Clone105:     ; preds = %for.cond.bn_assign_zero.Clone.bn_mul.Clone99
  br label %entry.Split.bn_mul.Clone106

entry.Split.bn_mul.Clone106:                      ; preds = %for.end.bn_assign_zero.Clone.bn_mul.Clone105
  %157 = load i32, i32* %digits.addr.bn_mul.Clone83, align 4
  %158 = load i32*, i32** %b.addr.bn_mul.Clone85, align 4
  br label %entry.bn_digits.Clone2.bn_mul.Clone107

entry.bn_digits.Clone2.bn_mul.Clone107:           ; preds = %entry.Split.bn_mul.Clone106
  %digits.addr.bn_digits.Clone3.bn_mul.Clone108 = alloca i32, align 4
  %a.addr.bn_digits.Clone4.bn_mul.Clone109 = alloca i32*, align 4
  %i.bn_digits.Clone5.bn_mul.Clone110 = alloca i32, align 4
  store i32 %157, i32* %digits.addr.bn_digits.Clone3.bn_mul.Clone108, align 4
  store i32* %158, i32** %a.addr.bn_digits.Clone4.bn_mul.Clone109, align 4
  %159 = load i32, i32* %digits.addr.bn_digits.Clone3.bn_mul.Clone108, align 4
  %sub.bn_digits.Clone6.bn_mul.Clone111 = sub i32 %159, 1
  store i32 %sub.bn_digits.Clone6.bn_mul.Clone111, i32* %i.bn_digits.Clone5.bn_mul.Clone110, align 4
  br label %for.cond.bn_digits.Clone7.bn_mul.Clone112

for.cond.bn_digits.Clone7.bn_mul.Clone112:        ; preds = %for.inc.bn_digits.Clone14.bn_mul.Clone119, %entry.bn_digits.Clone2.bn_mul.Clone107
  %160 = load i32, i32* %i.bn_digits.Clone5.bn_mul.Clone110, align 4
  %cmp.bn_digits.Clone8.bn_mul.Clone113 = icmp sge i32 %160, 0
  br i1 %cmp.bn_digits.Clone8.bn_mul.Clone113, label %for.body.bn_digits.Clone9.bn_mul.Clone114, label %for.end.bn_digits.Clone16.bn_mul.Clone121

for.body.bn_digits.Clone9.bn_mul.Clone114:        ; preds = %for.cond.bn_digits.Clone7.bn_mul.Clone112
  %161 = load i32*, i32** %a.addr.bn_digits.Clone4.bn_mul.Clone109, align 4
  %162 = load i32, i32* %i.bn_digits.Clone5.bn_mul.Clone110, align 4
  %arrayidx.bn_digits.Clone10.bn_mul.Clone115 = getelementptr inbounds i32, i32* %161, i32 %162
  %163 = load i32, i32* %arrayidx.bn_digits.Clone10.bn_mul.Clone115, align 4
  %tobool.bn_digits.Clone11.bn_mul.Clone116 = icmp ne i32 %163, 0
  br i1 %tobool.bn_digits.Clone11.bn_mul.Clone116, label %if.then.bn_digits.Clone12.bn_mul.Clone117, label %if.end.bn_digits.Clone13.bn_mul.Clone118

if.then.bn_digits.Clone12.bn_mul.Clone117:        ; preds = %for.body.bn_digits.Clone9.bn_mul.Clone114
  br label %for.end.bn_digits.Clone16.bn_mul.Clone121

if.end.bn_digits.Clone13.bn_mul.Clone118:         ; preds = %for.body.bn_digits.Clone9.bn_mul.Clone114
  br label %for.inc.bn_digits.Clone14.bn_mul.Clone119

for.inc.bn_digits.Clone14.bn_mul.Clone119:        ; preds = %if.end.bn_digits.Clone13.bn_mul.Clone118
  %164 = load i32, i32* %i.bn_digits.Clone5.bn_mul.Clone110, align 4
  %dec.bn_digits.Clone15.bn_mul.Clone120 = add nsw i32 %164, -1
  store i32 %dec.bn_digits.Clone15.bn_mul.Clone120, i32* %i.bn_digits.Clone5.bn_mul.Clone110, align 4
  br label %for.cond.bn_digits.Clone7.bn_mul.Clone112

for.end.bn_digits.Clone16.bn_mul.Clone121:        ; preds = %if.then.bn_digits.Clone12.bn_mul.Clone117, %for.cond.bn_digits.Clone7.bn_mul.Clone112
  %165 = load i32, i32* %i.bn_digits.Clone5.bn_mul.Clone110, align 4
  %add.bn_digits.Clone17.bn_mul.Clone122 = add nsw i32 %165, 1
  store i32 %add.bn_digits.Clone17.bn_mul.Clone122, i32* %RetValuePtr18.bn_mul.Clone94
  br label %entry.Split.Split1.bn_mul.Clone123

entry.Split.Split1.bn_mul.Clone123:               ; preds = %for.end.bn_digits.Clone16.bn_mul.Clone121
  %RetValue19.bn_mul.Clone124 = load i32, i32* %RetValuePtr18.bn_mul.Clone94
  store i32 %RetValue19.bn_mul.Clone124, i32* %bdigits.bn_mul.Clone88, align 4
  %166 = load i32, i32* %digits.addr.bn_mul.Clone83, align 4
  %167 = load i32*, i32** %c.addr.bn_mul.Clone84, align 4
  br label %entry.bn_digits.Clone.bn_mul.Clone125

entry.bn_digits.Clone.bn_mul.Clone125:            ; preds = %entry.Split.Split1.bn_mul.Clone123
  %digits.addr.bn_digits.Clone.bn_mul.Clone126 = alloca i32, align 4
  %a.addr.bn_digits.Clone.bn_mul.Clone127 = alloca i32*, align 4
  %i.bn_digits.Clone.bn_mul.Clone128 = alloca i32, align 4
  store i32 %166, i32* %digits.addr.bn_digits.Clone.bn_mul.Clone126, align 4
  store i32* %167, i32** %a.addr.bn_digits.Clone.bn_mul.Clone127, align 4
  %168 = load i32, i32* %digits.addr.bn_digits.Clone.bn_mul.Clone126, align 4
  %sub.bn_digits.Clone.bn_mul.Clone129 = sub i32 %168, 1
  store i32 %sub.bn_digits.Clone.bn_mul.Clone129, i32* %i.bn_digits.Clone.bn_mul.Clone128, align 4
  br label %for.cond.bn_digits.Clone.bn_mul.Clone130

for.cond.bn_digits.Clone.bn_mul.Clone130:         ; preds = %for.inc.bn_digits.Clone.bn_mul.Clone137, %entry.bn_digits.Clone.bn_mul.Clone125
  %169 = load i32, i32* %i.bn_digits.Clone.bn_mul.Clone128, align 4
  %cmp.bn_digits.Clone.bn_mul.Clone131 = icmp sge i32 %169, 0
  br i1 %cmp.bn_digits.Clone.bn_mul.Clone131, label %for.body.bn_digits.Clone.bn_mul.Clone132, label %for.end.bn_digits.Clone.bn_mul.Clone139

for.body.bn_digits.Clone.bn_mul.Clone132:         ; preds = %for.cond.bn_digits.Clone.bn_mul.Clone130
  %170 = load i32*, i32** %a.addr.bn_digits.Clone.bn_mul.Clone127, align 4
  %171 = load i32, i32* %i.bn_digits.Clone.bn_mul.Clone128, align 4
  %arrayidx.bn_digits.Clone.bn_mul.Clone133 = getelementptr inbounds i32, i32* %170, i32 %171
  %172 = load i32, i32* %arrayidx.bn_digits.Clone.bn_mul.Clone133, align 4
  %tobool.bn_digits.Clone.bn_mul.Clone134 = icmp ne i32 %172, 0
  br i1 %tobool.bn_digits.Clone.bn_mul.Clone134, label %if.then.bn_digits.Clone.bn_mul.Clone135, label %if.end.bn_digits.Clone.bn_mul.Clone136

if.then.bn_digits.Clone.bn_mul.Clone135:          ; preds = %for.body.bn_digits.Clone.bn_mul.Clone132
  br label %for.end.bn_digits.Clone.bn_mul.Clone139

if.end.bn_digits.Clone.bn_mul.Clone136:           ; preds = %for.body.bn_digits.Clone.bn_mul.Clone132
  br label %for.inc.bn_digits.Clone.bn_mul.Clone137

for.inc.bn_digits.Clone.bn_mul.Clone137:          ; preds = %if.end.bn_digits.Clone.bn_mul.Clone136
  %173 = load i32, i32* %i.bn_digits.Clone.bn_mul.Clone128, align 4
  %dec.bn_digits.Clone.bn_mul.Clone138 = add nsw i32 %173, -1
  store i32 %dec.bn_digits.Clone.bn_mul.Clone138, i32* %i.bn_digits.Clone.bn_mul.Clone128, align 4
  br label %for.cond.bn_digits.Clone.bn_mul.Clone130

for.end.bn_digits.Clone.bn_mul.Clone139:          ; preds = %if.then.bn_digits.Clone.bn_mul.Clone135, %for.cond.bn_digits.Clone.bn_mul.Clone130
  %174 = load i32, i32* %i.bn_digits.Clone.bn_mul.Clone128, align 4
  %add.bn_digits.Clone.bn_mul.Clone140 = add nsw i32 %174, 1
  store i32 %add.bn_digits.Clone.bn_mul.Clone140, i32* %RetValuePtr.bn_mul.Clone93
  br label %entry.Split.Split.bn_mul.Clone141

entry.Split.Split.bn_mul.Clone141:                ; preds = %for.end.bn_digits.Clone.bn_mul.Clone139
  %RetValue.bn_mul.Clone142 = load i32, i32* %RetValuePtr.bn_mul.Clone93
  store i32 %RetValue.bn_mul.Clone142, i32* %cdigits.bn_mul.Clone89, align 4
  store i32 0, i32* %i.bn_mul.Clone90, align 4
  br label %for.cond.bn_mul.Clone143

for.cond.bn_mul.Clone143:                         ; preds = %for.inc.bn_mul.Clone153, %entry.Split.Split.bn_mul.Clone141
  %175 = load i32, i32* %i.bn_mul.Clone90, align 4
  %176 = load i32, i32* %bdigits.bn_mul.Clone88, align 4
  %cmp.bn_mul.Clone144 = icmp ult i32 %175, %176
  br i1 %cmp.bn_mul.Clone144, label %for.body.bn_mul.Clone145, label %for.end.bn_mul.Clone155

for.body.bn_mul.Clone145:                         ; preds = %for.cond.bn_mul.Clone143
  %177 = load i32, i32* %cdigits.bn_mul.Clone89, align 4
  %178 = load i32*, i32** %c.addr.bn_mul.Clone84, align 4
  %179 = load i32*, i32** %b.addr.bn_mul.Clone85, align 4
  %180 = load i32, i32* %i.bn_mul.Clone90, align 4
  %arrayidx.bn_mul.Clone146 = getelementptr inbounds i32, i32* %179, i32 %180
  %181 = load i32, i32* %arrayidx.bn_mul.Clone146, align 4
  %182 = load i32, i32* %i.bn_mul.Clone90, align 4
  %arrayidx2.bn_mul.Clone147 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone87, i32 0, i32 %182
  %183 = load i32, i32* %i.bn_mul.Clone90, align 4
  %arrayidx3.bn_mul.Clone148 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone87, i32 0, i32 %183
  %call4.bn_mul.Clone149 = call i32 @bn_add_digit_mul(i32* %arrayidx3.bn_mul.Clone148, i32* %arrayidx2.bn_mul.Clone147, i32 %181, i32* %178, i32 %177)
  %184 = load i32, i32* %i.bn_mul.Clone90, align 4
  %185 = load i32, i32* %cdigits.bn_mul.Clone89, align 4
  %add.bn_mul.Clone150 = add i32 %184, %185
  %arrayidx5.bn_mul.Clone151 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone87, i32 0, i32 %add.bn_mul.Clone150
  %186 = load i32, i32* %arrayidx5.bn_mul.Clone151, align 4
  %add6.bn_mul.Clone152 = add i32 %186, %call4.bn_mul.Clone149
  store i32 %add6.bn_mul.Clone152, i32* %arrayidx5.bn_mul.Clone151, align 4
  br label %for.inc.bn_mul.Clone153

for.inc.bn_mul.Clone153:                          ; preds = %for.body.bn_mul.Clone145
  %187 = load i32, i32* %i.bn_mul.Clone90, align 4
  %inc.bn_mul.Clone154 = add i32 %187, 1
  store i32 %inc.bn_mul.Clone154, i32* %i.bn_mul.Clone90, align 4
  br label %for.cond.bn_mul.Clone143

for.end.bn_mul.Clone155:                          ; preds = %for.cond.bn_mul.Clone143
  %188 = load i32, i32* %digits.addr.bn_mul.Clone83, align 4
  %mul7.bn_mul.Clone156 = mul i32 2, %188
  %arraydecay8.bn_mul.Clone157 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone87, i32 0, i32 0
  %189 = load i32*, i32** %a.addr.bn_mul.Clone86, align 4
  call void @bn_assign(i32* %189, i32* %arraydecay8.bn_mul.Clone157, i32 %mul7.bn_mul.Clone156)
  %arraydecay9.bn_mul.Clone158 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone87, i32 0, i32 0
  %190 = bitcast i32* %arraydecay9.bn_mul.Clone158 to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %190, i8 0, i32 520, i1 false)
  br label %if.end53.Split81.Split

if.end53.Split81.Split:                           ; preds = %for.end.bn_mul.Clone155
  %191 = load i32, i32* %ndigits, align 4
  %arraydecay61 = getelementptr inbounds [65 x i32], [65 x i32]* %mq, i32 0, i32 0
  %arraydecay62 = getelementptr inbounds [65 x i32], [65 x i32]* %t, i32 0, i32 0
  %arraydecay63 = getelementptr inbounds [65 x i32], [65 x i32]* %t, i32 0, i32 0
  br label %entry.bn_add.Clone

entry.bn_add.Clone:                               ; preds = %if.end53.Split81.Split
  %digits.addr.bn_add.Clone = alloca i32, align 4
  %c.addr.bn_add.Clone = alloca i32*, align 4
  %b.addr.bn_add.Clone = alloca i32*, align 4
  %a.addr.bn_add.Clone = alloca i32*, align 4
  %ai.bn_add.Clone = alloca i32, align 4
  %carry.bn_add.Clone = alloca i32, align 4
  %i.bn_add.Clone = alloca i32, align 4
  store i32 %191, i32* %digits.addr.bn_add.Clone, align 4
  store i32* %arraydecay61, i32** %c.addr.bn_add.Clone, align 4
  store i32* %arraydecay62, i32** %b.addr.bn_add.Clone, align 4
  store i32* %arraydecay63, i32** %a.addr.bn_add.Clone, align 4
  store i32 0, i32* %carry.bn_add.Clone, align 4
  store i32 0, i32* %i.bn_add.Clone, align 4
  br label %for.cond.bn_add.Clone

for.cond.bn_add.Clone:                            ; preds = %for.inc.bn_add.Clone, %entry.bn_add.Clone
  %192 = load i32, i32* %i.bn_add.Clone, align 4
  %193 = load i32, i32* %digits.addr.bn_add.Clone, align 4
  %cmp.bn_add.Clone = icmp ult i32 %192, %193
  br i1 %cmp.bn_add.Clone, label %for.body.bn_add.Clone, label %for.end.bn_add.Clone

for.body.bn_add.Clone:                            ; preds = %for.cond.bn_add.Clone
  %194 = load i32*, i32** %b.addr.bn_add.Clone, align 4
  %195 = load i32, i32* %i.bn_add.Clone, align 4
  %arrayidx.bn_add.Clone = getelementptr inbounds i32, i32* %194, i32 %195
  %196 = load i32, i32* %arrayidx.bn_add.Clone, align 4
  %197 = load i32, i32* %carry.bn_add.Clone, align 4
  %add.bn_add.Clone = add i32 %196, %197
  store i32 %add.bn_add.Clone, i32* %ai.bn_add.Clone, align 4
  %198 = load i32, i32* %carry.bn_add.Clone, align 4
  %cmp1.bn_add.Clone = icmp ult i32 %add.bn_add.Clone, %198
  br i1 %cmp1.bn_add.Clone, label %if.then.bn_add.Clone, label %if.else.bn_add.Clone

if.then.bn_add.Clone:                             ; preds = %for.body.bn_add.Clone
  %199 = load i32*, i32** %c.addr.bn_add.Clone, align 4
  %200 = load i32, i32* %i.bn_add.Clone, align 4
  %arrayidx2.bn_add.Clone = getelementptr inbounds i32, i32* %199, i32 %200
  %201 = load i32, i32* %arrayidx2.bn_add.Clone, align 4
  store i32 %201, i32* %ai.bn_add.Clone, align 4
  br label %if.end9.bn_add.Clone

if.else.bn_add.Clone:                             ; preds = %for.body.bn_add.Clone
  %202 = load i32*, i32** %c.addr.bn_add.Clone, align 4
  %203 = load i32, i32* %i.bn_add.Clone, align 4
  %arrayidx3.bn_add.Clone = getelementptr inbounds i32, i32* %202, i32 %203
  %204 = load i32, i32* %arrayidx3.bn_add.Clone, align 4
  %205 = load i32, i32* %ai.bn_add.Clone, align 4
  %add4.bn_add.Clone = add i32 %205, %204
  store i32 %add4.bn_add.Clone, i32* %ai.bn_add.Clone, align 4
  %206 = load i32*, i32** %c.addr.bn_add.Clone, align 4
  %207 = load i32, i32* %i.bn_add.Clone, align 4
  %arrayidx5.bn_add.Clone = getelementptr inbounds i32, i32* %206, i32 %207
  %208 = load i32, i32* %arrayidx5.bn_add.Clone, align 4
  %cmp6.bn_add.Clone = icmp ult i32 %add4.bn_add.Clone, %208
  br i1 %cmp6.bn_add.Clone, label %if.then7.bn_add.Clone, label %if.else8.bn_add.Clone

if.then7.bn_add.Clone:                            ; preds = %if.else.bn_add.Clone
  store i32 1, i32* %carry.bn_add.Clone, align 4
  br label %if.end.bn_add.Clone

if.else8.bn_add.Clone:                            ; preds = %if.else.bn_add.Clone
  store i32 0, i32* %carry.bn_add.Clone, align 4
  br label %if.end.bn_add.Clone

if.end.bn_add.Clone:                              ; preds = %if.else8.bn_add.Clone, %if.then7.bn_add.Clone
  br label %if.end9.bn_add.Clone

if.end9.bn_add.Clone:                             ; preds = %if.end.bn_add.Clone, %if.then.bn_add.Clone
  %209 = load i32, i32* %ai.bn_add.Clone, align 4
  %210 = load i32*, i32** %a.addr.bn_add.Clone, align 4
  %211 = load i32, i32* %i.bn_add.Clone, align 4
  %arrayidx10.bn_add.Clone = getelementptr inbounds i32, i32* %210, i32 %211
  store i32 %209, i32* %arrayidx10.bn_add.Clone, align 4
  br label %for.inc.bn_add.Clone

for.inc.bn_add.Clone:                             ; preds = %if.end9.bn_add.Clone
  %212 = load i32, i32* %i.bn_add.Clone, align 4
  %inc.bn_add.Clone = add i32 %212, 1
  store i32 %inc.bn_add.Clone, i32* %i.bn_add.Clone, align 4
  br label %for.cond.bn_add.Clone

for.end.bn_add.Clone:                             ; preds = %for.cond.bn_add.Clone
  %213 = load i32, i32* %carry.bn_add.Clone, align 4
  store i32 %213, i32* %RetValuePtr
  br label %if.end53.Split

if.end53.Split:                                   ; preds = %for.end.bn_add.Clone
  %RetValue = load i32, i32* %RetValuePtr
  %214 = load %struct.rsa_sk_t*, %struct.rsa_sk_t** %sk.addr, align 4
  %bits = getelementptr inbounds %struct.rsa_sk_t, %struct.rsa_sk_t* %214, i32 0, i32 0
  %215 = load i32, i32* %bits, align 4
  %add = add i32 %215, 7
  %div = udiv i32 %add, 8
  %216 = load i32*, i32** %out_len.addr, align 4
  store i32 %div, i32* %216, align 4
  %217 = load i32, i32* %ndigits, align 4
  %arraydecay65 = getelementptr inbounds [65 x i32], [65 x i32]* %t, i32 0, i32 0
  %218 = load i32*, i32** %out_len.addr, align 4
  %219 = load i32, i32* %218, align 4
  %220 = load i8*, i8** %out.addr, align 4
  br label %entry.bn_encode.Clone

entry.bn_encode.Clone:                            ; preds = %if.end53.Split
  %digits.addr.bn_encode.Clone = alloca i32, align 4
  %bn.addr.bn_encode.Clone = alloca i32*, align 4
  %size.addr.bn_encode.Clone = alloca i32, align 4
  %hexarr.addr.bn_encode.Clone = alloca i8*, align 4
  %t.bn_encode.Clone = alloca i32, align 4
  %j.bn_encode.Clone = alloca i32, align 4
  %i.bn_encode.Clone = alloca i32, align 4
  %u.bn_encode.Clone = alloca i32, align 4
  store i32 %217, i32* %digits.addr.bn_encode.Clone, align 4
  store i32* %arraydecay65, i32** %bn.addr.bn_encode.Clone, align 4
  store i32 %219, i32* %size.addr.bn_encode.Clone, align 4
  store i8* %220, i8** %hexarr.addr.bn_encode.Clone, align 4
  store i32 0, i32* %i.bn_encode.Clone, align 4
  %221 = load i32, i32* %size.addr.bn_encode.Clone, align 4
  %sub.bn_encode.Clone = sub i32 %221, 1
  store i32 %sub.bn_encode.Clone, i32* %j.bn_encode.Clone, align 4
  br label %for.cond.bn_encode.Clone

for.cond.bn_encode.Clone:                         ; preds = %for.inc9.bn_encode.Clone, %entry.bn_encode.Clone
  %222 = load i32, i32* %i.bn_encode.Clone, align 4
  %223 = load i32, i32* %digits.addr.bn_encode.Clone, align 4
  %cmp.bn_encode.Clone = icmp ult i32 %222, %223
  br i1 %cmp.bn_encode.Clone, label %land.rhs.bn_encode.Clone, label %land.end.bn_encode.Clone

land.rhs.bn_encode.Clone:                         ; preds = %for.cond.bn_encode.Clone
  %224 = load i32, i32* %j.bn_encode.Clone, align 4
  %cmp1.bn_encode.Clone = icmp sge i32 %224, 0
  br label %land.end.bn_encode.Clone

land.end.bn_encode.Clone:                         ; preds = %land.rhs.bn_encode.Clone, %for.cond.bn_encode.Clone
  %225 = phi i1 [ false, %for.cond.bn_encode.Clone ], [ %cmp1.bn_encode.Clone, %land.rhs.bn_encode.Clone ]
  br i1 %225, label %for.body.bn_encode.Clone, label %for.end10.bn_encode.Clone

for.body.bn_encode.Clone:                         ; preds = %land.end.bn_encode.Clone
  %226 = load i32*, i32** %bn.addr.bn_encode.Clone, align 4
  %227 = load i32, i32* %i.bn_encode.Clone, align 4
  %arrayidx.bn_encode.Clone = getelementptr inbounds i32, i32* %226, i32 %227
  %228 = load i32, i32* %arrayidx.bn_encode.Clone, align 4
  store i32 %228, i32* %t.bn_encode.Clone, align 4
  store i32 0, i32* %u.bn_encode.Clone, align 4
  br label %for.cond2.bn_encode.Clone

for.cond2.bn_encode.Clone:                        ; preds = %for.inc.bn_encode.Clone, %for.body.bn_encode.Clone
  %229 = load i32, i32* %j.bn_encode.Clone, align 4
  %cmp3.bn_encode.Clone = icmp sge i32 %229, 0
  br i1 %cmp3.bn_encode.Clone, label %land.rhs4.bn_encode.Clone, label %land.end6.bn_encode.Clone

land.rhs4.bn_encode.Clone:                        ; preds = %for.cond2.bn_encode.Clone
  %230 = load i32, i32* %u.bn_encode.Clone, align 4
  %cmp5.bn_encode.Clone = icmp ult i32 %230, 32
  br label %land.end6.bn_encode.Clone

land.end6.bn_encode.Clone:                        ; preds = %land.rhs4.bn_encode.Clone, %for.cond2.bn_encode.Clone
  %231 = phi i1 [ false, %for.cond2.bn_encode.Clone ], [ %cmp5.bn_encode.Clone, %land.rhs4.bn_encode.Clone ]
  br i1 %231, label %for.body7.bn_encode.Clone, label %for.end.bn_encode.Clone

for.body7.bn_encode.Clone:                        ; preds = %land.end6.bn_encode.Clone
  %232 = load i32, i32* %t.bn_encode.Clone, align 4
  %233 = load i32, i32* %u.bn_encode.Clone, align 4
  %shr.bn_encode.Clone = lshr i32 %232, %233
  %conv.bn_encode.Clone = trunc i32 %shr.bn_encode.Clone to i8
  %234 = load i8*, i8** %hexarr.addr.bn_encode.Clone, align 4
  %235 = load i32, i32* %j.bn_encode.Clone, align 4
  %arrayidx8.bn_encode.Clone = getelementptr inbounds i8, i8* %234, i32 %235
  store i8 %conv.bn_encode.Clone, i8* %arrayidx8.bn_encode.Clone, align 1
  br label %for.inc.bn_encode.Clone

for.inc.bn_encode.Clone:                          ; preds = %for.body7.bn_encode.Clone
  %236 = load i32, i32* %j.bn_encode.Clone, align 4
  %dec.bn_encode.Clone = add nsw i32 %236, -1
  store i32 %dec.bn_encode.Clone, i32* %j.bn_encode.Clone, align 4
  %237 = load i32, i32* %u.bn_encode.Clone, align 4
  %add.bn_encode.Clone = add i32 %237, 8
  store i32 %add.bn_encode.Clone, i32* %u.bn_encode.Clone, align 4
  br label %for.cond2.bn_encode.Clone

for.end.bn_encode.Clone:                          ; preds = %land.end6.bn_encode.Clone
  br label %for.inc9.bn_encode.Clone

for.inc9.bn_encode.Clone:                         ; preds = %for.end.bn_encode.Clone
  %238 = load i32, i32* %i.bn_encode.Clone, align 4
  %inc.bn_encode.Clone = add i32 %238, 1
  store i32 %inc.bn_encode.Clone, i32* %i.bn_encode.Clone, align 4
  br label %for.cond.bn_encode.Clone

for.end10.bn_encode.Clone:                        ; preds = %land.end.bn_encode.Clone
  br label %for.cond11.bn_encode.Clone

for.cond11.bn_encode.Clone:                       ; preds = %for.inc16.bn_encode.Clone, %for.end10.bn_encode.Clone
  %239 = load i32, i32* %j.bn_encode.Clone, align 4
  %cmp12.bn_encode.Clone = icmp sge i32 %239, 0
  br i1 %cmp12.bn_encode.Clone, label %for.body14.bn_encode.Clone, label %for.end18.bn_encode.Clone

for.body14.bn_encode.Clone:                       ; preds = %for.cond11.bn_encode.Clone
  %240 = load i8*, i8** %hexarr.addr.bn_encode.Clone, align 4
  %241 = load i32, i32* %j.bn_encode.Clone, align 4
  %arrayidx15.bn_encode.Clone = getelementptr inbounds i8, i8* %240, i32 %241
  store i8 0, i8* %arrayidx15.bn_encode.Clone, align 1
  br label %for.inc16.bn_encode.Clone

for.inc16.bn_encode.Clone:                        ; preds = %for.body14.bn_encode.Clone
  %242 = load i32, i32* %j.bn_encode.Clone, align 4
  %dec17.bn_encode.Clone = add nsw i32 %242, -1
  store i32 %dec17.bn_encode.Clone, i32* %j.bn_encode.Clone, align 4
  br label %for.cond11.bn_encode.Clone

for.end18.bn_encode.Clone:                        ; preds = %for.cond11.bn_encode.Clone
  br label %if.end53.Split.Split

if.end53.Split.Split:                             ; preds = %for.end18.bn_encode.Clone
  %arraydecay66 = getelementptr inbounds [65 x i32], [65 x i32]* %c, i32 0, i32 0
  %243 = bitcast i32* %arraydecay66 to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %243, i8 0, i32 260, i1 false)
  %arraydecay67 = getelementptr inbounds [65 x i32], [65 x i32]* %cp, i32 0, i32 0
  %244 = bitcast i32* %arraydecay67 to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %244, i8 0, i32 260, i1 false)
  %arraydecay68 = getelementptr inbounds [65 x i32], [65 x i32]* %cq, i32 0, i32 0
  %245 = bitcast i32* %arraydecay68 to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %245, i8 0, i32 260, i1 false)
  %arraydecay69 = getelementptr inbounds [65 x i32], [65 x i32]* %dp, i32 0, i32 0
  %246 = bitcast i32* %arraydecay69 to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %246, i8 0, i32 260, i1 false)
  %arraydecay70 = getelementptr inbounds [65 x i32], [65 x i32]* %dq, i32 0, i32 0
  %247 = bitcast i32* %arraydecay70 to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %247, i8 0, i32 260, i1 false)
  %arraydecay71 = getelementptr inbounds [65 x i32], [65 x i32]* %mp, i32 0, i32 0
  %248 = bitcast i32* %arraydecay71 to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %248, i8 0, i32 260, i1 false)
  %arraydecay72 = getelementptr inbounds [65 x i32], [65 x i32]* %mq, i32 0, i32 0
  %249 = bitcast i32* %arraydecay72 to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %249, i8 0, i32 260, i1 false)
  %arraydecay73 = getelementptr inbounds [65 x i32], [65 x i32]* %p, i32 0, i32 0
  %250 = bitcast i32* %arraydecay73 to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %250, i8 0, i32 260, i1 false)
  %arraydecay74 = getelementptr inbounds [65 x i32], [65 x i32]* %q, i32 0, i32 0
  %251 = bitcast i32* %arraydecay74 to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %251, i8 0, i32 260, i1 false)
  %arraydecay75 = getelementptr inbounds [65 x i32], [65 x i32]* %q_inv, i32 0, i32 0
  %252 = bitcast i32* %arraydecay75 to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %252, i8 0, i32 260, i1 false)
  %arraydecay76 = getelementptr inbounds [65 x i32], [65 x i32]* %t, i32 0, i32 0
  %253 = bitcast i32* %arraydecay76 to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %253, i8 0, i32 260, i1 false)
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end53.Split.Split, %if.then
  %254 = load i32, i32* %retval, align 4
  ret i32 %254
}

; Function Attrs: noinline optnone
define dso_local i32 @rsa_private_decrypt(i8* %out, i32* %out_len, i8* %in, i32 %in_len, %struct.rsa_sk_t* %sk) #2 {
entry:
  %retval = alloca i32, align 4
  %sk.addr = alloca %struct.rsa_sk_t*, align 4
  %in_len.addr = alloca i32, align 4
  %in.addr = alloca i8*, align 4
  %out_len.addr = alloca i32*, align 4
  %out.addr = alloca i8*, align 4
  %status = alloca i32, align 4
  %pkcs_block = alloca [256 x i8], align 1
  %i = alloca i32, align 4
  %modulus_len = alloca i32, align 4
  %pkcs_block_len = alloca i32, align 4
  store %struct.rsa_sk_t* %sk, %struct.rsa_sk_t** %sk.addr, align 4
  store i32 %in_len, i32* %in_len.addr, align 4
  store i8* %in, i8** %in.addr, align 4
  store i32* %out_len, i32** %out_len.addr, align 4
  store i8* %out, i8** %out.addr, align 4
  %0 = load %struct.rsa_sk_t*, %struct.rsa_sk_t** %sk.addr, align 4
  %bits = getelementptr inbounds %struct.rsa_sk_t, %struct.rsa_sk_t* %0, i32 0, i32 0
  %1 = load i32, i32* %bits, align 4
  %add = add i32 %1, 7
  %div = udiv i32 %add, 8
  store i32 %div, i32* %modulus_len, align 4
  %2 = load i32, i32* %in_len.addr, align 4
  %3 = load i32, i32* %modulus_len, align 4
  %cmp = icmp ugt i32 %2, %3
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 4098, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %4 = load %struct.rsa_sk_t*, %struct.rsa_sk_t** %sk.addr, align 4
  %5 = load i32, i32* %in_len.addr, align 4
  %6 = load i8*, i8** %in.addr, align 4
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %pkcs_block, i32 0, i32 0
  %call = call i32 @private_block_operation(i8* %arraydecay, i32* %pkcs_block_len, i8* %6, i32 %5, %struct.rsa_sk_t* %4)
  store i32 %call, i32* %status, align 4
  %7 = load i32, i32* %status, align 4
  %cmp1 = icmp ne i32 %7, 0
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  %8 = load i32, i32* %status, align 4
  store i32 %8, i32* %retval, align 4
  br label %return

if.end3:                                          ; preds = %if.end
  %9 = load i32, i32* %pkcs_block_len, align 4
  %10 = load i32, i32* %modulus_len, align 4
  %cmp4 = icmp ne i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end3
  store i32 4098, i32* %retval, align 4
  br label %return

if.end6:                                          ; preds = %if.end3
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* %pkcs_block, i32 0, i32 0
  %11 = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %11 to i32
  %cmp7 = icmp ne i32 %conv, 0
  br i1 %cmp7, label %if.then13, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end6
  %arrayidx9 = getelementptr inbounds [256 x i8], [256 x i8]* %pkcs_block, i32 0, i32 1
  %12 = load i8, i8* %arrayidx9, align 1
  %conv10 = zext i8 %12 to i32
  %cmp11 = icmp ne i32 %conv10, 2
  br i1 %cmp11, label %if.then13, label %if.end14

if.then13:                                        ; preds = %lor.lhs.false, %if.end6
  store i32 4097, i32* %retval, align 4
  br label %return

if.end14:                                         ; preds = %lor.lhs.false
  store i32 2, i32* %i, align 4
  br label %CallOutFuncBB

CallOutFuncBB:                                    ; preds = %if.end14
  call void @for.cond.OutLineFunc.14(i32* %i, i32* %modulus_len, [256 x i8]* %pkcs_block)
  %13 = getelementptr inbounds %Struct.RetValue.7, %Struct.RetValue.7* @Struct.RetValue.13, i32 0, i32 0
  %14 = load i32*, i32** %13, align 4
  %15 = load i32, i32* %14, align 4
  store i32 %15, i32* %i
  br label %new

new:                                              ; preds = %CallOutFuncBB
  %16 = load i32, i32* %i, align 4
  %inc23 = add i32 %16, 1
  store i32 %inc23, i32* %i, align 4
  %17 = load i32, i32* %i, align 4
  %18 = load i32, i32* %modulus_len, align 4
  %cmp24 = icmp uge i32 %17, %18
  br i1 %cmp24, label %if.then26, label %if.end27

if.then26:                                        ; preds = %new
  store i32 4097, i32* %retval, align 4
  br label %return

if.end27:                                         ; preds = %new
  %19 = load i32, i32* %modulus_len, align 4
  %20 = load i32, i32* %i, align 4
  %sub28 = sub i32 %19, %20
  %21 = load i32*, i32** %out_len.addr, align 4
  store i32 %sub28, i32* %21, align 4
  %22 = load i32*, i32** %out_len.addr, align 4
  %23 = load i32, i32* %22, align 4
  %add29 = add i32 %23, 11
  %24 = load i32, i32* %modulus_len, align 4
  %cmp30 = icmp ugt i32 %add29, %24
  br i1 %cmp30, label %if.then32, label %if.end33

if.then32:                                        ; preds = %if.end27
  store i32 4097, i32* %retval, align 4
  br label %return

if.end33:                                         ; preds = %if.end27
  %25 = load i8*, i8** %out.addr, align 4
  %26 = load i32, i32* %i, align 4
  %arrayidx34 = getelementptr inbounds [256 x i8], [256 x i8]* %pkcs_block, i32 0, i32 %26
  %27 = load i32*, i32** %out_len.addr, align 4
  %28 = load i32, i32* %27, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %25, i8* align 1 %arrayidx34, i32 %28, i1 false)
  %arraydecay35 = getelementptr inbounds [256 x i8], [256 x i8]* %pkcs_block, i32 0, i32 0
  call void @llvm.memset.p0i8.i32(i8* align 1 %arraydecay35, i8 0, i32 256, i1 false)
  %29 = load i32, i32* %status, align 4
  store i32 %29, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end33, %if.then32, %if.then26, %if.then13, %if.then5, %if.then2, %if.then
  %30 = load i32, i32* %retval, align 4
  ret i32 %30
}

define void @if.end11.OutLineFunc(i32* %OutFuncArg, i32** %OutFuncArg1, i32* %OutFuncArg2, i32* %OutFuncArg3, i32* %OutFuncArg4) {
entry:
  %OutFuncArg.addr = alloca i32*, align 4
  store i32* %OutFuncArg, i32** %OutFuncArg.addr, align 4
  %rl.Clone = load i32*, i32** %OutFuncArg.addr, align 4
  %OutFuncArg1.addr = alloca i32**, align 4
  store i32** %OutFuncArg1, i32*** %OutFuncArg1.addr, align 4
  %a.addr.Clone = load i32**, i32*** %OutFuncArg1.addr, align 4
  %OutFuncArg2.addr = alloca i32*, align 4
  store i32* %OutFuncArg2, i32** %OutFuncArg2.addr, align 4
  %i.Clone = load i32*, i32** %OutFuncArg2.addr, align 4
  %OutFuncArg3.addr = alloca i32*, align 4
  store i32* %OutFuncArg3, i32** %OutFuncArg3.addr, align 4
  %carry.Clone = load i32*, i32** %OutFuncArg3.addr, align 4
  %OutFuncArg4.addr = alloca i32*, align 4
  store i32* %OutFuncArg4, i32** %OutFuncArg4.addr, align 4
  %rh.Clone = load i32*, i32** %OutFuncArg4.addr, align 4
  br label %if.end11.Clone

if.end11.Clone:                                   ; preds = %entry
  %0 = load i32, i32* %rl.Clone, align 4
  %1 = load i32*, i32** %a.addr.Clone, align 4
  %2 = load i32, i32* %i.Clone, align 4
  %arrayidx12.Clone = getelementptr inbounds i32, i32* %1, i32 %2
  %3 = load i32, i32* %arrayidx12.Clone, align 4
  %add13.Clone = add i32 %3, %0
  store i32 %add13.Clone, i32* %arrayidx12.Clone, align 4
  %4 = load i32, i32* %rl.Clone, align 4
  %cmp14.Clone = icmp ult i32 %add13.Clone, %4
  br i1 %cmp14.Clone, label %if.then16.Clone, label %if.end17.Clone

if.then16.Clone:                                  ; preds = %if.end11.Clone
  %5 = load i32, i32* %carry.Clone, align 4
  %inc.Clone = add i32 %5, 1
  store i32 %inc.Clone, i32* %carry.Clone, align 4
  br label %if.end17.Clone

if.end17.Clone:                                   ; preds = %if.then16.Clone, %if.end11.Clone
  %6 = load i32, i32* %rh.Clone, align 4
  %7 = load i32, i32* %carry.Clone, align 4
  %add18.Clone = add i32 %7, %6
  store i32 %add18.Clone, i32* %carry.Clone, align 4
  br label %OutFuncRetBB

OutFuncRetBB:                                     ; preds = %if.end17.Clone
  %8 = getelementptr inbounds %Struct.RetValue, %Struct.RetValue* @Struct.RetValue, i32 0, i32 0
  store i32* %carry.Clone, i32** %8, align 4
  ret void
}

define void @for.cond.OutLineFunc(i32* %OutFuncArg, i32* %OutFuncArg1, i32* %OutFuncArg2, [131 x i32]* %OutFuncArg3, i32* %OutFuncArg4, [65 x i32]* %OutFuncArg5, i32** %OutFuncArg6, i64* %OutFuncArg7, i32* %OutFuncArg8, i32** %OutFuncArg9, i32* %OutFuncArg10) {
entry:
  %OutFuncArg.addr = alloca i32*, align 4
  store i32* %OutFuncArg, i32** %OutFuncArg.addr, align 4
  %i.Clone = load i32*, i32** %OutFuncArg.addr, align 4
  %OutFuncArg1.addr = alloca i32*, align 4
  store i32* %OutFuncArg1, i32** %OutFuncArg1.addr, align 4
  %t.Clone = load i32*, i32** %OutFuncArg1.addr, align 4
  %OutFuncArg2.addr = alloca i32*, align 4
  store i32* %OutFuncArg2, i32** %OutFuncArg2.addr, align 4
  %dddigits.Clone = load i32*, i32** %OutFuncArg2.addr, align 4
  %OutFuncArg3.addr = alloca [131 x i32]*, align 4
  store [131 x i32]* %OutFuncArg3, [131 x i32]** %OutFuncArg3.addr, align 4
  %cc.Clone = load [131 x i32]*, [131 x i32]** %OutFuncArg3.addr, align 4
  %OutFuncArg4.addr = alloca i32*, align 4
  store i32* %OutFuncArg4, i32** %OutFuncArg4.addr, align 4
  %ai.Clone = load i32*, i32** %OutFuncArg4.addr, align 4
  %OutFuncArg5.addr = alloca [65 x i32]*, align 4
  store [65 x i32]* %OutFuncArg5, [65 x i32]** %OutFuncArg5.addr, align 4
  %dd.Clone = load [65 x i32]*, [65 x i32]** %OutFuncArg5.addr, align 4
  %OutFuncArg6.addr = alloca i32**, align 4
  store i32** %OutFuncArg6, i32*** %OutFuncArg6.addr, align 4
  %a.addr.Clone = load i32**, i32*** %OutFuncArg6.addr, align 4
  %OutFuncArg7.addr = alloca i64*, align 4
  store i64* %OutFuncArg7, i64** %OutFuncArg7.addr, align 4
  %tmp.Clone = load i64*, i64** %OutFuncArg7.addr, align 4
  %OutFuncArg8.addr = alloca i32*, align 4
  store i32* %OutFuncArg8, i32** %OutFuncArg8.addr, align 4
  %ddigits.addr.Clone = load i32*, i32** %OutFuncArg8.addr, align 4
  %OutFuncArg9.addr = alloca i32**, align 4
  store i32** %OutFuncArg9, i32*** %OutFuncArg9.addr, align 4
  %b.addr.Clone = load i32**, i32*** %OutFuncArg9.addr, align 4
  %OutFuncArg10.addr = alloca i32*, align 4
  store i32* %OutFuncArg10, i32** %OutFuncArg10.addr, align 4
  %shift.Clone = load i32*, i32** %OutFuncArg10.addr, align 4
  %RetValuePtr = alloca i32, align 4
  br label %for.cond.Clone

for.cond.Clone:                                   ; preds = %entry, %for.inc.Clone
  %0 = load i32, i32* %i.Clone, align 4
  %cmp11.Clone = icmp sge i32 %0, 0
  br i1 %cmp11.Clone, label %for.body.Clone, label %for.end.Clone

for.body.Clone:                                   ; preds = %for.cond.Clone
  %1 = load i32, i32* %t.Clone, align 4
  %cmp12.Clone = icmp eq i32 %1, -1
  br i1 %cmp12.Clone, label %if.then13.Clone, label %if.else.Clone

if.then13.Clone:                                  ; preds = %for.body.Clone
  %2 = load i32, i32* %i.Clone, align 4
  %3 = load i32, i32* %dddigits.Clone, align 4
  %add.Clone = add i32 %2, %3
  %arrayidx14.Clone = getelementptr inbounds [131 x i32], [131 x i32]* %cc.Clone, i32 0, i32 %add.Clone
  %4 = load i32, i32* %arrayidx14.Clone, align 4
  store i32 %4, i32* %ai.Clone, align 4
  br label %if.end25.Clone

if.end25.Clone:                                   ; preds = %if.else.Clone, %if.then13.Clone
  %5 = load i32, i32* %dddigits.Clone, align 4
  %arraydecay26.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %dd.Clone, i32 0, i32 0
  %6 = load i32, i32* %ai.Clone, align 4
  %7 = load i32, i32* %i.Clone, align 4
  %arrayidx27.Clone = getelementptr inbounds [131 x i32], [131 x i32]* %cc.Clone, i32 0, i32 %7
  %8 = load i32, i32* %i.Clone, align 4
  %arrayidx28.Clone = getelementptr inbounds [131 x i32], [131 x i32]* %cc.Clone, i32 0, i32 %8
  %call29.Clone = call i32 @bn_sub_digit_mul(i32* %arrayidx28.Clone, i32* %arrayidx27.Clone, i32 %6, i32* %arraydecay26.Clone, i32 %5)
  %9 = load i32, i32* %i.Clone, align 4
  %10 = load i32, i32* %dddigits.Clone, align 4
  %add30.Clone = add i32 %9, %10
  %arrayidx31.Clone = getelementptr inbounds [131 x i32], [131 x i32]* %cc.Clone, i32 0, i32 %add30.Clone
  %11 = load i32, i32* %arrayidx31.Clone, align 4
  %sub32.Clone = sub i32 %11, %call29.Clone
  store i32 %sub32.Clone, i32* %arrayidx31.Clone, align 4
  br label %while.cond.Clone

while.cond.Clone:                                 ; preds = %while.body.Clone, %if.end25.Clone
  %12 = load i32, i32* %i.Clone, align 4
  %13 = load i32, i32* %dddigits.Clone, align 4
  %add33.Clone = add i32 %12, %13
  %arrayidx34.Clone = getelementptr inbounds [131 x i32], [131 x i32]* %cc.Clone, i32 0, i32 %add33.Clone
  %14 = load i32, i32* %arrayidx34.Clone, align 4
  %tobool.Clone = icmp ne i32 %14, 0
  br i1 %tobool.Clone, label %lor.end.Clone, label %lor.rhs.Clone

lor.rhs.Clone:                                    ; preds = %while.cond.Clone
  %15 = load i32, i32* %dddigits.Clone, align 4
  %arraydecay35.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %dd.Clone, i32 0, i32 0
  %16 = load i32, i32* %i.Clone, align 4
  %arrayidx36.Clone = getelementptr inbounds [131 x i32], [131 x i32]* %cc.Clone, i32 0, i32 %16
  br label %entry.bn_cmp.Clone

entry.bn_cmp.Clone:                               ; preds = %lor.rhs.Clone
  %retval.bn_cmp.Clone = alloca i32, align 4
  %digits.addr.bn_cmp.Clone = alloca i32, align 4
  %b.addr.bn_cmp.Clone = alloca i32*, align 4
  %a.addr.bn_cmp.Clone = alloca i32*, align 4
  %i.bn_cmp.Clone = alloca i32, align 4
  store i32 %15, i32* %digits.addr.bn_cmp.Clone, align 4
  store i32* %arraydecay35.Clone, i32** %b.addr.bn_cmp.Clone, align 4
  store i32* %arrayidx36.Clone, i32** %a.addr.bn_cmp.Clone, align 4
  %17 = load i32, i32* %digits.addr.bn_cmp.Clone, align 4
  %sub.bn_cmp.Clone = sub i32 %17, 1
  store i32 %sub.bn_cmp.Clone, i32* %i.bn_cmp.Clone, align 4
  br label %for.cond.bn_cmp.Clone

for.cond.bn_cmp.Clone:                            ; preds = %for.inc.bn_cmp.Clone, %entry.bn_cmp.Clone
  %18 = load i32, i32* %i.bn_cmp.Clone, align 4
  %cmp.bn_cmp.Clone = icmp sge i32 %18, 0
  br i1 %cmp.bn_cmp.Clone, label %for.body.bn_cmp.Clone, label %for.end.bn_cmp.Clone

for.body.bn_cmp.Clone:                            ; preds = %for.cond.bn_cmp.Clone
  %19 = load i32*, i32** %a.addr.bn_cmp.Clone, align 4
  %20 = load i32, i32* %i.bn_cmp.Clone, align 4
  %arrayidx.bn_cmp.Clone = getelementptr inbounds i32, i32* %19, i32 %20
  %21 = load i32, i32* %arrayidx.bn_cmp.Clone, align 4
  %22 = load i32*, i32** %b.addr.bn_cmp.Clone, align 4
  %23 = load i32, i32* %i.bn_cmp.Clone, align 4
  %arrayidx1.bn_cmp.Clone = getelementptr inbounds i32, i32* %22, i32 %23
  %24 = load i32, i32* %arrayidx1.bn_cmp.Clone, align 4
  %cmp2.bn_cmp.Clone = icmp ugt i32 %21, %24
  br i1 %cmp2.bn_cmp.Clone, label %if.then.bn_cmp.Clone, label %if.end.bn_cmp.Clone

if.then.bn_cmp.Clone:                             ; preds = %for.body.bn_cmp.Clone
  store i32 1, i32* %retval.bn_cmp.Clone, align 4
  br label %return.bn_cmp.Clone

if.end.bn_cmp.Clone:                              ; preds = %for.body.bn_cmp.Clone
  %25 = load i32*, i32** %a.addr.bn_cmp.Clone, align 4
  %26 = load i32, i32* %i.bn_cmp.Clone, align 4
  %arrayidx3.bn_cmp.Clone = getelementptr inbounds i32, i32* %25, i32 %26
  %27 = load i32, i32* %arrayidx3.bn_cmp.Clone, align 4
  %28 = load i32*, i32** %b.addr.bn_cmp.Clone, align 4
  %29 = load i32, i32* %i.bn_cmp.Clone, align 4
  %arrayidx4.bn_cmp.Clone = getelementptr inbounds i32, i32* %28, i32 %29
  %30 = load i32, i32* %arrayidx4.bn_cmp.Clone, align 4
  %cmp5.bn_cmp.Clone = icmp ult i32 %27, %30
  br i1 %cmp5.bn_cmp.Clone, label %if.then6.bn_cmp.Clone, label %if.end7.bn_cmp.Clone

if.then6.bn_cmp.Clone:                            ; preds = %if.end.bn_cmp.Clone
  store i32 -1, i32* %retval.bn_cmp.Clone, align 4
  br label %return.bn_cmp.Clone

if.end7.bn_cmp.Clone:                             ; preds = %if.end.bn_cmp.Clone
  br label %for.inc.bn_cmp.Clone

for.inc.bn_cmp.Clone:                             ; preds = %if.end7.bn_cmp.Clone
  %31 = load i32, i32* %i.bn_cmp.Clone, align 4
  %dec.bn_cmp.Clone = add nsw i32 %31, -1
  store i32 %dec.bn_cmp.Clone, i32* %i.bn_cmp.Clone, align 4
  br label %for.cond.bn_cmp.Clone

for.end.bn_cmp.Clone:                             ; preds = %for.cond.bn_cmp.Clone
  store i32 0, i32* %retval.bn_cmp.Clone, align 4
  br label %return.bn_cmp.Clone

return.bn_cmp.Clone:                              ; preds = %for.end.bn_cmp.Clone, %if.then6.bn_cmp.Clone, %if.then.bn_cmp.Clone
  %32 = load i32, i32* %retval.bn_cmp.Clone, align 4
  store i32 %32, i32* %RetValuePtr
  br label %lor.rhs.Clone.Split

lor.rhs.Clone.Split:                              ; preds = %return.bn_cmp.Clone
  %RetValue = load i32, i32* %RetValuePtr
  %cmp38.Clone = icmp sge i32 %RetValue, 0
  br label %lor.end.Clone

lor.end.Clone:                                    ; preds = %lor.rhs.Clone.Split, %while.cond.Clone
  %33 = phi i1 [ true, %while.cond.Clone ], [ %cmp38.Clone, %lor.rhs.Clone.Split ]
  br i1 %33, label %while.body.Clone, label %while.end.Clone

while.body.Clone:                                 ; preds = %lor.end.Clone
  %34 = load i32, i32* %ai.Clone, align 4
  %inc.Clone = add i32 %34, 1
  store i32 %inc.Clone, i32* %ai.Clone, align 4
  %35 = load i32, i32* %dddigits.Clone, align 4
  %arraydecay40.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %dd.Clone, i32 0, i32 0
  %36 = load i32, i32* %i.Clone, align 4
  %arrayidx41.Clone = getelementptr inbounds [131 x i32], [131 x i32]* %cc.Clone, i32 0, i32 %36
  %37 = load i32, i32* %i.Clone, align 4
  %arrayidx42.Clone = getelementptr inbounds [131 x i32], [131 x i32]* %cc.Clone, i32 0, i32 %37
  %call43.Clone = call i32 @bn_sub(i32* %arrayidx42.Clone, i32* %arrayidx41.Clone, i32* %arraydecay40.Clone, i32 %35)
  %38 = load i32, i32* %i.Clone, align 4
  %39 = load i32, i32* %dddigits.Clone, align 4
  %add44.Clone = add i32 %38, %39
  %arrayidx45.Clone = getelementptr inbounds [131 x i32], [131 x i32]* %cc.Clone, i32 0, i32 %add44.Clone
  %40 = load i32, i32* %arrayidx45.Clone, align 4
  %sub46.Clone = sub i32 %40, %call43.Clone
  store i32 %sub46.Clone, i32* %arrayidx45.Clone, align 4
  br label %while.cond.Clone

while.end.Clone:                                  ; preds = %lor.end.Clone
  %41 = load i32, i32* %ai.Clone, align 4
  %42 = load i32*, i32** %a.addr.Clone, align 4
  %43 = load i32, i32* %i.Clone, align 4
  %arrayidx47.Clone = getelementptr inbounds i32, i32* %42, i32 %43
  store i32 %41, i32* %arrayidx47.Clone, align 4
  br label %for.inc.Clone

for.inc.Clone:                                    ; preds = %while.end.Clone
  %44 = load i32, i32* %i.Clone, align 4
  %dec.Clone = add nsw i32 %44, -1
  store i32 %dec.Clone, i32* %i.Clone, align 4
  br label %for.cond.Clone

if.else.Clone:                                    ; preds = %for.body.Clone
  %45 = load i32, i32* %i.Clone, align 4
  %46 = load i32, i32* %dddigits.Clone, align 4
  %add15.Clone = add i32 %45, %46
  %sub16.Clone = sub i32 %add15.Clone, 1
  %arrayidx17.Clone = getelementptr inbounds [131 x i32], [131 x i32]* %cc.Clone, i32 0, i32 %sub16.Clone
  %47 = load i32, i32* %arrayidx17.Clone, align 4
  %conv.Clone = zext i32 %47 to i64
  store i64 %conv.Clone, i64* %tmp.Clone, align 8
  %48 = load i32, i32* %i.Clone, align 4
  %49 = load i32, i32* %dddigits.Clone, align 4
  %add18.Clone = add i32 %48, %49
  %arrayidx19.Clone = getelementptr inbounds [131 x i32], [131 x i32]* %cc.Clone, i32 0, i32 %add18.Clone
  %50 = load i32, i32* %arrayidx19.Clone, align 4
  %conv20.Clone = zext i32 %50 to i64
  %shl.Clone = shl i64 %conv20.Clone, 32
  %51 = load i64, i64* %tmp.Clone, align 8
  %add21.Clone = add i64 %51, %shl.Clone
  store i64 %add21.Clone, i64* %tmp.Clone, align 8
  %52 = load i64, i64* %tmp.Clone, align 8
  %53 = load i32, i32* %t.Clone, align 4
  %add22.Clone = add i32 %53, 1
  %conv23.Clone = zext i32 %add22.Clone to i64
  %div.Clone = udiv i64 %52, %conv23.Clone
  %conv24.Clone = trunc i64 %div.Clone to i32
  store i32 %conv24.Clone, i32* %ai.Clone, align 4
  br label %if.end25.Clone

for.end.Clone:                                    ; preds = %for.cond.Clone
  %54 = load i32, i32* %ddigits.addr.Clone, align 4
  %55 = load i32*, i32** %b.addr.Clone, align 4
  br label %entry.bn_assign_zero.Clone

entry.bn_assign_zero.Clone:                       ; preds = %for.end.Clone
  %digits.addr.bn_assign_zero.Clone = alloca i32, align 4
  %a.addr.bn_assign_zero.Clone = alloca i32*, align 4
  %i.bn_assign_zero.Clone = alloca i32, align 4
  store i32 %54, i32* %digits.addr.bn_assign_zero.Clone, align 4
  store i32* %55, i32** %a.addr.bn_assign_zero.Clone, align 4
  store i32 0, i32* %i.bn_assign_zero.Clone, align 4
  br label %for.cond.bn_assign_zero.Clone

for.cond.bn_assign_zero.Clone:                    ; preds = %for.inc.bn_assign_zero.Clone, %entry.bn_assign_zero.Clone
  %56 = load i32, i32* %i.bn_assign_zero.Clone, align 4
  %57 = load i32, i32* %digits.addr.bn_assign_zero.Clone, align 4
  %cmp.bn_assign_zero.Clone = icmp ult i32 %56, %57
  br i1 %cmp.bn_assign_zero.Clone, label %for.body.bn_assign_zero.Clone, label %for.end.bn_assign_zero.Clone

for.body.bn_assign_zero.Clone:                    ; preds = %for.cond.bn_assign_zero.Clone
  %58 = load i32*, i32** %a.addr.bn_assign_zero.Clone, align 4
  %59 = load i32, i32* %i.bn_assign_zero.Clone, align 4
  %arrayidx.bn_assign_zero.Clone = getelementptr inbounds i32, i32* %58, i32 %59
  store i32 0, i32* %arrayidx.bn_assign_zero.Clone, align 4
  br label %for.inc.bn_assign_zero.Clone

for.inc.bn_assign_zero.Clone:                     ; preds = %for.body.bn_assign_zero.Clone
  %60 = load i32, i32* %i.bn_assign_zero.Clone, align 4
  %inc.bn_assign_zero.Clone = add i32 %60, 1
  store i32 %inc.bn_assign_zero.Clone, i32* %i.bn_assign_zero.Clone, align 4
  br label %for.cond.bn_assign_zero.Clone

for.end.bn_assign_zero.Clone:                     ; preds = %for.cond.bn_assign_zero.Clone
  br label %for.end.Clone.Split

for.end.Clone.Split:                              ; preds = %for.end.bn_assign_zero.Clone
  %61 = load i32, i32* %dddigits.Clone, align 4
  %62 = load i32, i32* %shift.Clone, align 4
  %arraydecay48.Clone = getelementptr inbounds [131 x i32], [131 x i32]* %cc.Clone, i32 0, i32 0
  %63 = load i32*, i32** %b.addr.Clone, align 4
  %call49.Clone = call i32 @bn_shift_r(i32* %63, i32* %arraydecay48.Clone, i32 %62, i32 %61)
  %arraydecay50.Clone = getelementptr inbounds [131 x i32], [131 x i32]* %cc.Clone, i32 0, i32 0
  %64 = bitcast i32* %arraydecay50.Clone to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %64, i8 0, i32 524, i1 false)
  %arraydecay51.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %dd.Clone, i32 0, i32 0
  %65 = bitcast i32* %arraydecay51.Clone to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %65, i8 0, i32 260, i1 false)
  br label %OutFuncRetBB

OutFuncRetBB:                                     ; preds = %for.end.Clone.Split
  %66 = getelementptr inbounds %Struct.RetValue.0, %Struct.RetValue.0* @Struct.RetValue.1, i32 0, i32 0
  store i32* %i.Clone, i32** %66, align 4
  %67 = getelementptr inbounds %Struct.RetValue.0, %Struct.RetValue.0* @Struct.RetValue.1, i32 0, i32 1
  store i32* %ai.Clone, i32** %67, align 4
  %68 = getelementptr inbounds %Struct.RetValue.0, %Struct.RetValue.0* @Struct.RetValue.1, i32 0, i32 2
  store i64* %tmp.Clone, i64** %68, align 4
  ret void
}

define void @for.cond.OutLineFunc.3(i32* %OutFuncArg, i32* %OutFuncArg1, i32** %OutFuncArg2, i32* %OutFuncArg3, i32* %OutFuncArg4, i32* %OutFuncArg5, i32** %OutFuncArg6, i32* %OutFuncArg7, i32* %OutFuncArg8) {
entry:
  %OutFuncArg.addr = alloca i32*, align 4
  store i32* %OutFuncArg, i32** %OutFuncArg.addr, align 4
  %i.Clone = load i32*, i32** %OutFuncArg.addr, align 4
  %OutFuncArg1.addr = alloca i32*, align 4
  store i32* %OutFuncArg1, i32** %OutFuncArg1.addr, align 4
  %digits.addr.Clone = load i32*, i32** %OutFuncArg1.addr, align 4
  %OutFuncArg2.addr = alloca i32**, align 4
  store i32** %OutFuncArg2, i32*** %OutFuncArg2.addr, align 4
  %b.addr.Clone = load i32**, i32*** %OutFuncArg2.addr, align 4
  %OutFuncArg3.addr = alloca i32*, align 4
  store i32* %OutFuncArg3, i32** %OutFuncArg3.addr, align 4
  %bi.Clone = load i32*, i32** %OutFuncArg3.addr, align 4
  %OutFuncArg4.addr = alloca i32*, align 4
  store i32* %OutFuncArg4, i32** %OutFuncArg4.addr, align 4
  %c.addr.Clone = load i32*, i32** %OutFuncArg4.addr, align 4
  %OutFuncArg5.addr = alloca i32*, align 4
  store i32* %OutFuncArg5, i32** %OutFuncArg5.addr, align 4
  %carry.Clone = load i32*, i32** %OutFuncArg5.addr, align 4
  %OutFuncArg6.addr = alloca i32**, align 4
  store i32** %OutFuncArg6, i32*** %OutFuncArg6.addr, align 4
  %a.addr.Clone = load i32**, i32*** %OutFuncArg6.addr, align 4
  %OutFuncArg7.addr = alloca i32*, align 4
  store i32* %OutFuncArg7, i32** %OutFuncArg7.addr, align 4
  %t.Clone = load i32*, i32** %OutFuncArg7.addr, align 4
  %OutFuncArg8.addr = alloca i32*, align 4
  store i32* %OutFuncArg8, i32** %OutFuncArg8.addr, align 4
  %retval.Clone = load i32*, i32** %OutFuncArg8.addr, align 4
  br label %for.cond.Clone

for.cond.Clone:                                   ; preds = %entry, %for.inc.Clone
  %0 = load i32, i32* %i.Clone, align 4
  %1 = load i32, i32* %digits.addr.Clone, align 4
  %cmp1.Clone = icmp ult i32 %0, %1
  br i1 %cmp1.Clone, label %for.body.Clone, label %for.end.Clone

for.body.Clone:                                   ; preds = %for.cond.Clone
  %2 = load i32*, i32** %b.addr.Clone, align 4
  %3 = load i32, i32* %i.Clone, align 4
  %arrayidx.Clone = getelementptr inbounds i32, i32* %2, i32 %3
  %4 = load i32, i32* %arrayidx.Clone, align 4
  store i32 %4, i32* %bi.Clone, align 4
  %5 = load i32, i32* %bi.Clone, align 4
  %6 = load i32, i32* %c.addr.Clone, align 4
  %shl.Clone = shl i32 %5, %6
  %7 = load i32, i32* %carry.Clone, align 4
  %or.Clone = or i32 %shl.Clone, %7
  %8 = load i32*, i32** %a.addr.Clone, align 4
  %9 = load i32, i32* %i.Clone, align 4
  %arrayidx2.Clone = getelementptr inbounds i32, i32* %8, i32 %9
  store i32 %or.Clone, i32* %arrayidx2.Clone, align 4
  %10 = load i32, i32* %c.addr.Clone, align 4
  %tobool.Clone = icmp ne i32 %10, 0
  br i1 %tobool.Clone, label %cond.true.Clone, label %cond.false.Clone

cond.true.Clone:                                  ; preds = %for.body.Clone
  %11 = load i32, i32* %bi.Clone, align 4
  %12 = load i32, i32* %t.Clone, align 4
  %shr.Clone = lshr i32 %11, %12
  br label %cond.end.Clone

cond.end.Clone:                                   ; preds = %cond.false.Clone, %cond.true.Clone
  %cond.Clone = phi i32 [ %shr.Clone, %cond.true.Clone ], [ 0, %cond.false.Clone ]
  store i32 %cond.Clone, i32* %carry.Clone, align 4
  br label %for.inc.Clone

for.inc.Clone:                                    ; preds = %cond.end.Clone
  %13 = load i32, i32* %i.Clone, align 4
  %inc.Clone = add i32 %13, 1
  store i32 %inc.Clone, i32* %i.Clone, align 4
  br label %for.cond.Clone

cond.false.Clone:                                 ; preds = %for.body.Clone
  br label %cond.end.Clone

for.end.Clone:                                    ; preds = %for.cond.Clone
  %14 = load i32, i32* %carry.Clone, align 4
  store i32 %14, i32* %retval.Clone, align 4
  br label %OutFuncRetBB

OutFuncRetBB:                                     ; preds = %for.end.Clone
  %15 = getelementptr inbounds %Struct.RetValue.1, %Struct.RetValue.1* @Struct.RetValue.2, i32 0, i32 0
  store i32* %i.Clone, i32** %15, align 4
  %16 = getelementptr inbounds %Struct.RetValue.1, %Struct.RetValue.1* @Struct.RetValue.2, i32 0, i32 1
  store i32* %bi.Clone, i32** %16, align 4
  %17 = getelementptr inbounds %Struct.RetValue.1, %Struct.RetValue.1* @Struct.RetValue.2, i32 0, i32 2
  store i32* %carry.Clone, i32** %17, align 4
  %18 = getelementptr inbounds %Struct.RetValue.1, %Struct.RetValue.1* @Struct.RetValue.2, i32 0, i32 3
  store i32* %retval.Clone, i32** %18, align 4
  ret void
}

define void @for.cond.OutLineFunc.5(i32* %OutFuncArg, i32* %OutFuncArg1, i32* %OutFuncArg2, i32** %OutFuncArg3, i64* %OutFuncArg4, i32* %OutFuncArg5, i32* %OutFuncArg6, i32** %OutFuncArg7, i32* %OutFuncArg8, i32** %OutFuncArg9, i32* %OutFuncArg10) {
entry:
  %OutFuncArg.addr = alloca i32*, align 4
  store i32* %OutFuncArg, i32** %OutFuncArg.addr, align 4
  %i.Clone = load i32*, i32** %OutFuncArg.addr, align 4
  %OutFuncArg1.addr = alloca i32*, align 4
  store i32* %OutFuncArg1, i32** %OutFuncArg1.addr, align 4
  %digits.addr.Clone = load i32*, i32** %OutFuncArg1.addr, align 4
  %OutFuncArg2.addr = alloca i32*, align 4
  store i32* %OutFuncArg2, i32** %OutFuncArg2.addr, align 4
  %c.addr.Clone = load i32*, i32** %OutFuncArg2.addr, align 4
  %OutFuncArg3.addr = alloca i32**, align 4
  store i32** %OutFuncArg3, i32*** %OutFuncArg3.addr, align 4
  %d.addr.Clone = load i32**, i32*** %OutFuncArg3.addr, align 4
  %OutFuncArg4.addr = alloca i64*, align 4
  store i64* %OutFuncArg4, i64** %OutFuncArg4.addr, align 4
  %result.Clone = load i64*, i64** %OutFuncArg4.addr, align 4
  %OutFuncArg5.addr = alloca i32*, align 4
  store i32* %OutFuncArg5, i32** %OutFuncArg5.addr, align 4
  %rl.Clone = load i32*, i32** %OutFuncArg5.addr, align 4
  %OutFuncArg6.addr = alloca i32*, align 4
  store i32* %OutFuncArg6, i32** %OutFuncArg6.addr, align 4
  %rh.Clone = load i32*, i32** %OutFuncArg6.addr, align 4
  %OutFuncArg7.addr = alloca i32**, align 4
  store i32** %OutFuncArg7, i32*** %OutFuncArg7.addr, align 4
  %b.addr.Clone = load i32**, i32*** %OutFuncArg7.addr, align 4
  %OutFuncArg8.addr = alloca i32*, align 4
  store i32* %OutFuncArg8, i32** %OutFuncArg8.addr, align 4
  %borrow.Clone = load i32*, i32** %OutFuncArg8.addr, align 4
  %OutFuncArg9.addr = alloca i32**, align 4
  store i32** %OutFuncArg9, i32*** %OutFuncArg9.addr, align 4
  %a.addr.Clone = load i32**, i32*** %OutFuncArg9.addr, align 4
  %OutFuncArg10.addr = alloca i32*, align 4
  store i32* %OutFuncArg10, i32** %OutFuncArg10.addr, align 4
  %retval.Clone = load i32*, i32** %OutFuncArg10.addr, align 4
  br label %for.cond.Clone

for.cond.Clone:                                   ; preds = %entry, %for.inc.Clone
  %0 = load i32, i32* %i.Clone, align 4
  %1 = load i32, i32* %digits.addr.Clone, align 4
  %cmp1.Clone = icmp ult i32 %0, %1
  br i1 %cmp1.Clone, label %for.body.Clone, label %for.end.Clone

for.body.Clone:                                   ; preds = %for.cond.Clone
  %2 = load i32, i32* %c.addr.Clone, align 4
  %conv.Clone = zext i32 %2 to i64
  %3 = load i32*, i32** %d.addr.Clone, align 4
  %4 = load i32, i32* %i.Clone, align 4
  %arrayidx.Clone = getelementptr inbounds i32, i32* %3, i32 %4
  %5 = load i32, i32* %arrayidx.Clone, align 4
  %conv2.Clone = zext i32 %5 to i64
  %mul.Clone = mul i64 %conv.Clone, %conv2.Clone
  store i64 %mul.Clone, i64* %result.Clone, align 8
  %6 = load i64, i64* %result.Clone, align 8
  %and.Clone = and i64 %6, 4294967295
  %conv3.Clone = trunc i64 %and.Clone to i32
  store i32 %conv3.Clone, i32* %rl.Clone, align 4
  %7 = load i64, i64* %result.Clone, align 8
  %shr.Clone = lshr i64 %7, 32
  %and4.Clone = and i64 %shr.Clone, 4294967295
  %conv5.Clone = trunc i64 %and4.Clone to i32
  store i32 %conv5.Clone, i32* %rh.Clone, align 4
  %8 = load i32*, i32** %b.addr.Clone, align 4
  %9 = load i32, i32* %i.Clone, align 4
  %arrayidx6.Clone = getelementptr inbounds i32, i32* %8, i32 %9
  %10 = load i32, i32* %arrayidx6.Clone, align 4
  %11 = load i32, i32* %borrow.Clone, align 4
  %sub.Clone = sub i32 %10, %11
  %12 = load i32*, i32** %a.addr.Clone, align 4
  %13 = load i32, i32* %i.Clone, align 4
  %arrayidx7.Clone = getelementptr inbounds i32, i32* %12, i32 %13
  store i32 %sub.Clone, i32* %arrayidx7.Clone, align 4
  %14 = load i32, i32* %borrow.Clone, align 4
  %sub8.Clone = sub i32 -1, %14
  %cmp9.Clone = icmp ugt i32 %sub.Clone, %sub8.Clone
  br i1 %cmp9.Clone, label %if.then11.Clone, label %if.else.Clone

if.then11.Clone:                                  ; preds = %for.body.Clone
  store i32 1, i32* %borrow.Clone, align 4
  br label %if.end12.Clone

if.end12.Clone:                                   ; preds = %if.else.Clone, %if.then11.Clone
  %15 = load i32, i32* %rl.Clone, align 4
  %16 = load i32*, i32** %a.addr.Clone, align 4
  %17 = load i32, i32* %i.Clone, align 4
  %arrayidx13.Clone = getelementptr inbounds i32, i32* %16, i32 %17
  %18 = load i32, i32* %arrayidx13.Clone, align 4
  %sub14.Clone = sub i32 %18, %15
  store i32 %sub14.Clone, i32* %arrayidx13.Clone, align 4
  %19 = load i32, i32* %rl.Clone, align 4
  %sub15.Clone = sub i32 -1, %19
  %cmp16.Clone = icmp ugt i32 %sub14.Clone, %sub15.Clone
  br i1 %cmp16.Clone, label %if.then18.Clone, label %if.end19.Clone

if.then18.Clone:                                  ; preds = %if.end12.Clone
  %20 = load i32, i32* %borrow.Clone, align 4
  %inc.Clone = add i32 %20, 1
  store i32 %inc.Clone, i32* %borrow.Clone, align 4
  br label %if.end19.Clone

if.end19.Clone:                                   ; preds = %if.then18.Clone, %if.end12.Clone
  %21 = load i32, i32* %rh.Clone, align 4
  %22 = load i32, i32* %borrow.Clone, align 4
  %add.Clone = add i32 %22, %21
  store i32 %add.Clone, i32* %borrow.Clone, align 4
  br label %for.inc.Clone

for.inc.Clone:                                    ; preds = %if.end19.Clone
  %23 = load i32, i32* %i.Clone, align 4
  %inc20.Clone = add i32 %23, 1
  store i32 %inc20.Clone, i32* %i.Clone, align 4
  br label %for.cond.Clone

if.else.Clone:                                    ; preds = %for.body.Clone
  store i32 0, i32* %borrow.Clone, align 4
  br label %if.end12.Clone

for.end.Clone:                                    ; preds = %for.cond.Clone
  %24 = load i32, i32* %borrow.Clone, align 4
  store i32 %24, i32* %retval.Clone, align 4
  br label %OutFuncRetBB

OutFuncRetBB:                                     ; preds = %for.end.Clone
  %25 = getelementptr inbounds %Struct.RetValue.2, %Struct.RetValue.2* @Struct.RetValue.4, i32 0, i32 0
  store i32* %i.Clone, i32** %25, align 4
  %26 = getelementptr inbounds %Struct.RetValue.2, %Struct.RetValue.2* @Struct.RetValue.4, i32 0, i32 1
  store i64* %result.Clone, i64** %26, align 4
  %27 = getelementptr inbounds %Struct.RetValue.2, %Struct.RetValue.2* @Struct.RetValue.4, i32 0, i32 2
  store i32* %rl.Clone, i32** %27, align 4
  %28 = getelementptr inbounds %Struct.RetValue.2, %Struct.RetValue.2* @Struct.RetValue.4, i32 0, i32 3
  store i32* %rh.Clone, i32** %28, align 4
  %29 = getelementptr inbounds %Struct.RetValue.2, %Struct.RetValue.2* @Struct.RetValue.4, i32 0, i32 4
  store i32* %borrow.Clone, i32** %29, align 4
  %30 = getelementptr inbounds %Struct.RetValue.2, %Struct.RetValue.2* @Struct.RetValue.4, i32 0, i32 5
  store i32* %retval.Clone, i32** %30, align 4
  ret void
}

define void @for.cond.OutLineFunc.7(i32* %OutFuncArg, i32** %OutFuncArg1, i32* %OutFuncArg2, i32* %OutFuncArg3, i32* %OutFuncArg4, i32** %OutFuncArg5, i32* %OutFuncArg6, i32* %OutFuncArg7) {
entry:
  %OutFuncArg.addr = alloca i32*, align 4
  store i32* %OutFuncArg, i32** %OutFuncArg.addr, align 4
  %i.Clone = load i32*, i32** %OutFuncArg.addr, align 4
  %OutFuncArg1.addr = alloca i32**, align 4
  store i32** %OutFuncArg1, i32*** %OutFuncArg1.addr, align 4
  %b.addr.Clone = load i32**, i32*** %OutFuncArg1.addr, align 4
  %OutFuncArg2.addr = alloca i32*, align 4
  store i32* %OutFuncArg2, i32** %OutFuncArg2.addr, align 4
  %bi.Clone = load i32*, i32** %OutFuncArg2.addr, align 4
  %OutFuncArg3.addr = alloca i32*, align 4
  store i32* %OutFuncArg3, i32** %OutFuncArg3.addr, align 4
  %c.addr.Clone = load i32*, i32** %OutFuncArg3.addr, align 4
  %OutFuncArg4.addr = alloca i32*, align 4
  store i32* %OutFuncArg4, i32** %OutFuncArg4.addr, align 4
  %carry.Clone = load i32*, i32** %OutFuncArg4.addr, align 4
  %OutFuncArg5.addr = alloca i32**, align 4
  store i32** %OutFuncArg5, i32*** %OutFuncArg5.addr, align 4
  %a.addr.Clone = load i32**, i32*** %OutFuncArg5.addr, align 4
  %OutFuncArg6.addr = alloca i32*, align 4
  store i32* %OutFuncArg6, i32** %OutFuncArg6.addr, align 4
  %t.Clone = load i32*, i32** %OutFuncArg6.addr, align 4
  %OutFuncArg7.addr = alloca i32*, align 4
  store i32* %OutFuncArg7, i32** %OutFuncArg7.addr, align 4
  %retval.Clone = load i32*, i32** %OutFuncArg7.addr, align 4
  br label %for.cond.Clone

for.cond.Clone:                                   ; preds = %entry, %for.inc.Clone
  %0 = load i32, i32* %i.Clone, align 4
  %cmp2.Clone = icmp sge i32 %0, 0
  br i1 %cmp2.Clone, label %for.body.Clone, label %for.end.Clone

for.body.Clone:                                   ; preds = %for.cond.Clone
  %1 = load i32*, i32** %b.addr.Clone, align 4
  %2 = load i32, i32* %i.Clone, align 4
  %arrayidx.Clone = getelementptr inbounds i32, i32* %1, i32 %2
  %3 = load i32, i32* %arrayidx.Clone, align 4
  store i32 %3, i32* %bi.Clone, align 4
  %4 = load i32, i32* %bi.Clone, align 4
  %5 = load i32, i32* %c.addr.Clone, align 4
  %shr.Clone = lshr i32 %4, %5
  %6 = load i32, i32* %carry.Clone, align 4
  %or.Clone = or i32 %shr.Clone, %6
  %7 = load i32*, i32** %a.addr.Clone, align 4
  %8 = load i32, i32* %i.Clone, align 4
  %arrayidx3.Clone = getelementptr inbounds i32, i32* %7, i32 %8
  store i32 %or.Clone, i32* %arrayidx3.Clone, align 4
  %9 = load i32, i32* %c.addr.Clone, align 4
  %tobool.Clone = icmp ne i32 %9, 0
  br i1 %tobool.Clone, label %cond.true.Clone, label %cond.false.Clone

cond.true.Clone:                                  ; preds = %for.body.Clone
  %10 = load i32, i32* %bi.Clone, align 4
  %11 = load i32, i32* %t.Clone, align 4
  %shl.Clone = shl i32 %10, %11
  br label %cond.end.Clone

cond.end.Clone:                                   ; preds = %cond.false.Clone, %cond.true.Clone
  %cond.Clone = phi i32 [ %shl.Clone, %cond.true.Clone ], [ 0, %cond.false.Clone ]
  store i32 %cond.Clone, i32* %carry.Clone, align 4
  br label %for.inc.Clone

for.inc.Clone:                                    ; preds = %cond.end.Clone
  %12 = load i32, i32* %i.Clone, align 4
  %dec.Clone = add nsw i32 %12, -1
  store i32 %dec.Clone, i32* %i.Clone, align 4
  br label %for.cond.Clone

cond.false.Clone:                                 ; preds = %for.body.Clone
  br label %cond.end.Clone

for.end.Clone:                                    ; preds = %for.cond.Clone
  %13 = load i32, i32* %carry.Clone, align 4
  store i32 %13, i32* %retval.Clone, align 4
  br label %OutFuncRetBB

OutFuncRetBB:                                     ; preds = %for.end.Clone
  %14 = getelementptr inbounds %Struct.RetValue.3, %Struct.RetValue.3* @Struct.RetValue.6, i32 0, i32 0
  store i32* %i.Clone, i32** %14, align 4
  %15 = getelementptr inbounds %Struct.RetValue.3, %Struct.RetValue.3* @Struct.RetValue.6, i32 0, i32 1
  store i32* %bi.Clone, i32** %15, align 4
  %16 = getelementptr inbounds %Struct.RetValue.3, %Struct.RetValue.3* @Struct.RetValue.6, i32 0, i32 2
  store i32* %carry.Clone, i32** %16, align 4
  %17 = getelementptr inbounds %Struct.RetValue.3, %Struct.RetValue.3* @Struct.RetValue.6, i32 0, i32 3
  store i32* %retval.Clone, i32** %17, align 4
  ret void
}

define void @do.end72.OutLineFunc(i32* %OutFuncArg, [65 x i32]* %OutFuncArg1, [65 x i32]* %OutFuncArg2, [65 x i32]* %OutFuncArg3, [65 x i32]* %OutFuncArg4, [65 x i32]* %OutFuncArg5, [65 x i32]* %OutFuncArg6, [65 x i32]* %OutFuncArg7, [65 x i32]* %OutFuncArg8, i32* %OutFuncArg9, [65 x i32]* %OutFuncArg10, [65 x i32]* %OutFuncArg11, [65 x i32]* %OutFuncArg12, [65 x i32]* %OutFuncArg13, i32* %OutFuncArg14, %struct.rsa_sk_t** %OutFuncArg15, %struct.rsa_pk_t** %OutFuncArg16, i32* %OutFuncArg17) {
entry:
  %OutFuncArg.addr = alloca i32*, align 4
  store i32* %OutFuncArg, i32** %OutFuncArg.addr, align 4
  %pdigits.Clone = load i32*, i32** %OutFuncArg.addr, align 4
  %OutFuncArg1.addr = alloca [65 x i32]*, align 4
  store [65 x i32]* %OutFuncArg1, [65 x i32]** %OutFuncArg1.addr, align 4
  %q.Clone = load [65 x i32]*, [65 x i32]** %OutFuncArg1.addr, align 4
  %OutFuncArg2.addr = alloca [65 x i32]*, align 4
  store [65 x i32]* %OutFuncArg2, [65 x i32]** %OutFuncArg2.addr, align 4
  %p.Clone = load [65 x i32]*, [65 x i32]** %OutFuncArg2.addr, align 4
  %OutFuncArg3.addr = alloca [65 x i32]*, align 4
  store [65 x i32]* %OutFuncArg3, [65 x i32]** %OutFuncArg3.addr, align 4
  %t.Clone = load [65 x i32]*, [65 x i32]** %OutFuncArg3.addr, align 4
  %OutFuncArg4.addr = alloca [65 x i32]*, align 4
  store [65 x i32]* %OutFuncArg4, [65 x i32]** %OutFuncArg4.addr, align 4
  %n.Clone = load [65 x i32]*, [65 x i32]** %OutFuncArg4.addr, align 4
  %OutFuncArg5.addr = alloca [65 x i32]*, align 4
  store [65 x i32]* %OutFuncArg5, [65 x i32]** %OutFuncArg5.addr, align 4
  %q_inv.Clone = load [65 x i32]*, [65 x i32]** %OutFuncArg5.addr, align 4
  %OutFuncArg6.addr = alloca [65 x i32]*, align 4
  store [65 x i32]* %OutFuncArg6, [65 x i32]** %OutFuncArg6.addr, align 4
  %p_minus1.Clone = load [65 x i32]*, [65 x i32]** %OutFuncArg6.addr, align 4
  %OutFuncArg7.addr = alloca [65 x i32]*, align 4
  store [65 x i32]* %OutFuncArg7, [65 x i32]** %OutFuncArg7.addr, align 4
  %q_minus1.Clone = load [65 x i32]*, [65 x i32]** %OutFuncArg7.addr, align 4
  %OutFuncArg8.addr = alloca [65 x i32]*, align 4
  store [65 x i32]* %OutFuncArg8, [65 x i32]** %OutFuncArg8.addr, align 4
  %phi_n.Clone = load [65 x i32]*, [65 x i32]** %OutFuncArg8.addr, align 4
  %OutFuncArg9.addr = alloca i32*, align 4
  store i32* %OutFuncArg9, i32** %OutFuncArg9.addr, align 4
  %ndigits.Clone = load i32*, i32** %OutFuncArg9.addr, align 4
  %OutFuncArg10.addr = alloca [65 x i32]*, align 4
  store [65 x i32]* %OutFuncArg10, [65 x i32]** %OutFuncArg10.addr, align 4
  %e.Clone = load [65 x i32]*, [65 x i32]** %OutFuncArg10.addr, align 4
  %OutFuncArg11.addr = alloca [65 x i32]*, align 4
  store [65 x i32]* %OutFuncArg11, [65 x i32]** %OutFuncArg11.addr, align 4
  %d.Clone = load [65 x i32]*, [65 x i32]** %OutFuncArg11.addr, align 4
  %OutFuncArg12.addr = alloca [65 x i32]*, align 4
  store [65 x i32]* %OutFuncArg12, [65 x i32]** %OutFuncArg12.addr, align 4
  %dp.Clone = load [65 x i32]*, [65 x i32]** %OutFuncArg12.addr, align 4
  %OutFuncArg13.addr = alloca [65 x i32]*, align 4
  store [65 x i32]* %OutFuncArg13, [65 x i32]** %OutFuncArg13.addr, align 4
  %dq.Clone = load [65 x i32]*, [65 x i32]** %OutFuncArg13.addr, align 4
  %OutFuncArg14.addr = alloca i32*, align 4
  store i32* %OutFuncArg14, i32** %OutFuncArg14.addr, align 4
  %key_bits.addr.Clone = load i32*, i32** %OutFuncArg14.addr, align 4
  %OutFuncArg15.addr = alloca %struct.rsa_sk_t**, align 4
  store %struct.rsa_sk_t** %OutFuncArg15, %struct.rsa_sk_t*** %OutFuncArg15.addr, align 4
  %sk.addr.Clone = load %struct.rsa_sk_t**, %struct.rsa_sk_t*** %OutFuncArg15.addr, align 4
  %OutFuncArg16.addr = alloca %struct.rsa_pk_t**, align 4
  store %struct.rsa_pk_t** %OutFuncArg16, %struct.rsa_pk_t*** %OutFuncArg16.addr, align 4
  %pk.addr.Clone = load %struct.rsa_pk_t**, %struct.rsa_pk_t*** %OutFuncArg16.addr, align 4
  %OutFuncArg17.addr = alloca i32*, align 4
  store i32* %OutFuncArg17, i32** %OutFuncArg17.addr, align 4
  %retval.Clone = load i32*, i32** %OutFuncArg17.addr, align 4
  %RetValuePtr = alloca i32, align 4
  br label %do.end72.Clone

do.end72.Clone:                                   ; preds = %entry
  %0 = load i32, i32* %pdigits.Clone, align 4
  %arraydecay73.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %q.Clone, i32 0, i32 0
  %arraydecay74.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %p.Clone, i32 0, i32 0
  br label %entry.bn_cmp.Clone

entry.bn_cmp.Clone:                               ; preds = %do.end72.Clone
  %retval.bn_cmp.Clone = alloca i32, align 4
  %digits.addr.bn_cmp.Clone = alloca i32, align 4
  %b.addr.bn_cmp.Clone = alloca i32*, align 4
  %a.addr.bn_cmp.Clone = alloca i32*, align 4
  %i.bn_cmp.Clone = alloca i32, align 4
  store i32 %0, i32* %digits.addr.bn_cmp.Clone, align 4
  store i32* %arraydecay73.Clone, i32** %b.addr.bn_cmp.Clone, align 4
  store i32* %arraydecay74.Clone, i32** %a.addr.bn_cmp.Clone, align 4
  %1 = load i32, i32* %digits.addr.bn_cmp.Clone, align 4
  %sub.bn_cmp.Clone = sub i32 %1, 1
  store i32 %sub.bn_cmp.Clone, i32* %i.bn_cmp.Clone, align 4
  br label %for.cond.bn_cmp.Clone

for.cond.bn_cmp.Clone:                            ; preds = %for.inc.bn_cmp.Clone, %entry.bn_cmp.Clone
  %2 = load i32, i32* %i.bn_cmp.Clone, align 4
  %cmp.bn_cmp.Clone = icmp sge i32 %2, 0
  br i1 %cmp.bn_cmp.Clone, label %for.body.bn_cmp.Clone, label %for.end.bn_cmp.Clone

for.body.bn_cmp.Clone:                            ; preds = %for.cond.bn_cmp.Clone
  %3 = load i32*, i32** %a.addr.bn_cmp.Clone, align 4
  %4 = load i32, i32* %i.bn_cmp.Clone, align 4
  %arrayidx.bn_cmp.Clone = getelementptr inbounds i32, i32* %3, i32 %4
  %5 = load i32, i32* %arrayidx.bn_cmp.Clone, align 4
  %6 = load i32*, i32** %b.addr.bn_cmp.Clone, align 4
  %7 = load i32, i32* %i.bn_cmp.Clone, align 4
  %arrayidx1.bn_cmp.Clone = getelementptr inbounds i32, i32* %6, i32 %7
  %8 = load i32, i32* %arrayidx1.bn_cmp.Clone, align 4
  %cmp2.bn_cmp.Clone = icmp ugt i32 %5, %8
  br i1 %cmp2.bn_cmp.Clone, label %if.then.bn_cmp.Clone, label %if.end.bn_cmp.Clone

if.then.bn_cmp.Clone:                             ; preds = %for.body.bn_cmp.Clone
  store i32 1, i32* %retval.bn_cmp.Clone, align 4
  br label %return.bn_cmp.Clone

if.end.bn_cmp.Clone:                              ; preds = %for.body.bn_cmp.Clone
  %9 = load i32*, i32** %a.addr.bn_cmp.Clone, align 4
  %10 = load i32, i32* %i.bn_cmp.Clone, align 4
  %arrayidx3.bn_cmp.Clone = getelementptr inbounds i32, i32* %9, i32 %10
  %11 = load i32, i32* %arrayidx3.bn_cmp.Clone, align 4
  %12 = load i32*, i32** %b.addr.bn_cmp.Clone, align 4
  %13 = load i32, i32* %i.bn_cmp.Clone, align 4
  %arrayidx4.bn_cmp.Clone = getelementptr inbounds i32, i32* %12, i32 %13
  %14 = load i32, i32* %arrayidx4.bn_cmp.Clone, align 4
  %cmp5.bn_cmp.Clone = icmp ult i32 %11, %14
  br i1 %cmp5.bn_cmp.Clone, label %if.then6.bn_cmp.Clone, label %if.end7.bn_cmp.Clone

if.then6.bn_cmp.Clone:                            ; preds = %if.end.bn_cmp.Clone
  store i32 -1, i32* %retval.bn_cmp.Clone, align 4
  br label %return.bn_cmp.Clone

if.end7.bn_cmp.Clone:                             ; preds = %if.end.bn_cmp.Clone
  br label %for.inc.bn_cmp.Clone

for.inc.bn_cmp.Clone:                             ; preds = %if.end7.bn_cmp.Clone
  %15 = load i32, i32* %i.bn_cmp.Clone, align 4
  %dec.bn_cmp.Clone = add nsw i32 %15, -1
  store i32 %dec.bn_cmp.Clone, i32* %i.bn_cmp.Clone, align 4
  br label %for.cond.bn_cmp.Clone

for.end.bn_cmp.Clone:                             ; preds = %for.cond.bn_cmp.Clone
  store i32 0, i32* %retval.bn_cmp.Clone, align 4
  br label %return.bn_cmp.Clone

return.bn_cmp.Clone:                              ; preds = %for.end.bn_cmp.Clone, %if.then6.bn_cmp.Clone, %if.then.bn_cmp.Clone
  %16 = load i32, i32* %retval.bn_cmp.Clone, align 4
  store i32 %16, i32* %RetValuePtr
  br label %do.end72.Clone.Split

do.end72.Clone.Split:                             ; preds = %return.bn_cmp.Clone
  %RetValue = load i32, i32* %RetValuePtr
  %cmp76.Clone = icmp slt i32 %RetValue, 0
  br i1 %cmp76.Clone, label %if.then77.Clone, label %if.end84.Clone

if.then77.Clone:                                  ; preds = %do.end72.Clone.Split
  %17 = load i32, i32* %pdigits.Clone, align 4
  %arraydecay78.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %p.Clone, i32 0, i32 0
  %arraydecay79.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %t.Clone, i32 0, i32 0
  call void @bn_assign(i32* %arraydecay79.Clone, i32* %arraydecay78.Clone, i32 %17)
  %18 = load i32, i32* %pdigits.Clone, align 4
  %arraydecay80.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %q.Clone, i32 0, i32 0
  %arraydecay81.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %p.Clone, i32 0, i32 0
  call void @bn_assign(i32* %arraydecay81.Clone, i32* %arraydecay80.Clone, i32 %18)
  %19 = load i32, i32* %pdigits.Clone, align 4
  %arraydecay82.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %t.Clone, i32 0, i32 0
  %arraydecay83.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %q.Clone, i32 0, i32 0
  call void @bn_assign(i32* %arraydecay83.Clone, i32* %arraydecay82.Clone, i32 %19)
  br label %if.end84.Clone

if.end84.Clone:                                   ; preds = %if.then77.Clone, %do.end72.Clone.Split
  %20 = load i32, i32* %pdigits.Clone, align 4
  %arraydecay85.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %q.Clone, i32 0, i32 0
  %arraydecay86.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %p.Clone, i32 0, i32 0
  %arraydecay87.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %n.Clone, i32 0, i32 0
  br label %entry.bn_mul.Clone318

entry.bn_mul.Clone318:                            ; preds = %if.end84.Clone
  %digits.addr.bn_mul.Clone319 = alloca i32, align 4
  %c.addr.bn_mul.Clone320 = alloca i32*, align 4
  %b.addr.bn_mul.Clone321 = alloca i32*, align 4
  %a.addr.bn_mul.Clone322 = alloca i32*, align 4
  %t.bn_mul.Clone323 = alloca [130 x i32], align 4
  %bdigits.bn_mul.Clone324 = alloca i32, align 4
  %cdigits.bn_mul.Clone325 = alloca i32, align 4
  %i.bn_mul.Clone326 = alloca i32, align 4
  store i32 %20, i32* %digits.addr.bn_mul.Clone319, align 4
  store i32* %arraydecay85.Clone, i32** %c.addr.bn_mul.Clone320, align 4
  store i32* %arraydecay86.Clone, i32** %b.addr.bn_mul.Clone321, align 4
  store i32* %arraydecay87.Clone, i32** %a.addr.bn_mul.Clone322, align 4
  %21 = load i32, i32* %digits.addr.bn_mul.Clone319, align 4
  %mul.bn_mul.Clone327 = mul i32 2, %21
  %arraydecay.bn_mul.Clone328 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone323, i32 0, i32 0
  %RetValuePtr.bn_mul.Clone329 = alloca i32, align 4
  %RetValuePtr18.bn_mul.Clone330 = alloca i32, align 4
  br label %entry.bn_assign_zero.Clone.bn_mul.Clone331

entry.bn_assign_zero.Clone.bn_mul.Clone331:       ; preds = %entry.bn_mul.Clone318
  %digits.addr.bn_assign_zero.Clone.bn_mul.Clone332 = alloca i32, align 4
  %a.addr.bn_assign_zero.Clone.bn_mul.Clone333 = alloca i32*, align 4
  %i.bn_assign_zero.Clone.bn_mul.Clone334 = alloca i32, align 4
  store i32 %mul.bn_mul.Clone327, i32* %digits.addr.bn_assign_zero.Clone.bn_mul.Clone332, align 4
  store i32* %arraydecay.bn_mul.Clone328, i32** %a.addr.bn_assign_zero.Clone.bn_mul.Clone333, align 4
  store i32 0, i32* %i.bn_assign_zero.Clone.bn_mul.Clone334, align 4
  br label %for.cond.bn_assign_zero.Clone.bn_mul.Clone335

for.cond.bn_assign_zero.Clone.bn_mul.Clone335:    ; preds = %for.inc.bn_assign_zero.Clone.bn_mul.Clone339, %entry.bn_assign_zero.Clone.bn_mul.Clone331
  %22 = load i32, i32* %i.bn_assign_zero.Clone.bn_mul.Clone334, align 4
  %23 = load i32, i32* %digits.addr.bn_assign_zero.Clone.bn_mul.Clone332, align 4
  %cmp.bn_assign_zero.Clone.bn_mul.Clone336 = icmp ult i32 %22, %23
  br i1 %cmp.bn_assign_zero.Clone.bn_mul.Clone336, label %for.body.bn_assign_zero.Clone.bn_mul.Clone337, label %for.end.bn_assign_zero.Clone.bn_mul.Clone341

for.body.bn_assign_zero.Clone.bn_mul.Clone337:    ; preds = %for.cond.bn_assign_zero.Clone.bn_mul.Clone335
  %24 = load i32*, i32** %a.addr.bn_assign_zero.Clone.bn_mul.Clone333, align 4
  %25 = load i32, i32* %i.bn_assign_zero.Clone.bn_mul.Clone334, align 4
  %arrayidx.bn_assign_zero.Clone.bn_mul.Clone338 = getelementptr inbounds i32, i32* %24, i32 %25
  store i32 0, i32* %arrayidx.bn_assign_zero.Clone.bn_mul.Clone338, align 4
  br label %for.inc.bn_assign_zero.Clone.bn_mul.Clone339

for.inc.bn_assign_zero.Clone.bn_mul.Clone339:     ; preds = %for.body.bn_assign_zero.Clone.bn_mul.Clone337
  %26 = load i32, i32* %i.bn_assign_zero.Clone.bn_mul.Clone334, align 4
  %inc.bn_assign_zero.Clone.bn_mul.Clone340 = add i32 %26, 1
  store i32 %inc.bn_assign_zero.Clone.bn_mul.Clone340, i32* %i.bn_assign_zero.Clone.bn_mul.Clone334, align 4
  br label %for.cond.bn_assign_zero.Clone.bn_mul.Clone335

for.end.bn_assign_zero.Clone.bn_mul.Clone341:     ; preds = %for.cond.bn_assign_zero.Clone.bn_mul.Clone335
  br label %entry.Split.bn_mul.Clone342

entry.Split.bn_mul.Clone342:                      ; preds = %for.end.bn_assign_zero.Clone.bn_mul.Clone341
  %27 = load i32, i32* %digits.addr.bn_mul.Clone319, align 4
  %28 = load i32*, i32** %b.addr.bn_mul.Clone321, align 4
  br label %entry.bn_digits.Clone2.bn_mul.Clone343

entry.bn_digits.Clone2.bn_mul.Clone343:           ; preds = %entry.Split.bn_mul.Clone342
  %digits.addr.bn_digits.Clone3.bn_mul.Clone344 = alloca i32, align 4
  %a.addr.bn_digits.Clone4.bn_mul.Clone345 = alloca i32*, align 4
  %i.bn_digits.Clone5.bn_mul.Clone346 = alloca i32, align 4
  store i32 %27, i32* %digits.addr.bn_digits.Clone3.bn_mul.Clone344, align 4
  store i32* %28, i32** %a.addr.bn_digits.Clone4.bn_mul.Clone345, align 4
  %29 = load i32, i32* %digits.addr.bn_digits.Clone3.bn_mul.Clone344, align 4
  %sub.bn_digits.Clone6.bn_mul.Clone347 = sub i32 %29, 1
  store i32 %sub.bn_digits.Clone6.bn_mul.Clone347, i32* %i.bn_digits.Clone5.bn_mul.Clone346, align 4
  br label %for.cond.bn_digits.Clone7.bn_mul.Clone348

for.cond.bn_digits.Clone7.bn_mul.Clone348:        ; preds = %for.inc.bn_digits.Clone14.bn_mul.Clone355, %entry.bn_digits.Clone2.bn_mul.Clone343
  %30 = load i32, i32* %i.bn_digits.Clone5.bn_mul.Clone346, align 4
  %cmp.bn_digits.Clone8.bn_mul.Clone349 = icmp sge i32 %30, 0
  br i1 %cmp.bn_digits.Clone8.bn_mul.Clone349, label %for.body.bn_digits.Clone9.bn_mul.Clone350, label %for.end.bn_digits.Clone16.bn_mul.Clone357

for.body.bn_digits.Clone9.bn_mul.Clone350:        ; preds = %for.cond.bn_digits.Clone7.bn_mul.Clone348
  %31 = load i32*, i32** %a.addr.bn_digits.Clone4.bn_mul.Clone345, align 4
  %32 = load i32, i32* %i.bn_digits.Clone5.bn_mul.Clone346, align 4
  %arrayidx.bn_digits.Clone10.bn_mul.Clone351 = getelementptr inbounds i32, i32* %31, i32 %32
  %33 = load i32, i32* %arrayidx.bn_digits.Clone10.bn_mul.Clone351, align 4
  %tobool.bn_digits.Clone11.bn_mul.Clone352 = icmp ne i32 %33, 0
  br i1 %tobool.bn_digits.Clone11.bn_mul.Clone352, label %if.then.bn_digits.Clone12.bn_mul.Clone353, label %if.end.bn_digits.Clone13.bn_mul.Clone354

if.then.bn_digits.Clone12.bn_mul.Clone353:        ; preds = %for.body.bn_digits.Clone9.bn_mul.Clone350
  br label %for.end.bn_digits.Clone16.bn_mul.Clone357

if.end.bn_digits.Clone13.bn_mul.Clone354:         ; preds = %for.body.bn_digits.Clone9.bn_mul.Clone350
  br label %for.inc.bn_digits.Clone14.bn_mul.Clone355

for.inc.bn_digits.Clone14.bn_mul.Clone355:        ; preds = %if.end.bn_digits.Clone13.bn_mul.Clone354
  %34 = load i32, i32* %i.bn_digits.Clone5.bn_mul.Clone346, align 4
  %dec.bn_digits.Clone15.bn_mul.Clone356 = add nsw i32 %34, -1
  store i32 %dec.bn_digits.Clone15.bn_mul.Clone356, i32* %i.bn_digits.Clone5.bn_mul.Clone346, align 4
  br label %for.cond.bn_digits.Clone7.bn_mul.Clone348

for.end.bn_digits.Clone16.bn_mul.Clone357:        ; preds = %if.then.bn_digits.Clone12.bn_mul.Clone353, %for.cond.bn_digits.Clone7.bn_mul.Clone348
  %35 = load i32, i32* %i.bn_digits.Clone5.bn_mul.Clone346, align 4
  %add.bn_digits.Clone17.bn_mul.Clone358 = add nsw i32 %35, 1
  store i32 %add.bn_digits.Clone17.bn_mul.Clone358, i32* %RetValuePtr18.bn_mul.Clone330
  br label %entry.Split.Split1.bn_mul.Clone359

entry.Split.Split1.bn_mul.Clone359:               ; preds = %for.end.bn_digits.Clone16.bn_mul.Clone357
  %RetValue19.bn_mul.Clone360 = load i32, i32* %RetValuePtr18.bn_mul.Clone330
  store i32 %RetValue19.bn_mul.Clone360, i32* %bdigits.bn_mul.Clone324, align 4
  %36 = load i32, i32* %digits.addr.bn_mul.Clone319, align 4
  %37 = load i32*, i32** %c.addr.bn_mul.Clone320, align 4
  br label %entry.bn_digits.Clone.bn_mul.Clone361

entry.bn_digits.Clone.bn_mul.Clone361:            ; preds = %entry.Split.Split1.bn_mul.Clone359
  %digits.addr.bn_digits.Clone.bn_mul.Clone362 = alloca i32, align 4
  %a.addr.bn_digits.Clone.bn_mul.Clone363 = alloca i32*, align 4
  %i.bn_digits.Clone.bn_mul.Clone364 = alloca i32, align 4
  store i32 %36, i32* %digits.addr.bn_digits.Clone.bn_mul.Clone362, align 4
  store i32* %37, i32** %a.addr.bn_digits.Clone.bn_mul.Clone363, align 4
  %38 = load i32, i32* %digits.addr.bn_digits.Clone.bn_mul.Clone362, align 4
  %sub.bn_digits.Clone.bn_mul.Clone365 = sub i32 %38, 1
  store i32 %sub.bn_digits.Clone.bn_mul.Clone365, i32* %i.bn_digits.Clone.bn_mul.Clone364, align 4
  br label %for.cond.bn_digits.Clone.bn_mul.Clone366

for.cond.bn_digits.Clone.bn_mul.Clone366:         ; preds = %for.inc.bn_digits.Clone.bn_mul.Clone373, %entry.bn_digits.Clone.bn_mul.Clone361
  %39 = load i32, i32* %i.bn_digits.Clone.bn_mul.Clone364, align 4
  %cmp.bn_digits.Clone.bn_mul.Clone367 = icmp sge i32 %39, 0
  br i1 %cmp.bn_digits.Clone.bn_mul.Clone367, label %for.body.bn_digits.Clone.bn_mul.Clone368, label %for.end.bn_digits.Clone.bn_mul.Clone375

for.body.bn_digits.Clone.bn_mul.Clone368:         ; preds = %for.cond.bn_digits.Clone.bn_mul.Clone366
  %40 = load i32*, i32** %a.addr.bn_digits.Clone.bn_mul.Clone363, align 4
  %41 = load i32, i32* %i.bn_digits.Clone.bn_mul.Clone364, align 4
  %arrayidx.bn_digits.Clone.bn_mul.Clone369 = getelementptr inbounds i32, i32* %40, i32 %41
  %42 = load i32, i32* %arrayidx.bn_digits.Clone.bn_mul.Clone369, align 4
  %tobool.bn_digits.Clone.bn_mul.Clone370 = icmp ne i32 %42, 0
  br i1 %tobool.bn_digits.Clone.bn_mul.Clone370, label %if.then.bn_digits.Clone.bn_mul.Clone371, label %if.end.bn_digits.Clone.bn_mul.Clone372

if.then.bn_digits.Clone.bn_mul.Clone371:          ; preds = %for.body.bn_digits.Clone.bn_mul.Clone368
  br label %for.end.bn_digits.Clone.bn_mul.Clone375

if.end.bn_digits.Clone.bn_mul.Clone372:           ; preds = %for.body.bn_digits.Clone.bn_mul.Clone368
  br label %for.inc.bn_digits.Clone.bn_mul.Clone373

for.inc.bn_digits.Clone.bn_mul.Clone373:          ; preds = %if.end.bn_digits.Clone.bn_mul.Clone372
  %43 = load i32, i32* %i.bn_digits.Clone.bn_mul.Clone364, align 4
  %dec.bn_digits.Clone.bn_mul.Clone374 = add nsw i32 %43, -1
  store i32 %dec.bn_digits.Clone.bn_mul.Clone374, i32* %i.bn_digits.Clone.bn_mul.Clone364, align 4
  br label %for.cond.bn_digits.Clone.bn_mul.Clone366

for.end.bn_digits.Clone.bn_mul.Clone375:          ; preds = %if.then.bn_digits.Clone.bn_mul.Clone371, %for.cond.bn_digits.Clone.bn_mul.Clone366
  %44 = load i32, i32* %i.bn_digits.Clone.bn_mul.Clone364, align 4
  %add.bn_digits.Clone.bn_mul.Clone376 = add nsw i32 %44, 1
  store i32 %add.bn_digits.Clone.bn_mul.Clone376, i32* %RetValuePtr.bn_mul.Clone329
  br label %entry.Split.Split.bn_mul.Clone377

entry.Split.Split.bn_mul.Clone377:                ; preds = %for.end.bn_digits.Clone.bn_mul.Clone375
  %RetValue.bn_mul.Clone378 = load i32, i32* %RetValuePtr.bn_mul.Clone329
  store i32 %RetValue.bn_mul.Clone378, i32* %cdigits.bn_mul.Clone325, align 4
  store i32 0, i32* %i.bn_mul.Clone326, align 4
  br label %for.cond.bn_mul.Clone379

for.cond.bn_mul.Clone379:                         ; preds = %for.inc.bn_mul.Clone389, %entry.Split.Split.bn_mul.Clone377
  %45 = load i32, i32* %i.bn_mul.Clone326, align 4
  %46 = load i32, i32* %bdigits.bn_mul.Clone324, align 4
  %cmp.bn_mul.Clone380 = icmp ult i32 %45, %46
  br i1 %cmp.bn_mul.Clone380, label %for.body.bn_mul.Clone381, label %for.end.bn_mul.Clone391

for.body.bn_mul.Clone381:                         ; preds = %for.cond.bn_mul.Clone379
  %47 = load i32, i32* %cdigits.bn_mul.Clone325, align 4
  %48 = load i32*, i32** %c.addr.bn_mul.Clone320, align 4
  %49 = load i32*, i32** %b.addr.bn_mul.Clone321, align 4
  %50 = load i32, i32* %i.bn_mul.Clone326, align 4
  %arrayidx.bn_mul.Clone382 = getelementptr inbounds i32, i32* %49, i32 %50
  %51 = load i32, i32* %arrayidx.bn_mul.Clone382, align 4
  %52 = load i32, i32* %i.bn_mul.Clone326, align 4
  %arrayidx2.bn_mul.Clone383 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone323, i32 0, i32 %52
  %53 = load i32, i32* %i.bn_mul.Clone326, align 4
  %arrayidx3.bn_mul.Clone384 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone323, i32 0, i32 %53
  %call4.bn_mul.Clone385 = call i32 @bn_add_digit_mul(i32* %arrayidx3.bn_mul.Clone384, i32* %arrayidx2.bn_mul.Clone383, i32 %51, i32* %48, i32 %47)
  %54 = load i32, i32* %i.bn_mul.Clone326, align 4
  %55 = load i32, i32* %cdigits.bn_mul.Clone325, align 4
  %add.bn_mul.Clone386 = add i32 %54, %55
  %arrayidx5.bn_mul.Clone387 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone323, i32 0, i32 %add.bn_mul.Clone386
  %56 = load i32, i32* %arrayidx5.bn_mul.Clone387, align 4
  %add6.bn_mul.Clone388 = add i32 %56, %call4.bn_mul.Clone385
  store i32 %add6.bn_mul.Clone388, i32* %arrayidx5.bn_mul.Clone387, align 4
  br label %for.inc.bn_mul.Clone389

for.inc.bn_mul.Clone389:                          ; preds = %for.body.bn_mul.Clone381
  %57 = load i32, i32* %i.bn_mul.Clone326, align 4
  %inc.bn_mul.Clone390 = add i32 %57, 1
  store i32 %inc.bn_mul.Clone390, i32* %i.bn_mul.Clone326, align 4
  br label %for.cond.bn_mul.Clone379

for.end.bn_mul.Clone391:                          ; preds = %for.cond.bn_mul.Clone379
  %58 = load i32, i32* %digits.addr.bn_mul.Clone319, align 4
  %mul7.bn_mul.Clone392 = mul i32 2, %58
  %arraydecay8.bn_mul.Clone393 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone323, i32 0, i32 0
  %59 = load i32*, i32** %a.addr.bn_mul.Clone322, align 4
  call void @bn_assign(i32* %59, i32* %arraydecay8.bn_mul.Clone393, i32 %mul7.bn_mul.Clone392)
  %arraydecay9.bn_mul.Clone394 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone323, i32 0, i32 0
  %60 = bitcast i32* %arraydecay9.bn_mul.Clone394 to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %60, i8 0, i32 520, i1 false)
  br label %if.end84.Clone.Split317

if.end84.Clone.Split317:                          ; preds = %for.end.bn_mul.Clone391
  %61 = load i32, i32* %pdigits.Clone, align 4
  %arraydecay88.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %p.Clone, i32 0, i32 0
  %arraydecay89.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %q.Clone, i32 0, i32 0
  %arraydecay90.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %q_inv.Clone, i32 0, i32 0
  br label %entry.bn_mod_inv.Clone395

entry.bn_mod_inv.Clone395:                        ; preds = %if.end84.Clone.Split317
  %digits.addr.bn_mod_inv.Clone396 = alloca i32, align 4
  %c.addr.bn_mod_inv.Clone397 = alloca i32*, align 4
  %b.addr.bn_mod_inv.Clone398 = alloca i32*, align 4
  %a.addr.bn_mod_inv.Clone399 = alloca i32*, align 4
  %q.bn_mod_inv.Clone400 = alloca [65 x i32], align 4
  %t1.bn_mod_inv.Clone401 = alloca [65 x i32], align 4
  %t3.bn_mod_inv.Clone402 = alloca [65 x i32], align 4
  %w.bn_mod_inv.Clone403 = alloca [130 x i32], align 4
  %u1.bn_mod_inv.Clone404 = alloca [65 x i32], align 4
  %u3.bn_mod_inv.Clone405 = alloca [65 x i32], align 4
  %v1.bn_mod_inv.Clone406 = alloca [65 x i32], align 4
  %v3.bn_mod_inv.Clone407 = alloca [65 x i32], align 4
  %u1_sign.bn_mod_inv.Clone408 = alloca i32, align 4
  store i32 %61, i32* %digits.addr.bn_mod_inv.Clone396, align 4
  store i32* %arraydecay88.Clone, i32** %c.addr.bn_mod_inv.Clone397, align 4
  store i32* %arraydecay89.Clone, i32** %b.addr.bn_mod_inv.Clone398, align 4
  store i32* %arraydecay90.Clone, i32** %a.addr.bn_mod_inv.Clone399, align 4
  %62 = load i32, i32* %digits.addr.bn_mod_inv.Clone396, align 4
  %arraydecay.bn_mod_inv.Clone409 = getelementptr inbounds [65 x i32], [65 x i32]* %u1.bn_mod_inv.Clone404, i32 0, i32 0
  %RetValuePtr.bn_mod_inv.Clone410 = alloca i32, align 4
  %RetValuePtr14.bn_mod_inv.Clone411 = alloca i32, align 4
  br label %entry.bn_assign_zero.Clone2.bn_mod_inv.Clone412

entry.bn_assign_zero.Clone2.bn_mod_inv.Clone412:  ; preds = %entry.bn_mod_inv.Clone395
  %digits.addr.bn_assign_zero.Clone3.bn_mod_inv.Clone413 = alloca i32, align 4
  %a.addr.bn_assign_zero.Clone4.bn_mod_inv.Clone414 = alloca i32*, align 4
  %i.bn_assign_zero.Clone5.bn_mod_inv.Clone415 = alloca i32, align 4
  store i32 %62, i32* %digits.addr.bn_assign_zero.Clone3.bn_mod_inv.Clone413, align 4
  store i32* %arraydecay.bn_mod_inv.Clone409, i32** %a.addr.bn_assign_zero.Clone4.bn_mod_inv.Clone414, align 4
  store i32 0, i32* %i.bn_assign_zero.Clone5.bn_mod_inv.Clone415, align 4
  br label %for.cond.bn_assign_zero.Clone6.bn_mod_inv.Clone416

for.cond.bn_assign_zero.Clone6.bn_mod_inv.Clone416: ; preds = %for.inc.bn_assign_zero.Clone10.bn_mod_inv.Clone420, %entry.bn_assign_zero.Clone2.bn_mod_inv.Clone412
  %63 = load i32, i32* %i.bn_assign_zero.Clone5.bn_mod_inv.Clone415, align 4
  %64 = load i32, i32* %digits.addr.bn_assign_zero.Clone3.bn_mod_inv.Clone413, align 4
  %cmp.bn_assign_zero.Clone7.bn_mod_inv.Clone417 = icmp ult i32 %63, %64
  br i1 %cmp.bn_assign_zero.Clone7.bn_mod_inv.Clone417, label %for.body.bn_assign_zero.Clone8.bn_mod_inv.Clone418, label %for.end.bn_assign_zero.Clone12.bn_mod_inv.Clone422

for.body.bn_assign_zero.Clone8.bn_mod_inv.Clone418: ; preds = %for.cond.bn_assign_zero.Clone6.bn_mod_inv.Clone416
  %65 = load i32*, i32** %a.addr.bn_assign_zero.Clone4.bn_mod_inv.Clone414, align 4
  %66 = load i32, i32* %i.bn_assign_zero.Clone5.bn_mod_inv.Clone415, align 4
  %arrayidx.bn_assign_zero.Clone9.bn_mod_inv.Clone419 = getelementptr inbounds i32, i32* %65, i32 %66
  store i32 0, i32* %arrayidx.bn_assign_zero.Clone9.bn_mod_inv.Clone419, align 4
  br label %for.inc.bn_assign_zero.Clone10.bn_mod_inv.Clone420

for.inc.bn_assign_zero.Clone10.bn_mod_inv.Clone420: ; preds = %for.body.bn_assign_zero.Clone8.bn_mod_inv.Clone418
  %67 = load i32, i32* %i.bn_assign_zero.Clone5.bn_mod_inv.Clone415, align 4
  %inc.bn_assign_zero.Clone11.bn_mod_inv.Clone421 = add i32 %67, 1
  store i32 %inc.bn_assign_zero.Clone11.bn_mod_inv.Clone421, i32* %i.bn_assign_zero.Clone5.bn_mod_inv.Clone415, align 4
  br label %for.cond.bn_assign_zero.Clone6.bn_mod_inv.Clone416

for.end.bn_assign_zero.Clone12.bn_mod_inv.Clone422: ; preds = %for.cond.bn_assign_zero.Clone6.bn_mod_inv.Clone416
  br label %entry.Split1.bn_mod_inv.Clone423

entry.Split1.bn_mod_inv.Clone423:                 ; preds = %for.end.bn_assign_zero.Clone12.bn_mod_inv.Clone422
  %arrayidx.bn_mod_inv.Clone424 = getelementptr inbounds [65 x i32], [65 x i32]* %u1.bn_mod_inv.Clone404, i32 0, i32 0
  store i32 1, i32* %arrayidx.bn_mod_inv.Clone424, align 4
  %68 = load i32, i32* %digits.addr.bn_mod_inv.Clone396, align 4
  %arraydecay1.bn_mod_inv.Clone425 = getelementptr inbounds [65 x i32], [65 x i32]* %v1.bn_mod_inv.Clone406, i32 0, i32 0
  br label %entry.bn_assign_zero.Clone.bn_mod_inv.Clone426

entry.bn_assign_zero.Clone.bn_mod_inv.Clone426:   ; preds = %entry.Split1.bn_mod_inv.Clone423
  %digits.addr.bn_assign_zero.Clone.bn_mod_inv.Clone427 = alloca i32, align 4
  %a.addr.bn_assign_zero.Clone.bn_mod_inv.Clone428 = alloca i32*, align 4
  %i.bn_assign_zero.Clone.bn_mod_inv.Clone429 = alloca i32, align 4
  store i32 %68, i32* %digits.addr.bn_assign_zero.Clone.bn_mod_inv.Clone427, align 4
  store i32* %arraydecay1.bn_mod_inv.Clone425, i32** %a.addr.bn_assign_zero.Clone.bn_mod_inv.Clone428, align 4
  store i32 0, i32* %i.bn_assign_zero.Clone.bn_mod_inv.Clone429, align 4
  br label %for.cond.bn_assign_zero.Clone.bn_mod_inv.Clone430

for.cond.bn_assign_zero.Clone.bn_mod_inv.Clone430: ; preds = %for.inc.bn_assign_zero.Clone.bn_mod_inv.Clone434, %entry.bn_assign_zero.Clone.bn_mod_inv.Clone426
  %69 = load i32, i32* %i.bn_assign_zero.Clone.bn_mod_inv.Clone429, align 4
  %70 = load i32, i32* %digits.addr.bn_assign_zero.Clone.bn_mod_inv.Clone427, align 4
  %cmp.bn_assign_zero.Clone.bn_mod_inv.Clone431 = icmp ult i32 %69, %70
  br i1 %cmp.bn_assign_zero.Clone.bn_mod_inv.Clone431, label %for.body.bn_assign_zero.Clone.bn_mod_inv.Clone432, label %for.end.bn_assign_zero.Clone.bn_mod_inv.Clone436

for.body.bn_assign_zero.Clone.bn_mod_inv.Clone432: ; preds = %for.cond.bn_assign_zero.Clone.bn_mod_inv.Clone430
  %71 = load i32*, i32** %a.addr.bn_assign_zero.Clone.bn_mod_inv.Clone428, align 4
  %72 = load i32, i32* %i.bn_assign_zero.Clone.bn_mod_inv.Clone429, align 4
  %arrayidx.bn_assign_zero.Clone.bn_mod_inv.Clone433 = getelementptr inbounds i32, i32* %71, i32 %72
  store i32 0, i32* %arrayidx.bn_assign_zero.Clone.bn_mod_inv.Clone433, align 4
  br label %for.inc.bn_assign_zero.Clone.bn_mod_inv.Clone434

for.inc.bn_assign_zero.Clone.bn_mod_inv.Clone434: ; preds = %for.body.bn_assign_zero.Clone.bn_mod_inv.Clone432
  %73 = load i32, i32* %i.bn_assign_zero.Clone.bn_mod_inv.Clone429, align 4
  %inc.bn_assign_zero.Clone.bn_mod_inv.Clone435 = add i32 %73, 1
  store i32 %inc.bn_assign_zero.Clone.bn_mod_inv.Clone435, i32* %i.bn_assign_zero.Clone.bn_mod_inv.Clone429, align 4
  br label %for.cond.bn_assign_zero.Clone.bn_mod_inv.Clone430

for.end.bn_assign_zero.Clone.bn_mod_inv.Clone436: ; preds = %for.cond.bn_assign_zero.Clone.bn_mod_inv.Clone430
  br label %entry.Split.bn_mod_inv.Clone437

entry.Split.bn_mod_inv.Clone437:                  ; preds = %for.end.bn_assign_zero.Clone.bn_mod_inv.Clone436
  %74 = load i32, i32* %digits.addr.bn_mod_inv.Clone396, align 4
  %75 = load i32*, i32** %b.addr.bn_mod_inv.Clone398, align 4
  %arraydecay2.bn_mod_inv.Clone438 = getelementptr inbounds [65 x i32], [65 x i32]* %u3.bn_mod_inv.Clone405, i32 0, i32 0
  call void @bn_assign(i32* %arraydecay2.bn_mod_inv.Clone438, i32* %75, i32 %74)
  %76 = load i32, i32* %digits.addr.bn_mod_inv.Clone396, align 4
  %77 = load i32*, i32** %c.addr.bn_mod_inv.Clone397, align 4
  %arraydecay3.bn_mod_inv.Clone439 = getelementptr inbounds [65 x i32], [65 x i32]* %v3.bn_mod_inv.Clone407, i32 0, i32 0
  call void @bn_assign(i32* %arraydecay3.bn_mod_inv.Clone439, i32* %77, i32 %76)
  store i32 1, i32* %u1_sign.bn_mod_inv.Clone408, align 4
  br label %while.cond.bn_mod_inv.Clone440

while.cond.bn_mod_inv.Clone440:                   ; preds = %while.body.Split.bn_mod_inv.Clone580, %entry.Split.bn_mod_inv.Clone437
  %78 = load i32, i32* %digits.addr.bn_mod_inv.Clone396, align 4
  %arraydecay4.bn_mod_inv.Clone441 = getelementptr inbounds [65 x i32], [65 x i32]* %v3.bn_mod_inv.Clone407, i32 0, i32 0
  br label %entry.bn_is_zero.Clone.bn_mod_inv.Clone442

entry.bn_is_zero.Clone.bn_mod_inv.Clone442:       ; preds = %while.cond.bn_mod_inv.Clone440
  %retval.bn_is_zero.Clone.bn_mod_inv.Clone443 = alloca i32, align 4
  %digits.addr.bn_is_zero.Clone.bn_mod_inv.Clone444 = alloca i32, align 4
  %a.addr.bn_is_zero.Clone.bn_mod_inv.Clone445 = alloca i32*, align 4
  %i.bn_is_zero.Clone.bn_mod_inv.Clone446 = alloca i32, align 4
  store i32 %78, i32* %digits.addr.bn_is_zero.Clone.bn_mod_inv.Clone444, align 4
  store i32* %arraydecay4.bn_mod_inv.Clone441, i32** %a.addr.bn_is_zero.Clone.bn_mod_inv.Clone445, align 4
  store i32 0, i32* %i.bn_is_zero.Clone.bn_mod_inv.Clone446, align 4
  br label %for.cond.bn_is_zero.Clone.bn_mod_inv.Clone447

for.cond.bn_is_zero.Clone.bn_mod_inv.Clone447:    ; preds = %for.inc.bn_is_zero.Clone.bn_mod_inv.Clone454, %entry.bn_is_zero.Clone.bn_mod_inv.Clone442
  %79 = load i32, i32* %i.bn_is_zero.Clone.bn_mod_inv.Clone446, align 4
  %80 = load i32, i32* %digits.addr.bn_is_zero.Clone.bn_mod_inv.Clone444, align 4
  %cmp.bn_is_zero.Clone.bn_mod_inv.Clone448 = icmp ult i32 %79, %80
  br i1 %cmp.bn_is_zero.Clone.bn_mod_inv.Clone448, label %for.body.bn_is_zero.Clone.bn_mod_inv.Clone449, label %for.end.bn_is_zero.Clone.bn_mod_inv.Clone456

for.body.bn_is_zero.Clone.bn_mod_inv.Clone449:    ; preds = %for.cond.bn_is_zero.Clone.bn_mod_inv.Clone447
  %81 = load i32*, i32** %a.addr.bn_is_zero.Clone.bn_mod_inv.Clone445, align 4
  %82 = load i32, i32* %i.bn_is_zero.Clone.bn_mod_inv.Clone446, align 4
  %arrayidx.bn_is_zero.Clone.bn_mod_inv.Clone450 = getelementptr inbounds i32, i32* %81, i32 %82
  %83 = load i32, i32* %arrayidx.bn_is_zero.Clone.bn_mod_inv.Clone450, align 4
  %tobool.bn_is_zero.Clone.bn_mod_inv.Clone451 = icmp ne i32 %83, 0
  br i1 %tobool.bn_is_zero.Clone.bn_mod_inv.Clone451, label %if.then.bn_is_zero.Clone.bn_mod_inv.Clone452, label %if.end.bn_is_zero.Clone.bn_mod_inv.Clone453

if.then.bn_is_zero.Clone.bn_mod_inv.Clone452:     ; preds = %for.body.bn_is_zero.Clone.bn_mod_inv.Clone449
  store i32 0, i32* %retval.bn_is_zero.Clone.bn_mod_inv.Clone443, align 4
  br label %return.bn_is_zero.Clone.bn_mod_inv.Clone457

if.end.bn_is_zero.Clone.bn_mod_inv.Clone453:      ; preds = %for.body.bn_is_zero.Clone.bn_mod_inv.Clone449
  br label %for.inc.bn_is_zero.Clone.bn_mod_inv.Clone454

for.inc.bn_is_zero.Clone.bn_mod_inv.Clone454:     ; preds = %if.end.bn_is_zero.Clone.bn_mod_inv.Clone453
  %84 = load i32, i32* %i.bn_is_zero.Clone.bn_mod_inv.Clone446, align 4
  %inc.bn_is_zero.Clone.bn_mod_inv.Clone455 = add i32 %84, 1
  store i32 %inc.bn_is_zero.Clone.bn_mod_inv.Clone455, i32* %i.bn_is_zero.Clone.bn_mod_inv.Clone446, align 4
  br label %for.cond.bn_is_zero.Clone.bn_mod_inv.Clone447

for.end.bn_is_zero.Clone.bn_mod_inv.Clone456:     ; preds = %for.cond.bn_is_zero.Clone.bn_mod_inv.Clone447
  store i32 1, i32* %retval.bn_is_zero.Clone.bn_mod_inv.Clone443, align 4
  br label %return.bn_is_zero.Clone.bn_mod_inv.Clone457

return.bn_is_zero.Clone.bn_mod_inv.Clone457:      ; preds = %for.end.bn_is_zero.Clone.bn_mod_inv.Clone456, %if.then.bn_is_zero.Clone.bn_mod_inv.Clone452
  %85 = load i32, i32* %retval.bn_is_zero.Clone.bn_mod_inv.Clone443, align 4
  store i32 %85, i32* %RetValuePtr14.bn_mod_inv.Clone411
  br label %while.cond.Split.bn_mod_inv.Clone458

while.cond.Split.bn_mod_inv.Clone458:             ; preds = %return.bn_is_zero.Clone.bn_mod_inv.Clone457
  %RetValue15.bn_mod_inv.Clone459 = load i32, i32* %RetValuePtr14.bn_mod_inv.Clone411
  %tobool.bn_mod_inv.Clone460 = icmp ne i32 %RetValue15.bn_mod_inv.Clone459, 0
  %lnot.bn_mod_inv.Clone461 = xor i1 %tobool.bn_mod_inv.Clone460, true
  br i1 %lnot.bn_mod_inv.Clone461, label %while.body.bn_mod_inv.Clone462, label %while.end.bn_mod_inv.Clone591

while.body.bn_mod_inv.Clone462:                   ; preds = %while.cond.Split.bn_mod_inv.Clone458
  %86 = load i32, i32* %digits.addr.bn_mod_inv.Clone396, align 4
  %arraydecay5.bn_mod_inv.Clone463 = getelementptr inbounds [65 x i32], [65 x i32]* %v3.bn_mod_inv.Clone407, i32 0, i32 0
  %87 = load i32, i32* %digits.addr.bn_mod_inv.Clone396, align 4
  %arraydecay6.bn_mod_inv.Clone464 = getelementptr inbounds [65 x i32], [65 x i32]* %u3.bn_mod_inv.Clone405, i32 0, i32 0
  %arraydecay7.bn_mod_inv.Clone465 = getelementptr inbounds [65 x i32], [65 x i32]* %t3.bn_mod_inv.Clone402, i32 0, i32 0
  %arraydecay8.bn_mod_inv.Clone466 = getelementptr inbounds [65 x i32], [65 x i32]* %q.bn_mod_inv.Clone400, i32 0, i32 0
  call void @bn_div(i32* %arraydecay8.bn_mod_inv.Clone466, i32* %arraydecay7.bn_mod_inv.Clone465, i32* %arraydecay6.bn_mod_inv.Clone464, i32 %87, i32* %arraydecay5.bn_mod_inv.Clone463, i32 %86)
  %88 = load i32, i32* %digits.addr.bn_mod_inv.Clone396, align 4
  %arraydecay9.bn_mod_inv.Clone467 = getelementptr inbounds [65 x i32], [65 x i32]* %v1.bn_mod_inv.Clone406, i32 0, i32 0
  %arraydecay10.bn_mod_inv.Clone468 = getelementptr inbounds [65 x i32], [65 x i32]* %q.bn_mod_inv.Clone400, i32 0, i32 0
  %arraydecay11.bn_mod_inv.Clone469 = getelementptr inbounds [130 x i32], [130 x i32]* %w.bn_mod_inv.Clone403, i32 0, i32 0
  br label %entry.bn_mul.Clone.bn_mod_inv.Clone470

entry.bn_mul.Clone.bn_mod_inv.Clone470:           ; preds = %while.body.bn_mod_inv.Clone462
  %digits.addr.bn_mul.Clone.bn_mod_inv.Clone471 = alloca i32, align 4
  %c.addr.bn_mul.Clone.bn_mod_inv.Clone472 = alloca i32*, align 4
  %b.addr.bn_mul.Clone.bn_mod_inv.Clone473 = alloca i32*, align 4
  %a.addr.bn_mul.Clone.bn_mod_inv.Clone474 = alloca i32*, align 4
  %t.bn_mul.Clone.bn_mod_inv.Clone475 = alloca [130 x i32], align 4
  %bdigits.bn_mul.Clone.bn_mod_inv.Clone476 = alloca i32, align 4
  %cdigits.bn_mul.Clone.bn_mod_inv.Clone477 = alloca i32, align 4
  %i.bn_mul.Clone.bn_mod_inv.Clone478 = alloca i32, align 4
  store i32 %88, i32* %digits.addr.bn_mul.Clone.bn_mod_inv.Clone471, align 4
  store i32* %arraydecay9.bn_mod_inv.Clone467, i32** %c.addr.bn_mul.Clone.bn_mod_inv.Clone472, align 4
  store i32* %arraydecay10.bn_mod_inv.Clone468, i32** %b.addr.bn_mul.Clone.bn_mod_inv.Clone473, align 4
  store i32* %arraydecay11.bn_mod_inv.Clone469, i32** %a.addr.bn_mul.Clone.bn_mod_inv.Clone474, align 4
  %89 = load i32, i32* %digits.addr.bn_mul.Clone.bn_mod_inv.Clone471, align 4
  %mul.bn_mul.Clone.bn_mod_inv.Clone479 = mul i32 2, %89
  %arraydecay.bn_mul.Clone.bn_mod_inv.Clone480 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone.bn_mod_inv.Clone475, i32 0, i32 0
  %RetValuePtr.bn_mul.Clone.bn_mod_inv.Clone481 = alloca i32, align 4
  %RetValuePtr18.bn_mul.Clone.bn_mod_inv.Clone482 = alloca i32, align 4
  br label %entry.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone483

entry.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone483: ; preds = %entry.bn_mul.Clone.bn_mod_inv.Clone470
  %digits.addr.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone484 = alloca i32, align 4
  %a.addr.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone485 = alloca i32*, align 4
  %i.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone486 = alloca i32, align 4
  store i32 %mul.bn_mul.Clone.bn_mod_inv.Clone479, i32* %digits.addr.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone484, align 4
  store i32* %arraydecay.bn_mul.Clone.bn_mod_inv.Clone480, i32** %a.addr.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone485, align 4
  store i32 0, i32* %i.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone486, align 4
  br label %for.cond.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone487

for.cond.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone487: ; preds = %for.inc.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone491, %entry.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone483
  %90 = load i32, i32* %i.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone486, align 4
  %91 = load i32, i32* %digits.addr.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone484, align 4
  %cmp.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone488 = icmp ult i32 %90, %91
  br i1 %cmp.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone488, label %for.body.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone489, label %for.end.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone493

for.body.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone489: ; preds = %for.cond.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone487
  %92 = load i32*, i32** %a.addr.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone485, align 4
  %93 = load i32, i32* %i.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone486, align 4
  %arrayidx.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone490 = getelementptr inbounds i32, i32* %92, i32 %93
  store i32 0, i32* %arrayidx.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone490, align 4
  br label %for.inc.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone491

for.inc.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone491: ; preds = %for.body.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone489
  %94 = load i32, i32* %i.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone486, align 4
  %inc.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone492 = add i32 %94, 1
  store i32 %inc.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone492, i32* %i.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone486, align 4
  br label %for.cond.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone487

for.end.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone493: ; preds = %for.cond.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone487
  br label %entry.Split.bn_mul.Clone.bn_mod_inv.Clone494

entry.Split.bn_mul.Clone.bn_mod_inv.Clone494:     ; preds = %for.end.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone493
  %95 = load i32, i32* %digits.addr.bn_mul.Clone.bn_mod_inv.Clone471, align 4
  %96 = load i32*, i32** %b.addr.bn_mul.Clone.bn_mod_inv.Clone473, align 4
  br label %entry.bn_digits.Clone2.bn_mul.Clone.bn_mod_inv.Clone495

entry.bn_digits.Clone2.bn_mul.Clone.bn_mod_inv.Clone495: ; preds = %entry.Split.bn_mul.Clone.bn_mod_inv.Clone494
  %digits.addr.bn_digits.Clone3.bn_mul.Clone.bn_mod_inv.Clone496 = alloca i32, align 4
  %a.addr.bn_digits.Clone4.bn_mul.Clone.bn_mod_inv.Clone497 = alloca i32*, align 4
  %i.bn_digits.Clone5.bn_mul.Clone.bn_mod_inv.Clone498 = alloca i32, align 4
  store i32 %95, i32* %digits.addr.bn_digits.Clone3.bn_mul.Clone.bn_mod_inv.Clone496, align 4
  store i32* %96, i32** %a.addr.bn_digits.Clone4.bn_mul.Clone.bn_mod_inv.Clone497, align 4
  %97 = load i32, i32* %digits.addr.bn_digits.Clone3.bn_mul.Clone.bn_mod_inv.Clone496, align 4
  %sub.bn_digits.Clone6.bn_mul.Clone.bn_mod_inv.Clone499 = sub i32 %97, 1
  store i32 %sub.bn_digits.Clone6.bn_mul.Clone.bn_mod_inv.Clone499, i32* %i.bn_digits.Clone5.bn_mul.Clone.bn_mod_inv.Clone498, align 4
  br label %for.cond.bn_digits.Clone7.bn_mul.Clone.bn_mod_inv.Clone500

for.cond.bn_digits.Clone7.bn_mul.Clone.bn_mod_inv.Clone500: ; preds = %for.inc.bn_digits.Clone14.bn_mul.Clone.bn_mod_inv.Clone507, %entry.bn_digits.Clone2.bn_mul.Clone.bn_mod_inv.Clone495
  %98 = load i32, i32* %i.bn_digits.Clone5.bn_mul.Clone.bn_mod_inv.Clone498, align 4
  %cmp.bn_digits.Clone8.bn_mul.Clone.bn_mod_inv.Clone501 = icmp sge i32 %98, 0
  br i1 %cmp.bn_digits.Clone8.bn_mul.Clone.bn_mod_inv.Clone501, label %for.body.bn_digits.Clone9.bn_mul.Clone.bn_mod_inv.Clone502, label %for.end.bn_digits.Clone16.bn_mul.Clone.bn_mod_inv.Clone509

for.body.bn_digits.Clone9.bn_mul.Clone.bn_mod_inv.Clone502: ; preds = %for.cond.bn_digits.Clone7.bn_mul.Clone.bn_mod_inv.Clone500
  %99 = load i32*, i32** %a.addr.bn_digits.Clone4.bn_mul.Clone.bn_mod_inv.Clone497, align 4
  %100 = load i32, i32* %i.bn_digits.Clone5.bn_mul.Clone.bn_mod_inv.Clone498, align 4
  %arrayidx.bn_digits.Clone10.bn_mul.Clone.bn_mod_inv.Clone503 = getelementptr inbounds i32, i32* %99, i32 %100
  %101 = load i32, i32* %arrayidx.bn_digits.Clone10.bn_mul.Clone.bn_mod_inv.Clone503, align 4
  %tobool.bn_digits.Clone11.bn_mul.Clone.bn_mod_inv.Clone504 = icmp ne i32 %101, 0
  br i1 %tobool.bn_digits.Clone11.bn_mul.Clone.bn_mod_inv.Clone504, label %if.then.bn_digits.Clone12.bn_mul.Clone.bn_mod_inv.Clone505, label %if.end.bn_digits.Clone13.bn_mul.Clone.bn_mod_inv.Clone506

if.then.bn_digits.Clone12.bn_mul.Clone.bn_mod_inv.Clone505: ; preds = %for.body.bn_digits.Clone9.bn_mul.Clone.bn_mod_inv.Clone502
  br label %for.end.bn_digits.Clone16.bn_mul.Clone.bn_mod_inv.Clone509

if.end.bn_digits.Clone13.bn_mul.Clone.bn_mod_inv.Clone506: ; preds = %for.body.bn_digits.Clone9.bn_mul.Clone.bn_mod_inv.Clone502
  br label %for.inc.bn_digits.Clone14.bn_mul.Clone.bn_mod_inv.Clone507

for.inc.bn_digits.Clone14.bn_mul.Clone.bn_mod_inv.Clone507: ; preds = %if.end.bn_digits.Clone13.bn_mul.Clone.bn_mod_inv.Clone506
  %102 = load i32, i32* %i.bn_digits.Clone5.bn_mul.Clone.bn_mod_inv.Clone498, align 4
  %dec.bn_digits.Clone15.bn_mul.Clone.bn_mod_inv.Clone508 = add nsw i32 %102, -1
  store i32 %dec.bn_digits.Clone15.bn_mul.Clone.bn_mod_inv.Clone508, i32* %i.bn_digits.Clone5.bn_mul.Clone.bn_mod_inv.Clone498, align 4
  br label %for.cond.bn_digits.Clone7.bn_mul.Clone.bn_mod_inv.Clone500

for.end.bn_digits.Clone16.bn_mul.Clone.bn_mod_inv.Clone509: ; preds = %if.then.bn_digits.Clone12.bn_mul.Clone.bn_mod_inv.Clone505, %for.cond.bn_digits.Clone7.bn_mul.Clone.bn_mod_inv.Clone500
  %103 = load i32, i32* %i.bn_digits.Clone5.bn_mul.Clone.bn_mod_inv.Clone498, align 4
  %add.bn_digits.Clone17.bn_mul.Clone.bn_mod_inv.Clone510 = add nsw i32 %103, 1
  store i32 %add.bn_digits.Clone17.bn_mul.Clone.bn_mod_inv.Clone510, i32* %RetValuePtr18.bn_mul.Clone.bn_mod_inv.Clone482
  br label %entry.Split.Split1.bn_mul.Clone.bn_mod_inv.Clone511

entry.Split.Split1.bn_mul.Clone.bn_mod_inv.Clone511: ; preds = %for.end.bn_digits.Clone16.bn_mul.Clone.bn_mod_inv.Clone509
  %RetValue19.bn_mul.Clone.bn_mod_inv.Clone512 = load i32, i32* %RetValuePtr18.bn_mul.Clone.bn_mod_inv.Clone482
  store i32 %RetValue19.bn_mul.Clone.bn_mod_inv.Clone512, i32* %bdigits.bn_mul.Clone.bn_mod_inv.Clone476, align 4
  %104 = load i32, i32* %digits.addr.bn_mul.Clone.bn_mod_inv.Clone471, align 4
  %105 = load i32*, i32** %c.addr.bn_mul.Clone.bn_mod_inv.Clone472, align 4
  br label %entry.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone513

entry.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone513: ; preds = %entry.Split.Split1.bn_mul.Clone.bn_mod_inv.Clone511
  %digits.addr.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone514 = alloca i32, align 4
  %a.addr.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone515 = alloca i32*, align 4
  %i.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone516 = alloca i32, align 4
  store i32 %104, i32* %digits.addr.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone514, align 4
  store i32* %105, i32** %a.addr.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone515, align 4
  %106 = load i32, i32* %digits.addr.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone514, align 4
  %sub.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone517 = sub i32 %106, 1
  store i32 %sub.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone517, i32* %i.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone516, align 4
  br label %for.cond.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone518

for.cond.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone518: ; preds = %for.inc.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone525, %entry.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone513
  %107 = load i32, i32* %i.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone516, align 4
  %cmp.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone519 = icmp sge i32 %107, 0
  br i1 %cmp.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone519, label %for.body.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone520, label %for.end.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone527

for.body.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone520: ; preds = %for.cond.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone518
  %108 = load i32*, i32** %a.addr.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone515, align 4
  %109 = load i32, i32* %i.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone516, align 4
  %arrayidx.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone521 = getelementptr inbounds i32, i32* %108, i32 %109
  %110 = load i32, i32* %arrayidx.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone521, align 4
  %tobool.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone522 = icmp ne i32 %110, 0
  br i1 %tobool.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone522, label %if.then.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone523, label %if.end.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone524

if.then.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone523: ; preds = %for.body.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone520
  br label %for.end.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone527

if.end.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone524: ; preds = %for.body.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone520
  br label %for.inc.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone525

for.inc.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone525: ; preds = %if.end.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone524
  %111 = load i32, i32* %i.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone516, align 4
  %dec.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone526 = add nsw i32 %111, -1
  store i32 %dec.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone526, i32* %i.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone516, align 4
  br label %for.cond.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone518

for.end.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone527: ; preds = %if.then.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone523, %for.cond.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone518
  %112 = load i32, i32* %i.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone516, align 4
  %add.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone528 = add nsw i32 %112, 1
  store i32 %add.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone528, i32* %RetValuePtr.bn_mul.Clone.bn_mod_inv.Clone481
  br label %entry.Split.Split.bn_mul.Clone.bn_mod_inv.Clone529

entry.Split.Split.bn_mul.Clone.bn_mod_inv.Clone529: ; preds = %for.end.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone527
  %RetValue.bn_mul.Clone.bn_mod_inv.Clone530 = load i32, i32* %RetValuePtr.bn_mul.Clone.bn_mod_inv.Clone481
  store i32 %RetValue.bn_mul.Clone.bn_mod_inv.Clone530, i32* %cdigits.bn_mul.Clone.bn_mod_inv.Clone477, align 4
  store i32 0, i32* %i.bn_mul.Clone.bn_mod_inv.Clone478, align 4
  br label %for.cond.bn_mul.Clone.bn_mod_inv.Clone531

for.cond.bn_mul.Clone.bn_mod_inv.Clone531:        ; preds = %for.inc.bn_mul.Clone.bn_mod_inv.Clone541, %entry.Split.Split.bn_mul.Clone.bn_mod_inv.Clone529
  %113 = load i32, i32* %i.bn_mul.Clone.bn_mod_inv.Clone478, align 4
  %114 = load i32, i32* %bdigits.bn_mul.Clone.bn_mod_inv.Clone476, align 4
  %cmp.bn_mul.Clone.bn_mod_inv.Clone532 = icmp ult i32 %113, %114
  br i1 %cmp.bn_mul.Clone.bn_mod_inv.Clone532, label %for.body.bn_mul.Clone.bn_mod_inv.Clone533, label %for.end.bn_mul.Clone.bn_mod_inv.Clone543

for.body.bn_mul.Clone.bn_mod_inv.Clone533:        ; preds = %for.cond.bn_mul.Clone.bn_mod_inv.Clone531
  %115 = load i32, i32* %cdigits.bn_mul.Clone.bn_mod_inv.Clone477, align 4
  %116 = load i32*, i32** %c.addr.bn_mul.Clone.bn_mod_inv.Clone472, align 4
  %117 = load i32*, i32** %b.addr.bn_mul.Clone.bn_mod_inv.Clone473, align 4
  %118 = load i32, i32* %i.bn_mul.Clone.bn_mod_inv.Clone478, align 4
  %arrayidx.bn_mul.Clone.bn_mod_inv.Clone534 = getelementptr inbounds i32, i32* %117, i32 %118
  %119 = load i32, i32* %arrayidx.bn_mul.Clone.bn_mod_inv.Clone534, align 4
  %120 = load i32, i32* %i.bn_mul.Clone.bn_mod_inv.Clone478, align 4
  %arrayidx2.bn_mul.Clone.bn_mod_inv.Clone535 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone.bn_mod_inv.Clone475, i32 0, i32 %120
  %121 = load i32, i32* %i.bn_mul.Clone.bn_mod_inv.Clone478, align 4
  %arrayidx3.bn_mul.Clone.bn_mod_inv.Clone536 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone.bn_mod_inv.Clone475, i32 0, i32 %121
  %call4.bn_mul.Clone.bn_mod_inv.Clone537 = call i32 @bn_add_digit_mul(i32* %arrayidx3.bn_mul.Clone.bn_mod_inv.Clone536, i32* %arrayidx2.bn_mul.Clone.bn_mod_inv.Clone535, i32 %119, i32* %116, i32 %115)
  %122 = load i32, i32* %i.bn_mul.Clone.bn_mod_inv.Clone478, align 4
  %123 = load i32, i32* %cdigits.bn_mul.Clone.bn_mod_inv.Clone477, align 4
  %add.bn_mul.Clone.bn_mod_inv.Clone538 = add i32 %122, %123
  %arrayidx5.bn_mul.Clone.bn_mod_inv.Clone539 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone.bn_mod_inv.Clone475, i32 0, i32 %add.bn_mul.Clone.bn_mod_inv.Clone538
  %124 = load i32, i32* %arrayidx5.bn_mul.Clone.bn_mod_inv.Clone539, align 4
  %add6.bn_mul.Clone.bn_mod_inv.Clone540 = add i32 %124, %call4.bn_mul.Clone.bn_mod_inv.Clone537
  store i32 %add6.bn_mul.Clone.bn_mod_inv.Clone540, i32* %arrayidx5.bn_mul.Clone.bn_mod_inv.Clone539, align 4
  br label %for.inc.bn_mul.Clone.bn_mod_inv.Clone541

for.inc.bn_mul.Clone.bn_mod_inv.Clone541:         ; preds = %for.body.bn_mul.Clone.bn_mod_inv.Clone533
  %125 = load i32, i32* %i.bn_mul.Clone.bn_mod_inv.Clone478, align 4
  %inc.bn_mul.Clone.bn_mod_inv.Clone542 = add i32 %125, 1
  store i32 %inc.bn_mul.Clone.bn_mod_inv.Clone542, i32* %i.bn_mul.Clone.bn_mod_inv.Clone478, align 4
  br label %for.cond.bn_mul.Clone.bn_mod_inv.Clone531

for.end.bn_mul.Clone.bn_mod_inv.Clone543:         ; preds = %for.cond.bn_mul.Clone.bn_mod_inv.Clone531
  %126 = load i32, i32* %digits.addr.bn_mul.Clone.bn_mod_inv.Clone471, align 4
  %mul7.bn_mul.Clone.bn_mod_inv.Clone544 = mul i32 2, %126
  %arraydecay8.bn_mul.Clone.bn_mod_inv.Clone545 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone.bn_mod_inv.Clone475, i32 0, i32 0
  %127 = load i32*, i32** %a.addr.bn_mul.Clone.bn_mod_inv.Clone474, align 4
  call void @bn_assign(i32* %127, i32* %arraydecay8.bn_mul.Clone.bn_mod_inv.Clone545, i32 %mul7.bn_mul.Clone.bn_mod_inv.Clone544)
  %arraydecay9.bn_mul.Clone.bn_mod_inv.Clone546 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone.bn_mod_inv.Clone475, i32 0, i32 0
  %128 = bitcast i32* %arraydecay9.bn_mul.Clone.bn_mod_inv.Clone546 to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %128, i8 0, i32 520, i1 false)
  br label %while.body.Split13.bn_mod_inv.Clone547

while.body.Split13.bn_mod_inv.Clone547:           ; preds = %for.end.bn_mul.Clone.bn_mod_inv.Clone543
  %129 = load i32, i32* %digits.addr.bn_mod_inv.Clone396, align 4
  %arraydecay12.bn_mod_inv.Clone548 = getelementptr inbounds [130 x i32], [130 x i32]* %w.bn_mod_inv.Clone403, i32 0, i32 0
  %arraydecay13.bn_mod_inv.Clone549 = getelementptr inbounds [65 x i32], [65 x i32]* %u1.bn_mod_inv.Clone404, i32 0, i32 0
  %arraydecay14.bn_mod_inv.Clone550 = getelementptr inbounds [65 x i32], [65 x i32]* %t1.bn_mod_inv.Clone401, i32 0, i32 0
  br label %entry.bn_add.Clone.bn_mod_inv.Clone551

entry.bn_add.Clone.bn_mod_inv.Clone551:           ; preds = %while.body.Split13.bn_mod_inv.Clone547
  %digits.addr.bn_add.Clone.bn_mod_inv.Clone552 = alloca i32, align 4
  %c.addr.bn_add.Clone.bn_mod_inv.Clone553 = alloca i32*, align 4
  %b.addr.bn_add.Clone.bn_mod_inv.Clone554 = alloca i32*, align 4
  %a.addr.bn_add.Clone.bn_mod_inv.Clone555 = alloca i32*, align 4
  %ai.bn_add.Clone.bn_mod_inv.Clone556 = alloca i32, align 4
  %carry.bn_add.Clone.bn_mod_inv.Clone557 = alloca i32, align 4
  %i.bn_add.Clone.bn_mod_inv.Clone558 = alloca i32, align 4
  store i32 %129, i32* %digits.addr.bn_add.Clone.bn_mod_inv.Clone552, align 4
  store i32* %arraydecay12.bn_mod_inv.Clone548, i32** %c.addr.bn_add.Clone.bn_mod_inv.Clone553, align 4
  store i32* %arraydecay13.bn_mod_inv.Clone549, i32** %b.addr.bn_add.Clone.bn_mod_inv.Clone554, align 4
  store i32* %arraydecay14.bn_mod_inv.Clone550, i32** %a.addr.bn_add.Clone.bn_mod_inv.Clone555, align 4
  store i32 0, i32* %carry.bn_add.Clone.bn_mod_inv.Clone557, align 4
  store i32 0, i32* %i.bn_add.Clone.bn_mod_inv.Clone558, align 4
  br label %for.cond.bn_add.Clone.bn_mod_inv.Clone559

for.cond.bn_add.Clone.bn_mod_inv.Clone559:        ; preds = %for.inc.bn_add.Clone.bn_mod_inv.Clone577, %entry.bn_add.Clone.bn_mod_inv.Clone551
  %130 = load i32, i32* %i.bn_add.Clone.bn_mod_inv.Clone558, align 4
  %131 = load i32, i32* %digits.addr.bn_add.Clone.bn_mod_inv.Clone552, align 4
  %cmp.bn_add.Clone.bn_mod_inv.Clone560 = icmp ult i32 %130, %131
  br i1 %cmp.bn_add.Clone.bn_mod_inv.Clone560, label %for.body.bn_add.Clone.bn_mod_inv.Clone561, label %for.end.bn_add.Clone.bn_mod_inv.Clone579

for.body.bn_add.Clone.bn_mod_inv.Clone561:        ; preds = %for.cond.bn_add.Clone.bn_mod_inv.Clone559
  %132 = load i32*, i32** %b.addr.bn_add.Clone.bn_mod_inv.Clone554, align 4
  %133 = load i32, i32* %i.bn_add.Clone.bn_mod_inv.Clone558, align 4
  %arrayidx.bn_add.Clone.bn_mod_inv.Clone562 = getelementptr inbounds i32, i32* %132, i32 %133
  %134 = load i32, i32* %arrayidx.bn_add.Clone.bn_mod_inv.Clone562, align 4
  %135 = load i32, i32* %carry.bn_add.Clone.bn_mod_inv.Clone557, align 4
  %add.bn_add.Clone.bn_mod_inv.Clone563 = add i32 %134, %135
  store i32 %add.bn_add.Clone.bn_mod_inv.Clone563, i32* %ai.bn_add.Clone.bn_mod_inv.Clone556, align 4
  %136 = load i32, i32* %carry.bn_add.Clone.bn_mod_inv.Clone557, align 4
  %cmp1.bn_add.Clone.bn_mod_inv.Clone564 = icmp ult i32 %add.bn_add.Clone.bn_mod_inv.Clone563, %136
  br i1 %cmp1.bn_add.Clone.bn_mod_inv.Clone564, label %if.then.bn_add.Clone.bn_mod_inv.Clone565, label %if.else.bn_add.Clone.bn_mod_inv.Clone567

if.then.bn_add.Clone.bn_mod_inv.Clone565:         ; preds = %for.body.bn_add.Clone.bn_mod_inv.Clone561
  %137 = load i32*, i32** %c.addr.bn_add.Clone.bn_mod_inv.Clone553, align 4
  %138 = load i32, i32* %i.bn_add.Clone.bn_mod_inv.Clone558, align 4
  %arrayidx2.bn_add.Clone.bn_mod_inv.Clone566 = getelementptr inbounds i32, i32* %137, i32 %138
  %139 = load i32, i32* %arrayidx2.bn_add.Clone.bn_mod_inv.Clone566, align 4
  store i32 %139, i32* %ai.bn_add.Clone.bn_mod_inv.Clone556, align 4
  br label %if.end9.bn_add.Clone.bn_mod_inv.Clone575

if.else.bn_add.Clone.bn_mod_inv.Clone567:         ; preds = %for.body.bn_add.Clone.bn_mod_inv.Clone561
  %140 = load i32*, i32** %c.addr.bn_add.Clone.bn_mod_inv.Clone553, align 4
  %141 = load i32, i32* %i.bn_add.Clone.bn_mod_inv.Clone558, align 4
  %arrayidx3.bn_add.Clone.bn_mod_inv.Clone568 = getelementptr inbounds i32, i32* %140, i32 %141
  %142 = load i32, i32* %arrayidx3.bn_add.Clone.bn_mod_inv.Clone568, align 4
  %143 = load i32, i32* %ai.bn_add.Clone.bn_mod_inv.Clone556, align 4
  %add4.bn_add.Clone.bn_mod_inv.Clone569 = add i32 %143, %142
  store i32 %add4.bn_add.Clone.bn_mod_inv.Clone569, i32* %ai.bn_add.Clone.bn_mod_inv.Clone556, align 4
  %144 = load i32*, i32** %c.addr.bn_add.Clone.bn_mod_inv.Clone553, align 4
  %145 = load i32, i32* %i.bn_add.Clone.bn_mod_inv.Clone558, align 4
  %arrayidx5.bn_add.Clone.bn_mod_inv.Clone570 = getelementptr inbounds i32, i32* %144, i32 %145
  %146 = load i32, i32* %arrayidx5.bn_add.Clone.bn_mod_inv.Clone570, align 4
  %cmp6.bn_add.Clone.bn_mod_inv.Clone571 = icmp ult i32 %add4.bn_add.Clone.bn_mod_inv.Clone569, %146
  br i1 %cmp6.bn_add.Clone.bn_mod_inv.Clone571, label %if.then7.bn_add.Clone.bn_mod_inv.Clone572, label %if.else8.bn_add.Clone.bn_mod_inv.Clone573

if.then7.bn_add.Clone.bn_mod_inv.Clone572:        ; preds = %if.else.bn_add.Clone.bn_mod_inv.Clone567
  store i32 1, i32* %carry.bn_add.Clone.bn_mod_inv.Clone557, align 4
  br label %if.end.bn_add.Clone.bn_mod_inv.Clone574

if.else8.bn_add.Clone.bn_mod_inv.Clone573:        ; preds = %if.else.bn_add.Clone.bn_mod_inv.Clone567
  store i32 0, i32* %carry.bn_add.Clone.bn_mod_inv.Clone557, align 4
  br label %if.end.bn_add.Clone.bn_mod_inv.Clone574

if.end.bn_add.Clone.bn_mod_inv.Clone574:          ; preds = %if.else8.bn_add.Clone.bn_mod_inv.Clone573, %if.then7.bn_add.Clone.bn_mod_inv.Clone572
  br label %if.end9.bn_add.Clone.bn_mod_inv.Clone575

if.end9.bn_add.Clone.bn_mod_inv.Clone575:         ; preds = %if.end.bn_add.Clone.bn_mod_inv.Clone574, %if.then.bn_add.Clone.bn_mod_inv.Clone565
  %147 = load i32, i32* %ai.bn_add.Clone.bn_mod_inv.Clone556, align 4
  %148 = load i32*, i32** %a.addr.bn_add.Clone.bn_mod_inv.Clone555, align 4
  %149 = load i32, i32* %i.bn_add.Clone.bn_mod_inv.Clone558, align 4
  %arrayidx10.bn_add.Clone.bn_mod_inv.Clone576 = getelementptr inbounds i32, i32* %148, i32 %149
  store i32 %147, i32* %arrayidx10.bn_add.Clone.bn_mod_inv.Clone576, align 4
  br label %for.inc.bn_add.Clone.bn_mod_inv.Clone577

for.inc.bn_add.Clone.bn_mod_inv.Clone577:         ; preds = %if.end9.bn_add.Clone.bn_mod_inv.Clone575
  %150 = load i32, i32* %i.bn_add.Clone.bn_mod_inv.Clone558, align 4
  %inc.bn_add.Clone.bn_mod_inv.Clone578 = add i32 %150, 1
  store i32 %inc.bn_add.Clone.bn_mod_inv.Clone578, i32* %i.bn_add.Clone.bn_mod_inv.Clone558, align 4
  br label %for.cond.bn_add.Clone.bn_mod_inv.Clone559

for.end.bn_add.Clone.bn_mod_inv.Clone579:         ; preds = %for.cond.bn_add.Clone.bn_mod_inv.Clone559
  %151 = load i32, i32* %carry.bn_add.Clone.bn_mod_inv.Clone557, align 4
  store i32 %151, i32* %RetValuePtr.bn_mod_inv.Clone410
  br label %while.body.Split.bn_mod_inv.Clone580

while.body.Split.bn_mod_inv.Clone580:             ; preds = %for.end.bn_add.Clone.bn_mod_inv.Clone579
  %RetValue.bn_mod_inv.Clone581 = load i32, i32* %RetValuePtr.bn_mod_inv.Clone410
  %152 = load i32, i32* %digits.addr.bn_mod_inv.Clone396, align 4
  %arraydecay16.bn_mod_inv.Clone582 = getelementptr inbounds [65 x i32], [65 x i32]* %v1.bn_mod_inv.Clone406, i32 0, i32 0
  %arraydecay17.bn_mod_inv.Clone583 = getelementptr inbounds [65 x i32], [65 x i32]* %u1.bn_mod_inv.Clone404, i32 0, i32 0
  call void @bn_assign(i32* %arraydecay17.bn_mod_inv.Clone583, i32* %arraydecay16.bn_mod_inv.Clone582, i32 %152)
  %153 = load i32, i32* %digits.addr.bn_mod_inv.Clone396, align 4
  %arraydecay18.bn_mod_inv.Clone584 = getelementptr inbounds [65 x i32], [65 x i32]* %t1.bn_mod_inv.Clone401, i32 0, i32 0
  %arraydecay19.bn_mod_inv.Clone585 = getelementptr inbounds [65 x i32], [65 x i32]* %v1.bn_mod_inv.Clone406, i32 0, i32 0
  call void @bn_assign(i32* %arraydecay19.bn_mod_inv.Clone585, i32* %arraydecay18.bn_mod_inv.Clone584, i32 %153)
  %154 = load i32, i32* %digits.addr.bn_mod_inv.Clone396, align 4
  %arraydecay20.bn_mod_inv.Clone586 = getelementptr inbounds [65 x i32], [65 x i32]* %v3.bn_mod_inv.Clone407, i32 0, i32 0
  %arraydecay21.bn_mod_inv.Clone587 = getelementptr inbounds [65 x i32], [65 x i32]* %u3.bn_mod_inv.Clone405, i32 0, i32 0
  call void @bn_assign(i32* %arraydecay21.bn_mod_inv.Clone587, i32* %arraydecay20.bn_mod_inv.Clone586, i32 %154)
  %155 = load i32, i32* %digits.addr.bn_mod_inv.Clone396, align 4
  %arraydecay22.bn_mod_inv.Clone588 = getelementptr inbounds [65 x i32], [65 x i32]* %t3.bn_mod_inv.Clone402, i32 0, i32 0
  %arraydecay23.bn_mod_inv.Clone589 = getelementptr inbounds [65 x i32], [65 x i32]* %v3.bn_mod_inv.Clone407, i32 0, i32 0
  call void @bn_assign(i32* %arraydecay23.bn_mod_inv.Clone589, i32* %arraydecay22.bn_mod_inv.Clone588, i32 %155)
  %156 = load i32, i32* %u1_sign.bn_mod_inv.Clone408, align 4
  %sub.bn_mod_inv.Clone590 = sub nsw i32 0, %156
  store i32 %sub.bn_mod_inv.Clone590, i32* %u1_sign.bn_mod_inv.Clone408, align 4
  br label %while.cond.bn_mod_inv.Clone440

while.end.bn_mod_inv.Clone591:                    ; preds = %while.cond.Split.bn_mod_inv.Clone458
  %157 = load i32, i32* %u1_sign.bn_mod_inv.Clone408, align 4
  %cmp.bn_mod_inv.Clone592 = icmp slt i32 %157, 0
  br i1 %cmp.bn_mod_inv.Clone592, label %if.then.bn_mod_inv.Clone593, label %if.else.bn_mod_inv.Clone596

if.then.bn_mod_inv.Clone593:                      ; preds = %while.end.bn_mod_inv.Clone591
  %158 = load i32, i32* %digits.addr.bn_mod_inv.Clone396, align 4
  %arraydecay24.bn_mod_inv.Clone594 = getelementptr inbounds [65 x i32], [65 x i32]* %u1.bn_mod_inv.Clone404, i32 0, i32 0
  %159 = load i32*, i32** %c.addr.bn_mod_inv.Clone397, align 4
  %160 = load i32*, i32** %a.addr.bn_mod_inv.Clone399, align 4
  %call25.bn_mod_inv.Clone595 = call i32 @bn_sub(i32* %160, i32* %159, i32* %arraydecay24.bn_mod_inv.Clone594, i32 %158)
  br label %if.end.bn_mod_inv.Clone598

if.else.bn_mod_inv.Clone596:                      ; preds = %while.end.bn_mod_inv.Clone591
  %161 = load i32, i32* %digits.addr.bn_mod_inv.Clone396, align 4
  %arraydecay26.bn_mod_inv.Clone597 = getelementptr inbounds [65 x i32], [65 x i32]* %u1.bn_mod_inv.Clone404, i32 0, i32 0
  %162 = load i32*, i32** %a.addr.bn_mod_inv.Clone399, align 4
  call void @bn_assign(i32* %162, i32* %arraydecay26.bn_mod_inv.Clone597, i32 %161)
  br label %if.end.bn_mod_inv.Clone598

if.end.bn_mod_inv.Clone598:                       ; preds = %if.else.bn_mod_inv.Clone596, %if.then.bn_mod_inv.Clone593
  %arraydecay27.bn_mod_inv.Clone599 = getelementptr inbounds [65 x i32], [65 x i32]* %q.bn_mod_inv.Clone400, i32 0, i32 0
  %163 = bitcast i32* %arraydecay27.bn_mod_inv.Clone599 to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %163, i8 0, i32 260, i1 false)
  %arraydecay28.bn_mod_inv.Clone600 = getelementptr inbounds [65 x i32], [65 x i32]* %t1.bn_mod_inv.Clone401, i32 0, i32 0
  %164 = bitcast i32* %arraydecay28.bn_mod_inv.Clone600 to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %164, i8 0, i32 260, i1 false)
  %arraydecay29.bn_mod_inv.Clone601 = getelementptr inbounds [65 x i32], [65 x i32]* %t3.bn_mod_inv.Clone402, i32 0, i32 0
  %165 = bitcast i32* %arraydecay29.bn_mod_inv.Clone601 to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %165, i8 0, i32 260, i1 false)
  %arraydecay30.bn_mod_inv.Clone602 = getelementptr inbounds [65 x i32], [65 x i32]* %u1.bn_mod_inv.Clone404, i32 0, i32 0
  %166 = bitcast i32* %arraydecay30.bn_mod_inv.Clone602 to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %166, i8 0, i32 260, i1 false)
  %arraydecay31.bn_mod_inv.Clone603 = getelementptr inbounds [65 x i32], [65 x i32]* %u3.bn_mod_inv.Clone405, i32 0, i32 0
  %167 = bitcast i32* %arraydecay31.bn_mod_inv.Clone603 to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %167, i8 0, i32 260, i1 false)
  %arraydecay32.bn_mod_inv.Clone604 = getelementptr inbounds [65 x i32], [65 x i32]* %v1.bn_mod_inv.Clone406, i32 0, i32 0
  %168 = bitcast i32* %arraydecay32.bn_mod_inv.Clone604 to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %168, i8 0, i32 260, i1 false)
  %arraydecay33.bn_mod_inv.Clone605 = getelementptr inbounds [65 x i32], [65 x i32]* %v3.bn_mod_inv.Clone407, i32 0, i32 0
  %169 = bitcast i32* %arraydecay33.bn_mod_inv.Clone605 to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %169, i8 0, i32 260, i1 false)
  %arraydecay34.bn_mod_inv.Clone606 = getelementptr inbounds [130 x i32], [130 x i32]* %w.bn_mod_inv.Clone403, i32 0, i32 0
  %170 = bitcast i32* %arraydecay34.bn_mod_inv.Clone606 to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %170, i8 0, i32 520, i1 false)
  br label %if.end84.Clone.Split317.Split

if.end84.Clone.Split317.Split:                    ; preds = %if.end.bn_mod_inv.Clone598
  %171 = load i32, i32* %pdigits.Clone, align 4
  %arraydecay91.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %t.Clone, i32 0, i32 0
  br label %entry.bn_assign_zero.Clone

entry.bn_assign_zero.Clone:                       ; preds = %if.end84.Clone.Split317.Split
  %digits.addr.bn_assign_zero.Clone = alloca i32, align 4
  %a.addr.bn_assign_zero.Clone = alloca i32*, align 4
  %i.bn_assign_zero.Clone = alloca i32, align 4
  store i32 %171, i32* %digits.addr.bn_assign_zero.Clone, align 4
  store i32* %arraydecay91.Clone, i32** %a.addr.bn_assign_zero.Clone, align 4
  store i32 0, i32* %i.bn_assign_zero.Clone, align 4
  br label %for.cond.bn_assign_zero.Clone

for.cond.bn_assign_zero.Clone:                    ; preds = %for.inc.bn_assign_zero.Clone, %entry.bn_assign_zero.Clone
  %172 = load i32, i32* %i.bn_assign_zero.Clone, align 4
  %173 = load i32, i32* %digits.addr.bn_assign_zero.Clone, align 4
  %cmp.bn_assign_zero.Clone = icmp ult i32 %172, %173
  br i1 %cmp.bn_assign_zero.Clone, label %for.body.bn_assign_zero.Clone, label %for.end.bn_assign_zero.Clone

for.body.bn_assign_zero.Clone:                    ; preds = %for.cond.bn_assign_zero.Clone
  %174 = load i32*, i32** %a.addr.bn_assign_zero.Clone, align 4
  %175 = load i32, i32* %i.bn_assign_zero.Clone, align 4
  %arrayidx.bn_assign_zero.Clone = getelementptr inbounds i32, i32* %174, i32 %175
  store i32 0, i32* %arrayidx.bn_assign_zero.Clone, align 4
  br label %for.inc.bn_assign_zero.Clone

for.inc.bn_assign_zero.Clone:                     ; preds = %for.body.bn_assign_zero.Clone
  %176 = load i32, i32* %i.bn_assign_zero.Clone, align 4
  %inc.bn_assign_zero.Clone = add i32 %176, 1
  store i32 %inc.bn_assign_zero.Clone, i32* %i.bn_assign_zero.Clone, align 4
  br label %for.cond.bn_assign_zero.Clone

for.end.bn_assign_zero.Clone:                     ; preds = %for.cond.bn_assign_zero.Clone
  br label %if.end84.Clone.Split

if.end84.Clone.Split:                             ; preds = %for.end.bn_assign_zero.Clone
  %arrayidx92.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %t.Clone, i32 0, i32 0
  store i32 1, i32* %arrayidx92.Clone, align 4
  %177 = load i32, i32* %pdigits.Clone, align 4
  %arraydecay93.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %t.Clone, i32 0, i32 0
  %arraydecay94.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %p.Clone, i32 0, i32 0
  %arraydecay95.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %p_minus1.Clone, i32 0, i32 0
  %call96.Clone = call i32 @bn_sub(i32* %arraydecay95.Clone, i32* %arraydecay94.Clone, i32* %arraydecay93.Clone, i32 %177)
  %178 = load i32, i32* %pdigits.Clone, align 4
  %arraydecay97.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %t.Clone, i32 0, i32 0
  %arraydecay98.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %q.Clone, i32 0, i32 0
  %arraydecay99.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %q_minus1.Clone, i32 0, i32 0
  %call100.Clone = call i32 @bn_sub(i32* %arraydecay99.Clone, i32* %arraydecay98.Clone, i32* %arraydecay97.Clone, i32 %178)
  %179 = load i32, i32* %pdigits.Clone, align 4
  %arraydecay101.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %q_minus1.Clone, i32 0, i32 0
  %arraydecay102.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %p_minus1.Clone, i32 0, i32 0
  %arraydecay103.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %phi_n.Clone, i32 0, i32 0
  br label %entry.bn_mul.Clone

entry.bn_mul.Clone:                               ; preds = %if.end84.Clone.Split
  %digits.addr.bn_mul.Clone = alloca i32, align 4
  %c.addr.bn_mul.Clone = alloca i32*, align 4
  %b.addr.bn_mul.Clone = alloca i32*, align 4
  %a.addr.bn_mul.Clone = alloca i32*, align 4
  %t.bn_mul.Clone = alloca [130 x i32], align 4
  %bdigits.bn_mul.Clone = alloca i32, align 4
  %cdigits.bn_mul.Clone = alloca i32, align 4
  %i.bn_mul.Clone = alloca i32, align 4
  store i32 %179, i32* %digits.addr.bn_mul.Clone, align 4
  store i32* %arraydecay101.Clone, i32** %c.addr.bn_mul.Clone, align 4
  store i32* %arraydecay102.Clone, i32** %b.addr.bn_mul.Clone, align 4
  store i32* %arraydecay103.Clone, i32** %a.addr.bn_mul.Clone, align 4
  %180 = load i32, i32* %digits.addr.bn_mul.Clone, align 4
  %mul.bn_mul.Clone = mul i32 2, %180
  %arraydecay.bn_mul.Clone = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone, i32 0, i32 0
  %RetValuePtr.bn_mul.Clone = alloca i32, align 4
  %RetValuePtr18.bn_mul.Clone = alloca i32, align 4
  br label %entry.bn_assign_zero.Clone.bn_mul.Clone

entry.bn_assign_zero.Clone.bn_mul.Clone:          ; preds = %entry.bn_mul.Clone
  %digits.addr.bn_assign_zero.Clone.bn_mul.Clone = alloca i32, align 4
  %a.addr.bn_assign_zero.Clone.bn_mul.Clone = alloca i32*, align 4
  %i.bn_assign_zero.Clone.bn_mul.Clone = alloca i32, align 4
  store i32 %mul.bn_mul.Clone, i32* %digits.addr.bn_assign_zero.Clone.bn_mul.Clone, align 4
  store i32* %arraydecay.bn_mul.Clone, i32** %a.addr.bn_assign_zero.Clone.bn_mul.Clone, align 4
  store i32 0, i32* %i.bn_assign_zero.Clone.bn_mul.Clone, align 4
  br label %for.cond.bn_assign_zero.Clone.bn_mul.Clone

for.cond.bn_assign_zero.Clone.bn_mul.Clone:       ; preds = %for.inc.bn_assign_zero.Clone.bn_mul.Clone, %entry.bn_assign_zero.Clone.bn_mul.Clone
  %181 = load i32, i32* %i.bn_assign_zero.Clone.bn_mul.Clone, align 4
  %182 = load i32, i32* %digits.addr.bn_assign_zero.Clone.bn_mul.Clone, align 4
  %cmp.bn_assign_zero.Clone.bn_mul.Clone = icmp ult i32 %181, %182
  br i1 %cmp.bn_assign_zero.Clone.bn_mul.Clone, label %for.body.bn_assign_zero.Clone.bn_mul.Clone, label %for.end.bn_assign_zero.Clone.bn_mul.Clone

for.body.bn_assign_zero.Clone.bn_mul.Clone:       ; preds = %for.cond.bn_assign_zero.Clone.bn_mul.Clone
  %183 = load i32*, i32** %a.addr.bn_assign_zero.Clone.bn_mul.Clone, align 4
  %184 = load i32, i32* %i.bn_assign_zero.Clone.bn_mul.Clone, align 4
  %arrayidx.bn_assign_zero.Clone.bn_mul.Clone = getelementptr inbounds i32, i32* %183, i32 %184
  store i32 0, i32* %arrayidx.bn_assign_zero.Clone.bn_mul.Clone, align 4
  br label %for.inc.bn_assign_zero.Clone.bn_mul.Clone

for.inc.bn_assign_zero.Clone.bn_mul.Clone:        ; preds = %for.body.bn_assign_zero.Clone.bn_mul.Clone
  %185 = load i32, i32* %i.bn_assign_zero.Clone.bn_mul.Clone, align 4
  %inc.bn_assign_zero.Clone.bn_mul.Clone = add i32 %185, 1
  store i32 %inc.bn_assign_zero.Clone.bn_mul.Clone, i32* %i.bn_assign_zero.Clone.bn_mul.Clone, align 4
  br label %for.cond.bn_assign_zero.Clone.bn_mul.Clone

for.end.bn_assign_zero.Clone.bn_mul.Clone:        ; preds = %for.cond.bn_assign_zero.Clone.bn_mul.Clone
  br label %entry.Split.bn_mul.Clone

entry.Split.bn_mul.Clone:                         ; preds = %for.end.bn_assign_zero.Clone.bn_mul.Clone
  %186 = load i32, i32* %digits.addr.bn_mul.Clone, align 4
  %187 = load i32*, i32** %b.addr.bn_mul.Clone, align 4
  br label %entry.bn_digits.Clone2.bn_mul.Clone

entry.bn_digits.Clone2.bn_mul.Clone:              ; preds = %entry.Split.bn_mul.Clone
  %digits.addr.bn_digits.Clone3.bn_mul.Clone = alloca i32, align 4
  %a.addr.bn_digits.Clone4.bn_mul.Clone = alloca i32*, align 4
  %i.bn_digits.Clone5.bn_mul.Clone = alloca i32, align 4
  store i32 %186, i32* %digits.addr.bn_digits.Clone3.bn_mul.Clone, align 4
  store i32* %187, i32** %a.addr.bn_digits.Clone4.bn_mul.Clone, align 4
  %188 = load i32, i32* %digits.addr.bn_digits.Clone3.bn_mul.Clone, align 4
  %sub.bn_digits.Clone6.bn_mul.Clone = sub i32 %188, 1
  store i32 %sub.bn_digits.Clone6.bn_mul.Clone, i32* %i.bn_digits.Clone5.bn_mul.Clone, align 4
  br label %for.cond.bn_digits.Clone7.bn_mul.Clone

for.cond.bn_digits.Clone7.bn_mul.Clone:           ; preds = %for.inc.bn_digits.Clone14.bn_mul.Clone, %entry.bn_digits.Clone2.bn_mul.Clone
  %189 = load i32, i32* %i.bn_digits.Clone5.bn_mul.Clone, align 4
  %cmp.bn_digits.Clone8.bn_mul.Clone = icmp sge i32 %189, 0
  br i1 %cmp.bn_digits.Clone8.bn_mul.Clone, label %for.body.bn_digits.Clone9.bn_mul.Clone, label %for.end.bn_digits.Clone16.bn_mul.Clone

for.body.bn_digits.Clone9.bn_mul.Clone:           ; preds = %for.cond.bn_digits.Clone7.bn_mul.Clone
  %190 = load i32*, i32** %a.addr.bn_digits.Clone4.bn_mul.Clone, align 4
  %191 = load i32, i32* %i.bn_digits.Clone5.bn_mul.Clone, align 4
  %arrayidx.bn_digits.Clone10.bn_mul.Clone = getelementptr inbounds i32, i32* %190, i32 %191
  %192 = load i32, i32* %arrayidx.bn_digits.Clone10.bn_mul.Clone, align 4
  %tobool.bn_digits.Clone11.bn_mul.Clone = icmp ne i32 %192, 0
  br i1 %tobool.bn_digits.Clone11.bn_mul.Clone, label %if.then.bn_digits.Clone12.bn_mul.Clone, label %if.end.bn_digits.Clone13.bn_mul.Clone

if.then.bn_digits.Clone12.bn_mul.Clone:           ; preds = %for.body.bn_digits.Clone9.bn_mul.Clone
  br label %for.end.bn_digits.Clone16.bn_mul.Clone

if.end.bn_digits.Clone13.bn_mul.Clone:            ; preds = %for.body.bn_digits.Clone9.bn_mul.Clone
  br label %for.inc.bn_digits.Clone14.bn_mul.Clone

for.inc.bn_digits.Clone14.bn_mul.Clone:           ; preds = %if.end.bn_digits.Clone13.bn_mul.Clone
  %193 = load i32, i32* %i.bn_digits.Clone5.bn_mul.Clone, align 4
  %dec.bn_digits.Clone15.bn_mul.Clone = add nsw i32 %193, -1
  store i32 %dec.bn_digits.Clone15.bn_mul.Clone, i32* %i.bn_digits.Clone5.bn_mul.Clone, align 4
  br label %for.cond.bn_digits.Clone7.bn_mul.Clone

for.end.bn_digits.Clone16.bn_mul.Clone:           ; preds = %if.then.bn_digits.Clone12.bn_mul.Clone, %for.cond.bn_digits.Clone7.bn_mul.Clone
  %194 = load i32, i32* %i.bn_digits.Clone5.bn_mul.Clone, align 4
  %add.bn_digits.Clone17.bn_mul.Clone = add nsw i32 %194, 1
  store i32 %add.bn_digits.Clone17.bn_mul.Clone, i32* %RetValuePtr18.bn_mul.Clone
  br label %entry.Split.Split1.bn_mul.Clone

entry.Split.Split1.bn_mul.Clone:                  ; preds = %for.end.bn_digits.Clone16.bn_mul.Clone
  %RetValue19.bn_mul.Clone = load i32, i32* %RetValuePtr18.bn_mul.Clone
  store i32 %RetValue19.bn_mul.Clone, i32* %bdigits.bn_mul.Clone, align 4
  %195 = load i32, i32* %digits.addr.bn_mul.Clone, align 4
  %196 = load i32*, i32** %c.addr.bn_mul.Clone, align 4
  br label %entry.bn_digits.Clone.bn_mul.Clone

entry.bn_digits.Clone.bn_mul.Clone:               ; preds = %entry.Split.Split1.bn_mul.Clone
  %digits.addr.bn_digits.Clone.bn_mul.Clone = alloca i32, align 4
  %a.addr.bn_digits.Clone.bn_mul.Clone = alloca i32*, align 4
  %i.bn_digits.Clone.bn_mul.Clone = alloca i32, align 4
  store i32 %195, i32* %digits.addr.bn_digits.Clone.bn_mul.Clone, align 4
  store i32* %196, i32** %a.addr.bn_digits.Clone.bn_mul.Clone, align 4
  %197 = load i32, i32* %digits.addr.bn_digits.Clone.bn_mul.Clone, align 4
  %sub.bn_digits.Clone.bn_mul.Clone = sub i32 %197, 1
  store i32 %sub.bn_digits.Clone.bn_mul.Clone, i32* %i.bn_digits.Clone.bn_mul.Clone, align 4
  br label %for.cond.bn_digits.Clone.bn_mul.Clone

for.cond.bn_digits.Clone.bn_mul.Clone:            ; preds = %for.inc.bn_digits.Clone.bn_mul.Clone, %entry.bn_digits.Clone.bn_mul.Clone
  %198 = load i32, i32* %i.bn_digits.Clone.bn_mul.Clone, align 4
  %cmp.bn_digits.Clone.bn_mul.Clone = icmp sge i32 %198, 0
  br i1 %cmp.bn_digits.Clone.bn_mul.Clone, label %for.body.bn_digits.Clone.bn_mul.Clone, label %for.end.bn_digits.Clone.bn_mul.Clone

for.body.bn_digits.Clone.bn_mul.Clone:            ; preds = %for.cond.bn_digits.Clone.bn_mul.Clone
  %199 = load i32*, i32** %a.addr.bn_digits.Clone.bn_mul.Clone, align 4
  %200 = load i32, i32* %i.bn_digits.Clone.bn_mul.Clone, align 4
  %arrayidx.bn_digits.Clone.bn_mul.Clone = getelementptr inbounds i32, i32* %199, i32 %200
  %201 = load i32, i32* %arrayidx.bn_digits.Clone.bn_mul.Clone, align 4
  %tobool.bn_digits.Clone.bn_mul.Clone = icmp ne i32 %201, 0
  br i1 %tobool.bn_digits.Clone.bn_mul.Clone, label %if.then.bn_digits.Clone.bn_mul.Clone, label %if.end.bn_digits.Clone.bn_mul.Clone

if.then.bn_digits.Clone.bn_mul.Clone:             ; preds = %for.body.bn_digits.Clone.bn_mul.Clone
  br label %for.end.bn_digits.Clone.bn_mul.Clone

if.end.bn_digits.Clone.bn_mul.Clone:              ; preds = %for.body.bn_digits.Clone.bn_mul.Clone
  br label %for.inc.bn_digits.Clone.bn_mul.Clone

for.inc.bn_digits.Clone.bn_mul.Clone:             ; preds = %if.end.bn_digits.Clone.bn_mul.Clone
  %202 = load i32, i32* %i.bn_digits.Clone.bn_mul.Clone, align 4
  %dec.bn_digits.Clone.bn_mul.Clone = add nsw i32 %202, -1
  store i32 %dec.bn_digits.Clone.bn_mul.Clone, i32* %i.bn_digits.Clone.bn_mul.Clone, align 4
  br label %for.cond.bn_digits.Clone.bn_mul.Clone

for.end.bn_digits.Clone.bn_mul.Clone:             ; preds = %if.then.bn_digits.Clone.bn_mul.Clone, %for.cond.bn_digits.Clone.bn_mul.Clone
  %203 = load i32, i32* %i.bn_digits.Clone.bn_mul.Clone, align 4
  %add.bn_digits.Clone.bn_mul.Clone = add nsw i32 %203, 1
  store i32 %add.bn_digits.Clone.bn_mul.Clone, i32* %RetValuePtr.bn_mul.Clone
  br label %entry.Split.Split.bn_mul.Clone

entry.Split.Split.bn_mul.Clone:                   ; preds = %for.end.bn_digits.Clone.bn_mul.Clone
  %RetValue.bn_mul.Clone = load i32, i32* %RetValuePtr.bn_mul.Clone
  store i32 %RetValue.bn_mul.Clone, i32* %cdigits.bn_mul.Clone, align 4
  store i32 0, i32* %i.bn_mul.Clone, align 4
  br label %for.cond.bn_mul.Clone

for.cond.bn_mul.Clone:                            ; preds = %for.inc.bn_mul.Clone, %entry.Split.Split.bn_mul.Clone
  %204 = load i32, i32* %i.bn_mul.Clone, align 4
  %205 = load i32, i32* %bdigits.bn_mul.Clone, align 4
  %cmp.bn_mul.Clone = icmp ult i32 %204, %205
  br i1 %cmp.bn_mul.Clone, label %for.body.bn_mul.Clone, label %for.end.bn_mul.Clone

for.body.bn_mul.Clone:                            ; preds = %for.cond.bn_mul.Clone
  %206 = load i32, i32* %cdigits.bn_mul.Clone, align 4
  %207 = load i32*, i32** %c.addr.bn_mul.Clone, align 4
  %208 = load i32*, i32** %b.addr.bn_mul.Clone, align 4
  %209 = load i32, i32* %i.bn_mul.Clone, align 4
  %arrayidx.bn_mul.Clone = getelementptr inbounds i32, i32* %208, i32 %209
  %210 = load i32, i32* %arrayidx.bn_mul.Clone, align 4
  %211 = load i32, i32* %i.bn_mul.Clone, align 4
  %arrayidx2.bn_mul.Clone = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone, i32 0, i32 %211
  %212 = load i32, i32* %i.bn_mul.Clone, align 4
  %arrayidx3.bn_mul.Clone = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone, i32 0, i32 %212
  %call4.bn_mul.Clone = call i32 @bn_add_digit_mul(i32* %arrayidx3.bn_mul.Clone, i32* %arrayidx2.bn_mul.Clone, i32 %210, i32* %207, i32 %206)
  %213 = load i32, i32* %i.bn_mul.Clone, align 4
  %214 = load i32, i32* %cdigits.bn_mul.Clone, align 4
  %add.bn_mul.Clone = add i32 %213, %214
  %arrayidx5.bn_mul.Clone = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone, i32 0, i32 %add.bn_mul.Clone
  %215 = load i32, i32* %arrayidx5.bn_mul.Clone, align 4
  %add6.bn_mul.Clone = add i32 %215, %call4.bn_mul.Clone
  store i32 %add6.bn_mul.Clone, i32* %arrayidx5.bn_mul.Clone, align 4
  br label %for.inc.bn_mul.Clone

for.inc.bn_mul.Clone:                             ; preds = %for.body.bn_mul.Clone
  %216 = load i32, i32* %i.bn_mul.Clone, align 4
  %inc.bn_mul.Clone = add i32 %216, 1
  store i32 %inc.bn_mul.Clone, i32* %i.bn_mul.Clone, align 4
  br label %for.cond.bn_mul.Clone

for.end.bn_mul.Clone:                             ; preds = %for.cond.bn_mul.Clone
  %217 = load i32, i32* %digits.addr.bn_mul.Clone, align 4
  %mul7.bn_mul.Clone = mul i32 2, %217
  %arraydecay8.bn_mul.Clone = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone, i32 0, i32 0
  %218 = load i32*, i32** %a.addr.bn_mul.Clone, align 4
  call void @bn_assign(i32* %218, i32* %arraydecay8.bn_mul.Clone, i32 %mul7.bn_mul.Clone)
  %arraydecay9.bn_mul.Clone = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone, i32 0, i32 0
  %219 = bitcast i32* %arraydecay9.bn_mul.Clone to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %219, i8 0, i32 520, i1 false)
  br label %if.end84.Clone.Split.Split316

if.end84.Clone.Split.Split316:                    ; preds = %for.end.bn_mul.Clone
  %220 = load i32, i32* %ndigits.Clone, align 4
  %arraydecay104.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %phi_n.Clone, i32 0, i32 0
  %arraydecay105.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %e.Clone, i32 0, i32 0
  %arraydecay106.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %d.Clone, i32 0, i32 0
  br label %entry.bn_mod_inv.Clone

entry.bn_mod_inv.Clone:                           ; preds = %if.end84.Clone.Split.Split316
  %digits.addr.bn_mod_inv.Clone = alloca i32, align 4
  %c.addr.bn_mod_inv.Clone = alloca i32*, align 4
  %b.addr.bn_mod_inv.Clone = alloca i32*, align 4
  %a.addr.bn_mod_inv.Clone = alloca i32*, align 4
  %q.bn_mod_inv.Clone = alloca [65 x i32], align 4
  %t1.bn_mod_inv.Clone = alloca [65 x i32], align 4
  %t3.bn_mod_inv.Clone = alloca [65 x i32], align 4
  %w.bn_mod_inv.Clone = alloca [130 x i32], align 4
  %u1.bn_mod_inv.Clone = alloca [65 x i32], align 4
  %u3.bn_mod_inv.Clone = alloca [65 x i32], align 4
  %v1.bn_mod_inv.Clone = alloca [65 x i32], align 4
  %v3.bn_mod_inv.Clone = alloca [65 x i32], align 4
  %u1_sign.bn_mod_inv.Clone = alloca i32, align 4
  store i32 %220, i32* %digits.addr.bn_mod_inv.Clone, align 4
  store i32* %arraydecay104.Clone, i32** %c.addr.bn_mod_inv.Clone, align 4
  store i32* %arraydecay105.Clone, i32** %b.addr.bn_mod_inv.Clone, align 4
  store i32* %arraydecay106.Clone, i32** %a.addr.bn_mod_inv.Clone, align 4
  %221 = load i32, i32* %digits.addr.bn_mod_inv.Clone, align 4
  %arraydecay.bn_mod_inv.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %u1.bn_mod_inv.Clone, i32 0, i32 0
  %RetValuePtr.bn_mod_inv.Clone = alloca i32, align 4
  %RetValuePtr14.bn_mod_inv.Clone = alloca i32, align 4
  br label %entry.bn_assign_zero.Clone2.bn_mod_inv.Clone

entry.bn_assign_zero.Clone2.bn_mod_inv.Clone:     ; preds = %entry.bn_mod_inv.Clone
  %digits.addr.bn_assign_zero.Clone3.bn_mod_inv.Clone = alloca i32, align 4
  %a.addr.bn_assign_zero.Clone4.bn_mod_inv.Clone = alloca i32*, align 4
  %i.bn_assign_zero.Clone5.bn_mod_inv.Clone = alloca i32, align 4
  store i32 %221, i32* %digits.addr.bn_assign_zero.Clone3.bn_mod_inv.Clone, align 4
  store i32* %arraydecay.bn_mod_inv.Clone, i32** %a.addr.bn_assign_zero.Clone4.bn_mod_inv.Clone, align 4
  store i32 0, i32* %i.bn_assign_zero.Clone5.bn_mod_inv.Clone, align 4
  br label %for.cond.bn_assign_zero.Clone6.bn_mod_inv.Clone

for.cond.bn_assign_zero.Clone6.bn_mod_inv.Clone:  ; preds = %for.inc.bn_assign_zero.Clone10.bn_mod_inv.Clone, %entry.bn_assign_zero.Clone2.bn_mod_inv.Clone
  %222 = load i32, i32* %i.bn_assign_zero.Clone5.bn_mod_inv.Clone, align 4
  %223 = load i32, i32* %digits.addr.bn_assign_zero.Clone3.bn_mod_inv.Clone, align 4
  %cmp.bn_assign_zero.Clone7.bn_mod_inv.Clone = icmp ult i32 %222, %223
  br i1 %cmp.bn_assign_zero.Clone7.bn_mod_inv.Clone, label %for.body.bn_assign_zero.Clone8.bn_mod_inv.Clone, label %for.end.bn_assign_zero.Clone12.bn_mod_inv.Clone

for.body.bn_assign_zero.Clone8.bn_mod_inv.Clone:  ; preds = %for.cond.bn_assign_zero.Clone6.bn_mod_inv.Clone
  %224 = load i32*, i32** %a.addr.bn_assign_zero.Clone4.bn_mod_inv.Clone, align 4
  %225 = load i32, i32* %i.bn_assign_zero.Clone5.bn_mod_inv.Clone, align 4
  %arrayidx.bn_assign_zero.Clone9.bn_mod_inv.Clone = getelementptr inbounds i32, i32* %224, i32 %225
  store i32 0, i32* %arrayidx.bn_assign_zero.Clone9.bn_mod_inv.Clone, align 4
  br label %for.inc.bn_assign_zero.Clone10.bn_mod_inv.Clone

for.inc.bn_assign_zero.Clone10.bn_mod_inv.Clone:  ; preds = %for.body.bn_assign_zero.Clone8.bn_mod_inv.Clone
  %226 = load i32, i32* %i.bn_assign_zero.Clone5.bn_mod_inv.Clone, align 4
  %inc.bn_assign_zero.Clone11.bn_mod_inv.Clone = add i32 %226, 1
  store i32 %inc.bn_assign_zero.Clone11.bn_mod_inv.Clone, i32* %i.bn_assign_zero.Clone5.bn_mod_inv.Clone, align 4
  br label %for.cond.bn_assign_zero.Clone6.bn_mod_inv.Clone

for.end.bn_assign_zero.Clone12.bn_mod_inv.Clone:  ; preds = %for.cond.bn_assign_zero.Clone6.bn_mod_inv.Clone
  br label %entry.Split1.bn_mod_inv.Clone

entry.Split1.bn_mod_inv.Clone:                    ; preds = %for.end.bn_assign_zero.Clone12.bn_mod_inv.Clone
  %arrayidx.bn_mod_inv.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %u1.bn_mod_inv.Clone, i32 0, i32 0
  store i32 1, i32* %arrayidx.bn_mod_inv.Clone, align 4
  %227 = load i32, i32* %digits.addr.bn_mod_inv.Clone, align 4
  %arraydecay1.bn_mod_inv.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %v1.bn_mod_inv.Clone, i32 0, i32 0
  br label %entry.bn_assign_zero.Clone.bn_mod_inv.Clone

entry.bn_assign_zero.Clone.bn_mod_inv.Clone:      ; preds = %entry.Split1.bn_mod_inv.Clone
  %digits.addr.bn_assign_zero.Clone.bn_mod_inv.Clone = alloca i32, align 4
  %a.addr.bn_assign_zero.Clone.bn_mod_inv.Clone = alloca i32*, align 4
  %i.bn_assign_zero.Clone.bn_mod_inv.Clone = alloca i32, align 4
  store i32 %227, i32* %digits.addr.bn_assign_zero.Clone.bn_mod_inv.Clone, align 4
  store i32* %arraydecay1.bn_mod_inv.Clone, i32** %a.addr.bn_assign_zero.Clone.bn_mod_inv.Clone, align 4
  store i32 0, i32* %i.bn_assign_zero.Clone.bn_mod_inv.Clone, align 4
  br label %for.cond.bn_assign_zero.Clone.bn_mod_inv.Clone

for.cond.bn_assign_zero.Clone.bn_mod_inv.Clone:   ; preds = %for.inc.bn_assign_zero.Clone.bn_mod_inv.Clone, %entry.bn_assign_zero.Clone.bn_mod_inv.Clone
  %228 = load i32, i32* %i.bn_assign_zero.Clone.bn_mod_inv.Clone, align 4
  %229 = load i32, i32* %digits.addr.bn_assign_zero.Clone.bn_mod_inv.Clone, align 4
  %cmp.bn_assign_zero.Clone.bn_mod_inv.Clone = icmp ult i32 %228, %229
  br i1 %cmp.bn_assign_zero.Clone.bn_mod_inv.Clone, label %for.body.bn_assign_zero.Clone.bn_mod_inv.Clone, label %for.end.bn_assign_zero.Clone.bn_mod_inv.Clone

for.body.bn_assign_zero.Clone.bn_mod_inv.Clone:   ; preds = %for.cond.bn_assign_zero.Clone.bn_mod_inv.Clone
  %230 = load i32*, i32** %a.addr.bn_assign_zero.Clone.bn_mod_inv.Clone, align 4
  %231 = load i32, i32* %i.bn_assign_zero.Clone.bn_mod_inv.Clone, align 4
  %arrayidx.bn_assign_zero.Clone.bn_mod_inv.Clone = getelementptr inbounds i32, i32* %230, i32 %231
  store i32 0, i32* %arrayidx.bn_assign_zero.Clone.bn_mod_inv.Clone, align 4
  br label %for.inc.bn_assign_zero.Clone.bn_mod_inv.Clone

for.inc.bn_assign_zero.Clone.bn_mod_inv.Clone:    ; preds = %for.body.bn_assign_zero.Clone.bn_mod_inv.Clone
  %232 = load i32, i32* %i.bn_assign_zero.Clone.bn_mod_inv.Clone, align 4
  %inc.bn_assign_zero.Clone.bn_mod_inv.Clone = add i32 %232, 1
  store i32 %inc.bn_assign_zero.Clone.bn_mod_inv.Clone, i32* %i.bn_assign_zero.Clone.bn_mod_inv.Clone, align 4
  br label %for.cond.bn_assign_zero.Clone.bn_mod_inv.Clone

for.end.bn_assign_zero.Clone.bn_mod_inv.Clone:    ; preds = %for.cond.bn_assign_zero.Clone.bn_mod_inv.Clone
  br label %entry.Split.bn_mod_inv.Clone

entry.Split.bn_mod_inv.Clone:                     ; preds = %for.end.bn_assign_zero.Clone.bn_mod_inv.Clone
  %233 = load i32, i32* %digits.addr.bn_mod_inv.Clone, align 4
  %234 = load i32*, i32** %b.addr.bn_mod_inv.Clone, align 4
  %arraydecay2.bn_mod_inv.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %u3.bn_mod_inv.Clone, i32 0, i32 0
  call void @bn_assign(i32* %arraydecay2.bn_mod_inv.Clone, i32* %234, i32 %233)
  %235 = load i32, i32* %digits.addr.bn_mod_inv.Clone, align 4
  %236 = load i32*, i32** %c.addr.bn_mod_inv.Clone, align 4
  %arraydecay3.bn_mod_inv.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %v3.bn_mod_inv.Clone, i32 0, i32 0
  call void @bn_assign(i32* %arraydecay3.bn_mod_inv.Clone, i32* %236, i32 %235)
  store i32 1, i32* %u1_sign.bn_mod_inv.Clone, align 4
  br label %while.cond.bn_mod_inv.Clone

while.cond.bn_mod_inv.Clone:                      ; preds = %while.body.Split.bn_mod_inv.Clone, %entry.Split.bn_mod_inv.Clone
  %237 = load i32, i32* %digits.addr.bn_mod_inv.Clone, align 4
  %arraydecay4.bn_mod_inv.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %v3.bn_mod_inv.Clone, i32 0, i32 0
  br label %entry.bn_is_zero.Clone.bn_mod_inv.Clone

entry.bn_is_zero.Clone.bn_mod_inv.Clone:          ; preds = %while.cond.bn_mod_inv.Clone
  %retval.bn_is_zero.Clone.bn_mod_inv.Clone = alloca i32, align 4
  %digits.addr.bn_is_zero.Clone.bn_mod_inv.Clone = alloca i32, align 4
  %a.addr.bn_is_zero.Clone.bn_mod_inv.Clone = alloca i32*, align 4
  %i.bn_is_zero.Clone.bn_mod_inv.Clone = alloca i32, align 4
  store i32 %237, i32* %digits.addr.bn_is_zero.Clone.bn_mod_inv.Clone, align 4
  store i32* %arraydecay4.bn_mod_inv.Clone, i32** %a.addr.bn_is_zero.Clone.bn_mod_inv.Clone, align 4
  store i32 0, i32* %i.bn_is_zero.Clone.bn_mod_inv.Clone, align 4
  br label %for.cond.bn_is_zero.Clone.bn_mod_inv.Clone

for.cond.bn_is_zero.Clone.bn_mod_inv.Clone:       ; preds = %for.inc.bn_is_zero.Clone.bn_mod_inv.Clone, %entry.bn_is_zero.Clone.bn_mod_inv.Clone
  %238 = load i32, i32* %i.bn_is_zero.Clone.bn_mod_inv.Clone, align 4
  %239 = load i32, i32* %digits.addr.bn_is_zero.Clone.bn_mod_inv.Clone, align 4
  %cmp.bn_is_zero.Clone.bn_mod_inv.Clone = icmp ult i32 %238, %239
  br i1 %cmp.bn_is_zero.Clone.bn_mod_inv.Clone, label %for.body.bn_is_zero.Clone.bn_mod_inv.Clone, label %for.end.bn_is_zero.Clone.bn_mod_inv.Clone

for.body.bn_is_zero.Clone.bn_mod_inv.Clone:       ; preds = %for.cond.bn_is_zero.Clone.bn_mod_inv.Clone
  %240 = load i32*, i32** %a.addr.bn_is_zero.Clone.bn_mod_inv.Clone, align 4
  %241 = load i32, i32* %i.bn_is_zero.Clone.bn_mod_inv.Clone, align 4
  %arrayidx.bn_is_zero.Clone.bn_mod_inv.Clone = getelementptr inbounds i32, i32* %240, i32 %241
  %242 = load i32, i32* %arrayidx.bn_is_zero.Clone.bn_mod_inv.Clone, align 4
  %tobool.bn_is_zero.Clone.bn_mod_inv.Clone = icmp ne i32 %242, 0
  br i1 %tobool.bn_is_zero.Clone.bn_mod_inv.Clone, label %if.then.bn_is_zero.Clone.bn_mod_inv.Clone, label %if.end.bn_is_zero.Clone.bn_mod_inv.Clone

if.then.bn_is_zero.Clone.bn_mod_inv.Clone:        ; preds = %for.body.bn_is_zero.Clone.bn_mod_inv.Clone
  store i32 0, i32* %retval.bn_is_zero.Clone.bn_mod_inv.Clone, align 4
  br label %return.bn_is_zero.Clone.bn_mod_inv.Clone

if.end.bn_is_zero.Clone.bn_mod_inv.Clone:         ; preds = %for.body.bn_is_zero.Clone.bn_mod_inv.Clone
  br label %for.inc.bn_is_zero.Clone.bn_mod_inv.Clone

for.inc.bn_is_zero.Clone.bn_mod_inv.Clone:        ; preds = %if.end.bn_is_zero.Clone.bn_mod_inv.Clone
  %243 = load i32, i32* %i.bn_is_zero.Clone.bn_mod_inv.Clone, align 4
  %inc.bn_is_zero.Clone.bn_mod_inv.Clone = add i32 %243, 1
  store i32 %inc.bn_is_zero.Clone.bn_mod_inv.Clone, i32* %i.bn_is_zero.Clone.bn_mod_inv.Clone, align 4
  br label %for.cond.bn_is_zero.Clone.bn_mod_inv.Clone

for.end.bn_is_zero.Clone.bn_mod_inv.Clone:        ; preds = %for.cond.bn_is_zero.Clone.bn_mod_inv.Clone
  store i32 1, i32* %retval.bn_is_zero.Clone.bn_mod_inv.Clone, align 4
  br label %return.bn_is_zero.Clone.bn_mod_inv.Clone

return.bn_is_zero.Clone.bn_mod_inv.Clone:         ; preds = %for.end.bn_is_zero.Clone.bn_mod_inv.Clone, %if.then.bn_is_zero.Clone.bn_mod_inv.Clone
  %244 = load i32, i32* %retval.bn_is_zero.Clone.bn_mod_inv.Clone, align 4
  store i32 %244, i32* %RetValuePtr14.bn_mod_inv.Clone
  br label %while.cond.Split.bn_mod_inv.Clone

while.cond.Split.bn_mod_inv.Clone:                ; preds = %return.bn_is_zero.Clone.bn_mod_inv.Clone
  %RetValue15.bn_mod_inv.Clone = load i32, i32* %RetValuePtr14.bn_mod_inv.Clone
  %tobool.bn_mod_inv.Clone = icmp ne i32 %RetValue15.bn_mod_inv.Clone, 0
  %lnot.bn_mod_inv.Clone = xor i1 %tobool.bn_mod_inv.Clone, true
  br i1 %lnot.bn_mod_inv.Clone, label %while.body.bn_mod_inv.Clone, label %while.end.bn_mod_inv.Clone

while.body.bn_mod_inv.Clone:                      ; preds = %while.cond.Split.bn_mod_inv.Clone
  %245 = load i32, i32* %digits.addr.bn_mod_inv.Clone, align 4
  %arraydecay5.bn_mod_inv.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %v3.bn_mod_inv.Clone, i32 0, i32 0
  %246 = load i32, i32* %digits.addr.bn_mod_inv.Clone, align 4
  %arraydecay6.bn_mod_inv.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %u3.bn_mod_inv.Clone, i32 0, i32 0
  %arraydecay7.bn_mod_inv.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %t3.bn_mod_inv.Clone, i32 0, i32 0
  %arraydecay8.bn_mod_inv.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %q.bn_mod_inv.Clone, i32 0, i32 0
  call void @bn_div(i32* %arraydecay8.bn_mod_inv.Clone, i32* %arraydecay7.bn_mod_inv.Clone, i32* %arraydecay6.bn_mod_inv.Clone, i32 %246, i32* %arraydecay5.bn_mod_inv.Clone, i32 %245)
  %247 = load i32, i32* %digits.addr.bn_mod_inv.Clone, align 4
  %arraydecay9.bn_mod_inv.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %v1.bn_mod_inv.Clone, i32 0, i32 0
  %arraydecay10.bn_mod_inv.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %q.bn_mod_inv.Clone, i32 0, i32 0
  %arraydecay11.bn_mod_inv.Clone = getelementptr inbounds [130 x i32], [130 x i32]* %w.bn_mod_inv.Clone, i32 0, i32 0
  br label %entry.bn_mul.Clone.bn_mod_inv.Clone

entry.bn_mul.Clone.bn_mod_inv.Clone:              ; preds = %while.body.bn_mod_inv.Clone
  %digits.addr.bn_mul.Clone.bn_mod_inv.Clone = alloca i32, align 4
  %c.addr.bn_mul.Clone.bn_mod_inv.Clone = alloca i32*, align 4
  %b.addr.bn_mul.Clone.bn_mod_inv.Clone = alloca i32*, align 4
  %a.addr.bn_mul.Clone.bn_mod_inv.Clone = alloca i32*, align 4
  %t.bn_mul.Clone.bn_mod_inv.Clone = alloca [130 x i32], align 4
  %bdigits.bn_mul.Clone.bn_mod_inv.Clone = alloca i32, align 4
  %cdigits.bn_mul.Clone.bn_mod_inv.Clone = alloca i32, align 4
  %i.bn_mul.Clone.bn_mod_inv.Clone = alloca i32, align 4
  store i32 %247, i32* %digits.addr.bn_mul.Clone.bn_mod_inv.Clone, align 4
  store i32* %arraydecay9.bn_mod_inv.Clone, i32** %c.addr.bn_mul.Clone.bn_mod_inv.Clone, align 4
  store i32* %arraydecay10.bn_mod_inv.Clone, i32** %b.addr.bn_mul.Clone.bn_mod_inv.Clone, align 4
  store i32* %arraydecay11.bn_mod_inv.Clone, i32** %a.addr.bn_mul.Clone.bn_mod_inv.Clone, align 4
  %248 = load i32, i32* %digits.addr.bn_mul.Clone.bn_mod_inv.Clone, align 4
  %mul.bn_mul.Clone.bn_mod_inv.Clone = mul i32 2, %248
  %arraydecay.bn_mul.Clone.bn_mod_inv.Clone = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone.bn_mod_inv.Clone, i32 0, i32 0
  %RetValuePtr.bn_mul.Clone.bn_mod_inv.Clone = alloca i32, align 4
  %RetValuePtr18.bn_mul.Clone.bn_mod_inv.Clone = alloca i32, align 4
  br label %entry.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone

entry.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone: ; preds = %entry.bn_mul.Clone.bn_mod_inv.Clone
  %digits.addr.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone = alloca i32, align 4
  %a.addr.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone = alloca i32*, align 4
  %i.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone = alloca i32, align 4
  store i32 %mul.bn_mul.Clone.bn_mod_inv.Clone, i32* %digits.addr.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone, align 4
  store i32* %arraydecay.bn_mul.Clone.bn_mod_inv.Clone, i32** %a.addr.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone, align 4
  store i32 0, i32* %i.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone, align 4
  br label %for.cond.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone

for.cond.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone: ; preds = %for.inc.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone, %entry.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone
  %249 = load i32, i32* %i.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone, align 4
  %250 = load i32, i32* %digits.addr.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone, align 4
  %cmp.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone = icmp ult i32 %249, %250
  br i1 %cmp.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone, label %for.body.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone, label %for.end.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone

for.body.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone: ; preds = %for.cond.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone
  %251 = load i32*, i32** %a.addr.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone, align 4
  %252 = load i32, i32* %i.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone, align 4
  %arrayidx.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone = getelementptr inbounds i32, i32* %251, i32 %252
  store i32 0, i32* %arrayidx.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone, align 4
  br label %for.inc.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone

for.inc.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone: ; preds = %for.body.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone
  %253 = load i32, i32* %i.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone, align 4
  %inc.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone = add i32 %253, 1
  store i32 %inc.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone, i32* %i.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone, align 4
  br label %for.cond.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone

for.end.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone: ; preds = %for.cond.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone
  br label %entry.Split.bn_mul.Clone.bn_mod_inv.Clone

entry.Split.bn_mul.Clone.bn_mod_inv.Clone:        ; preds = %for.end.bn_assign_zero.Clone.bn_mul.Clone.bn_mod_inv.Clone
  %254 = load i32, i32* %digits.addr.bn_mul.Clone.bn_mod_inv.Clone, align 4
  %255 = load i32*, i32** %b.addr.bn_mul.Clone.bn_mod_inv.Clone, align 4
  br label %entry.bn_digits.Clone2.bn_mul.Clone.bn_mod_inv.Clone

entry.bn_digits.Clone2.bn_mul.Clone.bn_mod_inv.Clone: ; preds = %entry.Split.bn_mul.Clone.bn_mod_inv.Clone
  %digits.addr.bn_digits.Clone3.bn_mul.Clone.bn_mod_inv.Clone = alloca i32, align 4
  %a.addr.bn_digits.Clone4.bn_mul.Clone.bn_mod_inv.Clone = alloca i32*, align 4
  %i.bn_digits.Clone5.bn_mul.Clone.bn_mod_inv.Clone = alloca i32, align 4
  store i32 %254, i32* %digits.addr.bn_digits.Clone3.bn_mul.Clone.bn_mod_inv.Clone, align 4
  store i32* %255, i32** %a.addr.bn_digits.Clone4.bn_mul.Clone.bn_mod_inv.Clone, align 4
  %256 = load i32, i32* %digits.addr.bn_digits.Clone3.bn_mul.Clone.bn_mod_inv.Clone, align 4
  %sub.bn_digits.Clone6.bn_mul.Clone.bn_mod_inv.Clone = sub i32 %256, 1
  store i32 %sub.bn_digits.Clone6.bn_mul.Clone.bn_mod_inv.Clone, i32* %i.bn_digits.Clone5.bn_mul.Clone.bn_mod_inv.Clone, align 4
  br label %for.cond.bn_digits.Clone7.bn_mul.Clone.bn_mod_inv.Clone

for.cond.bn_digits.Clone7.bn_mul.Clone.bn_mod_inv.Clone: ; preds = %for.inc.bn_digits.Clone14.bn_mul.Clone.bn_mod_inv.Clone, %entry.bn_digits.Clone2.bn_mul.Clone.bn_mod_inv.Clone
  %257 = load i32, i32* %i.bn_digits.Clone5.bn_mul.Clone.bn_mod_inv.Clone, align 4
  %cmp.bn_digits.Clone8.bn_mul.Clone.bn_mod_inv.Clone = icmp sge i32 %257, 0
  br i1 %cmp.bn_digits.Clone8.bn_mul.Clone.bn_mod_inv.Clone, label %for.body.bn_digits.Clone9.bn_mul.Clone.bn_mod_inv.Clone, label %for.end.bn_digits.Clone16.bn_mul.Clone.bn_mod_inv.Clone

for.body.bn_digits.Clone9.bn_mul.Clone.bn_mod_inv.Clone: ; preds = %for.cond.bn_digits.Clone7.bn_mul.Clone.bn_mod_inv.Clone
  %258 = load i32*, i32** %a.addr.bn_digits.Clone4.bn_mul.Clone.bn_mod_inv.Clone, align 4
  %259 = load i32, i32* %i.bn_digits.Clone5.bn_mul.Clone.bn_mod_inv.Clone, align 4
  %arrayidx.bn_digits.Clone10.bn_mul.Clone.bn_mod_inv.Clone = getelementptr inbounds i32, i32* %258, i32 %259
  %260 = load i32, i32* %arrayidx.bn_digits.Clone10.bn_mul.Clone.bn_mod_inv.Clone, align 4
  %tobool.bn_digits.Clone11.bn_mul.Clone.bn_mod_inv.Clone = icmp ne i32 %260, 0
  br i1 %tobool.bn_digits.Clone11.bn_mul.Clone.bn_mod_inv.Clone, label %if.then.bn_digits.Clone12.bn_mul.Clone.bn_mod_inv.Clone, label %if.end.bn_digits.Clone13.bn_mul.Clone.bn_mod_inv.Clone

if.then.bn_digits.Clone12.bn_mul.Clone.bn_mod_inv.Clone: ; preds = %for.body.bn_digits.Clone9.bn_mul.Clone.bn_mod_inv.Clone
  br label %for.end.bn_digits.Clone16.bn_mul.Clone.bn_mod_inv.Clone

if.end.bn_digits.Clone13.bn_mul.Clone.bn_mod_inv.Clone: ; preds = %for.body.bn_digits.Clone9.bn_mul.Clone.bn_mod_inv.Clone
  br label %for.inc.bn_digits.Clone14.bn_mul.Clone.bn_mod_inv.Clone

for.inc.bn_digits.Clone14.bn_mul.Clone.bn_mod_inv.Clone: ; preds = %if.end.bn_digits.Clone13.bn_mul.Clone.bn_mod_inv.Clone
  %261 = load i32, i32* %i.bn_digits.Clone5.bn_mul.Clone.bn_mod_inv.Clone, align 4
  %dec.bn_digits.Clone15.bn_mul.Clone.bn_mod_inv.Clone = add nsw i32 %261, -1
  store i32 %dec.bn_digits.Clone15.bn_mul.Clone.bn_mod_inv.Clone, i32* %i.bn_digits.Clone5.bn_mul.Clone.bn_mod_inv.Clone, align 4
  br label %for.cond.bn_digits.Clone7.bn_mul.Clone.bn_mod_inv.Clone

for.end.bn_digits.Clone16.bn_mul.Clone.bn_mod_inv.Clone: ; preds = %if.then.bn_digits.Clone12.bn_mul.Clone.bn_mod_inv.Clone, %for.cond.bn_digits.Clone7.bn_mul.Clone.bn_mod_inv.Clone
  %262 = load i32, i32* %i.bn_digits.Clone5.bn_mul.Clone.bn_mod_inv.Clone, align 4
  %add.bn_digits.Clone17.bn_mul.Clone.bn_mod_inv.Clone = add nsw i32 %262, 1
  store i32 %add.bn_digits.Clone17.bn_mul.Clone.bn_mod_inv.Clone, i32* %RetValuePtr18.bn_mul.Clone.bn_mod_inv.Clone
  br label %entry.Split.Split1.bn_mul.Clone.bn_mod_inv.Clone

entry.Split.Split1.bn_mul.Clone.bn_mod_inv.Clone: ; preds = %for.end.bn_digits.Clone16.bn_mul.Clone.bn_mod_inv.Clone
  %RetValue19.bn_mul.Clone.bn_mod_inv.Clone = load i32, i32* %RetValuePtr18.bn_mul.Clone.bn_mod_inv.Clone
  store i32 %RetValue19.bn_mul.Clone.bn_mod_inv.Clone, i32* %bdigits.bn_mul.Clone.bn_mod_inv.Clone, align 4
  %263 = load i32, i32* %digits.addr.bn_mul.Clone.bn_mod_inv.Clone, align 4
  %264 = load i32*, i32** %c.addr.bn_mul.Clone.bn_mod_inv.Clone, align 4
  br label %entry.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone

entry.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone: ; preds = %entry.Split.Split1.bn_mul.Clone.bn_mod_inv.Clone
  %digits.addr.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone = alloca i32, align 4
  %a.addr.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone = alloca i32*, align 4
  %i.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone = alloca i32, align 4
  store i32 %263, i32* %digits.addr.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone, align 4
  store i32* %264, i32** %a.addr.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone, align 4
  %265 = load i32, i32* %digits.addr.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone, align 4
  %sub.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone = sub i32 %265, 1
  store i32 %sub.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone, i32* %i.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone, align 4
  br label %for.cond.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone

for.cond.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone: ; preds = %for.inc.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone, %entry.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone
  %266 = load i32, i32* %i.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone, align 4
  %cmp.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone = icmp sge i32 %266, 0
  br i1 %cmp.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone, label %for.body.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone, label %for.end.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone

for.body.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone: ; preds = %for.cond.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone
  %267 = load i32*, i32** %a.addr.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone, align 4
  %268 = load i32, i32* %i.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone, align 4
  %arrayidx.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone = getelementptr inbounds i32, i32* %267, i32 %268
  %269 = load i32, i32* %arrayidx.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone, align 4
  %tobool.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone = icmp ne i32 %269, 0
  br i1 %tobool.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone, label %if.then.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone, label %if.end.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone

if.then.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone: ; preds = %for.body.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone
  br label %for.end.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone

if.end.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone: ; preds = %for.body.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone
  br label %for.inc.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone

for.inc.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone: ; preds = %if.end.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone
  %270 = load i32, i32* %i.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone, align 4
  %dec.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone = add nsw i32 %270, -1
  store i32 %dec.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone, i32* %i.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone, align 4
  br label %for.cond.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone

for.end.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone: ; preds = %if.then.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone, %for.cond.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone
  %271 = load i32, i32* %i.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone, align 4
  %add.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone = add nsw i32 %271, 1
  store i32 %add.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone, i32* %RetValuePtr.bn_mul.Clone.bn_mod_inv.Clone
  br label %entry.Split.Split.bn_mul.Clone.bn_mod_inv.Clone

entry.Split.Split.bn_mul.Clone.bn_mod_inv.Clone:  ; preds = %for.end.bn_digits.Clone.bn_mul.Clone.bn_mod_inv.Clone
  %RetValue.bn_mul.Clone.bn_mod_inv.Clone = load i32, i32* %RetValuePtr.bn_mul.Clone.bn_mod_inv.Clone
  store i32 %RetValue.bn_mul.Clone.bn_mod_inv.Clone, i32* %cdigits.bn_mul.Clone.bn_mod_inv.Clone, align 4
  store i32 0, i32* %i.bn_mul.Clone.bn_mod_inv.Clone, align 4
  br label %for.cond.bn_mul.Clone.bn_mod_inv.Clone

for.cond.bn_mul.Clone.bn_mod_inv.Clone:           ; preds = %for.inc.bn_mul.Clone.bn_mod_inv.Clone, %entry.Split.Split.bn_mul.Clone.bn_mod_inv.Clone
  %272 = load i32, i32* %i.bn_mul.Clone.bn_mod_inv.Clone, align 4
  %273 = load i32, i32* %bdigits.bn_mul.Clone.bn_mod_inv.Clone, align 4
  %cmp.bn_mul.Clone.bn_mod_inv.Clone = icmp ult i32 %272, %273
  br i1 %cmp.bn_mul.Clone.bn_mod_inv.Clone, label %for.body.bn_mul.Clone.bn_mod_inv.Clone, label %for.end.bn_mul.Clone.bn_mod_inv.Clone

for.body.bn_mul.Clone.bn_mod_inv.Clone:           ; preds = %for.cond.bn_mul.Clone.bn_mod_inv.Clone
  %274 = load i32, i32* %cdigits.bn_mul.Clone.bn_mod_inv.Clone, align 4
  %275 = load i32*, i32** %c.addr.bn_mul.Clone.bn_mod_inv.Clone, align 4
  %276 = load i32*, i32** %b.addr.bn_mul.Clone.bn_mod_inv.Clone, align 4
  %277 = load i32, i32* %i.bn_mul.Clone.bn_mod_inv.Clone, align 4
  %arrayidx.bn_mul.Clone.bn_mod_inv.Clone = getelementptr inbounds i32, i32* %276, i32 %277
  %278 = load i32, i32* %arrayidx.bn_mul.Clone.bn_mod_inv.Clone, align 4
  %279 = load i32, i32* %i.bn_mul.Clone.bn_mod_inv.Clone, align 4
  %arrayidx2.bn_mul.Clone.bn_mod_inv.Clone = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone.bn_mod_inv.Clone, i32 0, i32 %279
  %280 = load i32, i32* %i.bn_mul.Clone.bn_mod_inv.Clone, align 4
  %arrayidx3.bn_mul.Clone.bn_mod_inv.Clone = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone.bn_mod_inv.Clone, i32 0, i32 %280
  %call4.bn_mul.Clone.bn_mod_inv.Clone = call i32 @bn_add_digit_mul(i32* %arrayidx3.bn_mul.Clone.bn_mod_inv.Clone, i32* %arrayidx2.bn_mul.Clone.bn_mod_inv.Clone, i32 %278, i32* %275, i32 %274)
  %281 = load i32, i32* %i.bn_mul.Clone.bn_mod_inv.Clone, align 4
  %282 = load i32, i32* %cdigits.bn_mul.Clone.bn_mod_inv.Clone, align 4
  %add.bn_mul.Clone.bn_mod_inv.Clone = add i32 %281, %282
  %arrayidx5.bn_mul.Clone.bn_mod_inv.Clone = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone.bn_mod_inv.Clone, i32 0, i32 %add.bn_mul.Clone.bn_mod_inv.Clone
  %283 = load i32, i32* %arrayidx5.bn_mul.Clone.bn_mod_inv.Clone, align 4
  %add6.bn_mul.Clone.bn_mod_inv.Clone = add i32 %283, %call4.bn_mul.Clone.bn_mod_inv.Clone
  store i32 %add6.bn_mul.Clone.bn_mod_inv.Clone, i32* %arrayidx5.bn_mul.Clone.bn_mod_inv.Clone, align 4
  br label %for.inc.bn_mul.Clone.bn_mod_inv.Clone

for.inc.bn_mul.Clone.bn_mod_inv.Clone:            ; preds = %for.body.bn_mul.Clone.bn_mod_inv.Clone
  %284 = load i32, i32* %i.bn_mul.Clone.bn_mod_inv.Clone, align 4
  %inc.bn_mul.Clone.bn_mod_inv.Clone = add i32 %284, 1
  store i32 %inc.bn_mul.Clone.bn_mod_inv.Clone, i32* %i.bn_mul.Clone.bn_mod_inv.Clone, align 4
  br label %for.cond.bn_mul.Clone.bn_mod_inv.Clone

for.end.bn_mul.Clone.bn_mod_inv.Clone:            ; preds = %for.cond.bn_mul.Clone.bn_mod_inv.Clone
  %285 = load i32, i32* %digits.addr.bn_mul.Clone.bn_mod_inv.Clone, align 4
  %mul7.bn_mul.Clone.bn_mod_inv.Clone = mul i32 2, %285
  %arraydecay8.bn_mul.Clone.bn_mod_inv.Clone = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone.bn_mod_inv.Clone, i32 0, i32 0
  %286 = load i32*, i32** %a.addr.bn_mul.Clone.bn_mod_inv.Clone, align 4
  call void @bn_assign(i32* %286, i32* %arraydecay8.bn_mul.Clone.bn_mod_inv.Clone, i32 %mul7.bn_mul.Clone.bn_mod_inv.Clone)
  %arraydecay9.bn_mul.Clone.bn_mod_inv.Clone = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mul.Clone.bn_mod_inv.Clone, i32 0, i32 0
  %287 = bitcast i32* %arraydecay9.bn_mul.Clone.bn_mod_inv.Clone to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %287, i8 0, i32 520, i1 false)
  br label %while.body.Split13.bn_mod_inv.Clone

while.body.Split13.bn_mod_inv.Clone:              ; preds = %for.end.bn_mul.Clone.bn_mod_inv.Clone
  %288 = load i32, i32* %digits.addr.bn_mod_inv.Clone, align 4
  %arraydecay12.bn_mod_inv.Clone = getelementptr inbounds [130 x i32], [130 x i32]* %w.bn_mod_inv.Clone, i32 0, i32 0
  %arraydecay13.bn_mod_inv.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %u1.bn_mod_inv.Clone, i32 0, i32 0
  %arraydecay14.bn_mod_inv.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %t1.bn_mod_inv.Clone, i32 0, i32 0
  br label %entry.bn_add.Clone.bn_mod_inv.Clone

entry.bn_add.Clone.bn_mod_inv.Clone:              ; preds = %while.body.Split13.bn_mod_inv.Clone
  %digits.addr.bn_add.Clone.bn_mod_inv.Clone = alloca i32, align 4
  %c.addr.bn_add.Clone.bn_mod_inv.Clone = alloca i32*, align 4
  %b.addr.bn_add.Clone.bn_mod_inv.Clone = alloca i32*, align 4
  %a.addr.bn_add.Clone.bn_mod_inv.Clone = alloca i32*, align 4
  %ai.bn_add.Clone.bn_mod_inv.Clone = alloca i32, align 4
  %carry.bn_add.Clone.bn_mod_inv.Clone = alloca i32, align 4
  %i.bn_add.Clone.bn_mod_inv.Clone = alloca i32, align 4
  store i32 %288, i32* %digits.addr.bn_add.Clone.bn_mod_inv.Clone, align 4
  store i32* %arraydecay12.bn_mod_inv.Clone, i32** %c.addr.bn_add.Clone.bn_mod_inv.Clone, align 4
  store i32* %arraydecay13.bn_mod_inv.Clone, i32** %b.addr.bn_add.Clone.bn_mod_inv.Clone, align 4
  store i32* %arraydecay14.bn_mod_inv.Clone, i32** %a.addr.bn_add.Clone.bn_mod_inv.Clone, align 4
  store i32 0, i32* %carry.bn_add.Clone.bn_mod_inv.Clone, align 4
  store i32 0, i32* %i.bn_add.Clone.bn_mod_inv.Clone, align 4
  br label %for.cond.bn_add.Clone.bn_mod_inv.Clone

for.cond.bn_add.Clone.bn_mod_inv.Clone:           ; preds = %for.inc.bn_add.Clone.bn_mod_inv.Clone, %entry.bn_add.Clone.bn_mod_inv.Clone
  %289 = load i32, i32* %i.bn_add.Clone.bn_mod_inv.Clone, align 4
  %290 = load i32, i32* %digits.addr.bn_add.Clone.bn_mod_inv.Clone, align 4
  %cmp.bn_add.Clone.bn_mod_inv.Clone = icmp ult i32 %289, %290
  br i1 %cmp.bn_add.Clone.bn_mod_inv.Clone, label %for.body.bn_add.Clone.bn_mod_inv.Clone, label %for.end.bn_add.Clone.bn_mod_inv.Clone

for.body.bn_add.Clone.bn_mod_inv.Clone:           ; preds = %for.cond.bn_add.Clone.bn_mod_inv.Clone
  %291 = load i32*, i32** %b.addr.bn_add.Clone.bn_mod_inv.Clone, align 4
  %292 = load i32, i32* %i.bn_add.Clone.bn_mod_inv.Clone, align 4
  %arrayidx.bn_add.Clone.bn_mod_inv.Clone = getelementptr inbounds i32, i32* %291, i32 %292
  %293 = load i32, i32* %arrayidx.bn_add.Clone.bn_mod_inv.Clone, align 4
  %294 = load i32, i32* %carry.bn_add.Clone.bn_mod_inv.Clone, align 4
  %add.bn_add.Clone.bn_mod_inv.Clone = add i32 %293, %294
  store i32 %add.bn_add.Clone.bn_mod_inv.Clone, i32* %ai.bn_add.Clone.bn_mod_inv.Clone, align 4
  %295 = load i32, i32* %carry.bn_add.Clone.bn_mod_inv.Clone, align 4
  %cmp1.bn_add.Clone.bn_mod_inv.Clone = icmp ult i32 %add.bn_add.Clone.bn_mod_inv.Clone, %295
  br i1 %cmp1.bn_add.Clone.bn_mod_inv.Clone, label %if.then.bn_add.Clone.bn_mod_inv.Clone, label %if.else.bn_add.Clone.bn_mod_inv.Clone

if.then.bn_add.Clone.bn_mod_inv.Clone:            ; preds = %for.body.bn_add.Clone.bn_mod_inv.Clone
  %296 = load i32*, i32** %c.addr.bn_add.Clone.bn_mod_inv.Clone, align 4
  %297 = load i32, i32* %i.bn_add.Clone.bn_mod_inv.Clone, align 4
  %arrayidx2.bn_add.Clone.bn_mod_inv.Clone = getelementptr inbounds i32, i32* %296, i32 %297
  %298 = load i32, i32* %arrayidx2.bn_add.Clone.bn_mod_inv.Clone, align 4
  store i32 %298, i32* %ai.bn_add.Clone.bn_mod_inv.Clone, align 4
  br label %if.end9.bn_add.Clone.bn_mod_inv.Clone

if.else.bn_add.Clone.bn_mod_inv.Clone:            ; preds = %for.body.bn_add.Clone.bn_mod_inv.Clone
  %299 = load i32*, i32** %c.addr.bn_add.Clone.bn_mod_inv.Clone, align 4
  %300 = load i32, i32* %i.bn_add.Clone.bn_mod_inv.Clone, align 4
  %arrayidx3.bn_add.Clone.bn_mod_inv.Clone = getelementptr inbounds i32, i32* %299, i32 %300
  %301 = load i32, i32* %arrayidx3.bn_add.Clone.bn_mod_inv.Clone, align 4
  %302 = load i32, i32* %ai.bn_add.Clone.bn_mod_inv.Clone, align 4
  %add4.bn_add.Clone.bn_mod_inv.Clone = add i32 %302, %301
  store i32 %add4.bn_add.Clone.bn_mod_inv.Clone, i32* %ai.bn_add.Clone.bn_mod_inv.Clone, align 4
  %303 = load i32*, i32** %c.addr.bn_add.Clone.bn_mod_inv.Clone, align 4
  %304 = load i32, i32* %i.bn_add.Clone.bn_mod_inv.Clone, align 4
  %arrayidx5.bn_add.Clone.bn_mod_inv.Clone = getelementptr inbounds i32, i32* %303, i32 %304
  %305 = load i32, i32* %arrayidx5.bn_add.Clone.bn_mod_inv.Clone, align 4
  %cmp6.bn_add.Clone.bn_mod_inv.Clone = icmp ult i32 %add4.bn_add.Clone.bn_mod_inv.Clone, %305
  br i1 %cmp6.bn_add.Clone.bn_mod_inv.Clone, label %if.then7.bn_add.Clone.bn_mod_inv.Clone, label %if.else8.bn_add.Clone.bn_mod_inv.Clone

if.then7.bn_add.Clone.bn_mod_inv.Clone:           ; preds = %if.else.bn_add.Clone.bn_mod_inv.Clone
  store i32 1, i32* %carry.bn_add.Clone.bn_mod_inv.Clone, align 4
  br label %if.end.bn_add.Clone.bn_mod_inv.Clone

if.else8.bn_add.Clone.bn_mod_inv.Clone:           ; preds = %if.else.bn_add.Clone.bn_mod_inv.Clone
  store i32 0, i32* %carry.bn_add.Clone.bn_mod_inv.Clone, align 4
  br label %if.end.bn_add.Clone.bn_mod_inv.Clone

if.end.bn_add.Clone.bn_mod_inv.Clone:             ; preds = %if.else8.bn_add.Clone.bn_mod_inv.Clone, %if.then7.bn_add.Clone.bn_mod_inv.Clone
  br label %if.end9.bn_add.Clone.bn_mod_inv.Clone

if.end9.bn_add.Clone.bn_mod_inv.Clone:            ; preds = %if.end.bn_add.Clone.bn_mod_inv.Clone, %if.then.bn_add.Clone.bn_mod_inv.Clone
  %306 = load i32, i32* %ai.bn_add.Clone.bn_mod_inv.Clone, align 4
  %307 = load i32*, i32** %a.addr.bn_add.Clone.bn_mod_inv.Clone, align 4
  %308 = load i32, i32* %i.bn_add.Clone.bn_mod_inv.Clone, align 4
  %arrayidx10.bn_add.Clone.bn_mod_inv.Clone = getelementptr inbounds i32, i32* %307, i32 %308
  store i32 %306, i32* %arrayidx10.bn_add.Clone.bn_mod_inv.Clone, align 4
  br label %for.inc.bn_add.Clone.bn_mod_inv.Clone

for.inc.bn_add.Clone.bn_mod_inv.Clone:            ; preds = %if.end9.bn_add.Clone.bn_mod_inv.Clone
  %309 = load i32, i32* %i.bn_add.Clone.bn_mod_inv.Clone, align 4
  %inc.bn_add.Clone.bn_mod_inv.Clone = add i32 %309, 1
  store i32 %inc.bn_add.Clone.bn_mod_inv.Clone, i32* %i.bn_add.Clone.bn_mod_inv.Clone, align 4
  br label %for.cond.bn_add.Clone.bn_mod_inv.Clone

for.end.bn_add.Clone.bn_mod_inv.Clone:            ; preds = %for.cond.bn_add.Clone.bn_mod_inv.Clone
  %310 = load i32, i32* %carry.bn_add.Clone.bn_mod_inv.Clone, align 4
  store i32 %310, i32* %RetValuePtr.bn_mod_inv.Clone
  br label %while.body.Split.bn_mod_inv.Clone

while.body.Split.bn_mod_inv.Clone:                ; preds = %for.end.bn_add.Clone.bn_mod_inv.Clone
  %RetValue.bn_mod_inv.Clone = load i32, i32* %RetValuePtr.bn_mod_inv.Clone
  %311 = load i32, i32* %digits.addr.bn_mod_inv.Clone, align 4
  %arraydecay16.bn_mod_inv.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %v1.bn_mod_inv.Clone, i32 0, i32 0
  %arraydecay17.bn_mod_inv.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %u1.bn_mod_inv.Clone, i32 0, i32 0
  call void @bn_assign(i32* %arraydecay17.bn_mod_inv.Clone, i32* %arraydecay16.bn_mod_inv.Clone, i32 %311)
  %312 = load i32, i32* %digits.addr.bn_mod_inv.Clone, align 4
  %arraydecay18.bn_mod_inv.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %t1.bn_mod_inv.Clone, i32 0, i32 0
  %arraydecay19.bn_mod_inv.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %v1.bn_mod_inv.Clone, i32 0, i32 0
  call void @bn_assign(i32* %arraydecay19.bn_mod_inv.Clone, i32* %arraydecay18.bn_mod_inv.Clone, i32 %312)
  %313 = load i32, i32* %digits.addr.bn_mod_inv.Clone, align 4
  %arraydecay20.bn_mod_inv.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %v3.bn_mod_inv.Clone, i32 0, i32 0
  %arraydecay21.bn_mod_inv.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %u3.bn_mod_inv.Clone, i32 0, i32 0
  call void @bn_assign(i32* %arraydecay21.bn_mod_inv.Clone, i32* %arraydecay20.bn_mod_inv.Clone, i32 %313)
  %314 = load i32, i32* %digits.addr.bn_mod_inv.Clone, align 4
  %arraydecay22.bn_mod_inv.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %t3.bn_mod_inv.Clone, i32 0, i32 0
  %arraydecay23.bn_mod_inv.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %v3.bn_mod_inv.Clone, i32 0, i32 0
  call void @bn_assign(i32* %arraydecay23.bn_mod_inv.Clone, i32* %arraydecay22.bn_mod_inv.Clone, i32 %314)
  %315 = load i32, i32* %u1_sign.bn_mod_inv.Clone, align 4
  %sub.bn_mod_inv.Clone = sub nsw i32 0, %315
  store i32 %sub.bn_mod_inv.Clone, i32* %u1_sign.bn_mod_inv.Clone, align 4
  br label %while.cond.bn_mod_inv.Clone

while.end.bn_mod_inv.Clone:                       ; preds = %while.cond.Split.bn_mod_inv.Clone
  %316 = load i32, i32* %u1_sign.bn_mod_inv.Clone, align 4
  %cmp.bn_mod_inv.Clone = icmp slt i32 %316, 0
  br i1 %cmp.bn_mod_inv.Clone, label %if.then.bn_mod_inv.Clone, label %if.else.bn_mod_inv.Clone

if.then.bn_mod_inv.Clone:                         ; preds = %while.end.bn_mod_inv.Clone
  %317 = load i32, i32* %digits.addr.bn_mod_inv.Clone, align 4
  %arraydecay24.bn_mod_inv.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %u1.bn_mod_inv.Clone, i32 0, i32 0
  %318 = load i32*, i32** %c.addr.bn_mod_inv.Clone, align 4
  %319 = load i32*, i32** %a.addr.bn_mod_inv.Clone, align 4
  %call25.bn_mod_inv.Clone = call i32 @bn_sub(i32* %319, i32* %318, i32* %arraydecay24.bn_mod_inv.Clone, i32 %317)
  br label %if.end.bn_mod_inv.Clone

if.else.bn_mod_inv.Clone:                         ; preds = %while.end.bn_mod_inv.Clone
  %320 = load i32, i32* %digits.addr.bn_mod_inv.Clone, align 4
  %arraydecay26.bn_mod_inv.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %u1.bn_mod_inv.Clone, i32 0, i32 0
  %321 = load i32*, i32** %a.addr.bn_mod_inv.Clone, align 4
  call void @bn_assign(i32* %321, i32* %arraydecay26.bn_mod_inv.Clone, i32 %320)
  br label %if.end.bn_mod_inv.Clone

if.end.bn_mod_inv.Clone:                          ; preds = %if.else.bn_mod_inv.Clone, %if.then.bn_mod_inv.Clone
  %arraydecay27.bn_mod_inv.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %q.bn_mod_inv.Clone, i32 0, i32 0
  %322 = bitcast i32* %arraydecay27.bn_mod_inv.Clone to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %322, i8 0, i32 260, i1 false)
  %arraydecay28.bn_mod_inv.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %t1.bn_mod_inv.Clone, i32 0, i32 0
  %323 = bitcast i32* %arraydecay28.bn_mod_inv.Clone to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %323, i8 0, i32 260, i1 false)
  %arraydecay29.bn_mod_inv.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %t3.bn_mod_inv.Clone, i32 0, i32 0
  %324 = bitcast i32* %arraydecay29.bn_mod_inv.Clone to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %324, i8 0, i32 260, i1 false)
  %arraydecay30.bn_mod_inv.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %u1.bn_mod_inv.Clone, i32 0, i32 0
  %325 = bitcast i32* %arraydecay30.bn_mod_inv.Clone to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %325, i8 0, i32 260, i1 false)
  %arraydecay31.bn_mod_inv.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %u3.bn_mod_inv.Clone, i32 0, i32 0
  %326 = bitcast i32* %arraydecay31.bn_mod_inv.Clone to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %326, i8 0, i32 260, i1 false)
  %arraydecay32.bn_mod_inv.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %v1.bn_mod_inv.Clone, i32 0, i32 0
  %327 = bitcast i32* %arraydecay32.bn_mod_inv.Clone to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %327, i8 0, i32 260, i1 false)
  %arraydecay33.bn_mod_inv.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %v3.bn_mod_inv.Clone, i32 0, i32 0
  %328 = bitcast i32* %arraydecay33.bn_mod_inv.Clone to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %328, i8 0, i32 260, i1 false)
  %arraydecay34.bn_mod_inv.Clone = getelementptr inbounds [130 x i32], [130 x i32]* %w.bn_mod_inv.Clone, i32 0, i32 0
  %329 = bitcast i32* %arraydecay34.bn_mod_inv.Clone to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %329, i8 0, i32 520, i1 false)
  br label %if.end84.Clone.Split.Split316.Split

if.end84.Clone.Split.Split316.Split:              ; preds = %if.end.bn_mod_inv.Clone
  %330 = load i32, i32* %pdigits.Clone, align 4
  %arraydecay107.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %p_minus1.Clone, i32 0, i32 0
  %331 = load i32, i32* %ndigits.Clone, align 4
  %arraydecay108.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %d.Clone, i32 0, i32 0
  %arraydecay109.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %dp.Clone, i32 0, i32 0
  br label %entry.bn_mod.Clone307

entry.bn_mod.Clone307:                            ; preds = %if.end84.Clone.Split.Split316.Split
  %cdigits.addr.bn_mod.Clone308 = alloca i32, align 4
  %c.addr.bn_mod.Clone309 = alloca i32*, align 4
  %bdigits.addr.bn_mod.Clone310 = alloca i32, align 4
  %b.addr.bn_mod.Clone311 = alloca i32*, align 4
  %a.addr.bn_mod.Clone312 = alloca i32*, align 4
  %t.bn_mod.Clone313 = alloca [130 x i32], align 4
  store i32 %330, i32* %cdigits.addr.bn_mod.Clone308, align 4
  store i32* %arraydecay107.Clone, i32** %c.addr.bn_mod.Clone309, align 4
  store i32 %331, i32* %bdigits.addr.bn_mod.Clone310, align 4
  store i32* %arraydecay108.Clone, i32** %b.addr.bn_mod.Clone311, align 4
  store i32* %arraydecay109.Clone, i32** %a.addr.bn_mod.Clone312, align 4
  %332 = bitcast [130 x i32]* %t.bn_mod.Clone313 to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %332, i8 0, i32 520, i1 false)
  %333 = load i32, i32* %cdigits.addr.bn_mod.Clone308, align 4
  %334 = load i32*, i32** %c.addr.bn_mod.Clone309, align 4
  %335 = load i32, i32* %bdigits.addr.bn_mod.Clone310, align 4
  %336 = load i32*, i32** %b.addr.bn_mod.Clone311, align 4
  %337 = load i32*, i32** %a.addr.bn_mod.Clone312, align 4
  %arraydecay.bn_mod.Clone314 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mod.Clone313, i32 0, i32 0
  call void @bn_div(i32* %arraydecay.bn_mod.Clone314, i32* %337, i32* %336, i32 %335, i32* %334, i32 %333)
  %arraydecay1.bn_mod.Clone315 = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mod.Clone313, i32 0, i32 0
  %338 = bitcast i32* %arraydecay1.bn_mod.Clone315 to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %338, i8 0, i32 520, i1 false)
  br label %if.end84.Clone.Split.Split306

if.end84.Clone.Split.Split306:                    ; preds = %entry.bn_mod.Clone307
  %339 = load i32, i32* %pdigits.Clone, align 4
  %arraydecay110.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %q_minus1.Clone, i32 0, i32 0
  %340 = load i32, i32* %ndigits.Clone, align 4
  %arraydecay111.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %d.Clone, i32 0, i32 0
  %arraydecay112.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %dq.Clone, i32 0, i32 0
  br label %entry.bn_mod.Clone

entry.bn_mod.Clone:                               ; preds = %if.end84.Clone.Split.Split306
  %cdigits.addr.bn_mod.Clone = alloca i32, align 4
  %c.addr.bn_mod.Clone = alloca i32*, align 4
  %bdigits.addr.bn_mod.Clone = alloca i32, align 4
  %b.addr.bn_mod.Clone = alloca i32*, align 4
  %a.addr.bn_mod.Clone = alloca i32*, align 4
  %t.bn_mod.Clone = alloca [130 x i32], align 4
  store i32 %339, i32* %cdigits.addr.bn_mod.Clone, align 4
  store i32* %arraydecay110.Clone, i32** %c.addr.bn_mod.Clone, align 4
  store i32 %340, i32* %bdigits.addr.bn_mod.Clone, align 4
  store i32* %arraydecay111.Clone, i32** %b.addr.bn_mod.Clone, align 4
  store i32* %arraydecay112.Clone, i32** %a.addr.bn_mod.Clone, align 4
  %341 = bitcast [130 x i32]* %t.bn_mod.Clone to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %341, i8 0, i32 520, i1 false)
  %342 = load i32, i32* %cdigits.addr.bn_mod.Clone, align 4
  %343 = load i32*, i32** %c.addr.bn_mod.Clone, align 4
  %344 = load i32, i32* %bdigits.addr.bn_mod.Clone, align 4
  %345 = load i32*, i32** %b.addr.bn_mod.Clone, align 4
  %346 = load i32*, i32** %a.addr.bn_mod.Clone, align 4
  %arraydecay.bn_mod.Clone = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mod.Clone, i32 0, i32 0
  call void @bn_div(i32* %arraydecay.bn_mod.Clone, i32* %346, i32* %345, i32 %344, i32* %343, i32 %342)
  %arraydecay1.bn_mod.Clone = getelementptr inbounds [130 x i32], [130 x i32]* %t.bn_mod.Clone, i32 0, i32 0
  %347 = bitcast i32* %arraydecay1.bn_mod.Clone to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %347, i8 0, i32 520, i1 false)
  br label %if.end84.Clone.Split.Split305

if.end84.Clone.Split.Split305:                    ; preds = %entry.bn_mod.Clone
  %348 = load i32, i32* %key_bits.addr.Clone, align 4
  %349 = load %struct.rsa_sk_t*, %struct.rsa_sk_t** %sk.addr.Clone, align 4
  %bits.Clone = getelementptr inbounds %struct.rsa_sk_t, %struct.rsa_sk_t* %349, i32 0, i32 0
  store i32 %348, i32* %bits.Clone, align 4
  %350 = load %struct.rsa_pk_t*, %struct.rsa_pk_t** %pk.addr.Clone, align 4
  %bits113.Clone = getelementptr inbounds %struct.rsa_pk_t, %struct.rsa_pk_t* %350, i32 0, i32 0
  store i32 %348, i32* %bits113.Clone, align 4
  %351 = load i32, i32* %ndigits.Clone, align 4
  %arraydecay114.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %n.Clone, i32 0, i32 0
  %352 = load %struct.rsa_pk_t*, %struct.rsa_pk_t** %pk.addr.Clone, align 4
  %modulus.Clone = getelementptr inbounds %struct.rsa_pk_t, %struct.rsa_pk_t* %352, i32 0, i32 1
  %arraydecay115.Clone = getelementptr inbounds [256 x i8], [256 x i8]* %modulus.Clone, i32 0, i32 0
  br label %entry.bn_encode.Clone265

entry.bn_encode.Clone265:                         ; preds = %if.end84.Clone.Split.Split305
  %digits.addr.bn_encode.Clone266 = alloca i32, align 4
  %bn.addr.bn_encode.Clone267 = alloca i32*, align 4
  %size.addr.bn_encode.Clone268 = alloca i32, align 4
  %hexarr.addr.bn_encode.Clone269 = alloca i8*, align 4
  %t.bn_encode.Clone270 = alloca i32, align 4
  %j.bn_encode.Clone271 = alloca i32, align 4
  %i.bn_encode.Clone272 = alloca i32, align 4
  %u.bn_encode.Clone273 = alloca i32, align 4
  store i32 %351, i32* %digits.addr.bn_encode.Clone266, align 4
  store i32* %arraydecay114.Clone, i32** %bn.addr.bn_encode.Clone267, align 4
  store i32 256, i32* %size.addr.bn_encode.Clone268, align 4
  store i8* %arraydecay115.Clone, i8** %hexarr.addr.bn_encode.Clone269, align 4
  store i32 0, i32* %i.bn_encode.Clone272, align 4
  %353 = load i32, i32* %size.addr.bn_encode.Clone268, align 4
  %sub.bn_encode.Clone274 = sub i32 %353, 1
  store i32 %sub.bn_encode.Clone274, i32* %j.bn_encode.Clone271, align 4
  br label %for.cond.bn_encode.Clone275

for.cond.bn_encode.Clone275:                      ; preds = %for.inc9.bn_encode.Clone295, %entry.bn_encode.Clone265
  %354 = load i32, i32* %i.bn_encode.Clone272, align 4
  %355 = load i32, i32* %digits.addr.bn_encode.Clone266, align 4
  %cmp.bn_encode.Clone276 = icmp ult i32 %354, %355
  br i1 %cmp.bn_encode.Clone276, label %land.rhs.bn_encode.Clone277, label %land.end.bn_encode.Clone279

land.rhs.bn_encode.Clone277:                      ; preds = %for.cond.bn_encode.Clone275
  %356 = load i32, i32* %j.bn_encode.Clone271, align 4
  %cmp1.bn_encode.Clone278 = icmp sge i32 %356, 0
  br label %land.end.bn_encode.Clone279

land.end.bn_encode.Clone279:                      ; preds = %land.rhs.bn_encode.Clone277, %for.cond.bn_encode.Clone275
  %357 = phi i1 [ false, %for.cond.bn_encode.Clone275 ], [ %cmp1.bn_encode.Clone278, %land.rhs.bn_encode.Clone277 ]
  br i1 %357, label %for.body.bn_encode.Clone280, label %for.end10.bn_encode.Clone297

for.body.bn_encode.Clone280:                      ; preds = %land.end.bn_encode.Clone279
  %358 = load i32*, i32** %bn.addr.bn_encode.Clone267, align 4
  %359 = load i32, i32* %i.bn_encode.Clone272, align 4
  %arrayidx.bn_encode.Clone281 = getelementptr inbounds i32, i32* %358, i32 %359
  %360 = load i32, i32* %arrayidx.bn_encode.Clone281, align 4
  store i32 %360, i32* %t.bn_encode.Clone270, align 4
  store i32 0, i32* %u.bn_encode.Clone273, align 4
  br label %for.cond2.bn_encode.Clone282

for.cond2.bn_encode.Clone282:                     ; preds = %for.inc.bn_encode.Clone291, %for.body.bn_encode.Clone280
  %361 = load i32, i32* %j.bn_encode.Clone271, align 4
  %cmp3.bn_encode.Clone283 = icmp sge i32 %361, 0
  br i1 %cmp3.bn_encode.Clone283, label %land.rhs4.bn_encode.Clone284, label %land.end6.bn_encode.Clone286

land.rhs4.bn_encode.Clone284:                     ; preds = %for.cond2.bn_encode.Clone282
  %362 = load i32, i32* %u.bn_encode.Clone273, align 4
  %cmp5.bn_encode.Clone285 = icmp ult i32 %362, 32
  br label %land.end6.bn_encode.Clone286

land.end6.bn_encode.Clone286:                     ; preds = %land.rhs4.bn_encode.Clone284, %for.cond2.bn_encode.Clone282
  %363 = phi i1 [ false, %for.cond2.bn_encode.Clone282 ], [ %cmp5.bn_encode.Clone285, %land.rhs4.bn_encode.Clone284 ]
  br i1 %363, label %for.body7.bn_encode.Clone287, label %for.end.bn_encode.Clone294

for.body7.bn_encode.Clone287:                     ; preds = %land.end6.bn_encode.Clone286
  %364 = load i32, i32* %t.bn_encode.Clone270, align 4
  %365 = load i32, i32* %u.bn_encode.Clone273, align 4
  %shr.bn_encode.Clone288 = lshr i32 %364, %365
  %conv.bn_encode.Clone289 = trunc i32 %shr.bn_encode.Clone288 to i8
  %366 = load i8*, i8** %hexarr.addr.bn_encode.Clone269, align 4
  %367 = load i32, i32* %j.bn_encode.Clone271, align 4
  %arrayidx8.bn_encode.Clone290 = getelementptr inbounds i8, i8* %366, i32 %367
  store i8 %conv.bn_encode.Clone289, i8* %arrayidx8.bn_encode.Clone290, align 1
  br label %for.inc.bn_encode.Clone291

for.inc.bn_encode.Clone291:                       ; preds = %for.body7.bn_encode.Clone287
  %368 = load i32, i32* %j.bn_encode.Clone271, align 4
  %dec.bn_encode.Clone292 = add nsw i32 %368, -1
  store i32 %dec.bn_encode.Clone292, i32* %j.bn_encode.Clone271, align 4
  %369 = load i32, i32* %u.bn_encode.Clone273, align 4
  %add.bn_encode.Clone293 = add i32 %369, 8
  store i32 %add.bn_encode.Clone293, i32* %u.bn_encode.Clone273, align 4
  br label %for.cond2.bn_encode.Clone282

for.end.bn_encode.Clone294:                       ; preds = %land.end6.bn_encode.Clone286
  br label %for.inc9.bn_encode.Clone295

for.inc9.bn_encode.Clone295:                      ; preds = %for.end.bn_encode.Clone294
  %370 = load i32, i32* %i.bn_encode.Clone272, align 4
  %inc.bn_encode.Clone296 = add i32 %370, 1
  store i32 %inc.bn_encode.Clone296, i32* %i.bn_encode.Clone272, align 4
  br label %for.cond.bn_encode.Clone275

for.end10.bn_encode.Clone297:                     ; preds = %land.end.bn_encode.Clone279
  br label %for.cond11.bn_encode.Clone298

for.cond11.bn_encode.Clone298:                    ; preds = %for.inc16.bn_encode.Clone302, %for.end10.bn_encode.Clone297
  %371 = load i32, i32* %j.bn_encode.Clone271, align 4
  %cmp12.bn_encode.Clone299 = icmp sge i32 %371, 0
  br i1 %cmp12.bn_encode.Clone299, label %for.body14.bn_encode.Clone300, label %for.end18.bn_encode.Clone304

for.body14.bn_encode.Clone300:                    ; preds = %for.cond11.bn_encode.Clone298
  %372 = load i8*, i8** %hexarr.addr.bn_encode.Clone269, align 4
  %373 = load i32, i32* %j.bn_encode.Clone271, align 4
  %arrayidx15.bn_encode.Clone301 = getelementptr inbounds i8, i8* %372, i32 %373
  store i8 0, i8* %arrayidx15.bn_encode.Clone301, align 1
  br label %for.inc16.bn_encode.Clone302

for.inc16.bn_encode.Clone302:                     ; preds = %for.body14.bn_encode.Clone300
  %374 = load i32, i32* %j.bn_encode.Clone271, align 4
  %dec17.bn_encode.Clone303 = add nsw i32 %374, -1
  store i32 %dec17.bn_encode.Clone303, i32* %j.bn_encode.Clone271, align 4
  br label %for.cond11.bn_encode.Clone298

for.end18.bn_encode.Clone304:                     ; preds = %for.cond11.bn_encode.Clone298
  br label %if.end84.Clone.Split.Split264

if.end84.Clone.Split.Split264:                    ; preds = %for.end18.bn_encode.Clone304
  %arraydecay116.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %e.Clone, i32 0, i32 0
  %375 = load %struct.rsa_pk_t*, %struct.rsa_pk_t** %pk.addr.Clone, align 4
  %exponent.Clone = getelementptr inbounds %struct.rsa_pk_t, %struct.rsa_pk_t* %375, i32 0, i32 2
  %arraydecay117.Clone = getelementptr inbounds [256 x i8], [256 x i8]* %exponent.Clone, i32 0, i32 0
  br label %entry.bn_encode.Clone224

entry.bn_encode.Clone224:                         ; preds = %if.end84.Clone.Split.Split264
  %digits.addr.bn_encode.Clone225 = alloca i32, align 4
  %bn.addr.bn_encode.Clone226 = alloca i32*, align 4
  %size.addr.bn_encode.Clone227 = alloca i32, align 4
  %hexarr.addr.bn_encode.Clone228 = alloca i8*, align 4
  %t.bn_encode.Clone229 = alloca i32, align 4
  %j.bn_encode.Clone230 = alloca i32, align 4
  %i.bn_encode.Clone231 = alloca i32, align 4
  %u.bn_encode.Clone232 = alloca i32, align 4
  store i32 1, i32* %digits.addr.bn_encode.Clone225, align 4
  store i32* %arraydecay116.Clone, i32** %bn.addr.bn_encode.Clone226, align 4
  store i32 256, i32* %size.addr.bn_encode.Clone227, align 4
  store i8* %arraydecay117.Clone, i8** %hexarr.addr.bn_encode.Clone228, align 4
  store i32 0, i32* %i.bn_encode.Clone231, align 4
  %376 = load i32, i32* %size.addr.bn_encode.Clone227, align 4
  %sub.bn_encode.Clone233 = sub i32 %376, 1
  store i32 %sub.bn_encode.Clone233, i32* %j.bn_encode.Clone230, align 4
  br label %for.cond.bn_encode.Clone234

for.cond.bn_encode.Clone234:                      ; preds = %for.inc9.bn_encode.Clone254, %entry.bn_encode.Clone224
  %377 = load i32, i32* %i.bn_encode.Clone231, align 4
  %378 = load i32, i32* %digits.addr.bn_encode.Clone225, align 4
  %cmp.bn_encode.Clone235 = icmp ult i32 %377, %378
  br i1 %cmp.bn_encode.Clone235, label %land.rhs.bn_encode.Clone236, label %land.end.bn_encode.Clone238

land.rhs.bn_encode.Clone236:                      ; preds = %for.cond.bn_encode.Clone234
  %379 = load i32, i32* %j.bn_encode.Clone230, align 4
  %cmp1.bn_encode.Clone237 = icmp sge i32 %379, 0
  br label %land.end.bn_encode.Clone238

land.end.bn_encode.Clone238:                      ; preds = %land.rhs.bn_encode.Clone236, %for.cond.bn_encode.Clone234
  %380 = phi i1 [ false, %for.cond.bn_encode.Clone234 ], [ %cmp1.bn_encode.Clone237, %land.rhs.bn_encode.Clone236 ]
  br i1 %380, label %for.body.bn_encode.Clone239, label %for.end10.bn_encode.Clone256

for.body.bn_encode.Clone239:                      ; preds = %land.end.bn_encode.Clone238
  %381 = load i32*, i32** %bn.addr.bn_encode.Clone226, align 4
  %382 = load i32, i32* %i.bn_encode.Clone231, align 4
  %arrayidx.bn_encode.Clone240 = getelementptr inbounds i32, i32* %381, i32 %382
  %383 = load i32, i32* %arrayidx.bn_encode.Clone240, align 4
  store i32 %383, i32* %t.bn_encode.Clone229, align 4
  store i32 0, i32* %u.bn_encode.Clone232, align 4
  br label %for.cond2.bn_encode.Clone241

for.cond2.bn_encode.Clone241:                     ; preds = %for.inc.bn_encode.Clone250, %for.body.bn_encode.Clone239
  %384 = load i32, i32* %j.bn_encode.Clone230, align 4
  %cmp3.bn_encode.Clone242 = icmp sge i32 %384, 0
  br i1 %cmp3.bn_encode.Clone242, label %land.rhs4.bn_encode.Clone243, label %land.end6.bn_encode.Clone245

land.rhs4.bn_encode.Clone243:                     ; preds = %for.cond2.bn_encode.Clone241
  %385 = load i32, i32* %u.bn_encode.Clone232, align 4
  %cmp5.bn_encode.Clone244 = icmp ult i32 %385, 32
  br label %land.end6.bn_encode.Clone245

land.end6.bn_encode.Clone245:                     ; preds = %land.rhs4.bn_encode.Clone243, %for.cond2.bn_encode.Clone241
  %386 = phi i1 [ false, %for.cond2.bn_encode.Clone241 ], [ %cmp5.bn_encode.Clone244, %land.rhs4.bn_encode.Clone243 ]
  br i1 %386, label %for.body7.bn_encode.Clone246, label %for.end.bn_encode.Clone253

for.body7.bn_encode.Clone246:                     ; preds = %land.end6.bn_encode.Clone245
  %387 = load i32, i32* %t.bn_encode.Clone229, align 4
  %388 = load i32, i32* %u.bn_encode.Clone232, align 4
  %shr.bn_encode.Clone247 = lshr i32 %387, %388
  %conv.bn_encode.Clone248 = trunc i32 %shr.bn_encode.Clone247 to i8
  %389 = load i8*, i8** %hexarr.addr.bn_encode.Clone228, align 4
  %390 = load i32, i32* %j.bn_encode.Clone230, align 4
  %arrayidx8.bn_encode.Clone249 = getelementptr inbounds i8, i8* %389, i32 %390
  store i8 %conv.bn_encode.Clone248, i8* %arrayidx8.bn_encode.Clone249, align 1
  br label %for.inc.bn_encode.Clone250

for.inc.bn_encode.Clone250:                       ; preds = %for.body7.bn_encode.Clone246
  %391 = load i32, i32* %j.bn_encode.Clone230, align 4
  %dec.bn_encode.Clone251 = add nsw i32 %391, -1
  store i32 %dec.bn_encode.Clone251, i32* %j.bn_encode.Clone230, align 4
  %392 = load i32, i32* %u.bn_encode.Clone232, align 4
  %add.bn_encode.Clone252 = add i32 %392, 8
  store i32 %add.bn_encode.Clone252, i32* %u.bn_encode.Clone232, align 4
  br label %for.cond2.bn_encode.Clone241

for.end.bn_encode.Clone253:                       ; preds = %land.end6.bn_encode.Clone245
  br label %for.inc9.bn_encode.Clone254

for.inc9.bn_encode.Clone254:                      ; preds = %for.end.bn_encode.Clone253
  %393 = load i32, i32* %i.bn_encode.Clone231, align 4
  %inc.bn_encode.Clone255 = add i32 %393, 1
  store i32 %inc.bn_encode.Clone255, i32* %i.bn_encode.Clone231, align 4
  br label %for.cond.bn_encode.Clone234

for.end10.bn_encode.Clone256:                     ; preds = %land.end.bn_encode.Clone238
  br label %for.cond11.bn_encode.Clone257

for.cond11.bn_encode.Clone257:                    ; preds = %for.inc16.bn_encode.Clone261, %for.end10.bn_encode.Clone256
  %394 = load i32, i32* %j.bn_encode.Clone230, align 4
  %cmp12.bn_encode.Clone258 = icmp sge i32 %394, 0
  br i1 %cmp12.bn_encode.Clone258, label %for.body14.bn_encode.Clone259, label %for.end18.bn_encode.Clone263

for.body14.bn_encode.Clone259:                    ; preds = %for.cond11.bn_encode.Clone257
  %395 = load i8*, i8** %hexarr.addr.bn_encode.Clone228, align 4
  %396 = load i32, i32* %j.bn_encode.Clone230, align 4
  %arrayidx15.bn_encode.Clone260 = getelementptr inbounds i8, i8* %395, i32 %396
  store i8 0, i8* %arrayidx15.bn_encode.Clone260, align 1
  br label %for.inc16.bn_encode.Clone261

for.inc16.bn_encode.Clone261:                     ; preds = %for.body14.bn_encode.Clone259
  %397 = load i32, i32* %j.bn_encode.Clone230, align 4
  %dec17.bn_encode.Clone262 = add nsw i32 %397, -1
  store i32 %dec17.bn_encode.Clone262, i32* %j.bn_encode.Clone230, align 4
  br label %for.cond11.bn_encode.Clone257

for.end18.bn_encode.Clone263:                     ; preds = %for.cond11.bn_encode.Clone257
  br label %if.end84.Clone.Split.Split223

if.end84.Clone.Split.Split223:                    ; preds = %for.end18.bn_encode.Clone263
  %398 = load %struct.rsa_sk_t*, %struct.rsa_sk_t** %sk.addr.Clone, align 4
  %modulus118.Clone = getelementptr inbounds %struct.rsa_sk_t, %struct.rsa_sk_t* %398, i32 0, i32 1
  %arraydecay119.Clone = getelementptr inbounds [256 x i8], [256 x i8]* %modulus118.Clone, i32 0, i32 0
  %399 = load %struct.rsa_pk_t*, %struct.rsa_pk_t** %pk.addr.Clone, align 4
  %modulus120.Clone = getelementptr inbounds %struct.rsa_pk_t, %struct.rsa_pk_t* %399, i32 0, i32 1
  %arraydecay121.Clone = getelementptr inbounds [256 x i8], [256 x i8]* %modulus120.Clone, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %arraydecay119.Clone, i8* align 4 %arraydecay121.Clone, i32 256, i1 false)
  %400 = load %struct.rsa_sk_t*, %struct.rsa_sk_t** %sk.addr.Clone, align 4
  %public_exponet.Clone = getelementptr inbounds %struct.rsa_sk_t, %struct.rsa_sk_t* %400, i32 0, i32 2
  %arraydecay122.Clone = getelementptr inbounds [256 x i8], [256 x i8]* %public_exponet.Clone, i32 0, i32 0
  %401 = load %struct.rsa_pk_t*, %struct.rsa_pk_t** %pk.addr.Clone, align 4
  %exponent123.Clone = getelementptr inbounds %struct.rsa_pk_t, %struct.rsa_pk_t* %401, i32 0, i32 2
  %arraydecay124.Clone = getelementptr inbounds [256 x i8], [256 x i8]* %exponent123.Clone, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %arraydecay122.Clone, i8* align 4 %arraydecay124.Clone, i32 256, i1 false)
  %402 = load i32, i32* %ndigits.Clone, align 4
  %arraydecay125.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %d.Clone, i32 0, i32 0
  %403 = load %struct.rsa_sk_t*, %struct.rsa_sk_t** %sk.addr.Clone, align 4
  %exponent126.Clone = getelementptr inbounds %struct.rsa_sk_t, %struct.rsa_sk_t* %403, i32 0, i32 3
  %arraydecay127.Clone = getelementptr inbounds [256 x i8], [256 x i8]* %exponent126.Clone, i32 0, i32 0
  br label %entry.bn_encode.Clone183

entry.bn_encode.Clone183:                         ; preds = %if.end84.Clone.Split.Split223
  %digits.addr.bn_encode.Clone184 = alloca i32, align 4
  %bn.addr.bn_encode.Clone185 = alloca i32*, align 4
  %size.addr.bn_encode.Clone186 = alloca i32, align 4
  %hexarr.addr.bn_encode.Clone187 = alloca i8*, align 4
  %t.bn_encode.Clone188 = alloca i32, align 4
  %j.bn_encode.Clone189 = alloca i32, align 4
  %i.bn_encode.Clone190 = alloca i32, align 4
  %u.bn_encode.Clone191 = alloca i32, align 4
  store i32 %402, i32* %digits.addr.bn_encode.Clone184, align 4
  store i32* %arraydecay125.Clone, i32** %bn.addr.bn_encode.Clone185, align 4
  store i32 256, i32* %size.addr.bn_encode.Clone186, align 4
  store i8* %arraydecay127.Clone, i8** %hexarr.addr.bn_encode.Clone187, align 4
  store i32 0, i32* %i.bn_encode.Clone190, align 4
  %404 = load i32, i32* %size.addr.bn_encode.Clone186, align 4
  %sub.bn_encode.Clone192 = sub i32 %404, 1
  store i32 %sub.bn_encode.Clone192, i32* %j.bn_encode.Clone189, align 4
  br label %for.cond.bn_encode.Clone193

for.cond.bn_encode.Clone193:                      ; preds = %for.inc9.bn_encode.Clone213, %entry.bn_encode.Clone183
  %405 = load i32, i32* %i.bn_encode.Clone190, align 4
  %406 = load i32, i32* %digits.addr.bn_encode.Clone184, align 4
  %cmp.bn_encode.Clone194 = icmp ult i32 %405, %406
  br i1 %cmp.bn_encode.Clone194, label %land.rhs.bn_encode.Clone195, label %land.end.bn_encode.Clone197

land.rhs.bn_encode.Clone195:                      ; preds = %for.cond.bn_encode.Clone193
  %407 = load i32, i32* %j.bn_encode.Clone189, align 4
  %cmp1.bn_encode.Clone196 = icmp sge i32 %407, 0
  br label %land.end.bn_encode.Clone197

land.end.bn_encode.Clone197:                      ; preds = %land.rhs.bn_encode.Clone195, %for.cond.bn_encode.Clone193
  %408 = phi i1 [ false, %for.cond.bn_encode.Clone193 ], [ %cmp1.bn_encode.Clone196, %land.rhs.bn_encode.Clone195 ]
  br i1 %408, label %for.body.bn_encode.Clone198, label %for.end10.bn_encode.Clone215

for.body.bn_encode.Clone198:                      ; preds = %land.end.bn_encode.Clone197
  %409 = load i32*, i32** %bn.addr.bn_encode.Clone185, align 4
  %410 = load i32, i32* %i.bn_encode.Clone190, align 4
  %arrayidx.bn_encode.Clone199 = getelementptr inbounds i32, i32* %409, i32 %410
  %411 = load i32, i32* %arrayidx.bn_encode.Clone199, align 4
  store i32 %411, i32* %t.bn_encode.Clone188, align 4
  store i32 0, i32* %u.bn_encode.Clone191, align 4
  br label %for.cond2.bn_encode.Clone200

for.cond2.bn_encode.Clone200:                     ; preds = %for.inc.bn_encode.Clone209, %for.body.bn_encode.Clone198
  %412 = load i32, i32* %j.bn_encode.Clone189, align 4
  %cmp3.bn_encode.Clone201 = icmp sge i32 %412, 0
  br i1 %cmp3.bn_encode.Clone201, label %land.rhs4.bn_encode.Clone202, label %land.end6.bn_encode.Clone204

land.rhs4.bn_encode.Clone202:                     ; preds = %for.cond2.bn_encode.Clone200
  %413 = load i32, i32* %u.bn_encode.Clone191, align 4
  %cmp5.bn_encode.Clone203 = icmp ult i32 %413, 32
  br label %land.end6.bn_encode.Clone204

land.end6.bn_encode.Clone204:                     ; preds = %land.rhs4.bn_encode.Clone202, %for.cond2.bn_encode.Clone200
  %414 = phi i1 [ false, %for.cond2.bn_encode.Clone200 ], [ %cmp5.bn_encode.Clone203, %land.rhs4.bn_encode.Clone202 ]
  br i1 %414, label %for.body7.bn_encode.Clone205, label %for.end.bn_encode.Clone212

for.body7.bn_encode.Clone205:                     ; preds = %land.end6.bn_encode.Clone204
  %415 = load i32, i32* %t.bn_encode.Clone188, align 4
  %416 = load i32, i32* %u.bn_encode.Clone191, align 4
  %shr.bn_encode.Clone206 = lshr i32 %415, %416
  %conv.bn_encode.Clone207 = trunc i32 %shr.bn_encode.Clone206 to i8
  %417 = load i8*, i8** %hexarr.addr.bn_encode.Clone187, align 4
  %418 = load i32, i32* %j.bn_encode.Clone189, align 4
  %arrayidx8.bn_encode.Clone208 = getelementptr inbounds i8, i8* %417, i32 %418
  store i8 %conv.bn_encode.Clone207, i8* %arrayidx8.bn_encode.Clone208, align 1
  br label %for.inc.bn_encode.Clone209

for.inc.bn_encode.Clone209:                       ; preds = %for.body7.bn_encode.Clone205
  %419 = load i32, i32* %j.bn_encode.Clone189, align 4
  %dec.bn_encode.Clone210 = add nsw i32 %419, -1
  store i32 %dec.bn_encode.Clone210, i32* %j.bn_encode.Clone189, align 4
  %420 = load i32, i32* %u.bn_encode.Clone191, align 4
  %add.bn_encode.Clone211 = add i32 %420, 8
  store i32 %add.bn_encode.Clone211, i32* %u.bn_encode.Clone191, align 4
  br label %for.cond2.bn_encode.Clone200

for.end.bn_encode.Clone212:                       ; preds = %land.end6.bn_encode.Clone204
  br label %for.inc9.bn_encode.Clone213

for.inc9.bn_encode.Clone213:                      ; preds = %for.end.bn_encode.Clone212
  %421 = load i32, i32* %i.bn_encode.Clone190, align 4
  %inc.bn_encode.Clone214 = add i32 %421, 1
  store i32 %inc.bn_encode.Clone214, i32* %i.bn_encode.Clone190, align 4
  br label %for.cond.bn_encode.Clone193

for.end10.bn_encode.Clone215:                     ; preds = %land.end.bn_encode.Clone197
  br label %for.cond11.bn_encode.Clone216

for.cond11.bn_encode.Clone216:                    ; preds = %for.inc16.bn_encode.Clone220, %for.end10.bn_encode.Clone215
  %422 = load i32, i32* %j.bn_encode.Clone189, align 4
  %cmp12.bn_encode.Clone217 = icmp sge i32 %422, 0
  br i1 %cmp12.bn_encode.Clone217, label %for.body14.bn_encode.Clone218, label %for.end18.bn_encode.Clone222

for.body14.bn_encode.Clone218:                    ; preds = %for.cond11.bn_encode.Clone216
  %423 = load i8*, i8** %hexarr.addr.bn_encode.Clone187, align 4
  %424 = load i32, i32* %j.bn_encode.Clone189, align 4
  %arrayidx15.bn_encode.Clone219 = getelementptr inbounds i8, i8* %423, i32 %424
  store i8 0, i8* %arrayidx15.bn_encode.Clone219, align 1
  br label %for.inc16.bn_encode.Clone220

for.inc16.bn_encode.Clone220:                     ; preds = %for.body14.bn_encode.Clone218
  %425 = load i32, i32* %j.bn_encode.Clone189, align 4
  %dec17.bn_encode.Clone221 = add nsw i32 %425, -1
  store i32 %dec17.bn_encode.Clone221, i32* %j.bn_encode.Clone189, align 4
  br label %for.cond11.bn_encode.Clone216

for.end18.bn_encode.Clone222:                     ; preds = %for.cond11.bn_encode.Clone216
  br label %if.end84.Clone.Split.Split182

if.end84.Clone.Split.Split182:                    ; preds = %for.end18.bn_encode.Clone222
  %426 = load i32, i32* %pdigits.Clone, align 4
  %arraydecay128.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %p.Clone, i32 0, i32 0
  %427 = load %struct.rsa_sk_t*, %struct.rsa_sk_t** %sk.addr.Clone, align 4
  %prime1.Clone = getelementptr inbounds %struct.rsa_sk_t, %struct.rsa_sk_t* %427, i32 0, i32 4
  %arraydecay129.Clone = getelementptr inbounds [128 x i8], [128 x i8]* %prime1.Clone, i32 0, i32 0
  br label %entry.bn_encode.Clone142

entry.bn_encode.Clone142:                         ; preds = %if.end84.Clone.Split.Split182
  %digits.addr.bn_encode.Clone143 = alloca i32, align 4
  %bn.addr.bn_encode.Clone144 = alloca i32*, align 4
  %size.addr.bn_encode.Clone145 = alloca i32, align 4
  %hexarr.addr.bn_encode.Clone146 = alloca i8*, align 4
  %t.bn_encode.Clone147 = alloca i32, align 4
  %j.bn_encode.Clone148 = alloca i32, align 4
  %i.bn_encode.Clone149 = alloca i32, align 4
  %u.bn_encode.Clone150 = alloca i32, align 4
  store i32 %426, i32* %digits.addr.bn_encode.Clone143, align 4
  store i32* %arraydecay128.Clone, i32** %bn.addr.bn_encode.Clone144, align 4
  store i32 128, i32* %size.addr.bn_encode.Clone145, align 4
  store i8* %arraydecay129.Clone, i8** %hexarr.addr.bn_encode.Clone146, align 4
  store i32 0, i32* %i.bn_encode.Clone149, align 4
  %428 = load i32, i32* %size.addr.bn_encode.Clone145, align 4
  %sub.bn_encode.Clone151 = sub i32 %428, 1
  store i32 %sub.bn_encode.Clone151, i32* %j.bn_encode.Clone148, align 4
  br label %for.cond.bn_encode.Clone152

for.cond.bn_encode.Clone152:                      ; preds = %for.inc9.bn_encode.Clone172, %entry.bn_encode.Clone142
  %429 = load i32, i32* %i.bn_encode.Clone149, align 4
  %430 = load i32, i32* %digits.addr.bn_encode.Clone143, align 4
  %cmp.bn_encode.Clone153 = icmp ult i32 %429, %430
  br i1 %cmp.bn_encode.Clone153, label %land.rhs.bn_encode.Clone154, label %land.end.bn_encode.Clone156

land.rhs.bn_encode.Clone154:                      ; preds = %for.cond.bn_encode.Clone152
  %431 = load i32, i32* %j.bn_encode.Clone148, align 4
  %cmp1.bn_encode.Clone155 = icmp sge i32 %431, 0
  br label %land.end.bn_encode.Clone156

land.end.bn_encode.Clone156:                      ; preds = %land.rhs.bn_encode.Clone154, %for.cond.bn_encode.Clone152
  %432 = phi i1 [ false, %for.cond.bn_encode.Clone152 ], [ %cmp1.bn_encode.Clone155, %land.rhs.bn_encode.Clone154 ]
  br i1 %432, label %for.body.bn_encode.Clone157, label %for.end10.bn_encode.Clone174

for.body.bn_encode.Clone157:                      ; preds = %land.end.bn_encode.Clone156
  %433 = load i32*, i32** %bn.addr.bn_encode.Clone144, align 4
  %434 = load i32, i32* %i.bn_encode.Clone149, align 4
  %arrayidx.bn_encode.Clone158 = getelementptr inbounds i32, i32* %433, i32 %434
  %435 = load i32, i32* %arrayidx.bn_encode.Clone158, align 4
  store i32 %435, i32* %t.bn_encode.Clone147, align 4
  store i32 0, i32* %u.bn_encode.Clone150, align 4
  br label %for.cond2.bn_encode.Clone159

for.cond2.bn_encode.Clone159:                     ; preds = %for.inc.bn_encode.Clone168, %for.body.bn_encode.Clone157
  %436 = load i32, i32* %j.bn_encode.Clone148, align 4
  %cmp3.bn_encode.Clone160 = icmp sge i32 %436, 0
  br i1 %cmp3.bn_encode.Clone160, label %land.rhs4.bn_encode.Clone161, label %land.end6.bn_encode.Clone163

land.rhs4.bn_encode.Clone161:                     ; preds = %for.cond2.bn_encode.Clone159
  %437 = load i32, i32* %u.bn_encode.Clone150, align 4
  %cmp5.bn_encode.Clone162 = icmp ult i32 %437, 32
  br label %land.end6.bn_encode.Clone163

land.end6.bn_encode.Clone163:                     ; preds = %land.rhs4.bn_encode.Clone161, %for.cond2.bn_encode.Clone159
  %438 = phi i1 [ false, %for.cond2.bn_encode.Clone159 ], [ %cmp5.bn_encode.Clone162, %land.rhs4.bn_encode.Clone161 ]
  br i1 %438, label %for.body7.bn_encode.Clone164, label %for.end.bn_encode.Clone171

for.body7.bn_encode.Clone164:                     ; preds = %land.end6.bn_encode.Clone163
  %439 = load i32, i32* %t.bn_encode.Clone147, align 4
  %440 = load i32, i32* %u.bn_encode.Clone150, align 4
  %shr.bn_encode.Clone165 = lshr i32 %439, %440
  %conv.bn_encode.Clone166 = trunc i32 %shr.bn_encode.Clone165 to i8
  %441 = load i8*, i8** %hexarr.addr.bn_encode.Clone146, align 4
  %442 = load i32, i32* %j.bn_encode.Clone148, align 4
  %arrayidx8.bn_encode.Clone167 = getelementptr inbounds i8, i8* %441, i32 %442
  store i8 %conv.bn_encode.Clone166, i8* %arrayidx8.bn_encode.Clone167, align 1
  br label %for.inc.bn_encode.Clone168

for.inc.bn_encode.Clone168:                       ; preds = %for.body7.bn_encode.Clone164
  %443 = load i32, i32* %j.bn_encode.Clone148, align 4
  %dec.bn_encode.Clone169 = add nsw i32 %443, -1
  store i32 %dec.bn_encode.Clone169, i32* %j.bn_encode.Clone148, align 4
  %444 = load i32, i32* %u.bn_encode.Clone150, align 4
  %add.bn_encode.Clone170 = add i32 %444, 8
  store i32 %add.bn_encode.Clone170, i32* %u.bn_encode.Clone150, align 4
  br label %for.cond2.bn_encode.Clone159

for.end.bn_encode.Clone171:                       ; preds = %land.end6.bn_encode.Clone163
  br label %for.inc9.bn_encode.Clone172

for.inc9.bn_encode.Clone172:                      ; preds = %for.end.bn_encode.Clone171
  %445 = load i32, i32* %i.bn_encode.Clone149, align 4
  %inc.bn_encode.Clone173 = add i32 %445, 1
  store i32 %inc.bn_encode.Clone173, i32* %i.bn_encode.Clone149, align 4
  br label %for.cond.bn_encode.Clone152

for.end10.bn_encode.Clone174:                     ; preds = %land.end.bn_encode.Clone156
  br label %for.cond11.bn_encode.Clone175

for.cond11.bn_encode.Clone175:                    ; preds = %for.inc16.bn_encode.Clone179, %for.end10.bn_encode.Clone174
  %446 = load i32, i32* %j.bn_encode.Clone148, align 4
  %cmp12.bn_encode.Clone176 = icmp sge i32 %446, 0
  br i1 %cmp12.bn_encode.Clone176, label %for.body14.bn_encode.Clone177, label %for.end18.bn_encode.Clone181

for.body14.bn_encode.Clone177:                    ; preds = %for.cond11.bn_encode.Clone175
  %447 = load i8*, i8** %hexarr.addr.bn_encode.Clone146, align 4
  %448 = load i32, i32* %j.bn_encode.Clone148, align 4
  %arrayidx15.bn_encode.Clone178 = getelementptr inbounds i8, i8* %447, i32 %448
  store i8 0, i8* %arrayidx15.bn_encode.Clone178, align 1
  br label %for.inc16.bn_encode.Clone179

for.inc16.bn_encode.Clone179:                     ; preds = %for.body14.bn_encode.Clone177
  %449 = load i32, i32* %j.bn_encode.Clone148, align 4
  %dec17.bn_encode.Clone180 = add nsw i32 %449, -1
  store i32 %dec17.bn_encode.Clone180, i32* %j.bn_encode.Clone148, align 4
  br label %for.cond11.bn_encode.Clone175

for.end18.bn_encode.Clone181:                     ; preds = %for.cond11.bn_encode.Clone175
  br label %if.end84.Clone.Split.Split141

if.end84.Clone.Split.Split141:                    ; preds = %for.end18.bn_encode.Clone181
  %450 = load i32, i32* %pdigits.Clone, align 4
  %arraydecay130.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %q.Clone, i32 0, i32 0
  %451 = load %struct.rsa_sk_t*, %struct.rsa_sk_t** %sk.addr.Clone, align 4
  %prime2.Clone = getelementptr inbounds %struct.rsa_sk_t, %struct.rsa_sk_t* %451, i32 0, i32 5
  %arraydecay131.Clone = getelementptr inbounds [128 x i8], [128 x i8]* %prime2.Clone, i32 0, i32 0
  br label %entry.bn_encode.Clone101

entry.bn_encode.Clone101:                         ; preds = %if.end84.Clone.Split.Split141
  %digits.addr.bn_encode.Clone102 = alloca i32, align 4
  %bn.addr.bn_encode.Clone103 = alloca i32*, align 4
  %size.addr.bn_encode.Clone104 = alloca i32, align 4
  %hexarr.addr.bn_encode.Clone105 = alloca i8*, align 4
  %t.bn_encode.Clone106 = alloca i32, align 4
  %j.bn_encode.Clone107 = alloca i32, align 4
  %i.bn_encode.Clone108 = alloca i32, align 4
  %u.bn_encode.Clone109 = alloca i32, align 4
  store i32 %450, i32* %digits.addr.bn_encode.Clone102, align 4
  store i32* %arraydecay130.Clone, i32** %bn.addr.bn_encode.Clone103, align 4
  store i32 128, i32* %size.addr.bn_encode.Clone104, align 4
  store i8* %arraydecay131.Clone, i8** %hexarr.addr.bn_encode.Clone105, align 4
  store i32 0, i32* %i.bn_encode.Clone108, align 4
  %452 = load i32, i32* %size.addr.bn_encode.Clone104, align 4
  %sub.bn_encode.Clone110 = sub i32 %452, 1
  store i32 %sub.bn_encode.Clone110, i32* %j.bn_encode.Clone107, align 4
  br label %for.cond.bn_encode.Clone111

for.cond.bn_encode.Clone111:                      ; preds = %for.inc9.bn_encode.Clone131, %entry.bn_encode.Clone101
  %453 = load i32, i32* %i.bn_encode.Clone108, align 4
  %454 = load i32, i32* %digits.addr.bn_encode.Clone102, align 4
  %cmp.bn_encode.Clone112 = icmp ult i32 %453, %454
  br i1 %cmp.bn_encode.Clone112, label %land.rhs.bn_encode.Clone113, label %land.end.bn_encode.Clone115

land.rhs.bn_encode.Clone113:                      ; preds = %for.cond.bn_encode.Clone111
  %455 = load i32, i32* %j.bn_encode.Clone107, align 4
  %cmp1.bn_encode.Clone114 = icmp sge i32 %455, 0
  br label %land.end.bn_encode.Clone115

land.end.bn_encode.Clone115:                      ; preds = %land.rhs.bn_encode.Clone113, %for.cond.bn_encode.Clone111
  %456 = phi i1 [ false, %for.cond.bn_encode.Clone111 ], [ %cmp1.bn_encode.Clone114, %land.rhs.bn_encode.Clone113 ]
  br i1 %456, label %for.body.bn_encode.Clone116, label %for.end10.bn_encode.Clone133

for.body.bn_encode.Clone116:                      ; preds = %land.end.bn_encode.Clone115
  %457 = load i32*, i32** %bn.addr.bn_encode.Clone103, align 4
  %458 = load i32, i32* %i.bn_encode.Clone108, align 4
  %arrayidx.bn_encode.Clone117 = getelementptr inbounds i32, i32* %457, i32 %458
  %459 = load i32, i32* %arrayidx.bn_encode.Clone117, align 4
  store i32 %459, i32* %t.bn_encode.Clone106, align 4
  store i32 0, i32* %u.bn_encode.Clone109, align 4
  br label %for.cond2.bn_encode.Clone118

for.cond2.bn_encode.Clone118:                     ; preds = %for.inc.bn_encode.Clone127, %for.body.bn_encode.Clone116
  %460 = load i32, i32* %j.bn_encode.Clone107, align 4
  %cmp3.bn_encode.Clone119 = icmp sge i32 %460, 0
  br i1 %cmp3.bn_encode.Clone119, label %land.rhs4.bn_encode.Clone120, label %land.end6.bn_encode.Clone122

land.rhs4.bn_encode.Clone120:                     ; preds = %for.cond2.bn_encode.Clone118
  %461 = load i32, i32* %u.bn_encode.Clone109, align 4
  %cmp5.bn_encode.Clone121 = icmp ult i32 %461, 32
  br label %land.end6.bn_encode.Clone122

land.end6.bn_encode.Clone122:                     ; preds = %land.rhs4.bn_encode.Clone120, %for.cond2.bn_encode.Clone118
  %462 = phi i1 [ false, %for.cond2.bn_encode.Clone118 ], [ %cmp5.bn_encode.Clone121, %land.rhs4.bn_encode.Clone120 ]
  br i1 %462, label %for.body7.bn_encode.Clone123, label %for.end.bn_encode.Clone130

for.body7.bn_encode.Clone123:                     ; preds = %land.end6.bn_encode.Clone122
  %463 = load i32, i32* %t.bn_encode.Clone106, align 4
  %464 = load i32, i32* %u.bn_encode.Clone109, align 4
  %shr.bn_encode.Clone124 = lshr i32 %463, %464
  %conv.bn_encode.Clone125 = trunc i32 %shr.bn_encode.Clone124 to i8
  %465 = load i8*, i8** %hexarr.addr.bn_encode.Clone105, align 4
  %466 = load i32, i32* %j.bn_encode.Clone107, align 4
  %arrayidx8.bn_encode.Clone126 = getelementptr inbounds i8, i8* %465, i32 %466
  store i8 %conv.bn_encode.Clone125, i8* %arrayidx8.bn_encode.Clone126, align 1
  br label %for.inc.bn_encode.Clone127

for.inc.bn_encode.Clone127:                       ; preds = %for.body7.bn_encode.Clone123
  %467 = load i32, i32* %j.bn_encode.Clone107, align 4
  %dec.bn_encode.Clone128 = add nsw i32 %467, -1
  store i32 %dec.bn_encode.Clone128, i32* %j.bn_encode.Clone107, align 4
  %468 = load i32, i32* %u.bn_encode.Clone109, align 4
  %add.bn_encode.Clone129 = add i32 %468, 8
  store i32 %add.bn_encode.Clone129, i32* %u.bn_encode.Clone109, align 4
  br label %for.cond2.bn_encode.Clone118

for.end.bn_encode.Clone130:                       ; preds = %land.end6.bn_encode.Clone122
  br label %for.inc9.bn_encode.Clone131

for.inc9.bn_encode.Clone131:                      ; preds = %for.end.bn_encode.Clone130
  %469 = load i32, i32* %i.bn_encode.Clone108, align 4
  %inc.bn_encode.Clone132 = add i32 %469, 1
  store i32 %inc.bn_encode.Clone132, i32* %i.bn_encode.Clone108, align 4
  br label %for.cond.bn_encode.Clone111

for.end10.bn_encode.Clone133:                     ; preds = %land.end.bn_encode.Clone115
  br label %for.cond11.bn_encode.Clone134

for.cond11.bn_encode.Clone134:                    ; preds = %for.inc16.bn_encode.Clone138, %for.end10.bn_encode.Clone133
  %470 = load i32, i32* %j.bn_encode.Clone107, align 4
  %cmp12.bn_encode.Clone135 = icmp sge i32 %470, 0
  br i1 %cmp12.bn_encode.Clone135, label %for.body14.bn_encode.Clone136, label %for.end18.bn_encode.Clone140

for.body14.bn_encode.Clone136:                    ; preds = %for.cond11.bn_encode.Clone134
  %471 = load i8*, i8** %hexarr.addr.bn_encode.Clone105, align 4
  %472 = load i32, i32* %j.bn_encode.Clone107, align 4
  %arrayidx15.bn_encode.Clone137 = getelementptr inbounds i8, i8* %471, i32 %472
  store i8 0, i8* %arrayidx15.bn_encode.Clone137, align 1
  br label %for.inc16.bn_encode.Clone138

for.inc16.bn_encode.Clone138:                     ; preds = %for.body14.bn_encode.Clone136
  %473 = load i32, i32* %j.bn_encode.Clone107, align 4
  %dec17.bn_encode.Clone139 = add nsw i32 %473, -1
  store i32 %dec17.bn_encode.Clone139, i32* %j.bn_encode.Clone107, align 4
  br label %for.cond11.bn_encode.Clone134

for.end18.bn_encode.Clone140:                     ; preds = %for.cond11.bn_encode.Clone134
  br label %if.end84.Clone.Split.Split100

if.end84.Clone.Split.Split100:                    ; preds = %for.end18.bn_encode.Clone140
  %474 = load i32, i32* %pdigits.Clone, align 4
  %arraydecay132.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %dp.Clone, i32 0, i32 0
  %475 = load %struct.rsa_sk_t*, %struct.rsa_sk_t** %sk.addr.Clone, align 4
  %prime_exponent1.Clone = getelementptr inbounds %struct.rsa_sk_t, %struct.rsa_sk_t* %475, i32 0, i32 6
  %arraydecay133.Clone = getelementptr inbounds [128 x i8], [128 x i8]* %prime_exponent1.Clone, i32 0, i32 0
  br label %entry.bn_encode.Clone60

entry.bn_encode.Clone60:                          ; preds = %if.end84.Clone.Split.Split100
  %digits.addr.bn_encode.Clone61 = alloca i32, align 4
  %bn.addr.bn_encode.Clone62 = alloca i32*, align 4
  %size.addr.bn_encode.Clone63 = alloca i32, align 4
  %hexarr.addr.bn_encode.Clone64 = alloca i8*, align 4
  %t.bn_encode.Clone65 = alloca i32, align 4
  %j.bn_encode.Clone66 = alloca i32, align 4
  %i.bn_encode.Clone67 = alloca i32, align 4
  %u.bn_encode.Clone68 = alloca i32, align 4
  store i32 %474, i32* %digits.addr.bn_encode.Clone61, align 4
  store i32* %arraydecay132.Clone, i32** %bn.addr.bn_encode.Clone62, align 4
  store i32 128, i32* %size.addr.bn_encode.Clone63, align 4
  store i8* %arraydecay133.Clone, i8** %hexarr.addr.bn_encode.Clone64, align 4
  store i32 0, i32* %i.bn_encode.Clone67, align 4
  %476 = load i32, i32* %size.addr.bn_encode.Clone63, align 4
  %sub.bn_encode.Clone69 = sub i32 %476, 1
  store i32 %sub.bn_encode.Clone69, i32* %j.bn_encode.Clone66, align 4
  br label %for.cond.bn_encode.Clone70

for.cond.bn_encode.Clone70:                       ; preds = %for.inc9.bn_encode.Clone90, %entry.bn_encode.Clone60
  %477 = load i32, i32* %i.bn_encode.Clone67, align 4
  %478 = load i32, i32* %digits.addr.bn_encode.Clone61, align 4
  %cmp.bn_encode.Clone71 = icmp ult i32 %477, %478
  br i1 %cmp.bn_encode.Clone71, label %land.rhs.bn_encode.Clone72, label %land.end.bn_encode.Clone74

land.rhs.bn_encode.Clone72:                       ; preds = %for.cond.bn_encode.Clone70
  %479 = load i32, i32* %j.bn_encode.Clone66, align 4
  %cmp1.bn_encode.Clone73 = icmp sge i32 %479, 0
  br label %land.end.bn_encode.Clone74

land.end.bn_encode.Clone74:                       ; preds = %land.rhs.bn_encode.Clone72, %for.cond.bn_encode.Clone70
  %480 = phi i1 [ false, %for.cond.bn_encode.Clone70 ], [ %cmp1.bn_encode.Clone73, %land.rhs.bn_encode.Clone72 ]
  br i1 %480, label %for.body.bn_encode.Clone75, label %for.end10.bn_encode.Clone92

for.body.bn_encode.Clone75:                       ; preds = %land.end.bn_encode.Clone74
  %481 = load i32*, i32** %bn.addr.bn_encode.Clone62, align 4
  %482 = load i32, i32* %i.bn_encode.Clone67, align 4
  %arrayidx.bn_encode.Clone76 = getelementptr inbounds i32, i32* %481, i32 %482
  %483 = load i32, i32* %arrayidx.bn_encode.Clone76, align 4
  store i32 %483, i32* %t.bn_encode.Clone65, align 4
  store i32 0, i32* %u.bn_encode.Clone68, align 4
  br label %for.cond2.bn_encode.Clone77

for.cond2.bn_encode.Clone77:                      ; preds = %for.inc.bn_encode.Clone86, %for.body.bn_encode.Clone75
  %484 = load i32, i32* %j.bn_encode.Clone66, align 4
  %cmp3.bn_encode.Clone78 = icmp sge i32 %484, 0
  br i1 %cmp3.bn_encode.Clone78, label %land.rhs4.bn_encode.Clone79, label %land.end6.bn_encode.Clone81

land.rhs4.bn_encode.Clone79:                      ; preds = %for.cond2.bn_encode.Clone77
  %485 = load i32, i32* %u.bn_encode.Clone68, align 4
  %cmp5.bn_encode.Clone80 = icmp ult i32 %485, 32
  br label %land.end6.bn_encode.Clone81

land.end6.bn_encode.Clone81:                      ; preds = %land.rhs4.bn_encode.Clone79, %for.cond2.bn_encode.Clone77
  %486 = phi i1 [ false, %for.cond2.bn_encode.Clone77 ], [ %cmp5.bn_encode.Clone80, %land.rhs4.bn_encode.Clone79 ]
  br i1 %486, label %for.body7.bn_encode.Clone82, label %for.end.bn_encode.Clone89

for.body7.bn_encode.Clone82:                      ; preds = %land.end6.bn_encode.Clone81
  %487 = load i32, i32* %t.bn_encode.Clone65, align 4
  %488 = load i32, i32* %u.bn_encode.Clone68, align 4
  %shr.bn_encode.Clone83 = lshr i32 %487, %488
  %conv.bn_encode.Clone84 = trunc i32 %shr.bn_encode.Clone83 to i8
  %489 = load i8*, i8** %hexarr.addr.bn_encode.Clone64, align 4
  %490 = load i32, i32* %j.bn_encode.Clone66, align 4
  %arrayidx8.bn_encode.Clone85 = getelementptr inbounds i8, i8* %489, i32 %490
  store i8 %conv.bn_encode.Clone84, i8* %arrayidx8.bn_encode.Clone85, align 1
  br label %for.inc.bn_encode.Clone86

for.inc.bn_encode.Clone86:                        ; preds = %for.body7.bn_encode.Clone82
  %491 = load i32, i32* %j.bn_encode.Clone66, align 4
  %dec.bn_encode.Clone87 = add nsw i32 %491, -1
  store i32 %dec.bn_encode.Clone87, i32* %j.bn_encode.Clone66, align 4
  %492 = load i32, i32* %u.bn_encode.Clone68, align 4
  %add.bn_encode.Clone88 = add i32 %492, 8
  store i32 %add.bn_encode.Clone88, i32* %u.bn_encode.Clone68, align 4
  br label %for.cond2.bn_encode.Clone77

for.end.bn_encode.Clone89:                        ; preds = %land.end6.bn_encode.Clone81
  br label %for.inc9.bn_encode.Clone90

for.inc9.bn_encode.Clone90:                       ; preds = %for.end.bn_encode.Clone89
  %493 = load i32, i32* %i.bn_encode.Clone67, align 4
  %inc.bn_encode.Clone91 = add i32 %493, 1
  store i32 %inc.bn_encode.Clone91, i32* %i.bn_encode.Clone67, align 4
  br label %for.cond.bn_encode.Clone70

for.end10.bn_encode.Clone92:                      ; preds = %land.end.bn_encode.Clone74
  br label %for.cond11.bn_encode.Clone93

for.cond11.bn_encode.Clone93:                     ; preds = %for.inc16.bn_encode.Clone97, %for.end10.bn_encode.Clone92
  %494 = load i32, i32* %j.bn_encode.Clone66, align 4
  %cmp12.bn_encode.Clone94 = icmp sge i32 %494, 0
  br i1 %cmp12.bn_encode.Clone94, label %for.body14.bn_encode.Clone95, label %for.end18.bn_encode.Clone99

for.body14.bn_encode.Clone95:                     ; preds = %for.cond11.bn_encode.Clone93
  %495 = load i8*, i8** %hexarr.addr.bn_encode.Clone64, align 4
  %496 = load i32, i32* %j.bn_encode.Clone66, align 4
  %arrayidx15.bn_encode.Clone96 = getelementptr inbounds i8, i8* %495, i32 %496
  store i8 0, i8* %arrayidx15.bn_encode.Clone96, align 1
  br label %for.inc16.bn_encode.Clone97

for.inc16.bn_encode.Clone97:                      ; preds = %for.body14.bn_encode.Clone95
  %497 = load i32, i32* %j.bn_encode.Clone66, align 4
  %dec17.bn_encode.Clone98 = add nsw i32 %497, -1
  store i32 %dec17.bn_encode.Clone98, i32* %j.bn_encode.Clone66, align 4
  br label %for.cond11.bn_encode.Clone93

for.end18.bn_encode.Clone99:                      ; preds = %for.cond11.bn_encode.Clone93
  br label %if.end84.Clone.Split.Split59

if.end84.Clone.Split.Split59:                     ; preds = %for.end18.bn_encode.Clone99
  %498 = load i32, i32* %pdigits.Clone, align 4
  %arraydecay134.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %dq.Clone, i32 0, i32 0
  %499 = load %struct.rsa_sk_t*, %struct.rsa_sk_t** %sk.addr.Clone, align 4
  %prime_exponent2.Clone = getelementptr inbounds %struct.rsa_sk_t, %struct.rsa_sk_t* %499, i32 0, i32 7
  %arraydecay135.Clone = getelementptr inbounds [128 x i8], [128 x i8]* %prime_exponent2.Clone, i32 0, i32 0
  br label %entry.bn_encode.Clone19

entry.bn_encode.Clone19:                          ; preds = %if.end84.Clone.Split.Split59
  %digits.addr.bn_encode.Clone20 = alloca i32, align 4
  %bn.addr.bn_encode.Clone21 = alloca i32*, align 4
  %size.addr.bn_encode.Clone22 = alloca i32, align 4
  %hexarr.addr.bn_encode.Clone23 = alloca i8*, align 4
  %t.bn_encode.Clone24 = alloca i32, align 4
  %j.bn_encode.Clone25 = alloca i32, align 4
  %i.bn_encode.Clone26 = alloca i32, align 4
  %u.bn_encode.Clone27 = alloca i32, align 4
  store i32 %498, i32* %digits.addr.bn_encode.Clone20, align 4
  store i32* %arraydecay134.Clone, i32** %bn.addr.bn_encode.Clone21, align 4
  store i32 128, i32* %size.addr.bn_encode.Clone22, align 4
  store i8* %arraydecay135.Clone, i8** %hexarr.addr.bn_encode.Clone23, align 4
  store i32 0, i32* %i.bn_encode.Clone26, align 4
  %500 = load i32, i32* %size.addr.bn_encode.Clone22, align 4
  %sub.bn_encode.Clone28 = sub i32 %500, 1
  store i32 %sub.bn_encode.Clone28, i32* %j.bn_encode.Clone25, align 4
  br label %for.cond.bn_encode.Clone29

for.cond.bn_encode.Clone29:                       ; preds = %for.inc9.bn_encode.Clone49, %entry.bn_encode.Clone19
  %501 = load i32, i32* %i.bn_encode.Clone26, align 4
  %502 = load i32, i32* %digits.addr.bn_encode.Clone20, align 4
  %cmp.bn_encode.Clone30 = icmp ult i32 %501, %502
  br i1 %cmp.bn_encode.Clone30, label %land.rhs.bn_encode.Clone31, label %land.end.bn_encode.Clone33

land.rhs.bn_encode.Clone31:                       ; preds = %for.cond.bn_encode.Clone29
  %503 = load i32, i32* %j.bn_encode.Clone25, align 4
  %cmp1.bn_encode.Clone32 = icmp sge i32 %503, 0
  br label %land.end.bn_encode.Clone33

land.end.bn_encode.Clone33:                       ; preds = %land.rhs.bn_encode.Clone31, %for.cond.bn_encode.Clone29
  %504 = phi i1 [ false, %for.cond.bn_encode.Clone29 ], [ %cmp1.bn_encode.Clone32, %land.rhs.bn_encode.Clone31 ]
  br i1 %504, label %for.body.bn_encode.Clone34, label %for.end10.bn_encode.Clone51

for.body.bn_encode.Clone34:                       ; preds = %land.end.bn_encode.Clone33
  %505 = load i32*, i32** %bn.addr.bn_encode.Clone21, align 4
  %506 = load i32, i32* %i.bn_encode.Clone26, align 4
  %arrayidx.bn_encode.Clone35 = getelementptr inbounds i32, i32* %505, i32 %506
  %507 = load i32, i32* %arrayidx.bn_encode.Clone35, align 4
  store i32 %507, i32* %t.bn_encode.Clone24, align 4
  store i32 0, i32* %u.bn_encode.Clone27, align 4
  br label %for.cond2.bn_encode.Clone36

for.cond2.bn_encode.Clone36:                      ; preds = %for.inc.bn_encode.Clone45, %for.body.bn_encode.Clone34
  %508 = load i32, i32* %j.bn_encode.Clone25, align 4
  %cmp3.bn_encode.Clone37 = icmp sge i32 %508, 0
  br i1 %cmp3.bn_encode.Clone37, label %land.rhs4.bn_encode.Clone38, label %land.end6.bn_encode.Clone40

land.rhs4.bn_encode.Clone38:                      ; preds = %for.cond2.bn_encode.Clone36
  %509 = load i32, i32* %u.bn_encode.Clone27, align 4
  %cmp5.bn_encode.Clone39 = icmp ult i32 %509, 32
  br label %land.end6.bn_encode.Clone40

land.end6.bn_encode.Clone40:                      ; preds = %land.rhs4.bn_encode.Clone38, %for.cond2.bn_encode.Clone36
  %510 = phi i1 [ false, %for.cond2.bn_encode.Clone36 ], [ %cmp5.bn_encode.Clone39, %land.rhs4.bn_encode.Clone38 ]
  br i1 %510, label %for.body7.bn_encode.Clone41, label %for.end.bn_encode.Clone48

for.body7.bn_encode.Clone41:                      ; preds = %land.end6.bn_encode.Clone40
  %511 = load i32, i32* %t.bn_encode.Clone24, align 4
  %512 = load i32, i32* %u.bn_encode.Clone27, align 4
  %shr.bn_encode.Clone42 = lshr i32 %511, %512
  %conv.bn_encode.Clone43 = trunc i32 %shr.bn_encode.Clone42 to i8
  %513 = load i8*, i8** %hexarr.addr.bn_encode.Clone23, align 4
  %514 = load i32, i32* %j.bn_encode.Clone25, align 4
  %arrayidx8.bn_encode.Clone44 = getelementptr inbounds i8, i8* %513, i32 %514
  store i8 %conv.bn_encode.Clone43, i8* %arrayidx8.bn_encode.Clone44, align 1
  br label %for.inc.bn_encode.Clone45

for.inc.bn_encode.Clone45:                        ; preds = %for.body7.bn_encode.Clone41
  %515 = load i32, i32* %j.bn_encode.Clone25, align 4
  %dec.bn_encode.Clone46 = add nsw i32 %515, -1
  store i32 %dec.bn_encode.Clone46, i32* %j.bn_encode.Clone25, align 4
  %516 = load i32, i32* %u.bn_encode.Clone27, align 4
  %add.bn_encode.Clone47 = add i32 %516, 8
  store i32 %add.bn_encode.Clone47, i32* %u.bn_encode.Clone27, align 4
  br label %for.cond2.bn_encode.Clone36

for.end.bn_encode.Clone48:                        ; preds = %land.end6.bn_encode.Clone40
  br label %for.inc9.bn_encode.Clone49

for.inc9.bn_encode.Clone49:                       ; preds = %for.end.bn_encode.Clone48
  %517 = load i32, i32* %i.bn_encode.Clone26, align 4
  %inc.bn_encode.Clone50 = add i32 %517, 1
  store i32 %inc.bn_encode.Clone50, i32* %i.bn_encode.Clone26, align 4
  br label %for.cond.bn_encode.Clone29

for.end10.bn_encode.Clone51:                      ; preds = %land.end.bn_encode.Clone33
  br label %for.cond11.bn_encode.Clone52

for.cond11.bn_encode.Clone52:                     ; preds = %for.inc16.bn_encode.Clone56, %for.end10.bn_encode.Clone51
  %518 = load i32, i32* %j.bn_encode.Clone25, align 4
  %cmp12.bn_encode.Clone53 = icmp sge i32 %518, 0
  br i1 %cmp12.bn_encode.Clone53, label %for.body14.bn_encode.Clone54, label %for.end18.bn_encode.Clone58

for.body14.bn_encode.Clone54:                     ; preds = %for.cond11.bn_encode.Clone52
  %519 = load i8*, i8** %hexarr.addr.bn_encode.Clone23, align 4
  %520 = load i32, i32* %j.bn_encode.Clone25, align 4
  %arrayidx15.bn_encode.Clone55 = getelementptr inbounds i8, i8* %519, i32 %520
  store i8 0, i8* %arrayidx15.bn_encode.Clone55, align 1
  br label %for.inc16.bn_encode.Clone56

for.inc16.bn_encode.Clone56:                      ; preds = %for.body14.bn_encode.Clone54
  %521 = load i32, i32* %j.bn_encode.Clone25, align 4
  %dec17.bn_encode.Clone57 = add nsw i32 %521, -1
  store i32 %dec17.bn_encode.Clone57, i32* %j.bn_encode.Clone25, align 4
  br label %for.cond11.bn_encode.Clone52

for.end18.bn_encode.Clone58:                      ; preds = %for.cond11.bn_encode.Clone52
  br label %if.end84.Clone.Split.Split18

if.end84.Clone.Split.Split18:                     ; preds = %for.end18.bn_encode.Clone58
  %522 = load i32, i32* %pdigits.Clone, align 4
  %arraydecay136.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %q_inv.Clone, i32 0, i32 0
  %523 = load %struct.rsa_sk_t*, %struct.rsa_sk_t** %sk.addr.Clone, align 4
  %coefficient.Clone = getelementptr inbounds %struct.rsa_sk_t, %struct.rsa_sk_t* %523, i32 0, i32 8
  %arraydecay137.Clone = getelementptr inbounds [128 x i8], [128 x i8]* %coefficient.Clone, i32 0, i32 0
  br label %entry.bn_encode.Clone

entry.bn_encode.Clone:                            ; preds = %if.end84.Clone.Split.Split18
  %digits.addr.bn_encode.Clone = alloca i32, align 4
  %bn.addr.bn_encode.Clone = alloca i32*, align 4
  %size.addr.bn_encode.Clone = alloca i32, align 4
  %hexarr.addr.bn_encode.Clone = alloca i8*, align 4
  %t.bn_encode.Clone = alloca i32, align 4
  %j.bn_encode.Clone = alloca i32, align 4
  %i.bn_encode.Clone = alloca i32, align 4
  %u.bn_encode.Clone = alloca i32, align 4
  store i32 %522, i32* %digits.addr.bn_encode.Clone, align 4
  store i32* %arraydecay136.Clone, i32** %bn.addr.bn_encode.Clone, align 4
  store i32 128, i32* %size.addr.bn_encode.Clone, align 4
  store i8* %arraydecay137.Clone, i8** %hexarr.addr.bn_encode.Clone, align 4
  store i32 0, i32* %i.bn_encode.Clone, align 4
  %524 = load i32, i32* %size.addr.bn_encode.Clone, align 4
  %sub.bn_encode.Clone = sub i32 %524, 1
  store i32 %sub.bn_encode.Clone, i32* %j.bn_encode.Clone, align 4
  br label %for.cond.bn_encode.Clone

for.cond.bn_encode.Clone:                         ; preds = %for.inc9.bn_encode.Clone, %entry.bn_encode.Clone
  %525 = load i32, i32* %i.bn_encode.Clone, align 4
  %526 = load i32, i32* %digits.addr.bn_encode.Clone, align 4
  %cmp.bn_encode.Clone = icmp ult i32 %525, %526
  br i1 %cmp.bn_encode.Clone, label %land.rhs.bn_encode.Clone, label %land.end.bn_encode.Clone

land.rhs.bn_encode.Clone:                         ; preds = %for.cond.bn_encode.Clone
  %527 = load i32, i32* %j.bn_encode.Clone, align 4
  %cmp1.bn_encode.Clone = icmp sge i32 %527, 0
  br label %land.end.bn_encode.Clone

land.end.bn_encode.Clone:                         ; preds = %land.rhs.bn_encode.Clone, %for.cond.bn_encode.Clone
  %528 = phi i1 [ false, %for.cond.bn_encode.Clone ], [ %cmp1.bn_encode.Clone, %land.rhs.bn_encode.Clone ]
  br i1 %528, label %for.body.bn_encode.Clone, label %for.end10.bn_encode.Clone

for.body.bn_encode.Clone:                         ; preds = %land.end.bn_encode.Clone
  %529 = load i32*, i32** %bn.addr.bn_encode.Clone, align 4
  %530 = load i32, i32* %i.bn_encode.Clone, align 4
  %arrayidx.bn_encode.Clone = getelementptr inbounds i32, i32* %529, i32 %530
  %531 = load i32, i32* %arrayidx.bn_encode.Clone, align 4
  store i32 %531, i32* %t.bn_encode.Clone, align 4
  store i32 0, i32* %u.bn_encode.Clone, align 4
  br label %for.cond2.bn_encode.Clone

for.cond2.bn_encode.Clone:                        ; preds = %for.inc.bn_encode.Clone, %for.body.bn_encode.Clone
  %532 = load i32, i32* %j.bn_encode.Clone, align 4
  %cmp3.bn_encode.Clone = icmp sge i32 %532, 0
  br i1 %cmp3.bn_encode.Clone, label %land.rhs4.bn_encode.Clone, label %land.end6.bn_encode.Clone

land.rhs4.bn_encode.Clone:                        ; preds = %for.cond2.bn_encode.Clone
  %533 = load i32, i32* %u.bn_encode.Clone, align 4
  %cmp5.bn_encode.Clone = icmp ult i32 %533, 32
  br label %land.end6.bn_encode.Clone

land.end6.bn_encode.Clone:                        ; preds = %land.rhs4.bn_encode.Clone, %for.cond2.bn_encode.Clone
  %534 = phi i1 [ false, %for.cond2.bn_encode.Clone ], [ %cmp5.bn_encode.Clone, %land.rhs4.bn_encode.Clone ]
  br i1 %534, label %for.body7.bn_encode.Clone, label %for.end.bn_encode.Clone

for.body7.bn_encode.Clone:                        ; preds = %land.end6.bn_encode.Clone
  %535 = load i32, i32* %t.bn_encode.Clone, align 4
  %536 = load i32, i32* %u.bn_encode.Clone, align 4
  %shr.bn_encode.Clone = lshr i32 %535, %536
  %conv.bn_encode.Clone = trunc i32 %shr.bn_encode.Clone to i8
  %537 = load i8*, i8** %hexarr.addr.bn_encode.Clone, align 4
  %538 = load i32, i32* %j.bn_encode.Clone, align 4
  %arrayidx8.bn_encode.Clone = getelementptr inbounds i8, i8* %537, i32 %538
  store i8 %conv.bn_encode.Clone, i8* %arrayidx8.bn_encode.Clone, align 1
  br label %for.inc.bn_encode.Clone

for.inc.bn_encode.Clone:                          ; preds = %for.body7.bn_encode.Clone
  %539 = load i32, i32* %j.bn_encode.Clone, align 4
  %dec.bn_encode.Clone = add nsw i32 %539, -1
  store i32 %dec.bn_encode.Clone, i32* %j.bn_encode.Clone, align 4
  %540 = load i32, i32* %u.bn_encode.Clone, align 4
  %add.bn_encode.Clone = add i32 %540, 8
  store i32 %add.bn_encode.Clone, i32* %u.bn_encode.Clone, align 4
  br label %for.cond2.bn_encode.Clone

for.end.bn_encode.Clone:                          ; preds = %land.end6.bn_encode.Clone
  br label %for.inc9.bn_encode.Clone

for.inc9.bn_encode.Clone:                         ; preds = %for.end.bn_encode.Clone
  %541 = load i32, i32* %i.bn_encode.Clone, align 4
  %inc.bn_encode.Clone = add i32 %541, 1
  store i32 %inc.bn_encode.Clone, i32* %i.bn_encode.Clone, align 4
  br label %for.cond.bn_encode.Clone

for.end10.bn_encode.Clone:                        ; preds = %land.end.bn_encode.Clone
  br label %for.cond11.bn_encode.Clone

for.cond11.bn_encode.Clone:                       ; preds = %for.inc16.bn_encode.Clone, %for.end10.bn_encode.Clone
  %542 = load i32, i32* %j.bn_encode.Clone, align 4
  %cmp12.bn_encode.Clone = icmp sge i32 %542, 0
  br i1 %cmp12.bn_encode.Clone, label %for.body14.bn_encode.Clone, label %for.end18.bn_encode.Clone

for.body14.bn_encode.Clone:                       ; preds = %for.cond11.bn_encode.Clone
  %543 = load i8*, i8** %hexarr.addr.bn_encode.Clone, align 4
  %544 = load i32, i32* %j.bn_encode.Clone, align 4
  %arrayidx15.bn_encode.Clone = getelementptr inbounds i8, i8* %543, i32 %544
  store i8 0, i8* %arrayidx15.bn_encode.Clone, align 1
  br label %for.inc16.bn_encode.Clone

for.inc16.bn_encode.Clone:                        ; preds = %for.body14.bn_encode.Clone
  %545 = load i32, i32* %j.bn_encode.Clone, align 4
  %dec17.bn_encode.Clone = add nsw i32 %545, -1
  store i32 %dec17.bn_encode.Clone, i32* %j.bn_encode.Clone, align 4
  br label %for.cond11.bn_encode.Clone

for.end18.bn_encode.Clone:                        ; preds = %for.cond11.bn_encode.Clone
  br label %if.end84.Clone.Split.Split

if.end84.Clone.Split.Split:                       ; preds = %for.end18.bn_encode.Clone
  %arraydecay138.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %d.Clone, i32 0, i32 0
  %546 = bitcast i32* %arraydecay138.Clone to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %546, i8 0, i32 260, i1 false)
  %arraydecay139.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %dp.Clone, i32 0, i32 0
  %547 = bitcast i32* %arraydecay139.Clone to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %547, i8 0, i32 260, i1 false)
  %arraydecay140.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %dq.Clone, i32 0, i32 0
  %548 = bitcast i32* %arraydecay140.Clone to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %548, i8 0, i32 260, i1 false)
  %arraydecay141.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %p.Clone, i32 0, i32 0
  %549 = bitcast i32* %arraydecay141.Clone to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %549, i8 0, i32 260, i1 false)
  %arraydecay142.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %q.Clone, i32 0, i32 0
  %550 = bitcast i32* %arraydecay142.Clone to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %550, i8 0, i32 260, i1 false)
  %arraydecay143.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %phi_n.Clone, i32 0, i32 0
  %551 = bitcast i32* %arraydecay143.Clone to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %551, i8 0, i32 260, i1 false)
  %arraydecay144.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %q_inv.Clone, i32 0, i32 0
  %552 = bitcast i32* %arraydecay144.Clone to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %552, i8 0, i32 260, i1 false)
  %arraydecay145.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %p_minus1.Clone, i32 0, i32 0
  %553 = bitcast i32* %arraydecay145.Clone to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %553, i8 0, i32 260, i1 false)
  %arraydecay146.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %q_minus1.Clone, i32 0, i32 0
  %554 = bitcast i32* %arraydecay146.Clone to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %554, i8 0, i32 260, i1 false)
  %arraydecay147.Clone = getelementptr inbounds [65 x i32], [65 x i32]* %t.Clone, i32 0, i32 0
  %555 = bitcast i32* %arraydecay147.Clone to i8*
  call void @llvm.memset.p0i8.i32(i8* align 4 %555, i8 0, i32 260, i1 false)
  store i32 0, i32* %retval.Clone, align 4
  br label %OutFuncRetBB

OutFuncRetBB:                                     ; preds = %if.end84.Clone.Split.Split
  %556 = getelementptr inbounds %Struct.RetValue.4, %Struct.RetValue.4* @Struct.RetValue.8, i32 0, i32 0
  store i32* %retval.Clone, i32** %556, align 4
  ret void
}

define void @for.cond.OutLineFunc.10(i32* %OutFuncArg, i32* %OutFuncArg1, i32* %OutFuncArg2, i8* %OutFuncArg3, [256 x i8]* %OutFuncArg4, i8** %OutFuncArg5, %struct.rsa_pk_t** %OutFuncArg6, i32** %OutFuncArg7, i8** %OutFuncArg8, i32* %OutFuncArg9, i32* %OutFuncArg10) {
entry:
  %OutFuncArg.addr = alloca i32*, align 4
  store i32* %OutFuncArg, i32** %OutFuncArg.addr, align 4
  %i.Clone = load i32*, i32** %OutFuncArg.addr, align 4
  %OutFuncArg1.addr = alloca i32*, align 4
  store i32* %OutFuncArg1, i32** %OutFuncArg1.addr, align 4
  %modulus_len.Clone = load i32*, i32** %OutFuncArg1.addr, align 4
  %OutFuncArg2.addr = alloca i32*, align 4
  store i32* %OutFuncArg2, i32** %OutFuncArg2.addr, align 4
  %in_len.addr.Clone = load i32*, i32** %OutFuncArg2.addr, align 4
  %OutFuncArg3.addr = alloca i8*, align 4
  store i8* %OutFuncArg3, i8** %OutFuncArg3.addr, align 4
  %byte.Clone = load i8*, i8** %OutFuncArg3.addr, align 4
  %OutFuncArg4.addr = alloca [256 x i8]*, align 4
  store [256 x i8]* %OutFuncArg4, [256 x i8]** %OutFuncArg4.addr, align 4
  %pkcs_block.Clone = load [256 x i8]*, [256 x i8]** %OutFuncArg4.addr, align 4
  %OutFuncArg5.addr = alloca i8**, align 4
  store i8** %OutFuncArg5, i8*** %OutFuncArg5.addr, align 4
  %in.addr.Clone = load i8**, i8*** %OutFuncArg5.addr, align 4
  %OutFuncArg6.addr = alloca %struct.rsa_pk_t**, align 4
  store %struct.rsa_pk_t** %OutFuncArg6, %struct.rsa_pk_t*** %OutFuncArg6.addr, align 4
  %pk.addr.Clone = load %struct.rsa_pk_t**, %struct.rsa_pk_t*** %OutFuncArg6.addr, align 4
  %OutFuncArg7.addr = alloca i32**, align 4
  store i32** %OutFuncArg7, i32*** %OutFuncArg7.addr, align 4
  %out_len.addr.Clone = load i32**, i32*** %OutFuncArg7.addr, align 4
  %OutFuncArg8.addr = alloca i8**, align 4
  store i8** %OutFuncArg8, i8*** %OutFuncArg8.addr, align 4
  %out.addr.Clone = load i8**, i8*** %OutFuncArg8.addr, align 4
  %OutFuncArg9.addr = alloca i32*, align 4
  store i32* %OutFuncArg9, i32** %OutFuncArg9.addr, align 4
  %status.Clone = load i32*, i32** %OutFuncArg9.addr, align 4
  %OutFuncArg10.addr = alloca i32*, align 4
  store i32* %OutFuncArg10, i32** %OutFuncArg10.addr, align 4
  %retval.Clone = load i32*, i32** %OutFuncArg10.addr, align 4
  br label %for.cond.Clone

for.cond.Clone:                                   ; preds = %entry, %for.inc.Clone
  %0 = load i32, i32* %i.Clone, align 4
  %1 = load i32, i32* %modulus_len.Clone, align 4
  %2 = load i32, i32* %in_len.addr.Clone, align 4
  %sub.Clone = sub i32 %1, %2
  %sub3.Clone = sub i32 %sub.Clone, 1
  %cmp4.Clone = icmp ult i32 %0, %sub3.Clone
  br i1 %cmp4.Clone, label %for.body.Clone, label %for.end.Clone

for.body.Clone:                                   ; preds = %for.cond.Clone
  br label %do.body.Clone

do.body.Clone:                                    ; preds = %do.cond.Clone, %for.body.Clone
  call void @generate_rand(i8* %byte.Clone, i32 1)
  br label %do.cond.Clone

do.cond.Clone:                                    ; preds = %do.body.Clone
  %3 = load i8, i8* %byte.Clone, align 1
  %conv.Clone = zext i8 %3 to i32
  %cmp5.Clone = icmp eq i32 %conv.Clone, 0
  br i1 %cmp5.Clone, label %do.body.Clone, label %do.end.Clone

do.end.Clone:                                     ; preds = %do.cond.Clone
  %4 = load i8, i8* %byte.Clone, align 1
  %5 = load i32, i32* %i.Clone, align 4
  %arrayidx7.Clone = getelementptr inbounds [256 x i8], [256 x i8]* %pkcs_block.Clone, i32 0, i32 %5
  store i8 %4, i8* %arrayidx7.Clone, align 1
  br label %for.inc.Clone

for.inc.Clone:                                    ; preds = %do.end.Clone
  %6 = load i32, i32* %i.Clone, align 4
  %inc.Clone = add i32 %6, 1
  store i32 %inc.Clone, i32* %i.Clone, align 4
  br label %for.cond.Clone

for.end.Clone:                                    ; preds = %for.cond.Clone
  %7 = load i32, i32* %i.Clone, align 4
  %inc8.Clone = add i32 %7, 1
  store i32 %inc8.Clone, i32* %i.Clone, align 4
  %arrayidx9.Clone = getelementptr inbounds [256 x i8], [256 x i8]* %pkcs_block.Clone, i32 0, i32 %7
  store i8 0, i8* %arrayidx9.Clone, align 1
  %8 = load i32, i32* %i.Clone, align 4
  %arrayidx10.Clone = getelementptr inbounds [256 x i8], [256 x i8]* %pkcs_block.Clone, i32 0, i32 %8
  %9 = load i8*, i8** %in.addr.Clone, align 4
  %10 = load i32, i32* %in_len.addr.Clone, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %arrayidx10.Clone, i8* align 1 %9, i32 %10, i1 false)
  %11 = load %struct.rsa_pk_t*, %struct.rsa_pk_t** %pk.addr.Clone, align 4
  %12 = load i32, i32* %modulus_len.Clone, align 4
  %arraydecay.Clone = getelementptr inbounds [256 x i8], [256 x i8]* %pkcs_block.Clone, i32 0, i32 0
  %13 = load i32*, i32** %out_len.addr.Clone, align 4
  %14 = load i8*, i8** %out.addr.Clone, align 4
  %call.Clone = call i32 @public_block_operation(i8* %14, i32* %13, i8* %arraydecay.Clone, i32 %12, %struct.rsa_pk_t* %11)
  store i32 %call.Clone, i32* %status.Clone, align 4
  store i8 0, i8* %byte.Clone, align 1
  %arraydecay11.Clone = getelementptr inbounds [256 x i8], [256 x i8]* %pkcs_block.Clone, i32 0, i32 0
  call void @llvm.memset.p0i8.i32(i8* align 1 %arraydecay11.Clone, i8 0, i32 256, i1 false)
  %15 = load i32, i32* %status.Clone, align 4
  store i32 %15, i32* %retval.Clone, align 4
  br label %OutFuncRetBB

OutFuncRetBB:                                     ; preds = %for.end.Clone
  %16 = getelementptr inbounds %Struct.RetValue.5, %Struct.RetValue.5* @Struct.RetValue.9, i32 0, i32 0
  store i32* %i.Clone, i32** %16, align 4
  %17 = getelementptr inbounds %Struct.RetValue.5, %Struct.RetValue.5* @Struct.RetValue.9, i32 0, i32 1
  store i8* %byte.Clone, i8** %17, align 4
  %18 = getelementptr inbounds %Struct.RetValue.5, %Struct.RetValue.5* @Struct.RetValue.9, i32 0, i32 2
  store i32* %status.Clone, i32** %18, align 4
  %19 = getelementptr inbounds %Struct.RetValue.5, %Struct.RetValue.5* @Struct.RetValue.9, i32 0, i32 3
  store i32* %retval.Clone, i32** %19, align 4
  ret void
}

define void @for.cond.OutLineFunc.12(i32* %OutFuncArg, i32* %OutFuncArg1, [256 x i8]* %OutFuncArg2) {
entry:
  %OutFuncArg.addr = alloca i32*, align 4
  store i32* %OutFuncArg, i32** %OutFuncArg.addr, align 4
  %i.Clone = load i32*, i32** %OutFuncArg.addr, align 4
  %OutFuncArg1.addr = alloca i32*, align 4
  store i32* %OutFuncArg1, i32** %OutFuncArg1.addr, align 4
  %modulus_len.Clone = load i32*, i32** %OutFuncArg1.addr, align 4
  %OutFuncArg2.addr = alloca [256 x i8]*, align 4
  store [256 x i8]* %OutFuncArg2, [256 x i8]** %OutFuncArg2.addr, align 4
  %pkcs_block.Clone = load [256 x i8]*, [256 x i8]** %OutFuncArg2.addr, align 4
  br label %for.cond.Clone

for.cond.Clone:                                   ; preds = %entry, %for.inc.Clone
  %0 = load i32, i32* %i.Clone, align 4
  %1 = load i32, i32* %modulus_len.Clone, align 4
  %sub.Clone = sub i32 %1, 1
  %cmp15.Clone = icmp ult i32 %0, %sub.Clone
  br i1 %cmp15.Clone, label %for.body.Clone, label %for.end.Clone

for.body.Clone:                                   ; preds = %for.cond.Clone
  %2 = load i32, i32* %i.Clone, align 4
  %arrayidx17.Clone = getelementptr inbounds [256 x i8], [256 x i8]* %pkcs_block.Clone, i32 0, i32 %2
  %3 = load i8, i8* %arrayidx17.Clone, align 1
  %conv18.Clone = zext i8 %3 to i32
  %cmp19.Clone = icmp ne i32 %conv18.Clone, 255
  br i1 %cmp19.Clone, label %if.then21.Clone, label %if.end22.Clone

if.then21.Clone:                                  ; preds = %for.body.Clone
  br label %for.end.Clone

if.end22.Clone:                                   ; preds = %for.body.Clone
  br label %for.inc.Clone

for.inc.Clone:                                    ; preds = %if.end22.Clone
  %4 = load i32, i32* %i.Clone, align 4
  %inc.Clone = add i32 %4, 1
  store i32 %inc.Clone, i32* %i.Clone, align 4
  br label %for.cond.Clone

for.end.Clone:                                    ; preds = %if.then21.Clone, %for.cond.Clone
  br label %OutFuncRetBB

OutFuncRetBB:                                     ; preds = %for.end.Clone
  %5 = getelementptr inbounds %Struct.RetValue.6, %Struct.RetValue.6* @Struct.RetValue.11, i32 0, i32 0
  store i32* %i.Clone, i32** %5, align 4
  ret void
}

define void @for.cond.OutLineFunc.14(i32* %OutFuncArg, i32* %OutFuncArg1, [256 x i8]* %OutFuncArg2) {
entry:
  %OutFuncArg.addr = alloca i32*, align 4
  store i32* %OutFuncArg, i32** %OutFuncArg.addr, align 4
  %i.Clone = load i32*, i32** %OutFuncArg.addr, align 4
  %OutFuncArg1.addr = alloca i32*, align 4
  store i32* %OutFuncArg1, i32** %OutFuncArg1.addr, align 4
  %modulus_len.Clone = load i32*, i32** %OutFuncArg1.addr, align 4
  %OutFuncArg2.addr = alloca [256 x i8]*, align 4
  store [256 x i8]* %OutFuncArg2, [256 x i8]** %OutFuncArg2.addr, align 4
  %pkcs_block.Clone = load [256 x i8]*, [256 x i8]** %OutFuncArg2.addr, align 4
  br label %for.cond.Clone

for.cond.Clone:                                   ; preds = %entry, %for.inc.Clone
  %0 = load i32, i32* %i.Clone, align 4
  %1 = load i32, i32* %modulus_len.Clone, align 4
  %sub.Clone = sub i32 %1, 1
  %cmp15.Clone = icmp ult i32 %0, %sub.Clone
  br i1 %cmp15.Clone, label %for.body.Clone, label %for.end.Clone

for.body.Clone:                                   ; preds = %for.cond.Clone
  %2 = load i32, i32* %i.Clone, align 4
  %arrayidx17.Clone = getelementptr inbounds [256 x i8], [256 x i8]* %pkcs_block.Clone, i32 0, i32 %2
  %3 = load i8, i8* %arrayidx17.Clone, align 1
  %conv18.Clone = zext i8 %3 to i32
  %cmp19.Clone = icmp eq i32 %conv18.Clone, 0
  br i1 %cmp19.Clone, label %if.then21.Clone, label %if.end22.Clone

if.then21.Clone:                                  ; preds = %for.body.Clone
  br label %for.end.Clone

if.end22.Clone:                                   ; preds = %for.body.Clone
  br label %for.inc.Clone

for.inc.Clone:                                    ; preds = %if.end22.Clone
  %4 = load i32, i32* %i.Clone, align 4
  %inc.Clone = add i32 %4, 1
  store i32 %inc.Clone, i32* %i.Clone, align 4
  br label %for.cond.Clone

for.end.Clone:                                    ; preds = %if.then21.Clone, %for.cond.Clone
  br label %OutFuncRetBB

OutFuncRetBB:                                     ; preds = %for.end.Clone
  %5 = getelementptr inbounds %Struct.RetValue.7, %Struct.RetValue.7* @Struct.RetValue.13, i32 0, i32 0
  store i32* %i.Clone, i32** %5, align 4
  ret void
}

attributes #0 = { noinline nounwind optnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="pentium4" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { noinline optnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="pentium4" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="pentium4" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.linker.options = !{!0, !1, !2, !0, !1, !2, !0, !1, !2, !0, !1, !2}
!llvm.ident = !{!3, !3, !3, !3}
!llvm.module.flags = !{!4, !5}

!0 = !{!"/DEFAULTLIB:msvcrtd.lib"}
!1 = !{!"/DEFAULTLIB:oldnames.lib"}
!2 = !{!"/DEFAULTLIB:msvcprtd.lib"}
!3 = !{!"Obfuscator-LLVM clang version 8.0.1 (tags/RELEASE_801/final) (based on Obfuscator-LLVM 8.0.1)"}
!4 = !{i32 1, !"NumRegisterParameters", i32 0}
!5 = !{i32 1, !"wchar_size", i32 2}
