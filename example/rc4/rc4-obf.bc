; ModuleID = './input/rc4.bc'
source_filename = "llvm-link"
target datalayout = "e-m:x-p:32:32-i64:64-f80:32-n8:16:32-a:0:32-S32"
target triple = "i686-pc-windows-msvc16.0.0"

%Struct.RetValue = type <{ i32*, i32* }>

$"??_C@_0DP@EFDPGBGM@ABCDEFGHIJKLMNOPQRSTUVWXYZabcdef@" = comdat any

$"??_C@_0ED@MCBCPBCB@?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DNStart?5encrypting?5cip@" = comdat any

$"??_C@_02HAOIJKIC@?$CFc?$AA@" = comdat any

$"??_C@_0GP@EOOLEAEI@?6?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DNEncryption?5complete@" = comdat any

$"??_C@_0CP@KFLJDBCD@?6?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DNDecryption?5Complete@" = comdat any

$"??_C@_01EEMJAFIK@?6?$AA@" = comdat any

$"??_C@_0BH@LENNACFI@result?$DN?$CFld?0time?$DN?$CFlf?5s?6?$AA@" = comdat any

@"?S@@3PAHA" = dso_local global [256 x i32] zeroinitializer, align 4
@"?T@@3PADA" = dso_local global [256 x i8] zeroinitializer, align 1
@"?Key@@3PAHA" = dso_local global [256 x i32] zeroinitializer, align 4
@"?KeyStream@@3PAHA" = dso_local global [65534 x i32] zeroinitializer, align 4
@"?PlainText@@3PADA" = dso_local global [65534 x i8] zeroinitializer, align 1
@"?CryptoText@@3PADA" = dso_local global [65534 x i8] zeroinitializer, align 1
@"?WordList@@3PBDB" = dso_local global i8* getelementptr inbounds ([63 x i8], [63 x i8]* @"??_C@_0DP@EFDPGBGM@ABCDEFGHIJKLMNOPQRSTUVWXYZabcdef@", i32 0, i32 0), align 4
@"??_C@_0DP@EFDPGBGM@ABCDEFGHIJKLMNOPQRSTUVWXYZabcdef@" = linkonce_odr dso_local unnamed_addr constant [63 x i8] c"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\00", comdat, align 1
@"??_C@_0ED@MCBCPBCB@?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DNStart?5encrypting?5cip@" = linkonce_odr dso_local unnamed_addr constant [67 x i8] c"============Start encrypting ciphertext============:\0A ciphertext\A3\BA\00", comdat, align 1
@"??_C@_02HAOIJKIC@?$CFc?$AA@" = linkonce_odr dso_local unnamed_addr constant [3 x i8] c"%c\00", comdat, align 1
@"??_C@_0GP@EOOLEAEI@?6?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DNEncryption?5complete@" = linkonce_odr dso_local unnamed_addr constant [111 x i8] c"\0A============Encryption completed============\0A============Start Decrypting ciphertext============\0A plaintext\A3\BA\00", comdat, align 1
@"??_C@_0CP@KFLJDBCD@?6?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DNDecryption?5Complete@" = linkonce_odr dso_local unnamed_addr constant [47 x i8] c"\0A============Decryption Completed============\0A\00", comdat, align 1
@"??_C@_01EEMJAFIK@?6?$AA@" = linkonce_odr dso_local unnamed_addr constant [2 x i8] c"\0A\00", comdat, align 1
@__const.main.text = private unnamed_addr constant [27 x i8] c"ASDFGHJKLQWERTYUIOPZXCVBNM\00", align 1
@"??_C@_0BH@LENNACFI@result?$DN?$CFld?0time?$DN?$CFlf?5s?6?$AA@" = linkonce_odr dso_local unnamed_addr constant [23 x i8] c"result=%ld,time=%lf s\0A\00", comdat, align 1
@Struct.RetValue = internal global %Struct.RetValue zeroinitializer

; Function Attrs: nounwind
declare dllimport void @srand(i32) #0

; Function Attrs: nounwind
declare dllimport i32 @rand() #0

; Function Attrs: nounwind
declare dllimport i64 @_time64(i64*) #0

; Function Attrs: noinline optnone sspstrong
define dso_local void @"?Encrypt@@YAXPAD@Z"(i8* %text) #1 {
entry:
  %text.addr = alloca i8*, align 4
  %textLength = alloca i32, align 4
  %plain_word = alloca i32, align 4
  %i = alloca i32, align 4
  %i5 = alloca i32, align 4
  %i16 = alloca i32, align 4
  %i29 = alloca i32, align 4
  store i8* %text, i8** %text.addr, align 4
  %0 = load i8*, i8** %text.addr, align 4
  %call = call i32 @strlen(i8* %0) #4
  store i32 %call, i32* %textLength, align 4
  %RetValuePtr = alloca i64, align 4
  br label %"entry.?init_S@@YAXXZ.Clone"

"entry.?init_S@@YAXXZ.Clone":                     ; preds = %entry
  %"i.?init_S@@YAXXZ.Clone" = alloca i32, align 4
  store i32 0, i32* %"i.?init_S@@YAXXZ.Clone", align 4
  br label %"for.cond.?init_S@@YAXXZ.Clone"

"for.cond.?init_S@@YAXXZ.Clone":                  ; preds = %"for.inc.?init_S@@YAXXZ.Clone", %"entry.?init_S@@YAXXZ.Clone"
  %1 = load i32, i32* %"i.?init_S@@YAXXZ.Clone", align 4
  %"cmp.?init_S@@YAXXZ.Clone" = icmp slt i32 %1, 256
  br i1 %"cmp.?init_S@@YAXXZ.Clone", label %"for.body.?init_S@@YAXXZ.Clone", label %"for.end.?init_S@@YAXXZ.Clone"

"for.body.?init_S@@YAXXZ.Clone":                  ; preds = %"for.cond.?init_S@@YAXXZ.Clone"
  %2 = load i32, i32* %"i.?init_S@@YAXXZ.Clone", align 4
  %3 = load i32, i32* %"i.?init_S@@YAXXZ.Clone", align 4
  %"arrayidx.?init_S@@YAXXZ.Clone" = getelementptr inbounds [256 x i32], [256 x i32]* @"?S@@3PAHA", i32 0, i32 %3
  store i32 %2, i32* %"arrayidx.?init_S@@YAXXZ.Clone", align 4
  br label %"for.inc.?init_S@@YAXXZ.Clone"

"for.inc.?init_S@@YAXXZ.Clone":                   ; preds = %"for.body.?init_S@@YAXXZ.Clone"
  %4 = load i32, i32* %"i.?init_S@@YAXXZ.Clone", align 4
  %"inc.?init_S@@YAXXZ.Clone" = add nsw i32 %4, 1
  store i32 %"inc.?init_S@@YAXXZ.Clone", i32* %"i.?init_S@@YAXXZ.Clone", align 4
  br label %"for.cond.?init_S@@YAXXZ.Clone"

"for.end.?init_S@@YAXXZ.Clone":                   ; preds = %"for.cond.?init_S@@YAXXZ.Clone"
  br label %entry.Split

entry.Split:                                      ; preds = %"for.end.?init_S@@YAXXZ.Clone"
  br label %"entry.?init_Key@@YAXXZ.Clone"

"entry.?init_Key@@YAXXZ.Clone":                   ; preds = %entry.Split
  %"index.?init_Key@@YAXXZ.Clone" = alloca i32, align 4
  %"keylen.?init_Key@@YAXXZ.Clone" = alloca i32, align 4
  %"i.?init_Key@@YAXXZ.Clone" = alloca i32, align 4
  %"d.?init_Key@@YAXXZ.Clone" = alloca i32, align 4
  %"i11.?init_Key@@YAXXZ.Clone" = alloca i32, align 4
  br label %"entry.?time@@YA_JPA_J@Z.Clone"

"entry.?time@@YA_JPA_J@Z.Clone":                  ; preds = %"entry.?init_Key@@YAXXZ.Clone"
  %"_Time.addr.?time@@YA_JPA_J@Z.Clone" = alloca i64*, align 4
  store i64* null, i64** %"_Time.addr.?time@@YA_JPA_J@Z.Clone", align 4
  %5 = load i64*, i64** %"_Time.addr.?time@@YA_JPA_J@Z.Clone", align 4
  %"call.?time@@YA_JPA_J@Z.Clone" = call i64 @_time64(i64* %5) #4
  store i64 %"call.?time@@YA_JPA_J@Z.Clone", i64* %RetValuePtr
  br label %"entry.?init_Key@@YAXXZ.Clone.Split"

"entry.?init_Key@@YAXXZ.Clone.Split":             ; preds = %"entry.?time@@YA_JPA_J@Z.Clone"
  %RetValue = load i64, i64* %RetValuePtr
  %"conv.?init_Key@@YAXXZ.Clone" = trunc i64 %RetValue to i32
  call void @srand(i32 %"conv.?init_Key@@YAXXZ.Clone") #4
  %"call1.?init_Key@@YAXXZ.Clone" = call i32 @rand() #4
  %"conv2.?init_Key@@YAXXZ.Clone" = sitofp i32 %"call1.?init_Key@@YAXXZ.Clone" to double
  %"div.?init_Key@@YAXXZ.Clone" = fdiv double %"conv2.?init_Key@@YAXXZ.Clone", 3.276700e+04
  %"mul.?init_Key@@YAXXZ.Clone" = fmul double %"div.?init_Key@@YAXXZ.Clone", 2.560000e+02
  %"conv3.?init_Key@@YAXXZ.Clone" = fptosi double %"mul.?init_Key@@YAXXZ.Clone" to i32
  store i32 %"conv3.?init_Key@@YAXXZ.Clone", i32* %"keylen.?init_Key@@YAXXZ.Clone", align 4
  store i32 0, i32* %"i.?init_Key@@YAXXZ.Clone", align 4
  br label %"for.cond.?init_Key@@YAXXZ.Clone"

"for.cond.?init_Key@@YAXXZ.Clone":                ; preds = %"for.inc.?init_Key@@YAXXZ.Clone", %"entry.?init_Key@@YAXXZ.Clone.Split"
  %6 = load i32, i32* %"i.?init_Key@@YAXXZ.Clone", align 4
  %7 = load i32, i32* %"keylen.?init_Key@@YAXXZ.Clone", align 4
  %"cmp.?init_Key@@YAXXZ.Clone" = icmp slt i32 %6, %7
  br i1 %"cmp.?init_Key@@YAXXZ.Clone", label %"for.body.?init_Key@@YAXXZ.Clone", label %"for.end.?init_Key@@YAXXZ.Clone"

"for.body.?init_Key@@YAXXZ.Clone":                ; preds = %"for.cond.?init_Key@@YAXXZ.Clone"
  %"call4.?init_Key@@YAXXZ.Clone" = call i32 @rand() #4
  %"conv5.?init_Key@@YAXXZ.Clone" = sitofp i32 %"call4.?init_Key@@YAXXZ.Clone" to double
  %"div6.?init_Key@@YAXXZ.Clone" = fdiv double %"conv5.?init_Key@@YAXXZ.Clone", 3.276700e+04
  %"mul7.?init_Key@@YAXXZ.Clone" = fmul double %"div6.?init_Key@@YAXXZ.Clone", 6.300000e+01
  %"conv8.?init_Key@@YAXXZ.Clone" = fptosi double %"mul7.?init_Key@@YAXXZ.Clone" to i32
  store i32 %"conv8.?init_Key@@YAXXZ.Clone", i32* %"index.?init_Key@@YAXXZ.Clone", align 4
  %8 = load i8*, i8** @"?WordList@@3PBDB", align 4
  %9 = load i32, i32* %"index.?init_Key@@YAXXZ.Clone", align 4
  %"arrayidx.?init_Key@@YAXXZ.Clone" = getelementptr inbounds i8, i8* %8, i32 %9
  %10 = load i8, i8* %"arrayidx.?init_Key@@YAXXZ.Clone", align 1
  %"conv9.?init_Key@@YAXXZ.Clone" = sext i8 %10 to i32
  %11 = load i32, i32* %"i.?init_Key@@YAXXZ.Clone", align 4
  %"arrayidx10.?init_Key@@YAXXZ.Clone" = getelementptr inbounds [256 x i32], [256 x i32]* @"?Key@@3PAHA", i32 0, i32 %11
  store i32 %"conv9.?init_Key@@YAXXZ.Clone", i32* %"arrayidx10.?init_Key@@YAXXZ.Clone", align 4
  br label %"for.inc.?init_Key@@YAXXZ.Clone"

"for.inc.?init_Key@@YAXXZ.Clone":                 ; preds = %"for.body.?init_Key@@YAXXZ.Clone"
  %12 = load i32, i32* %"i.?init_Key@@YAXXZ.Clone", align 4
  %"inc.?init_Key@@YAXXZ.Clone" = add nsw i32 %12, 1
  store i32 %"inc.?init_Key@@YAXXZ.Clone", i32* %"i.?init_Key@@YAXXZ.Clone", align 4
  br label %"for.cond.?init_Key@@YAXXZ.Clone"

"for.end.?init_Key@@YAXXZ.Clone":                 ; preds = %"for.cond.?init_Key@@YAXXZ.Clone"
  store i32 0, i32* %"i11.?init_Key@@YAXXZ.Clone", align 4
  br label %"for.cond12.?init_Key@@YAXXZ.Clone"

"for.cond12.?init_Key@@YAXXZ.Clone":              ; preds = %"for.inc18.?init_Key@@YAXXZ.Clone", %"for.end.?init_Key@@YAXXZ.Clone"
  %13 = load i32, i32* %"i11.?init_Key@@YAXXZ.Clone", align 4
  %"cmp13.?init_Key@@YAXXZ.Clone" = icmp slt i32 %13, 256
  br i1 %"cmp13.?init_Key@@YAXXZ.Clone", label %"for.body14.?init_Key@@YAXXZ.Clone", label %"for.end20.?init_Key@@YAXXZ.Clone"

"for.body14.?init_Key@@YAXXZ.Clone":              ; preds = %"for.cond12.?init_Key@@YAXXZ.Clone"
  %14 = load i32, i32* %"i11.?init_Key@@YAXXZ.Clone", align 4
  %15 = load i32, i32* %"keylen.?init_Key@@YAXXZ.Clone", align 4
  %"rem.?init_Key@@YAXXZ.Clone" = srem i32 %14, %15
  %"arrayidx15.?init_Key@@YAXXZ.Clone" = getelementptr inbounds [256 x i32], [256 x i32]* @"?Key@@3PAHA", i32 0, i32 %"rem.?init_Key@@YAXXZ.Clone"
  %16 = load i32, i32* %"arrayidx15.?init_Key@@YAXXZ.Clone", align 4
  %"conv16.?init_Key@@YAXXZ.Clone" = trunc i32 %16 to i8
  %17 = load i32, i32* %"i11.?init_Key@@YAXXZ.Clone", align 4
  %"arrayidx17.?init_Key@@YAXXZ.Clone" = getelementptr inbounds [256 x i8], [256 x i8]* @"?T@@3PADA", i32 0, i32 %17
  store i8 %"conv16.?init_Key@@YAXXZ.Clone", i8* %"arrayidx17.?init_Key@@YAXXZ.Clone", align 1
  br label %"for.inc18.?init_Key@@YAXXZ.Clone"

"for.inc18.?init_Key@@YAXXZ.Clone":               ; preds = %"for.body14.?init_Key@@YAXXZ.Clone"
  %18 = load i32, i32* %"i11.?init_Key@@YAXXZ.Clone", align 4
  %"inc19.?init_Key@@YAXXZ.Clone" = add nsw i32 %18, 1
  store i32 %"inc19.?init_Key@@YAXXZ.Clone", i32* %"i11.?init_Key@@YAXXZ.Clone", align 4
  br label %"for.cond12.?init_Key@@YAXXZ.Clone"

"for.end20.?init_Key@@YAXXZ.Clone":               ; preds = %"for.cond12.?init_Key@@YAXXZ.Clone"
  br label %entry.Split.Split

entry.Split.Split:                                ; preds = %"for.end20.?init_Key@@YAXXZ.Clone"
  br label %"entry.?permute_S@@YAXXZ.Clone"

"entry.?permute_S@@YAXXZ.Clone":                  ; preds = %entry.Split.Split
  %"temp.?permute_S@@YAXXZ.Clone" = alloca i32, align 4
  %"j.?permute_S@@YAXXZ.Clone" = alloca i32, align 4
  %"i.?permute_S@@YAXXZ.Clone" = alloca i32, align 4
  store i32 0, i32* %"j.?permute_S@@YAXXZ.Clone", align 4
  store i32 0, i32* %"i.?permute_S@@YAXXZ.Clone", align 4
  br label %"for.cond.?permute_S@@YAXXZ.Clone"

"for.cond.?permute_S@@YAXXZ.Clone":               ; preds = %"for.inc.?permute_S@@YAXXZ.Clone", %"entry.?permute_S@@YAXXZ.Clone"
  %19 = load i32, i32* %"i.?permute_S@@YAXXZ.Clone", align 4
  %"cmp.?permute_S@@YAXXZ.Clone" = icmp slt i32 %19, 256
  br i1 %"cmp.?permute_S@@YAXXZ.Clone", label %"for.body.?permute_S@@YAXXZ.Clone", label %"for.end.?permute_S@@YAXXZ.Clone"

"for.body.?permute_S@@YAXXZ.Clone":               ; preds = %"for.cond.?permute_S@@YAXXZ.Clone"
  %20 = load i32, i32* %"j.?permute_S@@YAXXZ.Clone", align 4
  %21 = load i32, i32* %"i.?permute_S@@YAXXZ.Clone", align 4
  %"arrayidx.?permute_S@@YAXXZ.Clone" = getelementptr inbounds [256 x i32], [256 x i32]* @"?S@@3PAHA", i32 0, i32 %21
  %22 = load i32, i32* %"arrayidx.?permute_S@@YAXXZ.Clone", align 4
  %"add.?permute_S@@YAXXZ.Clone" = add nsw i32 %20, %22
  %23 = load i32, i32* %"i.?permute_S@@YAXXZ.Clone", align 4
  %"arrayidx1.?permute_S@@YAXXZ.Clone" = getelementptr inbounds [256 x i8], [256 x i8]* @"?T@@3PADA", i32 0, i32 %23
  %24 = load i8, i8* %"arrayidx1.?permute_S@@YAXXZ.Clone", align 1
  %"conv.?permute_S@@YAXXZ.Clone" = sext i8 %24 to i32
  %"add2.?permute_S@@YAXXZ.Clone" = add nsw i32 %"add.?permute_S@@YAXXZ.Clone", %"conv.?permute_S@@YAXXZ.Clone"
  %"rem.?permute_S@@YAXXZ.Clone" = srem i32 %"add2.?permute_S@@YAXXZ.Clone", 256
  store i32 %"rem.?permute_S@@YAXXZ.Clone", i32* %"j.?permute_S@@YAXXZ.Clone", align 4
  %25 = load i32, i32* %"i.?permute_S@@YAXXZ.Clone", align 4
  %"arrayidx3.?permute_S@@YAXXZ.Clone" = getelementptr inbounds [256 x i32], [256 x i32]* @"?S@@3PAHA", i32 0, i32 %25
  %26 = load i32, i32* %"arrayidx3.?permute_S@@YAXXZ.Clone", align 4
  store i32 %26, i32* %"temp.?permute_S@@YAXXZ.Clone", align 4
  %27 = load i32, i32* %"j.?permute_S@@YAXXZ.Clone", align 4
  %"arrayidx4.?permute_S@@YAXXZ.Clone" = getelementptr inbounds [256 x i32], [256 x i32]* @"?S@@3PAHA", i32 0, i32 %27
  %28 = load i32, i32* %"arrayidx4.?permute_S@@YAXXZ.Clone", align 4
  %29 = load i32, i32* %"i.?permute_S@@YAXXZ.Clone", align 4
  %"arrayidx5.?permute_S@@YAXXZ.Clone" = getelementptr inbounds [256 x i32], [256 x i32]* @"?S@@3PAHA", i32 0, i32 %29
  store i32 %28, i32* %"arrayidx5.?permute_S@@YAXXZ.Clone", align 4
  %30 = load i32, i32* %"temp.?permute_S@@YAXXZ.Clone", align 4
  %31 = load i32, i32* %"j.?permute_S@@YAXXZ.Clone", align 4
  %"arrayidx6.?permute_S@@YAXXZ.Clone" = getelementptr inbounds [256 x i32], [256 x i32]* @"?S@@3PAHA", i32 0, i32 %31
  store i32 %30, i32* %"arrayidx6.?permute_S@@YAXXZ.Clone", align 4
  br label %"for.inc.?permute_S@@YAXXZ.Clone"

"for.inc.?permute_S@@YAXXZ.Clone":                ; preds = %"for.body.?permute_S@@YAXXZ.Clone"
  %32 = load i32, i32* %"i.?permute_S@@YAXXZ.Clone", align 4
  %"inc.?permute_S@@YAXXZ.Clone" = add nsw i32 %32, 1
  store i32 %"inc.?permute_S@@YAXXZ.Clone", i32* %"i.?permute_S@@YAXXZ.Clone", align 4
  br label %"for.cond.?permute_S@@YAXXZ.Clone"

"for.end.?permute_S@@YAXXZ.Clone":                ; preds = %"for.cond.?permute_S@@YAXXZ.Clone"
  br label %entry.Split.Split.Split

entry.Split.Split.Split:                          ; preds = %"for.end.?permute_S@@YAXXZ.Clone"
  %33 = load i32, i32* %textLength, align 4
  %34 = load i8*, i8** %text.addr, align 4
  br label %"entry.?create_key_stream@@YAXPADH@Z.Clone"

"entry.?create_key_stream@@YAXPADH@Z.Clone":      ; preds = %entry.Split.Split.Split
  %"textLength.addr.?create_key_stream@@YAXPADH@Z.Clone" = alloca i32, align 4
  %"text.addr.?create_key_stream@@YAXPADH@Z.Clone" = alloca i8*, align 4
  %"i.?create_key_stream@@YAXPADH@Z.Clone" = alloca i32, align 4
  %"j.?create_key_stream@@YAXPADH@Z.Clone" = alloca i32, align 4
  %"temp.?create_key_stream@@YAXPADH@Z.Clone" = alloca i32, align 4
  %"t.?create_key_stream@@YAXPADH@Z.Clone" = alloca i32, align 4
  %"k.?create_key_stream@@YAXPADH@Z.Clone" = alloca i32, align 4
  %"index.?create_key_stream@@YAXPADH@Z.Clone" = alloca i32, align 4
  store i32 %33, i32* %"textLength.addr.?create_key_stream@@YAXPADH@Z.Clone", align 4
  store i8* %34, i8** %"text.addr.?create_key_stream@@YAXPADH@Z.Clone", align 4
  store i32 0, i32* %"index.?create_key_stream@@YAXPADH@Z.Clone", align 4
  store i32 0, i32* %"j.?create_key_stream@@YAXPADH@Z.Clone", align 4
  store i32 0, i32* %"i.?create_key_stream@@YAXPADH@Z.Clone", align 4
  br label %"while.cond.?create_key_stream@@YAXPADH@Z.Clone"

"while.cond.?create_key_stream@@YAXPADH@Z.Clone": ; preds = %"while.body.?create_key_stream@@YAXPADH@Z.Clone", %"entry.?create_key_stream@@YAXPADH@Z.Clone"
  %35 = load i32, i32* %"textLength.addr.?create_key_stream@@YAXPADH@Z.Clone", align 4
  %"dec.?create_key_stream@@YAXPADH@Z.Clone" = add nsw i32 %35, -1
  store i32 %"dec.?create_key_stream@@YAXPADH@Z.Clone", i32* %"textLength.addr.?create_key_stream@@YAXPADH@Z.Clone", align 4
  %"tobool.?create_key_stream@@YAXPADH@Z.Clone" = icmp ne i32 %35, 0
  br i1 %"tobool.?create_key_stream@@YAXPADH@Z.Clone", label %"while.body.?create_key_stream@@YAXPADH@Z.Clone", label %"while.end.?create_key_stream@@YAXPADH@Z.Clone"

"while.body.?create_key_stream@@YAXPADH@Z.Clone": ; preds = %"while.cond.?create_key_stream@@YAXPADH@Z.Clone"
  %36 = load i32, i32* %"i.?create_key_stream@@YAXPADH@Z.Clone", align 4
  %"add.?create_key_stream@@YAXPADH@Z.Clone" = add nsw i32 %36, 1
  %"rem.?create_key_stream@@YAXPADH@Z.Clone" = srem i32 %"add.?create_key_stream@@YAXPADH@Z.Clone", 256
  store i32 %"rem.?create_key_stream@@YAXPADH@Z.Clone", i32* %"i.?create_key_stream@@YAXPADH@Z.Clone", align 4
  %37 = load i32, i32* %"j.?create_key_stream@@YAXPADH@Z.Clone", align 4
  %38 = load i32, i32* %"i.?create_key_stream@@YAXPADH@Z.Clone", align 4
  %"arrayidx.?create_key_stream@@YAXPADH@Z.Clone" = getelementptr inbounds [256 x i32], [256 x i32]* @"?S@@3PAHA", i32 0, i32 %38
  %39 = load i32, i32* %"arrayidx.?create_key_stream@@YAXPADH@Z.Clone", align 4
  %"add1.?create_key_stream@@YAXPADH@Z.Clone" = add nsw i32 %37, %39
  %"rem2.?create_key_stream@@YAXPADH@Z.Clone" = srem i32 %"add1.?create_key_stream@@YAXPADH@Z.Clone", 256
  store i32 %"rem2.?create_key_stream@@YAXPADH@Z.Clone", i32* %"j.?create_key_stream@@YAXPADH@Z.Clone", align 4
  %40 = load i32, i32* %"i.?create_key_stream@@YAXPADH@Z.Clone", align 4
  %"arrayidx3.?create_key_stream@@YAXPADH@Z.Clone" = getelementptr inbounds [256 x i32], [256 x i32]* @"?S@@3PAHA", i32 0, i32 %40
  %41 = load i32, i32* %"arrayidx3.?create_key_stream@@YAXPADH@Z.Clone", align 4
  store i32 %41, i32* %"temp.?create_key_stream@@YAXPADH@Z.Clone", align 4
  %42 = load i32, i32* %"j.?create_key_stream@@YAXPADH@Z.Clone", align 4
  %"arrayidx4.?create_key_stream@@YAXPADH@Z.Clone" = getelementptr inbounds [256 x i32], [256 x i32]* @"?S@@3PAHA", i32 0, i32 %42
  %43 = load i32, i32* %"arrayidx4.?create_key_stream@@YAXPADH@Z.Clone", align 4
  %44 = load i32, i32* %"i.?create_key_stream@@YAXPADH@Z.Clone", align 4
  %"arrayidx5.?create_key_stream@@YAXPADH@Z.Clone" = getelementptr inbounds [256 x i32], [256 x i32]* @"?S@@3PAHA", i32 0, i32 %44
  store i32 %43, i32* %"arrayidx5.?create_key_stream@@YAXPADH@Z.Clone", align 4
  %45 = load i32, i32* %"temp.?create_key_stream@@YAXPADH@Z.Clone", align 4
  %46 = load i32, i32* %"j.?create_key_stream@@YAXPADH@Z.Clone", align 4
  %"arrayidx6.?create_key_stream@@YAXPADH@Z.Clone" = getelementptr inbounds [256 x i32], [256 x i32]* @"?S@@3PAHA", i32 0, i32 %46
  store i32 %45, i32* %"arrayidx6.?create_key_stream@@YAXPADH@Z.Clone", align 4
  %47 = load i32, i32* %"i.?create_key_stream@@YAXPADH@Z.Clone", align 4
  %"arrayidx7.?create_key_stream@@YAXPADH@Z.Clone" = getelementptr inbounds [256 x i32], [256 x i32]* @"?S@@3PAHA", i32 0, i32 %47
  %48 = load i32, i32* %"arrayidx7.?create_key_stream@@YAXPADH@Z.Clone", align 4
  %49 = load i32, i32* %"j.?create_key_stream@@YAXPADH@Z.Clone", align 4
  %"arrayidx8.?create_key_stream@@YAXPADH@Z.Clone" = getelementptr inbounds [256 x i32], [256 x i32]* @"?S@@3PAHA", i32 0, i32 %49
  %50 = load i32, i32* %"arrayidx8.?create_key_stream@@YAXPADH@Z.Clone", align 4
  %"add9.?create_key_stream@@YAXPADH@Z.Clone" = add nsw i32 %48, %50
  %"rem10.?create_key_stream@@YAXPADH@Z.Clone" = srem i32 %"add9.?create_key_stream@@YAXPADH@Z.Clone", 256
  store i32 %"rem10.?create_key_stream@@YAXPADH@Z.Clone", i32* %"t.?create_key_stream@@YAXPADH@Z.Clone", align 4
  %51 = load i32, i32* %"t.?create_key_stream@@YAXPADH@Z.Clone", align 4
  %"arrayidx11.?create_key_stream@@YAXPADH@Z.Clone" = getelementptr inbounds [256 x i32], [256 x i32]* @"?S@@3PAHA", i32 0, i32 %51
  %52 = load i32, i32* %"arrayidx11.?create_key_stream@@YAXPADH@Z.Clone", align 4
  %53 = load i32, i32* %"index.?create_key_stream@@YAXPADH@Z.Clone", align 4
  %"arrayidx12.?create_key_stream@@YAXPADH@Z.Clone" = getelementptr inbounds [65534 x i32], [65534 x i32]* @"?KeyStream@@3PAHA", i32 0, i32 %53
  store i32 %52, i32* %"arrayidx12.?create_key_stream@@YAXPADH@Z.Clone", align 4
  %54 = load i32, i32* %"index.?create_key_stream@@YAXPADH@Z.Clone", align 4
  %"inc.?create_key_stream@@YAXPADH@Z.Clone" = add nsw i32 %54, 1
  store i32 %"inc.?create_key_stream@@YAXPADH@Z.Clone", i32* %"index.?create_key_stream@@YAXPADH@Z.Clone", align 4
  br label %"while.cond.?create_key_stream@@YAXPADH@Z.Clone"

"while.end.?create_key_stream@@YAXPADH@Z.Clone":  ; preds = %"while.cond.?create_key_stream@@YAXPADH@Z.Clone"
  br label %entry.Split.Split.Split.Split

entry.Split.Split.Split.Split:                    ; preds = %"while.end.?create_key_stream@@YAXPADH@Z.Clone"
  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @"??_C@_0ED@MCBCPBCB@?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DNStart?5encrypting?5cip@", i32 0, i32 0)) #4
  store i32 0, i32* %i, align 4
  br label %CallOutFuncBB

CallOutFuncBB:                                    ; preds = %entry.Split.Split.Split.Split
  call void @for.cond.OutLineFunc(i32* %i, i32* %textLength, i8** %text.addr, i32* %i5)
  %55 = getelementptr inbounds %Struct.RetValue, %Struct.RetValue* @Struct.RetValue, i32 0, i32 0
  %56 = load i32*, i32** %55, align 4
  %57 = load i32, i32* %56, align 4
  store i32 %57, i32* %i
  %58 = getelementptr inbounds %Struct.RetValue, %Struct.RetValue* @Struct.RetValue, i32 0, i32 1
  %59 = load i32*, i32** %58, align 4
  %60 = load i32, i32* %59, align 4
  store i32 %60, i32* %i5
  br label %for.cond6

for.cond6:                                        ; preds = %CallOutFuncBB, %for.inc12
  %61 = load i32, i32* %i5, align 4
  %62 = load i32, i32* %textLength, align 4
  %cmp7 = icmp slt i32 %61, %62
  br i1 %cmp7, label %for.body8, label %for.end14

for.body8:                                        ; preds = %for.cond6
  %63 = load i32, i32* %i5, align 4
  %arrayidx9 = getelementptr inbounds [65534 x i8], [65534 x i8]* @"?CryptoText@@3PADA", i32 0, i32 %63
  %64 = load i8, i8* %arrayidx9, align 1
  %conv10 = sext i8 %64 to i32
  %call11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @"??_C@_02HAOIJKIC@?$CFc?$AA@", i32 0, i32 0), i32 %conv10) #4
  br label %for.inc12

for.inc12:                                        ; preds = %for.body8
  %65 = load i32, i32* %i5, align 4
  %inc13 = add nsw i32 %65, 1
  store i32 %inc13, i32* %i5, align 4
  br label %for.cond6

for.end14:                                        ; preds = %for.cond6
  %call15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([111 x i8], [111 x i8]* @"??_C@_0GP@EOOLEAEI@?6?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DNEncryption?5complete@", i32 0, i32 0)) #4
  store i32 0, i32* %i16, align 4
  br label %for.cond17

for.cond17:                                       ; preds = %for.inc26, %for.end14
  %66 = load i32, i32* %i16, align 4
  %67 = load i32, i32* %textLength, align 4
  %cmp18 = icmp slt i32 %66, %67
  br i1 %cmp18, label %for.body19, label %for.end28

for.body19:                                       ; preds = %for.cond17
  %68 = load i32, i32* %i16, align 4
  %arrayidx20 = getelementptr inbounds [65534 x i32], [65534 x i32]* @"?KeyStream@@3PAHA", i32 0, i32 %68
  %69 = load i32, i32* %arrayidx20, align 4
  %70 = load i32, i32* %i16, align 4
  %arrayidx21 = getelementptr inbounds [65534 x i8], [65534 x i8]* @"?CryptoText@@3PADA", i32 0, i32 %70
  %71 = load i8, i8* %arrayidx21, align 1
  %conv22 = sext i8 %71 to i32
  %xor23 = xor i32 %69, %conv22
  %conv24 = trunc i32 %xor23 to i8
  %72 = load i32, i32* %i16, align 4
  %arrayidx25 = getelementptr inbounds [65534 x i8], [65534 x i8]* @"?PlainText@@3PADA", i32 0, i32 %72
  store i8 %conv24, i8* %arrayidx25, align 1
  br label %for.inc26

for.inc26:                                        ; preds = %for.body19
  %73 = load i32, i32* %i16, align 4
  %inc27 = add nsw i32 %73, 1
  store i32 %inc27, i32* %i16, align 4
  br label %for.cond17

for.end28:                                        ; preds = %for.cond17
  store i32 0, i32* %i29, align 4
  br label %for.cond30

for.cond30:                                       ; preds = %for.inc36, %for.end28
  %74 = load i32, i32* %i29, align 4
  %75 = load i32, i32* %textLength, align 4
  %cmp31 = icmp slt i32 %74, %75
  br i1 %cmp31, label %for.body32, label %for.end38

for.body32:                                       ; preds = %for.cond30
  %76 = load i32, i32* %i29, align 4
  %arrayidx33 = getelementptr inbounds [65534 x i8], [65534 x i8]* @"?PlainText@@3PADA", i32 0, i32 %76
  %77 = load i8, i8* %arrayidx33, align 1
  %conv34 = sext i8 %77 to i32
  %call35 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @"??_C@_02HAOIJKIC@?$CFc?$AA@", i32 0, i32 0), i32 %conv34) #4
  br label %for.inc36

for.inc36:                                        ; preds = %for.body32
  %78 = load i32, i32* %i29, align 4
  %inc37 = add nsw i32 %78, 1
  store i32 %inc37, i32* %i29, align 4
  br label %for.cond30

for.end38:                                        ; preds = %for.cond30
  %call39 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @"??_C@_0CP@KFLJDBCD@?6?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DNDecryption?5Complete@", i32 0, i32 0)) #4
  %call40 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"??_C@_01EEMJAFIK@?6?$AA@", i32 0, i32 0)) #4
  ret void
}

; Function Attrs: nounwind
declare dso_local i32 @strlen(i8*) #0

; Function Attrs: nounwind
declare dllimport i32 @printf(i8*, ...) #0

; Function Attrs: noinline norecurse optnone sspstrong
define dso_local i32 @main() #2 {
entry:
  %retval = alloca i32, align 4
  %t = alloca i32, align 4
  %sum = alloca i32, align 4
  %i = alloca i32, align 4
  %text = alloca [27 x i8], align 1
  store i32 0, i32* %retval, align 4
  store i32 0, i32* %sum, align 4
  %call = call i32 @clock() #4
  store i32 %call, i32* %t, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %0, 100
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = bitcast [27 x i8]* %text to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %1, i8* align 1 getelementptr inbounds ([27 x i8], [27 x i8]* @__const.main.text, i32 0, i32 0), i32 27, i1 false)
  %arraydecay = getelementptr inbounds [27 x i8], [27 x i8]* %text, i32 0, i32 0
  call void @"?Encrypt@@YAXPAD@Z"(i8* %arraydecay)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %2 = load i32, i32* %i, align 4
  %inc = add nsw i32 %2, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call1 = call i32 @clock() #4
  %3 = load i32, i32* %t, align 4
  %sub = sub nsw i32 %call1, %3
  store i32 %sub, i32* %t, align 4
  %4 = load i32, i32* %t, align 4
  %conv = sitofp i32 %4 to float
  %div = fdiv float %conv, 1.000000e+03
  %conv2 = fpext float %div to double
  %5 = load i32, i32* %sum, align 4
  %call3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @"??_C@_0BH@LENNACFI@result?$DN?$CFld?0time?$DN?$CFlf?5s?6?$AA@", i32 0, i32 0), i32 %5, double %conv2) #4
  ret i32 0
}

; Function Attrs: nounwind
declare dllimport i32 @clock() #0

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* nocapture writeonly, i8* nocapture readonly, i32, i1) #3

define void @for.cond.OutLineFunc(i32* %OutFuncArg, i32* %OutFuncArg1, i8** %OutFuncArg2, i32* %OutFuncArg3) {
entry:
  %OutFuncArg.addr = alloca i32*, align 4
  store i32* %OutFuncArg, i32** %OutFuncArg.addr, align 4
  %i.Clone = load i32*, i32** %OutFuncArg.addr, align 4
  %OutFuncArg1.addr = alloca i32*, align 4
  store i32* %OutFuncArg1, i32** %OutFuncArg1.addr, align 4
  %textLength.Clone = load i32*, i32** %OutFuncArg1.addr, align 4
  %OutFuncArg2.addr = alloca i8**, align 4
  store i8** %OutFuncArg2, i8*** %OutFuncArg2.addr, align 4
  %text.addr.Clone = load i8**, i8*** %OutFuncArg2.addr, align 4
  %OutFuncArg3.addr = alloca i32*, align 4
  store i32* %OutFuncArg3, i32** %OutFuncArg3.addr, align 4
  %i5.Clone = load i32*, i32** %OutFuncArg3.addr, align 4
  br label %for.cond.Clone

for.cond.Clone:                                   ; preds = %entry, %for.inc.Clone
  %0 = load i32, i32* %i.Clone, align 4
  %1 = load i32, i32* %textLength.Clone, align 4
  %cmp.Clone = icmp slt i32 %0, %1
  br i1 %cmp.Clone, label %for.body.Clone, label %for.end.Clone

for.body.Clone:                                   ; preds = %for.cond.Clone
  %2 = load i32, i32* %i.Clone, align 4
  %arrayidx.Clone = getelementptr inbounds [65534 x i32], [65534 x i32]* @"?KeyStream@@3PAHA", i32 0, i32 %2
  %3 = load i32, i32* %arrayidx.Clone, align 4
  %4 = load i8*, i8** %text.addr.Clone, align 4
  %5 = load i32, i32* %i.Clone, align 4
  %arrayidx2.Clone = getelementptr inbounds i8, i8* %4, i32 %5
  %6 = load i8, i8* %arrayidx2.Clone, align 1
  %conv.Clone = sext i8 %6 to i32
  %xor.Clone = xor i32 %3, %conv.Clone
  %conv3.Clone = trunc i32 %xor.Clone to i8
  %7 = load i32, i32* %i.Clone, align 4
  %arrayidx4.Clone = getelementptr inbounds [65534 x i8], [65534 x i8]* @"?CryptoText@@3PADA", i32 0, i32 %7
  store i8 %conv3.Clone, i8* %arrayidx4.Clone, align 1
  br label %for.inc.Clone

for.inc.Clone:                                    ; preds = %for.body.Clone
  %8 = load i32, i32* %i.Clone, align 4
  %inc.Clone = add nsw i32 %8, 1
  store i32 %inc.Clone, i32* %i.Clone, align 4
  br label %for.cond.Clone

for.end.Clone:                                    ; preds = %for.cond.Clone
  store i32 0, i32* %i5.Clone, align 4
  br label %OutFuncRetBB

OutFuncRetBB:                                     ; preds = %for.end.Clone
  %9 = getelementptr inbounds %Struct.RetValue, %Struct.RetValue* @Struct.RetValue, i32 0, i32 0
  store i32* %i.Clone, i32** %9, align 4
  %10 = getelementptr inbounds %Struct.RetValue, %Struct.RetValue* @Struct.RetValue, i32 0, i32 1
  store i32* %i5.Clone, i32** %10, align 4
  ret void
}

attributes #0 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="pentium4" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noinline optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="pentium4" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noinline norecurse optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="pentium4" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind }

!llvm.linker.options = !{!0, !1, !2, !3, !4}
!llvm.ident = !{!5}
!llvm.module.flags = !{!6, !7}

!0 = !{!"/DEFAULTLIB:msvcrtd.lib"}
!1 = !{!"/DEFAULTLIB:oldnames.lib"}
!2 = !{!"/FAILIFMISMATCH:\22_MSC_VER=1600\22"}
!3 = !{!"/FAILIFMISMATCH:\22_ITERATOR_DEBUG_LEVEL=2\22"}
!4 = !{!"/DEFAULTLIB:msvcprtd.lib"}
!5 = !{!"Obfuscator-LLVM clang version 8.0.1 (tags/RELEASE_801/final) (based on Obfuscator-LLVM 8.0.1)"}
!6 = !{i32 1, !"NumRegisterParameters", i32 0}
!7 = !{i32 1, !"wchar_size", i32 2}
